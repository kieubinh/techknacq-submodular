{
  "info": {
    "authors": [
      "Szuting Yi",
      "Martha Palmer"
    ],
    "book": "Conference on Computational Natural Language Learning CoNLL",
    "id": "acl-W05-0639",
    "title": "The Integration of Syntactic Parsing and Semantic Role Labeling",
    "url": "https://aclweb.org/anthology/W05-0639",
    "year": 2005
  },
  "references": [
    "acl-A00-2018",
    "acl-C04-1197",
    "acl-H94-1020",
    "acl-J05-1004",
    "acl-P02-1031",
    "acl-W04-3212"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper describes a system for the CoNLL-2005 Shared Task on Semantic Role Labeling.",
        "We trained two parsers with the training corpus in which the semantic argument information is attached to the constituent labels, we then used the resulting parse trees as the input of the pipelined SRL system.",
        "We present our results of combining the output of various SRL systems using different parsers."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Semantic parsing, identifying and classifying the semantic entities in context and the relations between them, potentially has great impact on its downstream applications, such as text summarization, question answering, and machine translation.",
        "As a result, semantic parsing could be an important intermediate step for natural language comprehension.",
        "In this paper, we investigate the task of Semantic Role Labeling (SRL): Given a verb in a sentence, the goal is to locate the constituents which are arguments of the verb, and assign them appropriate semantic roles, such as, Agent, Patient, and Theme.",
        "Previous SRL systems have explored the effects of using different lexical features, and experimented on different machine learning algorithms.",
        "(Gildea and Palmer, 2002; Pradhan et al., 2005; Punyakanok et al., 2004) However, these SRL systems generally extract features from sentences processed by a syntactic parser or other shallow parsing components, such as a chunker and a clause identifier.",
        "As a result, the performance of the SRL systems relies heavily on those syntax-analysis tools.",
        "In order to improve the fundamental performance of an SRL system, we trained parsers with training data containing not only syntactic constituent information but also semantic argument information.",
        "The new parsers generate more correct constituents than that trained on pure syntactic information.",
        "Because the new parser generate different constituents than a pure syntactic parser, we also explore the possibility of combining the output of several parsers with the help of a voting post-processing component.",
        "This paper is organized as follows: Section 2 demonstrates the components of our SRL system.",
        "We elaborate the importance of training a new parser and outline our approach in Section 3 and Section 4.",
        "Finally, Section 5 reports and discusses the results."
      ]
    },
    {
      "heading": "2 Semantic Role Labeling: the Architecture",
      "text": [
        "Our SRL system has 5 phases: Parsing, Pruning, Argument Identification, Argument Classification, and Post Processing.",
        "The Argument Identification and Classification components are trained with Sec 02- 21 of the Penn Treebank corpus."
      ]
    },
    {
      "heading": "2.1 Parsing",
      "text": [
        "Previous SRL systems usually use a pure syntactic parser, such as (Charniak, 2000; Collins, 1999), to retrieve possible constituents.",
        "Once the boundary of a constituent is defined, there is no way to change it in later phases.",
        "Therefore the quality of the syntactic parser has a major impact on the final per",
        "formance of an SRL system, and the percentage of correct constituents that is generated by the syntactic parser also defines the recall upper bound of an SRL system.",
        "In order to attack this problem, in addition to Charniak’s parser (Charniak, 2000), our system combine two parser which are trained on both syntactic constituent information and semantic argument information.",
        "(See Section 3)"
      ]
    },
    {
      "heading": "2.2 Pruning",
      "text": [
        "Given a parse tree, a pruning component filters out the constituents which are unlikely to be semantic arguments in order to facilitate the training of the Argument Identification component.",
        "Our system uses the heuristic rules introduced by (Xue and Palmer, 2004).",
        "The heuristics first spot the verb and then extract all the sister nodes along the verb spine of the parse tree.",
        "We expand the coverage by also extracting all the immediate children of an S, ADVP, PP and NP node.",
        "This stage generally prunes off about 80% of the constituents given by a parser.",
        "For our newly trained parsers, we also extract constituents which have a secondary constituent label indicating the constituent in question is an argument."
      ]
    },
    {
      "heading": "2.3 Argument Identification and Classification",
      "text": [
        "We have as our Argument Identification component a binary maximum-entropy classifier to determine whether a constituent is an argument or not.",
        "If a constituent is tagged as an argument, the Argument Classification component, which is a multi-class maximum-entropy classifier, would assign it a semantic role.",
        "The implementation of both the Argument Identification and Classification components makes use of the Mallet package1 .",
        "The lexical features we use to train these two components are taken from (Xue and Palmer, 2004).",
        "We trained the Argument Identification component with the following single features: the path from the constituent to the verb, the head word of the constituent and its POS tag, and the distance between the verb and the constituent, and feature combinations: the verb and the phrasal type of the constituent, the verb and the head word of the constituent.",
        "If the parent node of the constituent is a PP node, then we also include the head word of the PP",
        "node and the feature combination of the verb and the head word of the PP node.",
        "In addition to the features listed above, the Argument Classification component also contains the following features: the verb, the first and the last content word of the constituent, the phrasal type of the left sibling and the parent node, voice (passive or active), position of the constituent relative to the verb, the subcategorization frame, and the syntactic frame which describes the sequential pattern of the noun phrases and the verb in the sentence."
      ]
    },
    {
      "heading": "2.4 Post Processing",
      "text": [
        "The post processing component merges adjacent discontinuous arguments and marks the R-arguments based on the content word and phrase type of the argument.",
        "Also it filters out arguments according to the following constraints:",
        "1.",
        "There are no overlapping arguments.",
        "2.",
        "There are no repeating core arguments.",
        "In order to combine the different systems, we also include a voting scheme.",
        "The algorithm is straightforward: Suppose there are N participating systems, we pick arguments with N votes, N-1 votes ..., and finally 1 vote.",
        "The way to break a tie is based on the confidence level of the argument given by the system.",
        "Whenever we pick an argument, we need to check whether this argument conflicts with previously selected arguments based on the constraints described above."
      ]
    },
    {
      "heading": "3 Training a Parser with Semantic Argument Information",
      "text": [
        "A good start is always important, especially for a successful SRL system.",
        "Instead of passively accepting candidate constituents from the upstream syntactic parser, an SRL system needs to interact with the parser in order to obtain improved performance.",
        "This motivated our first attempt which is to integrate syntactic parsing and semantic parsing as a single step, and hopefully as a result we would be able to discard the SRL pipeline.",
        "The idea is to augment the Penn Treebank (Marcus et al., 1994) constituent labels with the semantic role labels from the Prop-Bank (Palmer et al., 2005), and generate a rich training corpus.",
        "For example, if an NP is also an ar",
        "gument ARG0 of a verb in the given sentence, we change the constituent label NP into NP-ARG0.",
        "A parser therefore is trained on this new corpus and should be able to serve as an SRL system at the same time as predicting a parse.",
        "However, this ideal approach is not feasible.",
        "Given the fact that there are many different semantic role labels and the same constituent can be different arguments of different verbs in the same sentence, the number of constituent labels will soon grow out of control and make the parser training computationally infeasible.",
        "Not to mention that anchor verb information has not yet been added to the constituent label, and general data sparseness.",
        "As a compromise, we decided to integrate only Argument Identification with syntactic parsing.",
        "We generated the training corpus by simply marking the constituents which are also semantic arguments."
      ]
    },
    {
      "heading": "4 Parsing Experiments",
      "text": [
        "We trained a maximum-entropy parser based on (Ratnaparkhi, 1999) using the OpenNLP package 2.",
        "We started our experiments with this specific parsing implementation because of its excellent flexibility that allows us to test different features.",
        "Besides, this parser contains four clear parse tree building stages: TAG, CHUNK, BUILD, and CHECK.",
        "This parsing structure offers us an isolated working environment for each stage that helps us confine necessary implementation modifications and trace down implementation errors."
      ]
    },
    {
      "heading": "4.1 Data Preparation",
      "text": [
        "Following standard practice, we use Sec 02-21 of the Penn Treebank and the PropBank as our training corpus.",
        "The constituent labels defined in the Penn Treebank consist of a primary label and several secondary labels.",
        "A primary label represents the major syntactic function carried by the constituent, for instance, NP indicates a noun phrase and PP indicates a prepositional phrase.",
        "A secondary label, starting with ”-”, represents either a grammatical function of a constituent or a semantic function of an adjunct.",
        "For example, NP-SBJ means the noun phrase is a surface subject of the sentence; PP-LOC means the prepositional phrase is a location.",
        "Although the sec",
        "ondary labels give us much to encourage information, because of data sparseness problem and training efficiency, we stripped off all the secondary labels from the Penn Treebank.",
        "After stripping off the secondary labels from the Penn Treebank, we augment the constituent labels with the semantic argument information from the PropBank.",
        "We adopted four different labels, -AN, -ANC, -AM, and -AMC.",
        "If the constituent in the Penn Treebank is a core argument, which means the constituent has one of the labels of ARG0-5 and ARGA in the PropBank, we attach AN to the constituent label.",
        "The label -ANC means the constituent is a discontinuous core argument.",
        "Similarly, AM indicates an adjunct-like argument, ARGM, and - AMC indicates a discontinuous ARM.",
        "For example, the sentence from Sec 02, [ARG0 The luxury auto maker] [ARGM-TMP last year] sold [ARG1 1,214 cars] [ARGM-LOC in the U.S.], would appear in the following format in our train"
      ]
    },
    {
      "heading": "4.2 The 2 Different Parsers",
      "text": [
        "Since the core arguments and the ARGMs in the PropBank loosely correspond to the complements and adjuncts in the linguistics literature, we are interested in investigating their individual effect on parsing performance.",
        "We trained two parsers.",
        "An AN-parser was trained on the Penn Treebank corpus augmented with two semantic argument labels: -AN, and -ANC.",
        "Another AM-parser was trained on labels -AM, and -AMC."
      ]
    },
    {
      "heading": "5 Results and Discussion",
      "text": [
        "Table 1 shows the results after combining various SRL systems using different parsers.",
        "In order to explore the effects of combining, we include the overall performance on the development dataset of individual SRL systems in Table 2.",
        "The performance of Semantic Role Labeling (SRL) is determined by the quality of the syntactic information provided to the system.",
        "In this paper, we investigate that for the SRL task whether it is more suitable to use a parser trained with data con",
        "taining both syntactic bracketing and semantic argument boundary information than a pure syntactic one.",
        "The results of the SRL systems using the AM-or AN parsers are not significantly better than that using the Charniak’s parser.",
        "This might due to the simple training mechanism of the base parsing algorithm which the AM and AN parsers exploit.",
        "It also suggests our future work to apply the approach to more sophisticated parsing frameworks.",
        "By then, We show that we can boost the final performance by combining different SRL systems using different parsers, given that the combination algorithm is ca"
      ]
    }
  ]
}
