{
  "info": {
    "authors": [
      "Tomohiro Mitsumori",
      "Masaki Murata",
      "Yasushi Fukuda",
      "Kouichi Doi",
      "Hirohumi Doi"
    ],
    "book": "Conference on Computational Natural Language Learning CoNLL",
    "id": "acl-W05-0629",
    "title": "Semantic Role Labeling Using Support Vector Machines",
    "url": "https://aclweb.org/anthology/W05-0629",
    "year": 2005
  },
  "references": [
    "acl-E99-1023",
    "acl-N01-1025",
    "acl-W04-2416",
    "acl-W05-0620",
    "acl-W95-0107"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In this paper, we describe our systems for the CoNLL-2005 shared task.",
        "The aim of the task is semantic role labeling using a machine-learning algorithm.",
        "We apply the Support Vector Machines to the task.",
        "We added new features based on full parses and manually categorized words.",
        "We also report on system performance and what effect the newly added features had."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The CoNLL-2005 shared task (Carreras and M`arquez, 2005) concerns the recognition of automatic semantic roles for the English language.",
        "Given a sentence, the task consists of analyzing the propositions expressed by various target verbs of the sentence.",
        "The semantic roles of constituents of the sentence are extracted for each target verb.",
        "There are semantic arguments such as Agent, Patient, and Instrument and also adjuncts such as Locative and Temporal.",
        "We performed the semantic role labeling using Support Vector Machines (SVMs).",
        "Systems that used SVMs achieved good performance in the CoNLL-2004 shared task, and we added data on full parses to it.",
        "We prepared a feature used by the full parses, and we also categorized words that appeared in the training set and added them as features.",
        "Here, we report on systems for automatically labeling semantic roles in a closed challenge in the CoNLL2005 shared task.",
        "This paper is arranged as follows.",
        "Section 2 describes the SVMs.",
        "Our system is described Section 3, where we also describe methods of data representation, feature coding, and the parameters of SVMs.",
        "The experimental results and conclusion are presented in Sections 4 and 5."
      ]
    },
    {
      "heading": "2 Support Vector Machines",
      "text": [
        "SVMs are one of the binary classifiers based on the maximum margin strategy introduced by Vap-nik (Vapnik, 1995).",
        "This algorithm has achieved good performance in many classification tasks, e.g. named entity recognition and document classification.",
        "There are some advantages to SVMs in that",
        "(i) they have high generalization performance independent of the dimensions of the feature vectors and (ii) learning with a combination of multiple features is possible by using the polynomial kernel function (Yamada and Matsumoto, 2003).",
        "SVMs were used in the CoNLL-2004 shred task and achieved good performance (Hacioglu et al., 2004) (Kyung-Mi Park and Rim, 2004).",
        "We used YamCha (Yet Another Multipurpose Chunk Annotator)1 (Kudo and Matsumoto, 2001), which is a general purpose SVM-based chunker.",
        "We also used TinySVM2 as a package for SVMs."
      ]
    },
    {
      "heading": "3 System Description",
      "text": []
    },
    {
      "heading": "3.1 Data Representation",
      "text": [
        "We changed the representation of original data according to Hacioglu et al.",
        "(Hacioglu et al., 2004) in our system.",
        "Bracketed representation of roles was converted into IOB2 representation (Ramhsaw and Marcus, 1995) (Sang and Veenstra, 1999).",
        "Word-by-word was changed to the phrase-by-phrase method (Hacioglu et al., 2004).",
        "Word tokens were collapsed into base phrase (BP) tokens.",
        "The BP headwords were rightmost words.",
        "Verb phrases were not collapsed because some included more the one predicate."
      ]
    },
    {
      "heading": "3.2 Feature Coding",
      "text": [
        "We prepared the training and development set by using files corresponding to: words, predicated partial parsing (part-of-speech, base chunks), predicate full parsing trees (Charniak models), and named entities.",
        "We will describe feature extraction according to Fig. 1.",
        "Figure 1 shows an example of an annotated sentence.",
        "1st Words (Bag of Words): All words appearing in the training data.",
        "2nd Part of Speech (POS) Tags",
        "3rd Base Phrase Tags: Partial parses (chunks + clauses) predicted with UPC processors.",
        "4th Named Entities 5th Token Depth: This means the degree of depth from a predicate (see Fig. 2).",
        "We used full parses predicted by the Charniak parser.",
        "In this figure, the depth of paid , which is a predicate, is zero and the depth of April is -2.",
        "6th Words of Predicate 7th Position of Tokens: The position of the current word from the predicate.",
        "This has three value of “before”, “after”, and “-” (for the predicate).",
        "8th Phrase Distance on Flat Path: This means the distance from the current token to the predicate as a number of the phrase on flat path.",
        "For example, the phrase distance of “April” is 4, because two “NP” and one “PP” exist from “paid”(predicate) to “April” (see 3rd column in Fig. 1).",
        "word to the predicate as a chain of the phrases.",
        "The chain begins from the BP of the current word to the BP of the predicate.",
        "10th Semantic Class : We collected the most frequently occurring 1,000 BP headwords appearing in the training set and tried to manually classified.",
        "The five classes (person, organization, time, location, number and money) were relatively easy to classify.",
        "In the 1,000 words, the 343 words could be classified into the five classes.",
        "Remainder could not be classified.",
        "The details are listed in Table 1.",
        "Preceding class: The class (e.g. B-A0 or I-A1) of the token(s) preceding the current token.",
        "The number of preceding tokens is dependent on the window size.",
        "In this paper, the left context considered is two."
      ]
    },
    {
      "heading": "3.3 Machine learning with YamCha",
      "text": [
        "YamCha (Kudo and Matsumoto, 2001) is a general purpose SVM-based chunker.",
        "After inputting the training and test data, YamCha converts them for",
        "the SVM.",
        "The YamCha format for an example sentence is shown in Fig. 1.",
        "Input features are written in each column as words (1st), POS tags (2nd), base phrase chunks (3rd), named entities (4th), token depth (5th), predicate (6th), the position of tokens (7th), the phrase distance (8th), flat paths (9th), semantic classes (10th), and argument classes (11th).",
        "The boxed area in Fig. 1 shows the elements of feature vectors for the current word, in this case “share”.",
        "The information from the two preceding and two following tokens is used for each vector."
      ]
    },
    {
      "heading": "3.4 Parameters of SVM",
      "text": [
        "Degree of polynomial kernel (natural number): We can only use a polynomial kernel in YamCha.",
        "In this paper, we adopted the degree of two.",
        "Range of window (integer): The SVM can use the information on tokens surrounding the token of interest as illustrated in Fig. 1.",
        "In this paper, we adopted the range from the left two tokens to the right two tokens.",
        "Method of solving a multi-class problem: We adopted the one-vs.-rest method.",
        "The BIO class is learned as (B vs. other), (I vs. other), and (O vs. other).",
        "Cost of constraint violation (floating number): There is a trade-off between the training error and the soft margin for the hyper plane.",
        "We adopted a default value (1.0)."
      ]
    },
    {
      "heading": "4 Results",
      "text": []
    },
    {
      "heading": "4.1 Data",
      "text": [
        "The data provided for the shared task consisted of sections from the Wall Street Journal (WSJ) part of Penn TreeBank II.",
        "The training set was WSJ Sections 02-21, the development set was Section 24, and the test set was Section 23 with the addition of fresh sentences.",
        "Our experiments were carried out using Sections 15-18 for the training set, because the entire file was too large to learn."
      ]
    },
    {
      "heading": "4.2 Experiments",
      "text": [
        "Our final results for the CoNLL-2005 shared task are listed in Table 2.",
        "Our system achieved 74.15% precision, 68.25% recall and 71.08 F on the overall results of Test WSJ.",
        "Table 3 lists the effects of the token-depth and semantic-class features.",
        "The token-depth feature had a larger effect than that for the semantic class."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "This paper reported on semantic role labeling using SVMs.",
        "Systems that used SVMs achieved good performance in the CoNLL-2004 shared task, and we added data on full parses to it.",
        "We applied a token-depth feature to SVM learning and it had a large effect.",
        "We also added a semantic-class feature and it had a small effect.",
        "Some classes were similar to the named entities, e.g., the PERSON or LOCATION of the named entities.",
        "Our semantic class feature also included not only proper names but also common words.",
        "For example, “he” and “she” also included the PERSON semantic class.",
        "Furthermore, we added a time, number, and money class.",
        "The",
        "semantic class feature was manually categorized on the most frequently occurring 1,000 words in the training set.",
        "More effort of the categorization may improve the performance of our system."
      ]
    }
  ]
}
