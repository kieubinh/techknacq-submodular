{
  "info": {
    "authors": [
      "Erik F. Tjong Kim Sang",
      "Sander Canisius",
      "Antal van den Bosch",
      "Toine Bogers"
    ],
    "book": "Conference on Computational Natural Language Learning CoNLL",
    "id": "acl-W05-0637",
    "title": "Applying Spelling Error Correction Techniques for Improving Semantic Role Labelling",
    "url": "https://aclweb.org/anthology/W05-0637",
    "year": 2005
  },
  "references": [
    "acl-J02-3001",
    "acl-N04-1030",
    "acl-P03-1004",
    "acl-W04-2414",
    "acl-W04-3212",
    "acl-W05-0620"
  ],
  "sections": [
    {
      "heading": "1 Introduction",
      "text": [
        "This paper describes our approach to the CoNLL2005 shared task: semantic role labelling.",
        "We do many of the obvious things that can be found in the other submissions as well.",
        "We use syntactic trees for deriving instances, partly at the constituent level and partly at the word level.",
        "On both levels we edit the data down to only the predicted positive cases of verb-constituent or verb-word pairs exhibiting a verb-argument relation, and we train two next-level classifiers that assign the appropriate labels to the positively classified cases.",
        "Each classifier is trained on data in which the features have been selected to optimize generalization performance on the particular task.",
        "We apply different machine learning algorithms and combine their predictions.",
        "As a novel addition, we designed an automatically trained post-processing module that attempts to correct some of the errors made by the base system.",
        "To this purpose we borrowed Levenshtein-distancebased correction, a method from spelling error correction to repair mistakes in sequences of labels.",
        "We adapted the method to our needs and applied it for improving semantic role labelling output.",
        "This paper presents the results of our approach."
      ]
    },
    {
      "heading": "2 Data and features",
      "text": [
        "The CoNLL-2005 shared task data sets provide sentences in which predicate–argument relations have been annotated, as well as a number of extra annotations like named entities and full syntactic parses (Carreras and M`arquez, 2005).",
        "We have used the parses for generating machine learning instances for pairs of predicates and syntactic phrases.",
        "In principle each phrase can have a relation with each verb in the same sentence.",
        "However, in order to keep the number of instances at a reasonable number, we have only built instances for verb–phrase pairs when the phrase parent is an ancestor of the verb (400,128 training instances).",
        "A reasonable number of arguments are individual words; these do not match with phrase boundaries.",
        "In order to be able to label these, we have also generated instances for all pairs of verbs and individual words using the same constraint (another 542,217 instances).",
        "The parent node constraint makes certain that embedded arguments, which do not occur in these data sets, cannot be predicted by our approach.",
        "Instances which are associated with verb– argument pairs receive the label of the argument as class while others in principle receive a NULL class.",
        "In an estimated 10% of the cases, the phrase boundaries assigned by the parser are different from those in the argument annotation.",
        "In case of a mismatch, we have always used the argument label of the first word of a phrase as the class of the corresponding instance.",
        "By doing this we attempt to keep the positional information of the lost argument in the training data.",
        "Both the parser phrase boundary errors as well as the parent node constraint restrict the number of phrases we can identify.",
        "The maximum recall score attainable with our phrases is 84.64% for the development data set.",
        "We have experimentally evaluated 30 features based on the previous work in semantic role labelling (Gildea and Jurafsky, 2002; Pradhan et al., 2004; Xue and Palmer, 2004):",
        "• Lexical features (5): predicate (verb), first phrase word, last phrase word and words immediately before and after the phrase.",
        "• Syntactic features (14): part-of-speech tags (POS) of: first phrase word, last phrase word,",
        "word immediately before phrase and word immediately after phrase; syntactic paths from word to verb: all paths, only paths for words before verb and only paths for words after verb; phrase label, label of phrase parent, subcate-gorisation of verb parent, predicate frame from PropBank, voice, head preposition for prepositional phrases and same parents flag.",
        "• Semantic features (2): named entity tag for first phrase word and last phrase word.",
        "• Positional features (3): position of the phrase with respect to the verb: left/right, distance in words and distance in parent nodes.",
        "• Combination features (6): predicate + phrase label, predicate + first phrase word, predicate + last phrase word, predicate + first phrase POS, predicate + last phrase POS and voice + left/right.",
        "The output of two parsers was available.",
        "We have briefly experimented with the Collins parses including the available punctuation corrections but found that our approach reached a better performance with the Charniak parses.",
        "We report only on the results obtained with the Charniak parses."
      ]
    },
    {
      "heading": "3 Approach",
      "text": [
        "This section gives a brief overview of the three main components of our approach: machine learning, automatic feature selection and post-processing by a novel procedure designed to clean up the classifier output by correcting obvious misclassifications."
      ]
    },
    {
      "heading": "3.1 Machine learning",
      "text": [
        "The core machine learning technique employed, is memory-based learning, a supervised inductive algorithm for learning classification tasks based on the k-nn algorithm.",
        "We use the TiMBL system (Daele-mans et al., 2003), version 5.0.0, patch-2 with uniform feature weighting and random tiebreaking (options: w 0 R 911).",
        "We have also evaluated two alternative learning techniques.",
        "First, Maximum Entropy Models, for which we employed Zhang Le’s Maximum Entropy Toolkit, version 20041229 with default parameters.",
        "Second, Support Vector Machines for which we used Taku Kudo’s YamCha (Kudo and Matsumoto, 2003), with one-versus-all voting and option V which enabled us to ignore predicted classes with negative distances."
      ]
    },
    {
      "heading": "3.2 Feature selection",
      "text": [
        "In previous research, we have found that memory-based learning is rather sensitive to the chosen features.",
        "In particular, irrelevant or redundant features may lead to reduced performance.",
        "In order to minimise the effects of this sensitivity, we have employed bidirectional hill-climbing (Caruana and Freitag, 1994) for finding the features that were most suited for this task.",
        "This process starts with an empty feature set, examines the effect of adding or removing one feature and then starts a new iteration with the set associated with the best performance."
      ]
    },
    {
      "heading": "3.3 Automatic post-processing",
      "text": [
        "Certain misclassifications by the semantic role-labelling system described so far lead to unlikely and impossible relation assignments, such as assigning two indirect objects to a verb where only one is possible.",
        "Our proposed classifier has no mechanism to detect these errors.",
        "One solution is to devise a post-processing step that transforms the resulting role assignments until they meet certain basic constraints, such as the rule that each verb may have only single instances of the different roles assigned in one sentence (Van den Bosch et al., 2004).",
        "We propose an alternative automatically-trained post-processing method which corrects unlikely role assignments either by deleting them or by replacing them with a more likely one.",
        "We do not do this by knowledge-based constraint satisfaction, but rather by adopting a method for error correction based on Levenshtein distance (Levenshtein, 1965), or edit distance, as used commonly in spelling error correction.",
        "Levenshtein distance is a dynamically computed distance between two strings, accounting for the number of deletions, insertions, and substitutions needed to transform the one string into the other.",
        "Levenshtein-based error correction typically matches a new, possibly incorrect, string to a trusted lexicon of assumedly correct strings, finds the lexicon string with the smallest Levenshtein distance to the new string, and replaces the new string with the lexicon string as its likely correction.",
        "We implemented a roughly similar procedure.",
        "First, we generated a lexicon of semantic role labelling patterns of A0–A5 arguments of verbs on the basis of the entire training corpus and the PropBank verb frames.",
        "This",
        "lexicon contains entries such as abandon A0 V A1, and categorize A1 V A2 – a total of 43,033 variable-length role labelling patterns.",
        "Next, given a new test sentence, we consider all of its verbs and their respective predicted role labellings, and compare each with the lexicon, searching the role labelling pattern with the same verb at the smallest Levenshtein distance (in case of an unknown verb we search in the entire lexicon).",
        "For example, in a test sentence the pattern emphasize A0 V A1 A0 is predicted.",
        "One closest lexicon item is found at Levenshtein distance 1, namely emphasize A0 V A1, representing a deletion of the final A0.",
        "We then use the nearest-neighbour pattern in the lexicon to correct the likely error, and apply all deletions and substitutions needed to correct the current pattern according to the nearest-neighbour pattern from the trusted lexicon.",
        "We do not apply insertions, since the post-processor module does not have the information to decide which constituent or word would receive the inserted label.",
        "In case of multiple possible deletions (e.g. in deleting one out of two A 1s in emphasize A0 V A1 A1), we always delete the argument furthest from the verb."
      ]
    },
    {
      "heading": "4 Results",
      "text": [
        "In order to perform the optimisation of the semantic role labelling process in a reasonable amount of time, we have divided it in four separate tasks: pruning the data for individual words and the data for phrases, and labelling of these two data sets.",
        "Pruning amounts to deciding which instances correspond with verb-argument pairs and which do not.",
        "This resulted in a considerable reduction of the two data sets: 47% for the phrase data and 80% for the word data.",
        "The remaining instances are assumed to define verb-argument pairs and the labelling tasks assign labels to them.",
        "We have performed a separate feature selection process in combination with the memory-based learner for each of the four tasks.",
        "First we selected the best feature set based on task accuracy.",
        "As soon as a working module for each of the tasks was available, we performed an extra feature selection process for each of the modules, optimising overall system F,3_1 while keeping the other three modules fixed.",
        "The effect of the features on the overall perfor",
        "sets when memory-based learning is applied to the development set (overall F,3_1).",
        "The process consisted of four tasks: pruning data sets for individual words and phrases, and labelling these two data sets.",
        "Selected features are shown in bold.",
        "Unfortunately, we have not been able to use all promising features.",
        "mance can be found in Table 1.",
        "One feature (syntactic path) was selected in all four tasks but in general different features were required for optimal performance in the four tasks.",
        "Changing the feature set had the largest effect when labelling the phrase data.",
        "We have applied the two other learners, Maximum Entropy Models and Support Vector Machines to the two labelling tasks, while using the same features as the memory-based learner.",
        "The performance of the three systems on the development data can be found in Table 3.",
        "Since the systems performed differently we have also evaluated the performance of a combined system which always chose the majority class assigned to an instance and the class of the strongest system (SVM) in case of a three-way tie.",
        "The combined system performed slightly better than the best"
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "We have presented a machine learning approach to semantic role labelling based on full parses.",
        "We have split the process in four separate tasks: pruning the data bases of word-based and phrase-based examples down to only the positive verb-argument cases, and labelling the two positively classified data sets.",
        "A novel automatic post-processing procedure based on spelling correction, comparing to a trusted lexicon of verb-argument patterns from the training material, was able to achieve a performance increase by correcting unlikely role assignments.",
        "algorithm, the application of Levenshtein-distancebased post-processing and the use of system combination on the performance obtained for the development data set."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "This research was funded by NWO, the Netherlands Organisation for Scientific Research, and by Senter-Novem IOP-MMI."
      ]
    }
  ]
}
