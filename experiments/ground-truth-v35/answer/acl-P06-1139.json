{
  "info": {
    "authors": [
      "Radu Soricut",
      "Daniel Marcu"
    ],
    "book": "International Conference on Computational Linguistics and Annual Meeting of the Association for Computational Linguistics",
    "id": "acl-P06-1139",
    "title": "Stochastic Language Generation Using WIDL-Expressions and Its Application in Machine Translation and Summarization",
    "url": "https://aclweb.org/anthology/P06-1139",
    "year": 2006
  },
  "references": [
    "acl-N03-1017",
    "acl-P01-1030",
    "acl-P02-1040",
    "acl-P03-1021",
    "acl-P05-1009",
    "acl-W03-0501",
    "acl-W04-1013"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We propose WIDL-expressions as a flexible formalism that facilitates the integration of a generic sentence realization system within end-to-end language processing applications.",
        "WIDL-expressions represent compactly probability distributions over finite sets of candidate realizations, and have optimal algorithms for realization via interpolation with language model probability distributions.",
        "We show the effectiveness of a WIDL-based NLG system in two sentence realization tasks: automatic translation and headline generation."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The Natural Language Generation (NLG) community has produced over the years a considerable number of generic sentence realization systems: Penman (Matthiessen and Bateman, 1991), FUF (Elhadad, 1991), Nitrogen (Knight and Hatzivassiloglou, 1995), Fergus (Bangalore and Rambow, 2000), HALogen (Langkilde-Geary, 2002), Amalgam (Corston-Oliver et al., 2002), etc.",
        "However, when it comes to end-to-end, text-to-text applications – Machine Translation, Summarization, Question Answering – these generic systems either cannot be employed, or, in instances where they can be, the results are significantly below that of state-of-the-art, application-specific systems (Hajic et al., 2002; Habash, 2003).",
        "We believe two reasons explain this state of affairs.",
        "First, these generic NLG systems use input representation languages with complex syntax and semantics.",
        "These languages involve deep, semantic-based subject-verb or verb-object relations (such as ACTOR, AGENT, PATIENT, etc., for Penman and FUF), syntactic relations (such as subject, object, premod, etc., for HALogen), or lexical dependencies (Fergus, Amalgam).",
        "Such inputs cannot be accurately produced by state-of-the-art analysis components from arbitrary textual input in the context of text-to-text applications.",
        "Second, most of the recent systems (starting with Nitrogen) have adopted a hybrid approach to generation, which has increased their robustness.",
        "These hybrid systems use, in a first phase, symbolic knowledge to (over)generate a large set of candidate realizations, and, in a second phase, statistical knowledge about the target language (such as stochastic language models) to rank the candidate realizations and find the best scoring one.",
        "The disadvantage of the hybrid approach – from the perspective of integrating these systems within end-to-end applications – is that the two generation phases cannot be tightly coupled.",
        "More precisely, input-driven preferences and target language–driven preferences cannot be integrated in a true probabilistic model that can be trained and tuned for maximum performance.",
        "In this paper, we propose WIDL-expressions (WIDL stands for Weighted Interleave, Disjunction, and Lock, after the names of the main operators) as a representation formalism that facilitates the integration of a generic sentence realization system within end-to-end language applications.",
        "The WIDL formalism, an extension of the IDL-expressions formalism of Nederhof and Satta (2004), has several crucial properties that differentiate it from previously-proposed NLG representation formalisms.",
        "First, it has a simple syntax (expressions are built using four operators) and a simple, formal semantics (probability distributions over finite sets of strings).",
        "Second, it is a compact representation that grows linearly",
        "in the number of words available for generation (see Section 2).",
        "(In contrast, representations such as word lattices (Knight and Hatzivassiloglou, 1995) or non-recursive CFGs (Langkilde-Geary, 2002) require exponential space in the number of words available for generation (Nederhof and Satta, 2004).)",
        "Third, it has good computational properties, such as optimal algorithms for intersection with gram language models (Section 3).",
        "Fourth, it is flexible with respect to the amount of linguistic processing required to produce WIDL-expressions directly from text (Sections 4 and 5).",
        "Fifth, it allows for a tight integration of input-specific preferences and target-language preferences via interpolation of probability distributions using log-linear models.",
        "We show the effectiveness of our proposal by directly employing a generic WIDL-based generation system in two end-to-end tasks: machine translation and automatic headline generation."
      ]
    },
    {
      "heading": "2 The WIDL Representation Language",
      "text": []
    },
    {
      "heading": "2.1 WIDL-expressions",
      "text": [
        "In this section, we introduce WIDL-expressions, a formal language used to compactly represent probability distributions over finite sets of strings.",
        "Given a finite alphabet of symbols , atomic WIDL-expressions are of the form , with .",
        "For a WIDL-expression , its semantics is a probability distribution , where and .",
        "Complex WIDL-expressions are created from other WIDL-expressions, by employing the following four operators, as well as operator distribution functions from an alphabet ."
      ]
    },
    {
      "heading": "Weighted Disjunction. If are",
      "text": [
        "WIDL-expressions, then , with ,specified such that ,is a WIDL-expression.",
        "Its semantics is a probability distribution , where , and the probability values are induced by and , .",
        "For example, if , , its semantics is a probability distribution over , defined by and .",
        "Precedence.",
        "If are WIDL-expressions, then is a WIDL-expression.",
        "Its semantics is a probability distribution , where is the set of all strings that obey the precedence imposed over the arguments, and the probability values are induced by and .",
        "For example, if",
        "Weighted Interleave.",
        "If are WIDL-expressions, then , with , , specified such that , is a WIDL-expression.",
        "Its semantics is a probability distribution , where consists of all the possible interleavings of strings from ,, and the probability values are induced by and .",
        "The distribution function is defined either explicitly, over (the set of all permutations of elements), or implicitly, as .",
        "Because the set of argument permutations is a subset of all possible interleavings, also needs to specify the probability mass for the strings that are not argument permutations, .",
        "For example, if , , its semantics is a probability distribution , with domain by , .",
        "Lock.",
        "If is a WIDL-expression, then is a WIDL-expression.",
        "The semantic mapping is the same as , except that contains strings in which no additional symbol can be interleaved.",
        "For example, if , defined by , .",
        "In Figure 1, we show a more complex WIDL-expression.",
        "The probability distribution associated with the operator assigns probability 0.2 to the argument order ; from a probability mass of 0.7, it assigns uniformly, for each of the remaining argument permutations, a permutation probability value of .",
        "The",
        "remaining probability mass of 0.1 is left for the 12 shuffles associated with the unlocked expression , for a shuffle probability of .",
        "The list below enumerates some of the pairs that belong to the probability distribution defined by our example: rebels fighting turkish government in iraq 0.130 in iraq attacked rebels turkish goverment 0.049 in turkish goverment iraq rebels fighting 0.005 The following result characterizes an important representation property for WIDL-expressions.",
        "For proofs and more details regarding WIDL-expressions, we refer the interested reader to (Soricut, 2006).",
        "Theorem 1 ensures that high-complexity hypothesis spaces can be represented efficiently by WIDL-expressions (Section 5)."
      ]
    },
    {
      "heading": "2.2 WIDL-graphs and Probabilistic Finite-State Acceptors",
      "text": [
        "WIDL-graphs.",
        "Equivalent at the representation level with WIDL-expressions, WIDL-graphs allow for formulations of algorithms that process them.",
        "For each WIDL-expression , there exists an equivalent WIDL-graph .",
        "As an example, we illustrate in Figure 2(a) the WIDL-graph corresponding to the WIDL-expression in Figure 1.",
        "WIDL-graphs have an initial vertex and a final vertex .",
        "Vertices ,, and with ingoing edges labeled ,, and , respectively, and vertices ,, and with outgoing edges labeled ,, and , respectively, result from the expansion of the operator.",
        "Vertices and with ingoing edges labeled ,, respectively, and vertices and with outgoing edges labeled ,, respectively, result from the expansion of the operator.",
        "With each WIDL-graph ,we associate a probability distribution.",
        "The domain of this distribution is the finite collection of strings that can be generated from the paths of a WIDL-specific traversal of , starting from and ending in .",
        "Each path (and its associated string) has a probability value induced by the probability distribution functions associated with the edge labels of .",
        "A WIDL-expression and its corresponding WIDL-graph are said to be equivalent because they represent the same distribution WIDL-graphs and Probabilistic FSA.",
        "Probabilistic finite-state acceptors (pFSA) are a well-known formalism for representing probability distributions (Mohri et al., 2002).",
        "For a WIDL-expression , we define a mapping, called UNFOLD, between the WIDL-graph and a pFSA .",
        "A state in is created for each set of WIDL-graph vertices that can be reached simultaneously when traversing the graph.",
        "State records, in what we call a stack (interleave stack), the order in which ,–bordered sub-graphs are traversed.",
        "Consider Figure 2(b), in which state (at the bottom) corresponds to reaching vertices , and (see the WIDL-graph in Figure 2(a)), by first reaching vertex (inside the (Figure 2(b)) results from unfolding the path (Figure 2(a)).",
        "A transition labeled between two states and in exists if there exists a vertex in the description of and vertices in the descrip, (see transition ), or if there exists vertices in the description of and vertex in the description of , such tion of , such that ,.",
        "The transitions that .",
        ",–bordered sub-graph), and then reaching vertex (inside the , –bordered sub-graph).",
        "A transition labeled between two states and in exists if there exists a vertex in the description of and a vertex in the description of such that there exists a path in between and , and is the only -labeled transitions in this path.",
        "For example, transition",
        "are responsible for adding and removing, respectively, the , symbols in the -stack.",
        "The probabilities associated with transitions are computed using the vertex set and the stack of each state, together with the distribution functions of the and operators.",
        "For a detailed presentation of the UNFOLD relation we refer the reader to (Soricut, 2006)."
      ]
    },
    {
      "heading": "3 Stochastic Language Generation from WIDL-expressions",
      "text": []
    },
    {
      "heading": "3.1 Interpolating Probability Distributions in a Log-linear Framework",
      "text": [
        "Let us assume a finite set of strings over a finite alphabet , representing the set of possible sentence realizations.",
        "In a log-linear framework, we have a vector of feature functions ,and a vector of parameters",
        "We can formulate the search problem of finding the most probable realization under this model as shown in Equation 2, and therefore we do not need to be concerned about computing expensive normalization factors.",
        "For a given WIDL-expression over , the set is defined by , and feature function is taken to be .",
        "Any language model we want to employ may be added in Equation 2 as a feature function ,"
      ]
    },
    {
      "heading": "3.2 Algorithms for Intersecting WIDL-expressions with Language Models",
      "text": [
        "Algorithm WIDL-NGLM-A (Figure 3) solves the search problem defined by Equation 2 for a WIDL-expression (which provides feature function ) and gram language models (which provide feature functions .",
        "It does so by incrementally computing UNFOLD for (i.e., on-demand computation of the corresponding pFSA ), by keeping track of a set of active states, called .",
        "The set of newly UNFOLDed states is called .",
        "Using Equation 1 (unnor-malized), we EVALUATE the current scores for the states.",
        "Additionally, EVALUATE uses an admissible heuristic function to compute future (admissible) scores for the states.",
        "The algorithm PUSHes each state from the current into a priority queue , which sorts the states according to their total score (current admissible).",
        "In the next iteration, is a singleton set containing the state POPed out from the top of .",
        "The admissible heuristic function we use is the one defined in (Soricut and Marcu, 2005), using Equation 1 (unnormalized) for computing the event costs.",
        "Given the existence of the admissible heuristic and the monotonicity property of the unfolding provided by the priority queue , the proof for A optimality (Russell and Norvig, 1995) guarantees that WIDL-NGLM-A finds a path in that provides an optimal solution.",
        "An important property of the WIDL-NGLM-A algorithm is that the UNFOLD relation (and, implicitly, the acceptor) is computed only partially, for those states for which the total cost is less than the cost of the optimal path.",
        "This results in important savings, both in space and time, over simply running a single-source shortest-path algorithm for directed acyclic graphs (Cormen et al., 2001) over the full acceptor (Soricut and Marcu, 2005)."
      ]
    },
    {
      "heading": "4 Headline Generation using WIDL-expressions",
      "text": [
        "We employ the WIDL formalism (Section 2) and the WIDL-NGLM-A algorithm (Section 3) in a summarization application that aims at producing both informative and fluent headlines.",
        "Our headlines are generated in an abstractive, bottom-up manner, starting from words and phrases.",
        "A more common, extractive approach operates top-down, by starting from an extracted sentence that is compressed (Dorr et al., 2003) and annotated with additional information (Zajic et al., 2004).",
        "Automatic Creation of WIDL-expressions for Headline Generation.",
        "We generate WIDL-expressions starting from an input document.",
        "First, we extract a weighted list of topic keywords from the input document using the algorithm of Zhou and Hovy (2003).",
        "This list is enriched with phrases created from the lexical dependencies the topic keywords have in the input document.",
        "We associate probability distributions with these phrases using their frequency (we assume Keywords iraq 0.32, syria 0.25, rebels 0.22, kurdish 0.17, turkish 0.14, attack 0.10 Phrases iraq in iraq 0.4, northern iraq 0.5,iraq and iran 0.1 , syria into syria 0.6, and syria 0.4",
        "that higher frequency is indicative of increased importance) and their position in the document (we assume that proximity to the beginning of the document is also indicative of importance).",
        "In Figure 4, we present an example of input keywords and lexical-dependency phrases automatically extracted from a document describing incidents at the Turkey-Iraq border.",
        "The algorithm for producing WIDL-expressions combines the lexical-dependency phrases for each keyword using a operator with the associated probability values for each phrase multiplied with the probability value of each topic keyword.",
        "It then combines all the headed expressions into a single WIDL-expression using a operator with uniform probability.",
        "The WIDL-expression in Figure 1 is a (scaled-down) example of the expressions created by this algorithm.",
        "On average, a WIDL-expression created by this algorithm, using keywords and an average of lexical-dependency phrases per keyword, compactly encodes a candidate set of about 3 million possible realizations.",
        "As the specification of the operator takes space for uniform , Theorem 1 guarantees that the space complexity of these expressions is .",
        "Finally, we generate headlines from WIDL-expressions using the WIDL-NGLM-A algorithm, which interpolates the probability distributions represented by the WIDL-expressions with gram language model distributions.",
        "The output presented in Figure 4 is the most likely headline realization produced by our system.",
        "Headline Generation Evaluation.",
        "To evaluate the accuracy of our headline generation system, we use the documents from the DUC 2003 evaluation competition.",
        "Half of these documents are used as development set (283 documents),",
        "pare extractive algorithms against abstractive algorithms, including our WIDL-based algorithm.",
        "and the other half is used as test set (273 documents).",
        "We automatically measure performance by comparing the produced headlines against one reference headline produced by a human using ROUGE (Lin, 2004).",
        "For each input document, we train two language models, using the SRI Language Model Toolkit (with modified Kneser-Ney smoothing).",
        "A general trigram language model, trained on 170M English words from the Wall Street Journal, is used to model fluency.",
        "A document-specific trigram language model, trained on-the-fly for each input document, accounts for both fluency and content validity.",
        "We also employ a word-count model (which counts the number of words in a proposed realization) and a phrase-count model (which counts the number of phrases in a proposed realization), which allow us to learn to produce headlines that have restrictions in the number of words allowed (10, in our case).",
        "The interpolation weights (Equation 2) are trained using discriminative training (Och, 2003) using ROUGE as the objective function, on the development set.",
        "The results are presented in Table 1.",
        "We compare the performance of several extractive algorithms (which operate on an extracted sentence to arrive at a headline) against several abstractive algorithms (which create headlines starting from scratch).",
        "For the extractive algorithms, Lead10 is a baseline which simply proposes as headline the lead sentence, cut after the first 10 words.",
        "HedgeTrimmer is our implementation of the Hedge Trimer system (Dorr et al., 2003), and Topiary is our implementation of the Topiary system (Zajic et al., 2004).",
        "For the abstractive algorithms, Keywords is a baseline that proposes as headline the sequence of topic keywords, Webcl is the system",
        "described in (Zhou and Hovy, 2003), and WIDL-A is the algorithm described in this paper.",
        "This evaluation shows that our WIDL-based approach to generation is capable of obtaining headlines that compare favorably, in both content and fluency, with extractive, state-of-the-art results (Zajic et al., 2004), while it outperforms a previously-proposed abstractive system by a wide margin (Zhou and Hovy, 2003).",
        "Also note that our evaluation makes these results directly comparable, as they use the same parsing and topic identification algorithms.",
        "In Figure 5, we present a sample of headlines produced by our system, which includes both good and not-so-good outputs."
      ]
    },
    {
      "heading": "5 Machine Translation using WIDL-expressions",
      "text": [
        "We also employ our WIDL-based realization engine in a machine translation application that uses a two-phase generation approach: in a first phase, WIDL-expressions representing large sets of possible translations are created from input foreign-language sentences.",
        "In a second phase, we use our generic, WIDL-based sentence realization engine to intersect WIDL-expressions with an - gram language model.",
        "In the experiments reported here, we translate between Chinese (source language) and English (target language)."
      ]
    },
    {
      "heading": "Automatic Creation of WIDL-expressions for",
      "text": [
        "MT.",
        "We generate WIDL-expressions from Chinese strings by exploiting a phrase-based translation table (Koehn et al., 2003).",
        "We use an algorithm resembling probabilistic bottom-up parsing to build a WIDL-expression for an input Chinese string: each contiguous span over a Chinese string is considered a possible “constituent”, and the “non-terminals” associated with each constituent are the English phrase translations that correspond in the translation table to the Chinese string .",
        "Multiple-word English phrases, such as , are represented as WIDL-expressions using the precedence ( ) and",
        "WIDL-expression, which provides a translation as the best scoring hypothesis under the interpolation with a trigram language model.",
        "the number of possible translations corresponding to a Chinese span , we use a probabilistic beam and a histogram beam to beam out low probability translation alternatives.",
        "At this point, each span is “tiled” with likely translations taken from the translation table.",
        "Tiles that are adjacent are joined together in a larger tile by a operator, where .",
        "That is, reordering of the component tiles are permitted by the operators (assigned non-zero probability), but the longer the movement from the original order of the tiles, the lower the probability.",
        "(This distortion model is similar with the one used in (Koehn, 2004).)",
        "When multiple tiles are available for the same span , they are joined by a operator, where is specified by the probability distributions specified in the translation table.",
        "Usually, statistical phrase-based translation tables specify not only one, but multiple distributions that account for context preferences.",
        "In our experiments, we consider four probability distributions: , and , where and are Chinese-English phrase translations as they appear in the translation table.",
        "In Figure 6, we show an example of WIDL-expression created by this algorithm'.",
        "On average, a WIDL-expression created by this algorithm, using an average of tiles per sentence (for an average input sentence length of 30 words) and an average of possible translations per tile, encodes a candidate set of about 10 possible translations.",
        "As the specification of the operators takes space , Theorem 1 'English reference: the gunman was shot dead by the police.",
        "guarantees that these WIDL-expressions encode compactly these huge spaces in .",
        "In the second phase, we employ our WIDL-based realization engine to interpolate the distribution probabilities of WIDL-expressions with a trigram language model.",
        "In the notation of Equation 2, we use four feature functions for the WIDL-expression distributions (one for each probability distribution encoded); a feature function for a trigram language model; a feature function for a word-count model, and a feature function for a phrase-count model.",
        "As acknowledged in the Machine Translation literature (Germann et al., 2003), full A search is not usually possible, due to the large size of the search spaces.",
        "We therefore use an approximation algorithm, called WIDL-NGLM-A , which considers for unfolding only the nodes extracted from the priority queue which already unfolded a path of length greater than or equal to the maximum length already unfolded minus (we used in the experiments reported here).",
        "MT Performance Evaluation.",
        "When evaluated against the state-of-the-art, phrase-based decoder Pharaoh (Koehn, 2004), using the same experimental conditions – translation table trained on the FBIS corpus (7.2M Chinese words and 9.2M English words of parallel text), trigram language model trained on 155M words of English newswire, interpolation weights (Equation 2) trained using discriminative training (Och, 2003) (on the 2002 NIST MT evaluation set), probabilistic beam set to 0.01, histogram beam set to 10 – and BLEU (Papineni et al., 2002) as our metric, the WIDL-NGLM-A algorithm produces translations that have a BLEU score of 0.2570, while Pharaoh translations have a BLEU score of 0.2635.",
        "The difference is not statistically significant at 95% confidence level.",
        "These results show that the WIDL-based approach to machine translation is powerful enough to achieve translation accuracy comparable with state-of-the-art systems in machine translation."
      ]
    },
    {
      "heading": "6 Conclusions",
      "text": [
        "The approach to sentence realization we advocate in this paper relies on WIDL-expressions, a formal language with convenient theoretical properties that can accommodate a wide range of generation scenarios.",
        "In the worst case, one can work with simple bags of words that encode no context",
        "preferences (Soricut and Marcu, 2005).",
        "One can also work with bags of words and phrases that encode context preferences, a scenario that applies to current approaches in statistical machine translation (Section 5).",
        "And one can also encode context and ordering preferences typically used in summarization (Section 4).",
        "The generation engine we describe enables a tight coupling of content selection with sentence realization preferences.",
        "Its algorithm comes with theoretical guarantees about its optimality.",
        "Because the requirements for producing WIDL-expressions are minimal, our WIDL-based generation engine can be employed, with state-of-the-art results, in a variety of text-to-text applications.",
        "Acknowledgments This work was partially supported under the GALE program of the Defense Advanced Research Projects Agency, Contract No.",
        "HR0011-06-C-0022."
      ]
    }
  ]
}
