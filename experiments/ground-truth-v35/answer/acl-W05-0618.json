{
  "info": {
    "authors": [
      "Tomasz Marciniak",
      "Michael Strube"
    ],
    "book": "Conference on Computational Natural Language Learning CoNLL",
    "id": "acl-W05-0618",
    "title": "Beyond the Pipeline: Discrete Optimization in NLP",
    "url": "https://aclweb.org/anthology/W05-0618",
    "year": 2005
  },
  "references": [
    "acl-A97-1035",
    "acl-C04-1197",
    "acl-J01-4004",
    "acl-P04-1051",
    "acl-W04-2401",
    "acl-W94-0319",
    "acl-W98-1223",
    "acl-W99-0629"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We present a discrete optimization model based on a linear programming formulation as an alternative to the cascade of classifiers implemented in many language processing systems.",
        "Since NLP tasks are correlated with one another, sequential processing does not guarantee optimal solutions.",
        "We apply our model in an NLG application and show that it performs better than a pipeline-based system."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "NLP applications involve mappings between complex representations.",
        "In generation a representation of the semantic content is mapped onto the grammatical form of an expression, and in analysis the semantic representation is derived from the linear structure of a text or utterance.",
        "Each such mapping is typically split into a number of different tasks handled by separate modules.",
        "As noted by Daelemans & van den Bosch (1998), individual decisions that these tasks involve can be formulated as classification problems falling in either of two groups: disambiguation or segmentation.",
        "The use of machine-learning to solve such tasks facilitates building complex applications out of many light components.",
        "The architecture of choice for such systems has become a pipeline, with strict ordering of the processing stages.",
        "An example of a generic pipeline architecture is GATE (Cunningham et al., 1997) which provides an infrastructure for building NLP applications.",
        "Sequential processing has also been used in several NLG systems (e.g. Reiter (1994), Reiter & Dale (2000)), and has been successfully used to combine standard preprocessing tasks such as part-of-speech tagging, chunking",
        "and named entity recognition (e.g. Buchholz et al.",
        "(1999), Soon et al.",
        "(2001)).",
        "In this paper we address the problem of aggregating the outputs of classifiers solving different NLP tasks.",
        "We compare pipeline-based processing with discrete optimization modeling used in the field of computer vision and image recognition (Kleinberg & Tardos, 2000; Chekuri et al., 2001) and recently applied in NLP by Roth & Yih (2004), Punyakanok et al.",
        "(2004) and Althaus et al.",
        "(2004).",
        "Whereas Roth and Yih used optimization to solve two tasks only, and Punyakanok et al.",
        "and Althaus et al.",
        "focused on a single task, we propose a general formulation capable of combining a large number of different NLP tasks.",
        "We apply the proposed model to solving numerous tasks in the generation process and compare it with two pipeline-based systems.",
        "The paper is structured as follows: in Section 2 we discuss the use of classifiers for handling NLP tasks and point to the limitations of pipeline processing.",
        "In Section 3 we present a general discrete optimization model whose application in NLG is described in Section 4.",
        "Finally, in Section 5 we report on the experiments and evaluation of our approach."
      ]
    },
    {
      "heading": "2 Solving NLP Tasks with Classifiers",
      "text": [
        "Classification can be defined as the task Ti of assigning one of a discrete set of mi possible labels Li = {lij, ..., li�i }1 to an unknown instance.",
        "Since generic machine-learning algorithms can be applied to solving single-valued predictions only, complex 'Since we consider different NLP tasks with varying num",
        "lecting respective labels at the next layer.",
        "In the sequential model only transitions between nodes belonging to subsequent layers are allowed.",
        "At each step, the transition with the highest local probability is selected.",
        "Selected nodes correspond to outcomes of individual classifiers.",
        "This graphical representa-T2 tion shows that sequential processing does not guarantee an optimal context-dependent assignment of class labels and favors tasks that occur later, by providing them with contextual information, over those that are solved first.",
        "structures, such as parse trees, coreference chains or sentence plans, can only be assembled from the outputs of many different classifiers.",
        "In an application implemented as a cascade of classifiers the output representation is built incrementally, with subsequent classifiers having access to the outputs of previous modules.",
        "An important characteristic of this model is its extensibility: it is generally easy to change the ordering or insert new modules at any place in the pipeline2.",
        "A major problem with sequential processing of linguistic data stems from the fact that elements of linguistic structure, at the semantic or syntactic levels, are strongly correlated with one another.",
        "Hence classifiers that have access to additional contextual information perform better than if this information is withheld.",
        "In most cases, though, if task Tk can use the output of Ti to increase its accuracy, the reverse is also true.",
        "In practice this type of processing may lead to error propagation.",
        "If due to the scarcity of contextual information the accuracy of initial classifiers is low, erroneous values passed as input to subsequent tasks can cause further misclassifications which can distort the final outcome (also discussed by Roth and Yih and van den Bosch et al.",
        "(1998)).",
        "As can be seen in Figure 1, solving classification tasks sequentially corresponds to the best first traversal of a weighted multi-layered lattice.",
        "Nodes at separate layers (Ti, ..., Tn) represent labels of different classification tasks and transitions between the nodes are augmented with probabilities of se2 Both operations only require retraining classifiers with a new selection of the input features."
      ]
    },
    {
      "heading": "3 Discrete Optimization Model",
      "text": [
        "As an alternative to sequential ordering of NLP tasks we consider the metric labeling problem formulated by Kleinberg & Tardos (2000), and originally applied in an image restoration application, where classifiers determine the ”true” intensity values of individual pixels.",
        "This task is formulated as a labeling function f : P – * L, that maps a set P of n objects onto a set L of m possible labels.",
        "The goal is to find an assignment that minimizes the overall cost function Q(f ), that has two components: assignment costs, i.e. the costs of selecting a particular label for individual objects, and separation costs, i.e. the costs of selecting a pair of labels for two related objects3.",
        "Chekuri et al.",
        "(2001) proposed an integer linear programming (ILP) formulation of the metric labeling problem, with both assignment cost and separation costs being modeled as binary variables of the linear cost function.",
        "Recently, Roth & Yih (2004) applied an ILP model to the task of the simultaneous assignment of semantic roles to the entities mentioned in a sentence and recognition of the relations holding between them.",
        "The assignment costs were calculated on the basis of predictions of basic classifiers, i.e. trained for both tasks individually with no access to the outcomes of the other task.",
        "The separation costs were formulated in terms of binary constraints, that specified whether a specific semantic role could occur in a given relation, or not.",
        "In the remainder of this paper, we present a more general model, that is arguably better suited to handling different NLP problems.",
        "More specifically, we",
        "put no limits on the number of tasks being solved, and express the separation costs as stochastic constraints, which for almost any NLP task can be calculated off-line from the available linguistic data."
      ]
    },
    {
      "heading": "3.1 ILP Formulation",
      "text": [
        "We consider a general context in which a specific NLP problem consists of individual linguistic decisions modeled as a set of n classification tasks T = {T1,..., Tn}, that potentially form mutually related pairs.",
        "Each task Ti consists in assigning a label from Li = {lil, ..., limi } to an instance that represents the particular decision.",
        "Assignments are modeled as variables of a linear cost function.",
        "We differentiate between simple variables that model individual assignments of labels and compound variables that represent respective assignments for each pair of related tasks.",
        "To represent individual assignments the following procedure is applied: for each task Ti, every label from Li is associated with a binary variable x(lij).",
        "Each such variable represents a binary choice, i.e. a respective label lij is selected if x(lij) = 1 or rejected otherwise.",
        "The coefficient of variable x(lij), that models the assignment cost c(lij), is given by:",
        "where p(lij) is the probability of lij being selected as the outcome of task Ti.",
        "The probability distribution for each task is provided by the basic classifiers that do not consider the outcomes of other tasks4.",
        "The role of compound variables is to provide pairwise constraints on the outcomes of individual tasks.",
        "Since we are interested in constraining only those tasks that are truly dependent on one another we first apply the contingency coefficient C to measure the degree of correlation for each pair of tasks5.",
        "In the case of tasks Ti and Tk which are significantly correlated, for each pair of labels from",
        "variables, and hence adequate for the type of tasks that we consider here.",
        "The coefficient takes values from 0 (no correlation) to 1 (complete correlation) and is calculated by the formula: C = /x2/(N + x2))1/2, where X2 is the chi-squared statistic and N\\ the total number of instances.",
        "The significance of C is then determined from the value of x2 for the given data.",
        "See e.g. Goodman & Kruskal (1972).",
        "Li x Lk we build a single variable x(lij, lkp).",
        "Each such variable is associated with a coefficient representing the constraint on the respective pair of labels lij, lkp calculated in the following way:",
        "with p(lij,lkp) denoting the prior joint probability of labels lij, and lkp in the data, which is independent from the general classification context and hence can be calculated off-line6.",
        "The ILP model consists of the target function and a set of constraints which block illegal assignments (e.g. only one label of the given task can be selected)7.",
        "In our case the target function is the cost function Q (f ), which we want to minimize:",
        "Ti,Tk ET,i<k lij ,lkp ELi X Lk Constraints need to be formulated for both the simple and compound variables.",
        "First we want to ensure that exactly one label lij belonging to task Ti is selected, i.e. only one simple variable x(lij) representing labels of a given task can be set to 1:",
        "We also require that if two simple variables x(lij) and x(lkp), modeling respectively labels lij and lkp are set to 1, then the compound variable x(lij, lkp), which models co-occurrence of these labels, is also set to 1.",
        "This is done in two steps: we first ensure that if x(lij) = 1, then exactly one variable x(lij, lkp) must also be set to 1:",
        "and do the same for variable x(lkp):",
        "Finally, we constrain the values of both simple and compound variables to be binary:"
      ]
    },
    {
      "heading": "3.2 Graphical Representation",
      "text": [
        "We can represent the decision process that our ILP model involves as a graph, with the nodes corresponding to individual labels and the edges marking the association between labels belonging to correlated tasks.",
        "In Figure 2, task T1 is correlated with task T2 and task T2 with task Tn.",
        "No correlation exists for pair T1, Tn.",
        "Both nodes and edges are augmented with costs.",
        "The goal is to select a subset of connected nodes, minimizing the overall cost, given that for each group of nodes T1, T2, ..., Tn exactly one node must be selected, and the selected nodes, representing correlated tasks, must be connected.",
        "We can see that in contrast to the pipeline approach (cf.",
        "Figure 1), no local decisions determine the overall assignment as the global distribution of costs is considered."
      ]
    },
    {
      "heading": "4 Application for NL Generation Tasks",
      "text": [
        "We applied the ILP model described in the previous section to integrate different tasks in an NLG application that we describe in detail in Marciniak & Strube (2004).",
        "Our classification-based approach to language generation assumes that different types of linguistic decisions involved in the generation process can be represented in a uniform way as classification problems.",
        "The linguistic knowledge required to solve the respective classifications is then learned from a corpus annotated with both semantic and grammatical information.",
        "We have applied this framework to generating natural language route directions, e.g.: (a) Standing in front of the hotel (b) follow Meridian street south for about 100 meters, (c) passing the First Union Bank entrance on your right, (d) until you see the river side in front of you.",
        "We analyze the content of such texts in terms of temporally related situations, i.e. actions (b), states (a) and events (c,d), denoted by individual discourse units$.",
        "The semantics of each discourse unit is further given by a set of attributes specifying the semantic frame and aspectual category of the profiled situation.",
        "Our corpus of semantically annotated route directions comprises 75 texts with a total number of 904 discourse units (see Marciniak & Strube (2005)).",
        "The grammatical form of the texts is modeled in terms of LTAG trees also represented as feature vectors with individual features denoting syntactic and lexical elements at both the discourse and clause levels.",
        "The generation of each discourse unit consists in assigning values to the respective features, of which the LTAG trees are then assembled.",
        "In Marciniak & Strube (2004) we implemented the generation process sequentially as a cascade of classifiers that realized incrementally the vector representation of the generated text’s form, given the meaning vector as input.",
        "The classifiers handled the following eight tasks, all derived from the LTAG-based representation of the grammatical form: Tl: Discourse Units Rank is concerned with ordering discourse units at the local level, i.e. only clauses temporally related to the same parent clause are considered.",
        "This task is further split into a series of binary precedence classifications that determine the relative position of two discourse units at a time",
        "(e.g. (a) before (c), (c) before (d), etc.).",
        "These partial results are later combined to determine the ordering.",
        "T2: Discourse Unit Position specifies the position of the child discourse unit relative to the parent one (e.g. (a) left of (b), (c) right of (b), etc.).",
        "T3: Discourse Connective determines the lexical form of the discourse connective (e.g. null in (a), until in (d)).",
        "T4: S Expansion specifies whether a given discourse unit would be realized as a clause with the explicit subject (i.e. np+vp expansion of the root S node in a clause) (e.g. (d)) or not (e.g. (a), (b)).",
        "T5: Verb Form determines the form of the main verb in a clause (e.g. gerund in (a), (c), bare infinitive in (b), finite present in (d)).",
        "Ts: Verb Lexicalization provides the lexical form of the main verb (e.g. stand, follow, pass, etc.).",
        "T7: Phrase Type determines for each verb argument in a clause its syntactic realization as a noun phrase, prepositional phrase or a particle.",
        "T8: Phrase Rank determines the ordering of verb arguments within a clause.",
        "As in T1 this task is split into a number binary classifications.",
        "To apply the LP model to the generation problem discussed above, we first determined which pairs of tasks are correlated.",
        "The obtained network (Figure 3) is consistent with traditional analyses of the linguistic structure in terms of adjacent but separate levels: discourse, clause, phrase.",
        "Only a few correlations extend over level boundaries and tasks within those levels are correlated.",
        "As an example consider three interrelated tasks: Connective, S Exp.",
        "and Verb Form and their different realizations presented in Table 1.",
        "Apparently different realization of any of these tasks can affect the overall meaning of a discourse unit or its stylistics.",
        "It can also be seen that only certain combinations of different forms are allowed in the given semantic context.",
        "We can conclude that for such groups of tasks sequential processing may fail to deliver an optimal assignment."
      ]
    },
    {
      "heading": "5 Experiments and Results",
      "text": [
        "In order to evaluate our approach we conducted experiments with two implementations of the ILP model and two different pipelines (presented below).",
        "Each system takes as input a tree structure, representing the temporal structure of the text.",
        "Individual nodes correspond to single discourse units and their semantic content is given by respective feature vectors.",
        "Generation occurs in a number of stages, during which individual discourse units are realized."
      ]
    },
    {
      "heading": "5.1 Implemented Systems",
      "text": [
        "We used the ILP model described in Section 3 to build two generation systems.",
        "To obtain assignment costs, both systems get a probability distribution for each task from basic classifiers trained on the training data.",
        "To calculate the separation costs, modeling the stochastic constraints on the co-occurrence of labels, we considered correlated tasks only (cf.",
        "Figure 3) and applied two calculation methods, which resulted in two different system implementations.",
        "In ILP1, for each pair of tasks we computed the joint distribution of the respective labels considering all discourse units in the training data before the actual input was known.",
        "Such obtained joint distributions were used for generating all discourse units from the test data.",
        "An example matrix with joint distribution for selected labels of tasks Connective and Verb Form is given in Table 2.",
        "An advantage of this",
        "you see the river side in front of you, at Phi-threshold > 0.8. approach is that the computation can be done in an offline mode and has no impact on the runtime.",
        "In ILP2, the joint distribution for a pair of tasks was calculated at run-time, i.e. only after the actual input had been known.",
        "This time we did not consider all discourse units in the training data, but only those whose meaning, represented as a feature vector was similar to the meaning vector of the input discourse unit.",
        "As a similarity metric we used the Phi coefficient9, and set the similarity threshold at 0.8.",
        "As can be seen from Table 3, the probability distribution computed in this way is better suited to the specific semantic context.",
        "This is especially important if the available corpus is small and the frequency of certain pairs of labels might be too low to have a significant impact on the final assignment.",
        "As a baseline we implemented two pipeline systems.",
        "In the first one we used the ordering of tasks most closely resembling the conventional NLG pipeline (see Figure 4).",
        "Individual classifiers had access to both the semantic features, and those output by the previous modules.",
        "To train the classifiers, the correct feature values were extracted from the training data and during testing the generated, and hence possibly erroneous, values were taken.",
        "In the",
        "other pipeline system we wanted to minimize the error-propagation effect and placed the tasks in the order of decreasing accuracy.",
        "To determine the ordering of tasks we applied the following procedure: the classifier with the highest baseline accuracy was selected as the first one.",
        "The remaining classifiers were trained and tested again, but this time they had access to the additional feature.",
        "Again, the classifier with the highest accuracy was selected and the procedure was repeated until all classifiers were ordered."
      ]
    },
    {
      "heading": "5.2 Evaluation",
      "text": [
        "We evaluated our system using leave-one-out cross-validation, i.e. for all texts in the corpus, each text was used once for testing, and the remaining texts provided the training data.",
        "To solve individual classification tasks we used the decision tree learner C4.5 in the pipeline systems and the Naive Bayes algorithm10 in the ILP systems.",
        "Both learning schemes yielded highest results in the respective configurations11.",
        "For each task we applied a feature selection procedure (cf. Kohavi & John (1997)) to determine which semantic features should be taken as the input by the respective basic classifiers12.",
        "We started with an empty feature set, and then performed experiments checking classification accuracy with only one new feature at a time.",
        "The feature that scored highest was then added to the feature set and the whole procedure was repeated iteratively until no performance improvement took place, or no more features were left.",
        "To evaluate individual tasks we applied two metrics: accuracy, calculated as the proportion of correct classifications to the total number of instances, and the n statistic, which corrects for the proportion of classifications that might occur by chance13 10Both implemented in the Weka machine learning software (Witten & Frank, 2000).",
        "11We have found that in direct comparison C4.5 reaches higher accuracies than Naive Bayes but the probability distribution that it outputs is strongly biased towards the winning label.",
        "In this case it is practically impossible for the ILP system to change the classifier’s decision, as the costs of other labels get extremely high.",
        "Hence the more balanced probability distribution given by Naive Bayes can be easier corrected in the optimization process.",
        "(Siegel & Castellan, 1988).",
        "For end-to-end evaluation, we applied the Phi coefficient to measure the degree of similarity between the vector representations of the generated form and the reference form obtained from the test data.",
        "The Phi statistic is similar to r. as it compensates for the fact that a match between two multi-label features is more difficult to obtain than in the case of binary features.",
        "This measure tells us how well all the tasks have been solved together, which in our case amounts to generating the whole text.",
        "The results presented in Table 4 show that the ILP systems achieved highest accuracy and r. for most tasks and reached the highest overall Phi score.",
        "Notice that for the three correlated tasks that we considered before, i.e. Connective, S Exp.",
        "and Verb Form, ILP2 scored noticeably higher than the pipeline systems.",
        "It is interesting to see the effect of sequential processing on the results for another group of correlated tasks, i.e. Verb Lex, Phrase Type and Phrase Rank (cf.",
        "Figure 3).",
        "Verb Lex got higher scores in Pipeline2, with outputs from both Phrase Type and Phrase Rank (see the respective pipeline positions), but the reverse effect did not occur: scores for both phrase tasks were lower in Pipeline1 when they had access to the output from Verb Lex, contrary to what we might expect.",
        "Apparently, this was due to the low accuracy for Verb Lex which caused the already mentioned error propagation14.",
        "This example shows well the advantage that optimization processing brings: both ILP systems reached much ties can be directly compared, which gives a clear notion how well individual tasks have been solved.",
        "14Apparantly, tasks which involve lexical choice get low scores with retrieval measures as the semantic content allows typically more than one correct form higher scores for all three tasks."
      ]
    },
    {
      "heading": "5.3 Technical Notes",
      "text": [
        "The size of an LP model is typically expressed in the number of variables and constraints.",
        "In the model presented here it depends on the number of tasks in T, the number of possible labels for each task, and the number of correlated tasks.",
        "For n different tasks with the average of m labels, and assuming every two tasks are correlated with each other, the number of variables in the LP target functions is given by: num(var) = n • m + 1/2 • n(n - 1) • m2 and the number of constraints by: num(cons) _ n + n • (n - 1) • m. To solve the ILP models in our system we use lp solve, an efficient GNU-licence Mixed Integer Programming (MIP) solver15, which implements the Branch-and-Bound algorithm.",
        "In our application, the models varied in size from: 557 variables and 178 constraints to 709 variables and 240 constraints, depending on the number of arguments in a sentence.",
        "Generation of a text with 23 discourse units took under 7 seconds on a two-processor 2000 MHz AMD machine."
      ]
    },
    {
      "heading": "6 Conclusions",
      "text": [
        "In this paper we argued that pipeline architectures in NLP can be successfully replaced by optimization models which are better suited to handling correlated tasks.",
        "The ILP formulation that we proposed extends the classification paradigm already established in NLP and is general enough to accommodate various kinds of tasks, given the right kind of data.",
        "We applied our model in an NLG application.",
        "The results we obtained show that discrete",
        "optimization eliminates some limitations of sequential processing, and we believe that it can be successfully applied in other areas of NLP.",
        "We view our work as an extension to Roth & Yih (2004) in two important aspects.",
        "We experiment with a larger number of tasks having a varying number of labels.",
        "To lower the complexity of the models, we apply correlation tests, which rule out pairs of unrelated tasks.",
        "We also use stochastic constraints, which are application-independent, and for any pair of tasks can be obtained from the data.",
        "A similar argument against sequential modularization in NLP applications was raised by van den Bosch et al.",
        "(1998) in the context of word pronunciation learning.",
        "This mapping between words and their phonemic transcriptions traditionally assumes a number of intermediate stages such as morphological segmentation, graphemic parsing, grapheme-phoneme conversion, syllabification and stress assignment.",
        "The authors report an increase in generalization accuracy when the the modular decomposition is abandoned (i.e. the tasks of conversion to phonemes and stress assignment get conflated and the other intermediate tasks are skipped).",
        "It is interesting to note that a similar dependence on the intermediate abstraction levels is present in such applications as parsing and semantic role labelling, which both assume POS tagging and chunking as their preceding stages.",
        "Currently we are working on a uniform data format that would allow to represent different NLP applications as multi-task optimization problems.",
        "We are planning to release a task-independent Java API that would solve such problems.",
        "We want to use this generic model for building NLP modules that traditionally are implemented sequentially.",
        "Acknowledgements: The work presented here has been funded by the Klaus Tschira Foundation, Heidelberg, Germany.",
        "The first author receives a scholarship from KTF (09.001.2004)."
      ]
    }
  ]
}
