{
  "info": {
    "authors": [
      "Marian Olteanu",
      "Pasin Suriyentrakorn",
      "Dan Moldovan"
    ],
    "book": "Workshop on Statistical Machine Translation",
    "id": "acl-W06-3122",
    "title": "Language Models and Reranking for Machine Translation",
    "url": "https://aclweb.org/anthology/W06-3122",
    "year": 2006
  },
  "references": [
    "acl-J93-2004",
    "acl-N03-1017",
    "acl-P01-1017",
    "acl-P02-1040",
    "acl-P03-1021"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Complex Language Models cannot be easily integrated in the first pass decoding of a Statistical Machine Translation system – the decoder queries the LM a very large number of times; the search process in the decoding builds the hypotheses incrementally and cannot make use of LMs that analyze the whole sentence.",
        "We present in this paper the Language Computer’s system for WMT06 that employs LM-powered reranking on hypotheses generated by phrase-based SMT systems"
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Statistical machine translation (SMT) systems combine a number of translation models with one or more language models.",
        "Adding complex language models in the incremental process of decoding is a very challenging task.",
        "Some language models can only score sentences as a whole.",
        "Also, SMT decoders generate during the search process a very large number of partial hypotheses and query the language model/models 1.",
        "The solution to these problems is either to use multiple iterations for decoding, to make use of the complex LMs only for complete hypotheses in the search space or to generate n-best lists and to rescore the hypotheses using also the additional LMs.",
        "For",
        "the WMT 2006 shared task we opted for the rerank-ing solution.",
        "This paper describes our solution and results."
      ]
    },
    {
      "heading": "2 System Description",
      "text": [
        "We developed for the WMT 2006 shared task a system that is trained on a (a) word-aligned bilingual corpus, (b) a large monolingual (English) corpus and (c) an English treebank and it is capable of translating from a source language (German, Spanish and French) into English.",
        "Our system embeds Phramer2 (used for minimum error rate training, decoding, decoding tools), Pharaoh (Koehn, 2004) (decoding), Carmel 3 (helper for Pharaoh in n-best generation), Char-niak’s parser (Charniak, 2001) (language model) and SRILM4 (n-gram LM construction)."
      ]
    },
    {
      "heading": "2.1 Translation table construction",
      "text": [
        "We developed a component that builds a translation table from a word-aligned parallel corpus.",
        "The component generates the translation table according to the process described in the Pharaoh training manual5.",
        "It generates a vector of 5 numeric values for each phrase pair:",
        "• phrase translation probability: count",
        "• phrase penalty: T(f l�e) = e; log(T(f l�e)) = 1"
      ]
    },
    {
      "heading": "2.2 Decoding",
      "text": [
        "We used the Pharaoh decoder for both the Minimum Error Rate Training (Och, 2003) and test dataset decoding.",
        "Although Phramer provides decoding functionality equivalent to Pharaoh’s, we preferred to use Pharaoh for this task because it is much faster than Phramer – between 2 and 15 times faster, depending on the configuration – and preliminary tests showed that there is no noticeable difference between the output of these two in terms of BLEU (Papineni et al., 2002) score.",
        "The log-linear model uses 8 features: one distortion feature, one basic LM feature, 5 features from the translation table and one sentence length feature."
      ]
    },
    {
      "heading": "2.3 Minimum Error Rate Training",
      "text": [
        "To determine the best coefficients of the log-linear model (A) for both the initial stage decoding and the second stage reranking, we used the unsmoothed Minimum Error Rate Training (MERT) component present in the Phramer package.",
        "The MERT component is highly efficient; the time required to search a set of 200,000 hypotheses is less than 30 seconds per iteration (search from a previous/random A to a local maximum) on a 3GHz P4 machine.",
        "We also used the distributed decoding component from Phramer to speed up the search process.",
        "We generated the n-best lists required for MERT using the Carmel toolkit.",
        "Pharaoh outputs a lattice for each input sentence, from which Carmel extracts a specific number of hypotheses.",
        "We used the europarl.en.srilm language model for decoding the n-best lists.",
        "The weighting vector is calculated individually for each subtask (pair of source and target languages)."
      ]
    },
    {
      "heading": "2.4 Language Models for reranking",
      "text": [
        "We employed both syntactic language models and n-gram based language models extracted from very large corpora for improving the quality of the translation through reranking of the n-best list.",
        "These language models add a total of 13 new features to the log-linear model.",
        "We created large-scale n-gram language models using English Gigaword Second Edition6 (EGW).",
        "We split the corpus into sentences, tokenized the corpus, lower-cased the sentences, replaced every digit with “9” to cluster different numbers into the same unigram entry, filtered noisy sentences and we collected n-gram counts (up to 4-grams).",
        "Table 1 presents the statistics related to this process.",
        "We pruned the unigrams that appeared less than 15 times in the corpus and all the n-grams that contain the pruned unigrams.",
        "We also pruned 3-grams and 4-grams that appear only once in the corpus.",
        "Based on these counts, we calculated 4 features for each sentence: the logarithm of the probability of the sentence based on unigrams, on bigrams, on 3 grams and on 4-grams.",
        "The probabilities of each word in the analyzed translation hypotheses were bounded by 10-5 (to avoid overall zero probability of a sentence caused by zero-counts).",
        "Based on the unpruned counts, we calculated 8 additional features: how many of the n-grams in the the hypothesis appear in the EGW corpus and also how many of the n-grams in the hypotheses don’t appear in the Gigaword corpus (n = 1�A).",
        "The two types of counts will have different behavior only when they are used to discriminate between two hypotheses with different length.",
        "The number of n-grams in each of the two cases is presented in Table 2."
      ]
    },
    {
      "heading": "2.4.2 Charniak parsing",
      "text": [
        "We used Charniak’s parser as an additional LM (Charniak, 2001) in reranking.",
        "The parser provides one feature for our model – the log-grammar-probability of the sentence.",
        "We retrained the parser on lowercased Penn Treebank II (Marcus et al., 1993), to match the lowercased output of the MT decoder.",
        "Considering the huge number of hypotheses that needed to be parsed for this task, we set it to parse very fast (using the command-line parameter -T107)."
      ]
    },
    {
      "heading": "2.5 Reranking and voting",
      "text": [
        "A A weights vector trained over the 8 basic features (A1) is used to decode a n-best list.",
        "Then, a A vector trained over all 21 features (A2) is used to rerank the n-best list, potentially generating a new first-best hypothesis.",
        "To improve the results, we generated during training a set of distinct A2 weight vectors (4-10 different weight vectors).",
        "Each A2 picks a preferred hypothesis.",
        "The final hypothesis is chosen using a voting mechanism.",
        "The computational cost of the voting process is very low - each of the A2 is applied on the same set of hypotheses - generated by a single A1."
      ]
    },
    {
      "heading": "2.6 Preprocessing",
      "text": [
        "The vocabulary of languages like English, French and Spanish is relatively small.",
        "Most of the new words that appear in a text and didn’t appear in a predefined large text (i.e.: translation table) are abbreviations and proper nouns, that usually don’t change their form when they are translated into another language.",
        "Thus Pharaoh and Phramer deal with out-of-vocabulary (OOV) words – words that don’t appear in the translation table – by copying them into the output translation.",
        "German is a compounding language, thus the German vocabulary is virtu",
        "ally infinite.",
        "In order to avoid OOV issues for new text, we applied a heuristic to improve the probability of properly translating compound words that are not present in the translation table.",
        "We extracted the German vocabulary from the translation table.",
        "Then, for each word in a text to be translated (development set or test set), we checked if it is present in the translation dictionary.",
        "If it was not present, we checked if it can be obtained by concatenating two words in the dictionary.",
        "If we found at least one variant of splitting the unknown word, we altered the text by dividing the word into the corresponding pieces.",
        "If there are multiple ways of splitting, we randomly took one.",
        "The minimum length for the generated word is 3 letters.",
        "In order to minimize the risk of inserting words that are not in the reference translation into the output translation, we applied a OOV pruning algorithm (Koehn et al., 2005) – we removed every word in the text to be translated that we know we cannot translate (doesn’t appear either in the foreign part of the parallel corpus used for training) or in what we expect to be present in an English text (doesn’t appear in the English Gigaword corpus).",
        "This method was applied to all the input text that was automatically translated – development and test; German, French and Spanish.",
        "For the German-to-English translation, the compound word splitting algorithm was applied before the unknown word removal process."
      ]
    },
    {
      "heading": "3 Experimental Setup",
      "text": [
        "We generated the translation tables for each pair of languages using the alignment provided for this shared task.",
        "We split the dev2006 files into two halves.",
        "The first half was used to determine A1.",
        "Using A1, we created a 500-best list for each sentence in the second half.",
        "We calculated the value of the enhanced features (EGW and Charniak) for each of these hypotheses.",
        "Over this set of almost 500 K hypotheses, we computed 10 different A2 using MERT.",
        "The search process was seeded using A1 padded with 0 for the new 13 features.",
        "We sorted the A2s by the BLEU score estimated by the MERT algorithm.",
        "We pruned manually the A2 s that diverge too much from the overall set of A2s (based on the observation that",
        "these weights are overfitting).",
        "We picked from the remaining set the best A2 and a preferred subset of A2s to be used in voting.",
        "The A1 was also used to decode a 500-best list for each sentence in the devtest2006 and test2006 sets.",
        "After computing value of the enhanced features for each of these hypotheses, we applied the reranking algorithm to pick a new first-best hypothesis – the output of our system.",
        "We used the following parameters for decoding: -dl 5 b 0.0001 -ttable-limit 30 s 200 for French and Spanish and -dl 9 b 0.00001 -ttable-limit 30 s 200 for German."
      ]
    },
    {
      "heading": "4 Results",
      "text": [
        "Table 3 presents the detailed results of our system on the devtest2006 datasets and comparison with WMT 2006 best results 8.",
        "The final results, on the test set of the shared task, are reported in Table 4."
      ]
    },
    {
      "heading": "5 Conclusions",
      "text": [
        "By analyzing the results, we observe that a very powerful component of our system is the MERT component of Phramer.",
        "It provided a very high baseline for the devtest2006 sets (WPT05 test sets).",
        "The additional language models seem to consistently improve the results, although the increase is not very significant on FR-EN and ES-EN subtasks.",
        "The cause might be the specifics of the data involved",
        "in this shared task – mostly European Parliament proceedings, which is different than the domain of both Treebank and English Gigaword – newswire.",
        "The enhanced LMs compete with the default LM (which is also part of the model) that is trained on European Parliament data.",
        "The word splitting heuristics offers also a small improvement for the performance on DE-EN subtask.",
        "Voting seems to slightly improve the results in some cases (ES-EN subtask).",
        "We believe that the voting implementation reduces A weights overfitting, by combining the output of multiple local maxima of the development set.",
        "The size of the development set used to generate A1 and A2 (1000 sentences) compensates the tendency of the unsmoothed MERT algorithm to overfit (Och, 2003) by providing a high ratio between number of variables and number of parameters to be estimated."
      ]
    }
  ]
}
