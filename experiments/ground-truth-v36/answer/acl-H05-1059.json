{
  "info": {
    "authors": [
      "Yoshimasa Tsuruoka",
      "Jun'ichi Tsujii"
    ],
    "book": "Human Language Technology Conference and Empirical Methods in Natural Language Processing",
    "id": "acl-H05-1059",
    "title": "Bidirectional Inference With the Easiest-First Strategy for Tagging Sequence Data",
    "url": "https://aclweb.org/anthology/H05-1059",
    "year": 2005
  },
  "references": [
    "acl-A00-1031",
    "acl-E99-1023",
    "acl-J93-2004",
    "acl-J96-1002",
    "acl-N01-1025",
    "acl-N03-1033",
    "acl-P03-1064",
    "acl-W00-0726",
    "acl-W00-0730",
    "acl-W02-1001",
    "acl-W03-1018"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper presents a bidirectional inference algorithm for sequence labeling problems such as part-of-speech tagging, named entity recognition and text chunking.",
        "The algorithm can enumerate all possible decomposition structures and find the highest probability sequence together with the corresponding decomposition structure in polynomial time.",
        "We also present an efficient decoding algorithm based on the easiest-first strategy, which gives comparably good performance to full bidirectional inference with significantly lower computational cost.",
        "Experimental results of part-of-speech tagging and text chunking show that the proposed bidirectional inference methods consistently outperform unidirectional inference methods and bidirectional MEMMs give comparable performance to that achieved by state-of-the-art learning algorithms including kernel support vector machines."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The task of labeling sequence data such as part-of-speech (POS) tagging, chunking (shallow parsing) and named entity recognition is one of the most important tasks in natural language processing.",
        "Conditional random fields (CRFs) (Lafferty et al., 2001) have recently attracted much attention because they are free from so-called label bias problems which reportedly degrade the performance of sequential classification approaches like maximum entropy markov models (MEMMs).",
        "Although sequential classification approaches could suffer from label bias problems, they have several advantages over CRFs.",
        "One is the efficiency of training.",
        "CRFs need to perform dynamic programming over the whole sentence in order to compute feature expectations in each iteration of numerical optimization.",
        "Training, for instance, second-order CRFs using a rich set of features can require prohibitive computational resources.",
        "Max-margin methods for structured data share problems of computational cost (Altun et al., 2003).",
        "Another advantage is that one can employ a variety of machine learning algorithms as the local classifier.",
        "There is huge amount of work about developing classification algorithms that have high generalization performance in the machine learning community.",
        "Being able to incorporate such state-of-the-art machine learning algorithms is important.",
        "Indeed, sequential classification approaches with kernel support vector machines offer competitive performance in POS tagging and chunking (Gimenez and Marquez, 2003; Kudo and Matsumoto, 2001).",
        "One obvious way to improve the performance of sequential classification approaches is to enrich the information that the local classifiers can use.",
        "In standard decomposition techniques, the local classifiers cannot use the information about future tags (e.g. the right-side tags in left-to-right decoding), which would be helpful in predicting the tag of the target word.",
        "To make use of the information about future tags, Toutanova et al.",
        "proposed a tagging algorithm based on bidirectional dependency networks",
        "(Toutanova et al., 2003) and achieved the best accuracy on POS tagging on the Wall Street Journal corpus.",
        "As they pointed out in their paper, however, their method potentially suffers from “collusion” effects which make the model lock onto conditionally consistent but jointly unlikely sequences.",
        "In their modeling, the local classifiers can always use the information about future tags, but that could cause a double-counting effect of tag information.",
        "In this paper we propose an alternative way of making use of future tags.",
        "Our inference method considers all possible ways of decomposition and chooses the “best” decomposition, so the information about future tags is used only in appropriate situations.",
        "We also present a deterministic version of the inference method and show their effectiveness with experiments of English POS tagging and chunking, using standard evaluation sets."
      ]
    },
    {
      "heading": "2 Bidirectional Inference",
      "text": [
        "The task of labeling sequence data is to find the sequence of tags t1 ... tn that maximizes the following probability given the observation o = o1 ... on",
        "Observations are typically words and their lexical features in the task of POS tagging.",
        "Sequential classification approaches decompose the probability as follows,",
        "This is the left-to-right decomposition.",
        "If we make a first-order markov assumption, the equation becomes",
        "Then we can employ a probabilistic classifier trained with the preceding tag and observations in order to obtain p(ti 1 ti-1o) for local classification.",
        "A common choice for the local probabilistic classifier is maximum entropy classifiers (Berger et al., 1996).",
        "The best tag sequence can be efficiently computed by using a Viterbi decoding algorithm in polynomial time.",
        "The right-to-left decomposition is",
        "These two ways of decomposition are widely used in various tagging problems in natural language processing.",
        "The issue with such decompositions is that you have only the information about the preceding (or following) tags when performing local classification.",
        "From the viewpoint of local classification, we want to give the classifier as much information as possible because the information about neighboring tags is useful in general.",
        "As an example, consider the situation where we are going to annotate a three-word sentence with part-of-speech tags.",
        "Figure 1 shows the four possible ways of decomposition.",
        "They correspond to the following equations:",
        "(a) P(t1 ... t310) = P(t110)P(t21t10)P(t31 t20) (5) (b) P(t1 ... t310) = P(t310)P(t21t30)P(t11 t20) (6) (C) P(t1 ... t310) = P(t110)P(t310)P(t21 t3t10) (7) (d) P(t1 ... t310) = P(t210)P(t11 t20)P(t31 t20) (8) (a) and (b) are the standard left-to-right and right",
        "to-left decompositions.",
        "Notice that in decomposition (c), the local classifier can use the information about the tags on both sides when deciding t2.",
        "If, for example, the second word is difficult to tag (e.g. an unknown word), we might as well take the decomposition structure (c) because the local classifier",
        "(c)",
        "can use rich information when deciding the tag of the most difficult word.",
        "In general if we have an n-word sentence and adopt a first-order markov assumption, we have 2n-1 possible ways of decomposition because each of the n – 1 edges in the corresponding graph has two directions (left-to-right or right-to-left).",
        "Our bidirectional inference method is to consider all possible decomposition structures and choose the “best” structure and tag sequence.",
        "We will show in the next section that this is actually possible in polynomial time by dynamic programming.",
        "As for the training, let us look at the equations of four different decompositions above.",
        "You can notice that there are only four types of local",
        "This means that if we have these four types of local classifiers, we can consider any decomposition structures in the decoding stage.",
        "These local classifiers can be obtained by training with corresponding neighboring tag information.",
        "Training the first two types of classifiers is exactly the same as the training of popular left-to-right and right-to-left sequential classification models respectively.",
        "If we take a second-order markov assumption, we need to train 16 types of local classifiers because each of the four neighboring tags of a classification target has two possibilities of availability.",
        "In general, if we take a k-th order markov assumption, we need to train 22k types of local classifies."
      ]
    },
    {
      "heading": "2.1 Polynomial Time Inference",
      "text": [
        "This section describes an algorithm to find the decomposition structure and tag sequence that give the highest probability.",
        "The algorithm for the first-order case is an adaptation of the algorithm for decoding the best sequence on a bidirectional dependency network introduced by (Toutanova et al., 2003), which originates from the Viterbi decoding algorithm for second-order markov models.",
        "Figure 2 shows a polynomial time decoding algorithm for our bidirectional inference.",
        "It enumerates all possible decomposition structures and tag sequences by recursive function calls, and finds the highest probability sequence.",
        "Polynomial time is achieved by caching.",
        "Note that for each local classification, the function chooses the appropriate local",
        "classifier by taking into account the directions of the adjacent edges of the classification target.",
        "The second-order case is similar but slightly more complex.",
        "Figure 3 shows the algorithm.",
        "The recursive function needs to consider the directions of the four adjacent edges of the classification target, and maintain the directions of the two neighboring edges to enumerate all possible edge directions.",
        "In addition, the algorithm rules out cycles in the structure."
      ]
    },
    {
      "heading": "2.2 Decoding with the Easiest-First Strategy",
      "text": [
        "We presented a polynomial time decoding algorithm in the previous section.",
        "However, polynomial time is not low enough in practice.",
        "Indeed, even the Viterbi decoding of second-order markov models for POS tagging is not practical unless some pruning method is involved.",
        "The computational cost of the bidirectional decoding algorithm presented in the previous section is, of course, larger than that because it enumerates all possible directions of the edges on top of the enumeration of possible tag sequences.",
        "In this section we present a greedy version of the decoding method for bidirectional inference, which",
        "is extremely simple and significantly more efficient than full bidirectional decoding.",
        "Instead of enumerating all possible decomposition structures, the algorithm determines the structure by adopting the easiest-first strategy.",
        "The whole decoding algorithm is given below.",
        "1.",
        "Find the “easiest” word to tag.",
        "2.",
        "Tag the word.",
        "3.",
        "Go back to 1. until all the words are tagged.",
        "We assume in this paper that the “easiest” word to tag is the word for which the classifier outputs the highest probability.",
        "In finding the easiest word, we use the appropriate local classifier according to the availability of the neighboring tags.",
        "Therefore, in the first iteration, we always use the local classifiers trained with no contextual tag information (i.e. (P(ti I o)).",
        "Then, for example, if t3 has been tagged in the first iteration in a three-word sentence, we use P(t21 t30) to compute the probability for tagging t2 in the second iteration (as in Figure 1 (b)).",
        "A naive implementation of this algorithm requires 0(n2) invocations of local classifiers, where n is the number of the words in the sentence, because we need to update the probabilities over the words at each iteration.",
        "However, a k-th order Markov assumption obviously allows us to skip most of the probability updates, resulting in O(kn) invocations of local classifiers.",
        "This enables us to build a very efficient tagger."
      ]
    },
    {
      "heading": "3 Maximum Entropy Classifier",
      "text": [
        "For local classifiers, we used a maximum entropy model which is a common choice for incorporating various types of features for classification problems in natural language processing (Berger et al., 1996).",
        "Regularization is important in maximum entropy modeling to avoid overfitting to the training data.",
        "For this purpose, we use the maximum entropy modeling with inequality constraints (Kazama and Tsujii, 2003).",
        "The model gives equally good performance as the maximum entropy modeling with Gaussian priors (Chen and Rosenfeld, 1999), and the size of the resulting model is much smaller than that of Gaussian priors because most of the parameters become zero.",
        "This characteristic enables us to easily handle the model data and carry out quick decoding, which is convenient when we repetitively perform experiments.",
        "This modeling has one parameter to tune, which is called the width factor.",
        "We tuned this parameter using the development data in each type of experiments.",
        "periments.",
        "Tags are parts-of-speech.",
        "Tag features are not necessarily used in all the models.",
        "For example, “next tag” features cannot be used in left-to-right models."
      ]
    },
    {
      "heading": "4 Experiments",
      "text": [
        "To evaluate the bidirectional inference methods presented in the previous sections, we ran experiments on POS tagging and text chunking with standard English data sets.",
        "Although achieving the best accuracy is not the primary purpose of this paper, we explored useful feature sets and parameter setting by using development data in order to make the experiments realistic."
      ]
    },
    {
      "heading": "4.1 Part-of-speech tagging experiments",
      "text": [
        "We split the Penn Treebank corpus (Marcus et al., 1994) into training, development and test sets as in (Collins, 2002).",
        "Sections 0-18 are used as the training set.",
        "Sections 19-21 are the development set, and sections 22-24 are used as the test set.",
        "All the experiments were carried out on the development set, except for the final accuracy report using the best setting.",
        "For features, we basically adopted the feature set",
        "provided by (Toutanova et al., 2003) except for complex features such as crude company-name detection features because they are specific to the Penn Treebank and we could not find the exact implementation details.",
        "Table 1 lists the feature templates used in our experiments.",
        "We tested the proposed bidirectional methods, conventional unidirectional methods and the bidirectional dependency network proposed by Toutanova (Toutanova et al., 2003) for comparison.",
        "1.",
        "All the models are second-order.",
        "Table 2 shows the accuracy and tagging speed on the development data 2.",
        "Bidirectional inference methods clearly outperformed unidirectional methods.",
        "Note that the easiest-first decoding method achieves equally good performance as full bidirectional inference.",
        "Table 2 also shows that the easiest-last strategy, where we select and tag the most difficult word at each iteration, is clearly a bad strategy.",
        "An example of easiest-first decoding is given below: 1 For dependency network and full bidirectional decoding, we conducted pruning because the computational cost was too large to perform exhaustive search.",
        "We pruned a tag candidate if the zero-th order probability of the candidate P(ti Io) was lower than one hundredth of the zero-th order probability of the most likely tag at the token.",
        "Each token represents Word/PoS/DecodingOrder.",
        "Typically, punctuations and articles are tagged first.",
        "Verbs are usually tagged in later stages because their tags are likely to be ambiguous.",
        "We applied our bidirectional inference methods to the test data.",
        "The results are shown in Table 3.",
        "The table also summarizes the accuracies achieved by several other research efforts.",
        "The best accuracy is 97.24% achieved by bidirectional dependency networks (Toutanova et al., 2003) with a richer set of features that are carefully designed for the corpus.",
        "A perceptron algorithm gives 97.11% (Collins, 2002).",
        "Gimenez and Marquez achieve 97.05% with support vector machines (SVMs).",
        "This result indicates that bidirectional inference with maximum entropy modeling can achieve comparable performance to other state-of-the-art POS tagging methods."
      ]
    },
    {
      "heading": "4.2 Chunking Experiments",
      "text": [
        "The task of chunking is to find non-recursive phrases in a sentence.",
        "For example, a chunker segments the sentence “He reckons the current account deficit will narrow to only 1.8 billion in September” into the following, [NP He] [VP reckons] [NP the current account deficit] [VP will narrow] [PP to] [NP only 1.8 billion] [PP in] [NP September] .",
        "We can regard chunking as a tagging task by converting chunks into tags on tokens.",
        "There are several ways of representing text chunks (Sang and Veen-stra, 1999).",
        "We tested the Start/End representation in addition to the popular IOB2 representation since local classifiers can have fine-grained information on the neighboring tags in the Start/End representation.",
        "For training and testing, we used the data set provided for the CoNLL-2000 shared task.",
        "The training set consists of section 15-18 of the WSJ corpus, and the test set is section 20.",
        "In addition, we made the development set from section 21 3.",
        "We basically adopted the feature set provided in",
        "(Collins, 2002) and used POS-trigrams as well.",
        "Table 4 lists the features used in chunking experiments.",
        "Table 5 shows the results on the development set.",
        "Again, bidirectional methods exhibit better performance than unidirectional methods.",
        "The difference is bigger with the Start/End representation.",
        "Dependency networks did not work well for this chunking task, especially with the Start/End representation.",
        "We applied the best model on the development set in each chunk representation type to the test data.",
        "Table 6 summarizes the performance on the test set.",
        "Our bidirectional methods achieved F-scores of 93.63 and 93.70, which are better than the best F-score (93.48) of the CoNLL-2000 shared task (Sang and Buchholz, 2000) and comparable to those achieved by other state-of-the-art methods."
      ]
    },
    {
      "heading": "5 Discussion",
      "text": [
        "There are some reports that one can improve the performance of unidirectional models by combining outputs of multiple taggers.",
        "Shen et al.",
        "(2003) reported a 4.9% error reduction of supertagging by",
        "pairwise voting between left-to-right and right-to-left taggers.",
        "Kudo et al.",
        "(2001) attained performance improvement in chunking by conducting weighted voting of multiple SVMs trained with distinct chunk representations.",
        "The biggest difference between our approach and such voting methods is that the local classifier in our bidirectional inference methods can have rich information for decision.",
        "Also, voting methods generally need many tagging processes to be run on a sentence, which makes it difficult to build a fast tagger.",
        "Our algorithm can be seen as an ensemble classifier by which we choose the highest probability one among the different taggers with all possible decomposition structures.",
        "Although choosing the highest probability one is seemingly natural and one of the simplest ways for combining the outputs of different taggers, one could use a different method (e.g. summing the probabilities over the outputs which share the same label sequence).",
        "Investigating the methods for combination should be an interesting direction of future work.",
        "As for the computational cost for training, our methods require us to train 22n, types of classifiers when we adopt an nth order markov assumption.",
        "In many cases a second-order model is sufficient because further increase of n has little impact on performance.",
        "Thus the training typically takes four or 16 times as much time as it would take for training a single unidirectional tagger, which looks somewhat expensive.",
        "However, because each type of classifier can be trained independently, the training can be performed completely in parallel and run with the same amount of memory as that for training a single classifier.",
        "This advantage contrasts with the case for CRFs which requires substantial amount of memory and computational cost if one tries to incorporate higher-order features about tag sequences.",
        "Tagging speed is another important factor in building a practical tagger for large-scale text min",
        "ing.",
        "Our inference algorithm with the easiest-first strategy needs no Viterbi decoding unlike MEMMs and CRFs, and makes it possible to perform very fast tagging with high precision."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "We have presented a bidirectional inference algorithm for sequence labeling problems such as POS tagging, named entity recognition and text chunking.",
        "The algorithm can enumerate all possible decomposition structures and find the highest probability sequence together with the corresponding decomposition structure in polynomial time.",
        "We have also presented an efficient bidirectional inference algorithm based on the easiest-first strategy, which gives comparable performance to full bidirectional inference with significantly lower computational cost.",
        "Experimental results of POS tagging and text chunking show that the proposed bidirectional inference methods consistently outperform unidirectional inference methods and our bidirectional MEMMs give comparable performance to that achieved by state-of-the-art learning algorithms including kernel support vector machines.",
        "A natural extension of this work is to replace the maximum entropy modeling, which was used as the local classifiers, with other machine learning algorithms.",
        "Support vector machines with appropriate kernels is a good candidate because they have good generalization performance as a single classifier.",
        "Although SVMs do not output probabilities, the easiest-first method would be easily applied by considering the margins output by SVMs as the confidence of local classification."
      ]
    }
  ]
}
