{
  "info": {
    "authors": [
      "Hiroko Nakanishi",
      "Yusuke Miyao",
      "Jun'ichi Tsujii"
    ],
    "book": "International Workshop on Parsing Technology",
    "id": "acl-W05-1510",
    "title": "Probabilistic Models for Disambiguation of an HPSG-Based Chart Generator",
    "url": "https://aclweb.org/anthology/W05-1510",
    "year": 2005
  },
  "references": [
    "acl-A00-2023",
    "acl-C00-1007",
    "acl-C88-2121",
    "acl-J93-2004",
    "acl-J96-1002",
    "acl-P02-1040",
    "acl-P05-1011",
    "acl-P96-1027",
    "acl-P98-1116",
    "acl-W01-0518",
    "acl-W02-2030",
    "acl-W05-1511"
  ],
  "sections": [
    {
      "text": [
        "Abstract The complicated language in the huge new law has muddied the fight.",
        "We describe probabilistic models for a chart generator based on HPSG.",
        "Within the research field of parsing with lex-icalized grammars such as HPSG, recent developments have achieved efficient estimation of probabilistic models and high-speed parsing guided by probabilistic models.",
        "The focus of this paper is to show that two essential techniques – model estimation on packed parse forests and beam search during parsing – are successfully exported to the task of natural language generation.",
        "Additionally, we report empirical evaluation of the performance of several disambiguation models and how the performance changes according to the feature set used in the models and the size of training data."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Surface realization is the final stage of natural language generation which receives a semantic representation and outputs a corresponding sentence where all words are properly inflected and ordered.",
        "This paper presents log-linear models to address the ambiguity which arises when HPSG (Head-driven Phrase Structure Grammar (Pollard and Sag, 1994)) is applied to sentence generation.",
        "Usually a single semantic representation can be realized as several sentences.",
        "For example, consider the following two sentences generated from the same input.",
        "The language in the huge new law complicated has muddied the fight.",
        "The latter is not an appropriate realization because “complicated” tends to be wrongly interpreted to modify “law”.",
        "Therefore the generator needs to select a candidate sentence which is more fluent and easier to understand than others.",
        "In principle, we need to enumerate all alternative realizations in order to estimate a log-linear model for generation.",
        "It therefore requires high computational cost to estimate a probabilistic model for a wide-coverage grammar because there are considerable ambiguities and the alternative realizations are hard to enumerate explicitly.",
        "Moreover, even after the model has been estimated, to explore all possible candidates in runtime is also expensive.",
        "The same problems also arise with HPSG parsing, and recent studies (Tsuruoka et al., 2004; Miyao and Tsujii, 2005; Ninomiya et al., 2005) proposed a number of solutions including the methods of estimating log-linear models using packed forests of parse trees and pruning improbable candidates during parsing.",
        "The aim of this paper is to apply these techniques to generation.",
        "Since parsing and generation both output the best probable tree under some constraints, we expect that techniques that work effectively in parsing are also beneficial for generation.",
        "First, we enabled estimation of log-linear models with less cost by representing a set of generation trees in a packed forest.",
        "The forest representation was obtained by adopting chart generation (Kay, 1996; Car",
        "roll et al., 1999) where ambiguous candidates are packed into an equivalence class and mapping a chart into a forest in the same way as parsing.",
        "Second, we reduced the search space in runtime by adopting iterative beam search (Tsuruoka and Tsujii, 2004) that efficiently pruned improbable candidates.",
        "We evaluated the generator on the Penn Treebank (Marcus et al., 1993), which is highly reliable corpus consisting of real-world texts.",
        "Through a series of experiments, we compared the performance of several disambiguation models following an existing study (Velldal and Oepen, 2005) and examined how the performance changed according to the size of training data, the feature set, and the beam width.",
        "Comparing the latter half of the experimental results with those on parsing (Miyao and Tsujii, 2005), we investigated similarities and differences between probabilistic models for parsing and generation.",
        "The results indicated that the techniques exported from parsing to generation worked well while the effects were slightly different in detail.",
        "The Nitrogen system (Langkilde and Knight, 1998; Langkilde, 2000) maps semantic relations to a packed forest containing all realizations and selects the best one with a bigram model.",
        "Our method extends their approach in that we can utilize syntactic features in the disambiguation model in addition to the bigram.",
        "From the perspective of using a lexicalized grammar developed for parsing and importing parsing techniques, our method is similar to the following approaches.",
        "The Fergus system (Bangalore and Rambow, 2000) uses LTAG (Lexicalized Tree Adjoining Grammar (Schabes et al., 1988)) for generating a word lattice containing realizations and selects the best one using a trigram model.",
        "White and Baldridge (2003) developed a chart generator for CCG (Combinatory Categorial Grammar (Steedman, 2000)) and proposed several techniques for efficient generation such as best-first search, beam thresholding and chunking the input logical forms (White, 2004).",
        "Although some of the techniques look effective, the models to rank candidates are still limited to simple language models.",
        "Carroll et al.",
        "(1999) developed a chart generator using HPSG.",
        "After the generator outputs all the sentences the grammar allows, the ranking mod",
        "ule (Velldal and Oepen, 2005) selects the best one using alog-linear model.",
        "Their model is trained using only 864 sentences where all realizations can be explicitly enumerated.",
        "As a grammar is extended to support more linguistic phenomena and to achieve higher coverage, the number of alternative realizations increases and the enumeration requires much higher computational cost.",
        "Moreover, using a variety of syntactic features also increases the cost.",
        "By representing a set of realizations compactly with a packed forest, we trained the models with rich features on a large corpus using awide-coverage grammar."
      ]
    },
    {
      "heading": "2 Background",
      "text": [
        "This section describes background of this work including the representation of the input to our generator, the algorithm of chart generation, and probabilistic models for HPSG."
      ]
    },
    {
      "heading": "2.1 Predicate-argument structures",
      "text": [
        "The grammar we adopted is the Enju grammar, which is an English HPSG grammar extracted from the Penn Treebank by Miyao et al.",
        "(2004).",
        "In parsing a sentence with the Enju grammar, semantic relations of words is output included in a parse tree.",
        "The semantic relations are represented by a set of predicate-argument structures (PASs), which in turn becomes the input to our generator.",
        "Figure 1 shows an example input to our generator which corresponds to the sentence “He bought the book.”, which consists of four predicates.",
        "REL expresses the base form of the word corresponding to the predicate.",
        "INDEX expresses a semantic variable to identify each word in the set of relations.",
        "ARG1 and ARG2 express relationships between the predicate and its arguments, e.g., the circled part in Figure 1 shows “he” is the subject of “buy” in this example.",
        "The other constraints in the parse tree are omitted in the input for the generator.",
        "Since PASs abstract",
        "away superficial differences, generation from a set of PASs contains ambiguities in the order of modifiers like the example in Section 1 or the syntactic categories of phrases.",
        "For example, the PASs in Figure 1 can generate the NP, “the book he bought.” When processing the input PASs, we split a single PAS into a set of relations like (1) representing the first PAS in Figure 1.",
        "This representation is very similar to the notion of HLDS (Hybrid Logic Dependency Semantics) employed by White and Baldridge (2003), which is a related notion to MRS (Minimal Recursion Semantics) employed by Carroll et al.",
        "(1999).",
        "The most significant difference between our current input representation (not PAS itself) and the other representations is that each word corresponds to exactly one PAS while words like infinitival “to ” have no semantic relations in HLDS.",
        "This means that “The book was bought by him.” is not generated from the same PASs as Figure 1 because there must be the PASs for “was” and “by” to generate the sentence.",
        "We currently adopt this constraint for simple implementation, but it is possible to use the input where PASs for words like “to ” are removed.",
        "As proposed and implemented in the previous studies (Carroll et al., 1999; White and Baldridge, 2003), handling such inputs is feasible by modification in chart generation described in the following section.",
        "The algorithms proposed in this paper can be integrated with their algorithms although the implementation is left for future research."
      ]
    },
    {
      "heading": "2.2 Chart generation",
      "text": [
        "Chart generation is similar to chart parsing, but what an edge covers is the semantic relations associated with it.",
        "We developed a CKY-like generator which deals with binarized grammars including the Enju.",
        "Figure 2 shows a chart for generating “He bought the book.” First, lexical edges are assigned to each PAS.",
        "Then the following loop is repeated from to the cardinality of the input.",
        "Apply binary rules to existing edges to generate new edges holding PASs.",
        "Apply unary rules to the new edges generated in the previous process.",
        "Store the edges generated in the current loop into the chart'.",
        "In Figure 2, boxes in the chart represent , which contain edges covering the same PASs, and solid arrows represent rule applications.",
        "Each edge is packed into an equivalence class and stored in a cell.",
        "Equivalence classes are identified with their signs and the semantic relations they cover.",
        "Edges with different strings (e.g., NPs associated with “a big white dog” and “a white big dog”) can be packed into the same equivalence class if they have the same feature structure.",
        "In parsing, each edge must be combined with its adjacent edges.",
        "Since there is no such constraint in generation, the combinations of edges easily explodes.",
        "We followed two partial solutions to this problem by Kay (1996).",
        "The one is indexing edges with the semantic variables (e.g., circled in Figure 2).",
        "For example, since the SUBCAT feature of the edge for “bought the book” specifies that it requires an NP with an index , we can find the required edges efficiently by checking the edges indexed with .",
        "The other is prohibiting proliferation of grammatically correct, but unusable sub-phrases.",
        "During generating the sentence “Newspaper reports said that the tall young Polish athlete ran fast”, sub-phrases with incomplete modifiers such as “the tall young athlete” or “the young Polish athlete” do not construct the final output, but slow down the generation because they can be combined with the rest of the input to construct grammatically correct phrases or sentences.",
        "Carroll et al.",
        "(1999) and White (2004) proposed different algorithms to address the same problem.",
        "We adopted Kay’s simple solution in the current ongoing work, but logical form chunking proposed by White is also applicable to our system."
      ]
    },
    {
      "heading": "2.3 Probabilistic models for generation with HPSG",
      "text": [
        "Some existing studies on probabilistic models for HPSG parsing (Malouf and van Noord, 2004; Miyao and Tsujii, 2005) adopted log-linear models (Berger et al., 1996).",
        "Since log-linear models allow us to 'To introduce an edge with no semantic relations as mentioned in the previous section, we need to combine the edges with edges having no relations.",
        "use multiple overlapping features without assuming independence among features, the models are suitable for HPSG parsing where feature structures with complicated constraints are involved and dividing such constraints into independent features is difficult.",
        "Log-linear models have also been used for HPSG generation by Velldal and Oepen (2005).",
        "In their method, the probability of a realization given a semantic representation is formulated as where is a feature function observed in ,is the weight of , and represents the set of all possible realizations of .",
        "To estimate , pairs of are needed, where is the most preferred realization for .",
        "Their method first automatically generates a paraphrase treebank, where are enumerated.",
        "Then, a log-linear model is trained with this treebank, i.e., each is estimated so as to maximize the likelihood of training data.",
        "As well as features used in their previous work on statistical parsing (Toutanova and Manning, 2002), an additional feature that represents sentence probabilities of 4-gram model is incorporated.",
        "They showed that the combined model outperforms the model without the 4-gram feature."
      ]
    },
    {
      "heading": "3 Disambiguation models for chart generation",
      "text": []
    },
    {
      "heading": "3.1 Packed representation of a chart",
      "text": [
        "As mentioned in Section 2.3, to estimate log-linear models for HPSG generation, we need all alternative derivation trees generated from the input .",
        "However, the size of is exponential to the cardinality of and they cannot be enumerated explicitly.",
        "This problem is especially serious in wide-coverage grammars because such grammars are designed to cover a wide variety of linguistic phenomena, and thus produce many realizations.",
        "In this section, we present a method of making the estimation tractable which is similar to a technique developed for HPSG parsing.",
        "When estimating log-linear models, we map in the chart into a packed representation called afea-ture forest, intuitively an “AND-OR” graph.",
        "Miyao and Tsujii (2005) represented a set of HPSG parse",
        "trees using a feature forest and succeeded in estimating given a sentence and a parse tree using dynamic programming without unpacking the chart.",
        "If is represented in a feature forest in generation, can also be estimated in the same way.",
        ", and are respectively the mother edge, the left daughter, and the right daughter in a single rule application.",
        "Nodes connected by dotted lines represent OR-nodes, i.e., equivalence classes in the same cell.",
        "Feature functions are assigned to OR-nodes.",
        "By doing so, we can capture important features for disambiguation in HPSG, i.e., combinations of a mother and its daughter(s).",
        "Nodes connected by solid arrows represent AND-nodes corresponding to the daughters of the parent node.",
        "By using feature forests, we can efficiently pack the node generated more than once in the set of trees.",
        "For example, the nodes corresponding to “the book” in “He bought the book.” and “the book he bought” are identical and described only once in the forest.",
        "The merits of using forest representations in generation instead of lattices or simple enumeration are discussed thoroughly by Langkilde (2000)."
      ]
    },
    {
      "heading": "3.2 Model variation",
      "text": [
        "We implemented and compared four different disambiguation models as Velldal and Oepen (2005) did.",
        "Throughout the models, we assigned a score called figure-of-merit (FOM) on each edge and calculated the FOM of a mother edge by dynamic programming.",
        "FOM represents the log probability of an edge which is not normalized.",
        "Baseline model We started with a simple baseline model, , where is a PAS in the input semantic representation and is a lexical entry assigned to .",
        "The FOM of the mother edge is computed simply as .All the other models use this model as a reference distribution (Miyao and Tsujii, 2005), i.e., is estimated to maximize the likelihood of the training data , which is calculated with the following equation.",
        "Figure 3 shows a feature forest representing the chart in Figure 2.",
        "Each node corresponds to either a lexical entry or a tuple of where",
        "Bigram model The second model is a log-linear model with only one feature that corresponds to bigram probabilities for adjacent word-pairs in the sentence.",
        "We estimated a bigram language model using a part of the British National Corpus as training data2.",
        "In the chart each edge is identified with the first and last word in the phrase as well as its feature structure and covered relations.",
        "When two edges are combined, is computed as , where is the weight of the bigram feature, is the last word of the left daughter, is the first word of the right daughter, and represents a log probability of a bigram.",
        "Contrary to the method of Velldal and Oepen (2005) where the input is a set of sentences and is computed on a whole sentence, we computed on each phrase as Langkilde (2000) did The language model can be extended to gram if each edge holds last words although the number of edges increase.",
        "Syntax model The third model incorporates a variety of syntactic features and lexical features where is computed as .",
        "The feature set consists of combinations of atomic features shown in Table 1.",
        "The atomic features and their combinations are imported from the previous work on HPSG parsing (Miyao and Tsujii, 2005).",
        "We defined three types of feature combinations to capture the characteristics of binary and unary rule applications and root edges as described below.",
        "An example of extracted features is shown in Figure 4 where “bought the book” is combined with its subject “he”.",
        "Since the mother edge is a root edge, two features ( and ) are extracted from this node.",
        "In the feature, the phrasal category SYM becomes S (sentence), the head word",
        "SPAN the number of words dominated by the phrase SYM the symbol of the phrasal category (e.g., NP, VP) WORD the surface form of the head word LE the lexical entry assigned to the head word WORD becomes “bought”, and its lexical entry LE becomes that of transitive verbs.",
        "In the feature, properties of the left and right daughters are instantiated in addition to those of the mother edge.",
        "Combined model The fourth and final model is the combination of the syntax model and the bigram model.",
        "This model is obtained by simply adding the bigram feature to the syntax model."
      ]
    },
    {
      "heading": "4 Iterative beam search",
      "text": [
        "For efficient statistical generation with a wide-coverage grammar, we reduce the search space by pruning edges during generation.",
        "We use beam search where edges with low FOMs are pruned during generation.",
        "We use two parameters, and : in each cell, the generator prunes except for top edges, and edges whose FOMs are lower than that of the top edge are also pruned.",
        "Another technique for achieving efficiency is iterative generation which is adopted from iterative CKY parsing (Tsuruoka and Tsujii, 2004).",
        "When beam width is too narrow, correct edges to constitute a correct sentence may be discarded during gen",
        "eration and it causes degradation in coverage, i.e., the ratio the generator successfully outputs a sentence.",
        "The appropriate beam width depends on inputs and cannot be predefined.",
        "In iterative generation, the process of chart generation is repeated with increasing beam width until a complete sentence is generated or the beam width exceeds the predefined maximum."
      ]
    },
    {
      "heading": "5 Experiments",
      "text": [
        "In this section, we present five experiments: comparison among four models described in Section 3.2, syntax models with different features, different corpus sizes, different beam widths, and the distribution of generation time.",
        "The bigram model was trained using 100,000 sentences in the BNC.",
        "The unigram and syntax model was trained using Section 02-21 of the WSJ portion of the Penn Treebank (39,832 sentences).",
        "Section 22 (1,700 sentences) and 23 (2,416 sentences) were used as the development and test data, respectively.",
        "Because the generator is still slow to generate long sentences, sentences with more than 20 words were not used.",
        "We converted the treebank into HPSG-style derivation trees by the method of Miyao et al.",
        "(2004) and extracted the semantic relations, which are used as the inputs to the generator.",
        "The sentences where this conversion failed were also eliminated although such sentences were few (about 0.3% of the eliminated data).",
        "The resulting training data consisted of 18,052 sentences and the test data consisted of 1,006 sentences.",
        "During training, uncovered sentences – where the lexicon does not include the lexical entry to construct correct derivation – were also ignored, while such sentences remained in the test data.",
        "The final training data we can utilize consisted of 15,444 sentences.",
        "The average sentence length of the test data was 12.4, which happens to be close to that of Velldal and Oepen (2005) though the test data is different.",
        "The accuracy of the generator outputs was evaluated by the BLEU score (Papineni et al., 2001), which is commonly used for the evaluation of machine translation and recently used for the evaluation of generation (Langkilde-Geary, 2002; Velldal and Oepen, 2005).",
        "BLEU is the weighted average of n-gram precision against the reference sentence.",
        "We used the sentences in the Penn Treebank as the reference sentences.",
        "The beam width was increased from to in two steps.",
        "The parameters were empirically determined using the development set.",
        "All the experiments were conducted on AMD Opteron servers with a 2.0-GHz CPU and 12-GB memory.",
        "Table 2 shows the average generation time and the accuracy of the models presented in Section 3.",
        "The generation time includes time for the input for which the generator could not output a sentence, while the accuracy was calculated only in the case of successful generation.",
        "All models succeeded in generation for over 90% of the test data.",
        "Contrary to the result of the Velldal and Oepen (2005), the syntax model outperformed the combined model.",
        "We observed the same result when we varied the parameters for beam thresholding.",
        "This is possibly just because the language model was not trained enough as that of the previous research (Velldal and Oepen, 2005) where the model was 4-gram and trained with the entire BNC3.",
        "Although the accuracy shown in Table 2 was lower than that of Velldal and Oepen, there is little point in direct comparison between the accuracy of the two systems because the settings are considerably different in terms of the grammar, the input representation, and the training and test set.",
        "The algorithm we proposed does not depend on our specific setting and can be integrated and evaluated within their setting.",
        "We used larger training data (15,444 sentences) and test data (1,006 sentences), compared to their treebank of 864 sentences where the log-linear models were evaluated by cross validation.",
        "This is the advantage of adopting feature forests to efficiently estimate the log-linear models.",
        "Figure 5 shows the relationship between the size of training data and the accuracy.",
        "All the following experiments were conducted on the syntax model.",
        "The accuracy seems to saturate around 4000 sentences, which indicates that a small training set is enough to train the current syntax model and that future development.",
        "we could use an additional feature set to improve the accuracy.",
        "Similar results are reported in parsing (Miyao and Tsujii, 2005) while the accuracy saturated around 16,000 sentences.",
        "When we use more complicated features or train the model with longer sentences, possibly the size of necessary training data will increase.",
        "Table 3 shows the performance of syntax models with different feature sets.",
        "Each row represents a model where one of the atomic features in Table 1 was removed.",
        "The “None” row is the baseline model.",
        "The rightmost column represents the difference of the accuracy from the model trained with all features.",
        "SYM, LE, and COMMA features had a significant influence on the performance.",
        "These results are different from those in parsing reported by Miyao and Tsujii (2005) where COMMA and SPAN especially contributed to the accuracy.",
        "This observation implies that there is still room for improvement by tuning the combination of features for generation.",
        "We compared the performance of the generator with different beam widths to investigate the effect of iterative beam search.",
        "Table 4 shows the results when we varied , which is the number of edges, while thresholding by FOM differences is disabled, and Table 5 shows the results when we varied only ,which is the FOM difference.",
        "Intuitively, beam search may decrease the accuracy because it cannot explore all possible candi",
        "dates during generation.",
        "Iterative beam search is more likely to decrease the accuracy than ordinary beam search.",
        "However, the results show that the accuracy did not drastically decrease at small widths.",
        "Moreover, the accuracy of iterative beam search was almost the same as that of .",
        "On the other hand, generation time significantly increased as or increased, indicating that iterative beam search efficiently discarded unnecessary edges without loosing the accuracy.",
        "Although the coverage increases as the beam width increases, the coverage at or is lower than that of iterative beam search (Table 2)4.",
        "Finally, we examined the distribution of generation time without the limitation of sentence length in order to investigate the strategy to improve the efficiency of the generator.",
        "Figure 6 is a histogram of generation time for 500 sentences randomly selected from the development set, where 418 sentences were successfully generated and the average BLEU score was 0.705.",
        "The average sentence length was 22.1 and the maximum length was 60, and the average generation time was 27.9 sec, which was much longer than that for short sentences.",
        "It shows that a few sentences require extremely long time for generation although about 70% of the sentences were generated within 5 sec.",
        "Hence, the average time possibly decreases if we investigate what kind of sentences require especially long time and improve the",
        "algorithm to remove such time-consuming fractions.",
        "The investigation is left for future research.",
        "The closest empirical evaluations on the same task is that of Langkilde-Geary (2002) which reported the performance of the HALogen system while the approach is rather different.",
        "Handwritten mapping rules are used to make a forest containing all candidates and the best candidate is selected using the bigram model.",
        "The performance of the generator was evaluated on Section 23 of the Penn Treebank in terms of the number of ambiguities, generation time, coverage, and accuracy.",
        "Several types of input specifications were examined in order to measure how specific the input should be for generating valid sentences.",
        "One of the specifications named “permute, no dir” is similar to our input in that the order of modifiers is not determined at all.",
        "The generator produced outputs for 82.7% of the inputs with average generation time 30.0 sec and BLEU score 0.757.",
        "The results of our last experiment are comparable to these results though the used section is different."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "We presented a chart generator using HPSG and developed log-linear models which we believe was essential to develop a sentence generator.",
        "Several techniques developed for parsing also worked in generation.",
        "The introduced techniques were an estimation method for log-linear models using a packed forest representation of HPSG trees and iterative beam search.",
        "The system was evaluated through application to real-world texts.",
        "The experimental results",
        "showed that the generator was able to output a sentence for over 90% of the test data when the data was limited to short sentences.",
        "The accuracy was significantly improved by incorporating syntactic features into the log-linear model.",
        "As future work we intend to tune the feature set for generation.",
        "We also plan to further increase the efficiency of the generator so as to generate longer sentences."
      ]
    }
  ]
}
