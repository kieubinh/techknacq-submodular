{
  "info": {
    "authors": [
      "Rajhans Samdani",
      "Ming-Wei Chang",
      "Dan Roth"
    ],
    "book": "NAACL",
    "id": "acl-N12-1087",
    "title": "Unified Expectation Maximization",
    "url": "https://aclweb.org/anthology/N12-1087",
    "year": 2012
  },
  "references": [
    "acl-C96-2141",
    "acl-D10-1001",
    "acl-D10-1125",
    "acl-H05-1010",
    "acl-J03-1002",
    "acl-J93-2003",
    "acl-J94-2001",
    "acl-N10-1083",
    "acl-P00-1056",
    "acl-P04-1061",
    "acl-P04-1062",
    "acl-P06-1065",
    "acl-P06-2019",
    "acl-P07-1036",
    "acl-P08-1112",
    "acl-P09-1039",
    "acl-P09-1057",
    "acl-P11-1008",
    "acl-W04-2401",
    "acl-W09-1110",
    "acl-W10-2902"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We present a general framework containing a graded spectrum of Expectation Maximization (EM) algorithms called Unified Expectation Maximization (UEM.)",
        "UEM is parameterized by a single parameter and covers existing algorithms like standard EM and hard EM, constrained versions of EM such as Constraint-Driven Learning (Chang et al., 2007) and Posterior Regularization (Ganchev et al., 2010), along with a range of new EM algorithms.",
        "For the constrained inference step in UEM we present an efficient dual projected gradient ascent algorithm which generalizes several dual decomposition and Lagrange relaxation algorithms popularized recently in the NLP literature (Ganchev et al., 2008; Koo et al., 2010; Rush and Collins, 2011).",
        "UEM is as efficient and easy to implement as standard EM.",
        "Furthermore, experiments on POS tagging, information extraction, and word-alignment show that often the best performing algorithm in the UEM family is a new algorithm that wasn't available earlier, exhibiting the benefits of the UEM framework."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Expectation Maximization (EM) (Dempster et al., 1977) is inarguably the most widely used algorithm for unsupervised and semi-supervised learning.",
        "Many successful applications of unsupervised and semi-supervised learning in NLP use EM including text classification (McCallum et al., 1998; Nigam et al., 2000), machine translation (Brown et al., 1993), and parsing (Klein and Manning, 2004).",
        "Recently, EM algorithms which incorporate constraints on structured output spaces have been proposed (Chang et al., 2007; Ganchev et al., 2010).",
        "Several variations of EM (e.g. hard EM) exist in the literature and choosing a suitable variation is often very task-specific.",
        "Some works have shown that for certain tasks, hard EM is more suitable than regular EM (Spitkovsky et al., 2010).",
        "The same issue continues in the presence of constraints where Posterior Regularization (PR) (Ganchev et al., 2010) corresponds to EM while Constraint-Driven Learning (CoDL)1 (Chang et al., 2007) corresponds to hard EM.",
        "The problem of choosing between EM and hard EM (or between PR and CoDL) remains elusive, along with the possibility of simple and better alternatives, to practitioners.",
        "Unfortunately, little study has been done to understand the relationships between these variations in the NLP community.",
        "In this paper, we approach various EM-based techniques from a novel perspective.",
        "We believe that ?EM or Hard-EM??",
        "and ?PR or CoDL??",
        "are not the right questions to ask.",
        "Instead, we present a unified framework for EM, Unified EM (UEM), that covers many EM variations including the constrained cases along with a continuum of new ones.",
        "UEM allows us to compare and investigate the properties of EM in a systematic way and helps find better alternatives.",
        "The contributions of this paper are as follows: 1.",
        "We propose a general framework called Unified Expectation Maximization (UEM) that presents a continuous spectrum of EM algorithms parameterized by a simple temperature-like tuning parameter.",
        "The framework covers both constrained and unconstrained EM algorithms.",
        "UEM thus connects EM, hard EM, PR, and CoDL so that the relation between different algorithms can be better understood.",
        "It also enables us to find new EM algorithms.",
        "hard constraints as well as soft constraints in EM.",
        "In this paper, we refer to CoDL only as the EM framework with hard constraints.",
        "a dual projected subgradient ascent algorithm that generalizes several dual decomposition and Lagrange relaxation algorithms (Bertsekas, 1999) introduced recently in NLP (Ganchev et al., 2008; Rush and Collins, 2011).",
        "3.",
        "We provide a way to implement a family of EM algorithms and choose the appropriate one, given the data and problem setting, rather than a single EM variation.",
        "We conduct experiments on unsupervised POS tagging, unsupervised word-alignment, and semi-supervised information extraction and show that choosing the right UEM variation outperforms existing EM algorithms by a significant margin."
      ]
    },
    {
      "heading": "2 Preliminaries",
      "text": [
        "Let x denote an input or observed features and h be a discrete output variable to be predicted from a finite set of possible outputs H(x).",
        "Let P?",
        "(x,h) be a probability distribution over (x,h) parameterized by ?.",
        "Let P?",
        "(h|x) refer to the conditional probability of h given x.",
        "For instance, in part-of-speech tagging, x is a sentence, h the corresponding POS tags, and ?",
        "could be an HMM model; in word-alignment, x can be an English-French sentence pair, h the word alignment between the sentences, and ?",
        "the probabilistic alignment model.",
        "Let ?",
        "(h = h?)",
        "be the Kronecker-Delta distribution centered at h?, i.e., it puts a probability of 1 at h?",
        "and 0 elsewhere.",
        "In the rest of this section, we review EM and constraints-based learning with EM."
      ]
    },
    {
      "heading": "2.1 EM Algorithm",
      "text": [
        "To obtain the parameter ?",
        "in an unsupervised way, one maximizes log-likelihood of the observed data:",
        "technique for learning ?, which maximizes a tight lower bound onL(?).",
        "While there are a few different styles of expressing EM, following the style of (Neal and Hinton, 1998), we define",
        "where q is a posterior distribution over H(x) and KL(p1, p2) is the KL divergence between two distributions p1 and p2.",
        "Given this formulation, EM can be shown to maximize F via block coordinate ascent alternating over q (E-step) and ?",
        "(M-step) (Neal and Hinton, 1998).",
        "In particular, the E-step for EM can be written as",
        "where Q is the space of all distributions.",
        "While EM produces a distribution in the E-step, hard EM is thought of as producing a single output given by",
        "However, one can also think of hard EM as producing a distribution given by q = ?",
        "(h = h?).",
        "In this paper, we pursue this distributional view of both EM and hard EM and show its benefits.",
        "EM for Discriminative Models EM-like algorithms can also be used in discriminative settings (Bellare et al., 2009; Ganchev et al., 2010) specifically for semi-supervised learning (SSL.)",
        "Given some labeled and unlabeled data, such algorithms maximize a modified F (?, q) function:",
        "where, q, as before, is a probability distribution over H(x), Lc(?)",
        "is the conditional log-likelihood of the labels given the features for the labeled data, and c1 and c2 are constants specified by the user; the KL divergence is measured only over the unlabeled data.",
        "The EM algorithm in this case has the same E-step as unsupervised EM, but the M-step is different.",
        "The M-step is similar to supervised learning as it finds ?",
        "by maximizing a regularized conditional likelihood of the data w.r.t.",
        "the labels ?",
        "true labels are used for labeled data and ?soft?",
        "pseudo labels based on q are used for unlabeled data."
      ]
    },
    {
      "heading": "2.2 Constraints in EM",
      "text": [
        "It has become a common practice in the NLP community to use constraints on output variables to guide inference.",
        "Few of many examples include type constraints between relations and entities (Roth and Yih, 2004), sentential and modifier constraints during sentence compression (Clarke and Lapata, 2006), and agreement constraints between word-alignment directions (Ganchev et al., 2008) or various parsing models (Koo et al., 2010).",
        "In the con",
        "text of EM, constraints can be imposed on the posterior probabilities, q, to guide the learning procedure (Chang et al., 2007; Ganchev et al., 2010).",
        "In this paper, we focus on linear constraints over h (potentially non-linear over x.)",
        "This is a very general formulation as it is known that all Boolean constraints can be transformed into sets of linear constraints over binary variables (Roth and Yih, 2007).",
        "Assume that we have m linear constraints on outputs where the kth constraint can be written as",
        "and a vector b as bT = [b1, .",
        ".",
        ".",
        ", bm], we write down the set of all feasible2 structures as",
        "Constraint-Driven Learning (CoDL) (Chang et al., 2007) augments the E-step of hard EM (4) by imposing these constraints on the outputs.",
        "Constraints on structures can be relaxed to expectation constraints by requiring the distribution q to satisfy them only in expectation.",
        "Define expectation w.r.t.",
        "a distribution q over H(x) as Eq[Uh] =?",
        "h?H(x) q(h)Uh.",
        "In the expectation constraints setting, q is required to satisfy: Eq[Uh] ?",
        "b .",
        "The space of distributions Q can be modified as:",
        "Augmenting these constraints into the E-step of EM (3), gives the Posterior Regularization (PR) framework (Ganchev et al., 2010).",
        "In this paper, we adopt the expectation constraint setting.",
        "Later, we show that UEM naturally includes and generalizes both PR and CoDL."
      ]
    },
    {
      "heading": "3 Unified Expectation Maximization",
      "text": [
        "We now present the Unified Expectation Maximization (UEM) framework which captures a continuum of (constrained and unconstrained) EM algorithms 2Note that this set is a finite set of discrete variables not to be confused with a polytope.",
        "Polytopes are also specified as {z|Az ?",
        "d} but are over real variables whereas h is discrete.",
        "Algorithm 1 The UEM algorithm for both the generative (G) and discriminative (D) cases.",
        "including EM and hard EM by modulating the entropy of the posterior.",
        "A key observation underlying the development of UEM is that hard EM (or CoDL) finds a distribution with zero entropy while EM (or PR) finds a distribution with the same entropy as P?",
        "(or close to it).",
        "Specifically, we modify the objective of the E-step of EM (3) as",
        "In other words, UEM projects P?",
        "(h|x) on the space of feasible distributions Q w.r.t.",
        "a metric3 KL(?, ?",
        "; ?)",
        "to obtain the posterior q.",
        "By simply varying ?, UEM changes the metric of projection and obtains different variations of EM including EM (PR, in the presence of constraints) and hard EM (CoDL.)",
        "The M-step for UEM is exactly the same as EM (or discriminative EM.)",
        "The UEM Algorithm: Alg.",
        "1 shows the UEM algorithm for both the generative (G) and the discriminative (D) case.",
        "We refer to the UEM algorithm with parameter ?",
        "as UEM?",
        "."
      ]
    },
    {
      "heading": "3.1 Relationship between UEM and Other EM Algorithms",
      "text": [
        "The relation between unconstrained versions of EM has been mentioned before (Ueda and Nakano, 1998; Smith and Eisner, 2004).",
        "We show that the relationship takes novel aspects in the presence of constraints.",
        "In order to better understand different UEM variations, we write the UEM E-step (6) explicitly as an optimization problem:",
        "We discuss below, both the constrained and the unconstrained cases.",
        "Tab.",
        "1 summarizes different EM algorithms in the UEM family.",
        "The E-step in this case, computes a q obeying only the simplex constraints:",
        "For ?",
        "= 1, UEM minimizes KL(q, P?",
        "(h|x); 1) which is the same as minimizing KL(q, P?",
        "(h|x)) as in the standard EM (3).",
        "For ?",
        "= 0, UEM",
        "which is a linear programming (LP) problem.",
        "Due to the unimodularity of the simplex constraints (Schri-jver, 1986), this LP outputs an integral q =",
        "which is the same as hard EM (4).",
        "It has already been noted in the literature (Kearns et al., 1997; Smith and Eisner, 2004; Hofmann, 2001) that this formulation (corresponding to our ?",
        "= 0) is the same as hard EM.",
        "In fact, for ?",
        "?",
        "0, UEM stays the same as hard EM because of negative penalty on the entropy.",
        "The range ?",
        "?",
        "(0, 1) has not been discussed in the literature, to the best of our knowledge.",
        "In Sec. 5, we show the impact of using UEM?for ?",
        "?",
        "{0, 1}.",
        "Lastly, the range of ?",
        "from?",
        "to 1 has been used in deterministic annealing for EM (Rose, 1998; Ueda and Nakano, 1998; Hofmann, 2001).",
        "However, the focus of deterministic annealing is solely to solve the standard EM while avoiding local maxima problems.",
        "UEM and Posterior Regularization (?",
        "= 1) For ?",
        "= 1, UEM solves arg minq?QKL (q, P?",
        "(h|x)) which is the same as Posterior Regularization (Ganchev et al., 2010).",
        "UEM and CoDL (?",
        "= ??)",
        "When ?",
        "?",
        "??",
        "then due to an infinite penalty on the entropy of the",
        "posterior, the entropy must become zero.",
        "Thus, now the E-step, as expressed by Eq.",
        "(8), can be written as",
        "s.t.",
        "Uh ?",
        "b , which is the same as CoDL.",
        "This combinatorial maximization can be solved using the Viterbi algorithm in some cases or, in general, using Integer Linear Programming (ILP.)"
      ]
    },
    {
      "heading": "3.2 UEM with ? ? [0, 1]",
      "text": [
        "Tab.",
        "1 lists different EM variations and their associated values ?.",
        "This paper focuses on values of ?",
        "between 0 and 1 for the following reasons.",
        "First, the E-step (8) is non-convex for ?",
        "< 0 and hence computationally expensive; e.g., hard EM (i.e. ?",
        "= ??)",
        "requires ILP inference.",
        "For ?",
        "?",
        "0, (8) is a convex optimization problem which can be solved exactly and efficiently.",
        "Second, for ?",
        "= 0, the E-step solves",
        "which is an LP-relaxation of hard EM (Eq.",
        "(4) and (9)).",
        "LP relaxations often provide a decent proxy to ILP (Roth and Yih, 2004; Martins et al., 2009).",
        "Third, ?",
        "?",
        "[0, 1] covers standard EM/PR.",
        "The modified KL divergence can be related to standard KL divergence as KL(q, P?",
        "(h|x); ?)",
        "=",
        "mizes the former during the E-step, while Standard EM (3) minimizes the latter.",
        "The additional term (1 ?",
        "?",
        ")H(q) is essentially an entropic prior on the posterior distribution q which can be used to regularize the entropy as desired.",
        "For ?",
        "< 1, the regularization term penalizes the entropy of the posterior thus reducing the probability mass on the tail of the distribution.",
        "This is significant, for instance, in unsupervised structured prediction where the tail can carry a substantial amount of probability mass as the output space is massive.",
        "This notion aligns with the observation of (Spitkovsky et al., 2010) who criticize EM for frittering away too much probability mass on unimportant outputs while showing that hard EM does much better in PCFG parsing.",
        "In particular, they empirically show that when initialized with a ?good?",
        "set of parameters obtained by supervised learning, EM drifts away (thus losing accuracy) much farther than hard-EM."
      ]
    },
    {
      "heading": "4 Solving Constrained E-step with Lagrangian Dual",
      "text": [
        "In this section, we discuss how to solve the E-step (8) for UEM.",
        "It is a non-convex problem for ?",
        "< 0; however, for ?",
        "= ??",
        "(CoDL) one can use ILP solvers.",
        "We focus here on solving the E-step for ?",
        "?",
        "0 for which it is a convex optimization problem, and use a Lagrange relaxation algorithm (Bertsekas, 1999).",
        "Our contributions are two fold: ?",
        "We describe an algorithm for UEM with constraints that is as easy to implement as PR or CoDL.",
        "Existing code for constrained EM (PR or CoDL) can be easily extended to run UEM.",
        "?",
        "We solve the E-step (8) using a Lagrangian dual-based algorithm which performs projected subgradient-ascent on dual variables.",
        "Our algorithm covers Lagrange relaxation and dual decomposition techniques (Bertsekas, 1999) which were recently popularized in NLP (Rush and Collins, 2011; Rush et al., 2010; Koo et al., 2010).",
        "Not only do we extend the algorithmic framework to a continuum of algorithms, we also allow, unlike the aforementioned works, general inequality constraints over the output variables.",
        "Furthermore, we establish new and interesting connections between existing constrained inference techniques."
      ]
    },
    {
      "heading": "4.1 Projected Subgradient Ascent with Lagrangian Dual",
      "text": [
        "We provide below a high-level view of our algorithm, omitting the technical derivations due to lack of space.",
        "To solve the E-step (8), we introduce dual variables ?",
        "?",
        "one for each expectation constraint in Q.",
        "The subgradient O?",
        "of the dual of Eq.",
        "(8) w.r.t.",
        "?",
        "is given by",
        "For ?",
        "= 0, the q above is not well defined and so we take the limit ?",
        "?",
        "0 in (12) and since lp norm approaches the max-norm as p?",
        "?, this yields",
        "We combine both the ideas by setting q(h) =",
        "Alg.",
        "2 shows the overall optimization scheme.",
        "The dual variables for inequality constraints are restricted to be positive and hence after a gradient update, negative dual variables are projected to 0.",
        "Note that for ?",
        "= 0, our algorithm is a Lagrange relaxation algorithm for approximately solving the E-step for CoDL (which uses exact arg max inference).",
        "Lagrange relaxation has been recently shown to provide exact and optimal results in a large number of cases (Rush and Collins, 2011).",
        "This shows that our range of algorithms is very broad ?",
        "it includes PR and a good approximation to CoDL.",
        "Overall, the required optimization (8) can be solved efficiently if the expected value computation in the dual gradient (Eq.",
        "(11)) w.r.t.",
        "the posterior q in the primal (Eq (14)) can be performed efficiently.",
        "In cases where we can enumerate the possible outputs h efficiently, e.g. multi-class classification, we",
        "1: Initialize and normalize q; initialize ?",
        "= 0.",
        "2: for t = 0, .",
        ".",
        ".",
        ", R or until convergence do 3: ??",
        "max (?+ ?t (Eq[Uh]?",
        "b) , 0) 4: q(h) = G(h, P?t(?|x), ?TU, ?)",
        "5: end for",
        "can compute the posterior probability q explicitly using the dual variables.",
        "In cases where the output space is structured and exponential in size, e.g. word alignment, we can optimize (8) efficiently if the constraints and the model P?",
        "(h|x) decompose in the same way.",
        "To elucidate, we give a more concrete example in the next section."
      ]
    },
    {
      "heading": "4.2 Projected Subgradient based Dual Decomposition Algorithm",
      "text": [
        "Solving the inference (8) using Lagrangian dual can often help us decompose the problem into components and handle complex constraints in the dual space as we show in this section.",
        "Suppose our task is to predict two output variables h1 and h2 coupled via linear constraints.",
        "Specifically, they",
        "The application of Alg.",
        "2 results in a dual decomposition scheme which is described in Alg.",
        "3.",
        "Note that in the absence of inequality constraints and for ?",
        "= 0, our algorithm reduces to a simpler dual decomposition algorithm with agreement constraints described in (Rush et al., 2010; Koo et al., 2010).",
        "For ?",
        "= 1 with agreement constraints, our algorithm specializes to an earlier proposed technique by (Ganchev et al., 2008).",
        "Thus our algo",
        "agreement constraints on the same spectrum.",
        "Moreover, dual-decomposition is just a special case of Lagrangian dual-based techniques.",
        "Hence Alg.",
        "2 is more broadly applicable (see Sec. 5).",
        "Lines 6-9 show that the required computation is decomposed over each sub-component.",
        "Thus if computing the posterior and expected values of linear functions over each subcomponent is easy, then the algorithm works efficiently.",
        "Consider the case when constraints decompose linearly over h and each component is modeled as an HMM with ?S as the initial state distribution, ?E as em-mision probabilities, and ?T as transition probabilities.",
        "An instance of this is word alignment over language pair (S, T ) modeled using an HMM augmented with agreement constraints which constrain alignment probabilities in one direction (P?1 : from S to T ) to agree with the alignment probabilities in the other direction (P?2 : from T to S.) The agreement constraints are linear over the alignments, h. Now, the HMM probability is given by",
        "where vi denotes the ith component of a vector v. For ?",
        "> 0, the resulting q (14) can be expressed using a vector ?",
        "=+/-?TU (see lines 6-7) as",
        "The dual variables-based term can be folded into the emission probabilities, ?E .",
        "Now, the resulting q can be expressed as an HMM by raising ?S , ?E , and",
        "?T to the power 1/?",
        "and normalizing.",
        "For ?",
        "= 0, q can be computed as the most probable output.",
        "The required computations in lines 6-9 can be performed using the forward-backward algorithm or the Viterbi algorithm.",
        "Note that we can efficiently compute every step because the linear constraints decompose nicely along the probability model."
      ]
    },
    {
      "heading": "5 Experiments",
      "text": [
        "Our experiments are designed to explore tuning ?",
        "in the UEM framework as a way to obtain gains over EM and hard EM in the constrained and unconstrained cases.",
        "We conduct experiments on POStagging, word-alignment, and information extraction; we inject constraints in the latter two.",
        "In all the cases we use our unified inference step to implement general UEM and the special cases of existing EM algorithms.",
        "Since both of our constrained problems involve large scale constrained inference during the E-step, we use UEM0 (with a Lagrange relaxation based E-step) as a proxy for ILP-based CoDL .",
        "As we vary ?",
        "over [0, 1], we circumvent much of the debate over EM vs hard EM (Spitkovsky et al., 2010) by exploring the space of EM algorithms in a ?continuous?",
        "way.",
        "Furthermore, we also study the relation between quality of model initialization and the value of ?",
        "in the case of POS tagging.",
        "This is inspired by a general ?research wisdom?",
        "that hard EM is a better choice than EM with a good initialization point whereas the opposite is true with an ?uninformed?",
        "initialization.",
        "Unsupervised POS Tagging We conduct experiments on unsupervised POS learning experiment with the tagging dictionary assumption.",
        "We use a standard subset of Penn Treebank containing 24,115 tokens (Ravi and Knight, 2009) with the tagging dictionary derived from the entire Penn Treebank.",
        "We run UEM with a first order (bigram) HMM model5.",
        "We consider initialization points of varying quality and observe the performance for ?",
        "?",
        "[0, 1].",
        "Different initialization points are constructed as follows.",
        "The ?posterior uniform?",
        "initialization is created by spreading the probability uniformly over all possible tags for each token.",
        "Our EM model on 5(Ravi and Knight, 2009) showed that a first order HMM model performs much better than a second order HMM model",
        "initial model parameters and ?.",
        "We report the relative performance compared to EM (see Eq.",
        "(16)).",
        "The posterior uniform initialization does not use any labeled examples.",
        "As the no.",
        "of labeled examples used to create the initial HMM model increases, the quality of the initial model improves.",
        "The results show that the value of the best ?",
        "is sensitive to the initialization point and EM (?",
        "= 1) and hard EM (?",
        "= 0) are often not the best choice.",
        "this dataset obtains 84.9% accuracy on all tokens and 72.3% accuracy on ambiguous tokens, which is competitive with results reported in (Ravi and Knight, 2009).",
        "To construct better initialization points, we train a supervised HMM tagger on holdout labeled data.",
        "The quality of the initialization points is varied by varying the size of the labeled data over {5, 10, 20, 40, 80}.",
        "Those initialization points are then fed into different UEM algorithms.",
        "Results For a particular ?, we report the performance of UEM?",
        "w.r.t.",
        "EM (?",
        "= 1.0) as given by",
        "where Acc represents the accuracy as evaluated on the ambiguous words of the given data.",
        "Note that rel(?)",
        "?",
        "0, implies performance better or worse than EM.",
        "The results are summarized in Figure 1.",
        "Note that when we use the ?posterior uniform?",
        "initialization, EM wins by a significant margin.",
        "Surprisingly, with the initialization point constructed with merely 5 or 10 examples, EM is not the best algorithm anymore.",
        "The best result for most cases is obtained at ?",
        "somewhere between 0 (hard EM) and 1 (EM).",
        "Furthermore, the results not only indicate that a measure of ?hardness?",
        "of EM i.e. the best value",
        "of ?, is closely related to the quality of the initialization point but also elicit a more fine-grained relationship between initialization and UEM.",
        "This experiment agrees with (Merialdo, 1994), which shows that EM performs poorly in the semi-supervised setting.",
        "In (Spitkovsky et al., 2010), the authors show that hard EM (Viterbi EM) works better than standard EM.",
        "We extend these results by showing that this issue can be overcome with the UEM framework by picking appropriate ?",
        "based on the amount of available labeled data.",
        "Semi-Supervised Entity-Relation Extraction We conduct semi-supervised learning (SSL) experiments on entity and relation type prediction assuming that we are given mention boundaries.",
        "We borrow the data and the setting from (Roth and Yih, 2004).",
        "The dataset has 1437 sentences; four entity types: PER, ORG, LOC, OTHERS and; five relation types LIVE IN, KILL, ORG BASED IN, WORKS FOR, LOCATED IN.",
        "We consider relations between all within-sentence pairs of entities.",
        "We add a relation type NONE indicating no relation exists between a given pair of entities.",
        "We train two log linear models for entity type and relation type prediction, respectively via discriminative UEM.",
        "We work in a discriminative setting in order to use several informative features which we borrow from (Roth and Small, 2009).",
        "Using these features, we obtain 56% average F1 for relations and 88% average F1 for entities in a fully supervised setting with an 80-20 split which is competitive with the reported results on this data (Roth and Yih, 2004; Roth and Small, 2009).",
        "For our SSL experiments, we use 20% of data for testing, a small amount, ?%, as labeled training data (we vary ?",
        "), and the remaining as unlabeled training data.",
        "We initialize with a classifier trained on the given labeled data.",
        "We use the following constraints on the posterior.",
        "1) Type constraints: For two entities e1 and e2, the relation type ?",
        "(e1, e2) between them dictates a particular entity type (or in general, a set of entity types) for both e1 and e2.",
        "These type constraints can be expressed as simple logical rules which can be converted into linear constraints.",
        "E.g. if the pair (e1, e2) has relation type LOCATED IN then e2 must have entity type LOC.",
        "This yields a logical rule which is converted into a linear constraint as",
        "?",
        "q (LOCATED IN; e1, e2) ?",
        "q (LOC; e2) .",
        "Refer to (Roth and Yih, 2004) for more statistics on this data and a list of all the type constraints used.",
        "2) Expected count constraints: Since most entity pairs are not covered by the given relation types, the presence of a large number of NONE relations can overwhelm SSL.",
        "To guide learning in the right direction, we use corpus-wide expected count constraints for each non-NONE relation type.",
        "These constraints are very similar to the label regularization technique mentioned in (Mann and McCallum, 2010).",
        "Let Dr be the set of entity pairs as candidate relations in the entire corpus.",
        "For each non-NONE relation type ?, we impose the constraints",
        "where L?",
        "and U?",
        "are lower and upper bound on the expected number of ?",
        "relations in the entire corpus.",
        "Assuming that the labeled and the unlabeled data are drawn from the same distribution, we obtain these bounds using the fractional counts of ?",
        "over the labeled data and then perturbing it by +/- 20%.",
        "Results We use Alg.",
        "2 for solving the constrained E-step.",
        "We report results averaged over 10 random splits of the data and measure statistical significance using paired t-test with p = 0.05.",
        "The results for relation prediction are shown in Fig. 2.",
        "For each trial, we split the labeled data into half to tune the value of ?.",
        "For ?",
        "= 5%, 10%, and 20%, the average",
        "value of gamma is 0.52, 0.6, and 0.57, respectively; the median values are 0.5, 0.6, and 0.5, respectively.",
        "For relation extraction, UEM is always statistically significantly better than the baseline and PR.",
        "The difference between UEM and CoDL is small which is not very surprising because hard EM approaches like CoDL are known to work very well for discriminative SSL.",
        "We omit the graph for entity prediction because EM-based approaches do not outperform the supervised baseline there.",
        "However, notably, for entities, for ?",
        "= 10%, UEM outperforms CoDL and PR and for 20%, the supervised baseline outperforms PR statistically significantly.",
        "Word Alignment Statistical word alignment is a well known structured output application of unsupervised learning and is a key step towards machine translation from a source language S to a target language T .",
        "We experiment with two language-pairs: English-French and English-Spanish.",
        "We use Hansards corpus for French-English translation (Och and Ney, 2000) and Europarl corpus (Koehn, 2002) for Spanish-English translation with EPPS (Lambert et al., 2005) annotation.",
        "We use an HMM-based model for word-alignment (Vogel et al., 1996) and add agreement constraints (Liang et al., 2008; Ganchev et al., 2008) to constrain alignment probabilities in one direction (P?1 : from S to T ) to agree with the alignment probabilities in the other direction (P?2 : from T to S.) We use a small development set of size 50 to tune the model.",
        "Note that the amount of labeled data we use is much smaller than the supervised approaches reported in (Taskar et al., 2005; Moore et al., 2006) and unsupervised approaches mentioned in (Liang et al., 2008; Ganchev et al., 2008) and hence our results are not directly comparable.",
        "For the E-step, we use Alg.",
        "3 with R=5 and pick ?",
        "from {0.0, 0.1, .",
        ".",
        ".",
        ", 1.0}, tuning it over the development set.",
        "During testing, instead of running HMM models for each direction separately, we obtain posterior probabilities by performing agreement constraints-based inference as in Alg.",
        "3.",
        "This results in a posterior probability distribution over all possible alignments.",
        "To obtain final alignments, following (Ganchev et al., 2008) we use minimum Bayes risk decoding: we align all word pairs with posterior marginal alignment probability above a certain",
        "for French-English (above) and Spanish-English (below) alignment for various data sizes.",
        "For French-English setting, tuned ?",
        "for all data-sizes is either 0.5 or 0.6.",
        "For Spanish-English, tuned ?",
        "for all data-sizes is 0.7. threshold, tuned over the development set.",
        "Results We compare UEM with EM, PR, and CoDL on the basis of Alignment Error Rate (AER) for different sizes of unlabeled data (See Tab.",
        "2.)",
        "See (Och and Ney, 2003) for the definition of AER.",
        "UEM consistently outperforms EM, PR, and CoDL with a wide margin."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "We proposed a continuum of EM algorithms parameterized by a single parameter.",
        "Our framework naturally incorporates constraints on output variables and generalizes existing constrained and unconstrained EM algorithms like standard and hard EM, PR, and CoDL.",
        "We provided an efficient Lagrange relaxation algorithm for inference with constraints in the E-step and empirically showed how important it is to choose the right EM version.",
        "Our technique is amenable to be combined with many existing variations of EM (Berg-Kirkpatrick et al., 2010).",
        "We leave this as future work.",
        "Acknowledgments: We thank Joa?o Grac?a for providing the code and data for alignment with agreement.",
        "This research is sponsored by the Army Research Laboratory",
        "in the Presence of Multiple Forms of Information.",
        "Any opinions, findings, conclusions or recommendations are those of the authors and do not necessarily reflect the views of the funding agencies."
      ]
    }
  ]
}
