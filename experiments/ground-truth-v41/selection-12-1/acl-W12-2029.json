{
  "info": {
    "authors": [
      "Jieun Lee",
      "Jung-Tae Lee",
      "Hae-Chang Rim"
    ],
    "book": "Proceedings of the Seventh Workshop on Building Educational Applications Using NLP",
    "id": "acl-W12-2029",
    "title": "Korea University System in the HOO 2012 Shared Task",
    "url": "https://aclweb.org/anthology/W12-2029",
    "year": 2012
  },
  "references": [
    "acl-D10-1094",
    "acl-N03-1033",
    "acl-N10-1018",
    "acl-N10-1019",
    "acl-P11-1019",
    "acl-P11-1092",
    "acl-P11-1093",
    "acl-W12-2006"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In this paper, we describe the Korea University system that participated in the HOO 2012 Shared Task on the correction of preposition and determiner errors in non-native speaker texts.",
        "We focus our work on training the system on a large collection of error-tagged texts provided by the HOO 2012 Shared Task organizers and incrementally applying several methods to achieve better performance."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "In the literature, there have been efforts aimed at developing grammar correction systems designed especially for non-native English speakers.",
        "A typical approach is to train statistical models on well-formed texts written by native English speakers and apply the learned models to non-native speaker texts to correct textual errors based on given context.",
        "This approach, however, fails to model the types of errors that non-native speakers usually make.",
        "Recent studies demonstrate that it is possible to improve the performance of error correction systems by training the models on error-annotated non-native speaker texts (Han et al., 2010; Dahlmeier and Ng, 2011; Gamon, 2010).",
        "Most recently, a large collection of training data consisting of preposition and determiner errors made by non-native English speakers has been released in the HOO (Helping Our Own) 2012 Shared Task, which aims at promoting the research and development of automated tools for assisting authors in writing (Dale et al., 2012).",
        "In this paper, we introduce our error correction system that participated in the HOO 2012 Shared Task, where the goal is to correct errors in the use of prepositions and determiners by non-native speakers of English.",
        "We mainly focus our efforts on training the system using the non-native speaker texts provided in the HOO 2012 Shared Task.",
        "We also share our experience in handling some issues that emerged while exclusively using the non-native speaker texts for training our system.",
        "In the following sections, we will describe the system in detail."
      ]
    },
    {
      "heading": "2 System Architecture",
      "text": [
        "The goal of our system is to detect and correct preposition and determiner errors in a given text.",
        "Our system consists of two types of classifiers, namely edit and insertion classifiers.",
        "Inputs for the two types of classifiers are noun phrases (NP), verb phrases (VP), and prepositional phrases (PP); we initially pre-process the text given for training/testing by using the Illinois Chunker1 and the Stanford Part-of-Speech Tagger (Toutanova et al., 2003).",
        "For learning the classifiers, we use maximum entropy models, which have been successfully applied to many tasks in natural language processing.",
        "We particularly use Le Zhang's Maximum Entropy Modeling Toolkit2 for implementation."
      ]
    },
    {
      "heading": "2.1 Edit Classifiers",
      "text": [
        "The role of an edit classifier is to check the source preposition/determiner word originally chosen by the author in a given text.",
        "If the source word is incorrect, the classifier replaces it with a better choice.",
        "For every preposition/determiner word,",
        "we train a classifier using examples that are observed in training data.",
        "The choice for prepositions is limited to eleven prepositions (about, at, as, by, for, from, in, of, on , to, with) that most frequently occur in the training data, and the candidates for determiner choice are the and a/an.",
        "In summary, we train a total of thirteen edit classifiers, one for each source preposition or determiner.",
        "For each edit classifier, the set of candidate outputs consists of the source preposition/determiner word itself, other confusable preposition/determiner words, and no preposition/determiner in case the source word should be deleted.",
        "Note that the number of confusable words for each source preposition is decided flexibly, depending on examples observed in the training data; a similar approach has been proposed earlier by Rozovskaya and Roth (2010a).",
        "For a particular source preposition/determiner word in the test data, the system decides whether to correct it or not based on the output of the classifier for that source word."
      ]
    },
    {
      "heading": "2.2 Insertion Classifier",
      "text": [
        "Although the edit classifiers described above are capable of deciding whether a source preposition/determiner word that appears in the test data should be replaced or removed, a large proportion of common mistakes for non-native English writers consists of missing prepositions/determiners (i.e., leaving them out by mistake).",
        "To deal with those types of errors, we train a special classifier for insertions.",
        "A training or testing event for this particular classifier is any whitespace before or after a word in a noun or verb phrase that is a potential location for a preposition or determiner.",
        "Table 1 shows the five simple heuristic patterns based on part-of-speech tags that the system uses in order to locate potential sites for prepositions/determiners.",
        "Note that s is a whitespace to be examined, an asterisk (*) means wildcard, and NN includes the tags that start with NN, such as NNS, NNP, and NNPS.",
        "VB is also treated in the same manner as NN.",
        "The set of candidate outputs consists of the eleven prepositions, the two determiners, and no preposition/determiner class.",
        "Once a candidate position for insertion is detected in the test data, the system decides whether to make an insertion or not based on the output of the insertion classifier."
      ]
    },
    {
      "heading": "2.3 Features",
      "text": [
        "Both edit and insertion classifiers can be trained using three types of features described below.",
        "?",
        "LEX/POS/HEAD This feature set refers to the contextual features from a window of n tokens to the right and left that are practically used in error correction studies (Rozovskaya and Roth, 2010b; Han et al., 2010; Gamon, 2010).",
        "Such features include lexical features, part-of-speech tags, and head words of the preceding and the following chunks of the source word.",
        "In this work, we set n to be 3. ?",
        "HAN This represents the set of features specifically used in the work of Han et al. (2010); they demonstrate that a model trained on non-native speaker texts can outperform one trained solely on well-formed texts.",
        "?",
        "L13 L1 refers to the first language of the author.",
        "There have been some efforts to leverage L1 information for improving error correction performance.",
        "For example, Rozovskaya and Roth (2011) propose an algorithm for adapting a learned model to the L1 of the author.",
        "There have been many studies leveraging writers?",
        "L1.",
        "In this work, we propose to directly utilize L1 information of the authors as features.",
        "We also leverage additional features by combining L1 and individual head words that govern or are governed by VP or NP."
      ]
    },
    {
      "heading": "3 Additional Methods for Improvement",
      "text": [
        "The training data provided in the HOO 2012 Shared Task consists of exam scripts drawn from the publicly available FCE dataset (Yannakoudakis et al., 3L1 information was provided in the training data but not in the test data.",
        "Therefore, the benefits of using L1 remain inconclusive in this paper.",
        "2011) with textual errors annotated in HOO data format.",
        "From this data, we extract examples for training our classifiers.",
        "For example, let w be a source word that we specifically want our classifier to learn.",
        "Every use of w that appears in the training data may be an example that the classifier can learn from.",
        "However, it is revealed that for all w, there are always many more examples where w is used correctly than examples where w is replaced or removed.",
        "Table 2 and Table 3 respectively show the class distributions of all examples for source words a/an and at that are observable from the whole training data for training a/an- and at-specific classifiers.",
        "We can see that various classes among the training data are unevenly represented.",
        "When training data is highly skewed as shown in the two tables, constructing a useful classifier becomes a challenging task.",
        "We observed from our preliminary experiments that classifiers learned on highly unbalanced data hardly tend to correct the incorrect choices made by non-native speakers.",
        "Therefore, we investigate two simple ways to alleviate this problem."
      ]
    },
    {
      "heading": "3.1 Filtering Examples Less Likely to be Incorrect",
      "text": [
        "As mentioned above, there are many more examples where the source preposition/determiner is used without any error.",
        "One straightforward way to adjust the training data distribution is to reduce the number of examples where the source word is less likely to be replaced or removed by using language model probabilities.",
        "If a language model learned on a very large collection of well-formed texts returns a very high language model probability for a source word surrounded by its context, it may be reason",
        "Therefore we build a language model trained on the English Gigaword corpus by utilizing trigrams.",
        "Before providing examples to the classifiers for training or testing, we filter out those that have very high language model probabilities above a predefined threshold value."
      ]
    },
    {
      "heading": "3.2 Adding Artificial Errors",
      "text": [
        "Our second approach is to introduce more artificial examples to the training data, so that the class distribution of all training examples becomes more balanced.",
        "For example, if we aim at adding more training examples for a/an classifier, we would extract correct phrases such as ?the different actor?",
        "from the training data and artificially convert it into ?a different actor?",
        "so that an example of a/an being corrected to the is also provided to a/an classifier for training.",
        "When adding aritificial examples into the training data, we avoid the number of examples belonging to each class exceeding the number of cases where the source word is not replaced or removed.",
        "Table 4 demonstrates the results of both the filtering and adding approaches for training the a/an classifier."
      ]
    },
    {
      "heading": "4 Experiments",
      "text": []
    },
    {
      "heading": "4.1 Runs",
      "text": [
        "This section describes individual runs that we submitted to the HOO 2012 Shared Task organizers.",
        "Table 5 represents the setting of each run.",
        "?",
        "Run0 This is a baseline run that represents the language model approach proposed by Gamon (2010).",
        "We train our language model on Gigaword corpus, utilizing trigrams with interpolation and Kneser-Ney discount smoothing.",
        "?",
        "Run1, 2 Run1 and 2 represent our system using the LEX/POS/HEAD feature sets and HAN feature sets respectively.",
        "Neither additional method described in Section 3 is applied.",
        "?",
        "Run3, 8 These runs represent our system using LEX/POS/HEAD features (Run1), where examples that are less likely to be incorrect are filtered out by consulting our language model.",
        "The threshold value is set to ?2 and ?3 for Runs 3 and 8 respectively.",
        "?",
        "Run4 This particular run is one where we introduce additional errors in order to make the class distribution of the training data for the classifiers more balanced.",
        "This step is incrementally applied in the setting of Run3.",
        "?",
        "Run5, 6 Run5 and 6 are when we consider L1 information and age respectively as additional features for training the classifiers.",
        "The basic setup is same as Run4.",
        "?",
        "Run7 This run represents our system with its insertion classifier trained using POS and HEAD features only.",
        "No LEX features are used."
      ]
    },
    {
      "heading": "5 Results",
      "text": [
        "Table 6 shows the correction scores of the individual runs that we originally submitted.",
        "Unfortunately, we should confess that we made a vital mistake while generating the runs from 1-8; the modules implemented for learning the insertion classifier had some bugs that we could not notice during the submission time.",
        "Because of this, our system was unable to handle MD and MT type errors properly.",
        "This is the reason why the performance figures of our runs are very low.",
        "For reference, we include Tables 7-10 that illustrate the performance of our individual runs that we calculated by ourselves using the test data and the evaluation tool provided by the organizers.",
        "We can observe that Run3 outperforms Run1 and Run4 performs better than Run3, which demonstrates that our attempts to improve the system performance by adjusting training data for classifiers",
        "vised) help.",
        "Moreover, we can also see that L1 information helps when directly used for training features."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "This was our first attempt to participate in a shared task that involves the automatic correction of grammatical errors made by non-native speakers of English.",
        "In this work, we tried to focus on investigating simple ways to improve the error correction system learned on non-native speaker texts.",
        "While we had made some critical mistakes on the submitted runs, we were able to observe that our method can potentially improve error correction systems."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "We would like to thank Hyoung-Gyu Lee for his technical assistance."
      ]
    }
  ]
}
