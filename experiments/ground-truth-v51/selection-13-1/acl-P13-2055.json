{
  "info": {
    "authors": [
      "Ryan Georgi",
      "Fei Xia",
      "William D. Lewis"
    ],
    "book": "ACL",
    "id": "acl-P13-2055",
    "title": "Enhanced and Portable Dependency Projection Algorithms Using Interlinear Glossed Text",
    "url": "https://aclweb.org/anthology/P13-2055",
    "year": 2013
  },
  "references": [
    "acl-H05-1066",
    "acl-J94-4004",
    "acl-N01-1026",
    "acl-N07-1057",
    "acl-P05-1034",
    "acl-W09-3036"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "As most of the world's languages are under-resourced, projection algorithms offer an enticing way to bootstrap the resources available for one resource-poor language from a resource-rich language by means of parallel text and word alignment.",
        "These algorithms, however, make the strong assumption that the language pairs share common structures and that the parse trees will resemble one another.",
        "This assumption is useful but often leads to errors in projection.",
        "In this paper, we will address this weakness by using trees created from instances of Interlinear Glossed Text (IGT) to discover patterns of divergence between the languages.",
        "We will show that this method improves the performance of projection algorithms significantly in some languages by accounting for divergence between languages using only the partial supervision of a few corrected trees."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "While thousands of languages are spoken in the world, most of them are considered resource-poor in the sense that they do not have a large number of electronic resources that can be used to build NLP systems.",
        "For instance, some languages may lack treebanks, thus making it difficult to build a high-quality statistical parser.",
        "One common approach to address this problem is to take advantage of bitext between a resource-rich language (e.g., English) and a resource-poor language by projecting information from the former to the latter (Yarowsky and Ngai, 2001; Hwa et al., 2004).",
        "While projection methods can provide a great deal of information at minimal cost to the researchers, they do suffer from structural divergence between the language-poor language (aka target language) and the resource-rich language (aka source language).",
        "In this paper, we propose a middle ground between manually creating a large-scale treebank (which is expensive and time-consuming) and relying on the syntactic structures produced by a projection algorithm alone (which are error-prone).",
        "Our approach has several steps.",
        "First, we utilize instances of Interlinear Glossed Text (IGT) following Xia and Lewis (2007) as seen in Figure 1(a) to create a small set of parallel dependency trees through projection and then manually correct the dependency trees.",
        "Second, we automatically analyze this small set of parallel trees to find patterns where the corrected data differs from the projection.",
        "Third, those patterns are incorporated to the projection algorithm to improve the quality of projection.",
        "Finally, the features extracted from the projected trees are added to a statistical parser to improve parsing quality.",
        "The outcome of this work are both an enhanced projection algorithm and a better parser for resource-poor languages that require a minimal amount of manual effort."
      ]
    },
    {
      "heading": "2 Previous Work",
      "text": [
        "For this paper, we will be building upon the standard projection algorithm for dependency structures as outlined in Quirk et al. (2005) and illustrated in Figure 1.",
        "First, a sentence pair between resource-rich (source) and resource-poor (target) languages is word aligned [Fig 1(a)].",
        "Second, the source sentence is parsed by a dependency parser for the source language [Fig 1(b)].",
        "Third, sponta",
        "siwA ne pAnI se GadZe ko BarA Sita filled the clay-pot with water Sita erg water with clay-pot acc filled",
        "dency tree from English to Hindi.",
        "neous (unaligned) source words are removed, and the remaining words are replaced with corresponding words in the target side [Fig 1(c)].",
        "Finally, spontaneous target words are reattached heuristically and the children of a head are ordered based on the word order in the target sentence [Fig 1(d)].",
        "The resulting tree may have errors (e.g., pAni should depend on se in Figure 1(d)), and the goal of this study is to reduce common types of projection errors.",
        "In Georgi et al. (2012a), we proposed a method for analyzing parallel dependency corpora in which word alignment between trees was used to determine three types of edge configurations: merged, swapped, and spontaneous.",
        "Merged alignments were those in which multiple words in the target tree aligned",
        "to a single word in the source tree, as in Figure 2.",
        "Swapped alignments were those in which",
        "a parent node in the source tree aligned to a child in the target tree and vice-versa.",
        "Finally, spontaneous alignments were those for which a word did not align to any word on the other side.",
        "These edge configurations could be detected from simple parent?child edges and the alignment (or lack of) between words in the language pairs.",
        "Using these simple, language-agnostic measures allows one to look for divergence types such as those described by Dorr (1994).",
        "Georgi et al. (2012b) described a method in which new features were extracted from the projected trees and added to the feature vectors for a statistical dependency parser.",
        "The rationale was that, although the projected trees were error-prone, the parsing model should be able to set appropriate weights of these features based on how reliable these features were in indicating the dependency structure.",
        "We started with the MSTParser (McDonald et al., 2005) and modified it so that the edges from the projected trees could be used as features at parse time.",
        "Experiments showed that adding new features improved parsing performance.",
        "In this paper, we use the small training corpus built in Georgi et al. (2012b) to improve the projection algorithm itself.",
        "The improved projected trees are in turn fed to the statistical parser to further improve parsing results."
      ]
    },
    {
      "heading": "3 Enhancements to the projection",
      "text": [
        "algorithm We propose to enhance the projection algorithm by addressing the three alignment types discussed earlier: 1.",
        "Merge: better informed choice for head for multiply-aligned words.2.",
        "Swap: post-projection correction of frequently swapped word pairs.3.",
        "Spontaneous: better informed attachment of target spontaneous words.",
        "The detail of the enhancements are explained below."
      ]
    },
    {
      "heading": "3.1 Merge Correction",
      "text": [
        "?Merged?",
        "words, or multiple words on the target side that align to a single source word, are problematic for the projection algorithm because it is not clear which target word should be the head and which word should be the",
        "where the English word seems align to two Hindi words hE and lagawA.",
        "Below the IGT are the dependency trees for English and Hindi.",
        "Dotted arrows indicate word alignment, and the solid arrow indicates that hE should depend on lagawA.",
        "dependent.",
        "An example is given in Figure 2, where the English word seems align to two Hindi words hE and lagawA.",
        "On the other hand, from the small amount of labeled training data (i.e., a set of hand-corrected tree pairs), we can learn what kind of source words are likely to align to multiple target words, and which target word is likely to the head.",
        "The process is illustrated in Figure 3.",
        "In this example, the target words tm and tn are both aligned with the source word siwhose POS tag is POSi, and tm appears before tn in the target sentence.",
        "Going through theexamples of merged alignments in the training data, we keep a count for the POS tag of the source word and the position of the head on the target side.1 Based on these counts, our system will generate rules such as the ones in Figure 3(c) which says if a source word whose POS is POSi aligns to two target words, theprobability of the right target word depending on the left one is 75%, and the probability of the left target word depending on the right one is 25%.",
        "We use maximum likelihood estimate (MLE) to calculate the probability.",
        "The projection algorithm will use those rules to handle merged alignment; that is, when a source word aligns to multiple target words, the algorithm determines the direction of dependency edge based on the direction preference stored in the rules.",
        "In addition to rules for",
        "... t p (b) Target sentence showing the ?left?",
        "dependency between tm and tn.",
        "POSi ?",
        "left 0.75 POSi ?",
        "right 0.25 (c) Rules for handling merged alignment",
        "rules derived from such an example an individual source POS tag, our method also keeps track of the overall direction preference for all the merged examples in that language.",
        "For merges in which the source POS tag is unseen or there are no rules for that tag, this language-wide preference is used as a backoff."
      ]
    },
    {
      "heading": "3.2 Swap Correction",
      "text": [
        "An example of swapped alignment is in Figure 4(a), where (sj , si) is an edge in the sourcetree, (tm, tn) is an edge in the target tree, and sj aligns to tn and si aligns to tm.",
        "Figure1(d) shows an error made by the projection algorithm due to swapped alignment.",
        "In order to correct such errors, we count the number of (POSchild, POSparent) dependency edges inthe source trees, and the number of times that the directions of the edges are reversed on the target side.",
        "Figure 4(b) shows a possible set of counts resulting from this approach.",
        "Based on the counts, we keep only the POS pairs that appear in at least 10% of training sentences and the percentage of swap for the pairs are no less than 70%.2 We say that those pairs trigger a swap operation.",
        "At the test time, swap rules are applied as a post-processing step to the projected tree.",
        "After the projected tree is completed, our swap handling step checks each edge in the source tree.",
        "If the POS tag pair for the edge triggers",
        "(a) A swapped alignment between source words sj and si and target words tm and tn.",
        "POS Pair Swaps Total % (POSi, POSj) ?",
        "16 21 76(POSk, POSl) ?",
        "1 1 100(POSn, POSo) ?",
        "1 10 10 (b) Example set of learned swap rules.",
        "Swaps counts thenumber of times the given (child, parent) pair is seenin a swap configuration in the source side, and totalis the number of times said pair occurs overall.",
        "swapping node l with its parent j. a swap operation, the corresponding nodes in the projected tree will be swapped, as illustrated in Figure 5."
      ]
    },
    {
      "heading": "3.3 Spontaneous Reattachment",
      "text": [
        "Target spontaneous words are difficult to handle because they do not align to any source word and thus there is nothing to project to them.",
        "To address this problem, we collect two types of information from the training data.",
        "First, we keep track of all the lexical items that appear in the training trees, and the relative position of their head.",
        "This lexical approach may be useful in handling closed-class words which account for a large percentage of spontaneous words.",
        "Second, we use the training trees to determine the favored attachment direction for the language as a whole.",
        "At the test time, for each spontaneous word in the target sentence, if it is one of the words for which we have gathered statistics from the training data, we attach it to the next word in the preferred direction for that word.",
        "If the word is unseen, we attach it using the overall language preference as a backoff."
      ]
    },
    {
      "heading": "3.4 Parser Enhancements",
      "text": [
        "In addition to above enhancements to the projection algorithm itself, we train a dependency parser on the training data, with new features from the projected trees following Georgi et al. (2012b).",
        "Furthermore, we add features that indicate whether the current word appears in a merge or swap configuration.",
        "The results of this combination of additional features and improved projection is shown in Table 1(b)."
      ]
    },
    {
      "heading": "4 Results",
      "text": [
        "For evaluation, we use the same data sets as in Georgi et al. (2012b), where there is a small number (ranging from 46 to 147) of tree pairs for each of the eight languages.",
        "The IGT instances for those tree pairs come from the Hindi Treebank (Bhatt et al., 2009) and the Online Database of Interlinear Text (ODIN) (Lewis and Xia, 2010).",
        "We ran 10-fold cross validation and reported the average of 10 runs in Table 1.",
        "The top table shows the accuracy of the projection algorithm, and the bottom table shows parsing accuracy of MSTParser with or without adding features from the projected trees.",
        "In both tables, the Best row uses the enhanced projection algorithm.",
        "The Baseline rows use the original projection algorithm in Quirk et al. (2005) where the word in the parentheses indicates the direction of merge.",
        "The Error Reduction row shows the error reduction of the Best system over the best performing baseline for each language.",
        "The No Projection row in the second table shows parsing results when no features from the projected trees are added to the parser, and the last row in that table shows the error reduction of the Best row over the No Projection row.",
        "Table 1 shows that using features from the projected trees provides a big boost to the quality of the statistical parser.",
        "Furthermore, the enhancements laid out in Section 3 improve the performance of both the projection algorithm and the parser that uses features from projected trees.",
        "The degree of improvement may depend on the properties of a particular language pair and the labeled data we",
        "Korean (KKN), Gaelic (GLI), Hausa (HUA), German (GER), and Malagasy (MEX).",
        "have for that language pair.",
        "For instance, swap is quite common for the Hindi-English pair because postpositions depend on nouns in Hindi whereas nouns depend on prepositions in English.",
        "As a result, the enhancement for the swapped alignment alone results in a large error reduction, as in Table 2.",
        "This table shows the projection accuracy on the Hindi data when each of the three enhancements is turned on or off.",
        "The rows are sorted by descending overall accuracy, and the row that corresponds to the system labeled ?Best?",
        "in Table 1 is in bold."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "Existing projection algorithms suffer from the effects of structural divergence between language pairs.",
        "We propose to learn common divergence types from a small number of tree pairs and use the learned rules to improve projection accuracy.",
        "Our experiments show notable gains for both projection and parsing when tested on eight language pairs.",
        "As IGT data is available for hundreds of languages through the ODIN database and other sources, one could produce a small parallel treebank for a language pair after spending a few hours manually correcting the output of a projection algorithm.",
        "From the treebank, a better projection algorithm and a better parser can be built automatically using our approach.",
        "data, with the three enhancements turning on or off.",
        "The ?spont?",
        "and ?swap?",
        "columns show a checkmark when the enhancements are turned on.",
        "The merge direction indicates whether a left or right choice was made as a baseline, or whether the choice was informed by the rules learned from the training data.",
        "While the improvements for some languages are incremental, the scope of coverage for this method is potentially enormous, enabling the rapid creation of tools for under-resourced languages of all kinds at a minimal cost."
      ]
    },
    {
      "heading": "Acknowledgment",
      "text": [
        "This work is supported by the National Science Foundation Grant BCS-0748919.",
        "We would also like to thank the reviewers for helpful comments."
      ]
    }
  ]
}
