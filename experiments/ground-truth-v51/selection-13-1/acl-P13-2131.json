{
  "info": {
    "authors": [
      "Shu Cai",
      "Kevin Knight"
    ],
    "book": "ACL",
    "id": "acl-P13-2131",
    "title": "Smatch: an Evaluation Metric for Semantic Feature Structures",
    "url": "https://aclweb.org/anthology/P13-2131",
    "year": 2013
  },
  "references": [
    "acl-C98-1112",
    "acl-P02-1040",
    "acl-W08-2227"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "The evaluation of whole-sentence semantic structures plays an important role in semantic parsing and large-scale semantic structure annotation.",
        "However, there is no widely-used metric to evaluate whole-sentence semantic structures.",
        "In this paper, we present smatch, a metric that calculates the degree of overlap between two semantic feature structures.",
        "We give an efficient algorithm to compute the metric and show the results of an inter-annotator agreement study."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The goal of semantic parsing is to generate all semantic relationships in a text.",
        "Its output is often represented by whole-sentence semantic structures.",
        "Evaluating such structures is necessary for semantic parsing tasks, as well as semantic annotation tasks which create linguistic resources for semantic parsing.",
        "However, there is no widely-used evaluation method for whole-sentence semantic structures.",
        "Current whole-sentence semantic parsing is mainly evaluated in two ways: 1. task correctness (Tang and Mooney, 2001), which evaluates on an NLP task that uses the parsing results; 2. whole-sentence accuracy (Zettlemoyer and Collins, 2005), which counts the number of sentences parsed completely correctly.",
        "Nevertheless, it is worthwhile to explore evaluation methods that use scores which range from 0 to 1 (?partial credit?)",
        "to measure whole-sentence semantic structures.",
        "By using such methods, we are able to differentiate between two similar whole-sentence semantic structures regardless of specific tasks or domains.",
        "In this work, we provide an evaluation metric that uses the degree of overlap between two whole-sentence semantic structures as the partial credit.",
        "In this paper, we observe that the difficulty of computing the degree of overlap between two whole-sentence semantic feature structures comes from determining an optimal variable alignment between them, and further prove that finding such alignment is NP-complete.",
        "We investigate how to compute this metric and provide several practical and replicable computing methods by using Integer Linear Programming (ILP) and hill-climbing method.",
        "We show that our metric can be used for measuring the annotator agreement in large-scale linguistic annotation, and evaluating semantic parsing."
      ]
    },
    {
      "heading": "2 Semantic Overlap",
      "text": [
        "We work on a semantic feature structure representation in a standard neo-Davidsonian (Davidson, 1969; Parsons, 1990) framework.",
        "For example, semantics of the sentence ?the boy wants to go?",
        "is represented by the following directed graph: In this graph, there are three concepts: want01, boy, and go-01.",
        "Both want-01 and go-01 are frames from PropBank framesets (Kingsbury and Palmer, 2002).",
        "The frame want-01 has two arguments connected with ARG0 and ARG1, and go01 has an argument (which is also the same boy instance) connected with ARG0.",
        "Following (Langkilde and Knight, 1998) and (Langkilde-Geary, 2002), we refer to this semantic representation as AMR (Abstract Meaning Representation).",
        "Semantic relationships encoded in the AMR graph can also be viewed as a conjunction of logical propositions, or triples:",
        "Each AMR triple takes one of these forms: relation(variable, concept) (the first three triples above), or relation(variable1, variable2) (the last three triples above).",
        "Suppose we take a second AMR (for ?the boy wants the football?)",
        "and its associated propositional triples:",
        "Our evaluation metric measures precision, recall, and f-score of the triples in the second AMR against the triples in the first AMR, i.e., the amount of propositional overlap.",
        "The difficulty is that variable names are not shared between the two AMRs, so there are multiple ways to compute the propositional overlap based on different variable mappings.",
        "We therefore define the smatch score (for semantic match) as the maximum f-score obtainable via a one-to-one matching of variables between the two AMRs.",
        "In the example above, there are six ways to match up variables between the two AMRs:",
        "smatch score: 0.73 Here, M is the number of propositional triples that agree given a variable mapping, P is the precision of the second AMR against the first, R is its recall, and F is its f-score.",
        "The smatch score is the maximum of the f-scores.",
        "However, for AMRs that contain large number of variables, it is not efficient to get the f-score by simply using the method above.",
        "Exhaustively enumerating all variable mappings requires computing the f-score for n!/(n?m)!",
        "variable mappings (assuming one AMR has n variables and the other has m variables, and m ?",
        "n).",
        "This algorithm is too slow for all but the shortest AMR pairs."
      ]
    },
    {
      "heading": "3 Computing the Metric",
      "text": [
        "This section describes how to compute the smatch score.",
        "As input, we are given AMR1 (with m variables) and AMR2 (with n variables).",
        "Without loss of generality, m ?",
        "n. Baseline.",
        "Our baseline first matches variables that share concepts.",
        "For example, it would match a in the first AMR example with x in the second AMR example of Section 2, because both are instances of want-01.",
        "If there are two or more variables to choose from, we pick the first available one.",
        "The rest of the variables are mapped randomly.",
        "ILP method.",
        "We can get an optimal solution using integer linear programming (ILP).",
        "We create two types of variables: ?",
        "(Variable mapping) vij = 1 iff the ith variable in AMR1 is mapped to the jth variable in AMR2 (otherwise vij = 0) ?",
        "(Triple match) tkl = 1 iff AMR1 triple k matches AMR2 triple l, otherwise tkl",
        "= 1, and vyz = 1 or y and z are the same concept.",
        "Our constraints ensure a one-to-one mapping of variables, and they ensure that the chosen t values are consistent with the chosen v values: For all i,",
        "For all triple pairs r(xy)r(wz) (r for relation), tr(xy)r(wz) ?",
        "vxw",
        "tr(xy)r(wz) ?",
        "vyz when y and z are variables.",
        "Finally, we ask the ILP solver to maximize:",
        "which denotes the maximum number of matching triples which lead to the smatch score.",
        "Hill-climbing method.",
        "Finally, we develop a portable heuristic algorithm that does not require an ILP solver1.",
        "This method works in a greedy style.",
        "We begin with m random one-to-one mappings between the m variables of AMR1 and the n variables of AMR2.",
        "Each variable mapping is a pair (i,map(i)) with 1 ?",
        "i ?",
        "m and 1 ?",
        "map(i) ?",
        "n. We refer to the m mappings as a variable mapping state.",
        "We first generate a random initial variable mapping state, compute its triple match number, then hill-climb via two types of small changes:",
        "1.",
        "Move one of the m mappings to a currently-unmapped variable from the n. 2.",
        "Swap two of the m mappings.",
        "Any variable mapping state has m(n ?",
        "m) +",
        "hill-climbing search.",
        "We greedily choose the best neighbor, repeating until no neighbor improves the number of triple matches.",
        "We experiment with two modifications to the greedy search: (1) executing multiple random restarts to avoid local optima, and (2) using our Baseline concept matching (?smart initialization?)",
        "instead of random initialization.",
        "NP-completeness.",
        "There is unlikely to be an exact polynomial-time algorithm for computing smatch.",
        "We can reduce the 0-1 Maximum Quadratic Assignment Problem (0-1-Max-QAP) (Nagarajan and Sviridenko, 2009) and the sub-graph isomorphism problem directly to the full smatch problem on graphs.2 We note that other widely-used metrics, such as TER (Snover et al., 2006), are also NP-complete.",
        "Fortunately, the next section shows that the smatch methods above are efficient and effective."
      ]
    },
    {
      "heading": "4 Using Smatch",
      "text": [
        "We report an AMR inter-annotator agreement study using smatch.",
        "1.",
        "Our study has 4 annotators (A, B, C, D), who then converge on a consensus annotation E. We thus have 10 pairs of annotations: A-B, A-C, .",
        ".",
        ".",
        ", DE. 2.",
        "The study is carried out 5 times.",
        "Each time annotators build AMRs for 4 sentences from the Wall Street Journal corpus.",
        "Sentence lengths range from 12 to 54 words, and AMRs range from 6 to 29 variables.",
        "3.",
        "We use 7 smatch calculation methods in our experiments: ?",
        "Base: Baseline matching method ?",
        "ILP: Integer Linear Programming ?",
        "R: Hill-climbing with random initialization ?",
        "10R: Hill-climbing with random initialization plus 9 random restarts ?",
        "S: Hill-climbing with smart initialization ?",
        "S+4R: Hill-climbing with smart initialization plus 4 random restarts ?",
        "S+9R: Hill-climbing with smart initial",
        "ization plus 9 random restarts Table 1 shows smatch scores provided by the methods.",
        "Columns labeled 1-5 indicate sentence groups.",
        "Each individual smatch score is a document-level score of 4 AMR pairs.3 ILP scores are optimal, so lower scores (in bold) indicate search errors.",
        "Table 2 summarizes search accuracy as a percentage of smatch scores that equal that of ILP.",
        "Results show that the restarts are essential for hill-climbing, and that 9 restarts are sufficient to obtain good quality.",
        "The table also shows total runtimes over 200 AMR pairs (10 annotator pairs, 5 sentence groups, 4 AMR pairs per group).",
        "Heuristic search with smart initialization and 4 restarts (S+4R) gives the best trade-off between accuracy and speed, so this is the setting we use in practice.",
        "Figure 1 shows smatch scores of each annotator (A-D) against the consensus annotation (E).",
        "The",
        "sum of matched triples over all AMR pairs to compute precision, recall, and f-score, much like corpus-level Bleu (Pap-ineni et al., 2002).",
        "various computing methods of smatch over 200 AMR pairs.",
        "plot demonstrates that, as time goes by, annotators reach better agreement with the consensus.",
        "We also note that smatch is used to measure the accuracy of machine-generated AMRs.",
        "(Jones et al., 2012) use it to evaluate automatic semantic parsing in a narrow domain, while Ulf Her-mjakob4 has developed a heuristic algorithm that exploits and supplements Ontonotes annotations (Pradhan et al., 2007) in order to automatically create AMRs for Ontonotes sentences, with a smatch score of 0.74 against human consensus AMRs."
      ]
    },
    {
      "heading": "5 Related Work",
      "text": [
        "Related work on directly measuring the semantic representation includes the method in (Dridan and Oepen, 2011), which evaluates semantic parser output directly by comparing semantic substructures, though they require an alignment between sentence spans and semantic sub-structures.",
        "In contrast, our metric does not require the align",
        "against the consensus annotation (E) over time.",
        "ment between an input sentence and its semantic analysis.",
        "(Allen et al., 2008) propose a metric which computes the maximum score by any alignment between LF graphs, but they do not address how to determine the alignments."
      ]
    },
    {
      "heading": "6 Conclusion and Future Work",
      "text": [
        "We present an evaluation metric for whole-sentence semantic analysis, and show that it can be computed efficiently.",
        "We use the metric to measure semantic annotation agreement rates and parsing accuracy.",
        "In the future, we plan to investigate how to adapt smatch to other semantic representations."
      ]
    },
    {
      "heading": "7 Acknowledgements",
      "text": [
        "We would like to thank David Chiang, Hui Zhang, other ISI colleagues and our anonymous reviewers for their thoughtful comments.",
        "This work was supported by NSF grant IIS-0908532."
      ]
    }
  ]
}
