{
  "info": {
    "authors": [
      "Pieter Wellens",
      "Remi Trijp",
      "Katrien Beuls",
      "Luc Steels"
    ],
    "book": "ACL",
    "id": "acl-P13-4022",
    "title": "Fluid Construction Grammar for Historical and Evolutionary Linguistics",
    "url": "https://aclweb.org/anthology/P13-4022",
    "year": 2013
  },
  "references": [
    "acl-E12-1084",
    "acl-P12-3029",
    "acl-P98-1013"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Fluid Construction Grammar (FCG) is an open-source computational grammar formalism that is becoming increasingly popular for studying the history and evolution of language.",
        "This demonstration shows how FCG can be used to operationalise the cultural processes and cognitive mechanisms that underly language evolution and change."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Historical linguistics has been radically transformed over the past two decades by the advent of corpus-based approaches.",
        "Ever increasing datasets, both in size and richness of annotation, are becoming available (Yuri et al., 2012; Davies, 2011), and linguists now have more powerful tools at their disposal for uncovering which changes have taken place.",
        "In this demonstration, we present Fluid Construction Grammar (Steels, 2011, FCG), an open-source grammar formalism that makes it possible to also address the question of how these changes happened by uncovering the cognitive mechanisms and cultural processes that drive language evolution.",
        "FCG combines the expressive power of feature structures and unification with the adaptivity and robustnes of machine learners.",
        "In sum, FCG aims to be an open instrument for developing robust and open-ended models of language processing that can be used for both parsing and production.",
        "FCG can be downloaded at http://www.fcg-net.org."
      ]
    },
    {
      "heading": "2 Design Philosophy",
      "text": [
        "Fluid Construction Grammar is rooted in a cognitive-functional approach to language, which is quite different from a generative grammar such as HPSG (Pollard and Sag, 1994).",
        "A generative grammar is a model of language competence that licenses well-formed structures and rejects ill-formed utterances.",
        "Such grammars often decide on the well-or ill-formedness of utterances by using a strong type system that defines a set of features and possible values for those features.",
        "The burden of efficient and robust language processing with a generative grammar largely rests on the shoulders of the language processor.",
        "A cognitive-functional grammar, on the other hand, functions more like a transducer between meaning and form.",
        "In parsing, such a grammar tries to uncover as much meaning as possible from a given utterance rather than deciding on its grammaticality.",
        "In the other direction, the grammar tries to produce intelligible utterances, which are well-formed as a side-effect if the grammar adequately captures the conventions of a particular language.",
        "A cognitive-functional grammar can best be implemented without a strong type system because the set of possible features and values for them is assumed to be open-ended.",
        "Efficient and robust language processing also becomes a joint responsibility of the grammar and the linguistic processor."
      ]
    },
    {
      "heading": "3 Reversible Language Processing",
      "text": [
        "As a construction grammar, FCG represents all linguistic knowledge as pairings of function and form (called constructions).",
        "This means that any linguistic item, be it a concrete lexical item (see Figure 1) or a schematic construction, shares the same fundamental representation in FCG.",
        "Each construction consists of two poles (a semantic/functional one and a syntactic/form one), each represented as a feature structure.",
        "By using a separate semantic and syntactic pole, FCG allows the same construction to be efficiently parsed and produced by the same processing engine by simply changing the direction of application.",
        "noun ?Kim?",
        "as shown in the FCG web interface.",
        "All constructions are mappings between semantic (left) and syntactic feature structures (right).",
        "FCG processing uses two different kinds of unification called match and merge.",
        "The match phase is a conditional phase which checks for applicability of the construction.",
        "The merge operation most closely resembles classical (yet untyped) unification.",
        "In production (i.e. going from meaning to form), the processor will consider a construction's semantic pole as a set of conditions that need to be satisfied, and the syntactic pole as additional information that can be contributed by the construction.",
        "In parsing (i.e. going from form to meaning), the roles of the poles are reversed.",
        "Since FCG pays a lot of attention to the interaction between linguistic knowledge and processing, it makes it possible to investigate the consequences of particular aspects of grammar with regard to representation, production, parsing, learning and propagation (in a population of language users).",
        "For example, a small case system may be easier to represent and produce than a large system, but it might also lead to increased ambiguity in parsing and learning that the larger system would avoid.",
        "Fluid Construction Grammar can bring these differences to the surface for further computational analysis.",
        "It is exactly this ability to monitor the impact of grammatical choices, that has sparked the interest of an increasingly wide audience of historical and evolutionary linguists.",
        "With FCG, different historical stages can be implemented (which addresses questions about representation and processing) but FCG also comes bundled with a reflective learning framework (Beuls et al., 2012) for learning the key constructions of each stage.",
        "That same architecture has proven to be adequately powerful to implement processes of grammaticalization so that",
        "methodology for historical and evolutionary linguists.",
        "The example here shows only two linguistic stages but there could be more.",
        "actual linguistic change over time can be modeled (van Trijp, 2010; Beuls and Steels, 2013; Wellens and Loetzsch, 2012).",
        "4 How to set up an evolutionary",
        "linguistics experiment in FCG?",
        "As the FCG processor can both produce and parse utterances it is possible to instantiate not one but a set or population of FCG processors (or FCG agents) that can communicatively interact with each other.",
        "Experiments in historical or evolutionary linguistics make use of this multi-agent approach where all agents engage in situated pairwise interactions (language games) (Steels, 2012b).",
        "In this systems demo we will focus on a recent experiment in the emergence of grammatical agreement (Beuls and Steels, 2013).",
        "The language game consists of two agents in which one agent (the speaker) has to describe one or more (max three) objects in a scene to the other agent (the hearer).",
        "Each object can be described by one or more words.",
        "It follows that without any grammatical marking it would be difficult (often impossible) for the hearer to figure out which words describe the same object and thus to arrive at a successful interpretation.",
        "The hypothesis is that the introduction of agreement markers helps solve this ambiguity.",
        "Next to setting up a language game script the methodology consists of operationalizing the linguistic strategies required for a population to bootstrap and maintain a particular linguistic system (in this case nominal agreement).",
        "Examples of lin",
        "ating as part of an FCG agent/processor.",
        "guistic systems already investigated include German case (van Trijp, 2012a; van Trijp, 2013), the grammatical expression of space (Spranger and Steels, 2012), the emergence of quantifiers (Pauw and Hilferty, 2012) and the expression of aspect in Russian (Gerasymova et al., 2012) [for an overview see (Steels, 2011; Steels, 2012a)].",
        "An experiment generally investigates multiple linguistic systems of increasing complexity where each system can, but need not, map to a stage along an attested grammaticalization pathway.",
        "Most often a stage is introduced in order to gradually increase the complexity of the emergent dynamics.",
        "In this demo we posit four systems/strategies, (1) a baseline purely lexical strategy, (2) a strategy to bootstrap and align formal (meaningless) agreement markers, (3) a strategy to bootstrap and align meaningful agreement markers, and finally (4) a strategy that allows reuse of existing lexical constructions as markers (grammaticalization).",
        "Implementing and linking together all the components involved in a single system is a highly non-trivial undertaking and our methodology prescribes the following four steps to undertake for each system (see also Figure 2).",
        "Reconstruction: A full operationalization of all the constructions (lexical and grammatical) involved in the chosen linguistic phenomena.",
        "When multiple agents are initialized with these constructions they should be able to communicate successfully with each other.",
        "This stage serves primarily to test and verify intuitions about the different linguistic systems.",
        "Individual Learning: Implementation of learning algorithms (or reuse of existing ones)",
        "so that one agent can learn the constructions based on the input of another agent.",
        "These learning operations are generally divided into diagnostics and repair strategies (see Figure 3).",
        "Diagnostics continually monitor FCG processing for errors or inefficiencies and generate problems if they are found.",
        "Repair strategies then act on these problems by altering the linguistic inventory (e.g. adding, removing or changing constructions).",
        "Population Alignment: There exists a large gap between the cognitive machinary needed for learning an existing linguistic system (step 2) and bootstrapping, aligning and maintaining a complete linguistic system from scratch.",
        "In this step individual learning operators are extended with alignment strategies.",
        "Grammaticalization: Moving from one linguistic system to another is the final step of the experiment.",
        "The challenge is to find and implement the mechanisms that drive grammaticalization (Heine and Kuteva, 2007) in line with observed grammaticalization pathways.",
        "As an example we?ll give a short sketch of one possible game as played in the meaningful marker strategy as schematically shown in Figure 4.",
        "The sketch shows a context of four objects (O1 to O4), each described by three features.",
        "The speaker chooses topic O1 + O2 which, given his vocabulary (shown top right), results in uttering ?shuqfon sizhic zabu?.",
        "Words ?shuqfon?",
        "and ?sizhic?",
        "both describe parts of O1 and ?zabu?",
        "of O2.",
        "In order to explicitly communicate this linking the speaker attaches the markers ?-ti?",
        "and ?-ta?",
        "so that their meaning is compatible with the objects they are linking as shown in the Figure.",
        "This allows",
        "nodes represent grammatical constructions and rectangular nodes represent semantic categories.",
        "Arrows can be read as ?primes?.",
        "For example the preposition between [BETWEEN.PREP] primes the category LOCATIVE RELATION which in turn primes both the [LOCATIVE RELATION] and [SPATIAL PHRASE] constructions.",
        "Both of these constructions also require a semantic category [REFERENT].",
        "the hearer to arrive at a single non-ambiguous interpretation.",
        "For more details we refer the reader to (Beuls and Steels, 2013) and the web demo at http://ai.vub.ac.be/materials/plos-agreement/."
      ]
    },
    {
      "heading": "5 Features of FCG",
      "text": [
        "A number of key features of FCG have already been introduced.",
        "Reversible bidirectional processing, a single data representation for all linguistic knowledge, a reflective meta-layer architecture for learning and a multi-agent component for managing multiple interacting FCG instances.",
        "Other features, some of which are unique to FCG, include, but are not limited to: Web interface: FCG comes with a rich HTML/AJAX based web interface (Loetzsch, 2012) where it can show fine-grained information to the user in a user-friendly manner through the use of expandable elements.",
        "See Figure 6.",
        "Customizable processing: Linguistic processing is implemented as a search process (Bleys et al., 2011).",
        "The user has easy access to the most important parameters influencing this process.",
        "Examples of these are the heuristics and the tests that determine whether a node represents an acceptable solution.",
        "FCG comes bundled with a library of heuristics and goal tests and with a bit of programming skills users can add new primitives easily.",
        "Customizable construction inventory: By default, FCG stores all constructions in one large set.",
        "FCG however supplies a number of different taxonomies, both for conceptual and efficiency reasons.",
        "One popular option is to organize constructions in smaller subsets (Beuls, 2011) like lexical, morphological, functional, etc.",
        "Another option is to use networks (Wellens, 2011) that can learn co-occurrence relations between constructions and ?prime?",
        "constructions when they are likely to apply (see Figure 5).",
        "Interfaces to external repositories: FCG can connect to external repositories like Framenet (Baker et al., 1998) and Wordnet (Miller, 1995) to load thousands of lexical entries (Micelli et al., 2009; Wellens and Beule, 2010).",
        "Robustness: FCG continues operation as far as it can get even if some constructions do not apply (Steels and van Trijp, 2011).",
        "Supplied with appropriate diagnostics and repair strategies FCG can even recover from errors (van Trijp, 2012b).",
        "Open source: Best of all, FCG is freely downloadable and open source (http://www.fcgnet.org).",
        "It is written in Common Lisp (CLOS) and compatible with most popular lisp implementations (SBCL, CCL, Lisp-works, ...).",
        "on nearly every element to show an expanded version.",
        "The reader is encouraged to take a look at http://www.fcg-net.org/projects/design-patternsin-fluid-construction-grammar for a selection of demonstrations of Fluid Construction Grammar."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "Fluid Construction Grammar is a mature technology that can be used by computational linguists to complement more traditional corpus-based approaches.",
        "FCG builds on many existing and proven technologies and adds new innovations to the mix resulting in a user friendly, yet powerful and extensible framework for in-depth investigations in natural language phenomena."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "The FCG formalism is being developed at the Artificial Intelligence Laboratory of the Vrije Uni-versiteit Brussel and the Sony Computer Science Laboratory in Paris.",
        "Pieter Wellens has been supported by the ESF EuroUnderstanding project DRUST funded by FWO and by the Vrije Uni-versiteit Brussel.",
        "Katrien Beuls received funding from a strategic basic research grant from the agency for Innovation by Science and Technology (IWT).",
        "Remi van Trijp is funded by the Sony Computer Science Laboratory Paris.",
        "We would also like to thank Michael Spranger for his contributions to the FCG formalism."
      ]
    }
  ]
}
