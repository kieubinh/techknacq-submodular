{
  "info": {
    "authors": [
      "Eneko Agirre",
      "Nikolaos Aletras",
      "Aitor Gonzalez-Agirre",
      "German Rigau",
      "Mark Stevenson"
    ],
    "book": "*SEM",
    "id": "acl-S13-1018",
    "title": "UBC_UOS-TYPED: Regression for typed-similarity",
    "url": "https://aclweb.org/anthology/S13-1018",
    "year": 2013
  },
  "references": [
    "acl-E09-1005",
    "acl-N03-1033",
    "acl-P05-1045",
    "acl-W12-1012"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We approach the typed-similarity task using a range of heuristics that rely on information from the appropriate metadata fields for each type of similarity.",
        "In addition we train a linear regressor for each type of similarity.",
        "The results indicate that the linear regression is key for good performance.",
        "Our best system was ranked third in the task."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The typed-similarity dataset comprises pairs of Cultural Heritage items from Europeana1, a single access point to digitised versions of books, paintings, films, museum objects and archival records from institutions throughout Europe.",
        "Typically, the items comprise meta-data describing a cultural heritage item and, sometimes, a thumbnail of the item itself.",
        "Participating systems need to compute the similarity between items using the textual meta-data.",
        "In addition to general similarity, the dataset includes specific kinds of similarity, like similar author, similar time period, etc.",
        "We approach the problem using a range of similarity techniques for each similarity types, these make use of information contained in the relevant meta-data fields.In addition, we train a linear regressor for each type of similarity, using the training data provided by the organisers with the previously defined similarity measures as features.",
        "We begin by describing our basic system in Section 2, followed by the machine learning system in"
      ]
    },
    {
      "heading": "2 Basic system",
      "text": [
        "The items in this task are taken from Europeana.",
        "They cannot be redistributed, so we used the urls and scripts provided by the organizers to extract the corresponding metadata.",
        "We analysed the text in the metadata, performing lemmatization, PoS tagging, named entity recognition and classification (NERC) and date detection using Stanford CoreNLP (Finkel et al., 2005; Toutanova et al., 2003).",
        "A preliminary score for each similarity type was then calculated as follows: ?",
        "General: cosine similarity of TF.IDF vectors of tokens, taken from all fields.",
        "?",
        "Author: cosine similarity of TF.IDF vectors of dc:Creator field.",
        "?",
        "People involved, time period and location: cosine similarity of TF.IDF vectors of location/date/people entities recognized by NERC in all fields.",
        "?",
        "Events: cosine similarity of TF.IDF vectors of event verbs and nouns.",
        "A list of verbs and nouns possibly denoting events was derived using the WordNet Morphosemantic Database2.",
        "?",
        "Subject and description: cosine similarity of TF.IDF vectors of respective fields.",
        "IDF values were calculated using a subset of Europeana items (the Culture Grid collection), available internally.",
        "These preliminary scores were im",
        "proved using TF.IDF based on Wikipedia, UKB (Agirre and Soroa, 2009) and a more informed time similarity measure.",
        "We describe each of these processes in turn."
      ]
    },
    {
      "heading": "2.1 TF.IDF",
      "text": [
        "A common approach to computing document similarity is to represent documents as Bag-Of-Words (BOW).",
        "Each BOW is a vector consisting of the words contained in the document, where each dimension corresponds to a word, and the weight is the frequency in the corresponding document.",
        "The similarity between two documents can be computed as the cosine of the angle between their vectors.",
        "This is the approached use above.",
        "This approach can be improved giving more weight to words which occur in only a few documents, and less weight to words occurring in many documents (Baeza-Yates and Ribeiro-Neto, 1999).",
        "In our system, we count document frequencies of words using Wikipedia as a reference corpus since the training data consists of only 750 items associated with short textual information and might not be sufficient for reliable estimations.",
        "The TF.IDF similarity between items a and b is defined as:",
        "where tfw,x is the frequency of the term w in x ?",
        "{a, b} and idfw is the inverted document frequency of the word w measured in Wikipedia.",
        "We substituted the preliminary general similarity score by the obtained using the TF.IDF presented in this section."
      ]
    },
    {
      "heading": "2.2 UKB",
      "text": [
        "The semantic disambiguation UKB3 algorithm (Agirre and Soroa, 2009) applies personalized PageRank on a graph generated from the English WordNet (Fellbaum, 1998), or alternatively, from Wikipedia.",
        "This algorithm has proven to be very competitive in word similarity tasks (Agirre et al., 2010).",
        "To compute similarity using UKB we represent WordNet as a graph G = (V,E) as follows: graph",
        "resented by undirected edges; and dictionary words are linked to the synsets associated to them by directed edges.",
        "Our method is provided with a pair of vectors of words and a graph-based representation of WordNet.",
        "We first compute the personalized PageRank over WordNet separately for each of the vector of words, producing a probability distribution over WordNet synsets.",
        "We then compute the similarity between these two probability distributions by encoding them as vectors and computing the cosine between the vectors.",
        "We present each step in turn.",
        "Once personalized PageRank is computed, it returns a probability distribution over WordNet synsets.",
        "The similarity between two vectors of words can thus be implemented as the similarity between the probability distributions, as given by the cosine between the vectors.",
        "We used random walks to compute improved similarity values for author, people involved, location and event similarity: ?",
        "Author: UKB over Wikipedia using person entities recognized by NERC in the dc:Creator field.",
        "?",
        "People involved and location: UKB over Wikipedia using people/location entities recognized by NERC in all fields.",
        "?",
        "Events: UKB over WordNet using event nouns and verbs recognized in all fields.",
        "Results on the training data showed that performance using this approach was quite low (with the exception of events).",
        "This was caused by the large number of cases where the Stanford parser did not find entities which were in Wikipedia.",
        "With those cases on mind, we combined the scores returned by UKB with the similarity scores presented in Section 2 as follows: if UKB similarity returns a score, we multiply both, otherwise we return the square of the other similarity score.",
        "Using the multiplication of the two scores, the results on the training data improved."
      ]
    },
    {
      "heading": "2.3 Time similarity measure",
      "text": [
        "In order to measure the time similarity between a pair of items, we need to recognize time expressions in both items.",
        "We assume that the year of",
        "creation or the year denoting when the event took place in an artefact are good indicators for time similarity.",
        "Therefore, information about years is extracted from each item using the following pattern: [1|2][0 ?",
        "9]{3}.",
        "Using this approach, each item is represented as a set of numbers denoting the years mentioned in the meta-data.",
        "Time similarity between two items is computed based on the similarity between their associated years.",
        "Similarity between two years is defined as: simyear(y1, y2) = max{0, 1?",
        "|y1?",
        "y2 |?",
        "k} k is a parameter to weight the difference between two years, e.g. for k = 0.1 all items that have difference of 10 years or more assigned a score of 0.",
        "We obtained best results for k = 0.1.",
        "Finally, time similarity between items a and b is computed as the maximum of the pairwise similarity between their associated years:",
        "We substituted the preliminary time similarity score by the measure obtained using the method presented in this section."
      ]
    },
    {
      "heading": "3 Applying Machine Learning",
      "text": [
        "The above heuristics can be good indicators for the respective kind of similarity, and can be thus applied directly to the task.",
        "In this section, we take those indicators as features, and use linear regression (as made available by Weka (Hall et al., 2009)) to learn models that fit the features to the training data.",
        "We generated further similarity scores for general similarity, including Latent Dirichlet Allocation (LDA) (Blei et al., 2003), UKB and Wikipedia Link Vector Model (WLVM)(Milne, 2007) using information taken from all fields, as explained below."
      ]
    },
    {
      "heading": "3.1 LDA",
      "text": [
        "LDA (Blei et al., 2003) is a statistical method that learns a set of latent variables called topics from a training corpus.",
        "Given a topic model, documents can be inferred as probability distributions over topics, ?.",
        "The distribution for a document i is denoted as ?i.",
        "An LDA model is trained using the training set consisting of 100 topics using the gensim package4.",
        "The hyperparameters (?, ?)",
        "were set to",
        "num of topics .",
        "Therefore, each item in the test set is represented as a topic distribution.",
        "The similarity between a pair of items is estimated by comparing their topic distributions following the method proposed in Aletras et al. (2012; Aletras and Stevenson (2012).",
        "This is achieved by considering each distribution as a vector (consisting of the topics corresponding to an item and its probability) then computing the cosine of the angle between them, i.e.",
        "where ~?a is the vector created from the probability distribution generated by LDA for item a."
      ]
    },
    {
      "heading": "3.2 Pairwise UKB",
      "text": [
        "We run UKB (Section 2.2) to generate a probability distribution over WordNet synsets for all of the words of all items.",
        "Similarity between two words is computed by creating vectors from these distributions and comparing them using the cosine of the angle between the two vectors.",
        "If a words does not appear in WordNet its similarity value to every other word is set to 0.",
        "We refer to that similarity metric as UKB here.",
        "Similarity between two items is computed by performing pairwise comparison between their words, for each, selecting the highest similarity score:",
        "where a and b are two items, |a |the number of tokens in a and UKB(w1, w2) is the similarity between words w1 and w2."
      ]
    },
    {
      "heading": "3.3 WLVM",
      "text": [
        "An algorithm described by Milne and Witten (2008) associates Wikipedia articles which are likely to be relevant to a given text snippet using machine learning techniques.",
        "We make use of that method to represent each item as a set of likely relevant Wikipedia",
        "articles.",
        "Then, similarity between Wikipedia articles is measured using the Wikipedia Link Vector Model (WLVM) (Milne, 2007).",
        "WLVM uses both the link structure and the article titles of Wikipedia to measure similarity between two Wikipedia articles.",
        "Each link is weighted by the probability of it occurring.",
        "Thus, the value of the weight w for a link",
        "where t is the total number of articles in Wikipedia.",
        "The similarity of articles is compared by forming vectors of the articles which are linked from them and computing the cosine of their angle.",
        "For example the vectors of two articles x and y are:",
        "where x and y are two Wikipedia articles and x?",
        "li is a link from article x to article li.",
        "Since the items have been mapped to Wikipedia articles, similarity between two items is computed by performing pairwise comparison between articles using WLVM, for each, selecting the highest simi",
        "where a and b are two items, |a |the number of Wikipedia articles in a and WLVM(w1, w2) is the similarity between concepts w1 and w2."
      ]
    },
    {
      "heading": "4 Submissions",
      "text": [
        "We selected three systems for submission.",
        "The first run uses the similarity scores of the basic system (Section 2) for each similarity types as follows: ?",
        "General: cosine similarity of TF.IDF vectors, IDF based on Wikipedia (as shown in Section 2.1).",
        "?",
        "Author: product of the scores obtained obtained using TF.IDF vectors and UKB (as shown in Section 2.2) using only the data extracted from dc:Creator field.",
        "?",
        "People involved and location: product of cosine similarity of TF.IDF vectors and UKB (as shown in Section 2.2) using the data extracted from all fields.",
        "?",
        "Time period: time similarity measure (as shown in Section 2.3).",
        "?",
        "Events: product of cosine similarity of TF.IDF vectors and UKB (as shown in Section 2.2) of event nouns and verbs recognized in all fields.",
        "?",
        "Subject and description: cosine similarity of TF.IDF vectors of respective fields (as shown in Section 2).",
        "For the second run we trained a ML model for each of the similarity types, using the following features: ?",
        "Cosine similarity of TF.IDF vectors as shown in Section 2 for the eight similarity types.",
        "?",
        "Four new values for general similarity: TF.IDF (Section 2.1), LDA (Section 3.1), UKB and WLVM (Section 3.3).",
        "?",
        "Time similarity as shown in Section 2.3. ?",
        "Events similarity computed using UKB initialized with the event nouns and verbs in all fields.",
        "We decided not to use the product of TF.IDF and UKB presented in Section 2.2 in this system because our intention was to measure the power of the linear regression ML algorithm to learn on the given raw data.",
        "The third run is similar, but includes all available features (21).",
        "In addition to the above, we included: ?",
        "Author, people involved and location similarity computed using UKB initialized with people/location recognized by NERC in dc:Creator field for author, and in all fields for people involved and location.",
        "?",
        "Author, people involved, location and event similarity scores computed by the product of TF.IDF vectors and UKB values as shown in Section 2.2."
      ]
    },
    {
      "heading": "5 Results",
      "text": [
        "Evaluation was carried out using the official scorer provided by the organizers, which computes the Pearson Correlation score for each of the eight similarity types plus an additional mean correlation."
      ]
    },
    {
      "heading": "5.1 Development",
      "text": [
        "The three runs mentioned above were developed using the training data made available by the organizers.",
        "In order to avoid overfitting we did not change the default parameters of the linear regressor, and 10-fold cross-validation was used for evaluating the models on the training data.",
        "The results of our systems on the training data are shown on Table 1.",
        "The table shows that the heuristics (RUN1) obtain low results, and that linear regression improves results considerably in all types.",
        "Using the full set of features, RUN3 improves slightly over RUN2, but the improvement is consistent across all types."
      ]
    },
    {
      "heading": "5.2 Test",
      "text": [
        "The test dataset was composed of 750 pairs of items.",
        "Table 2 illustrates the results of our systems in the test dataset.",
        "The results of the runs are very similar to those obtained on the training data, but the difference between RUN2 and RUN3 is even smaller.",
        "Our systems were ranked #3 (RUN 3), #4 (RUN 2) and #6 (RUN 1) among 14 systems submitted by 6 teams.",
        "Our systems achieved good correlation scores for almost all similarity types, with the exception of author similarity, which is the worst ranked in comparison with the rest of the systems."
      ]
    },
    {
      "heading": "6 Conclusions and Future Work",
      "text": [
        "In this paper, we presented the systems submitted to the *SEM 2013 shared task on Semantic Textual Similarity.",
        "We combined some simple heuristics for each type of similarity, based on the appropriate metadata fields.",
        "The use of lineal regression improved the results considerably across all types.",
        "Our system fared well in the competition.",
        "We submitted three systems and the highest-ranked of these achieved the third best results overall."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "This work is partially funded by the PATHS project (http://paths-project.eu) funded by the Eu"
      ]
    }
  ]
}
