{
  "info": {
    "authors": [
      "Stephen Wu",
      "Dongqing Zhu",
      "Ben Carterette",
      "Hongfang Liu"
    ],
    "book": "*SEM",
    "id": "acl-S13-1021",
    "title": "MayoClinicNLPâ€“CORE: Semantic representations for textual similarity",
    "url": "https://aclweb.org/anthology/S13-1021",
    "year": 2013
  },
  "references": [
    "acl-D08-1094",
    "acl-L08-1028",
    "acl-P05-1045",
    "acl-P08-1028",
    "acl-S12-1051",
    "acl-S12-1059",
    "acl-S12-1060",
    "acl-S13-1004",
    "acl-W11-0131"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "The Semantic Textual Similarity (STS) task examines semantic similarity at a sentence-level.",
        "We explored three representations of semantics (implicit or explicit): named entities, semantic vectors, and structured vectorial semantics.",
        "From a DKPro baseline, we also performed feature selection and used source-specific linear regression models to combine our features.",
        "Our systems placed 5th, 6th, and 8th among 90 submitted systems."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The Semantic Textual Similarity (STS) task (Agirre et al., 2012; Agirre et al., 2013) examines semantic similarity at a sentence-level.",
        "While much work has compared the semantics of terms, concepts, or documents, this space has been relatively unexplored.",
        "The 2013 STS task provided sentence pairs and a 0?5 human rating of their similarity, with training data from 5 sources and test data from 4 sources.",
        "We sought to explore and evaluate the usefulness of several semantic representations that have had recent significance in research or practice.",
        "First, information extraction (IE) methods often implicitly consider named entities as ad hoc semantic representations, for example, in the clinical domain.",
        "Therefore, we sought to evaluate similarity based on named entity-based features.",
        "Second, in many applications, an effective means of incorporating distributional semantics is Random Indexing (RI).",
        "Thus we consider three different representations possible within Random Indexing (Kanerva et al., 2000; Sahlgren, 2005).",
        "Finally, because compositional distributional semantics is an important research topic (Mitchell and Lapata, 2008; Erk and Pado?, 2008), we sought to evaluate a principled composition strategy: structured vectorial semantics (Wu and Schuler, 2011).",
        "The remainder of this paper proceeds as follows.",
        "Section 2 overviews our similarity metrics, and Section 3 overviews the systems that were defined on these metrics.",
        "Competition results and additional analyses are in Section 4.",
        "We end with discussion on the results in Section 5."
      ]
    },
    {
      "heading": "2 Similarity measures",
      "text": [
        "Because we expect semantic similarity to be multi-layered, we expect that we will need many similarity measures to approximate human similarity judgments.",
        "Rather than reinvent the wheel, we have chosen to introduce features that complement existing successful feature sets.",
        "We utilized 17 features from DKPro Similarity and 21 features from TakeLab, i.e., the two top-performing systems in the 2012 STS task, as a solid baseline.",
        "These are summarized in Table 1.",
        "We introduce 3 categories of new similarity metrics, 9 metrics in all."
      ]
    },
    {
      "heading": "2.1 Named entity measures",
      "text": [
        "Named entity recognition provides a common approximation of semantic content for the information extraction perspective.",
        "We define three simple similarity metrics based on named entities.",
        "First, we computed the named entity overlap (exact string matches) between the two sentences, where NEk was the set of named entities found in sentence Sk.",
        "This is the harmonic mean of how closely S1",
        "Additionally, we relax the constraint of requiring exact string matches between the two sentences by using the longest common subsequence (Allison and Dix, 1986) and greedy string tiling (Wise, 1996) algorithms.",
        "These metrics give similarities between two strings, rather than two sets of strings as we have with NE1 and NE2.",
        "Thus, we follow previous work in greedily aligning these named entities (Lavie and Denkowski, 2009; ?Saric?",
        "et al, 2012) into pairs.",
        "Namely, we compare each pair (nei,1, nej,2) of named entity strings in NE1 and NE2.",
        "The highest-scoring pair is entered into a set of pairs, P .",
        "Then, the next highest pair is added to P if neither named entity is already in P , and discarded otherwise; this continues until there are no more named entities in either NE1 or NE2.",
        "We then define two named entity aligning measures that use the longest common subsequence (LCS) and greedy string tiling (GST) fuzzy string matching algorithms:",
        "(2) where f(?)",
        "is either the LCS or GST algorithm.",
        "In our experiments, we performed named entity recognition with the Stanford NER tool using the standard English model (Finkel et al., 2005).",
        "Also, we used UKP's existing implementation of LCS and GST (?Saric?",
        "et al, 2012) for the latter two measures."
      ]
    },
    {
      "heading": "2.2 Random indexing measures",
      "text": [
        "Random indexing (Kanerva et al., 2000; Sahlgren, 2005) is another distributional semantics framework for representing terms as vectors.",
        "Similar to LSA (Deerwester et al., 1990), an index is created that represents each term as a semantic vector.",
        "But in random indexing, each term is represented by an elemental vector et with a small number of randomly-generated non-zero components.",
        "The intuition for this means of dimensionality reduction is that these randomly-generated elemental vectors are like quasi-orthogonal bases in a traditional geometric semantic space, rather than, e.g., 300 fully orthogonal dimensions from singular value decomposition (Landauer and Dumais, 1997).",
        "For a standard model with random indexing, a contextual term vector ct,std is the the sum of the elemental vectors corresponding to tokens in the document.",
        "All contexts for a particular term are summed and normalized to produce a final term vector vt,std.",
        "Other notions of context can be incorporated into",
        "this model.",
        "Local co-occurrence context can be accounted for in a basic sliding-window model by considering words within some window radius r (instead of a whole document).",
        "Each instance of the term t will have a contextual vector ct,win = et?r + ?",
        "+ et?1 + et+1 +?",
        "+ et+r; context vectors for each instance (in a large corpus) would again be added and normalized to create the overall vector vt,win.",
        "A directional model doubles the dimensionality of the vector and considers left-and right-context separately (half the indices for left-context, half for right-context), using a permutation to achieve one of the two contexts.",
        "A permutated positional model uses a position-specific permutation function to encode the relative word positions (rather than just left-or right-context) separately.",
        "Again, vt would be summed and normalized over all instances of ct.",
        "Sentence vectors from any of these 4 Random Indexing-based models (standard, windowed, directional, positional) are just the sum of the vectors for each term vS = ?t?S vt. We define 4 separate similarity metrics for STS as:",
        "We used the semantic vectors package (Widdows and Ferraro, 2008; Widdows and Cohen, 2010) in the default configuration for the standard model.",
        "For the windowed, directional, and positional models, we used a 6-word window radius with 200 dimensions and a seed length of 5.",
        "All models were trained on the raw text of the Penn Treebank Wall Street Journal corpus and a 100,075-article subset of Wikipedia."
      ]
    },
    {
      "heading": "2.3 Semantic vectorial semantics measures",
      "text": [
        "Structured vectorial semantics (SVS) composes distributional semantic representations in syntactic context (Wu and Schuler, 2011).",
        "Similarity metrics defined with SVS inherently explore the qualities of a fully interactive syntax?semantics interface.",
        "While previous work evaluated the syntactic contributions of this model, the STS task allows us to evaluate the phrase-level semantic validity of the model.",
        "We summarize SVS here as bottom-up vector composition and parsing, then continue on to define the associated similarity metrics.",
        "Each token in a sentence is modeled generatively as a vector e?",
        "of latent referents i?",
        "in syntactic context c?",
        "; each element in the vector is defined as:",
        "where l?",
        "is a constant for preterminals.",
        "We write SVS vector composition between two word (or phrase) vectors in linear algebra form,1 assuming that we are composing the semantics of two children e?",
        "and e?",
        "in a binary syntactic tree into their parent e?",
        ": e?",
        "= M?",
        "(L???",
        "?",
        "e?)?",
        "(L???",
        "?",
        "e?)",
        "?",
        "1 (5) M is a diagonal matrix that encapsulates probabilistic syntactic information; the L matrices are linear transformations that capture how semantically relevant child vectors are to the resulting vector (e.g., L???",
        "defines the the relevance of e?",
        "to e?).",
        "These matrices are defined such that the resulting e?",
        "is a semantic vector of consistent P(x?",
        "?",
        "lci?)",
        "probabilities.",
        "Further detail is in our previous work (Wu, 2010; Wu and Schuler, 2011).",
        "Similarity metrics can be defined in the SVS space by comparing the distributions of the composed e?",
        "vectors ?",
        "i.e., our similarity metric is a comparison of the vector semantics at different phrasal nodes.",
        "We define two measures, one corresponding to the top node c?",
        "(e.g., with a syntactic constituent c?",
        "= ?S?",
        "), and one corresponding to the left and right largest child nodes (e.g.,, c?",
        "= ?NP?",
        "and c ?= ?VP?",
        "for a canonical subject?verb?object sentence in English).",
        "where avgsim() is the harmonic mean of the cosine similarities between the two pairs of arguments.",
        "Top-level similarity comparisons in (6) amounts to comparing the semantics of a whole sentence.",
        "The phrasal similarity function simsvs-phr(S1, S2) in (7) thus seeks to semantically align the two largest sub-trees, and weight them.",
        "Compared to simsvs-top, 1We define the operator ?",
        "as point-by-point multiplication of two diagonal matrices and 1 as a column vector of ones, collapsing a diagonal matrix onto a column vector.",
        "the phrasal similarity function simsvs-phr(S1, S2) assumes there might be some information captured in the child nodes that could be lost in the final composition to the top node.",
        "In our experiments, we used the parser described in Wu and Schuler (2011) with 1,000 headwords and 10 relational clusters, trained on the Wall Street Journal treebank."
      ]
    },
    {
      "heading": "3 Feature combination framework",
      "text": [
        "The similarity metrics of Section 2 were calculated for each of the sentence pairs in the training set, and later the test set.",
        "In combining these metrics, we extended a DKPro Similarity baseline (3.1) with feature selection (3.2) and source-specific models and classification (3.3)."
      ]
    },
    {
      "heading": "3.1 Linear regression via DKPro Similarity",
      "text": [
        "For our baseline (MayoClinicNLPr1wtCDT), we used the UIMA-based DKPro Similarity system from STS 2012 (Ba?r et al., 2012).",
        "Aside from the large number of sound similarity measures, this provided linear regression through the WEKA package (Hall et al., 2009) to combine all of the disparate similarity metrics into a single one, and some preprocessing.",
        "Regression weights were determined on the whole training set for each source."
      ]
    },
    {
      "heading": "3.2 Feature selection",
      "text": [
        "Not every feature was included in the final linear regression models.",
        "To determine the best of the 47 (DKPro?17, TakeLab?21, MayoClinicNLP?9) features, we performed a full forward-search on the space of similarity measures.",
        "In forward-search, we perform 10-fold cross-validation on the training set for each measure, and pick the best one; in the next round, that best metric is retained, and the remaining metrics are considered for addition.",
        "Rounds continue until all the features are exhausted, though a stopping-point is noted when performance no longer increases."
      ]
    },
    {
      "heading": "3.3 Subdomain source models and",
      "text": [
        "classification There were 5 sources of data in the training set: paraphrase sentence pairs (MSRpar), sentence pairs from video descriptions (MSRvid), MT evaluation sentence pairs (MTnews and MTeuroparl) and gloss pairs (OnWN).",
        "In our submitted runs, we trained a separate, feature-selected model based on cross-validation for each of these data sources.",
        "In training data on cross-validation tests, training domain-specific models outperformed training a single conglomerate model.",
        "In the test data, there were 4 sources, with 2 appearing in training data (OnWN, SMT) and 2 that were novel (FrameNet/Wordnet sense definitions (FNWN), European news headlines (headlines)).",
        "We examined two different strategies for applying the 5-source trained models on these 4 test sets.",
        "Both of these strategies rely on a multiclass random forest classifier, which we trained on the 47 similarity metrics.",
        "First, for each sentence pair, we considered the final similarity score to be a weighted combination of the similarity score from each of the 5 source-specific similarity models.",
        "The combination weights were determined by utilizing the classifier's confidence scores.",
        "Second, the final similarity was chosen as the single source-specific similarity score corresponding to the classifier's output class."
      ]
    },
    {
      "heading": "4 Evaluation",
      "text": [
        "The MayoClinicNLP team submitted three systems to the STS-Core task.",
        "We also include here a post-hoc run that was considered as a possible submission.",
        "r1wtCDT This run used the 47 metrics from DKPro, TakeLab, and MayoClinicNLP as a feature pool for feature selection.",
        "Source-specific similarity metrics were combined with classifier-confidence-score weights.",
        "r2CDT Same feature pool as run 1.",
        "Best-match (as determined by classifier) source-specific similarity metric was used rather than a weighted combination.",
        "r3wtCD TakeLab features were removed from the feature pool (before feature selection).",
        "Same source combination as run 1."
      ]
    },
    {
      "heading": "4.1 Competition performance",
      "text": [
        "Table 2 shows the top 10 runs of 90 submitted in the STS-Core task are shown, with our three systems placing 5th, 6th, and 8th.",
        "Additionally, we can see that run 4 would have placed 4th.",
        "Notice that there are significant source-specific differences between the runs.",
        "For example, while run 4 is better overall, runs 1?3 outperform it on all but the headlines and FNWN datasets, i.e., the test datasets that were not present in the training data.",
        "Thus, it is clear that the source-specific models are beneficial when the training data is in-domain, but a combined model is more beneficial when no such training data is available.",
        "r1wtCDT, r2CDT, and r4ALL Due to the source-specific variability among the runs, it is important to know whether the forward-search feature selection performed as expected.",
        "For source specific models (runs 1 and 3) and a combined model (run 4), Figure 1 shows the 10-fold cross-validation scores on the training set as the next feature is added to the model.",
        "As we would expect, there is an initial growth region where the first features truly complement one another and improve performance significantly.",
        "A plateau is reached for each of the models, and some (e.g., SMTnews) even decay if too many noisy features are added.",
        "The feature selection curves are as expected.",
        "Because the plateau regions are large, feature selection could be cut off at about 10 features, with gains in efficiency and perhaps little effect on accuracy.",
        "The resulting selected features for some of the trained models are shown in Table 3."
      ]
    },
    {
      "heading": "4.3 Contribution of MayoClinicNLP metrics",
      "text": [
        "We determined whether including MayoClinicNLP features was any benefit over a feature-selected DKPro baseline.",
        "Table 4 analyzes this question by adding each of our measures in turn to a baseline feature-selected DKPro (dkselected).",
        "Note that this baseline was extremely effective; it would have ranked 4th in the STS competition, outperforming our run 4.",
        "Thus, metrics that improve this baseline must truly be complementary metrics.",
        "Here, we see that only the phrasal SVSmeasure is able to improve performance overall, largely by its contributions to the most difficult categories, FNWN and SMT.",
        "In fact, that system (dkselected + SVSePhrSimilarityMeasure) represents the best-performing run of any that was produced in our framework.",
        "Also, we see some source-specific behavior.",
        "None of our introduced measures are able to improve the headlines similarities.",
        "However, random indexing improves OnWN scores, several strategies improve the FNWN metric, and simsvs-phr is the only viable performance improvement on the SMT corpus."
      ]
    },
    {
      "heading": "5 Discussion",
      "text": [
        "Mayo Clinic's submissions to Semantic Textual Similarity 2013 performed well, placing 5th, 6th, and 8th among 90 submitted systems.",
        "We introduced similarity metrics that used different means to do compositional distributional semantics along with some named entity-based measures, finding some improvement especially for phrasal similarity from structured vectorial semantics.",
        "Throughout, we utilized forward-search feature selection, which enhanced the performance of the models.",
        "We also used source-based linear regression models and considered unseen sources as mixtures of existing sources; we found that in-domain data is necessary for smaller, source-based models to outperform larger, conglomerate models."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "Thanks to the developers of the UKP DKPro system and the TakeLab system for making their code available.",
        "Also, thanks to James Masanz for initial implementations of some similarity measures."
      ]
    }
  ]
}
