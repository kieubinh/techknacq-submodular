{
  "info": {
    "authors": [
      "Pengyu Wang",
      "Phil Blunsom"
    ],
    "book": "CoNLL",
    "id": "acl-W13-3519",
    "title": "Collapsed Variational Bayesian Inference for PCFGs",
    "url": "https://aclweb.org/anthology/W13-3519",
    "year": 2013
  },
  "references": [
    "acl-D07-1072",
    "acl-D10-1117",
    "acl-D12-1063",
    "acl-J93-2004",
    "acl-J98-4004",
    "acl-N07-1018",
    "acl-N07-1051",
    "acl-N09-1009",
    "acl-N09-1012",
    "acl-N09-1069",
    "acl-P03-1054",
    "acl-P04-1061",
    "acl-P05-1010",
    "acl-P06-1055"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper presents a collapsed variational Bayesian inference algorithm for PCFGs that has the advantages of two dominant Bayesian training algorithms for PCFGs, namely variational Bayesian inference and Markov chain Monte Carlo.",
        "In three kinds of experiments, we illustrate that our algorithm achieves close performance to the Hastings sampling algorithm while using an order of magnitude less training time; and outperforms the standard variational Bayesian inference and the EM algorithms with similar training time."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Probabilistic context-free grammars (PCFGs) are commonly used in parsing and grammar induction systems (Johnson, 1998; Collins, 1999; Klein and Manning, 2003; Matsuzaki et al., 2005).",
        "The traditional method for estimating the parameters of PCFGs from terminal strings is the inside-outside (IO) algorithm (Baker, 1979).",
        "As a special instance of the Expectation-Maximization (EM) algorithm (Dempster et al., 1977), based on the principle of maximum-likelihood estimation (MLE), the standard IO algorithm learns relatively uniform probability distributions for grammars, while the true distributions can be highly skewed (Johnson et al., 2007).",
        "In order to encourage sparse grammars and avoid overfitting, recent research for training PCFGs has drifted away from MLE in favor of Bayesian inference algorithms that make either deterministic or stochastic approximations (Kurihara and Sato, 2006; Johnson et al., 2006; Johnson et al., 2007).",
        "Variational Bayesian inference (VB) (Kurihara and Sato, 2006) for PCFGs extends EM and places no constraints when updating parameters in the M step.",
        "By minimising the divergence between the true posterior and an approximate one in which the strong dependencies between the parameters and latent variables are broken, this deterministic algorithm efficiently converges to an inaccurate and only locally optimal solution like EM.",
        "Alternatively, Johnson et al. (2007) proposed two Markov Chain Monte Carlo algorithms for PCFGs that can reach the true posterior after convergence.",
        "However, it is often difficult to diagnose a sampler's convergence, and mixing is notoriously slow for distributions with tightly coupled hidden variables such as PCFGs, especially when the data sets are large.",
        "Therefore, there remains a challenge for more efficient, but also accurate and deterministic inference algorithms for PCFGs.",
        "In this paper, we present a collapsed variational Bayesian inference (CVB) algorithm for PCFGs.",
        "It has the same computational complexity as the standard variational Bayesian inference, but offers almost the same performance as the stochastic algorithms due to its weak assumptions.",
        "The idea of operating VB in the collapsed space was proposed by Teh et al. (2007) and Sung et al. (2008), and it was successfully applied to ?bag-of-words?",
        "models such as latent Dirichlet alocation (LDA) (Teh et al., 2007) and mixture of Gaussian (Sung et al., 2008), where the latent variables are conditionally independent given the parameters.",
        "By combining the CVB idea and the dynamic programming techniques used in structurally dependent models, we deliver a both efficient and accurate algorithm for training PCFGs and other structured natural language models.",
        "The rest of the paper is structured as follows.",
        "We begin with the Bayesian models of PCFGs, and relate the existing training algorithms.",
        "Section 3 introduces collapsed variational Bayesian inference for ?bag-of-words?",
        "models (defined in Section 3.1).",
        "We discuss the difficulty in applying such inference to structured models, followed by an approximate CVB algorithm for PCFGs.",
        "An alternative approach is also included in brief.",
        "In Section 4, we validate our CVB algorithm in three simple experiments.",
        "They are inferring a sparse grammar that describes the morphology of the Sotho language (Johnson et al., 2007), unsupervised dependency parsing (Klein and Manning, 2004) and supervised parsing with latent annotations (Matsuzaki et al., 2005).",
        "Section 5 concludes with future work."
      ]
    },
    {
      "heading": "2 Approximate inference for PCFGs",
      "text": []
    },
    {
      "heading": "2.1 Definitions",
      "text": [
        "A PCFG is a tuple (T,N, S,R, ?",
        "), where T , N , R and ?",
        "are the finite sets of terminals, non-terminals, rules and parameters respectively, and S ?",
        "N is the start symbol.",
        "We adopt a similar notation to Johnson et al. (2007), and assume that the context free grammar G = (T,N, S,R) is in Chomsky normal form and the empty string /?",
        "T .",
        "Hence, each rule r ?",
        "R takes either the form A ?",
        "BC or A ?",
        "w, where A,B,C ?",
        "N and w ?",
        "T .",
        "Let ?A??",
        "be the probability of derivation rule A ?",
        "?, where ?",
        "ranges over (N ?",
        "N) ?",
        "T .",
        "In the Bayesian setting, we place Dirichlet priors with hyperparameters ?A = {?A??}",
        "on each ?A = {?A??}.",
        "Given a corpus of sentences w = (w1, ..., wn) and the corresponding hidden parse trees t = (t1, ..., tn), the joint probability distribution of parameters and variables is1:",
        "where fr(t) is the frequency of product rule r in all the parse trees t, and RA is the set of rules with left-hand side A.",
        "For a Dirichlet distribution PD(?A|?A), B(?A) is the normalization constant that can be written in terms of the gamma function ?",
        "(i.e. the generalised factorial function).",
        "1Strictly speaking, for each (w, t) pair, if a hidden tree t is arbitrary, we need to include two delta functions, namely ?",
        "(w = yield(t)) and ?",
        "(G ??",
        "t).",
        "We assume that both delta functions are true, otherwise the probability of such pair is 0."
      ]
    },
    {
      "heading": "2.2 Variational Bayesian inference",
      "text": [
        "The standard inside-outside algorithm for PCFGs belongs to the general EM class, which is further a subclass of VB (Beal, 2003).",
        "VB maximises the negative free energy ?F(Q(t, ?",
        ")), a lower bound of the log marginal likelihood of the observation logP (w|?).",
        "This is equivalent to minimising the",
        "Q(t, ?)",
        "is an approximate posterior, where the parameters and hidden variables are assumed to be independent.",
        "Thus, it is factorised:",
        "This strong independence assumption allows for the separate updates of Q(t) and Q(?)",
        "iteratively, optimising the negative free energy ?F(Q(z, ?)).",
        "For the traditional IO algorithm using maximum likelihood estimation, Q(?)",
        "is further assumed to be degenerate, i.e.",
        "Q(?)",
        "= ?(?",
        "= ??",
        ").",
        "The distribution over parse tree Q(t) is intractable to compute as its normalization requires summing over all possible parse trees producing w. We use dynamic programming to compute inside and outside probabilities recursively with the aim of accumulating the expected counts.",
        "where PIN(A, i, k) is the inside probability of observation wi,k = wi, ..., wk given A is the root of the subtree, and POUT(A, i, k) is the probability of A spanning (i, k), together with the rest of w.",
        "In the M step, we find the optimal ??",
        "based on the MLE principle:",
        "sense that it allows arbitrary parametric forms of Q(?).",
        "Thus, the update equation in the M step is: Q(?)",
        "?",
        "exp(EQ(t)[logP (w, t, ?|?)])",
        "By the conjugacy property, the new Q(?)",
        "is still in Dirichlet distribution form except with updated hyperparameters as shown by Kurihara and Sato (2006).",
        "Instead, Beal (2003) suggested an equivalent mean parameters ??.",
        "Based on implementation of the EM algorithm, we only need a minor modification in the M step.",
        "where ?",
        "(x) = ??",
        "(x)?x is the digamma function.",
        "From the joint distribution in (1) proportional to the true posterior, we notice that the parameters and hidden variables are intimately coupled.",
        "Fluctuations in the parameters can induce changes in the hidden variables and vice-versa.",
        "Hence, the independence assumption in (2) and Figure 1(d) seems too strong, leading to inaccurate local maximums, although it allows for efficient and deterministic updates in EM and VB.",
        "The dependencies between parameters and hidden variables are kept intact for the remaining algorithms in this paper."
      ]
    },
    {
      "heading": "2.3 Markov Chain Monte Carlo",
      "text": [
        "The standard Gibbs sampler for PCFGs iteratively samples the parameters ?",
        "and all the parse trees t. Its mixing can be slowed by again the strong dependencies between the parameters and hidden variables.",
        "Instead of reparsing all the hidden trees t for each sample of ?, collapsed Gibbs sampling (CGS) improves upon Gibbs sampling in terms of convergence speed by integrating out the parameters, and sampling directly from P (t|w, ?)",
        "in a component-wise manner.",
        "Thus, it also deals with the dependencies exactly.",
        "By using the conjugacy property, we can easily compute the marginal distribution of w and t:",
        "where we define fA(t) to be a vector of rule frequencies in t indexed by A ?",
        "?",
        "?",
        "RA.",
        "Hence, the conditional distribution for a parse tree ti given all others is:",
        "where w?i and t?i denote all other sentences and trees.",
        "It is noticeable that sampling a parse tree from the above conditional distribution is difficult.",
        "The frequencies fA(t) effectively mean that the production probabilities are dependent on the current parse tree ti.",
        "That is rule parameters can be updated on the fly inside a parse tree, which prohibits efficient dynamic programming tricks.",
        "In order to solve this problem, Johnson et al. (2007) proposed a Hastings sampler that specified an alternative rule probabilities ?H of a proposal distribution P (ti|wi, ?H), where",
        "The rule probabilities ?H are based on the statistics collected from all other parse trees, and they are fixed for the conditional distribution of the current parse tree.",
        "Therefore, by using a variant of inside algorithm (Goodman, 1998), one can efficiently sample a parse tree, which will be either accepted or rejected based on the Metropolis choice.",
        "The MCMC based algorithms do not make any assumptions at all, and they can converge to the true posterior, either in joint or collapsed space as shown in Figure 1(b), 1(c).",
        "However, one needs to have experience about the number of samples to be collected and the burn-in period.",
        "For computationally intensive tasks such as learning PCFGs from a large corpus, a sufficiently large number of samples are required to decrease the sampling variance.",
        "Therefore, MCMC algorithms improves the performance over EM and VB at the cost of much more training time.",
        "for Gibbs sampling (b), collapsed Gibbs sampling (c), variational Bayesian inference (d), and collapsed variational Bayesian inference (e).",
        "We use dashed lines to depict the weak dependencies."
      ]
    },
    {
      "heading": "3 Collapsed variational Bayesian",
      "text": []
    },
    {
      "heading": "inference 3.1 For bag-of-words models",
      "text": [
        "Leveraging the insight that a sampling algorithm in collapsed space mixes faster than the standard one, Teh et al. (2007) proposed a similar argument that a VB inference algorithm in collapsed space is more effective than the standard one.",
        "Following the success in LDA (Teh et al., 2007), a number of research results have been accumulated around applying CVB to a variety of ?bag-of-words?",
        "models (Sung et al., 2008; Sato et al., 2012; Wang and Blei, 2012).",
        "Formally, we define a model to be independent and identically distributed (i.i.d.)",
        "(or informally ?bag-of-words?)",
        "if its hidden variables are conditionally independent given the parameters.",
        "LDA, IBM word alignment model 1 and 2, and various finite mixture models are typical examples.",
        "For an i.i.d.",
        "model, integrating out parameters induces dependencies that spread over many hidden variables, and thus the dependency between any two variables is very weak.",
        "This provides an ideal setting to apply the mean field method (i.e. fully factorized VB), as its underlying assumption is that any variable depends on only the summary statistics collected from other variables called the field, and any particular variable's impact on the field is very small.",
        "Hence, the mean field assumption is better satisfied in collapsed space with very weak dependencies than in joint space with strong dependencies.",
        "As a result, we expect that VB in collapsed space can achieve more accurate results than the standard VB, and the results would be very close to the true posterior.",
        "Even in collapsed space, CVB remains a deterministic algorithm that updates the posterior distributions over the hidden variables just like VB and EM.",
        "Therefore, we expect CVB to be computationally efficient as well."
      ]
    },
    {
      "heading": "3.2 For structured NLP models",
      "text": [
        "We notice that the basic condition for applying the CVB algorithm to a specific model is for the model to be i.i.d., such that the hidden variables are only weakly dependent in collapsed space, providing an ideal condition to operate VB.",
        "However, the i.i.d.",
        "condition is certainly not true for structured NLP models such as hidden Markov models (HMMs) and PCFGs.",
        "Given the shape of a parse tree, a hidden variable is strongly dependent on its parent, siblings and children, and weakly dependent on the rest.",
        "Even worse, to infer a grammar from terminal strings, we don't even have access to the shape of parse trees, let alne analyzing the dependencies of hidden variables inside trees.",
        "Although the PCFG model is not i.i.d.",
        "at the variable level, we can lift the idea of CVB up to the tree level.",
        "As our research domain is those large scale applications in language processing, a common feature of those problems is that there are usually many sentences, each of which has a hidden parse tree behind it.",
        "Hence, we may consider each sentence together with its parse tree to be drawn i.i.d.",
        "from the same set of parameters.",
        "Therefore, at the tree level, a PCFG can be considered as an i.i.d.",
        "model as shown in Figure 1(a) and thus, it can be fitted in the CVB framework as described in Section 3.1.",
        "We summarise the as",
        "sumptions made by each algorithm in Figure 1(be) before presenting the CVB algorithm formally.",
        "The CVB algorithm for the PCFG model keeps the dependencies between the parameters and the hidden parse trees in an exact fashion:",
        "We factorise Q(t) by breaking only the weak dependencies between parse trees, while keeping the inside dependencies intact, as we don't make further assumptions about Q(t) for each t.",
        "By the above factorisations, we compute the negative variational free energy ?F(Q(t)Q(?|t)) as follows:",
        "Maximizing ?F(Q(t)Q(?|t)) requires to update Q(?|t) and Q(t) in turn.",
        "In particular, Q(?|t) is set equal to the true posterior P (?|w, t, ?",
        "):",
        "Finally, we update the approximate posterior for each parse tree t by using the mean field method in the collapsed space:",
        "The inner term P (wi, ti|w?i, t?i, ?)",
        "in the above equation is just the unnormalized collapsed Gibbs sampling in (5).",
        "Plugging in (5), and expanding terms such asB(?A) and ?",
        "(x), we obtain an exact computation of Q(ti) in Figure 2.",
        "The exact computation is both intractable and expensive.",
        "The intractability comes from the similar problem as in the collapsed Gibbs sampling that we are unable to calculate the normalisation term ?ti Q(ti).",
        "Hence, we follow Johnson et al(2007) to approximate it by using only the statistics from other sentences, namely ?H and ignoring the local contribution.",
        "We discuss the accuracy of (7) in Section 3.3.",
        "For those expensive computations of the expected log counts in Figure 2, Teh et al. (2007) and Sung et al.",
        "(2008) suggested the use of a linear Gaussian approximation based on the law of large numbers.",
        "Substituting (7) into (6), and employing the linear approximation, we derive an approximate CVB algorithm as shown in Figure 3.",
        "In addition, its form is much more simplified and interpretable compared with the exact computation in Figure 2.",
        "The surprising similarity between the approximate CVB update in Figure 3 and E step update in",
        "(3) indicates that the dynamic programming used in both EM and VB can take over from now.",
        "To run inside-outside recursion, the EM algorithm employs the parameters ??",
        "based on maximum likelihood estimation; the VB algorithm employs",
        "the mean parameters ??",
        "; and our CVB algorithm employs the parameters ?CVB computed from the expected counts of all other sentences.",
        "The implementation can be easily achieved by modifying code of the EM algorithm.",
        "We keep track of the expected counts at global level, subtract the local mean counts for ti before update, run the inside-outside recursion using ?CVB, and finally add the updated distribution back into the global counts.",
        "Therefore, we only need to replace the parameters with the expected counts, and make update after each sentence; the core of the inside-outside implementation remains the same.",
        "Our CVB algorithm bears some similarities to the online EM algorithm with maximum a posterior (MAP) updates (Neal and Hinton, 1998; Liang and Klein, 2009), but they differ in several ways.",
        "The online EM algorithm updates each tree ti based on the statistics of all the trees, optimising the same objective function p(w|?)",
        "as the batch EM algorithm.",
        "MAP estimation searches for the optimal posterior p(w|?)p(?).",
        "On the other hand, our CVB algorithm optimises the data likelihood p(w).",
        "The smoothing effects for the MAP estimation (?A??",
        "?",
        "1) prevent the use of sparse priors, whereas the CVB algorithm (?A??)",
        "overcomes such difficulty by parameter integration."
      ]
    },
    {
      "heading": "3.3 Discussion",
      "text": [
        "Breaking the weak dependencies between hidden variables and employing the linear approximation have been argued to be accurate (Teh et al., 2007; Sung et al., 2008; Sato and Nakagawa, 2012), and they are the standard procedures in applying the CVB algorithms to i.i.d.",
        "models.",
        "In our CVB algorithm for PCFGs, we introduce an extra approximation in (7), which we argue is accurate.",
        "Theoretically, the inaccuracy only occurs when there are repeated rules in a parse tree as shown in Figure 2, so the same rule seen later uses a slightly different probability.",
        "Even if the inaccuracy indeed occurs, in our described scenario of many sentences, the local contribution from a single sentence is small compared with the statistics from all other sentences.",
        "Empirically, we replicate the experiment of Setho language by Johnson et al. (2007) in Section 4.1, and we find that the sampled trees based on ?H never get rejected, illustrating an acceptance rate close to 100%, and meaning that ?H is a very accurate Metropolis proposal.",
        "Since all the assumptions made by the CVB algorithm",
        "are reasonable and weak, we expect its results to be close to true posteriors."
      ]
    },
    {
      "heading": "3.4 An alternative approach",
      "text": [
        "We briefly sketch an alternative CVB algorithm at the variable level for completeness.",
        "For a structured NLP model with its shape to be fixed such as the PCFG with latent annotations (PCFG-LA) (Matsuzaki et al., 2005) (See definition in Section 4.3), we can simply ignore all the dependencies between the hidden variables in the collapsed space, despite whether they are strong (for adjacent nodes) or weak (for others).",
        "Although it seems that we have made unreasonable assumptions, it is not transparent which is worse comparing with the assumptions in the standard VB.",
        "Following this assumption, we can derive a CVB algorithm similar to the corresponding local sampling algorithm that samples one hidden variable at a time.",
        "For example, the approximate posterior over the subtype of the node A in the above tree fragment in Figure 4 is updated follows:",
        "where we use A to denote the node position, and a to denote its hidden subtype.",
        "q(A = a) means the probability of node A being in subtype a.",
        "In addition, we need to take into account the distributions over its adjacent variables.",
        "In our case, A is strongly dependent on nodesB,C,D,E, and only weakly dependent on other variables (not shown in the above tree fragment) via global counts, e.g.:",
        "However, it is not obvious how to use this alternative approach in general, and the performances of resulting algorithms remain unclear.",
        "Therefore, we implement only the CVB algorithm at the tree level in Section 3.2 for our experiments."
      ]
    },
    {
      "heading": "4 Experiments",
      "text": [
        "We conduct three simple experiments to validate our CVB algorithm for PCFGs.",
        "In Section 4.1, we illustrate the significantly reduced training time of our CVB algorithm compared to the related Hastings algorithm; whereas in later two sections, we demonstrate the increased performance of our CVB algorithm compared to the corresponding VB and EM algorithms."
      ]
    },
    {
      "heading": "4.1 Inferring sparse grammars",
      "text": [
        "Firstly, we conduct the same experiment of inferring sparse grammars describing the morphology of the Sotho language as in Johnson et al. (2007).",
        "We use the same corpus of unsegmented Sotho verb types from CHILDES (MacWhinney and Snow, 1985), and define the same initial CFG productions by allowing each non-terminal to emit any substrings in the corpus as terminals plus five predefined morphological rules at the top level.",
        "We randomly withhold 10% of the verb types from the corpus for testing, and use the rest 90% for training.",
        "Both algorithms are evaluated by their per word perplexity on the test data set with prior set to 10?5 as suggested by Johnson et al. (2007).",
        "We run 5 times with random starts, and report the averaged results in Figure 5.",
        "The Hastings algorithm2 takes roughly 1,000 iterations to converge, while our CVB algorithm reaches the convergence even before 10 iterations, consuming only a fraction of training time (CVB: 1.5 minutes; Hastings: 20 minutes).",
        "As well as little difference margin in final perplexities shown in Figure 5, we also evaluated segmentation quality measured by the F1 scores, and again the difference is trivial (CVB: 29.8%, Hastings: 31.3%)."
      ]
    },
    {
      "heading": "4.2 Dependency model with valence",
      "text": [
        "As a second empirical validation of our CVB inference algorithm, we apply it to unsupervised grammar induction with the popular Dependency Model with Valence (DMV) (Klein and Manning, 2004).",
        "Although the original maximum likelihood formulation of this model has long since been surpassed by more advanced models, all of the state-of-the-art approaches to unsupervised dependency parsing still have DMV at their core (Headden III et al., 2009; Blunsom and Cohn, 2010; Spitkovsky et al., 2012).",
        "As such we believe demonstrating",
        "extracted corpus of Sotho verbs.",
        "improved inference on this core model will enable future improvements to more complex models.",
        "We evaluate a Dirichlet-Multinomial formulation of DMV in the standard fashion by training on sections 2-21 and testing on section 23 of the Penn.",
        "Wall Street Journal treebank (Marcus et al., 1993).",
        "We initialise our models using the original harmonic initialiser (Klein and Manning, 2004).",
        "Figure 6 displays the directed accuracy results for DMV model trained with CVB and VB with Dirichlet ?",
        "parameters of either 1 or 0.1, as well as the previously reported MLE result.",
        "In both cases we see superior results for CVB inference, providing evidence that CVB may be a better choice of inference algorithm for Bayesian formulations of generative grammar induction models such as DMV."
      ]
    },
    {
      "heading": "4.3 PCFG with latent annotations",
      "text": [
        "The vanilla PCFGs estimated by simply taking the empirical rule frequencies off treebanks are not accurate models to capture the syntactic structures in most natural languages as demonstrated by Char-niak (1997) and Klein and Manning (2003).",
        "Our third experiment is to apply the CVB algorithm to the PCFGs with latent annotations (PCFGs-LA) (Matsuzaki et al., 2005), where each non-terminal symbol is augmented with hidden variables (or subtypes).",
        "Given a parsed corpus, training a PCFG-LA yields a finer grammar with the automatically induced features represented by the subtypes.",
        "For example, an augmented binary rule takes the form A[a] ?",
        "B[b]C[c], where a, b, c ?",
        "[1, H] are the hidden subtypes, and H denotes the number of subtypes for each non-terminal.",
        "VB and CVB.",
        "Precision, Recall, F1 scores, Exact match scores on section 23, WSJ.",
        "We follow the same experiment set-up as DMV, and report the results on the section 23, using the best grammar tested on the development set (section 22) from 5 random runs for each algorithm.",
        "We adopt Petrov et al. (2006)'s methods to process the data: right binarising and replacing infrequent words with the generic unknown word marker for English, and to initialise: adding 1% randomness to the parameters ?0 to start the EM training.",
        "We calculate the expected counts from (G, ?0) to initialise our VB and CVB algorithms.",
        "In Table 1, when each non-terminal is split into 2 hidden subtypes, we show that our CVB algorithm outperforms the EM and VB algorithms in terms of all the evaluation objectives.",
        "We also investigate the hidden state space with higher dimensions (4,8,16 subtypes), and find our CVB algorithm retains the advantages over the other two, whereas the VB algorithm fails to surpass the EM algorithm as reported in Figure 7."
      ]
    },
    {
      "heading": "5 Conclusion and future work",
      "text": [
        "In this paper we have presented a collapsed variational Bayesian inference algorithm for PCFGs.",
        "We make use of the common scenario where the data consists of multiple short sentences, such that",
        "we can ignore the local dependencies induced by collapsing the parameters.",
        "The assumptions in our CVB algorithm are reasonable for a range of parsing applications and justified in three tasks by the empirical observations: it produces more accurate results than standard VB, and close results to sampling with significantly less training time.",
        "While not state-of-the-art, the models we have demonstrated our CVB algorithm on underlie a number of high performance grammar induction and parsing systems (Cohen and Smith, 2009; Blunsom and Cohn, 2010; Petrov and Klein, 2007; Liang et al., 2007).",
        "Therefore, our work naturally extends to employing our CVB algorithm in more advanced models such as hierarchical splitting and merging system used in Berkeley parser (Petrov and Klein, 2007), and generalising our CVB algorithm to the non-parametric models such as tree substitution grammars (Blunsom and Cohn, 2010) and infinite PCFGs (Liang et al., 2007).",
        "We have also sketched an alternative CVB algorithm which makes a harsher independence assumption for the latent variables but then requires no approximation of the variational posterior by performing inference individually for each parse node.",
        "This model breaks some strong dependencies within parse trees, but if we expect the posterior to be highly skewed by using a sparse prior, the product of constituent marginals may well be a good approximation.",
        "We leave further exploration of this algorithm for future work."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "We would like to thank Mark Johnson for the data used in Section 4.1 and valuable advice."
      ]
    }
  ]
}
