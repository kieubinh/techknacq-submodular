{
  "info": {
    "authors": [
      "Peter Koomen",
      "Vasin Punyakanok",
      "Dan Roth",
      "Scott Wen-Tau Yih"
    ],
    "book": "Conference on Computational Natural Language Learning CoNLL",
    "id": "acl-W05-0625",
    "title": "Generalized Inference With Multiple Semantic Role Labeling Systems",
    "url": "https://aclweb.org/anthology/W05-0625",
    "year": 2005
  },
  "references": [
    "acl-C02-1151",
    "acl-C04-1197",
    "acl-W04-2412",
    "acl-W04-3212"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We present an approach to semantic role labeling (SRL) that takes the output of multiple argument classifiers and combines them into a coherent predicate-argument output by solving an optimization problem.",
        "The optimization stage, which is solved via integer linear programming, takes into account both the recommendation of the classifiers and a set of problem specific constraints, and is thus used both to clean the classification results and to ensure structural integrity of the final role labeling.",
        "We illustrate a significant improvement in overall SRL performance through this inference."
      ]
    },
    {
      "heading": "1 SRL System Architecture",
      "text": [
        "Our SRL system consists of four stages: pruning, argument identification, argument classification, and inference.",
        "In particular, the goal of pruning and argument identification is to identify argument candidates for a given verb predicate.",
        "The system only classifies the argument candidates into their types during the argument classification stage.",
        "Linguistic and structural constraints are incorporated in the inference stage to resolve inconsistent global predictions.",
        "The inference stage can take as its input the output of the argument classification of a single system or of multiple systems.",
        "We explain the inference for multiple systems in Sec. 2."
      ]
    },
    {
      "heading": "1.1 Pruning",
      "text": [
        "Only the constituents in the parse tree are considered as argument candidates.",
        "In addition, our system exploits the heuristic introduced by (Xue and Palmer, 2004) to filter out very unlikely constituents.",
        "The heuristic is a recursive process starting from the verb whose arguments are to be identified.",
        "It first returns the siblings of the verb; then it moves to the parent of the verb, and collects the siblings again.",
        "The process goes on until it reaches the root.",
        "In addition, if a constituent is a PP (propositional phrase), its children are also collected.",
        "Candidates consisting of only a single punctuation mark are not considered.",
        "This heuristic works well with the correct parse trees.",
        "However, one of the errors by automatic parsers is due to incorrect PP attachment leading to missing arguments.",
        "To attempt to fix this, we consider as arguments the combination of any consecutive NP and PP, and the split of NP and PP inside the NP that was chosen by the previous heuristics."
      ]
    },
    {
      "heading": "1.2 Argument Identification",
      "text": [
        "The argument identification stage utilizes binary classification to identify whether a candidate is an argument or not.",
        "We train and apply the binary classifiers on the constituents supplied by the pruning stage.",
        "Most of the features used in our system are standard features, which include .",
        "Predicate and POS tag of predicate indicate the lemma of the predicate and its POS tag.",
        ".",
        "Voice indicates tbe voice of the predicate.",
        ".",
        "Phrase type of the constituent.",
        ".",
        "Head word and POS tag of the head word include head word and its POS tag of the constituent.",
        "We use rules introduced by (Collins, 1999) to extract this feature.",
        ".",
        "First and last words and POS tags of the constituent.",
        ".",
        "Two POS tags before and after the constituent.",
        ".",
        "Position feature describes if the constituent is before or after the predicate relative to the position in the sentence.",
        "• Path records the traversal path in the parse tree from the predicate to the constituent.",
        "• Subcategorization feature describes the phrase structure around the predicate’s parent.",
        "It records the immediate structure in the parse tree that expands to its parent.",
        "• Verb class feature is the class of the active predicate described in PropBank Frames.",
        "• Lengths of the target constituent, in the numbers of words and chunks separately.",
        "• Chunk tells if the target argument is, embeds, overlaps, or is embedded in a chunk with its type.",
        "• Chunk pattern length feature counts the number of chunks from the predicate to the argument.",
        "• Clause relative position is the position of the target word relative to the predicate in the pseudo-parse tree constructed only from clause constituent.",
        "There are four configurations – target constituent and predicate share the same parent, target constituent parent is an ancestor of predicate, predicate parent is an ancestor of target word, or otherwise.",
        "• Clause coverage describes how much of the local clause (from the predicate) is covered by the argument.",
        "It is round to the multiples of 1/4."
      ]
    },
    {
      "heading": "1.3 Argument Classification",
      "text": [
        "This stage assigns the final argument labels to the argument candidates supplied from the previous stage.",
        "A multi-class classifier is trained to classify the types of the arguments supplied by the argument identification stage.",
        "To reduce the excessive candidates mistakenly output by the previous stage, the classifier can also classify the argument as NULL (“not an argument”) to discard the argument.",
        "The features used here are the same as those used in the argument identification stage with the following additional features.",
        "• Syntactic frame describes the sequential pattern of the noun phrases and the predicate in the sentence.",
        "This is the feature introduced by (Xue and Palmer, 2004).",
        "• Propositional phrase head is the head of the first phrase after the preposition inside PP.",
        "• NEG and MOD feature indicate if the argument is a baseline for AM-NEG or AM-MOD.",
        "The rules of the NEG and MOD features are used in a baseline SRL system developed by Erik Tjong Kim Sang (Carreras and M`arquez, 2004).",
        "• NE indicates if the target argument is, embeds, overlaps, or is embedded in a named-entity along with its type."
      ]
    },
    {
      "heading": "1.4 Inference",
      "text": [
        "The purpose of this stage is to incorporate some prior linguistic and structural knowledge, such as “arguments do not overlap” or “each verb takes at most one argument of each type.” This knowledge is used to resolve any inconsistencies of argument classification in order to generate final legitimate predictions.",
        "We use the inference process introduced by (Punyakanok et al., 2004).",
        "The process is formulated as an integer linear programming (ILP) problem that takes as inputs the confidences over each type of the arguments supplied by the argument classifier.",
        "The output is the optimal solution that maximizes the linear sum of the confidence scores (e.g., the conditional probabilities estimated by the argument classifier), subject to the constraints that encode the domain knowledge.",
        "Formally speaking, the argument classifier attempts to assign labels to a set of arguments, 51�M, indexed from 1 to M. Each argument 5z can take any label from a set of argument labels, P, and the indexed set of arguments can take a set of labels, c1:M E PM.",
        "If we assume that the argument classifier returns an estimated conditional probability distribution, Prob(5z = cz), then, given a sentence, the inference procedure seeks an global assignment that maximizes the following objective function,",
        "subject to linguistic and structural constraints.",
        "In other words, this objective function reflects the expected number of correct argument predictions, subject to the constraints.",
        "The constraints are encoded as the followings.",
        "• No overlapping or embedding arguments.",
        "• No duplicate argument classes for A0-A5.",
        "• Exactly one V argument per predicate considered.",
        "• If there is C-V, then there has to be a V-A1-CV pattern.",
        "• If there is an R-arg argument, then there has to be an arg argument.",
        "• If there is a C-arg argument, there must be an arg argument; moreover, the C-arg argument must occur after arg.",
        "• Given the predicate, some argument types are illegal (e.g. predicate ‘stalk’ can take only A0 or A1).",
        "The illegal types may consist of A0-A5 and their corresponding C-arg and R-arg arguments.",
        "For each predicate, we look for the minimum value of i such that the class Ai is mentioned in its frame file as well as its maximum value j.",
        "All argument types Ak such that k < i or k > j are considered illegal."
      ]
    },
    {
      "heading": "2 Inference with Multiple SRL Systems",
      "text": [
        "The inference process allows a natural way to combine the outputs from multiple argument classifiers.",
        "Specifically, given k argument classifiers which perform classification on k argument sets, {51, ... , 5k}.",
        "The inference process aims to optimize the objective function: ..., traders say, unable to cool the selling panic in both stocks and futures.",
        "where Probj is the probability output by system j.",
        "Note that all systems may not output with the same set of argument candidates due to the pruning and argument identification.",
        "For the systems that do not output for any candidate, we assign the probability with a prior to this phantom candidate.",
        "In particular, the probability of the NULL class is set to be 0.6 based on empirical tests, and the probabilities of the other classes are set proportionally to their occurrence frequencies in the training data.",
        "For example, Figure 1 shows the two candidate sets for a fragment of a sentence, “..., traders say, unable to cool the selling panic in both stocks and futures.” In this example, system A has two argument candidates, a1 = “traders” and a4 = “the selling panic in both stocks and futures”; system B has three argument candidates, b1 = “traders”, b2 = “the selling panic”, and b3 = “in both stocks and futures”.",
        "The phantom candidates are created for a2, a3, and b4 of which probability is set to the prior.",
        "Specifically for this implementation, we first train two SRL systems that use Collins’ parser and Char-niak’s parser respectively.",
        "In fact, these two parsers have noticeably different output.",
        "In evaluation, we run the system that was trained with Charniak’s parser 5 times with the top-5 parse trees output by Charniak’s parser1.",
        "Together we have six different outputs per predicate.",
        "Per each parse tree output, we ran the first three stages, namely pruning, argument",
        "identification, and argument classification.",
        "Then a joint inference stage is used to resolve the inconsistency of the output of argument classification in these systems."
      ]
    },
    {
      "heading": "3 Learning and Evaluation",
      "text": [
        "The learning algorithm used is a variation of the Winnow update rule incorporated in SNoW (Roth, 1998; Roth and Yih, 2002), a multi-class classifier that is tailored for large scale learning tasks.",
        "SNoW learns a sparse network of linear functions, in which the targets (argument border predictions or argument type predictions, in this case) are represented as linear functions over a common feature space.",
        "It improves the basic Winnow multiplicative update rule with a regularization term, which has the effect of trying to separate the data with a large margin separator (Grove and Roth, 2001; Hang et al., 2002) and voted (averaged) weight vector (Freund and Schapire, 1999).",
        "Softmax function (Bishop, 1995) is used to convert raw activation to conditional probabilities.",
        "If there are n classes and the raw activation of class i is actz, the posterior estimation for class i is In summary, training used both full and partial syntactic information as described in Section 1.",
        "In training, SNoW’s default parameters were used with the exception of the separator thickness 1.5, the use of average weight vector, and 5 training cycles.",
        "The parameters are optimized on the development set.",
        "Training for each system took about 6 hours.",
        "The evaluation on both test sets which included running",
        "Overall results on the development and test sets are shown in Table 1.",
        "Table 2 shows the results of individual systems and the improvement gained by the joint inference on the development set."
      ]
    },
    {
      "heading": "4 Conclusions",
      "text": [
        "We present an implementation of SRL system which composed of four stages – 1) pruning, 2) argument identification, 3) argument classification, and 4) inference.",
        "The inference provides a natural way to take the output of multiple argument classifiers and combines them into a coherent predicate-argument output.",
        "Significant improvement in overall SRL performance through this inference is illustrated."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "We are grateful to Dash Optimization for the free academic use of Xpress-MP.",
        "This research is supported by ARDA’s AQUAINT Program, DOI’s Reflex program, and an ONR MURI Award."
      ]
    }
  ]
}
