{
  "info": {
    "authors": [
      "Kyung-Mi Park",
      "Hae-Chang Rim"
    ],
    "book": "Conference on Computational Natural Language Learning CoNLL",
    "id": "acl-W05-0632",
    "title": "Maximum Entropy Based Semantic Role Labeling",
    "url": "https://aclweb.org/anthology/W05-0632",
    "year": 2005
  },
  "references": [
    "acl-J02-3001",
    "acl-W04-2419",
    "acl-W05-0620"
  ],
  "sections": [
    {
      "heading": "1 Introduction",
      "text": [
        "The semantic role labeling (SRL) refers to finding the semantic relation (e.g.",
        "Agent, Patient, etc.)",
        "between a predicate and syntactic constituents in the sentences.",
        "Especially, with the argument information of the predicate, we can derive the predicate-argument structures, which are useful for the applications such as automatic information extraction.",
        "As previous work on the SRL, there have been many machine learning approaches.",
        "(Gildea and Jurafsky, 2002; Pradhan et al., 2003; Lim et al., 2004).",
        "In this paper, we present a two-phase SRL method based on a maximum entropy (ME) model.",
        "We first identify parse constituents that represent valid semantic arguments of a given predicate, and then assign appropriate semantic roles to the the identified parse constituents.",
        "In the two-phase SRL method, the performance of the argument identification phase is very important, because the argument classification is performed on the region identified at the identification phase.",
        "In this study, in order to improve the performance of identification, we try to incorporate clause boundary restriction and tree distance restriction into preprocessing of the identification phase.",
        "Since features for identifying arguments are different from features for classifying a role, we need to determine different feature sets appropriate for the tasks.",
        "We determine final feature sets for each phase with experiments.",
        "We participate in the closed challenge of the CoNLL-2005 shared task and report results on both development and test sets.",
        "A detailed description of the task, data and related work can be found in Carreras and M`arquez (2005)."
      ]
    },
    {
      "heading": "2 System Description",
      "text": [
        "In this section, we describe our system that identifies and classifies semantic arguments.",
        "First, we explain preprocessing of the identification phase.",
        "Next, we describe features employed.",
        "Finally, we explain classifiers used in each phase."
      ]
    },
    {
      "heading": "2.1 Preprocessing",
      "text": [
        "We thought that the occurrence of most semantic arguments are sensitive to the boundary of the immediate clause or the upper clauses of a predicate.",
        "Also, we assumed that they exist in the uniform distance on the parse tree from the predicate’s parent node (called Pp) to the parse constituent’s parent node (called P,).",
        "Therefore, for identifying semantic arguments, we do not need to examine all parse constituents in a parse tree.",
        "In this study, we use the clause boundary restriction and the tree distance restriction, and they can provide useful information for spotting the probable search space which include semantic arguments.",
        "In Figure 1 and Table 1, we show an example of applying the tree distance restriction.",
        "We show the distance between Pp=VP and the nonterminals of a parse tree in Figure 1.",
        "For example, NP2:d=3 means 3 times downward movement through the parse tree from Pp=VP to P,=NP2.",
        "NP4 does not have the distance from Pp because we allow to move only upward or only downward through the tree from Pp to P,.",
        "In Table 1, we indicate all 14 argument candidates that correspond to tree distance restriction (d<3).",
        "Only 2 of the 14 argument candidates are actually served to semantic arguments (NP4, PP)."
      ]
    },
    {
      "heading": "2.2 Features",
      "text": [
        "The following features describe properties of the verb predicate.",
        "These featues are shared by all the parse constituents in the tree.",
        "• pred lex: this is the predicate itself.",
        "• pred POS: this is POS of the predicate.",
        "• pred phr: this is the syntactic category of Pp.",
        "• pred type: this represents the predicate usage such as to-infinitive form, the verb predicate of a main clause, and otherwise.",
        "• voice: this is a binary feature identifying whether the predicate is active or passive.",
        "• sub cat: this is the phrase structure rule expanding the predicate’s parent node in the tree.",
        "• pt+pl: this is a conjoined feature of pred type and pred lex.",
        "Because the maximum entropy model assumes the independence of features, we need to conjoin the coherent features.",
        "The following features characterize the internal structure of a argument candidate.",
        "These features change with the constituent under consideration.",
        "• head lex: this is the headword of the argument candidate.",
        "We extracts the headword by using the Collins’s headword rules.",
        "• head POS: this is POS of the headword.",
        "• head phr: this is the syntactic category of P�.",
        "• cont lex: this is the content word of the argument candidate.",
        "We extracts the content word by using the head table of the chunklink.pl 1.",
        "• cont POS: this is POS of the content word.",
        "• gov: this is the governing category introduced by Gildea and Jurafsky (2002).",
        "The following features capture the relations between the verb predicate and the constituent.",
        "• path: this is the syntactic path through the parse tree from the parse constituent to the predicate.",
        "• pos: this is a binary feature identifying whether the constituent is before or after the predicate.",
        "• pos+clau: this, conjoined with pos, indicates whether the constituent is located in the immediate clause, in the first upper clause, in the second upper clause, or in the third upper clause.",
        "• pos+VP, pos+NP, pos+SBAR: these are numeric features representing the number of the specific chunk types between the constituent and the predicate.",
        "• pos+CC, pos+comma, pos+colon, pos+quote: these are numeric features representing the number of the specific POS types between the constituent and the predicate .",
        "• pl+hl (pred lex + head lex), pl+cl (pred lex + cont lex), v+gov (voice + gov)."
      ]
    },
    {
      "heading": "2.3 Classifier",
      "text": [
        "The ME classifier for the identification phase classifies each parse constituent into one of the following classes: ARG class or NON-ARG class.",
        "The ME classifier for the classification phase classifies the identified argument into one of the predefined semantic roles (e.g. A0, A1, AM-ADV, AM-CAU, etc.",
        ")."
      ]
    },
    {
      "heading": "3 Experiments",
      "text": [
        "To test the proposed method, we have experimented with CoNLL-2005 datasets (Wall Street sections 02- 21 as training set, Charniak’ trees).",
        "The results have been evaluated by using the srl-eval.pl script provided by the shared task organizers.",
        "For building classifiers, we utilized the Zhang le’s MaxEnt toolkit 2, and the L-BFGS parameter estimation algorithm with Gaussian Prior smoothing.",
        "Table 2 shows the different ways of reducing the number of argument candidates.",
        "The 2nd and 3rd columns (#can., %can.)",
        "indicate the number of argument candidates and the percentage of argument candidates that satisfy each restriction on the training set.",
        "The 4th and 5th columns (#arg., %arg.)",
        "indicate the number of correct arguments and the percentage of correct arguments that satisfy each restriction on the training set.",
        "The last column (F,3_1) indicates the performance of the identification task on the development set by applying each restriction.",
        "In no restriction, All1 extracts candidates from all the nonterminals’s child nodes of a tree.",
        "All2 filter the nonterminals which include at least one non",
        "terminal child 3.",
        "All3 filter the nonterminals which include at least one nonterminal child and have distance from Pp.",
        "We use All3 as a baseline.",
        "In restriction on clause boundary, for example, 2/0 means that the left search boundary for identifying the argument is set to the left boundary of the second upper clause, and the right search boundary is set to the right boundary of the immediate clause.",
        "In restriction on tree distance, for example, 7/1 means that it is possible to move up to 7 times upward (d<7) through the parse tree from Pp to Pc, and it is possible to move up to once downward (d<1) through the parse tree from Pp to Pc.",
        "In clause boundary & tree distance, for example, 3/1,7/1 means the case when we use both the clause boundary (3/1) and the tree distance (7/1).",
        "According to the experimental results, we use 7/1 tree distance restriction for all following experiments.",
        "By applying the restriction, we can remove about 47.3% (%can.= 52.70%) of total argument candidates as compared with All3.",
        "93.90% (%arg.)",
        "corresponds to the upper bound on recall.",
        "In order to estimate the relative contribution of each feature, we measure performance of each phase on the development set by leaving out one feature at a time, as shown in the top of Table 3.",
        "Precision, Recall, and F,3_1 represent the performance of the identification task, and Accuracy represent the performance of the classification task only with 100% correct argument identification respectively.",
        "All represents the performance of the experiment when all 26 features introduced by section 2.2 are considered.",
        "Finally, for identification, we use 24 features except gov andpos+clau, and obtain an F,3_1 of 80.59%, as shown in the bottom of Table 3.",
        "Also, for classification, we use 23 features except pred type, cont POS, and pos+ clau, and obtain an Accuracy of 87.16%.",
        "Table 4 presents our best system performance on the development set, and the performance of the same system on the test set.",
        "Table 5 shows the performance on the development set using the one-phase method and the two-phase method respectively.",
        "The one-phase method is implemented by incorporating the identification into the classification.",
        "one phase shows the performance of the experiment when 25 features except pos+clau are used.",
        "Experimental results show that the two-phase method is better than the one-phase method in our evaluation."
      ]
    },
    {
      "heading": "4 Conclusion",
      "text": [
        "We have presented a two-phase SRL method based on a ME model.",
        "In the two-phase method, in order to improve the performance of identification that dominate the overall performance, we have performed preprocessing.",
        "Experimental results show that our system obtains an F,3_1 of 72.68% on the WSJ test and that the introduction of preprocessing improves the performance, as compared with the case when all parse constituents are considered."
      ]
    }
  ]
}
