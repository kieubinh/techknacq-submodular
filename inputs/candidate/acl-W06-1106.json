{
  "info": {
    "authors": [
      "Rebecca Dridan",
      "Francis Bond"
    ],
    "book": "Workshop on Linguistic Distances",
    "id": "acl-W06-1106",
    "title": "Sentence Comparison Using Robust Minimal Recursion Semantics and an Ontology",
    "url": "https://aclweb.org/anthology/W06-1106",
    "year": 2006
  },
  "references": [
    "acl-C04-1064",
    "acl-C04-1185",
    "acl-W02-1210",
    "acl-W02-2016"
  ],
  "sections": [
    {
      "heading": "�NTT Communication Science Laboratories, Nippon Telegraph and Telephone Corporation Abstract",
      "text": [
        "We design and test a sentence comparison method using the framework of Robust Minimal Recursion Semantics which allows us to utilise the deep parse information produced by Jacy, a Japanese HPSG based parser and the lexical information available in our ontology.",
        "Our method was used for both paraphrase detection and also for answer sentence selection for question answering.",
        "In both tasks, results showed an improvement over Bag-of-Words, as well as providing extra information useful to the applications."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Comparison between sentences is required for many NLP applications, including question answering, paraphrasing, text summarization and entailment tasks.",
        "In this paper we show an RMRS (Robust Minimal Recursion Semantics, see Section 1.1) comparison algorithm that can be used to compare sentences in any language that has RMRS generating tools available.",
        "Lexical resources of any language can be plugged in to give a more accurate and informative comparison.",
        "The simplest and most commonly used methods of judging sentence similarity use word overlap – either looking for matching word sequences, or comparing a Bag-of-Words representation of each sentence.",
        "Bag-of-Words discards word order, and any structure designated by such, so that the cat snored and the dog slept is equivalent to the dog snored and the cat slept.",
        "Sequence matching on the other hand requires exact word order matching and hence the game began quietly and the game quietly began are not considered a match.",
        "Neither method allows for synonym matching.",
        "Hirao et al.",
        "(2004) showed that they could get a much more robust comparison using dependency information rather than Bag-of-Words, since they could abstract away from word order but still compare the important elements of a sentence.",
        "Using deep parsing information, such as dependencies, but also deep lexical resources where available, enables a much more informative and robust comparison, which goes beyond lexical similarity.",
        "We use the RMRS framework as our comparison format because it has the descriptive power to encode the full semantics, including argument structure.",
        "It also enables easy combination of deep and shallow information and, due to its flat structure, is easy to manage computationally."
      ]
    },
    {
      "heading": "1.1 Robust Minimal Recursion Semantics",
      "text": [
        "Robust Minimal Recursion Semantics (RMRS) is a form of flat semantics which is designed to allow deep and shallow processing to use a compatible semantic representation, while being rich enough to support generalized quantifiers (Frank, 2004).",
        "The main component of an RMRS representation is a bag of elementary predicates and their arguments.",
        "An elementary predicate always has a unique label, a relation type, a relation name and an ARG0 feature.",
        "The example in Figure 1 has a label of h5 which uniquely identifies this predicate.",
        "Relation types can either be REALPRED for a predicate that relates directly to a content word from the input text, or GPRED for grammatical predicates which may not have a direct referent in the text.",
        "For examples in this paper, a REALPRED is distinguished by an underscore () before the relation name.",
        "The GPRED relation names come from a",
        "closed-set which specify common grammatical relations, but the REALPRED names are formed from the word in the text they relate to and this is one way in which RMRS allows underspecification.",
        "A full relation name is of the form lemma pos sense, where the pos (part of speech) is drawn from a small set of general types including noun, verb and sahen (verbal noun).",
        "The sense is a number that identifies the sense of the word within a particular grammar being used.",
        "The POS and sense information are only used when available and hence the unten s 1 is more specific but compatible with unten s or even unten.",
        "The ARG0 feature (e6 in Figure 1) is the referential index of the predicate.",
        "Predicates with the same ARG0 are said to be referentially co-indexed and therefore have the same referent in the text.",
        "A shallow parse might provide only the features shown in Figure 1, but a deep parse can also give information about other arguments as well as scoping constraints.",
        "The features ARG1..ARG4 specify the indices of the semantic arguments of the relevant predicate, similar to PropBank's argument annotation (Kingsbury et al., 2002).",
        "While the RMRS specification does not define semantic roles for the ARGn features, in practice ARG1 is generally used for the AGENT and ARG2 for the PATIENT.",
        "Features ARG3 and ARG4 have less consistency in their roles.",
        "We will use (1) and (2) as examples of similar sentences.",
        "They are definition sentences for one sense of l` 7'�-- doraiba- \"driver\", taken from two different lexicons.",
        "(1) [A R* ;L- ft T6 A jid�osha wo unten suru hito",
        "car ACC drive do person \"a person who drives a car\" [A R* /.� Z 0 ft t jid�osha nado no unten sha car etc.",
        "ADN drive er \"a driver of cars etc.\""
      ]
    },
    {
      "heading": "Examples of deep and shallow RMRS results",
      "text": [
        "for (1) are given in Figure 2.",
        "Deep results for (2) are given in Figure 3."
      ]
    },
    {
      "heading": "2 Algorithm",
      "text": [
        "The matching algorithm is loosely based on RMRS comparison code included in the LKB (Copestake, 2002: (http://www.delph-in.",
        "net/lkb/)), which was used in Ritchie (2004), however that code used no outside lexical resources and we have substantially changed the matching algorithm.",
        "The comparison algorithm is language independent and can be used for any RMRS structures.",
        "It first compares all elementary predicates from the RMRSs to construct a list of match records and then examines, and potentially alters, the list of match records according to constraints encoded in the ARGn variables.",
        "Using the list of scored matches, the lowest scoring possible match set is found and, after further processing on that set, a similarity score is returned.",
        "The threshold for deciding whether a pair of sentences should be considered similar or not can be determined separately for different applications."
      ]
    },
    {
      "heading": "2.1 Matching Predicates",
      "text": [
        "The elementary predicates (EPs) of our RMRS structures are divided into two groups - those that have a referent in the text, hereafter known as content EPs, and those that don't.",
        "There are three kinds of content EP: REAL-PREDs, which correspond to content bearing words that the grammar knows; GPREDs with a CARG (Constant ARGument) feature, which are used to represent proper names and numbers; and GPREDs with a predicate name starting with generic such as generic verb which are used for unknown words that have only been identified by their part of speech.",
        "All other EPs have no referent and are used to provide information about the content EPs or about the structure of the sentence as a whole.",
        "These non-content EPs can provide some useful information, but generally only in relation to other content EPs.",
        "Each content EP of the first RMRS is compared to all content EPs in the second RMRS, as shown in Figure 4.",
        "periments we used the ontology described in Section 3.2.2, which provides all three extra match types.",
        "Adding a thesaurus only would enable SYNONYM matching, while a gazetteer could be added to give, for example, Tokyo is a HYPONYM of city."
      ]
    },
    {
      "heading": "Matches:",
      "text": [
        "merical score represents the distance between the two EPs, and hence an EXACT match is assigned a score of zero.",
        "The level of matching possible depends on the lexical resources available.",
        "With no extra At the end of the first pass, a list of match resources, or only a dictionary to pick up or records shows all EP matches with their match thographic variants, the only match types pos- type and score.",
        "Each EP can have multiple sible are EXACT and NO MATCH.",
        "By adding possible matches.",
        "The output of comparing a thesaurus, an ontology or a gazetteer, it is (1) and (2), with the RMRSes in Figures 2 then possible to return SYNONYM, HYPERNYM and 3, is shown in Figure 5.",
        "This shows hito n and HYPONYM match relations.",
        "In our ex (A hito \"person\") tagged as a HYPERNYM of",
        "sha n (t sha \"-er\" is a suffix indicating a person, normally the agent of a verb: it is more restrictive than English -er, in that it only refers to people)."
      ]
    },
    {
      "heading": "2.2 Constraints Pass",
      "text": [
        "For each possible match, all the non-content EPs that have the same ARG0 value as the content EPs in the match are examined, since these have the same referent.",
        "If each non-content EP related to the content EP on one side of the match can be matched to the non-content EPs related to the other content EP, no change is made.",
        "If not, however, a penalty is added to the match score, as shown in Figure 6.",
        "In our example, unten s 2 from the first sentence has a proposition m rel referentially co-indexed, while the second unten s 2 has a proposition m rel, a noun-relation and a udef rel, and so a small penalty is added as shown in Figure 7.",
        "The second check in the constraint match pass examines the arguments (ARG1, ARG2, ARG3, ARG4) of each of the matches.",
        "It looks for possible matches found between the EPs listed as ARGn for each match.",
        "This check can result in three separate results: both EPs have an ARGn but there is no potential match found between the respective ARGn EPs, a potential match has been found between the ARGn EPs, or only one of the EPs in the match has an ARGn feature.",
        "Where both EPs have an ARGn feature, the score (distance) of the match is decreased or increased depending on whether a match between the ARGn variables was found.",
        "Given that the RMRS definition does not specify a",
        "Slight penalty added to unten s 2 and hito n for non-matching non-content EPs `meaning' for the ARGn variables, comparing, for example, ARG1 variables from two different predicates may not necessarily be comparing the same semantic roles.",
        "However, because of the consistency found in ARG1 and ARG2 meaning this is still a useful check.",
        "Of course, if we are comparing the same relation, the ARGs will all have the same meaning.",
        "The comparison method allows for different penalties for each of ARG1 to ARG4, and also includes a scaling factor so that mismatches in ARGs when comparing EXACT EP matches will have more effect on the score than in non EXACT matches.",
        "If one EP does not have the ARGn feature, no change is made to the score.",
        "This allows for the use of underspecified RMRSs, in the case where the parse fails.",
        "At the end of this pass, the scores of the matches in the match list may have changed but the number of matches is still the same."
      ]
    },
    {
      "heading": "2.3 Constructing the Sets",
      "text": [
        "Match sets are constructed by using a branch-and-bound decision tree.",
        "Each match is considered in order, and the tree is branched if the next match is possible, given the proceeding decisions.",
        "Any branch which is more than two decisions away from the best score so far is pruned.",
        "At the end of this stage, the lowest scoring match set is returned and then this is further processed.",
        "If no matches were found, processing stops and a sentinel value is returned.",
        "Otherwise, the non matching predicates are grouped together by their ARG0 value.",
        "Scoping constraints are checked and if any non matching predicate outscopes a content predicate it is added to that grouping.",
        "Hence if it outscopes a matching EP it becomes part of the match, otherwise it becomes part of a non-matching EP group.",
        "Any group of grammatical EPs that shares an ARG0 but does not contain a content predicate is matched against any similar groupings",
        "in the other RMRS.",
        "This type of match can only be EXAcT or No MATcH and will make only a small difference in the final score.",
        "Content predicates that have not been matched by this stage are not processed any further, although this is an area for further investigation.",
        "Potentially negation and other modifiers could be processed at this point."
      ]
    },
    {
      "heading": "2.4 Output",
      "text": [
        "The output of the comparison algorithm is a numeric score and also a representation of the final best match found.",
        "The numerical score, using the default scoring parameters, ranges between 0 (perfect match) and 3.",
        "As well as the no match score (-5), sentinel values are used to indicate missing input data so it is possible to fall back to a shallow parse if the deep parse failed.",
        "Details of the match set are also returned for further processing or examination if the application requires.",
        "This shows which predicates were deemed to match, and with what score, and also shows the unmatched predicates.",
        "Figure 8 shows the output of our example comparison."
      ]
    },
    {
      "heading": "3 Resources",
      "text": [
        "While the comparison method is language independent, the resources required are language specific.",
        "The resources fall in to two different categories: parsing and morphological analysis tools that produce the RMRSs, and lexical resources such as ontologies, dictionaries and gazetteers for evaluating matches."
      ]
    },
    {
      "heading": "3.1 Parsing",
      "text": [
        "Japanese language processing tools are freely available.",
        "We used the Japanese grammar Jacy (Siegel and Bender, 2002), a deep parsing HPSG grammar that produces RMRSs for our primary input source.",
        "When parsing with Jacy failed, comparisons could still be made with RMRS produced from shallow tools such as ChaSen (Matsumoto et al., 2000), a morphological analyser or CaboCha (Kudo and Matsumoto, 2002), a Japanese dependency parser.",
        "Tools have been built to produced RMRS from the standard output of both those tools.",
        "The CaboCha output supplies similar dependency information to that of the Basic Elements (BE) tool used by Hovy et al.",
        "(2005b) for multi-document summarization.",
        "Even this intermediate level of parsing gives better comparisons than either word or sequence overlap, since it is easier to compare meaningful elements (Hovy et al., 2005a)."
      ]
    },
    {
      "heading": "3.2 Lexical Resources",
      "text": [
        "Whilst deep lexical resources are not available for every language, where they are available, they should be used to make comparisons more informative.",
        "The comparison framework allows for different lexical resources to be added to a pipeline.",
        "The pipeline starts with a simple relation name match, but this could be followed by a dictionary to extract orthographic variants and then by ontologies such as Word-Net (Fellbaum, 1998) or GoiTaikei (Ikehara et al., 1997), gazetteers or named entity recognisers to recognise names of people and places.",
        "The sections below detail the lexical resources we used within our experiments.",
        "The Lexeed Semantic Database of Japanese is a machine readable dictionary that covers the most familiar words in Japanese, based on a series of psycholinguistic tests (Kasahara et al., 2004).",
        "Lexeed has 28,000 words divided into 46,000 senses and defined with 75,000 definition sentences.",
        "Each entry includes a list of orthographic variants, and the pronunciation, in addition to the definitions."
      ]
    },
    {
      "heading": "3.2.2 Ontology",
      "text": [
        "The lexicon has been sense-tagged and parsed to give an ontology linking senses with various relations, principally hypernym and synonym (Nichols et al., 2005).",
        "For example, (HypERNyM, K74.1�-- doraib�a \"driver\", �r 77 kurabu \"club\").",
        "The ontology entries for nouns have been hand checked and corrected, including adding hypernyms for words where",
        "the genus term in the definition was very general, e.g \"a word used to refer insultingly to men\" where man is a more useful hypernym than word for the defined term yarou."
      ]
    },
    {
      "heading": "4 Evaluation",
      "text": [
        "We evaluated the performance of the RMRS comparison method in two tasks.",
        "First it was used to indicate whether two sentences were possible paraphrases.",
        "In the second task, we used the comparison scores to select the most likely sentence to contain the answer to a question."
      ]
    },
    {
      "heading": "4.1 Paraphrasing",
      "text": [
        "In this task we compared definitions sentences for the same head word from two different Japanese dictionaries - the Lexeed dictionary (§3.2.1) and the Iwanami Kokugo Jiten (Iwanami: Nishio et al., 1994), the Japanese dictionary used in the SENSEVAL-2 Japanese lexical task (Shirai, 2002).",
        "There are 60,321 headwords and 85,870 word senses in Iwanami.",
        "Each sense in the dictionary consists of a sense ID and morphological information (word segmentation, POS tag, base form and reading, all manually post-edited).",
        "The definitions in Lexeed and Iwanami were linked by headword and three Japanese native speakers assessed each potential pair of sense definitions for the same head word to judge which definitions were describing the same sense.",
        "This annotation not only described which sense from each dictionary matched, but also whether the definitions were equal, equivalent, or subsuming.",
        "The examples (1) and (2) are the definitions of sense 2 of V 74.1-- doraib�a \"driver\" from Lexeed and Iwanami respectively.",
        "They were judged to be equivalent definitions by all three annotators."
      ]
    },
    {
      "heading": "4.1.1 Method",
      "text": [
        "Test sets were built consisting of the Lexeed and Iwanami definition pairs that had been annotated in the gold standard to be either non-matching, equal or equivalent.",
        "Leaving out those pairs annotated as having a subsumption relation made it a clearer task judging between paraphrase or not, rather than examining partial meaning overlap.",
        "Ten sets of 5,845 definition pairs were created, with each set being equally split between matching and non-matching pairs.",
        "This gives data that is to some extent semantically equivalent (the same word sense is being defined), but with no guarantee of syntactic equivalence.",
        "Comparisons were made between the first sentence of each definition with both a Bag-of-Words comparison method and our RMRS based method.",
        "If RMRS output was not available from Jacy (due to a failed parse), RMRS from CaboCha was used as a fall back shallow parse result.",
        "Scores were output and then the best threshold score for each method was calculated on one of the 10 sets.",
        "Using the calculated threshold score, pairs were classified as either matching or non-matching.",
        "Pairs classified as matching were evaluated as correct if the gold standard annotation was either equal or equivalent."
      ]
    },
    {
      "heading": "4.1.2 Results",
      "text": [
        "The Bag-of-Words comparison got an average accuracy over all sets of 73.9% with 100% coverage.",
        "A break down of the results shows that this method was more accurate (78%) in correctly classifying non-matches than matches (70%).",
        "This is to be expected since it won't pick up equivalences where a word has been changed for its synonym.",
        "The RMRS comparison had an accuracy was 78.4% with almost 100% coverage, an improvement over the Bag-of-Words.",
        "The RMRS based method was also more accurate over non matches (79.9%) than matches (76.6%), although the difference is not as large.",
        "Considering only those sentences with a parse from JACY gave an accuracy of 81.1% but with a coverage of only 46.1%.",
        "This shows that deep parsing improves precision, but must be used in conjunction with a shallower fallback.",
        "To explore what effect the ontology was having on the results, another evaluation was performed without the ontology matching.",
        "This had an accuracy of 77.3% (78.1% using Jacy, 46.1% coverage).",
        "This shows that the information available in the ontology definitely improves scores, but that even without that sort of deep lexical resource, the RMRS matching can still improve on Bag-of-Words using just surface form abstraction and argument matching."
      ]
    },
    {
      "heading": "4.2 Answer Sentence Selection",
      "text": [
        "To emulate a part of the question answering pipeline, we used a freely available set of 2000 Japanese questions, annotated with, among other things, answer and answer document ID (Sekine et al., 2002).",
        "The document IDs for the answer containing documents refer to the Mainichi Newspaper 1995 corpus which has been used as part of the document collection for NTCIR's Question Answering Challenges.",
        "The documents range in length from 2 to 83 sentences.",
        "4.2.1 Method For every question, we compared it to each sentence in the answer document.",
        "The sentence that has the best similarity to the question is returned as the most likely to contain the answer.",
        "For this sort of comparison, an entails option was added that changes the similarity scoring method slightly so that only non-matches in the first sentence increase the score.",
        "The rationale being that in Question Answering (and also in entailment), everything present in the question (or hypothesis) should be matched by something in the answer, but having extra, unmatched information in the answer should not be penalised.",
        "The task is evaluated by checking if the answer does exist in the sentence selected.",
        "This means that more than one sentence can be the correct answer for any question (if the answer is mentioned multiple times in the article).",
        "The Bag-of-Words comparison correctly found a sentence containing the answer for 62.5% of the 2000 questions.",
        "The RMRS comparison method gave a small improvement, with a result of 64.3%.",
        "Examining the data showed this to be much harder than the paraphrase task because of the language level involved.",
        "In the paraphrasing task, the sentences averaged around 10 predicates each, while the questions and sentences in this task averaged over 3 times longer, with about 34 predicates.",
        "The words used were also less likely to be in the lexical resources both because more formal, less familiar words were used, and also because of the preponderance of named entities.",
        "Adding name lists of people, places and organisations would greatly improve the matching in this instance."
      ]
    },
    {
      "heading": "5 Future Directions 5.1 Applications",
      "text": [
        "Since the comparison method was written to be language independent, the next stage of evaluation would be to use it in a non-Japanese task.",
        "The PASCAL Recognising Textual Entailment (RTE) Challenge (Dagan et al., 2005) is one recent English task where participants used sentence comparison extensively.",
        "While the task appears to call for inference and reasoning, the top 5 participating groups used statistical methods and word overlap only.",
        "Vanderwende et al.",
        "(2005) did a manual evaluation of the test data and found that 37% could be decided on syntactic information alone, while adding a thesaurus could increase that coverage to 49%.",
        "This means that RMRS comparison has the potential to perform well.",
        "Not only does it improve on basic word overlap, but it allows for easy addition of a thesaurus or dictionary.",
        "Further, because of the detailed match output available, the method could be extended in post processing to encompass some basic inference methods.",
        "Aside from comparing sentences, the RMRS comparison can be used to compare the RMRS output of different tools for the same sentence so that the compatibility of the outputs can be evaluated and improved."
      ]
    },
    {
      "heading": "5.2 Extensions",
      "text": [
        "One immediate future improvement planned is to add named entity lists to the lexical resources so that names of people and places could be looked up.",
        "This would allow partial matches between, e.g., Clinton is a HYPONYM of person, which would be particularly useful for Question Answering.",
        "Another idea is to add a bilingual dictionary and try cross-lingual comparisons.",
        "As the RMRS abstracts away much of the surface specific details, this might be useful for sentence alignment.",
        "To go beyond sentence by sentence comparison, we have plans to implement a method for multi-sentence comparisons by either combining the RMRS structures before comparison, or post-processing the sentence comparison outputs.",
        "This could be particularly interesting for text summarization."
      ]
    },
    {
      "heading": "6 Conclusions",
      "text": [
        "Deep parsing information is useful for comparing sentences and RMRS gives us a useful framework for utilising this information when it is available.",
        "Our RMRS comparison was more accurate then basic word overlap similarity measurement particularly in the paraphrase task where synonyms were often used.",
        "Even when the ontology was not used, abstracting away from surface form, and matching arguments did give an improvement.",
        "Falling back to shallow parse methods increases the robustness which is often an issue for tools that use deep processing, while still allowing the use of the most accurate information available.",
        "The comparison method is language agnostic and can be used for any language that has RMRS generating tools.",
        "The output is much more informative than Bag-of-Words, making it useful in many applications that need to know exactly how a sentence matched or aligned."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "This work was started when the first author was a visitor at the NTT Communication Science Laboratories, Nippon Telegraph and Telephone Corporation.",
        "The first author was also supported by the Pam Todd scholarship from St Hilda's College.",
        "We would like to thank the NTT Natural Language Research Group and two anonymous reviewers for their valuable input."
      ]
    }
  ]
}
