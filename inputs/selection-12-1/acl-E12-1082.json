{
  "info": {
    "authors": [
      "Aurelie Lagoutte",
      "Fabienne Braune",
      "Daniel Quernheim",
      "Andreas Maletti"
    ],
    "book": "EACL",
    "id": "acl-E12-1082",
    "title": "Composing extended top-down tree transducers",
    "url": "https://aclweb.org/anthology/E12-1082",
    "year": 2012
  },
  "references": [
    "acl-J08-3004",
    "acl-N10-1130",
    "acl-P01-1067",
    "acl-P03-2041",
    "acl-P10-1108"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "A composition procedure for linear and nondeleting extended top-down tree transducers is presented.",
        "It is demonstrated that the new procedure is more widely applicable than the existing methods.",
        "In general, the result of the composition is an extended top-down tree transducer that is no longer linear or nondeleting, but in a number of cases these properties can easily be recovered by a post-processing step."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Tree-based translation models such as synchronous tree substitution grammars (Eisner, 2003; Shieber, 2004) or multi bottom-up tree transducers (Lilin, 1978; Engelfriet et al. 2009; Maletti, 2010; Maletti, 2011) are used for several aspects of syntax-based machine translation (Knight and Graehl, 2005).",
        "Here we consider the extended top-down tree transducer (XTOP), which was studied in (Arnold and Dauchet, 1982; Knight, 2007; Graehl et al. 2008; Graehl et al. 2009) and implemented in the toolkit TIBURON (May and Knight, 2006; May, 2010).",
        "Specifically, we investigate compositions of linear and nondeleting XTOPs (ln-XTOP).",
        "Arnold and Dauchet (1982) showed that ln-XTOPs compute a class of transformations that is not closed under composition, so we cannot compose two arbitrary ln-XTOPs into a single ln-XTOP.",
        "However, we will show that ln-XTOPs can be composed into a (not necessarily linear or nondeleting) XTOP.",
        "To illustrate the use of ln-XTOPs in machine translation, we consider the following English sentence together with a German reference translation:",
        "The newswire reported yesterday that the Serbs have completed the negotiations.",
        "Gestern [Yesterday] berichtete [reported] die [the] Nachrichtenagentur [newswire] die [the] Serben [Serbs] ha?tten [would have] die [the] Verhandlungen [negotiations] beendet [completed].",
        "The relation between them can be described (Yamada and Knight, 2001) by three operations: drop of the relative pronoun, movement of the participle to end of the clause, and word-to-word translation.",
        "Figure 1 shows the first two operations, and Figure 2 shows ln-XTOP rules performing them.",
        "Let us now informally describe the execution of an ln-XTOP on the top rule ?",
        "of Figure 2.",
        "In general, ln-XTOPs process an input tree from the root towards the leaves using a set of rules and states.",
        "The state p in the left-hand side of ?",
        "controls the particular operation of Figure 1 [top].",
        "Once the operation has been performed, control is passed to states pNP and pVP, which use their own rules to process the remaining input subtree governed by the variable below them (see Figure 2).",
        "In the same fashion, an ln-XTOP containing the bottom rule of Figure 2 reorders the English verbal complex.",
        "In this way we model the word drop by an ln-XTOP M and reordering by an ln-XTOP N .",
        "The syntactic properties of linearity and nondeletion yield nice algorithmic properties, and the mod",
        "ular approach is desirable for better design and parametrization of the translation model (May et al., 2010).",
        "Composition allows us to recombine those parts into one device modeling the whole translation.",
        "In particular, it gives all parts the chance to vote at the same time.",
        "This is especially important if pruning is used because it might otherwise exclude candidates that score low in one part but well in others (May et al. 2010).",
        "Because ln-XTOP is not closed under composition, the composition ofM andN might be outside ln-XTOP.",
        "These cases have been identified by Arnold and Dauchet (1982) as infinitely ?overlapping cuts?, which occur when the right-hand sides of M and the left-hand sides of N are un-boundedly overlapping.",
        "This can be purely syntactic (for a given ln-XTOP) or semantic (inherent in all ln-XTOPs for a given transformation).",
        "Despite the general impossibility, several strategies have been developed: (i) Extension of the model (Maletti, 2010; Maletti, 2011), (ii) online composition (May et al. 2010), and (iii) restriction of the model, which we follow.",
        "Compositions of subclasses in which the XTOP N has at most one input symbol in its left-hand sides have already been studied in (Engelfriet, 1975; Baker, 1979; Maletti and Vogler, 2010).",
        "Such compositions are implemented in the toolkit TIBURON.",
        "However, there are translation tasks in which the used XTOPs do not fulfill this requirement.",
        "Suppose that we simply want to compose the rules of Figure 2, The bottom rule does not satisfy the requirement that there is at most one input symbol in the left-hand side.",
        "We will demonstrate how to compose two linear and nondeleting XTOPs into a single XTOP, which might however no longer be linear or nondeleting.",
        "However, when the syntactic form of",
        "and t[?",
        "]2 [right] with var(t) = {x1, x2, x3}.",
        "The positions are indicated in t as superscripts.",
        "The subtree t|2 is ?",
        "(?, q(x2)).",
        "the composed XTOP has only bounded overlapping cuts, post-processing will get rid of them and restore an ln-XTOP.",
        "In the remaining cases, in which unbounded overlapping is necessary or occurs in the syntactic form but would not be necessary, we will compute an XTOP.",
        "This is still an improvement on the existing methods that just fail.",
        "Since general XTOPs are implemented in TIBURON and the new composition covers (essentially) all cases currently possible, our new composition procedure could replace the existing one in TIBURON.",
        "Our approach to composition is the same as in (Engelfriet, 1975; Baker, 1979; Maletti and Vogler, 2010): We simply parse the right-hand sides of the XTOP M with the left-hand sides of the XTOP N .",
        "However, to facilitate this approach we have to adjust the XTOPs M and N in two preprocessing steps.",
        "In a first step we cut left-hand sides of rules of N into smaller pieces, which might introduce non-linearity and deletion into N .",
        "In certain cases, this can also introduce finite lookahead (Engelfriet, 1977; Graehl et al. 2009).",
        "To compensate, we expand the rules of M slightly.",
        "Section 4 explains those preparations.",
        "Next, we compose the prepared XTOPs as usual and obtain a single XTOP computing the composition of the transformations computed by M and N (see Section 5).",
        "Finally, we apply a post-processing step to expand rules to reobtain linearity and nondeletion.",
        "Clearly, this cannot be successful in all cases, but often removes the non-linearity introduced in the preprocessing step."
      ]
    },
    {
      "heading": "2 Preliminaries",
      "text": [
        "Our trees have labels taken from an alphabet ?",
        "of symbols, and in addition, leaves might be labeled by elements of the countably infinite",
        "mally, for every V ?",
        "X the set T?",
        "(V ) of ?-trees with V leaves is the smallest set such that V ?",
        "T?",
        "(V ) and ?",
        "(t1, .",
        ".",
        ".",
        ", tk) ?",
        "T?",
        "(V ) for all k ?",
        "N, ?",
        "?",
        "?, and t1, .",
        ".",
        ".",
        ", tk ?",
        "T?",
        "(V ).",
        "To avoid excessive universal quantifications, we drop them if they are obvious from the context.",
        "For each tree t ?",
        "T?",
        "(X) we identify nodes by positions.",
        "The root of t has position ?",
        "and the position iw with i ?",
        "N and w ?",
        "N?",
        "addresses the position w in the i-th direct subtree at the root.",
        "The set of all positions in t is pos(t).",
        "We write t(w) for the label (taken from ?",
        "?X) of t at position w ?",
        "pos(t).",
        "Similarly, we use ?",
        "t|w to address the subtree of t that is rooted in position w, and ?",
        "t[u]w to represent the tree that is obtained from replacing the subtree t|w at w by u ?",
        "T?(X).",
        "For a given set L ?",
        "?",
        "?X of labels, we let",
        "be the set of all positions whose label belongs to L. We also write posl(t) instead of pos{l}(t).",
        "The tree t ?",
        "T?",
        "(V ) is linear if |posx(t) |?",
        "1 for every x ?",
        "X .",
        "Moreover,",
        "collects all variables that occur in t. If the variables occur in the order x1, x2, .",
        ".",
        ".",
        "in a pre-order traversal of the tree t, then t is normalized.",
        "Given a finite set Q, we write Q(T ) with T ?",
        "T?",
        "(X) for the set {q(t) |q ?",
        "Q, t ?",
        "T}.",
        "We will treat elements of Q(T ) as special trees of T??Q(X).",
        "The previous notions are illustrated in Figure 3.",
        "A substitution ?",
        "is a mapping ?",
        ": X ?",
        "T?(X).",
        "When applied to a tree t ?",
        "T?",
        "(X), it will return the tree t?, which is obtained from t by replacing all occurrences of x ?",
        "X (in parallel) by ?(x).",
        "This can be defined recursively by x?",
        "= ?",
        "(x) for all x ?",
        "X and ?",
        "(t1, .",
        ".",
        ".",
        ", tk)?",
        "= ?",
        "(t1?, .",
        ".",
        ".",
        ", tk?)",
        "for all ?",
        "?",
        "?",
        "and t1, .",
        ".",
        ".",
        ", tk ?",
        "T?(X).",
        "The effect of a substitution is displayed in Figure 4.",
        "Two substitutions ?, ??",
        ": X ?",
        "T?",
        "(X) can be composed to form a substitution ???",
        ": X ?",
        "T?",
        "(X) such that ???",
        "(x) = ?(x)??",
        "for every x ?",
        "X .",
        "Next, we define two notions of compatibility for trees.",
        "Let t, t?",
        "?",
        "T?",
        "(X) be two trees.",
        "If there exists a substitution ?",
        "such that t?",
        "= t?, then t?",
        "is an instance of t. Note that this relation is not symmetric.",
        "A unifier ?",
        "for t and t?",
        "is a substitution ?",
        "such that t?",
        "= t??.",
        "The unifier ?",
        "is a most general unifier (short: mgu) for t and t?",
        "if for every unifier ???",
        "for t and t?",
        "there exists a substitution ??",
        "such that ???",
        "= ???.",
        "The set mgu(t, t?)",
        "is the set of all mgus for t and t?.",
        "Most general unifiers can be computed efficiently (Robinson, 1965; Martelli and Montanari, 1982) and all mgus for t and t?",
        "are equal up to a variable renaming."
      ]
    },
    {
      "heading": "3 The model",
      "text": [
        "The discussed model in this contribution is an extension of the classical top-down tree transducer, which was introduced by Rounds (1970) and Thatcher (1970).",
        "The extended top-down tree transducer with finite lookahead or just XTOPF and its variations were studied in (Arnold and Dauchet, 1982; Knight and Graehl, 2005;",
        "restriction to each rule and variable such that c(?, x) is linear for each ?",
        "?",
        "R and x ?",
        "X .",
        "The XTOPF M is linear (respectively, nondeleting) if r is linear (respectively, var(r) = var(`)) for every rule ` ?",
        "r ?",
        "R. It has no lookahead (or it is an XTOP) if c(?, x) ?",
        "X for all rules ?",
        "?",
        "R and x ?",
        "X .",
        "In this case, we drop the lookahead component c from the description.",
        "A rule ` ?",
        "r ?",
        "R is consuming (respectively, producing) if pos?",
        "(`) 6= ?",
        "(respectively, pos?",
        "(r) 6= ?).",
        "We let Lhs(M) = {l |?q, r : q(l)?",
        "r ?",
        "R}.",
        "Let M = (Q,?,?, I, R, c) be an XTOPF.",
        "In order to facilitate composition, we define sentential forms more generally than immediately necessary.",
        "Let ??",
        "and ??",
        "be such that ?",
        "?",
        "??",
        "and ?",
        "?",
        "??.",
        "To keep the presentation simple, we assume that Q ?",
        "(??",
        "?",
        "??)",
        "= ?.",
        "A sentential form of M (using ??",
        "and ??)",
        "is a tree of SF(M) = T??(Q(T??)).",
        "For every ?, ?",
        "?",
        "SF(M), we write ?",
        "?M ?",
        "if there exist a positionw ?",
        "posQ(?",
        "), a rule ?",
        "= `?",
        "r ?",
        "R, and a substitution ?",
        ": X ?",
        "T??",
        "such that ?",
        "(x) is an instance of c(?, x) for every x ?",
        "X and ?",
        "= ?[`?",
        "]w and ?",
        "= ?[r?]w.",
        "If the applicable rules are restricted to a certain subset R?",
        "?",
        "R, then we also write ?",
        "?R?",
        "?.",
        "Figure 5 illustrates a derivation step.",
        "The tree transformation computed by M is",
        "of ?M is independent of the choice of ??",
        "and ??.",
        "Moreover, it is known (Graehl et al. 2009) that each XTOPF can be transformed into an equivalent XTOP preserving both linearity and nondeletion.",
        "However, the notion of XTOPF will be convenient in our composition construction.",
        "A detailed exposition to XTOPs is presented by Arnold and Dauchet (1982) and Graehl et al(2009).",
        "A linear and nondeleting XTOP M with rules R can easily be reversed to obtain a linear and nondeleting XTOP M?1 with rules R?1, which computes the inverse transformation ?M?1 = ?",
        "M , by reversing all its rules.",
        "A (suitable) rule is reversed by exchanging the locations of the states.",
        "More precisely, given a rule q(l) ?",
        "r ?",
        "R, we obtain the rule q(r?)",
        "?",
        "l?",
        "of R?1, where l?",
        "= l?",
        "and r?",
        "is the unique tree such that there exists a substitution ?",
        ": X ?",
        "Q(X) with ?",
        "(x) ?",
        "Q({x}) for every x ?",
        "X and r = r??.",
        "Figure 6 displays a rule and its corresponding reversed rule.",
        "The reversed form of the XTOP rule modeling the insertion operation in Figure 2 is displayed in Figure 7.",
        "Finally, let us formally define composition.",
        "The XTOP M computes the tree transformation ?M ?",
        "T?",
        "?",
        "T?.",
        "Given another XTOP N that computes a tree transformation ?N ?",
        "T?",
        "?",
        "T?, we might be interested in the tree transformation computed by the composition of M and N (i.e., running M first and then N ).",
        "Formally, the",
        "and we often also use the notion ?composition?",
        "for XTOP with the expectation that the composition of M and N computes exactly ?M ; ?N ."
      ]
    },
    {
      "heading": "4 Pre-processing",
      "text": [
        "We want to compose two linear and nondeleting XTOPs M = (P,?,?, IM , RM ) and",
        "N = (Q,?,?, IN , RN ).",
        "Before we actually perform the composition, we will prepare M and N in two preprocessing steps.",
        "After these two steps, the composition is very simple.",
        "To avoid complications, we assume that (i) all rules of M are producing and (ii) all rules of N are consuming.",
        "For convenience, we also assume that the XTOPs M and N only use variables of the disjoint sets Y ?",
        "X and Z ?",
        "X , respectively."
      ]
    },
    {
      "heading": "4.1 Compatibility",
      "text": [
        "In the existing composition results for subclasses of XTOPs (Engelfriet, 1975; Baker, 1979; Maletti and Vogler, 2010) the XTOP N has at most one input symbol in its left-hand sides.",
        "This restriction allows us to match rule applications of N to positions in the right-hand sides of M .",
        "Namely, for each output symbol in a right-hand side of M , we can select a rule of N that can consume that output symbol.",
        "To achieve a similar decomposition strategy in our more general setup, we introduce a compatibility requirement on right-hand sides of M and left-hand sides of N .",
        "Roughly speaking, we require that the left-hand sides of N are small enough to completely process right-hand sides of M .",
        "However, a comparison of left-and right-hand sides is complicated by the fact that their shape is different (left-hand sides have a state at the root, whereas right-hand sides have states in front of the variables).",
        "We avoid these complications by considering reversed rules of M .",
        "Thus, an original right-hand side of M is now a left-hand side in the reversed rules and thus has the right format for a comparison.",
        "Recall that Lhs(N) contains all left-hand sides of the rules of N , in which the state at the root was removed.",
        "Intuitively, for every ?-labeled position w in a right-hand side r1 of M and any left-hand side l2 of N , we require (ignoring the states) that either (i) r1|w and l2 are not unifiable or (ii) r1|w is an instance of l2.",
        "Example 3.",
        "The XTOPs for the English-to-German translation task in the Introduction are not compatible.",
        "This can be observed on the left-hand side l1 ?",
        "Lhs(M?1) of Figure 7 and the left-hand side l2 ?",
        "Lhs(N) of Figure 2[bottom].",
        "These two left-hand sides are illustrated in Figure 8.",
        "Between them there is an mgu such that ?",
        "(Y ) 6?",
        "X (e.g., ?",
        "(y1) = z1 and",
        "Theorem 4.",
        "There exists an XTOPF N ?",
        "that is equivalent to N and compatible with M .",
        "Proof.",
        "We achieve compatibility by cutting offending rules of the XTOP N into smaller pieces.",
        "Unfortunately, both linearity and nondeletion of N might be lost in the process.",
        "We first let N ?",
        "= (Q,?,?, IN , RN , cN ) be the XTOPF such that cN (?, x) = x for every ?",
        "?",
        "RN and x ?",
        "X .",
        "If N ?",
        "is compatible with M , then we are done.",
        "Otherwise, let l1 ?",
        "Lhs(M?1) be a left-hand side, q(l2) ?",
        "r2 ?",
        "RN be a rule, and w ?",
        "pos?",
        "(l1) be a position such that ?",
        "(y) /?",
        "X for some ?",
        "?",
        "mgu(l1|w, l2) and y ?",
        "Y .",
        "Let v ?",
        "posy(l1|w) be the unique position of y in l1|w.",
        "Now we have to distinguish two cases: (i) Either var(l2|v) = ?",
        "and there is no leaf in r2 labeled by a symbol from ?.",
        "In this case, we have to introduce deletion and lookahead into N ?.",
        "We replace the old rule ?",
        "= q(l2) ?",
        "r2 by the new rule ??",
        "= q(l2[z]v) ?",
        "r2, where z ?",
        "X \\ var(l2) is a variable that does not appear in l2.",
        "In addition, we let cN (?",
        "?, z) = l2|v and cN (?",
        "?, x) = cN (?, x) for all x ?",
        "X \\ {z}.",
        "(ii) Otherwise, let V ?",
        "var(l2|v) be a maximal set such that there exists a minimal (with respect to the prefix order) position w?",
        "?",
        "pos(r2) with",
        "Another rule of N",
        "Figure 10: Additional rule used in Example 5.",
        "var(r2|w?)",
        "?",
        "var(l2|v) and var(r2[?]w?",
        ")?V = ?, where ?",
        "?",
        "?",
        "is arbitrary.",
        "Let z ?",
        "X \\ var(l2) be a fresh variable, q?",
        "be a new state of N , and",
        "The lookahead for z is trivial and otherwise we simply copy the old look-ahead, so",
        "where v?",
        "= posz??(l2|v).",
        "Finally, we collect all newly generated states of the form ?l, q, v?",
        "in Ql and for every such state with l = ?",
        "(l1, .",
        ".",
        ".",
        ", lk) and v = iw, let",
        "?li, q, w?",
        "(zi) otherwise be a new rule of N without look-ahead.",
        "Overall, we run the procedure until N ?",
        "is compatible with M .",
        "The procedure eventually terminates since the left-hand sides of the newly added rules are always smaller than the replaced rules.",
        "Moreover, each step preserves the semantics of N ?, which completes the proof.",
        "We note that the lookahead ofN ?",
        "after the construction used in the proof of Theorem 4 is either trivial (i.e., a variable) or a ground tree (i.e., a tree without variables).",
        "Let us illustrate the construc",
        "in Figure 9.",
        "We might first note that y1 has to be unified with ?.",
        "Since ?",
        "does not contain any variables and the right-hand side of the rule of N does not contain any non-variable leaves, we are in case (i) in the proof of Theorem 4.",
        "Consequently, the displayed rule of N is replaced by a variant, in which ?",
        "is replaced by a new variable z with lookahead ?.",
        "Secondly, with this new rule there is an mgu, in which y2 is mapped to ?",
        "(z1, z2).",
        "Clearly, we are now in case (ii).",
        "Furthermore, we can select the set V = {z1, z2} and position w?",
        "= .",
        "Correspondingly, the following two new rules for N replace the old rule: q(?",
        "(z, z?))?",
        "q?(z?)",
        "q?(?",
        "(z1, z2))?",
        "?",
        "(q1(z1), q2(z2)) , where the lookahead for z remains ?.",
        "Figure 10 displays another rule of N .",
        "There is an mgu, in which y2 is mapped to ?",
        "(z2, z3).",
        "Thus, we end up in case (ii) again and we can select the set V = {z2} and position w?",
        "= 2.",
        "Thus, we replace the rule of Figure 10 by the new rules",
        "Let us use the construction in the proof of Theorem 4 to resolve the incompatibility (see Example 3) between the XTOPs presented in the Introduction.",
        "Fortunately, the incompatibility can be resolved easily by cutting the rule of N (see Figure 7) into the rules of Figure 11.",
        "In this example, linearity and nondeletion are preserved."
      ]
    },
    {
      "heading": "4.2 Local determinism",
      "text": [
        "After the first preprocessing step, we have the original linear and nondeleting XTOP M and an XTOPF N ?",
        "= (Q?,?,?, IN , R?N , cN ) that is equivalent to N and compatible with M .",
        "However, in the first preprocessing step we might have introduced some non-linear (copying) rules in N ?",
        "(see rule (?)",
        "in Example 5), and it is known that ?nondeterminism [in M ] followed by copying [inN ?]?",
        "is a feature that prevents composition to work (Engelfriet, 1975; Baker, 1979).",
        "However, our copying is very local and the copies are only used to project to different subtrees.",
        "Nevertheless, during those projection steps, we need to make sure that the processing in M proceeds deterministically.",
        "We immediately note that all but one copy are processed by states of the form ?l, q, v?",
        "?",
        "Ql.",
        "These states basically process (part of) the tree l and project (with state q) to the subtree at position v. It is guaranteed that each such subtree (indicated by v) is reached only once.",
        "Thus, the copying is ?resolved?",
        "once the states of the form ?l, q, v?",
        "are left.",
        "To keep the presentation simple, we just add expanded rules to M such that any rule that can produce a part of a tree l immediately produces the whole tree.",
        "A similar strategy is used to handle the lookahead of N ?.",
        "Any right-hand side of a rule of M that produces part of a left-hand side of a rule of N ?",
        "with lookahead is expanded to produce the required lookahead immediately.",
        "Let L ?",
        "T?",
        "(Z) be the set of trees l such that",
        "To keep the presentation uniform, we assume that for every l ?",
        "L, there exists a state of the form ?l, q, v?",
        "?",
        "Q?.",
        "If this is not already the case, then we can simply add useless states without rules for them.",
        "In other words, we assume that the first case applies to each l ?",
        "L. Next, we add two sets of rules to RM , which will not change the semantics but prove to be useful in the composition construction.",
        "First, for every tree t ?",
        "L, let Rt contain all the rules p(l) ?",
        "r, where p = p(l) ?",
        "r is a new state with p ?",
        "P , minimal normalized tree l ?",
        "T?",
        "(X), and an instance r ?",
        "T?",
        "(P (X)) of t such that",
        "p(l) ?",
        "?M ?",
        "?",
        "?M ?",
        "r for some ?",
        "that is not an instance of t. In other words, we construct each rule of Rt by applying existing rules of RM in sequence to generate a (minimal) right-hand side that is an instance of t. We thus potentially make the right-hand sides of M bigger by joining several existing rules into a single rule.",
        "Note that this affects neither compatibility nor the semantics.",
        "In the second step, we add pure ?-rules that allow us to change the state to one that we constructed in the previous step.",
        "For every new state p?",
        "= p(l) ?",
        "r, let base(p?)",
        "= p. Then",
        "Clearly, this does not change the semantics because each rule of R?M can be simulated by a chain of rules of RM .",
        "Let us now do a full example for the preprocessing step.",
        "We consider a nondeterministic variant of the classical example by Arnold and Dauchet (1982).",
        "Example 6.",
        "Let M = (P,?,?, {p}, RM ) be the linear and nondeleting XTOP such that P = {p, p?, p?",
        "}, ?",
        "= {?, ?, ?, ?, }, and RM contains the following rules p(?",
        "(y1, y2))?",
        "?",
        "(ps(y1), p(y2)) (?)",
        "for every s, s?",
        "?",
        "{?, ?}.",
        "Similarly, we let N = (Q,?,?, {q}, RN ) be the linear and nondeleting XTOP such thatQ = {q, i} andRN contains the following rules q(?",
        "(z1, z2))?",
        "?",
        "(i(z1), i(z2)) q(?",
        "(z1, ?",
        "(z2, z3)))?",
        "?",
        "(i(z1), i(z2), q(z3)) (?)",
        "i(s(z1))?",
        "s(i(z1)) i()?",
        "for all s ?",
        "{?, ?}.",
        "It can easily be verified that M and N meet our requirements.",
        "However, N is not yet compatible with M because an mgu between rules (?)",
        "of M and (?)",
        "of N might map y2 to ?",
        "(z2, z3).",
        "Thus, we decompose (?)",
        "into q(?",
        "(z1, z))?",
        "?",
        "(i(z1), q(z), q ?",
        "(z)) q?(?",
        "(z2, z3))?",
        "q(z3) q(?",
        "(z1, z2))?",
        "i(z1) where q = ??",
        "(z2, z3), i, 1?.",
        "This newly obtained XTOP N ?",
        "is compatible with M .",
        "In addition, we only have one special tree ?",
        "(z2, z3) that occurs in states of the form ?l, q, v?.",
        "Thus, we need to compute all minimal derivations whose output trees are instances of ?",
        "(z2, z3).",
        "This is again simple since the first three rule schemes ?s, ?s,s?",
        ", and ??s,s?",
        "of M create such instances, so we simply create copies of them: ?s(?",
        "(y1, y2))?",
        "?",
        "(ps(y1), p(y2)) ?s,s?(?",
        "(y1, y2, y3))?",
        "?",
        "(ps(y1), ?(ps?",
        "(y2), p(y3))) ??s,s?(?",
        "(y1, y2, y3))?",
        "?",
        "(ps(y1), ?(ps?",
        "(y2), p?",
        "(y3))) for all s, s?",
        "?",
        "{?, ?}.",
        "These are all the rules of R?(z2,z3).",
        "In addition, we create the following",
        "for all s, s?",
        "?",
        "{?, ?}.",
        "Especially after reading the example it might seem useless to create the rule copies inRl [in Example 6 for l = ?",
        "(z2, z3)].",
        "However, each such rule has a distinct state at the root of the left-hand side, which can be used to trigger only this rule.",
        "In this way, the state selects the next rule to apply, which yields the desired local determinism.",
        "?q, p?"
      ]
    },
    {
      "heading": "5 Composition",
      "text": [
        "Now we are ready for the actual composition.",
        "For space efficiency reasons we reuse the notations used in Section 4.",
        "Moreover, we identify trees of T?(Q?",
        "(P ?",
        "(X))) with trees of T?((Q?",
        "?",
        "P ?)(X)).",
        "In other words, when meeting a subtree q(p(x)) with q ?",
        "Q?, p ?",
        "P ?, and x ?",
        "X , then we also view this equivalently as the tree ?q, p?",
        "(x), which could be part of a rule of our composed XTOP.",
        "However, not all combinations of states will be allowed in our composed XTOP, so some combinations will never yield valid rules.",
        "Generally, we construct a rule ofM ?",
        ";N ?",
        "by applying a single rule of M ?",
        "followed by any number of pure ?-rules of RE , which can turn states base(p) into p. Then we apply any number of rules of N ?",
        "and try to obtain a sentential form that has the required shape of a rule of M ?",
        ";N ?.",
        "Definition 7.",
        "Let M ?",
        "= (P ?,?,?, IM , R?M ) and N ?",
        "= (Q?,?,?, IN , R?N ) be the XTOPs constructed in Section 4, where",
        "The required rule shape is given by the definition of an XTOP.",
        "Most importantly, we must have that ` ?",
        "S(T?",
        "(X)), which we identify with a certain subset of Q?",
        "(P ?(T?",
        "(X))), and r ?",
        "T?",
        "(S(X)), which similarly corresponds to a subset of T?(Q?",
        "(P ?(X))).",
        "The states are simply combinations of the states of M ?",
        "and N ?, of",
        "which however the combinations of a state q ?",
        "Ql with a state p /?",
        "Pl are forbidden.",
        "This reflects the intuition of the previous section.",
        "If we entered a special state of the form ?l, q, v?, then we should use a corresponding state p ?",
        "Pl of M , which only has rules producing instances of l. We note that lookahead of N ?",
        "is checked normally in the derivation process.",
        "Example 8.",
        "Now let us illustrate the composition on Example 6.",
        "Let us start with rule (?)",
        "of M .",
        "is a rule of M ?",
        "; N ?",
        "for every s, s?, s??",
        "?",
        "{?, ?}.",
        "Note if we had not applied the RE-step, then we would not have obtained a rule of M ; N (because we would have obtained the state combination ?q, p?",
        "instead of ?q, ?s?,s??",
        "?, and ?q, p?",
        "is not a state of M ?",
        "; N ?).",
        "Let us also construct a rule for the state combination ?q, ?s?,s??",
        "?.",
        "Finally, let us construct a rule for the state combination ?q?",
        "?, ?s?,s??",
        "?.",
        "for every s ?",
        "{?, ?}.",
        "After having preprocessed the XTOPs in our introductory example, the devices M and N ?",
        "can be composed into M ; N ?.",
        "One rule of the composed XTOP is illustrated in Figure 13."
      ]
    },
    {
      "heading": "6 Post-processing",
      "text": [
        "Finally, we will compose rules again in an effort to restore linearity (and nondeletion).",
        "Since the composition of two linear and nondeleting XTOPs cannot always be computed by a single XTOP (Arnold and Dauchet, 1982), this method can fail to return such an XTOP.",
        "The presented method is not a characterization, which means it might even fail to return a linear and nondeleting XTOP although an equivalent linear and nondeleting XTOP exists.",
        "However, in a significant number of examples, the recombination succeeds to rebuild a linear (and nondeleting) XTOP.",
        "Let M ?",
        ";N ?",
        "= (S,?,?, I, R) be the composed XTOP constructed in Section 5.",
        "We simply inspect each non-linear rule (i.e., each rule with a non-linear right-hand side) and expand it by all rule options at the copied variables.",
        "Since the method is pretty standard and variants have already been used in the preprocessing steps, we only illustrate it on the rules of Figure 12.",
        "Example 9.",
        "The first (top row, left-most) rule of Figure 12 is non-linear in the variable y2.",
        "Thus, we expand the calls ?q, ??",
        "(y2) and ?q?, ??(y2).",
        "If ?",
        "= 's for some s ?",
        "{?, ?",
        "}, then the next rules are uniquely determined and we obtain the rule displayed in Figure 14.",
        "Here the expansion was successful and we could delete the original rule for ?",
        "= 's and replace it by the displayed expanded rule.",
        "However, if ?",
        "= ??s?,s??",
        ", then we can also expand the rule to obtain the rule displayed in Figure 15.",
        "It is still copying and we could repeat the process of expansion here, but we cannot get rid of all copying rules using this approach (as expected since there is no linear XTOP computing the same tree transformation)."
      ]
    }
  ]
}
