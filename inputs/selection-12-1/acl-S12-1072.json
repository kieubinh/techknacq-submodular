{
  "info": {
    "authors": [
      "zhou qiaoli",
      "zhang ling",
      "liu fei",
      "cai dongfeng",
      "zhang guiping"
    ],
    "book": "SemEval",
    "id": "acl-S12-1072",
    "title": "Zhou qiaoli: A divide-and-conquer strategy for semantic dependency parsing",
    "url": "https://aclweb.org/anthology/S12-1072",
    "year": 2012
  },
  "references": [
    "acl-W08-2134",
    "acl-W10-4145"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We describe our SemEval2012 shared Task 5 system in this paper.",
        "The system includes three cascaded components: the tagging semantic role phrase, the identification of semantic role phrase, phrase and frame semantic dependency parsing.",
        "In this paper, semantic role phrase is tagged automatically based on rules, and takes Conditional Random Fields (CRFs) as the statistical identification model of semantic role phrase.",
        "A projective graph-based parser is used as our semantic dependency parser.",
        "Finally, we gain Labeled Attachment Score (LAS) of 61.84%, which ranked the first position.",
        "At present, we gain the LAS of 62.08%, which is 0.24% higher than that ranked the first position in the task 5."
      ]
    },
    {
      "heading": "1 System Architecture",
      "text": [
        "To solve the problem of low accuracy of long distance dependency parsing, this paper proposes a divide-and-conquer strategy for semantic dependency parsing.",
        "Firstly, Semantic Role (SR) phrase in a sentence are identified; next, SR phrase can be replaced by their head or SR of head.",
        "Therefore, the original sentence is divided into two kinds of parts, which can be parsed separately.",
        "The first kind is SR phrase parsing; the second kind is parsing the sentence in which the SR phrases are replaced by their head or SR of head.",
        "Finally, the paper takes graph-based parser as the semantic dependency parser for all parts.",
        "They are described in Section 2 and Section 4.",
        "Their experimental results are shown in Section5.",
        "Section 6 gives our conclusion and future work."
      ]
    },
    {
      "heading": "2 SR Phrase Tagging and Frame",
      "text": [
        "To identify SR phrase, SR phrase of train corpus are tagged.",
        "SR phrase is tagged automatically based on rules in this paper.",
        "A phrase of the sentence is called Semantic Role phrase (SR phrase) when the parent of only one word of this phrase is out of this phrase.",
        "The word with the parent out of the phrase is called Head of Phrase (HP).",
        "The shortest SR phrase is one word, while the longest SR phrase is a part of the sentence.",
        "In this paper, the new sequence in which phrases are replaced by their head or SR of head is defined as the frame.",
        "In this paper, firstly, SR phrases of the sentence are identified; secondly, the whole sentence is divided into SR phrases and frame; thirdly, SR phrase and frame semantic dependency are parsed; finally, the dependency parsing results of all components are combined into the dependency parsing result of the whole sentence.",
        "SR of HP is used as the type of this phrase.",
        "Only parts of types of SR phrases are tagged.",
        "In this paper, the tagged SR phrases are divided into two"
      ]
    },
    {
      "heading": "2.1 MSR Phrase Tagging",
      "text": [
        "In this paper, MSR phrase includes: OfPart, agent, basis, concerning, content, contrast, cost, existent, experiencer, isa, partner, patient, possession, possessor, relevant, scope and whole.",
        "MSR phrase tagging rules are shown in figure1&2.",
        "Figure1: Tagging Rule of the Last Word of MSR Phrase Figure 1 shows the rule for identification of the last word of MSR phrase.",
        "If the SR of the current word is MSR and its POS is not VV, VE, VC or VA, it is the last word of phrase.",
        "As shown in the figure 2, the first word of phrase is found based on the last word of phrase.",
        "The child with the longest distance from the last word of phrase is used as the current word, and if the current word has no child, it is the first word of phrase; otherwise, the child of the current word is found recursively.",
        "If the first word of phrase POS is preposition and punctuation, and its parent is the last word, the word following the first word serves as the first word of phrase.",
        "Figure2: Tagging Rule of the First Word of MSR Phrase Figure3: Example of the Tagging MSR Phrase As shown in the figure 3, the first column is word ID and the seventh column is parent ID of word.",
        "SR of ID40 is content, so ID40 is the last word of phrase.",
        "Its children include ID39 and ID37, thus ID37 with the longest distance from ID40 is the current word.",
        "The child of ID37 is ID33, the child of ID33 is ID32, ID32 has no child, and ID32 is the first word of SR phrase.",
        "The tagged result in the above figure 3 is as follows: ?/CC ?/VC ?",
        "?/VV content[ ?",
        "?/JJ ?",
        "?",
        "/NN ?",
        "/CC ??",
        "/NR ?",
        "/ETC ??",
        "/NN ?"
      ]
    },
    {
      "heading": "/DEG ??/NN ??/NN ]",
      "text": [
        "Input: wi: word index (ID) in a given sentence.",
        "N: the number of words.",
        "Mi: MSR list.",
        "Vi: POS tags list Output: the last word ID of MSR phrase Function: Findmainsemanticword(wi): return word ID when wi of semantic belongs to Mi.",
        "Otherwise return 0.",
        "Function: FindPOSword(wi): return true when wi of POS tagging not belongs to Vi.",
        "Otherwise return 0.",
        "Function Findlastword(wi) For i?1 to N do begin",
        "Input: Lword: the last word ID of MSR phrase.",
        "Output: Fword: the first word ID of MSR phrase.",
        "Function: Findmaxlenchild (w): return child ID with the longest distance from w when w has child.",
        "Otherwise returns 0.",
        "Fuction: FindPOSword(w): return POS of w. Fuction:Findparent(w): return parent ID of w.",
        "After phrases are tagged, a new sequence generated by replacing the phrase with HP is called"
      ]
    },
    {
      "heading": "2.2 PSR Phrase Tagging",
      "text": [
        "In this paper, SR phrase containing preposition is defined as PSR phrase.",
        "If the POS tags of the current word is Preposition (P), the first word and the last word of PSR phrase are found based on the current word.",
        "PSR phrase tagging rule as figure 4",
        "As shown in the figure 4, the child with the longest distance from the current word is the first word of phrase.",
        "If the prep has no child, then it is PSR phrase.",
        "As shown in the figure 5, firstly, the parent of the prep is found; next, the parent is taken as the current word, and the child with the longest distance from the current word is found recursively.",
        "If no child is found, the current word is the last word of PSR phrase.",
        "If preposition of SR is root or parent of preposition is root, and proposition is PSR.",
        "If ID of preposition is larger than ID of parent of preposition, and preposition is PSR.",
        "Figure5: Tagging Rule of the Last Word of PSR Phrase Figure6: Example of the Tagging PSR Phrase As shown in the figure6, ID4 is prep, and it has no child, so the first word is ID4.",
        "The parent of Input: Pword: the word ID that word POS tags is P. Output: Fword: the first word ID of PSR phrase.",
        "Function: Findmaxlenchildword(w): return word ID with the longest distance from w when w has child.",
        "Otherwise returns 0.",
        "Input: Pword: the word ID that word POS tags is P. Output: Lword: the last word ID of PSR phrase.",
        "Function: Findmaxchild (w): return word ID that length is max with w when w has child.",
        "Otherwise return 0.",
        "Function: Findparent (w): return word ID when w of parent is not root.",
        "Otherwise return 0.",
        "Function: Findroot(w): return 1 when w of semantic role is root.",
        "Other wise return 0.",
        "ID4 is ID5, the child with the longest distance from ID5 is ID10, and ID10 with no child is the last word of phrase.",
        "The tagged result in the above figure 6 is as follows: ?",
        "?/NN ?",
        "?/NN ?",
        "?/NN duration[?/P"
      ]
    },
    {
      "heading": "??/VV ??/NR ??/NN ??/NN ?/LC] ? ?/VV ?/AS ??/JJ ??/NN ?/PU",
      "text": [
        "The position of HP in PSR phrase is not fixed.",
        "After phrases are tagged, a new sequence generated by replacing the phrase with SR of HP is"
      ]
    },
    {
      "heading": "2.3 SR Phrase Tagging Performance",
      "text": [
        "If the parent of only one word of the tagged phrase is out of this phrase, this phrase is tagged correctly.",
        "If each word in the generated frame has one parent (i.e. words out of the phrase are dependent on HP instead of other words of the phrase), the frame is correct.",
        "As shown in the table 1, tagging results were of very high accuracy.",
        "The wrong results were not contained in phrase and frame train corpus of dependency parsing."
      ]
    },
    {
      "heading": "3 SR Phrase Identification",
      "text": [
        "In this paper, we divide SR phrase into two classes: Max SR phrase and Base SR phrase.",
        "Max SR phrase refers to SR phrase is not included in any other SR phrase in a sentence.",
        "Base SR phrase refers to SR phrase does not include any other SR phrase in a SR phrase.",
        "Therefore, MSR phrase is divided into two classes: Max MSR (MMSR) phrase and Base MSR (BMSR) phrase.",
        "PSR phrase was divided into two classes: Max PSR (MPSR) phrase and Base PSR (BPSR) phrase."
      ]
    },
    {
      "heading": "3.1 MMSR Phrase Identification based on Cascaded Conditional Random Fields",
      "text": [
        "Reference (Qiaoli Zhou, 2010) is selected as our approach of MMSR phrase identification.",
        "The MMSR identifying process is conceptually very simple.",
        "The MMSR identification first performs identifying BMSR phrase, and converts the identified phrase to head.",
        "It then performs identifying for the updated sequence and converts the newly recognized phrases into head.",
        "The identification repeats this process until the whole sequence has no phrase, and the top-level phrase are the MMSR phrases.",
        "A common approach to the phrase identification problem is to convert the problem into a sequence tagging task by using the ?BIEO?",
        "(B for beginning, I for inside, E for ending, and O for outside) representation.",
        "If the phrase has one word, the tag is E. This representation enables us to use the linear chain CRF model to perform identifying, since the task is simply assigning appropriate labels to sequence.",
        "There are two differences between our feature set and Qiaoli (2010)?s: 1) We use dependency direction of word as identification feature, while Qiaoli (2010) did not use.",
        "based on Qiaoli (2010).",
        "W represents a word, and D represents dependency direction of the word.",
        "With this approach, nested MSR phrases are identified, and the top-level MSR phrase is the MMSR that we obtained."
      ]
    },
    {
      "heading": "3.2 BMSR Phrase Identification based on CRFs",
      "text": [
        "We use the tag set ?BIEO?",
        "the same as that used for MMSR identification.",
        "In table 4, ?W?",
        "represents a word, ?P?",
        "represents the part-of-speech of the word, ?X?",
        "represents the fourth word following the current word, ?Y?",
        "represents the fifth word following the current word, ?D?",
        "represents the dependency direction of the current word, and ?S?",
        "represents the paired punctuation feature.",
        "?S?",
        "consists of ?RLIO?",
        "(R for the right punctuation, L for the left punctuation, I for the part between the paired punctuation and O for outside)."
      ]
    },
    {
      "heading": "3.3 MPSR Phrase Identification Based on Collection",
      "text": [
        "Reference (Dongfeng, 2011) is selected as our approach of MPSR phrase identification.",
        "The position of HP in PSR phrase is not fixed.",
        "Not only PSR phrase is identified, but also PSR phrase type is identified.",
        "There are two major differences between our feature set and Dongfeng (2011)?s: 1) We take the PSR phrase type (the SR of HP) as tag.",
        "2) We use ?S-type?",
        "represents that the PSR phrase is the single preposition.",
        "?Type?",
        "represents SR of the preposition.",
        "For example: ??",
        "?/NN location [?/P ?",
        "?",
        "In table 6, Dongfeng(2011) takes ?E?",
        "as the tag of last word of PSR phrase, but we take ?Location-E?",
        "as the tag of last word of PSR phrase (Location is type of PSR phrase).",
        "With this approach, nested PSR phrases are identified, and the top-level PSR phrase is the MPSR that we obtained."
      ]
    },
    {
      "heading": "3.4 Combined Identification of MSR Phrase and PSR Phrase",
      "text": [
        "Identification process: MSR phrase and PSR phrase are respectively identified in one sentence, and the results are combined in accordance with this rule: if phrases are nested, only the top-level phrase is tagged; if phrases are same, only the PSR",
        "phrase is tagged; if phrases are overlapped, only PSR phrase is tagged.",
        "There are two combinations in this paper: 1) MMSR phrase and MPSR phrase combined result is defined as MMMP phrase.",
        "For example as follow (?",
        "[ ]?represents MMSR,"
      ]
    },
    {
      "heading": "Performance 3.5 Phrase and Frame Length Distribution",
      "text": [
        "We count phrases, frame and Original Sentence (OS) length distribution in training set and dev set.",
        "than 20 words, especially 80% of MMMP frame has less than 20 words, but about 65% of OS has more than 20 words.",
        "We count phrases, frame and Original Sentence (OS) Average Length (AL) in training set and dev set.",
        "Table 11 shows phrase of AL accounted for 10% of OS of AL, and frame of AL accounted for 50% of OS of AL.",
        "The AL shows that the semantic dependency paring unit length of OS is greatly reduced after dividing an original sentence into SR phrases and frame.",
        "As shown in tables 9, 10 and 11, the length distribution indicates that the divide-and-conquer strategy reduces the complexity of sentences significantly."
      ]
    },
    {
      "heading": "4 Semantic Dependency Parsing",
      "text": [
        "Graph-based parser is selected as our basic semantic dependency parser.",
        "It views the semantic dependency parsing as problem of finding maximum spanning trees (McDonald, 2006) in directed graphs.",
        "In this paper, phrase and frame semantic dependency parsing result was obtained by Graph-based parser.",
        "Training set of phrase comes from phrases, and training set of frame comes from frames."
      ]
    },
    {
      "heading": "5 Experiments",
      "text": []
    },
    {
      "heading": "5.1 Direction of Identification",
      "text": [
        "Dependency direction serves as feature of SR phrase identification, so we need to identify dependency direction of word.",
        "We use tag set is {B, F}, B represents backward dependence, F represents forward dependence.",
        "The root's dependency direction in sentence is B.",
        "Dependency direction identification p-score has reached 94.87%.",
        "In table12, w represents word, p represents POS."
      ]
    },
    {
      "heading": "5.2 System and Model",
      "text": [
        "For a sentence for which phrases has been identified, if phrases can be identified, then the whole sentence semantic dependency parsing result is obtained by phrase parsing model and frame parsing model.",
        "Therefore, in this paper, the sentence is divided into the following types based on the phrase identification results: (1) SentMMMP indicates MMSR phrase and MPSR phrase identified in a sentence; (2) SentBMMP indicates BMSR phrase and MPSR phrase identified in a sentence; (3) SentMMSR indicates only MMSR phrase identified in a sentence; (4) SentMPSR indicates only MPSR phrase identified in a sentence; (5) SentBMSR indicates only BMSR phrase identified in a sentence; (6) SentNone indicates no phrase identified in a sentence.",
        "models for every type of sentence.",
        "For example, parsing SentMMMP needs MMMP phrase parsing model and MMMP frame paring model The corpus contains the sentence type determined by the phrase identification strategy.",
        "As shown in table 14, Strategy MMMP indicates that MMMP phrase in the corpus was identified, and sentences in the corpus were divided into SentMMMP, SentMMSR, SentMPSR and SentNone.",
        "Strategy BMMP indicates that BMMP phrase in the corpus was identified, and sentences in the corpus were divided into SentBMMP, SentBMSR, SentMPSR and SentNone.",
        "Strategy BMSR indicates that BMSR phrase in the corpus was identified, and sentences in the corpus were divided into SentBMSR and SentNone."
      ]
    },
    {
      "heading": "5.3 Comparative Experiments",
      "text": [
        "In this paper, we carry out comparative experiments of parsing for the test set by 3 systems.",
        "As shown in the table 15, system2 result is more accurate than system1, because BMMP phrase identification is more accurate than MMMP as shown in the table 8.",
        "Although, BMSR phrase identification is more accurate than MMMP phrase as shown in the table 5 & 8, system 3 result is less accurate than systm1.",
        "Compared with BMSR iden",
        "tification, MMMP identification reduces the complexity of sentences significantly, because the table 11 shows that the AL of MMMP frame is about 30% less than that of BMSR frame.",
        "G-parser is graph-based parser (Wangxiang Che, 2008)."
      ]
    },
    {
      "heading": "6 Conclusion and Future Work",
      "text": [
        "To solve the problem of low accuracy of long distance dependency parsing, this paper proposes a divide-and-conquer strategy for semantic dependency parsing.",
        "We present our SemEval2012 shared Task 5 system which is composed of three cascaded components: the tagging of SR phrase, the identification of Semantic-role-phrase and semantic dependency parsing.",
        "Divide-and-conquer strategy is influenced by two factors: one is identifying the type of phrase will greatly reduce the sentence complexity; the other is phrase identifying precision results in cascaded errors.",
        "The topic of this evaluation is semantic dependency parsing, and word and POS contain less semantic information.",
        "If we can make semantic label on words, then it will be more helpful for semantic dependency parsing.",
        "In the future, we will study how to solve the long distance dependency parsing problem."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "The authors would like to thank the reviewers for their helpful comments.",
        "This work was supported by National Natural Science Foundation of China (NSFC) via grant 61073123 and Natural Science Foundation of Liaoning province via grant 20102174."
      ]
    }
  ]
}
