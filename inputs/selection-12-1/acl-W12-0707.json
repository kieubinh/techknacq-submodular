{
  "info": {
    "authors": [
      "Antonio Valerio Miceli Barone",
      "Giuseppe Attardi"
    ],
    "book": "Proceedings of the Joint Workshop on Unsupervised and Semi-Supervised Learning in NLP",
    "id": "acl-W12-0707",
    "title": "Dependency Parsing Domain Adaptation using Transductive SVM",
    "url": "https://aclweb.org/anthology/W12-0707",
    "year": 2012
  },
  "references": [
    "acl-C04-1010",
    "acl-D07-1111",
    "acl-D07-1119",
    "acl-N07-1049",
    "acl-P06-1043",
    "acl-W06-2922",
    "acl-W10-2606"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Dependency Parsing domain adaptation involves adapting a dependency parser, trained on an annotated corpus from a given domain (e.g., newspaper articles), to work on a different target domain (e.g., legal documents), given only an unannotated corpus from the target domain.",
        "We present a shift/reduce dependency parser that can handle unlabeled sentences in its training set using a transductive SVM as its action selection classifier.",
        "We illustrate the the experiments we performed with this parser on a domain adaptation task for the Italian language."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Dependency parsing is the task of identifying syntactic relationships between words of a sentence and labeling them according to their type.",
        "Typically, the dependency relationships are not defined by an explicit grammar, rather implicitly through a human-annotated corpus which is then processed by a machine learning procedure, yielding a parser trained on that corpus.",
        "Shift-reduce parsers (Yamada and Matsumoto, 2003; Nivre and Scholz, 2004; Attardi, 2006) are an accurate and efficient (linear complexity) approach to this task: They scan the words of a sentence while updating an internal state by means of shift-reduce actions selected by a classifier trained on the annotated corpus.",
        "Since the training corpora are made by human annotators, they are expensive to produce and are typically only available for few domains that don't adequately cover the whole spectrum of the language.",
        "Parsers typically lose significant accuracy when applied on text from domains not covered by their training corpus.",
        "Several techniques have been proposed to adapt a parser to a new domain, even when only unannotated samples from it are available (Attardi et al., 2007a; Sagae and Tsujii, 2007).",
        "In this work we present a domain adaptation based on the semi-supervised training of the classifier of a shift-reduce parser.",
        "We implement the classifier as a multi-class SVM and train it with a transductive SVM algorithm that handles both labeled examples (generated from the source-domain annotated corpus) and unlabeled examples (generated from the the target-domain unannotated corpus)."
      ]
    },
    {
      "heading": "2 Background",
      "text": []
    },
    {
      "heading": "2.1 Shift-Reduce Parsing",
      "text": [
        "A shift-reduce dependency parser is essentially a pushdown automaton that scans the sentence one token at a time in a fixed direction, while updating a stack of tokens and also updating a set of directed, labeled edges that is eventually returned as the dependency parse graph of the sentence.",
        "Let T be the set of input token instances of the sentence and D be the set of dependency labels.",
        "The state of the parser is defined by the tuple ?s, q, p?, where s ?",
        "T ?",
        "is the stack,",
        "is the current parse graph.",
        "The parser starts in the state ?",
        "[], q0, {}?, where q0 is the input sentence, and terminates whenever it reaches a state in the form ?s, [], p?.",
        "At each step,",
        "it performs one of the following actions: shift : ?s, [t|q], p?",
        "?",
        "[t|s], q, p?",
        "rightreduced : ?",
        "[u|s], [t|q], p?",
        "?s, [t|q], p ?",
        "{(u, t, d)}?",
        "leftreduced : ?",
        "[u|s], [t|q], p?",
        "?s, [u|q], p ?",
        "{(t, u, d)}?",
        "note that there are rightreduced and leftreduced actions for each label d ?",
        "D. Action selection is done by the combination of two functions f ?",
        "c : a feature extraction function f : States ?",
        "Rn that computes a (typically sparse) vector of numeric features of the current state and the multi-class classifier c : R ?",
        "Actions.",
        "Alternatively, the classifier could score each available action, allowing a search procedure such as best-first (Sagae and Tsujii, 2007) or beam search to be used.",
        "In our experiments we used an extension of this approach that has an additional stack and additional actions to handle non-projective dependency relationships (Attardi, 2006).",
        "Training is performed by computing, for each sentence in the annotated training corpus, a sequence of states and actions that generates its correct parse, yielding, for each transition, a training example (x, y) ?",
        "Rn ?Actions for the classifier.",
        "Various classification algorithms have been successfully used, including maximum entropy, multilayer perceptron, averaged perceptron, SVM, etc.",
        "In our approach, the classifier is always a multi-class SVM composed of multiple (one-per-parsing-action) two-class SVMs in one-versus-all configuration."
      ]
    },
    {
      "heading": "2.2 Parse Graph Revision",
      "text": [
        "Attardi and Ciaramita (2007b) developed a method for improving parsing accuracy using parse graph revision: the output of the parser is fed to a procedure that scans the parsed sentence in a fixed direction and, at each step, possibly revises the current node (rerouting or relabeling its unique outgoing edge) based on the classifier's output.",
        "Training is performed by parsing the training corpus and comparing the outcome against the annotation: for each sentence, a sequence of actions necessary to transform the machine-generated parse into the reference parse is computed and it is used to train the classifier.",
        "(Usually, a lower-quality parser is used during training, assuming that it will generate more errors and hence more revision opportunities).",
        "This method tends to produce robust parsers: errors in the first stage have the opportunity to be corrected in the revision stage, thus, even if it does not learn from unlabeled data, it nevertheless performs well in domain adaptation tasks (Attardi et al., 2007a).",
        "In our experiments we used parse graph revision both as a baseline for accuracy comparison, and in conjunction with our approach (using a transductive SVM classifier in the revision stage)."
      ]
    },
    {
      "heading": "2.3 Transductive SVM",
      "text": [
        "Transductive SVM (Vapnik, 1998) is a framework for the semi-supervised training of SVM classifiers.",
        "Consider the inductive (completely supervised) two-class SVM training problem: given a training set {(xi, yi) |xi ?",
        "Rn, yi ?",
        "{?1, 1}}",
        "?(?)",
        "is defined such that k (x, x?)",
        "?",
        "?",
        "(x) ?",
        "?",
        "(x?)",
        "is the SVM kernel function.",
        "This is a convex quadratic programming problem that can be solved efficiently by specialized algorithms.",
        "Including an unlabeled example set",
        "This formulation essentially models the unlabeled examples the same way the labeled examples are modeled, with the key difference that the y?j (the unknown labels of the unlabeled examples) are optimization variables rather than parameters.",
        "Optimizing over these discrete variables makes the problem non-convex and in fact NP-hard.",
        "Nevertheless, algorithms that feasibly find a local minimum that is typically good enough for practical purposes do exist.",
        "In our experiments we used the iterative transductive SVM algorithm implemented in the SvmLight library (Joachims, 1999).",
        "This algorithm tends to become impractical when the number of unlabeled examples is greater than a few thousands, hence we were forced to use only a small portion on the available target domain corpus.",
        "We also tried the concave-convex procedure (CCCP) TSVM algorithm (Collobert et al., 2006) as implemented by the the Universvm package, and the multi-switch and deterministic annealing algorithms for linear TSVM (Sindhwani and Keerthi, 2007) as implemented by the Svmlin package.",
        "These methods are considerably faster but appear to be substantially less accurate than SvmLight on our training data."
      ]
    },
    {
      "heading": "3 Proposed approach",
      "text": [
        "We present a semi-supervised training procedure for shift/reduce SVM parsers that allows to include unannotated sentences in the training corpus.",
        "We randomly sample a small number (approx.",
        "100) of sentences from the unannotated corpus (the target domain corpus in a domain adaptation task).",
        "For each of these sentences, we generate a sequence of states that the parser may encounter while scanning the sentence.",
        "For each state we extract the features to generate an unlabeled training example for the SVM classifier which is included in the training set alng with the labeled examples generated from the annotated corpus.",
        "There is a caveat here: the parser state at any given point during the parsing of a sentence generally depends on the actions taken before, but when we are training on an unannotated sentence, we have no way of knowing what actions the parser should have taken, and thus the state we generate can be generally incorrect.",
        "For this reason we evaluated pre-parsing the unannotated sentences with a non-transductively trained parser in order to generate plausible state transitions while still adding unlabeled examples.",
        "However, it turned out that this pre-parsing does not seem to improve accuracy.",
        "We conjecture that, because the classifier does not see actual states but only features derived from them, and many of these features are independent of previous states and actions (features such as the lemma and POS tag of the current token and its neighbors have this property), these features contain enough information to perform parsing.",
        "The classifier is trained using the SvmLight transductive algorithm.",
        "Since SvmLight supports only two-class SVMs while our classifier is multi-class (one class for each possible parsing action), we implement it in terms of two-class classifiers.",
        "We chose the one-versus-all strategy: We train a number of sub-classifiers equal to the number of original classes.",
        "Each labeled training example (x, y) is converted to the example (x, 1) for the sub-classifier number y and to the example (x, ?1) for the rest of sub-classifiers.",
        "Unlabeled examples are just replicated to all sub-classifiers.",
        "During classification the input example is evaluated by all the sub-classifiers and the one returning the maximum SVM score determines the class.",
        "Our approach has been also applied to the second stage of the revision parser, by presenting the features of the unannotated sentences to the revision classifier as unlabeled training examples."
      ]
    },
    {
      "heading": "4 Experiments",
      "text": []
    },
    {
      "heading": "4.1 Experimental setup",
      "text": [
        "We performed our experiments using the DeSR parser (Attardi, 2006) on the data sets for the Evalita 2011 dependency parsing domain adaptation task for the Italian language (Evalita, 2011).",
        "The data set consists in an annotated source-domain corpus (newspaper articles) and an unannotated target-domain corpus (legal documents),",
        "plus a small annotated development corpus also from the target domain, which we used to evaluate the performance.",
        "We performed a number of runs of the DeSR parser in various configurations, which differed in the number and type of features extracted, the sentence scanning direction, and whether or not parse tree revision was enabled.",
        "The SVM classifiers always used a quadratic kernel.",
        "In order to keep the running time of transductive SVM training acceptable, we limited the number of unannotated sentences to one hundred, which resulted in about 3200 unlabeled training examples fed to the classifiers.",
        "The annotated sentences were 3275.",
        "We performed one run with 500 unannotated sentences and, at the cost of a greatly increased running time, the accuracy improvement was about 1%.",
        "We conjecture that a faster semi-supervised training algorithm could allow greater performance improvements by increasing the size of the unannotated corpus that can be processed.",
        "All the experiments were performed on a machine equipped with an quad-core Intel Xeon X3440 processor (8M Cache, 2.53 GHz) and 12 Gigabytes of RAM."
      ]
    },
    {
      "heading": "4.2 Discussion",
      "text": [
        "As it is evidenced from the table in figure 1, our approach typically outperforms the non-transductive parser by about 1% of all the three score measures we considered.",
        "While the improvement is small, it is consistent with different configurations of the parser that don't use parse tree revision.",
        "Accuracy remained essentially equal or became slightly worse in the two configurations that use parse tree revision.",
        "This is possibly due to the fact that the first stage parser of the revision configurations uses a maximum entropy classifier during training that does not learn from the unlabeled examples.",
        "These results suggest that unlabeled examples contain information that can exploited to improve the parser accuracy on a domain different than the labeled set domain.",
        "However, the computational cost of transductive learning algorithm we used limits the amount of unlabeled data we can exploit.",
        "This is consistent with the results obtained by the self-training approaches, where a first parser is trained on a the labeled set, which is used to parse the unlabeled set which is then included into the training set of a second parser.",
        "(In fact, self-training is performed in the first step of the SvmLight TSVM algorithm).",
        "Despite earlier negative results, (Sagae, 2010) showed that even naive self-training can provide accuracy benefits (about 2%) in domain adaptation, although these results are not directly comparable to ours because they refer to constituency parsing rather than dependency parsing.",
        "(Mc-Closky et al., 2006) obtain even better results (5% f-score gain) using a more sophisticated form of self-training, involving n-best generative parsing and discriminative reranking.",
        "(Sagae and Tsujii, 2007) obtain similar gains (about 3 %) for dependency parsing domain adaptation, using self-training on a subset of the target-domain instances selected on the basis of agreement between two different parsers.",
        "(the results are not directly comparable to ours because they were obtained on a different corpus in a different language)."
      ]
    },
    {
      "heading": "5 Conclusions and future work",
      "text": [
        "We presented a semi-supervised training approach for shift/reduce SVM parsers and we illustrated an application to domain adaptation, with small but mostly consistent accuracy gains.",
        "While these gains may not be worthy enough to justify the extra computational cost of the transductive SVM algorithm (at least in the SvmLight implementation), they do point out that there exist a significant amount of information in an unannotated corpus that can be exploited for increasing parser accuracy and performing domain adaptation.",
        "We plan to further investigate this method by exploring classifier algorithms other than transductive SVM and combinations with other semi-supervised parsing approaches.",
        "We also plan to test our method on standardized English-language corpora to obtain results that are directly comparable to those in the literature."
      ]
    }
  ]
}
