{
  "info": {
    "authors": [
      "Kazuma Hashimoto",
      "Makoto Miwa",
      "Yoshimasa Tsuruoka",
      "Takashi Chikayama"
    ],
    "book": "EMNLP",
    "id": "acl-D13-1137",
    "title": "Simple Customization of Recursive Neural Networks for Semantic Relation Classification",
    "url": "https://aclweb.org/anthology/D13-1137",
    "year": 2013
  },
  "references": [
    "acl-D12-1110",
    "acl-J08-1002",
    "acl-P06-1104",
    "acl-P13-1045",
    "acl-P13-1088",
    "acl-S10-1006",
    "acl-S10-1057"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In this paper, we present a recursive neural network (RNN) model that works on a syntactic tree.",
        "Our model differs from previous RNN models in that the model allows for an explicit weighting of important phrases for the target task.",
        "We also propose to average parameters in training.",
        "Our experimental results on semantic relation classification show that both phrase categories and task-specific weighting significantly improve the prediction accuracy of the model.",
        "We also show that averaging the model parameters is effective in stabilizing the learning and improves generalization capacity.",
        "The proposed model marks scores competitive with state-of-the-art RNN-based models."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Recursive Neural Network (RNN) models are promising deep learning models which have been applied to a variety of natural language processing (NLP) tasks, such as sentiment classification, compound similarity, relation classification and syntactic parsing (Hermann and Blunsom, 2013; Socher et al., 2012; Socher et al., 2013).",
        "RNN models can represent phrases of arbitrary length in a vector space of a fixed dimension.",
        "Most of them use minimal syntactic information (Socher et al., 2012).",
        "Recently, Hermann and Blunsom (2013) proposed a method for leveraging syntactic information, namely CCG combinatory operators, to guide composition of phrases in RNN models.",
        "While their models were successfully applied to binary sentiment classification and compound similarity tasks, there are questions yet to be answered, e.g., whether such enhancement is beneficial in other NLP tasks as well, and whether a similar improvement can be achieved by using syntactic information of more commonly available types such as phrase categories and syntactic heads.",
        "In this paper, we present a supervised RNN model for a semantic relation classification task.",
        "Our model is different from existing RNN models in that important phrases can be explicitly weighted for the task.",
        "Syntactic information used in our model includes part-of-speech (POS) tags, phrase categories and syntactic heads.",
        "POS tags are used to assign vector representations to word-POS pairs.",
        "Phrase categories are used to determine which weight matrices are chosen to combine phrases.",
        "Syntactic heads are used to determine which phrase is weighted during combining phrases.",
        "To incorporate task-specific information, phrases on the path between entity pairs are further weighted.",
        "The second contribution of our work is the introduction of parameter averaging into RNN models.",
        "In our preliminary experiments, we observed that the prediction performance of the model often fluctuates significantly between training iterations.",
        "This fluctuation not only leads to unstable performance of the resulting models, but also makes it difficult to fine-tune the hyperparameters of the model.",
        "Inspired by Swersky et al. (2010), we propose to average the model parameters in the course of training.",
        "A recent technique for deep learning models of similar vein is dropout (Hinton et al., 2012), but averaging is simpler to implement.",
        "Our experimental results show that our model per",
        "word vector?",
        "with POS tags of the words (DT, NN and NN respectively).",
        "For example, the two word-POS pairs ?word NN?",
        "and ?vector NN?",
        "with a syntactic category N are combined to represent the phrase ?word vector?.",
        "forms better than standard RNN models.",
        "By averaging the model parameters, our model achieves performance competitive with the MV-RNN model in Socher et al. (2012), without using computationally expensive word-dependent matrices."
      ]
    },
    {
      "heading": "2 An Averaged RNN Model with Syntax",
      "text": [
        "Our model is a supervised RNN that works on a binary syntactic tree.",
        "As our first step to leverage information available in the tree, we distinguish words with the same spelling but POS tags in the vector space.",
        "Our model also uses different weight matrices dependent on the phrase categories of child nodes (phrases or words) in combining phrases.",
        "Our model further weights those nodes that appear to be important.",
        "Compositional functions of our model follow those of the SU-RNN model in Socher et al. (2013)."
      ]
    },
    {
      "heading": "2.1 Word-POS Vector Representations",
      "text": [
        "Our model simply assigns vector representations to word-POS pairs.",
        "For example, a word ?caused?",
        "can be represented in two ways: ?caused VBD?",
        "and ?caused VBN?.",
        "The vectors are represented as column vectors in a matrix We ?",
        "Rd?|V|, where d is the dimension of a vector and V is a set of all word-POS pairs we consider."
      ]
    },
    {
      "heading": "2.2 Compositional Functions with Syntax",
      "text": [
        "In construction of parse trees, we associate each of the tree node with its d-dimensional vector representation computed from vector representations of its subtrees.",
        "For leaf nodes, we look up word-POS vector representations in V. Figure 1 shows an example of such recursive representations.",
        "A parent vector p ?",
        "Rd?1 is computed from its direct child vectors cl and cr?",
        "Rd?1:",
        "where W Tcl ,Tcrl and W Tcl ,Tcrr ?",
        "Rd?d are weight matrices that depend on the phrase categories of cl and cr.",
        "Here, cl and cr have phrase categories Tcl and Tcr respectively (such as N, V, etc.).",
        "bTcl ,Tcr ?",
        "Rd?1 is a bias vector.",
        "To incorporate the importance of phrases into the model, two subtrees of a node may have different weights ?l ?",
        "[0, 1] and ?r(= 1 ?",
        "?l), taking phrase importance into account.",
        "The value of ?l is manually specified and automatically applied to all nodes based on prior knowledge about the task.",
        "In this way, we can compute vector representations for phrases of arbitrary length.",
        "We denote a set of such matrices as Wlr and bias vectors as b."
      ]
    },
    {
      "heading": "2.3 Objective Function and Learning",
      "text": [
        "As with other RNN models, we add on the top of a node x a softmax classifier.",
        "The classifier is used to predict a K-class distribution d(x) ?",
        "RK?1 over a specific task to train our model:",
        "where W label ?",
        "RK?d is a weight matrix and blabel ?",
        "RK?1 is a bias vector.",
        "We denote t(x) ?",
        "RK?1 as the target distribution vector at node x. t(x) has a 0-1 encoding: the entry at the correct label of t(x) is 1, and the remaining entries are 0.",
        "We then compute the cross entropy error between d(x) and t(x):",
        "and define an objective function as the sum of E(x) over all training data:",
        "where ?",
        "= (We,Wlr, b,W label, blabel) is the set of our model parameters that should be learned.",
        "?",
        "is a vector of regularization parameters.",
        "To compute d(x), we can directly leverage any other nodes?",
        "feature vectors in the same tree.",
        "We denote such additional feature vectors as x?i ?",
        "Rd?1, and extend Eq.",
        "(1):",
        "where W addi ?",
        "RK?d are weight matrices for additional features.",
        "We denote these matrices W addi as W add.",
        "We also add W add to ?",
        ":",
        "is efficiently computed via backpropagation through structure (Goller and Ku?chler, 1996).",
        "To minimize J(?",
        "), we use batch L-BFGS1 (Hermann and Blunsom, 2013; Socher et al., 2012)."
      ]
    },
    {
      "heading": "2.4 Averaging",
      "text": [
        "We use averaged model parameters",
        "at test time, where ?t is the vector of model parameters after t iterations of the L-BFGS optimization.",
        "Our preliminary experimental results suggest that averaging ?",
        "except We works well."
      ]
    },
    {
      "heading": "3 Experimental Settings",
      "text": [
        "We used the Enju parser (Miyao and Tsujii, 2008) for syntactic parsing.",
        "We used 13 phrase categories given by Enju."
      ]
    },
    {
      "heading": "3.1 Task: Semantic Relation Classification",
      "text": [
        "We evaluated our model on a semantic relation classification task: SemEval 2010 Task 8 (Hendrickx et al., 2010).",
        "Following Socher et al. (2012), we regarded the task as a 19-class classification problem.",
        "There are 8,000 samples for training, and 2,717 for",
        "test.",
        "For the validation set, we randomly sampled 2,182 samples from the training data.",
        "To predict a class label, we first find the minimal phrase that covers the target entities and then use the vector representation of the phrase (Figure 2).",
        "As explained in Section 2.3, we can directly connect features on any other nodes to the softmax classifier.",
        "In this work, we used three such internal features: two vector representations of target entities and one averaged vector representation of words between the entities2."
      ]
    },
    {
      "heading": "3.2 Weights on Phrases",
      "text": [
        "We tuned the weight ?l (or ?r) introduced in Section 2.2 for this particular task.",
        "There are two factors: syntactic heads and syntactic path between target entities.",
        "Our model puts a weight ?",
        "?",
        "[0.5, 1] on head phrases, and 1 ?",
        "?",
        "on the others.",
        "For relation classification tasks, syntactic paths between target entities are important (Zhang et al., 2006), so our model also puts another weight ?",
        "?",
        "[0.5, 1] on phrases on the path, and 1 ?",
        "?",
        "on the others.",
        "When both child nodes are on the path or neither of them on the path, we set ?",
        "= 0.5.",
        "The two weight factors are summed up and divided by 2 to be the final weights ?l and ?r to combine the phrases.",
        "For example, we set ?l = (1??",
        ")+?2 and ?r =",
        "when the right child node is the head and the left child node is on the path."
      ]
    },
    {
      "heading": "3.3 Initialization of Model Parameters and Tuning of Hyperparameters",
      "text": [
        "We initialized We with 50-dimensional word vectors3 trained with the model of Collobert et",
        "Our model w/o phrase categories (PC) 77.7 Our model w/o head weights (HW) 78.8 Our model w/o path weights (PW) 78.7 Our model w/o averaging (AVE) 76.9 Our model w/o PC, HW, PW, AVE 74.1",
        "formation and averaging.",
        "al.",
        "(2011), and Wlr with I2 + ?, where I ?",
        "Rd?d is an identity matrix.",
        "Here, ?",
        "is zero-mean gaussian random variable with a variance of 0.01.",
        "The initialization of Wlr is the same as that of Socher et al.",
        "(2013).",
        "The remaining model parameters were initialized with 0.",
        "We tuned hyperparameters in our model using the validation set for each experimental setting.",
        "The hyperparameters include the regularization parameters for We, Wlr, W label and W add, and the weights ?",
        "and ?.",
        "For example, the best performance for our model with all the proposed methods was obtained with the values: 10?6, 10?4, 10?3, 10?3, 0.7 and 0.9 respectively."
      ]
    },
    {
      "heading": "4 Results and Discussion",
      "text": [
        "Table 1 shows the performance of our model and that of previously reported systems on the test set.",
        "The performance of an SVM system with bag-of-words features was reported in Rink and Harabagiu (2010), and the performance of the RNN and MV-RNN models was reported in Socher et al. (2012).",
        "Our model achieves an F1 score of 79.4% and outperforms the RNN model (74.8% F1) as well as the",
        "tably, the score of our model is competitive with that of the MV-RNN model (79.1% F1), which is computationally much more expensive.",
        "Readers are referred to Hermann and Blunsom (2013) for the discussion about the computational complexity of the MV-RNN model.",
        "We improved the performance of RNN models on the task without much increasing the complexity.",
        "This is a significant practical advantage of our model, although its expressive power is not the same as that of the MV-RNN model.",
        "Our model outperforms the RNN model with one lexical and two semantic external features: POS tags, WordNet hypernyms and named entity tags (NER) of target word pairs (external features).",
        "The MV-RNN model with external features shows better performance than our model.",
        "An SVM with rich lexical and semantic features (Rink and Harabagiu, 2010) also outperforms ours.",
        "Note, however, that this is not a fair comparison because those models use rich external resources such as WordNet and named entity tags."
      ]
    },
    {
      "heading": "4.1 Contributions of Proposed Methods",
      "text": [
        "We conducted additional experiments to quantify the contributions of phrase categories, heads, paths and averaging to our classification score.",
        "As shown in Table 2, our model without phrase categories, heads or paths still outperforms the RNN model with external features.",
        "On the other hand, our model without averaging yields a lower score than the RNN model with external features, though it is still bet",
        "ter than the RNN model alone.",
        "Without utilizing these four properties, our model obtained only 74.1% F1.",
        "These results indicate that syntactic and task-specific information and averaging contribute to the performance improvement.",
        "The improvement is achieved by a simple modification of compositional functions in RNN models."
      ]
    },
    {
      "heading": "4.2 Effects of Averaging in Training",
      "text": [
        "Figure 3 shows the training curves in terms of F1 scores.",
        "These curves clearly demonstrate that parameter averaging helps to stabilize the learning and improve generalization capacity."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "We have presented an averaged RNN model for semantic relation classification.",
        "Our experimental results show that syntactic information such as phrase categories and heads improves the performance, and the task-specific weighting is also beneficial.",
        "The results also demonstrate that averaging the model parameters not only stabilizes the learning but also improves the generalization capacity of the model.",
        "As future work, we plan to combine deep learning models with richer information such as predicate-argument structures."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "We thank the anonymous reviewers for their insightful comments."
      ]
    }
  ]
}
