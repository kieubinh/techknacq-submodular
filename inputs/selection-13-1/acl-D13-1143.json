{
  "info": {
    "authors": [
      "Joseph Gubbins",
      "Andreas Vlachos"
    ],
    "book": "EMNLP",
    "id": "acl-D13-1143",
    "title": "Dependency Language Models for Sentence Completion",
    "url": "https://aclweb.org/anthology/D13-1143",
    "year": 2013
  },
  "references": [
    "acl-C04-1010",
    "acl-D07-1090",
    "acl-J01-2004",
    "acl-P01-1017",
    "acl-P10-1044",
    "acl-P10-1045",
    "acl-P11-1027",
    "acl-P12-1063",
    "acl-P12-1101",
    "acl-W10-3815",
    "acl-W12-2704"
  ],
  "sections": [
    {
      "text": [
        "Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing, pages 1405?1410, Seattle, Washington, USA, 18-21 October 2013. c?2013 Association for Computational Linguistics Dependency language models for sentence completion"
      ]
    },
    {
      "heading": "Abstract",
      "text": [
        "Sentence completion is a challenging semantic modeling task in which models must choose the most appropriate word from a given set to complete a sentence.",
        "Although a variety of language models have been applied to this task in previous work, none of the existing approaches incorporate syntactic information.",
        "In this paper we propose to tackle this task using a pair of simple language models in which the probability of a sentence is estimated as the probability of the lexicalisation of a given syntactic dependency tree.",
        "We apply our approach to the Microsoft Research Sentence Completion Challenge and show that it improves on n-gram language models by 8.7 percentage points, achieving the highest accuracy reported to date apart from neural language models that are more complex and expensive to train."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The verbal reasoning sections of standardised tests such as the Scholastic Aptitude Test (SAT) feature problems where a partially complete sentence is given and the candidate must choose the word or phrase from a list of options which completes the sentence in a logically consistent way.",
        "Sentence completion is a challenging semantic modelling problem.",
        "Systematic approaches for solving such problems require models that can judge the global coherence of sentences.",
        "Such measures of global coherence may prove to be useful in various applications, including machine translation and natural language generation (Zweig and Burges, 2012).",
        "Most approaches to sentence completion employ language models which use a window of immediate context around the missing word and choose the word that results in the completed sentence with the highest probability (Zweig and Burges, 2012; Mnih and Teh, 2012).",
        "However, such language models may fail to identify sentences that are locally coherent but are improbable due to long-range syntactic/semantic dependencies.",
        "Consider, for example, completing the sentence I saw a tiger which was really very ... with either fierce or talkative.",
        "A language model relying on up to five words of immediate context would ignore the crucial dependency between the missing word and the noun tiger.",
        "In this paper we tackle sentence completion using language models based on dependency grammar.",
        "These models are similar to standard n-gram language models, but instead of using the linear ordering of the words in the sentence, they generate words along paths in the dependency tree of the sentence.",
        "Unlike other approaches incorporating syntax into language models (e.g., Chelba et al., 1997), our models are relatively easy to train and estimate, and can exploit standard smoothing methods.",
        "We apply them to the Microsoft Research Sentence Completion Challenge (Zweig and Burges, 2012) and show an improvement of 8.7 points in accuracy over n-gram models, giving the best results to date for any method apart from the more computationally demanding neural language models."
      ]
    },
    {
      "heading": "2 Unlabelled Dependency Language",
      "text": []
    },
    {
      "heading": "Models",
      "text": [
        "In dependency grammar, each word in a sentence is associated with a node in a dependency tree (Figure 1).",
        "We define a dependency tree as a rooted, connected, acyclic directed graph together with a mapping from the nodes of the tree to a set of grammatical relation labels R. We define a lexicalised dependency tree as a dependency tree along with a mapping from the vertices of the tree to a vocabulary V .",
        "We seek to model the probability distribution of the lexicalisation of a given dependency tree.",
        "We will use this as a language model; we neglect the fact that a given lexicalised dependency tree can correspond to more than one sentence due to variations in word order.",
        "Let ST be a lexicalised dependency tree, where T is the unlexicalised tree and let w1w2 .",
        ".",
        ".",
        "wm be an ordering of the words corresponding to a breadth-first enumeration of the tree.",
        "In order for this representation to be unique, when we parse a sentence, we will use the unique breadth-first ordering where the children of any node appear in the same order as they did in the sentence.",
        "We define w0 to be a special symbol denoting the root of the tree.",
        "We denote the grammatical relation between wk and its parent by gk ?",
        "R. We apply the chain rule to the words in the tree in the order of this breadth-first enumeration:",
        "Given a word wi, we define the ancestor sequence A(w) to be the subsequence of (wk)",
        "ing the path from the root node to the parent of w, where each element of the sequence is the parent of the next element.",
        "For example in Figure 1, A(w8) = (w0, w1, w3).",
        "We make the following two assumptions: ?",
        "that each word wi is conditionally independent of the words outside of its ancestor sequence",
        "c, given the ancestor sequence A(wi); ?",
        "that the words are independent of the labels (gk)mk=1.",
        "Using these assumptions, we can write the probability as:",
        "Given a training data corpus consisting of sentences parsed into dependency trees, the maximum likelihood estimator for the probability P[wi|A(wi)] is given by the proportion of cases where the ancestor sequence A(wi) was followed by wi.",
        "Let C(?)",
        "be the count of the number of observations of a pattern in the corpus.",
        "We have",
        "As is the case for n-gram language models, we can't hope to observe all possible sequences of words no matter how big the corpus.",
        "To deal with this data sparsity issue, we take inspiration from n-gram models and assume a Markov property of order (N ?1):",
        "where A(N?1)(w) denotes the sequence of up to",
        "We have arrived at a model which is quite similar to n-gram language models.",
        "The main difference",
        "is that each word in the tree can have several children, while in the n-gram models it can only be followed by one word.",
        "Thus the sum in the denominator above does not simplify to the count of the ancestor sequence in the way that it does for n-gram language models.",
        "However, we can calculate and store the denominators easily during training, so that we do not need to sum over the vocabulary each time we evaluate the estimator.",
        "We refer to this model as the order N unlabelled dependency language model.",
        "As is the case for n-gram language models, even for low values of N, we will often encounter sequences (A(N?1)(w), w) which were not observed in training.",
        "In order to avoid assigning zero probability to the entire sentence, we need to use a smoothing method.",
        "We can use any of the smoothing methods used for n-gram language models.",
        "For simplicity, we use stupid backoff smoothing (Brants et al., 2007)."
      ]
    },
    {
      "heading": "3 Labelled Dependency Language Models",
      "text": [
        "We assumed above that the words are generated independently from the grammatical relations.",
        "However, we are likely to ignore valuable information in doing so.",
        "To illustrate this point, consider the following pair of sentences: You ate an apple",
        "An apple ate you det nsubj dobj The dependency trees of the two sentences are very similar, with only the grammatical relations between ate and its arguments differing.",
        "The unlabelled dependency language model will assign the same probability to both of the sentences as it ignores the labels of grammatical relations.",
        "In order to be able to distinguish between them, the nature of the grammatical relations between the words in the dependency tree needs to be incorporated in the language model.",
        "We relax the assumption that the words are independent of the labels of the parse tree, assuming instead the each word is conditionally independent of the words and labels outside its ancestor path given the words and labels in its ancestor path.",
        "We define G(wi) to be the sequence of grammatical relations between the successive elements of (A(wi), wi).",
        "G(wi) is the sequence of grammatical relations found on the path from the root node to wi.",
        "For example, in Figure 1, G(w8) = (g1, g3, g8).",
        "With our modified assumption we have:",
        "Once again we apply a Markov assumption.",
        "Let G(N?1)(w) be the sequence of grammatical relations between successive elements of (A(N?1)(w), w).",
        "With an (N ?",
        "1)th order Markov assumption, we have:",
        "The maximum likelihood estimator for the probability is once again given by the ratio of the counts of labelled paths.",
        "We refer to this model as the order N labelled dependency language model."
      ]
    },
    {
      "heading": "4 Dataset and Implementation Details",
      "text": [
        "We carried out experiments using the Microsoft Research Sentence (MSR) Completion Challenge (Zweig and Burges, 2012).",
        "This consists of a set of 1,040 sentence completion problems taken from five of the Sherlock Holmes novels by Arthur Conan Doyle.",
        "Each problem consists of a sentence in which one word has been removed and replaced with a blank and a set of 5 candidate words to complete the sentence.",
        "The task is to choose the candidate word which, when inserted into the blank, gives the most probable complete sentence.",
        "The set of candidates consists of the original word and 4 imposter words with similar distributional statistics.",
        "Human judges were tasked with choosing imposter words which would lead to grammatically correct sentences and such that, with some thought, the correct answer should be unambiguous.",
        "The training data set consists of 522 19th century novels from Project Gutenberg.",
        "We parsed the training data using the Nivre arc-eager deterministic dependency parsing algorithm (Nivre and Scholz, 2004) as implemented in MaltParser (Nivre et al., 2006).",
        "We trained order N labelled and unabelled dependency",
        "language models for 2 ?",
        "N ?",
        "5.",
        "Words which occured fewer than 5 times were excluded from the vocabulary.",
        "In order to have a baseline to compare against, we also trained n-gram language models with Kneser-Ney smoothing and stupid backoff using the Berkeley Language Modeling Toolkit (Pauls and Klein, 2011).",
        "To test a given language model, we calculated the scores it assigned to each candidate sentence and chose the completion with the highest score.",
        "For the dependency language models we parsed the sentence with each of the 5 possible completions and calculated the probability in each case.",
        "Figure 2 illustrates an example of this process for the order 3 unlabelled model."
      ]
    },
    {
      "heading": "5 Results",
      "text": [
        "Table 1 summarises the results.",
        "Unlab-SB is the order N unlabelled dependency language model with Stupid Backoff, Lab-SB is the order N labelled dependency language model with Stupid Backoff, Ngm-SB is the n-gram language model with Stupid Backoff and Ngm-KN is the interpolated Kneser-Ney smoothed n-gram language model.",
        "Both of the dependency language models outper-fomed the n-gram language models by a substantial"
      ]
    },
    {
      "heading": "Method Accuracy",
      "text": [
        "margin for all orders considered.",
        "The best result was achieved by the order 4 labelled dependency model which is 8.7 points in accuracy better than the best n-gram model.",
        "Furthermore, the labelled dependency models outperformed their unlabelled counterparts for every order except 2.",
        "Comparing against previous work (Table 2), the performance of our n-gram baseline is slightly better than the accuracy reported by other authors (Mnih and Teh, 2012; Zweig et al., 2012) for models of this type.",
        "The performance of the labelled dependency language model is superior to the results reported for any single model method, apart from those relying on neural language models (Mnih and Teh, 2012; Mikolov et al., 2013) .",
        "However the superior performance of neural networks comes at the cost of long training times.",
        "The best result achieved in Zweig et al.",
        "(2012) using a single method was 49% accuracy with a method based on LSA.",
        "Mikolov et al. (2013) also reported accuracy of 48% for a method called skip-grams, which uses a log-linear classifier to predict which words will appear close to each other in sentences."
      ]
    },
    {
      "heading": "6 Related Work and Discussion",
      "text": [
        "The best-known language model based on dependency parsing is that of Chelba et al. (1997).",
        "This model writes the probability in the familiar left-to-right chain rule decomposition in the linear order of the sentence, conditioning the probability of the next word on the linear trigram context, as well as some part of the dependency graph information relating to the words on its left.",
        "The language models we propose are far simpler to train and compute.",
        "A somewhat similar model to our unlabelled dependency language model was proposed in Graham and van Genabith (2010).",
        "However they seem to have used different probability estimators which ignore the fact that each node in the dependency tree can have multiple children.",
        "Other research on syntactic language modelling has focused on using phrase structure grammars (Pauls and Klein, 2012; Char-niak, 2001; Roark, 2001; Hall and Johnson, 2003).",
        "The linear complexity of deterministic dependency parsing makes dependency language models such as ours more scalable than these approaches.",
        "The most similar task to sentence completion is lexical substitution (McCarthy and Navigli, 2007).",
        "The main difference between them is that in the latter the word to be substituted provides a very important clue in choosing the right candidate, while in sentence completion this is not available.",
        "Another related task is selectional preference modeling (Se?aghdha, 2010; Ritter et al., 2010), where the aim is to assess the plausibility of possible syntactic arguments for a given word.",
        "The dependency language models described in this paper assign probabilities to full sentences.",
        "Language models which require full sentences can be used in automatic speech recognition (ASR) and machine translation (MT).",
        "The approach is to use a conventional ASR or MT decoder to produce an N-best list of the most likely candidate sentences and then re-score these with the language model.",
        "This was done by Chelba et al. (1997) for ASR using a dependency language model and by Pauls and Klein (2011) for MT using a PSG-based syntactic language model."
      ]
    },
    {
      "heading": "7 Conclusion",
      "text": [
        "We have proposed a pair of language models which are probabilistic models for the lexicalisation of a given dependency tree.",
        "These models are simple to train and evaluate and are scalable to large data sets.",
        "We applied them to the Microsoft Research Sentence Completion Challenge.",
        "They performed substantially better than n-gram language models, achieving the best result reported for any single method except for the more expensive and complex to train neural language models."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": []
    }
  ]
}
