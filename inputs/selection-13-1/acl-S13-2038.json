{
  "info": {
    "authors": [
      "Hans-Peter Zorn",
      "Iryna Gurevych"
    ],
    "book": "*SEM",
    "id": "acl-S13-2038",
    "title": "UKP-WSI: UKP Lab Semeval-2013 Task 11 System Description",
    "url": "https://aclweb.org/anthology/S13-2038",
    "year": 2013
  },
  "references": [
    "acl-D10-1073",
    "acl-E03-1020",
    "acl-E06-1018",
    "acl-E09-1013",
    "acl-J13-3008",
    "acl-J90-1003",
    "acl-J93-1003",
    "acl-J98-1004",
    "acl-N06-2015",
    "acl-P11-1148",
    "acl-P98-2127",
    "acl-S10-1081",
    "acl-S12-1059",
    "acl-S13-2035",
    "acl-W11-1104"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In this paper, we describe the UKP Lab system participating in the Semeval-2013 task ?Word Sense Induction and Disambiguation within an End-User Application?.",
        "Our approach uses preprocessing, co-occurrence extraction, graph clustering, and a state-of-the-art word sense disambiguation system.",
        "We developed a configurable pipeline which can be used to integrate and evaluate other components for the various steps of the complex task."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The task ?Evaluating Word Sense Induction and Word Sense Disambiguation in an End-User Application?",
        "of SemEval-2013 (Navigli and Vannella, 2013) aims at an extrinsic evaluation scheme for WSI to overcome the difficulties inherent to WSI evaluation.",
        "The task requires building a WSI system and combining it with a WSD step to assign the induced sentences to example instances.",
        "Word sense disambiguation (WSD) is the task of determining the correct meaning for an ambiguous word from its context.",
        "WSD algorithms usually choose one sense out of a given set of possible senses for each word.",
        "A resource that enumerates possible senses for each word is called a sense inventory.",
        "Manually created inventories come usually in form of lexical semantic resources, such as Word-Net or more specifically created inventories such as OntoNotes (Hovy et al., 2006).",
        "Word sense induction (WSI) on the other hand aims to create such an inventory from a corpus in an unsupervised manner.",
        "For each word that should be disambiguated, a WSI algorithm creates a set of context clusters that will be used to define and describe the senses.",
        "We build our system upon the open-source DKPro framework 1 and a corresponding WSD component (upcoming).",
        "Input for the task comes as two files.",
        "One contains the search queries, also referred as topics.",
        "Sense induction will be performed for each of those topics.",
        "The second file contains 6400 entries from the result pages of a search engine.",
        "Each entry consists of the title, a snippet and the URL of the corresponding web page."
      ]
    },
    {
      "heading": "2 Related Work",
      "text": [
        "One of the early approaches to WSI (Schu?tze, 1998) maps words into a vector space and represents word contexts as vector-sums and use cosine vector similarity, clustering is performed by expectation maximization (EM) clustering.",
        "Dorow and Wid-dows (2003) use the BNC to build a co-occurrence graph for nouns, based on a co-occurrence frequency threshold.",
        "They perform Markov clustering on this graph.",
        "Pantel and Lin (2002) proposes a clustering approach called clustering by committee (CBC).",
        "This algorithm first selects the words with the highest similarity based on mutual information and then builds groups of highly connected words called committees.",
        "It then iteratively assigns the remaining words to one of the committee clusters by comparing them to the averaged the com",
        "mittee feature vectors.",
        "This exploits the assumption that two or more words together disambiguate each other, Bordag (2006) extends on this idea by using word triples to form non-ambiguous seed-clusters.",
        "Many approaches use a variety of graph clustering algorithms for WSI: Others (Klapaftis and Manand-har, 2010) use hierarchical agglomerative clustering on hierarchical random graphs created from word co-occurrences.",
        "Di Marco and Navigli (2013) use word sense induction for web search result clustering.",
        "They introduce a maximum spanning tree algorithm that operates on co-occurrence graphs built from large corpora, such as ukWaC (Baroni et al., 2009).",
        "The system by Pedersen (2010) employs clustering first-and second-order co-occurrences as well as singular value decomposition on the co-occurrence matrix, which is clustered using repeated bisections.",
        "Jurgens (2011) employ a graph-based community detection algorithm on a co-occurrence graph.",
        "Distributional approaches for WSI include LSA Apidianaki and Van de Cruys (2011) or LDA (Brody and Lapata, 2009)."
      ]
    },
    {
      "heading": "3 Our Approach",
      "text": [
        "Our system consists of two independent parts.",
        "The first is a batch process that creates database containing co-occurrence statistics derived from a background corpus.",
        "The second is the actual WSI and WSD pipeline doing the result clustering.",
        "Both parts include identical preprocessing steps for segmentation and lemmatization.",
        "The pipeline (Figure 1) first performs Word Sense Induction, resulting in an induced sense inventory.",
        "A WSD algorithm then uses this inventory to disambiguate all instances of the search query within a web-page.",
        "A majority voting finally assigns a sense to each result-snippet.",
        "The sense induction algorithm is based on graph clustering on a co-occurrence graph, similar to the approach by Di Marco and Navigli (2013).",
        "Our approach differs from previous work in the way we perform a greedy search for additional context and how it combines WSI with an advanced WSD step using lexical expansions.",
        "Moreover, we consider our generic UIMA-based WSD and WSI system as a useful basis for experimentation and evaluation of WSI systems."
      ]
    },
    {
      "heading": "3.1 Preprocessing",
      "text": [
        "The pipeline first reads topics and snippets.",
        "If the web-page can be downloaded at the URL that corresponds to the result, it is cleaned by an HTML parser and the plain text is appended to the snippet.",
        "As further steps we segment and lemmatize the input.",
        "We apply the same preprocessing to snippets, queries and the corpora."
      ]
    },
    {
      "heading": "3.2 Co-occurrence Extraction",
      "text": [
        "We calculate the log-likelihood ratio (LLR) (Dunning, 1993) and point-wise mutual information (PMI) (Church and Hanks, 1990) of a word pair co-occurring at sentence level using a modified version of the collocation statistics implemented in Apache Mahout 2.",
        "Even when sorting the co-occurrences by PMI, we employ a minimum support cut-off based on the LLR, which is based on significance.",
        "All pairs with a log-likelihood ratio < 1 are discarded.",
        "This value is lower than the significance level of 3?.8 we found in the literature, but because in the expand step (see algorithm 2) we require more than two words to co-occur with the target word, we used a lower value.",
        "We use the English Wikipedia 3 and ukWaC (Baroni et al., 2009) as background corpus.",
        "Table 1 gives an overview about the obtained co-occurrence pairs."
      ]
    },
    {
      "heading": "3.3 Clustering Algorithm",
      "text": [
        "The algorithm is a two-step approach that first creates an initial clustering of a graph G = (V,E) and then improves this clustering in a second step.",
        "The initial step (Algorithm 1) starts by retrieving the top n = 150 most similar terms for the target word by querying the co-occurrence database we created in section 3.2.",
        "These represent vertices in a graph.",
        "We then construct 4 a minimum spanning tree (mst)",
        "by inserting edges {vi, vj} from the co-occurrence database.",
        "The weight w({vi, vj}) of each edge is set to the inverse of the used similarity measure dist (LLR or PMI) between those terms.",
        "The minimum spanning tree then is cut into subtrees be iteratively removing the edge with the highest edge-betweenness (Freeman, 1977) (betweeness) until the size of the largest component of G falls below a threshold Sinitial.",
        "Algorithm 1 initialClusters V (G0)?",
        "top n most similar words to target word w(vi, vj)?",
        "dist(termi, termj)",
        "The resulting partitioning of the graph is the starting point for the second phase of the algorithm, which we call expand/join step (Algorithm 2).",
        "During this step, the algorithm looks iteratively at all clusters Csmall of size s smaller than Smax = 9 (determined empirically), starting with the largest ones.",
        "From each of these clusters, it constructs a query to the co-occurrence database, retrieving all terms that significantly co-occur together with all terms in the respective cluster (querys) and with the target word (E).",
        "This list of terms is then compared to all clusters Clarge with |C |> s .",
        "If the normalized intersection between one of those Clarge is above a threshold t = 0.3 (determined empirically), we assume that the Csmall represents the same sense as the Clarge and merge those clusters.",
        "If this is not the case for any of the larger clusters, we assume that Csmall represents a sense of its own extend the cluster by adding edges between vertices representing the expansion terms and Csmall.",
        "end if end for end for end for"
      ]
    },
    {
      "heading": "3.4 Word Sense Disambiguation",
      "text": [
        "We use the DKPro WSD framework, which implements various WSD algorithms, with the same system configuration as reported by Miller et al. (2012).",
        "It uses a variant of the Simplified Lesk Algorithm (Kilgarriff et al., 2000).",
        "This algorithm measures the overlap between a words context and the textual descriptions of senses within a machine readable dictionary, such as WordNet.",
        "The senses that have been induced in the previous step are provided to the framework as a sense inventory.",
        "Instead of using sense descriptions, we now compute the overlap between the sense clusters and the context of the target word.",
        "The WSD system expands both the word context and the sense clusters with synonyms from a distributional thesaurus (DT), similar to Lin (1998).",
        "The DT has been created from 10M dependency-parsed sentences of English newswire",
        "from the Leipzig Corpora Collection (Biemann et al., 2007) for word similarity5.",
        "Besides knowledge-based WSD, the DT also has been successfully used for improving the performance of semantic text similarity (Ba?r et al., 2012).",
        "The WSD component disambiguates each instance of the search query within the snippet and web page individually."
      ]
    },
    {
      "heading": "4 Results",
      "text": [
        "The clustering was evaluated using four different metrics as described by Di Marco and Navigli (2013).",
        "The Rand index and its chance-adjusted variant ARI are common cluster evaluation metrics.",
        "The adjusted rand index gives special weight to less frequent senses.",
        "The Jaccard index (JI) disregards the cases where two results are assigned to different clusters in the gold standard, therefore it is less sensitive to the granularity of the clustering.",
        "The F1-Measure gives more attention to the individual clusters and how they cover the topics in the gold standard.",
        "We submitted several runs for different configurations of the co-occurrence extraction (Table 2).",
        "Between runs, we did not modify the configuration of the sense induction or disambiguation step.",
        "The first run used collocations extracted from ukWaC scored by LLR metric (wacky-llr), and two others used Wikipedia as background corpus.",
        "One of the WP-based runs used PMI as association metric (wp-pmi), the other one used LLR (wp-llr).",
        "The run on the larger ukWaC corpus scored best with regard to the Jaccard measure, but worst in the adjusted Rand index measure.",
        "We attribute low scores for ARI to the fact that our system did not induce certain less frequent senses, resulting in small average number of clusters.",
        "The coarse grained clusters however, have been assigned quite well by our WSD system, as shown by relatively high Jaccard Index.",
        "For the",
        "WP-based runs, the clustering based on PMI produced more clusters and therefore scored higher on the F1 measure than the LLR-based run.",
        "From an exploratory analysis of the created clusters, we assume that the WP-based runs have a higher chance to find more rare senses in this specific task, since the gold standard was also based on Wikipedia disambiguation pages."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "We presented our word sense induction and disambiguation pipeline for search result clustering.",
        "Our contribution is a sense induction algorithm that incrementally retrieves more context from a co-occurrence database and the integration of WSI and WSD into a UIMA-based pipeline for easy experimentation.",
        "The system scored best with regard to Jaccard similarity of clusters, while performing low especially with the adjusted rand index.",
        "We assume that our sense granularity was too low for this task and failed to create clusters for rare senses.",
        "This could be improved by making the merge phase of the induction algorithm less eager.",
        "Furthermore, increasing the size of the background corpus, e.g. by combining the both corpora that have been used could increase the size of the context clusters especially for rare senses, which should further improve the performance in these cases.",
        "We attribute the good results with regard to the F1 and Jaccard measures also to our state-of-the-art word sense disambiguation step and the use of the distributional thesaurus."
      ]
    },
    {
      "heading": "6 Acknowledgements",
      "text": [
        "We thank Tristan Miller for helping us with the DKPro WSD framework and Chris Biemann for providing the distributional thesaurus.",
        "This work has been supported by the Volkswagen Foundation as part of the Lichtenberg-Professorship Program under grant No.",
        "I/82806."
      ]
    }
  ]
}
