{
  "info": {
    "authors": [
      "Thomas Proisl",
      "Paul Greiner",
      "Stefan Evert",
      "Besim Kabashi"
    ],
    "book": "*SEM",
    "id": "acl-S13-2065",
    "title": "KLUE: Simple and robust methods for polarity classification",
    "url": "https://aclweb.org/anthology/S13-2065",
    "year": 2013
  },
  "references": [
    "acl-P11-2008"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper describes our approach to the SemEval-2013 task on ?Sentiment Analysis in Twitter?.",
        "We use simple bag-of-words models, a freely available sentiment dictionary automatically extended with distributionally similar terms, as well as lists of emoticons and internet slang abbreviations in conjunction with fast and robust machine learning algorithms.",
        "The resulting system is resource-lean, making it relatively independent of a specific language.",
        "Despite its simplicity, the system achieves competitive accuracies of 0.70?0.72 in detecting the sentiment of text messages.",
        "We also apply our approach to the task of detecting the context-dependent sentiment of individual words and phrases within a message."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The SemEval-2013 task on ?Sentiment Analysis in Twitter?",
        "(Wilson et al., 2013) focuses on polarity classification, i. e. the problem of determining whether a textual unit, e. g. a document, paragraph, sentence or phrase, expresses a positive, negative or neutral sentiment (for a review of research topics and recent developments in the field of sentiment analysis see Liu (2012)).",
        "There are two subtasks: in task B, ?Message Polarity Classification?, whole messages have to be classified as being of positive, negative or neutral sentiment; in task A, ?Contextual Polarity Disambiguation?, a marked instance of a word or phrase has to be classified in the context of a whole message.",
        "The training data for task B consist of approximately 10 200 manually annotated Twitter messages, the training data for task A of approximately 9 500 marked instances in approximately 6 300 Twitter messages.",
        "The test data consist of in-domain Twitter messages (3 813 messages for task B and 4 435 marked instances in 2 826 messages for task A) and out-of-domain SMS text messages (2 094 messages for task B, 2 334 marked instances in 1 437 messages for task A).",
        "The distribution of messages and marked instances over sentiment categories in the training and test sets is shown in Tab.",
        "1. pos neg neu total",
        "The main focus of the current paper lies on experimenting with resource-lean and robust methods for task B, the classification of whole messages.",
        "We do, however, apply our approach also to task A.",
        "2 Features used for polarity classification Our general approach is quite simple: we extract feature vectors from the training data (based on the 1These figures indicate the amount of training data we were actually able to use.",
        "Due to Twitter's licensing conditions, the training data could only be made available as a collection of IDs.",
        "Even when using the official Twitter API for collecting the actual messages rather than the screen-scraping approach suggested by the task organizers, ca.",
        "10% of the data were not (or no longer) available.",
        "original messages and a small number of additional resources) and feed them into fast and robust supervised machine learning algorithms implemented in the Python machine learning library scikit-learn (Pe-dregosa et al., 2011).",
        "For task B, the features are computed on the basis of the whole message; for task A, we use essentially the same features, but compute them once for the marked word or phrase and once for the rest of the message.",
        "All the features we use are described in some more detail in the following subsections."
      ]
    },
    {
      "heading": "2.1 Bag of words",
      "text": [
        "We experimented with three different sets of bag-of-words features: unigrams, unigrams and bigrams, and an extended unigram model that includes a simple treatment of negation.",
        "For all three models we simply use the word frequencies as feature weights.",
        "Our preprocessing pipeline starts with a simple preliminary tokenization step (lowercasing the whole message and splitting it on whitespace).",
        "In the resulting list of tokens, all user IDs and web URLs are replaced with placeholders.2 Any remaining punctuation is stripped from the tokens and empty tokens are deleted.",
        "In the extended unigram model, up to three tokens following a negation marker are then prefixed with not_ (fewer tokens if another negation marker or the end of the message is reached).",
        "Finally all words are stemmed using the Snowball stemmer.3 For a token unigram or bigram to be included in the bag of words models, it has to occur in at least five messages.",
        "As an additional feature we include the total number of tokens per message."
      ]
    },
    {
      "heading": "2.2 Features based on a sentiment dictionary",
      "text": [
        "Widely-used algorithms such as SentiStrength (Thel-wall et al., 2010) rely heavily on dictionaries containing sentiment ratings of words and/or phrases.",
        "We use features based on an extended version of AFINN111 (Nielsen, 2011).4 The AFINN sentiment dictionary contains sentiment ratings ranging from ?5 (very negative) to 5",
        "(very positive) for 2 476 word forms.",
        "In order to obtain a better coverage, we extended the dictionary with distributionally similar words.",
        "For this purpose, large-vocabulary distributional semantic models (DSM) were constructed from a version of the English Wikipedia5 and the Google Web 1T 5-Grams database (Brants and Franz, 2006).",
        "The Wikipedia DSM consists of 122 281 case-folded word forms as target terms and 30 484 mid-frequency content words (lemmatised) as feature terms; the Web1T5 DSM of 241 583 case-folded word forms as target terms and 100 063 case-folded word forms as feature terms.",
        "Both DSMs use a context window of two words to the left and right, and were reduced to 300 latent dimensions using randomized singular value decomposition (Halko et al., 2009).",
        "For each AFINN entry, the 30 nearest neighbours according to each DSM were considered as extension candidates.",
        "Sentiment ratings for the new candidates were computed by averaging over the 30 nearest neighbours of the respective candidate term (with scores set to 0 for all neighbours not listed in AFINN), and rescaling to the range [?5,5].6 After some initial experiments, only candidates with a computed rating ?",
        "?2.5 or ?",
        "2.5 were retained, resulting in an extended dictionary of 2 820 word forms.",
        "As with the bag of words model, we make use of a simple heuristic treatment of negation: following a negation marker, the polarity of the next sentiment-carrying token up to a distance of at most four tokens is multiplied by ?1.",
        "The sentiment dictionary is used to extract four features: I) the number of tokens that express a positive sentiment, II) the number of tokens that express a negative sentiment, III) the total number of tokens that express a sentiment according to our sentiment dictionary and IV) the arithmetic mean of all the sentiment scores from the sentiment dictionary in the message."
      ]
    },
    {
      "heading": "2.3 Features based on emoticons and internet",
      "text": [
        "slang abbreviations In addition to the sentiment dictionary we use a list of 212 emoticons and 95 internet slang abbreviations from Wikipedia.",
        "We manually classified these 307 emotion markers as negative (?1), neutral (0) or positive (1).",
        "The extracted features based on this list are similar to the ones based on the sentiment dictionary.",
        "We use I) the number of positive emotion markers, II) the number of negative emotion markers, III) the total number of emotion markers and IV) the arithmetic mean of all the emotion markers in the message."
      ]
    },
    {
      "heading": "3 Experiments",
      "text": [
        "In this section we evaluate different classifiers (multinomial Naive Bayes,7 Linear SVM8 and Maximum Entropy9) and various combinations of features on the gold test sets.",
        "We vary the bag-of-words model (bow), the use of AFINN (sent), our extensions to the sentiment dictionary (ext) and the list of emotion markers (emo).",
        "To present as clear a picture of the classifiers?",
        "performances as possible, we report F-scores for each of the three classes, the weighted average of all three F-scores (Fw), the (unweighted) average of the positive and negative F-scores (Fpos+neg; this is the value shown in the official task results and used for ranking systems), as well as accuracy.",
        "Results for submitted systems are typeset in italics, the best results in each column are typeset in bold font."
      ]
    },
    {
      "heading": "3.1 Task B: Message Polarity Classification",
      "text": [
        "Experiments with just a simple unigram bag-of-words model show that for both the Twitter (Tab.",
        "3) and the SMS data (Tab.",
        "4) the Maximum Entropy classifier outperforms multinomial Naive Bayes and Linear SVM by a considerable margin.",
        "For comparison, we also include some weak baselines (Tab.",
        "2).",
        "The random baselines classify messages randomly,10",
        "10randomuniform assumes a uniform probability distribution (all categories have equal probabilities), randomweighted has learned the probability distribution from the training data, the majority baselines simply assign all messages to the most frequent category in the training data.11 As one would expect, all three learning algorithms are vastly superior to those baselines.",
        "Using both unigrams and bigrams in the bag-of-words model improves classifier peformance; so does the extended unigram model with negations.",
        "For the Twitter data, adding the sentiment dictionary, the dictionary extensions and the list of emotion markers further improves classifier performance, with the best results being achieved by a combination of all these features with a uni-and bigram bag-of-words model.",
        "The best combination of features would have been the fourth best system out of 35 constrained systems (sixth best out of all 51 systems), one rank higher than our task submission.12 For the SMS data, adding the sentiment dictionary and the dictionary extensions seems to improve the official score Fpos+neg, but slightly decreases weighted average F-score and accuracy.",
        "This might be due to the greater orthographical variation in SMS texts.",
        "Emotion markers seem to be a much better sentiment indicator in the SMS data.",
        "But while just combining the list of emotion markers with the extended unigram bag-of-words model leads to the best weighted average F-score and accuracy, Fpos+neg is best when a combination of all features is used.",
        "This is also the system we submitted, being the third best system (out of 44) for that task."
      ]
    },
    {
      "heading": "3.2 Task A: Contextual Polarity Disambiguation",
      "text": [
        "The results for task A are similar to those for task B in that Maximum Entropy is the best classifier for the unigram bag-of-words model for both the Twitter (Tab.",
        "5) and the SMS data (Tab.",
        "6).",
        "Adding negation treatment to the bag-of-words model increases classifier performance, as do the inclusion of AFINN and the use of emotion markers.",
        "Interestingly, extending the sentiment dictionary based on distributional similarity leads to slightly worse results.",
        "Therefore, randomweighted,binary uses the same probability distribution but",
        "we could have improved upon our task submission by excluding the sentiment dictionary extensions ?",
        "however, the gains are very small and the system's ranks would still be the same (17/28 for the Twitter data, 16/26 for the SMS data)."
      ]
    },
    {
      "heading": "4 Discussion",
      "text": []
    },
    {
      "heading": "4.1 Error analysis",
      "text": [
        "4.1.1 Task B: Message Polarity Classification The most prominent problem, according to the confusion matrix in Tab.",
        "7, is that a lot of negative messages are classified as neutral; the same problem exists to a lesser extent for positive messages.",
        "A qualitative analysis of misclassified messages for which the MaxEnt classifier indicated high confidence suggests that the human annotators did not clearly distinguish between sentiment expressed by the authors of messages and their own response to message content.",
        "For example, the messages shown predicted pos neg neu",
        "in (1) and (2) report a negative and positive event, respectively, in a neutral way and should therefore be annotated with neutral sentiment.",
        "However, in the test data they are labelled as negative and positive by the human annotators.",
        "(1) MT @LccSy #Syria, Deir Ezzor |Marba?eh: Aerial shelling dropped explosive barrels on residential buildings in the town.",
        "Tue, 23 October.",
        "(2) European Exchanges open with a slight rise: (AGI) Rome, October 24 - European Exchanges opened with a slight ris...",
        "This problem is probably a major factor in the misclassification of many negative and positive messages as neutral.",
        "In order to better reproduce the human annotations, the system would additionally have to decide whether a reported event is of a negative, positive or neutral nature per se ?",
        "a quite different task that would require external training data and world knowledge.",
        "An analysis of misclassified positive messages further suggests that certain punctuation marks, especially multiple exclamation marks, might be useful as additional features.",
        "Disambiguation The confusion matrix in Tab.",
        "8 shows that messages marked as negative in the test data often misclassified as positive and vice versa, while neutral instances are overwhelmingly classified as positive or negative.",
        "This suggests that for the classifiers we use, there might be too few neutral instances in the training data (cf. Tab.",
        "1).",
        "predicted pos neg neu"
      ]
    },
    {
      "heading": "4.2 Conclusion and future work",
      "text": [
        "We use a resource-lean approach, relying only on three external resources: a stemmer, a relatively small sentiment dictionary and an even smaller list of emotion markers.",
        "Stemmers are already available for many languages and both kinds of lexical resources can be gathered relatively easily for other languages.",
        "The list of emotion markers should apply to most languages.",
        "This makes our whole system relatively language-independent, provided that a similar amount of manually labelled training data is available.13 In fact, the learning curve for our system (Fig.",
        "1) suggests that even as few as 3 000?3 500 labelled messages might be sufficient.",
        "The similar",
        "Polarity Classification?",
        "task, evaluated on the Twitter data evaluation results for the Twitter and the SMS data show that not relying on Twitter-specific features like hashtags pays off: by making our system as generic as possible, it is robust, not overfitted to the training data, and generalizes well to other types of data.",
        "The methods discussed in the current paper are particularly well suited to the ?Message Polarity Classification?",
        "task, our system ranking amongst the best.",
        "It turns out, however, that simply applying the same approach to the ?Contextual Polarity Disambiguation?",
        "task yields only mediocre results.",
        "In the future, we would like to experiment with a couple of additional features.",
        "Determining the nearest neighbors of a message based on Latent Semantic Analysis might be a useful addition, as might be the use of part-of-speech tags created by an in-domain POS tagger (Gimpel et al., 2011)14.",
        "We would also like to find out whether a heuristic treatment of intensifiers and detensifiers, the normalization of character repetitions, or the inclusion of some punctuation-based features could further improve classifier performance.",
        "13For task B, even the extended unigram bag-of-words model by itself, without any additional resources, would have performed quite well as the 9th best constrained system on the Twitter test set (13th best system overall) and the 5th best system"
      ]
    }
  ]
}
