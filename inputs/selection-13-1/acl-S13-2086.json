{
  "info": {
    "authors": [
      "Qi Han",
      "Junfei Guo",
      "Hinrich Schuetze"
    ],
    "book": "*SEM",
    "id": "acl-S13-2086",
    "title": "CodeX: Combining an SVM Classifier and Character N-gram Language Models for Sentiment Analysis on Twitter Text",
    "url": "https://aclweb.org/anthology/S13-2086",
    "year": 2013
  },
  "references": [
    "acl-C10-2005",
    "acl-C10-2028",
    "acl-P11-1016",
    "acl-W02-1011"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper briefly reports our system for the SemEval-2013 Task 2: sentiment analysis in Twitter.",
        "We first used an SVM classifier with a wide range of features, including bag of word features (unigram, bigram), POS features, stylistic features, readability scores and other statistics of the tweet being analyzed, domain names, abbreviations, emoticons in the Twitter text.",
        "Then we investigated the effectiveness of these features.",
        "We also used character n-gram language models to address the problem of high lexical variation in Twitter text and combined the two approaches to obtain the final results.",
        "Our system is robust and achieves good performance on the Twitter test data as well as the SMS test data."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The challenge of the SemEval-2013 Task 2 (Task B) is the ?Message Polarity Classification?",
        "(Wilson et al., 2013).",
        "Specifically, the task was to classify whether a given message has positive, negative or neutral sentiment; for messages conveying both positive and negative sentiment, whichever is stronger should be chosen.",
        "In recent years, text messaging and microblog-ging such as tweeting has gained its popularity.",
        "Since these short messages are often used not only to discuss facts but also to share opinions and sentiments, sentiment analysis on this type of data has lately become interesting.",
        "However, some features of this type of data make natural language processing challenging.",
        "For example, the messages are usually short and the language used can be very informal, with misspellings, creative spellings, slang, URLs and special abbreviations.",
        "Some research has already been done attempting to address these problems, to enable sentiment analysis on this type of data, in particular on Twitter data, and even to use the outcome of sentiment analysis to make predictions (Jansen et al., 2009; Barbosa and Feng, 2010; Bifet and Frank, 2010; Davidov et al., 2010; Jiang et al., 2011; Pak and Paroubek, 2010; Saif et al., 2012; Tumasjan et al., 2010).",
        "As the research mentioned above, our system used a machine learning based approach for sentiment analysis.",
        "Our system combines results from an SVM classifier using a wide range of features as well as votes derived from character n-gram language models to do the final prediction.",
        "The rest of this paper is organized as follows.",
        "Section 2 describes the features used for the SVM classifier.",
        "Section 3 describes how the votes from character n-gram language models were derived.",
        "Section 4 describes the details of our method.",
        "And finally section 5 presents the results."
      ]
    },
    {
      "heading": "2 Features",
      "text": [
        "We preprocessed the tweets as follows: i) tokenized the tweets using a tokenizer suitable for Twitter data, which, for example, recognize emoticons and hashtags; ii) replaced all URLs with the token twitterurl; iii) replaced all Twitter usernames with the token @twitterusername; iv) converted all tokens into lower case; v) replaced all sequences of repeated characters by three characters, for example, convert gooooood to goood, this way we recognize",
        "the emphasized usage of the word; vi) expanded abbreviations with a dictionary,1 which we will refer to as noslang dictionary; vii) appended neg to all words from one position before a negation word to the next punctuation mark.",
        "We represented each given tweet using 6 feature families: ?",
        "Lexical features (UG, BG): Number of times each unigram appears in the tweet (UG); number of times each bigram appears in the tweet (BG).",
        "?",
        "POS features (POS U, POS B): Number of times each POS appears in the tweet divided by number of tokens of that tweet (POS U); number of times each POS bigram appears in the tweet (POS B).",
        "To tag the tweet we used the ark-twitter-nlp tagger.2 ?",
        "Statistical features (STAT): Various readability scores (ARI, Flesch Reading Ease, RIX, LIX, Coleman Liau Index, SMOG Index, Gunning Fog Index, Flesch-Kincaid Grade Level) of the tweet; some simple statistics of the tweet (average count of words per sentence, complex word count, syllable count, sentence count, word count, char count).",
        "We calculated the statistics and scores after preprocessing step vi).",
        "We then normalized these scores so that they had mean 0 and standard deviation 1. ?",
        "Stylistic features (STY): Number of times an emoticon appears in the tweet, number of words which are written in all capital letters, number of words containing characters repeated consecutively more than three times, number of words containing characters repeated consecutively more than four times.",
        "We calculated these features after preprocessing step i).",
        "We used the binarized and the logarithmically scaled version of these features.",
        "?",
        "Abbreviation features (ABB): For every term in the noslang dictionary, we checked whether it was present in the tweet or not and used this as a feature.",
        "?",
        "URL features (URL): We expanded the URLs in the Twitter text and collected all the domain names which the URLs in the training set point to, and used them as binary features.",
        "Feature sets UG, BG, POS U, POS B are common features for sentiment analysis (Pang et al., 2002).",
        "Remus (2011) showed that incorporating readability measures as features can improve sentence-level subjectivity classification.",
        "Stylistic features have also been used in sentiment analysis on Twitter data (Go et al., 2010).",
        "Some abbreviations express sentiment which is not apparent from word level.",
        "For example lolwtime, which means laughing out loud with tears in my eyes, expresses positive sentiment overall, but this does not follow directly at the sentiment of individual words, so the feature set ABB might be helpful.",
        "Finally, we conjecture that a tweet including an URL pointing to youtube.com is more likely to be subjective than a tweet including an URL pointing to a news website."
      ]
    },
    {
      "heading": "3 Integrating votes from language models",
      "text": [
        "based on character n-grams Language Models can be used for text classification tasks.",
        "Since the goal of the SemEval-2013 Task 2 (Task B) is to classify each tweet into one of the three classes: positive, negative or neutral, a language model approach can be used.",
        "Emoticon-smoothed language models have been used to do Twitter sentiment analysis (Liu et al., 2012).",
        "The language models used there were based on words.",
        "However, there is evidence (Aisopos et al., 2012; Raaijmakers and Kraaij, 2008) showing that super-word character n-gram features can be quite effective for sentiment analysis on short informal data.",
        "This is because noise and misspellings tend to have smaller impact on substring patterns than on word patterns.",
        "Our system used language models based on character n-grams to improve the performance of sentiment analysis on tweets.",
        "For every tweet we constructed 3 sequences of character-trigrams and 4 sequences of character-four-grams.",
        "For instance, the tweet \"Hello World!\" would have 7 corresponding substring representations: <s><s>H ell o W orl d!</s>, <s>He llo World !</s></s>,",
        "where <s> means start of a sentence, </s> means end of a sentence, means whitespace.",
        "Using the corresponding sequences of character-trigrams from all positive tweets in training set we trained a language model LM+3 .",
        "To train the language model we used Chen and Goodman's modified Kneser-Ney discounting for N-grams from the SRILM toolkit (Stolcke, 2002).",
        "Given a new sequence of character-trigrams derived from a positive tweet, it should give a lower perplexity value than a language model trained on sequences of character-trigrams from negative tweets.",
        "In this way we obtained 6 language models: LM?3 from character-trigram sequences of negative tweets, LMN3 from character-trigram sequences of neutral tweets, LM+3 from character-trigram sequences of positive tweets, LM?4 from character-four-grams sequences of negative tweets, LMN4 from character-four-gram sequences of neutral tweets, LM+4 from character-four-gram sequences of positive tweets.",
        "For every new tweet, we first obtain the 7 corresponding substring representations.",
        "Then for each substring representation, we calculate 3 votes from the language models.",
        "For instance, for a sequence of character-trigrams, we first calculate three per",
        "to the following discretization function:",
        "where n ?",
        "{3, 4} is the length of the character n-gram, x, y ?",
        "{?,+, N} are class labels and P xn , P",
        "are the corresponding perplexity values.",
        "In this way we obtain 21 votes for every tweet.",
        "However, in the final classification, every sentence got 42 votes, of which 21 were derived from bigram language models of the substrings and 21 were from trigram language models of these substrings.",
        "ent feature sets.",
        "we started with all 8 feature sets and removed feature sets one by one, where we always first removed the feature set that resulted in the biggest drop in accuracy."
      ]
    },
    {
      "heading": "4 Methods",
      "text": [
        "In this section we describe the methods used by our system.",
        "Firstly, we did feature selection on all the features described in Section 2.",
        "Using Mutual Information (Shannon and Weaver, 1949) and 10-fold cross validation we chose the top 13,500 features.",
        "Using these features we trained an SVM classifier with the training data.",
        "As the implementation of the SVM classifier we used liblinear (Fan et al., 2008).",
        "The SVM classifier was then used to produce initial predictions for messages in the development set, the Twitter test set and the SMS test set.",
        "Then, we represented every message in the development set, the Twitter test set and the SMS test set using the 42 votes we described in Section 3 together with the predictions of the SVM classifier we described above.",
        "Using the Bagging algorithm from the WEKA machine learning toolkit (Hall et al., 2009) and the development set data, we trained a new classifier and used this classifier for the final prediction on Twitter test data and SMS test data."
      ]
    },
    {
      "heading": "5 Results",
      "text": []
    },
    {
      "heading": "5.1 Feature analysis",
      "text": [
        "To study the effectiveness of different features, we started with all 8 feature sets and removed feature sets one by one, where we always first removed the feature set that resulted in the biggest drop in accuracy.",
        "We did 10 fold cross validation on training set",
        "tive and negative classes on Twitter test data.",
        "and used average accuracy as a metric.",
        "As we can see from Table 1, lexical features were the most important features ?",
        "they counted for more than 0.11 loss of accuracy when removed from the features.",
        "POS features and statistical features were also important, POS bigrams more so than POS uni-grams.",
        "Stylistic, abbreviation and URL features, on the contrary, seem to be only of moderate usefulness.",
        "To further investigate the relationship between the feature sets POS U, POS B and STAT, we did additional experiments.",
        "From Table 2, we can see that removing all three feature sets caused a decrease in accuracy to 0.47, including just one feature set POS B, POS U or STAT resulted in accuracy above 0.57, 0.55 and 0.52 respectively.",
        "This shows that all three feature sets were quite effective and POS B was most useful.",
        "However, adding all of the three feature sets only caused an increase in accuracy to 0.579, which suggests that they were highly correlated."
      ]
    },
    {
      "heading": "5.2 Effectiveness of language model features",
      "text": [
        "To evaluate the effectiveness of features derived from language models of character n-grams, we compared the performance of our SVM classifier and that of the classifier combining the SVM classifier results and language model features.3 We performed our experiments on both of the Twitter test data and the SMS test data.",
        "The results in Table 3 and Table 4 suggested that in our current setup, language model features were not very helpful.",
        "Table 3 and Table 4 also show that our system improved the performance greatly compared to Majority baseline system,4.",
        "Compared with other participants in the SemEval-2013 Task 2, our system achieved average performance on Twitter test data.",
        "However, it has been the ninth best out of all 48 systems for the performance on SMS test data.",
        "This shows that our system can be easily adapted to different contexts without a big drop in performance.",
        "One reason for that might be that we did not use any sentiment lexicon developed specifically for Twitter data and we used high level features like the statistical features and POS features for our classification."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "This paper briefly reports our system designed for the SemEval-2013 Task 2: sentiment analysis in Twitter.",
        "We first used an SVM classifier with a wide range of features.",
        "We found that simple statistics of the tweets, for example word count or readability scores, can help in sentiment analysis on Twitter text.",
        "We then used character n-gram language models to address the problem of high lexical variation in Twitter text and combined the two approaches to obtain the final results.",
        "Although in our current setup, features derived from character n-gram language models do not perform very well, they may benefit from a larger training data set."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "This work was funded by DFG projects SFB 732.",
        "We would like to thank our colleagues at IMS."
      ]
    }
  ]
}
