{
  "info": {
    "authors": [
      "Marina Litvak",
      "Natalia Vanetik"
    ],
    "book": "MultiLing",
    "id": "acl-W13-3106",
    "title": "Multilingual Multi-Document Summarization with POLY2",
    "url": "https://aclweb.org/anthology/W13-3106",
    "year": 2013
  },
  "references": [
    "acl-C10-2105",
    "acl-E09-1089",
    "acl-P10-1058",
    "acl-W04-1013",
    "acl-W09-1802"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In this paper we present a linear model for the problem of text summarization, where a summary preserves the information coverage as much as possible in comparison to the original document set.",
        "We reduce the problem of finding the best summary to the problem of finding the point on a convex polytope closest to the given hyperplane, and solve it efficiently with the help of fractional linear programming.",
        "We supply here an overview of our system, titled POLY2, that participated in the MultiLing contest at ACL 2013."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Automated text summarization is an active field of research in various communities like Information Retrieval (IR), Natural Language Processing (NLP), and Text Mining (TM).",
        "Some authors reduce summarization to the maximum coverage problem (Takamura and Oku-mura, 2009; Gillick and Favre, 2009) that, despite a great performance, is known as NP-hard (Khuller et al., 1999).",
        "Linear Programming helps to find an accurate approximated solution to this problem and became very popular in summarization field in the last years (Gillick and Favre, 2009; Woodsend and Lapata, 2010; Hi-toshi Nishikawa and Kikui, 2010; Makino et al., 2011).",
        "However, most mentioned works use exponential number of constraints.",
        "Trying to solve a trade-off between summary quality and time complexity, we propose a novel summarization model solving the approximated maximum coverage problem by linear programming in polynomial time.",
        "We measure information coverage by terms1 and strive to obtain a summary that preserves the optimal value of the cho1normalized meaningful words sen objective function as much as possible in comparison to the original document.",
        "Various objective functions combining different parameters like term's position and its frequency are introduced and evaluated.",
        "Our method ranks and extracts significant sentences into a summary and it can be generalized for both single-document and multi-document summarization.",
        "Also, it can be easily adapted to cross-lingual/multilingual summarization.",
        "Formally speaking, in this paper we introduce (1) a novel text representation model expanding a classic Vector Space Model (Salton et al., 1975) to Hyperplane and Half-spaces, (2) reformulated extractive summarization problem as an optimization task and (3) its solution using linear programming.",
        "The main challenge of this paper is a new text representation model making possible to represent an exponential number of extracts without computing them explicitly, and finding the optimal one by simple minimizing a distance function in polynomial time."
      ]
    },
    {
      "heading": "2 Our Method",
      "text": []
    },
    {
      "heading": "2.1 Definitions",
      "text": [
        "We are given a set of sentences S1, ..., Sn derived from a document or a cluster of related documents.",
        "Meaningful words in these sentences are entirely described by terms T1, ..., Tm.",
        "Our goal is to find a subset Si1 , ..., Sik consisting of sentences such that (1) there are at most N terms in these sentences, (2) term frequency is preserved as much as possible w.r.t.",
        "the original sentence set, (3) redundant information among k selected sentences is minimized.",
        "We use the standard sentence-term matrix, A = (aij) of size m?",
        "n, for initial data representation, where aij = k if term Ti appears in the sentence Sj precisely k times.",
        "Our goal is to find subset i1, ..., ik of A?s",
        "columns so that the chosen submatrix represents the best possible summary under some constraints.",
        "Since it is hard to determine what is the best summary mathematically (this task is usually left to human experts), we wish to express summary quality as a linear function of the underlying matrix.",
        "We strive to find a summary that gives an optimal value once the function in question has been determined.",
        "Basic text preprocessing includes sentence splitting and tokenization.",
        "Also, additional steps like stopwords removal, stemming, synonym resolution, etc.",
        "may be performed for resource-rich languages."
      ]
    },
    {
      "heading": "2.2 Polytope as a document representation",
      "text": [
        "We represent every sentence by a hyperplane and the lower half-space of that hyperplane.",
        "In a way, the hyperplane bounding each half-space is the sentence itself, and a half-space below it is an approximation of that sentence.",
        "An intersection of lower half-spaces in Euclidean space forms a convex polyhedron, and in our case the faces of this polyhedron are intersections of hyperplanes bounding lower half-spaces that stand for document sentences.",
        "We add trivial constraints so that the polyhedron representing the entire document is bounded, i.e. is a polytope.",
        "All possible extracts from the document can be represented by hyperplane intersections.",
        "Thus the boundary of the resulting polytope is a good approximation for extracts that can be generated from the given document.",
        "We view every column of the sentence-term matrix as a linear constraint representing a lower half-space in Rmn.",
        "An occurrence of term ti in sentence Sj is represented by variable xij .",
        "The maximality constraint on the number of terms in the summary can be easily expressed as a constraint on the sum of these variables.",
        "Note that each sentence constraint uses its n unique variables, thus making sure that the intersection of every subset of sentence hyperplane is not empty and is well-defined.",
        "Every sentence Sj in our document is a lower half-space of a hyperlane in Rmn, defined with columns of A and variables x1j , .",
        ".",
        ".",
        ", xmj representing the terms in this sentence:",
        "We define a system of linear inequalities",
        "Every inequality of this form defines a lower half-space of a hyperplane",
        "To say that every term is either present or absent from the chosen extract, we add constraints 0 ?",
        "xij ?",
        "1.",
        "Intuitively, the entire hyperplane Hi and therefore every point p ?",
        "Hi represents sentence Si.",
        "Then a subset of r sentences is represented by intersection of r hyperplanes."
      ]
    },
    {
      "heading": "2.3 Summary constraints",
      "text": [
        "We express summarization constraints in the form of linear inequalities.",
        "Maximality constraint on the number of terms in the summary can be easily expressed as a constraint on the sum of all term variables xij , and the same goes for minimality constraint."
      ]
    },
    {
      "heading": "2.4 The polytope model",
      "text": [
        "Having defined linear inequalities that describe each sentence in a document separately and the total number of terms in sentence subset, we can now look at them together as a system:",
        "(2) First n inequalities describe sentences S1, .",
        ".",
        ".",
        ", Sn, the next two inequalities describes constraints on the total number of terms and words in a summary, and the final constraint determines upper and lower boundaries for all sentence-term variables.",
        "Intersections of S1, .",
        ".",
        ".",
        ", Sn are well-defined, since every pair of sentences is described by a linear constraints on different n-tuple of variables xij out of total mn variables.",
        "Since every inequality in the system (2) is linear, the entire system describes a convex polyhedron, which we denote by P."
      ]
    },
    {
      "heading": "2.5 Objectives and summary extraction",
      "text": [
        "We assume here that the surface of the polyhedron P is a suitable representation of all the possible",
        "(1) POS EQ, where wi = 1 for all i; (2) POS F, where wi = 1app(i) and app(i) is the index of a sentence in the document where the term Ti first appeared; (3) POS B, where wi = max{ 1app(i) , 1 n?app(i)+1}; (4) TF, where wi = tf(i) and tf(i) is the term frequency of term Ti; (5) TFISF, where wi = tf(i) ?",
        "isf(i)",
        "and isf(i) is the inverse sentence frequency of Ti Distance Function min",
        "we wish to preserve and representing the ?ideal?",
        "summary).",
        "and pi = tf(i) We used the following options for t and p representation.",
        "(1) MTC, where t is a summary term count vector and p contains all the terms precisely once, thus minimizing repetition but increasing terms coverage.",
        "(2) MTF, where t contains term frequency of terms in a summary and p contains term frequency for terms in documents.",
        "w(aij , aik) is 1 if the term Ti is present in both sentences Sj and Sk and is 0 otherwise.",
        "sentence subsets.",
        "Fortunately, we do not need to scan the whole set of P's surfaces but rather to find the point on P that optimizes the chosen objective function.",
        "Table 1 contains four different objective functions that we used for summarization, along with descriptions of the changes in the model that were required for each function.",
        "Since fractional LP method not only finds the optimal value of objective function but also presents an evidence to that optimality in the form of a point x = (xij), we use the point's data to find what sentences belong to the chosen summary.",
        "The point x may satisfy several of the sentence inequalities as equalities, while other inequalities may not turn into equalities.",
        "If sentence inequality is turned into equality by x, the sentence necessarily belongs to the chosen summary.",
        "Otherwise, the point x that optimizes the chosen objective function represents a summary that does not contain sufficient number of words or terms.",
        "In this case we add additional sentences to the summary and we choose these sentences on the basis of their distance from the point x.",
        "Sentence hyperplanes that are the nearest to the point x are chosen in a greedy manner and added to the summary.",
        "This test is straightforward and takes O(mn) time.",
        "3 POLY2: system description We title our system POLY2 as a double POLY occured in ?POLYnomial Summarization using POLYtope model?.",
        "POLY2 is implemented in Java and it uses lp-solve software (Berkelaar, 1999) in order to perform Linear Programming.",
        "The input for our system is initial collection of texts to be summarized.",
        "Four main parts of POLY2 are: preprocessing, linear program generation, linear program application and testing.",
        "Data flow of the system is depicted in Figure 1.",
        "The preprocessing step consists of following parts.",
        "During the very first step, initial documents undergo stop word removal, stemming and synonym resolution (if available for the chosen language).",
        "Then, a sentence-term matrix is generated in the form of a text file, where every line describes a term and every column ?",
        "a sentence.",
        "Also, the index list for multi-document summarization is generated.",
        "In this list serial number of each sentence is paired up with its serial number in its document.",
        "This information is used later in order to decide how close each sentence is to its document's boundaries.",
        "Finally, we generate list of bigrams (a consecutive appearance of two terms) for every sentence.",
        "All of the files gener",
        "ated during preprocessing are text files.",
        "The main part of POLY2 is linear program generation.",
        "The system allows to select document matrix files and auxiliary files and objective function and generates a system of linear inequalities together with an objective function in format acceptable by lp-solve software.",
        "Figure 2 shows a sample LP file contents.",
        "Note that file generation for every one of our objective function takes only seconds for a single documents.",
        "The next step is to run linear program and extract its results.",
        "We use lp-solve Java API to perform this task and extract coordinates of point x that optimizes the chosen objective function.",
        "In order to construct the summary, we measure the normalized distance from point x to every one of the sentence hyperplanes.",
        "Since this information is readily available through lp-solve API, the task requires sorting of n real numbers, where n is the number of sentences in all of the documents together.",
        "Hyperplanes whose distance to x is minimal represent the sentences participating in the final summary.",
        "Running time of this step for a single file does not exceed three seconds.",
        "The final (optional) step is to verify generated summaries, that can be performed with the help of any evaluation system.",
        "In our case, the ROUGE (Lin, 2004) system has been used."
      ]
    },
    {
      "heading": "4 Conclusions and Future Work",
      "text": [
        "In this paper we present an extractive summarization system POLY2 based on a linear programming model.",
        "We represent the document as a set of intersecting hyperplanes.",
        "Every possible summary of a document is represented as the intersection of two or more hyperlanes.",
        "We consider the summary to be the best if the optimal value of objective function is preserved during summarization, and translate the summarization problem into a problem of finding a point on a convex polytope which is the closest to the hyperplane describing the ?ideal?",
        "summary.",
        "We introduce multiple objective functions describing the distance between a summary (a point on a convex polytope) and the best summary (the hyperplane).",
        "Since the introduced objectives behaves differently on different languages, only two of them were indicated as primary systems and evaluated by MultiLing 2013 organizers?OBJPOS F1 and OBJ3?denoted by ID5 and ID51.",
        "Below we summarize the results of automated evaluations in MultiLing 2013 (ROUGE-1,2,3,4 and three N-gram graph methods) for POLY2 in three languages.",
        "English: 7th place in all ROUGE metrics (stemmed) and AutoSummENG, and 8th place in MeMoG and NPowER (out of 10 systems); Hebrew: 3rd place in ROUGE-1, 5th place in ROUGE-2 and MeMoG, 4th rank in ROUGE-3 and ROUGE-4, and only 6th rank in terms of AutoSummENG and NPowER (out of 9 participants); Arabic: 7th rank in ROUGE-1,2 and all NGG metrics, 6th rank in terms of ROUGE-3, and 5th place in ROUGE-4 (out of 10 summarizers).",
        "As it can be seen, the best performance for POLY2 has been achieved on the dataset of Hebrew documents.",
        "Since fractional linear programming problem can be solved in polynomial time (Karmarkar, 1984), the time complexity of our approach is polynomial."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "Authors thank Igor Vinokur for the software maintenance and running of experiments."
      ]
    }
  ]
}
