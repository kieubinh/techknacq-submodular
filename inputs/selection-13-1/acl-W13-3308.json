{
  "info": {
    "authors": [
      "Sara Stymne",
      "Christian Hardmeier",
      "JÃ¶rg Tiedemann",
      "Joakim Nivre"
    ],
    "book": "DiscoMT",
    "id": "acl-W13-3308",
    "title": "Feature Weight Optimization for Discourse-Level SMT",
    "url": "https://aclweb.org/anthology/W13-3308",
    "year": 2013
  },
  "references": [
    "acl-D07-1007",
    "acl-D08-1024",
    "acl-D11-1084",
    "acl-D11-1125",
    "acl-D12-1026",
    "acl-D12-1108",
    "acl-E12-3001",
    "acl-N03-1017",
    "acl-N12-1023",
    "acl-N12-1046",
    "acl-N12-1047",
    "acl-P02-1040",
    "acl-P03-1021",
    "acl-P07-1005",
    "acl-P07-2045",
    "acl-P11-2031",
    "acl-P12-1048",
    "acl-P13-4033",
    "acl-W01-1408",
    "acl-W09-2404",
    "acl-W10-1737",
    "acl-W10-2602",
    "acl-W12-0117",
    "acl-W12-3102",
    "acl-W12-3139"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We present an approach to feature weight optimization for document-level decoding.",
        "This is an essential task for enabling future development of discourse-level statistical machine translation, as it allows easy integration of discourse features in the decoding process.",
        "We extend the framework of sentence-level feature weight optimization to the document-level.",
        "We show experimentally that we can get competitive and relatively stable results when using a standard set of features, and that this framework also allows us to optimize document-level features, which can be used to model discourse phenomena."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Discourse has largely been ignored in traditional machine translation (MT).",
        "Typically each sentence has been translated in isolation, essentially yielding translations that are bags of sentences.",
        "It is well known from translation studies, however, that discourse is important in order to achieve good translations of documents (Hatim and Mason, 1990).",
        "Most attempts to address discourse-level issues for statistical machine translation (SMT) have had to resort to solutions such as post-processing to address lexical cohesion (Carpuat, 2009) or two-step translation to address pronoun anaphora (Le Nagard and Koehn, 2010).",
        "Recently, however, we presented Docent (Hardmeier et al., 2012; Hardmeier et al., 2013), a decoder based on local search that translates full documents.",
        "So far this decoder has not included a feature weight optimization framework.",
        "However, feature weight optimization, or tuning, is important for any modern SMT decoder to achieve a good translation performance.",
        "In previous research with Docent, we used grid search to find weights for document-level features while base features were optimized using standard sentence-level techniques.",
        "This approach is impractical since many values for the extra features have to be tried, and, more importantly, it might not give the same level of performance as jointly optimizing all parameters.",
        "Principled feature weight optimization is thus essential for researchers that want to use document-level features to model discourse phenomena such as anaphora, discourse connectives, and lexical consistency.",
        "In this paper, we therefore propose an approach that supports discourse-wide features in document-level decoding by adapting existing frameworks for sentence-level optimization.",
        "Furthermore, we include a thorough empirical investigation of this approach."
      ]
    },
    {
      "heading": "2 Discourse-Level SMT",
      "text": [
        "Traditional SMT systems translate texts sentence by sentence, assuming independence between sentences.",
        "This assumption allows efficient algorithms based on dynamic programming for exploring a large search space (Och et al., 2001).",
        "Because of the dynamic programming assumptions it is hard to directly include discourse-level features into a traditional SMT decoder.",
        "Nevertheless, there have been several attempts to integrate inter-sentential and long distance models for discourse-level phenomena into standard decoders, usually as ad-hoc additions to standard models, addressing a single phenomenon.",
        "Several studies have tried to improve pronoun anaphora by adding information about the antecedent, either by using two-step decoding (Le Nagard and Koehn, 2010; Guillou, 2012) or by extracting information from previously translated sentences (Hardmeier and Federico, 2010), unfortunately without any convincing results.",
        "To address the translation of discourse connectives, source-side preprocessing has been used to annotate surface forms either in the corpus or in the",
        "phrase-table (Meyer and Popescu-Belis, 2012) or by using factored decoding (Meyer et al., 2012) to disambiguate connectives, with small improvements.",
        "Lexical consistency has been addressed by the use of post-processing (Carpuat, 2009), multi-pass decoding (Xiao et al., 2011; Ture et al., 2012), and cache models (Tiedemann, 2010; Gong et al., 2011).",
        "Gong et al. (2012) addressed the issue of tense selection for translation from Chinese, by the use of inter-sentential tense n-grams, exploiting information from previously translated sentences.",
        "Another way to use a larger context is by integrating word sense disambiguation and SMT.",
        "This has been done by reinitializing phrase probabilities for each sentence (Carpuat and Wu, 2007), by introducing extra features in the phrase-table (Chan et al., 2007), or as a k-best re-ranking task (Specia et al., 2008).",
        "Another type of approach is to integrate topic modeling into phrase tables (Zhao and Xing, 2010; Suet al, 2012).",
        "For a more thorough overview of discourse in SMT, see Hardmeier (2012).",
        "Here we instead choose to work with the recent document-level SMT decoder Docent (Hardmeier et al., 2012).",
        "Unlike in traditional decoding were documents are generated sentence by sentence, feature models in Docent always have access to the complete discourse context, even before decoding is finished.",
        "It implements the phrase-based SMT approach (Koehn et al., 2003) and is based on local search, where a state consists of a full translation of a document, which is improved by applying a series of operations to improve the translation.",
        "A hill-climbing strategy is used to find a (local) maximum.",
        "The operations allow changing the translation of a phrase, changing the word order by swapping the positions of two phrases, and resegmenting phrases.",
        "The initial state can either be initialized randomly in monotonic order, or be based on an initial run from a standard sentence-based decoder.",
        "The number of iterations in the decoder is controlled by two parameters, the maximum number of iterations and a rejection limit, which stops the decoder if no change was made in a certain number of iterations.",
        "This setup is not limited by dynamic programming constraints, and enables the use of the translated target document to extract features.",
        "It is thus easy to directly integrate discourse-level features into Docent.",
        "While we use this specific decoder in our experiments, the method proposed for document-level feature weight optimization is not limited to it.",
        "It can be used with any decoder that outputs feature values at the document level."
      ]
    },
    {
      "heading": "3 Sentence-Level Tuning",
      "text": [
        "Traditionally, feature weight optimization, or tuning, for SMT is performed by an iterative process where a development set is translated to produce a k-best list.",
        "The parameters are then optimized using some procedure, generally to favor translations in the k-best list that have a high score on some MT metric.",
        "The translation step is then repeated using the new weights for decoding, and optimization is continued on a new k-best list, or on a combination of all k-best lists.",
        "This is repeated until some end condition is satisfied, for instance for a set number of iterations, until there is only very small changes in parameter weights, or until there are no new translations in the k-best lists.",
        "SMT tuning is a hard problem in general, partly because the correct output is unreachable and also because the translation process includes latent variables, which means that many efficient standard optimization procedures cannot be used (Gimpel and Smith, 2012).",
        "Nevertheless, there are a number of techniques including MERT (Och, 2003), MIRA (Chiang et al., 2008; Cherry and Foster, 2012), PRO (Hopkins and May, 2011), and Rampion (Gimpel and Smith, 2012).",
        "All of these optimization methods can be plugged into the standard optimization loop.",
        "All of the methods work relatively well in practice, even though there are limitations, for instance that many methods are non-deterministic meaning that their results are somewhat unstable.",
        "However, there are some important differences.",
        "MERT is based on scores for the full test set, whereas the other methods are based on sentence-level scores.",
        "MERT also has the drawback that it only works well for small sets of features.",
        "In this paper we are not concerned with the actual optimization algorithm and its properties, though, but instead we focus on the integration of document-level decoding into the existing optimization frameworks.",
        "In order to adapt sentence-level frameworks to our needs we need to address the granularity of scoring and the process of extracting k-best lists.",
        "For document-level features we do not have meaningful scores on the sentence level which are required in standard optimization frameworks.",
        "Furthermore, the extraction of k-best lists is not as",
        "Input: inputDocs, refDocs, init weights ?0, max decoder iters max, sample start ss, sample interval si, Output: learned weights ?",
        "1: ?",
        "?",
        "?0 2: Initialize empty klist 3: run?",
        "1 4: repeat 5: Initialize empty klistrun 6: for doc?",
        "1, inputDocs.size do Initialize decoder state randomly for inputDocs[doc] 7: for iter?",
        "1,max do 8: Perform one hill-climbing step for inputDocs[doc] 9: if iter >= ss & iter mod si == 0 then 10: Add translation for inputDocs[doc] to klistrun 11: end if 12: end for 13: end for 14: Merge klistrun with klist 15: modelScoresdoc ?",
        "ComputeModelScores(klist) 16: metricStatsdoc ?",
        "ComputeMetricStats(klist, refDocs) 17: ?run ?",
        "?",
        "18: ?",
        "?",
        "Optimize(?run,modelScoresdoc,metricStatsdoc) 19: run?",
        "run + 1 20: until Done(run, ?, ?run)",
        "straightforward in our hill-climbing decoder as in standard sentence-level decoders such as Moses (Koehn et al., 2007) where such a list can be approximated easily from the internal beam search strategy.",
        "Working on output lattices is another option in standard approaches (Cherry and Foster, 2012) which is also not applicable in our case.",
        "In the following section we describe how we can address these issues in order to adapt sentence-level frameworks for our purposes."
      ]
    },
    {
      "heading": "4 Document-Level Tuning",
      "text": [
        "To allow document-level feature weight optimization, we make some small changes to the sentence-level framework.",
        "Figure 1 shows the algorithm we use.",
        "It assumes access to an optimization algorithm, Optimize, and an end criterion, Done.",
        "The changes from standard sentence-level optimization is that we compute scores on the document level, and that we sample translations instead of using standard k-best lists.",
        "The main challenge is that we need meaningful scores which we do not have at the sentence level in document decoding.",
        "We handle this by simply computing all scores (model scores and metric scores) exclusively at the document level.",
        "Remember that all standard MT metrics based on sentence-level comparisons with reference translations can be aggregated for a complete test set.",
        "Here we do the same for all sentences in a given document.",
        "This can actually be an advantage compared to optimization methods that use sentence-level scores, which are known to be unreliable (Callison-Burch et al., 2012).",
        "Document-level scores should thus be more stable, since they are based on more data.",
        "A potential drawback is that we get fewer data points with a test set of the same size, which might mean that we need more data to achieve as good results as with sentence-level optimization.",
        "We will see the ability of our approach to optimize weights with reasonable data sets in our experiments further down.",
        "The second problem, the extraction of k-best lists can be addressed in several ways.",
        "It is possible to get a k-best list from Docent by extracting the results from the last k iterations.",
        "However, since Docent operates on the document-level and does not accept updates in each iteration, there will be many identical and/or very similar hypotheses with such an approach.",
        "Another option would be to extract the translations from the k last different iterations, which would require some small changes to the decoder.",
        "Instead, we opt to use k-lists, lists of translations sampled with some interval, which contains k translations, but not necessarily all the k best translations that could be found by the decoder.",
        "A k-best list is of course a k-list, which we get with a sample interval of 1.",
        "We also choose to restart Docent randomly in each optimization iteration, since it allows us to explore a larger part of the search space.",
        "We empirically found that this strategy worked better than restarting the decoder from the previous best state.",
        "As seen in Figure 1, there are some additional parameters in our procedure: the sample start iteration and the sample interval.",
        "We also need to set the number of decoder iterations to run.",
        "In Section 5 we empirically investigate the effect of these parameters.",
        "Compared to sentence-level optimization, we also have a smaller number of units to get scores from, since we use documents as units, and not sentences.",
        "The importance of this depends on the optimization algorithm.",
        "MERT calculates metric scores over the full tuning set, not for individual sentences, and should not be affected too much by the change in granularity.",
        "Many other optimization algorithms, like PRO, work on the sentence level, and will likely be more affected by the reduction of units.",
        "In this work we focus on MERT, which is the most commonly used optimization procedure in the SMT community, and which tends to work quite well with relatively few features.",
        "However, we also show contrastive results for PRO (Hopkins and May, 2011).",
        "A further issue is that Docent is non-deterministic, i.e., it can give different results with the same parameter weights.",
        "Since the optimization process is already somewhat unstable this is a potential issue that needs to be explored further, which we do in Section 5.",
        "Implementation-wise we adapted Docent to output k-lists and adapted the infrastructure available for tuning in the Moses decoder (Koehn et al., 2007) to work with document-level scores.",
        "This setup allows us to use the variety of optimization procedures implemented there."
      ]
    },
    {
      "heading": "5 Experiments",
      "text": [
        "In this section we report experimental results where we investigate several issues in connection with document-level feature weight optimization for SMT.",
        "We first describe the experimental setup, followed by baseline results using sentence-level optimization.",
        "We then present validation experiments with standard sentence-level features, which can be compared to standard optimization.",
        "Finally, we report results with a set of document-level features that have been proposed for joint translation and text simplification (Stymne et al., 2013)."
      ]
    },
    {
      "heading": "5.1 Experimental Setup",
      "text": [
        "Most of our experiments are for German-to-English news translation using data from the WMT13 workshop.1 We also show results with document-level features for English-to-Swedish Europarl (Koehn, 2005).",
        "The size of the training, tuning, and test sets are shown in Table 1.",
        "First of all, we need to extract documents for tuning and testing with Docent.",
        "Fortunately, the news data already contain document markup, corresponding to individual news articles.",
        "For Europarl we define a document as a consecutive sequence of utterances from a single speaker.",
        "To investigate the effect of the size of the tuning set, we used different subsets of the available tuning data.",
        "All our document-level experiments are carried out with Docent but we also contrast with the Moses decoder (Koehn et al., 2007).",
        "For the purpose of comparison, we use a standard set of sentence-level features used in Moses in most of our experiments: five translation model features, one language model feature, a distance-based reordering penalty, and a word count feature.",
        "For feature weight optimization we also apply the standard settings in the Moses toolkit.",
        "We optimize towards the Bleu metric, and optimization ends either when no weights are changed by more than 0.00001, or after 25 iterations.",
        "MERT is used unless otherwise noted.",
        "Except for one of our baselines, we always run Docent with random initialization.",
        "For test we run the document decoder for a maximum of 227 iterations with a rejection limit of 100,000.",
        "In our experiments, the decoder always stopped when",
        "million iterations.",
        "We show results on the Bleu (Papineni et al., 2002) and NIST (Doddington, 2002) metrics.",
        "For German?English we show the average result and standard deviation of three optimization runs, to control for optimizer instability as proposed by Clark et al. (2011).",
        "For English?Swedish we report results on single optimization runs, due to time constraints."
      ]
    },
    {
      "heading": "5.2 Baselines",
      "text": [
        "Most importantly, we would like to show the effectiveness of the document-level tuning procedure described above.",
        "In order to do this, we created a baseline using sentence-level optimization with a tuning set of 2525 sentences and the News2009 corpus for evaluation.",
        "Increasing the tuning set is known to give only modest improvements (Turchi et al., 2012; Koehn and Haddow, 2012).",
        "The feature weights optimized with the standard Moses decoder can then directly be used in our document-level decoder as we only include sentence-level features in our baseline model.",
        "As expected, these optimized weights also lead to a better performance in document-level decoding compared to an untuned model as shown in Table 2.",
        "Note, that Docent can be initialized in two ways, by Moses and randomly.",
        "Not surprisingly, the result for the runs initialized with Moses are identical with the pure sentence-level decoder.",
        "Initializing randomly gives a slightly lower Bleu score but with a larger variation than with Moses initialization, which is also expected.",
        "Docent is non-deterministic, and can give somewhat varying results with the same weights.",
        "However, this variation has been shown experimentally to be very small (Hardmeier et al., 2012).",
        "Our goal now is to show that document-level tuning can perform equally well in order to verify our approach.",
        "For this, we set up a series of experiments looking at varying tuning sets and different parameters of the decoding and optimization procedure.",
        "With this we like to demonstrate the stability of the document-level feature weight optimization approach presented above.",
        "Note that the most important baselines for comparison with the results in the next sections are the ones with Docent and random initialization."
      ]
    },
    {
      "heading": "5.3 Sentence-Level Features",
      "text": [
        "In this section we present validation results where we investigate different aspects of document",
        "sizes of tuning set, where the number of sentences and documents are varied, as well as the minimum and maximum number of sentences per document level feature weight optimization with standard sentence-level features.",
        "In this way we can compare the results directly to standard sentence-level optimization, and to the results of Moses.",
        "Corpus size We investigate how tuning is affected by corpus size.",
        "The corpus size was varied in two ways, by changing the number of documents in the tuning set, and by changing the length of documents in the tuning sets.",
        "In this experiment we run 20000 decoder iterations per optimization iteration, and use a k-list of size 101, with sample interval 100.",
        "Table 3 shows the results with varying tuning set sizes for German?",
        "English.",
        "There is very little variation between the scores, and no clear tendencies.",
        "All results are of similar quality to the baseline with random initialization and sentence-level tuning, and better than not using any tuning.",
        "The top line in Table 3 is News2009, the same tuning set as for the baselines.",
        "The scores are somewhat more unstable than the baseline scores, but stability is not related to corpus size.",
        "In the following sections we will use the tuning set with 200 documents, size 8-40.",
        "Number of decoder iterations and k-list sampling Two issues that are relevant for feature weight optimization with the document-level decoder is the number of decoder hill-climbing iterations in each optimization iteration, and the settings for k-list sampling.",
        "These choices affect the",
        "ing number of iterations and k-list size (UTK is the average number of unique translations per document in the k-lists) quality of the translations in each optimization iteration, and the spread in the k-list.",
        "We will report the average number of unique translations per document in the k-lists, UTK, during feature weight optimization, in this section.",
        "The top half of Table 4 shows results with a different number of iterations, when we sample k-lists from iteration 10000 with interval 100 for German?English, which means that the size of the k-lists also changes.",
        "The differences on MT metrics are very small.",
        "The number of new unique translations in the k-lists decrease with the number of decoder iterations.",
        "With 20K iterations, 55% of the k-lists entries are unique, which could be compared to only 12% with 100K iterations.",
        "The majority of the unique translations are thus found in the beginning of the decoding, which is not surprising.",
        "The bottom half of Table 4 shows results with a different number of decoder iterations, but a set k-list size.",
        "In this setting the number of unique hypotheses in the k-lists obviously decreases with the number of decoder iterations.",
        "Despite this, there are mostly small result differences, except for 40K iterations, which has more unstable results than the other settings.",
        "It does not seem useful to increase the number of decoder iterations without also increasing the size of the k-list.",
        "An even better strategy might be to only include unique entries in the k-lists.",
        "We will explore this in future work.",
        "We also ran experiments where we did not restart the decoder with a random state in each iteration, but instead saved the previous state and continued decoding with the new weights from there.",
        "This, however, was largely unsuccessful, and gave very low scores.",
        "We believe that the reason for this is mainly that a much smaller part of the search space is explored when the decoder is not restarted",
        "vals for k-lists size 101 (UTK is the average number of unique translations per document in the k-lists) with a new seed repeatedly.",
        "The fact that a higher overall quality can be achieved with a higher number of iterations (see Figure 2) can apparently not compensate for this drawback.",
        "Finally, we investigate the effect of the sample interval for the k-lists.",
        "To get k-lists of equal size, 101, we start the sampling at different iterations.",
        "Table 5 shows the results, and we can see that with a small sample interval, the number of unique translations decreases drastically.",
        "Despite this, there are no large result differences.",
        "There is actually a slight trend that a smaller sample interval is better.",
        "This does not confirm our intuition that it is important with many different translations in the k-list.",
        "Especially for interval 1 it is surprising, since there is often only 1 unique translation for a single document.",
        "We believe that the fact that k-lists from different iterations are joined, can be part of the explanation for these results.",
        "We think more work is needed in the future, to further explore these settings, and the interaction with the total number of decoder iteration, and the k-list sampling.",
        "To further shed some light to these results, we show learning curves from the optimization.",
        "Figure 2 shows Bleu scores for the system optimized with 100K decoder iterations after different numbers of iterations, for the last three iterations in each of the three optimization runs.",
        "As shown in Hardmeier et al. (2012), the translation quality increases fast at first, but start to level out at around 40K iterations.",
        "Despite this, the optimization results are good even with 20K iterations, which is somewhat surprising.",
        "Figures 3 and 4 show the Bleu scores after each tuning iteration for the systems in Tables 4 and 5.",
        "As is normal for SMT tuning, the convergence is slow, and there are some oscillations even late in the optimization.",
        "Overall systems with many iterations seem somewhat more stable.",
        "Overall, the results are better than the untuned",
        "mization for systems with different number of decoder iterations and k-list sizes.",
        "baseline and on par with the sentence-level tuning baselines in all settings, with a relatively modest variation, even across settings.",
        "In fact, if we calculate the total scores of all 36 systems in Tables 4 and 5, we get a Bleu score of 18.0 (0.23) and a NIST score of 6.19 (0.07), with a variation that is not higher than for many of the different settings.",
        "Optimization method In this section we compare the performance of the MERT optimization algorithm with that of PRO, and a combination that starts MERT with weights initialized with PRO (MERT+PRO), suggested by Koehn and Haddow (2012).",
        "Here we run 30000 decoder iterations.",
        "Table 6 shows the results.",
        "Initializing MERT with PRO did not affect the scores much.",
        "The scores with only PRO, however, are slightly lower than for MERT, and have a much larger score variation.",
        "This could be because PRO is",
        "mization for systems with different k-list sample interval and number of decoder iterations.",
        "likely to need more data, since it calculates metric scores on individual units, sentences or documents, not across the full tuning set, like MERT.",
        "This likely means that 200 documents are too few for stable results with optimization methods that depend on unit-level metric scores."
      ]
    },
    {
      "heading": "5.4 Document-Level Features",
      "text": [
        "In this section we investigate the effect of optimization with a number of document-level features.",
        "We use a set of features proposed in Stymne et al. (2013), in order to promote the readability of texts.",
        "In this scenario, however, we use these features in a standard SMT setting, where they can potentially improve the lexical consistency of translations.",
        "The features are: ?",
        "Type token ratio (TTR) ?",
        "the ratio of types, unique words, to tokens, total number of words ?",
        "OVIX ?",
        "a reformulation of TTR that has traditionally been used for Swedish and that is less sensible to text length than TTR, see Eq.",
        "1 ?",
        "Q-value, phrase level (QP) - The Q-value was developed as a measure for bilingual term quality (Dele?ger et al., 2006), to promote common and consistently translated terms.",
        "See Eq.",
        "2, where f(st) is the frequency of",
        "the phrase pair, n(s) is the number of unique target phrases which the source phrase is aligned to in the document, and n(t) is the same for the target phrase.",
        "Here the Q-value is applied on the phrase level.",
        "?",
        "Q-value, word level (QW) - Same as above, but here we apply the Q-value for source words and their alignments on the target side.",
        "n(s) + n(t) (2) We added these features one at a time to the standard feature set.",
        "Optimization was performed with 20000 decoder iterations, and a k-list of size 101.",
        "As shown in the previous sections, there are slightly better settings, which could have been used to boost the results somewhat.",
        "The results are shown in Table 7.",
        "For German?",
        "English, the results are generally on par with the baselines for Bleu and slightly higher on NIST for OVIX and TTR.",
        "For English?Swedish, we used a smaller tuning set on the document level than on the sentence level, see Table 1, due to time constraints.",
        "This is reflected in the scores, which are generally lower than for sentence-level decoding.",
        "Using the QW feature, however, we receive competitive scores to the sentence-based baselines, which indicates that it can be meaningful to use document-level features with the suggested tuning approach.",
        "While the results do not improve much over the baselines, these experiments still show that we can optimize discourse-level features with our approach.",
        "We need to identify more useful document-level features in future work, however."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "We have shown how the standard feature weight optimization workflow for SMT can be adapted to document-level decoding, which allows easy integration of discourse-level features into SMT.",
        "We modified the standard framework by calculating scores on the document-level instead of the sentence level, and by using k-lists rather than k-best lists.",
        "Experimental results show that we can achieve relatively stable results, on par with the results for sentence-level optimization and better than without tuning, with standard features.",
        "This is despite the fact that we use the hill-climbing decoder without initialization by a standard decoder, which means that it is somewhat unstable, and is not guaranteed to find any global maximum, even according to the model.",
        "We also show that we can optimize document-level features successfully.",
        "We investigated the effect of a number of parameters relating to tuning set size, the number of decoder iterations, and k-list sampling.",
        "There were generally small differences relating to these parameters, however, indicating that the suggested approach is robust.",
        "The interaction between parameters does need to be better explored in future work, and we also want to explore better sampling, without duplicate translations.",
        "This is the first attempt of describing and experimentally investigating feature weight optimization for direct document-level decoding.",
        "While we show the feasibility of extending sentence-level optimization to the document level, there is still much more work to be done.",
        "We would, for instance, like to investigate other optimization procedures, especially for systems with a high number of features.",
        "Most importantly, there is a large need for the development of useful discourse-level features for SMT, which can now be optimized."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "This work was supported by the Swedish strategic research programme eSSENCE."
      ]
    }
  ]
}
