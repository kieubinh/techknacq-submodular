{
  "info": {
    "authors": [
      "Volkan Cirik",
      "Hüsnü Sensoy"
    ],
    "book": "Workshop on Statistical Parsing of Morphologically-Rich Languages",
    "id": "acl-W13-4909",
    "title": "The AI-KU System at the SPMRL 2013 Shared Task : Unsupervised Features for Dependency Parsing",
    "url": "https://aclweb.org/anthology/W13-4909",
    "year": 2013
  },
  "references": [
    "acl-D09-1058",
    "acl-D12-1086",
    "acl-E09-1038",
    "acl-J92-4003",
    "acl-N04-1043",
    "acl-P08-1068",
    "acl-W04-3234",
    "acl-W06-2920",
    "acl-W09-3821",
    "acl-W10-1409",
    "acl-W13-4917",
    "acl-W96-0103"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We propose the use of the word categories and embeddings induced from raw text as auxiliary features in dependency parsing.",
        "To induce word features, we make use of contextual, morphologic and orthographic properties of the words.",
        "To exploit the contextual information, we make use of substitute words, the most likely substitutes for target words, generated by using a statistical language model.",
        "We generate morphologic and orthographic properties of word types in an unsupervised manner.",
        "We use a co-occurrence model with these properties to embed words onto a 25- dimensional unit sphere.",
        "The AI-KU system shows improvements for some of the languages it is trained on for the first Shared Task of Statistical Parsing of Morphologically Rich Languages."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "For the first shared task of Workshop on Statistical Parsing of Morphologically Rich Languages (Sed-dah et al., 2013), we propose to use unsupervised features as auxillary features for dependency parsing.",
        "We induce the unsupervised features using contextual, morphological and orthographic properties of the words.",
        "We use possible substitutes of the target word which are generated by a statistical language model to exploit the contextual information.",
        "We induce morphological features with a HMM-based model (Creutz and Lagus, 2005).",
        "We combine contextual, morphological and orthographic features of co-occurring words within the co-occurrence data embedding framework (Maron et al., 2010).",
        "The framework embeds word types sharing similar context, morphological and orthographic properties closely on a 25-dimensional sphere.",
        "Thus, it provides the word embeddings on a 25 dimensional sphere.",
        "We conduct experiments using these word embeddings with MaltParser (Nivre et al., 2007) and MaltOptimizer (Ballesteros and Nivre, 2012).",
        "In addition to CONLL features (Buchholz and Marsi, 2006a), they are added as additional features and the parsers are configured such that they are able to exploit these additional features.",
        "As a first step we use real valued word embeddings as they are.",
        "Secondly, we discretize the real valued word embeddings.",
        "Finally, we cluster them and find fine-grained word categories for word types.",
        "Our experiments show that, the AI-KU system leads to better results than the baseline experiments for some languages.",
        "We claim that with the correct parameter settings, these unsupervised features could be useful for dependency parsing.",
        "In the following sections, we introduce the related work, the algorithm, experiments, results and provide a conclusion."
      ]
    },
    {
      "heading": "2 Related Work",
      "text": [
        "The features extracted from unlabeled corpora are already used for all major NLP tasks.",
        "Early studies mainly use clustering based representations (especially Brown clustering (Brown et al., 1992)) to obtain those features.",
        "Miller et al. (2004; Freitag (2004) utilized Brown Clusters to improve Named Entity Recognition (NER) performance whereas Biemann et al. (2007) used them for NER, Word Sense Disambiguation(WSD), and chunking.",
        "Ush-ioda (1996) extended Brown Clustering to cluster",
        "not only words but also phrases using hierarcical clustering and uses them to improve supervised part-of-speech (PoS) tagging.",
        "More recently, Brown Clusters are used for Chinese word segmentation and NER (Liang, 2005).",
        "Just like other tasks, clustering based representations are used to improve parser performance.",
        "Koo et al. (2008; Suzuki et al. (2009) improved dependency parsing by using Brown clusters.",
        "While Can-dito and Seddah (2010; Candito and Crabbe?",
        "(2009) improved PCFG parsing by using them and Goldberg et al. (2009) improved PCFG parser for Hebrew by using HMM generated features.",
        "More recently Socher et al. (2010) used word embeddings computed using method explained in (Collobert and Weston, 2008) for syntactic parsing."
      ]
    },
    {
      "heading": "3 Algorithm",
      "text": [
        "In this section, the general flow of the algorithm will be presented.",
        "First, we explain how we generate the substitute vectors.",
        "Then, we explain the induction procedure of morphological features.",
        "In the following subsection, we explain how we use substitute vectors and morphological features and generate word embeddings.",
        "The same flow is followed for all languages we work on."
      ]
    },
    {
      "heading": "3.1 Substitute Vectors",
      "text": [
        "A target word's substitute vector is represented by the vocabulary of words and their corresponding probabilities of occurring in the position of the target word.",
        "(1) ?",
        "Nobody thought you could just inject DNA into someone 's body and they would just suck it up.",
        "?",
        "tence.",
        "Table 1 illustrates the substitute vector of ?thought?",
        "in (1).",
        "There is a row for each word in the vocabulary.",
        "For instance, probability of ?knew?",
        "occurring in the position of ?thought?",
        "is 9.1% in this context.",
        "To calculate these probabilities, as described in (Yatbaz et al., 2012), a 4-gram language model is built with SRILM (Stolcke, 2002) on the corpora of the target languages.",
        "For French, Hungarian, Polish and Swedish we used Europarl Corpus1(Koehn, 2005).",
        "For German, CONLL-X German Corpus is used (Buchholz and Marsi, 2006b).",
        "For Hebrew, we combined HaAretz and Arutz 7 corpora of MILA2(Itai and Wintner, 2008).",
        "For the tokens seen less than 5 times we replace them with an unknown tag to handle unseen words in training and test data.",
        "We should note that these corpora are not provided to the other participants.",
        "To estimate probabilities of lexical substitutes, for every token in our datasets, we use three tokens each on the left and the right side of the token as a context.",
        "Using Fastsubs (Yuret, 2012) we generated top 100 most likely substitute words.",
        "Top 100 substitute probabilities are then normalized to represent a proper probability distribution.",
        "We should emphasize that a substitute vector is a function of the context and does not depend on the target word."
      ]
    },
    {
      "heading": "3.2 Morphological Features",
      "text": [
        "In order to generate unsupervised word features, the second set of features that we use are morphological and orthographic features.",
        "The orthographic feature set used is similar to the one defined in (Berg-Kirkpatrick et al.,2010) INITIAL-CAP Capitalized words with the exception of sentence initial words.",
        "NUMBER The token starts with a digit.",
        "CONTAINS-HYPHEN Lowercase words with an internal hyphen.",
        "INITIAL-APOSTROPHE Tokens that start with an apostrophe.",
        "The morpological features are obtained using the unlabeled corpora that are used for the generation",
        "of substitute vectors, using Morfessor defined in (Creutz and Lagus, 2005).",
        "We will only give a brief sketch of the model used.",
        "Morfessor splits each word into morphemes (word itself may also be a morpheme) which can be categorized under four groups, namely prefix, stem, suffix, non-morpheme.",
        "The model is defined as a maximum a posteriori (MAP) estimate which maximizes the lexicon (set of morphemes) over the corpus.",
        "The maximization problem is solved by using a greedy algorithm that iteratively splits and merges morphemes, then re-segments corpus using Viterbi algorithm and reestimates probabilities until convergence.",
        "Finally, a final merge step takes place to remove all non-morphemes."
      ]
    },
    {
      "heading": "3.3 Co-occurence Embedding",
      "text": [
        "For a pair of categorical variables, the Spherical Co-occurrence Data Embedding (S-CODE) framework (Maron et al., 2010) represents each of their values on a sphere such that frequently co-occurring values are positioned closely on this sphere.",
        "The input of S-CODE are tuples of values of categorical variables.",
        "In our case, these are word tokens, their substitutes, morphological and orthograpic features.",
        "We construct the tuples by sampling substitute words using substitute vectors, their corresponding morphological and orthographic features of the tokens.",
        "On each row of the co-occurrence input, there are the target token, its substitute sampled from its substitute vector, morphological and orthographic features.",
        "Tokens having the similar substitutes, morphological and orthographic features will be closely located on the sphere at the end of this process.",
        "As in (Yatbaz et al., 2012), the dimension of the sphere is 25, in other words for each word type seen in the corpora we have a 25 dimensional vector3."
      ]
    },
    {
      "heading": "4 Experiments",
      "text": [
        "We conduct experiments using MaltParser (Nivre et al., 2007) and MaltOptimizer (Ballesteros and Nivre, 2012) with features provided in CONLL format and the additional unsupervised features that we generated with default settings of the parsers.",
        "To make use of additional features, we need to modify MaltParser accordingly.",
        "Figure 1 shows that how we use MaltOptimizer and MaltParser with new features.",
        "In order to handle auxiliary features, the feature model file is modified in two different ways.",
        "We handle new features with feature functions Input[0] and Stack[0]4.",
        "We should note that other feature functions should also be experimented as a future work.",
        "The following subsections explain the details of the experiments."
      ]
    },
    {
      "heading": "4.1 Experiment I",
      "text": [
        "Our first approach was trying to use word embeddings as they are with the MaltParser.",
        "For each token in the training and the test set, we added the corresponding 25-dimensional word vector from the word embeddings file to the training and test sets.",
        "If the word type is not present in the word embeddings, then, we use the unknown word vector."
      ]
    },
    {
      "heading": "4.2 Experiment II",
      "text": [
        "The second approach is discretizing the real valued vectors.",
        "For each dimension of word embeddings, we separate b equal sized bins.",
        "Then, for each vector's dimensions, we assign their corresponding bin numbers."
      ]
    },
    {
      "heading": "4.3 Experiment III",
      "text": [
        "The third approach is clustering the word embeddings.",
        "We use a modified k-means algorithm (Arthur and Vassilvitskii, 2007).",
        "We experiment with varying number of clusters k. For each token in training and test file, we use word type's cluster id as an auxiliary feature.",
        "Again, if the token is not in the word embeddings file, we used the unknown word's cluster id."
      ]
    },
    {
      "heading": "5 Results",
      "text": [
        "In Table 2, the experiments on German with MaltParser without the optimization step are demonstrated.",
        "We use the default settings of the MaltParser as our baseline.",
        "We use training data consisting of 5000 sentences with gold tags as training set and the provided development data as test set.",
        "When we use real valued word embeddings as an auxiliary feature, we observe slight improvement compared to MaltParser baseline.",
        "The large binning size results in worse results compared to baseline due to sparsity.",
        "Clustering again leads to some improvement compared to MaltParser baseline.",
        "We also observe that increasing the number of clusters result in better scores compared to smaller k. In Table 3, the results on German with MaltOptimizer can be seen.",
        "As a baseline, again, we use training data consisting of 5000 sentences with gold tags as training set and the provided development data as test set.",
        "We use the baseline experiment's parsing algorithm, feature model and learning algorithm to experiment with word embedding, binning and clustering on MaltParser.",
        "Unlike in Table 2, in Table 3 we observe that only the clustering experiment outperforms the baseline but not significantly.",
        "Since clustering is leads to best results, for all other languages, we apply the same optimization and clustering pipeline.",
        "The only difference is that when the MaltOptimizer suggests Stack Projective as the best algorithm, instead of Input[0] ve use Stack[0], Stack[1], Stack[2] as feature functions.",
        "The two systems of AI-KU only differ in these feature functions.",
        "In Table 3-7, the results of the best system, baseline MaltOptimizer result and our two submitted systems can be seen.",
        "For Polish, our system outper-foms the MaltOptimizer baseline significantly.",
        "For the rest of the languages, our systems are not significantly better or worse than the baseline.",
        "We make an assumption that we need to find the optimum settings, for instance the number of clusters, for each language separately, instead of using the fixed settings for all languages.",
        "For French, German, Hungarian the model trained on the data with gold features is mistakenly used for testing on the data with predicted features.",
        "To correct these, for those languages, we report the unofficial results that are obtained by training on predicted features.",
        "For French, there is also another evaluation metric.",
        "It is about capturing the Multi Word Expressions(MWE).",
        "Table 10 reports the results of MWE and it shows that our system is significantly better than MaltOptimizer baseline."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "We can speculate on these results in couple of ways.",
        "First, for all languages we used the same number of clusters.",
        "The optimum number of clusters may vary with the syntactic properties of these languages.",
        "Similarly, the optimum dimension of the word embeddings may vary with the languages.",
        "In addition, for co-occurence embedding and morphological induction we use the parameter settings of (Yatbaz et al., 2012) which is optimized for Part-of-Speech induction on Penn Treebank data.",
        "We suggest to find the optimum parameter settings for co-occurrence embedding and morphological induction as a future work.",
        "We only experimented with simple feature functions, namely Input and Stack functions.",
        "Other configuration of these functions may lead to better results.",
        "Lastly, as a future direction, we propose to use real valued word embeddings and unsupervised word categories as auxiliary features in the training phase of the MaltOptimizer."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "We would like to thank Joakim Nivre and Deniz Yuret for valuable suggestions and their support."
      ]
    }
  ]
}
