{
  "info": {
    "authors": [
      "Puneeth Kukkadapu",
      "Prashanth Mannem"
    ],
    "book": "Workshop on Statistical Parsing of Morphologically-Rich Languages",
    "id": "acl-W13-4911",
    "title": "A Statistical Approach to Prediction of Empty Categories in Hindi Dependency Treebank",
    "url": "https://aclweb.org/anthology/W13-4911",
    "year": 2013
  },
  "references": [
    "acl-C10-2158",
    "acl-D10-1004",
    "acl-H05-1066",
    "acl-I08-2099",
    "acl-P02-1018",
    "acl-P04-1082",
    "acl-P09-1039",
    "acl-P11-1160",
    "acl-P97-1003",
    "acl-W09-3812",
    "acl-W11-0417"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In this paper we use statistical dependency parsing techniques to detect NULL or Empty categories in the Hindi sentences.",
        "We have currently worked on Hindi dependency treebank which is released as part of COLINGMTPIL 2012 Workshop.",
        "Earlier Rule based approaches are employed to detect Empty heads for Hindi language but statistical learning for automatic prediction is not explored.",
        "In this approach we used a technique of introducing complex labels into the data to predict Empty categories in sentences.",
        "We have also discussed about shortcomings and difficulties in this approach and evaluated the performance of this approach on different Empty categories."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Hindi is a morphologically rich and a relatively free word order language (MoR-FWO).",
        "Parsing is a challenging task for such MoR-FWO languages like Turkish, Basque, Czech, Arabic, etc.",
        "because of their non-configurable nature.",
        "Previous research showed that the dependency based annotation scheme performs better than phrase based annotation scheme for such languages (Hudson, 1984; Bharati et al., 1995).",
        "Dependency annotation for Hindi is based on Paninian framework for building the treebank (Begum et al., 2008).",
        "In recent years data driven parsing on Hindi has shown good results, the availability of annotated corpora is a definite factor for this improvement (Nivre et al., 2006; McDonald et al., 2005; Martins et al., 2009; Mannem and Dara, 2011).",
        "Other approaches such as rule-based and hybrid of rule-based and data-driven (Bharati et al., 2009a) for Hindi language have also been tried out.",
        "In the shared task for Hindi Parsing organized with COLING workshop Singla et al. (2012) achieved best results for Gold-Standard data with 90.99% (Labeled Attachment Score or LAS) and 95.87% (Unlabeled Attachment Score or UAS).",
        "Empty category is a nominal element which does not have any phonological content and is therefore unpronounced.",
        "Empty categories are annotated in sentences to ensure a linguistically plausible structure.",
        "Empty categories play a crucial role in the annotation framework of the Hindi dependency treebank (Begum et al., 2008; Bharati et al., 2009b).",
        "If dependency structure of a sentence do not form a fully connected tree then Empty category (denoted by NULL in Hindi Treebank) is inserted in the sentence.",
        "In the Hindi treebank, an Empty category has at least one child.",
        "Traditional parsing algorithms do not insert Empty categories and require the Empty categories to be part of the input.",
        "These Empty categories are manually annotated in the treebank.",
        "In real time scenarios, like translation between languages, it is not possible to add the Empty categories into the sentences manually.",
        "So we require an approach which can identify the presence of these Empty categories and insert into appropriate positions in the sentence.",
        "Figure 1 shows an Example of a Hindi sentence annotated with a NULL category.",
        "The English translation for this sentence is, ?Its not fixed what his big bank will do?.",
        "The aim of this paper is to investigate the problem of automatically predicting the Empty categories in the sentences using the statistical de",
        "pendency parsing technique and to shed some light on the challenges of this problem.",
        "As the data-driven parsing on Hindi language has achieved good results (Singla et al., 2012), we try to use this approach to predict Empty categories in the sentence.",
        "In this approach the information about NULL categories is encoded into the label set of the structure.",
        "In these experiments we have used only Projective sentences from the treebank.",
        "Non-projectivity makes it difficult to identify the exact position of NULLs during introduction of NULLs in the sentence.",
        "The rest of the paper is divided into the following sections: Section 2 discusses about the related work.",
        "Section 3 gives an overview of the Hindi data we have used for our experiments.",
        "Section 4 contains the details of our approach and section 5 discusses about experiments, parser, results and discussion.",
        "We conclude the paper in section 6 with a summary and the future work."
      ]
    },
    {
      "heading": "2 Related Work",
      "text": [
        "Previous work related to Empty categories prediction on Hindi data is done by Gsk et al. (2011) which is a rule based approach for detection of Empty categories and also presented detailed analysis of different types of Empty categories present in the Hindi treebank.",
        "They used hand-crafted rules in order to identify each type of Empty category.",
        "As this is a rule based approach it becomes language specific.",
        "There are many approaches for the recovery of empty categories in the treebanks like Penn treebank, both ML based (Collins, 1997; Johnson, 2002; Seeker et al., 2012), and rule based (Campbell, 2004).",
        "Some approaches such as Yang and Xue (2010) follow a post processing step of recovering empty categories after parsing the text.",
        "Gsk et al. (2011) have discussed about different types of Empty categories in Hindi Treebank in detailed",
        "manner.",
        "The main types of Empty categories are: ?",
        "Empty Subject where a clause is dependent on missing subject (NP) of the verb, denoted as NULL NP or NULL PRP.",
        "?",
        "Backward Gapping where the verb (VM) is absent in the clause that occurs before a coordinating conjunct, denoted as NULL VM ?",
        "Forward Gapping where the verb (VM) is absent in the clause that occurs after a coordinating conjunct, denoted as NULL VM.",
        "?",
        "Conjunction Ellipses where the Conjunction (CC) is absent in the sentence, denoted as NULL CC."
      ]
    },
    {
      "heading": "3 Data",
      "text": [
        "We have used COLING-MTPIL workshop 2012 data for our experiments.",
        "This was released by the organizers as part of the shared task in two different settings.",
        "One being the manually annotated data with POS tags, chunks and other information such as gender, number, person etc.",
        "whereas the other one contains only automatic POS tags without any other information.",
        "We have used Gold standard data with",
        "treebank.",
        "all features provided for our experiments.",
        "Training set contains 12,041 sentences, development data set consists of 1233 sentences and testing data set consists of 1828 sentences.",
        "In our experiments we have worked with only projective sentences.",
        "We have combined the training and development data sets into one data set and used as training in the final experiments.",
        "Training and Development data together consists of 544 NULL instances (in 436 sentences) of 10,690 sentences.",
        "The major types of Empty categories present in the training data are of type NULL CC, NULL VM, NULL NN and NULL PRP categories.",
        "Table 1 and Table 2 show the number of instances of each category.",
        "Testing data consists of 80 instances (72 sentences) of 1455 sentences."
      ]
    },
    {
      "heading": "4 Approach",
      "text": [
        "There are 3 main steps involved in this process."
      ]
    },
    {
      "heading": "4.1 Pre-Processing",
      "text": [
        "In the first step, we encode information about presence of Empty categories in a sentence into the dependency relation label set of the sentence.",
        "If NULLs are present in a sentence, we remove the NULLs from the respective sentence in the treebank.",
        "In a sentence the dependents or children of a NULL category are attached to the parent of the NULL category and their respective labels are combined with dependency label of NULL category which indicates the presence of NULL and also says that such words or tokens are children of NULL category.",
        "Instead of just combining the labels we also add a sense of direction to the complex label which indicates whether the position of NULL is to the right or left of this token in the sentence and subsequently NULLs are also detached from its parent node.",
        "Therefore a complex label in a sentence indicates the presence of a NULL category in the sentence.",
        "Example: Null-label r dep-label is a generic type of a complex label.",
        "In this format ?r?",
        "indicates that a NULL instance is to the right of this token.",
        "Null-label is the dependency relation label joining the Null instance and its parent and dep-label is the dependency relation label joining the current token or word to its parent which is a NULL instance.",
        "Figure 2 illustrates this step."
      ]
    },
    {
      "heading": "4.2 Data-driven parsing",
      "text": [
        "In the second step a Data-driven parser is trained using the training data (with complex dependency relation labels) and when this parser model is used on the test data it predicts the complex labels in the output.",
        "In this approach we have tried out different data-driven parsers such as Malt (Nivre et al., 2006), Turbo (Martins et al., 2010) and MST (McDonald et al., 2005) for this experiment which were shown earlier to be performing better for Hindi Parsing by Kukkadapu et al. (2012) and found that Malt parser performs better than the rest on this data with complex labels."
      ]
    },
    {
      "heading": "4.3 Post-processing",
      "text": [
        "In the final step, Post-processing is applied on the output predicted by the parser in the above step.",
        "In this step presence of NULLs are identified using the complex labels and their position in the sentence is identified using sense of direction in these labels (i.e., whether NULL instance is to the left ?l?",
        "or right ?r?",
        "of this token).",
        "During the insertion of NULLs into the sentence Projectivity of the sentence must be preserved.",
        "Keeping this constraint intact and using the direction information from the dependency relation labels, NULLs are introduced into the sentence.",
        "Figure 2 illustrates this step.",
        "The advantage in using statistical approach rather than a rule based approach to predict NULLs is, it",
        "can be easily used to predict NULLs in other MoR-FWO languages.",
        "The problem with this approach is, it can't handle Empty categories occurring as Leaf nodes (or Terminal nodes in the dependency tree) and as Root nodes.",
        "As we have mentioned earlier, the dependency annotation scheme of Hindi language does not allow for Empty categories to occur as Leaf nodes (or Terminal nodes).",
        "But if these Empty categories occur as Root nodes in the dependency tree then such cases are not disturbed in our approach."
      ]
    },
    {
      "heading": "5 Experiments and Results",
      "text": []
    },
    {
      "heading": "5.1 Parser settings",
      "text": [
        "As mentioned earlier we had used Malt parser for our experiments.",
        "Malt Parser implements the transition based approach to dependency parsing which has two components:",
        "1) A transition system for mapping sentences into dependency trees.",
        "2) A classifier for predicting the next transition for",
        "every possible system configuration.",
        "Malt parser provides two learning algorithms LIBSVM and LIBLINEAR.",
        "It also provides various options for parsing algorithms and we have experimented on nivre-eager, nivre-standard and stack-proj parsing algorithms.",
        "Nivre-eager has shown good results in our experiments."
      ]
    },
    {
      "heading": "5.2 Features and Template",
      "text": [
        "Feature model is the template, which governs the learning from the given training data.",
        "We observed feature model used by Kosaraju et al. (2010) performs best.",
        "In order to get best results in the second step (Data-driven parsing) we have experimented with",
        "various features provided in the data.",
        "Kosaraju et al. (2010) and Husain et al. (2010) showed the best features that can be used in FEATS column in CoNLLX format.",
        "These features are vibhakti (post positional marker), TAM (tense, aspect and modality), chunk features like chunk head, chunk distance and chunk boundary information have proved to be effective in parsing of Hindi language and our results on overall accuracy of data is consistent with their results."
      ]
    },
    {
      "heading": "5.3 Results and Discussion",
      "text": [
        "The Results obtained on the test dataset are shown below and Recall on each Empty category are given in Table 3: The Results obtained by using this approach on the test set including all the Empty category types is as follows:",
        "In computation of the above results the exact position of NULLs in the sentence are not considered.",
        "These values indicate the efficiency of the system in identifying the presence of the Empty categories in the system.",
        "However, this approach inserted the",
        "NULLs in exact positions with a Precision of more than 85%, i.e., of all the NULL instances it has inserted correctly, it has inserted 85% of them in exact positions in the sentences.",
        "The approach was able to insert NULL NP tokens with good accuracy but it had a tough time predicting NULL VM tokens.",
        "This was also consistent with Gsk et al. (2011) conclusions about Empty categories in Hindi treebank.",
        "In case of NULL VM categories we have observed some inconsistency in the annotation of these sentences.",
        "In these sentences which have multiple clauses with main verb (VM) token missing, certain sentences are annotated with NULL VM for each clause where main verb (VM) token is missing and certain sentences are annotated with one NULL VM for all the clauses with main verb (VM) missing.",
        "This may be a reason for accuracy drop in predicting NULL VM tokens.",
        "The main reason for low accuracy as we have observed is that the output predicted by the parser is low for these complex labels.",
        "The test data consists of 202 complex labels whereas the parser has been able to predict only 102 of them, which is a huge drop in accuracy for complex labels.",
        "The overall accuracy of parser on the test data (only projective sentences) has been high 91.11%(LAS), 95.86%(UAS) and 92.65%(LS).",
        "The low accuracy of the parser on complex labels may be due to less number of these instances compared to size of the corpus.",
        "Another reason may be due to the introduction of complex labels the size of label set has increased significantly and it may be difficult for the parser to learn the rare labels."
      ]
    },
    {
      "heading": "6 Conclusion and Future work",
      "text": [
        "In this paper, we presented a statistical approach to Empty category prediction using Data-driven parsing.",
        "We have used state-of-the-art parser for Hindi language with an accuracy above 90% and have achieved a decent F-score of 76.26 in predicting Empty categories.",
        "We look to try out this approach for other MoR-FWO languages and compare the performances on different languages.",
        "We need to identify Features which would help in identifying NULL CC category and also should try this approach on a big data set with a significant number of instances of NULLs and also look to extend this approach to Non-Projective sentences."
      ]
    }
  ]
}
