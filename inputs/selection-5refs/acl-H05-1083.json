{
  "info": {
    "authors": [
      "Xiaoqiang Luo",
      "Imed Zitouni"
    ],
    "book": "Human Language Technology Conference and Empirical Methods in Natural Language Processing",
    "id": "acl-H05-1083",
    "title": "Multi-Lingual Coreference Resolution With Syntactic Features",
    "url": "https://aclweb.org/anthology/H05-1083",
    "year": 2005
  },
  "references": [
    "acl-H05-1004",
    "acl-H93-1025",
    "acl-J01-4002",
    "acl-J01-4004",
    "acl-J93-2004",
    "acl-J94-4002",
    "acl-J96-1002",
    "acl-M95-1005",
    "acl-N04-1037",
    "acl-P00-1023",
    "acl-P02-1014",
    "acl-P03-1023",
    "acl-P04-1018",
    "acl-P98-2143",
    "acl-W04-1602",
    "acl-W98-1119"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In this paper, we study the impact of a group of features extracted automatically from machine-generated parse trees on coreference resolution.",
        "One focus is on designing syntactic features using the binding theory as the guideline to improve pronoun resolution, although linguistic phenomenon such as apposition is also modeled.",
        "These features are applied to the Arabic, Chinese and English coreference resolution systems and their effectiveness is evaluated on data from the Automatic Content Extraction (ACE) task.",
        "The syntactic features improve the Arabic and English systems significantly, but play a limited role in the Chinese one.",
        "Detailed analyses are done to understand the syntactic features’ impact on the three coreference systems."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "A coreference resolution system aims to group together mentions referring to the same entity, where a mention is an instance of reference to an object, and the collection of mentions referring to the same object in a document form an entity.",
        "In the following example: (I) “John believes himself to be the best student.” mentions are underlined.",
        "The three mentions “John”, “himself”, “the best student” are of type name, pronoun 1, and nominal, respectively.",
        "They form an entity since they all refer to the same person.",
        "Syntactic information plays an important role in coreference resolution.",
        "For example, the binding theory (Haegeman, 1994; Beatrice and Kroch, 2000) provides a good account of the constraints on the antecedent of English pronouns.",
        "The theory relies on syntactic parse trees to determine the governing category which defines the scope 1“Pronoun” in this paper refers to both anaphor and normal pronoun.",
        "of binding constraints.",
        "We will use the theory as a guideline to help us design features in a machine learning framework.",
        "Previous pronoun resolution work (Hobbs, 1976; Lappin and Leass,1994; Ge et al., 1998; Stuckardt, 2001) explicitly utilized syntactic information before.",
        "But there are unique challenges in this study: (1) Syntactic information is extracted from parse trees automatically generated.",
        "This is possible because of the availability of statistical parsers, which can be trained on human-annotated treebanks (Marcus et al., 1993; Xia et al., 2000; Maamouri and Bies, 2004) for multiple languages; (2) The binding theory is used as a guideline and syntactic structures are encoded as features in a maximum entropy coreference system; (3) The syntactic features are evaluated on three languages: Arabic, Chinese and English (one goal is to see if features motivated by the English language can help coreference resolution in other languages).",
        "All contrastive experiments are done on publicly-available data; (4) Our coreference system resolves coreferential relationships among all the annotated mentions, not just for pronouns.",
        "Using machine-generated parse trees eliminates the need of hand-labeled trees in a coreference system.",
        "However, it is a major challenge to extract useful information from these noisy parse trees.",
        "Our approach is encoding the structures contained in a parse tree into a set of computable features, each of which is associated with a weight automatically determined by a machine learning algorithm.",
        "This contrasts with the approach of extracting rules and assigning weights to these rules by hand (Lappin and Leass, 1994; Stuckardt, 2001).",
        "The advantage of our approach is robustness: if a particular structure is helpful, it will be assigned a high weight; if a feature is extracted from a highly noisy parse tree and is not informative in coreference resolution, it will be assigned a small weight.",
        "By avoiding writing rules, we automatically incorporate useful information into our model and at the same time limit the potentially negative impact from noisy parsing output."
      ]
    },
    {
      "heading": "2 Statistical Coreference Resolution Model",
      "text": [
        "Our coreference system uses a binary entity-mention model PL (·|e, m) (henceforth “link model”) to score the action of linking a mention m to an entity e. In our implementation, the link model is computed as",
        "where m' is one mention in entity e, and the basic model building block PL (L = 1|e, m', m) is an exponential or maximum entropy model (Berger et al., 1996):",
        "where Z(e, m', m) is a normalizing factor to ensure that PL (· |e, m', m) is a probability, {gi (e, m', m, L) } are features and {ai} are feature weights.",
        "Another start model is used to score the action of creating a new entity with the current mention m. Since starting a new entity depends on all the partial entities created in the history {ei}i��,we use the following approximation:",
        "In the maximum-entropy model (2), feature (typically binary) functions {gi (e, m', m, ·)} provide us with a flexible framework to encode useful information into the the system: it can be as simple as “gi (e, m', m, L = 1) = 1 if m' and m have the same surface string,” or “gj (e, m', m, L = 0) = 1 if e and m differ in number,” or as complex as “gl(e, m', m, L = 1) = 1 if m' c-commands m and m' is a NAME mention and m is a pronoun mention.” These feature functions bear similarity to rules used in other coreference systems (Lappin and Leass, 1994; Mitkov, 1998; Stuckardt, 2001), except that the feature weights {Ai} are automatically trained over a corpus with coreference information.",
        "Learning feature weights automatically eliminates the need of manually assigning the weights or precedence of rules, and opens the door for us to explore rich features extracted from parse trees, which is discussed in the next section."
      ]
    },
    {
      "heading": "3 Syntactic Features",
      "text": [
        "In this section, we present a set of features extracted from syntactic parse trees.",
        "We discuss how we approximately compute linguistic concepts such as governing category (Haegeman, 1994), apposition and dependency relationships from noisy syntactic parse trees.",
        "While parsing and parse trees depend on the target language, the automatic nature of feature extraction from parse trees makes the process language-independent."
      ]
    },
    {
      "heading": "3.1 Features Inspired by Binding Theory",
      "text": [
        "The binding theory (Haegeman, 1994) concerning pronouns can be summarized with the following principles:",
        "1.",
        "A reflexive or reciprocal pronoun (e.g., “herself” or “each other”) must be bound in its governing category (GC).",
        "2.",
        "A normal pronoun must be free in its governing cat",
        "The first p ciple states that the antecedent of a reflexive or reciprocal pronoun is within its GC, while the second principle says that the antecedent of a normal pronoun is outside its GC.",
        "While the two principles are simple, they all rely on the concept of governing category, which is defined as the minimal domain containing the pronoun in question, its governor, and an accessible subject.",
        "The concept GC can best be explained with a few examples in Figure 1, where the label of a head constituent is marked within a box, and GC, accessible subject, and governor constituents are marked in parentheses with “GC”, “Sub” and “gov.” Noun-phrases (NP) are numbered for the convenience of referencing.",
        "For example, in sub-figure (1) of Figure 1, the governor of “himself” is “likes,” the subject is “John,” hence the GC is the entire sentence spanned by the root “S.” Since “himself” is reflexive, its antecedent must be “John” by Principle 1.",
        "The parse tree in sub-figure (2) is the same as that in sub-figure (1), but since “him” is a normal pronoun, its antecedent, according to Principle 2, has to be outside the GC, that is, “him” cannot be coreferenced with “John.”.",
        "Sentence in sub-figure (3) is slightly more complicated: the governor of “herself” is “description,” and the accessible subject is “Miss Smith.” Thus, the governing category is NP6.",
        "The first principle implies that the antecedent of “herself” must be “Miss Smith.” It is clear from these examples that GC is very useful in finding the antecedent of a pronoun.",
        "But the last example shows that determining GC is not a trivial matter.",
        "Not only is the correct parse tree required, but extra information is also needed to identify the head governor",
        "and the minimal constituent dominating the pronoun, its governor and an accessible subject.",
        "Determining the accessible subject itself entails checking other constraints such as number and gender agreement.",
        "The complexity of computing governing category, compounded with the noisy nature of machine-generated parse tree, prompts us to compute a set of features that characterize the structural relationship between a candidate mention and a pronoun, as opposed to explicitly identify GC in a parse tree.",
        "These features are designed to implicitly model the binding constraints.",
        "Given a candidate antecedent or mention ml and a pronoun mention m2 within a parsed sentence, we first test if they have c-command relation, and then a set of counting features are computed.",
        "The features are detailed as follows:",
        "(1) C-command ccmd(ml, m2) : A constituent X c",
        "commands another constituent Y in a parse tree if the first branching node dominating X also dominates Y.",
        "The binary feature ccmd(ml, m2) is true if the minimum NP dominating ml c-commands the minimum NP dominating m2.",
        "In sub-figure (1) of Figure 1, NP1 c-commands NP2 since the first branching node dominating NP1 is S and it dominates NP2.",
        "If ccmd(ml, m2) is true, we then define the c-command path T (ml, m2) as the path from the minimum NP dominating m2 to the first branching node that dominates the minimum NP dominating ml.",
        "In sub-figure (1) of Figure 1, the c-command path T(“John”, “himself”) would be “NP2-VP-S.”",
        "(2) NP_count(ml, m2): If ccmd(ml, m2) is true, then NP_count(ml, m2) counts how many NPs are seen on the c-command path T(ml, m2), excluding two endpoints.",
        "In sub-figure (1) of Figure 1, NPcount(“John”, “himself”) = 0 since there is no NP on T(“John”, “himself”).",
        "(3) VP_count(ml, m2): similar to NP_count(ml, m2), except that this feature counts how many verb phrases (VP) are seen on the c-command path.",
        "In sub-figure (1) of Figure 1, VPcount(“John”, “himself”) is true since there is one VP on T(“John”, “himself”).",
        "(4) S_count(ml, m2): This feature counts how many",
        "clauses are seen on the c-command path when ccmd(ml, m2) is true.",
        "In sub-figure (1) of Figure 1, Scount(“John”, “himself”) = 0 since there is no clause label on T(“John”, “himself”).",
        "These features are designed to capture information in the concept of governing category when used in conjunction with attributes (e.g., gender, number, reflexiveness) of individual pronouns.",
        "Counting the intermediate NPs, VPs and sub-clauses implicitly characterizes the governor of a pronoun in question; the presence or absence of a sub-clause indicates whethere or not a coreferential relation is across clause boundary."
      ]
    },
    {
      "heading": "3.2 Dependency Features",
      "text": [
        "In addition to features inspired by the binding theory, a set of dependency features are also computed with the help of syntactic parse trees.",
        "This is motivated by examples such as “John is the president of ABC Corporation,” where “John” and “the president” refer to the same person and should be in the same entity.",
        "In scenarios like this, lexical features do not help, while the knowledge that “John” left-modifies the verb “is” and the “the president” right-modifies the same verb would be useful.",
        "Given two mentions ml and m2 in a sentence, we compute the following dependency features: (1)samehead(ml, m2): The feature compares the bi-lexical dependencies (ml, h(ml)), and (m2i h(m2)), where h(x) is the head word which x modifies.",
        "The feature is active only if h(ml) = h(m2), in which case it returns h(ml).",
        "(2)samePOS(ml, m2): To get good coverage of dependencies, we compute a feature same-POS(ml, m2), which examines the same dependency as in (1) and returns the common head part-of-speech (POS) tag if",
        "The head child nodes are marked with boxes in Figure 1.",
        "For the parse tree in sub-figure (1), samehead(“John”, “him”) would return “likes” as “John” left-modifies “likes” while “him” right-modifies “likes,” and samePOS (“John”, “him”) would return “V” as the POS tag of “likes” is“V.”",
        "(3) mod(ml, m2): the binary feature is true if ml modifies m2.",
        "For parse tree (2) of Figure 1, mod(“John”, “him”) returns false as “John” does not modify “him” directly.",
        "A reverse order feature mod(m2i ml) is computed too.",
        "(4) same_head2(ml, m2): this set of features examine second-level dependency.",
        "It compares the head word of h(ml), or h(h(ml)), with h(m2) and returns the common head if h(h(ml)) = h(m2).",
        "A reverse order feature same_head2(m2i ml) is also computed.",
        "(5) same_POS2(ml, m2): similar to (4), except that it computes the second-level POS.",
        "A reverse order feature same_POS2(m2i ml) is computed too.",
        "(6) same_head22(m1, m2): it returns the common second-level head if h(h(ml)) = h(h(m2))."
      ]
    },
    {
      "heading": "3.3 Apposition and Same-Parent Features",
      "text": [
        "Apposition is a phenomenon where two adjacent NPs refer to the same entity, as “Jimmy Carter” and “the former president” in the following example: (II) “Jimmy Carter, the former president of US, is visiting Europe.” Note that not all NPs separated by a comma are necessarily appositive.",
        "For example, in “John called Al, Bob, and Charlie last night,” “Al” and “Bob” share a same NP",
        "parent and are separated by comma, but they are not appositive.",
        "To compute the apposition feature appos(ml, m2) for mention-pair (ml, m2), we first determine the minimum dominating NP of ml and m2.",
        "The minimum dominating NP of a mention is the lowest NP, with an optional modifying phrase or clause, that spans the mention.",
        "If the two minimum dominating NPs have the same parent NP, and they are the only two NP children of the parent, the value of appos(ml, m2) is true.",
        "This would exclude “Al” and “Bob” in “John called Al, Bob, and Charlie last night” from being computed as apposition.",
        "We also implement a feature same_parent(ml, m2) which tests if two mentions ml and m2 are dominated by a common NP.",
        "The feature helps to prevent the system from linking “his” with “colleague” in the sentence “John called his colleague.” All the features described in Section 3.1-3.3 are computed from syntactic trees generated by a parser.",
        "While the parser is language dependent, feature computation boils down to encoding the structural relationship of two mentions, which is language independent.",
        "To test the effectiveness of the syntactic features, we integrate them into 3 coreference systems processing Arabic, Chinese and English."
      ]
    },
    {
      "heading": "4 Experimental Results",
      "text": []
    },
    {
      "heading": "4.1 Data and System Description",
      "text": [
        "All experiments are done on true mentions of the ACE (NIST, 2004) 2004 data.",
        "We reserve part of LDC-released 2004 data as the development-test set (henceforth “devtest”) as follows: documents are sorted by their date and time within each data source (e.g., broadcast news (bnews) and news wire (nwire) are two different sources) and the last 25% documents of each data source are reserved as the devtest set.",
        "Splitting data on chronological order simulates the process of a system’s development and deployment in the real world.",
        "The devtest set statistics of three languages (Arabic, Chinese and English) is summarized in Table 1, where the number of documents, mentions and entities is shown on row 2 through 4, respectively.",
        "The rest of 2004 ACE data together with earlier ACE data is used as training."
      ]
    },
    {
      "heading": "4.2 Performance Metrics",
      "text": [
        "The official performance metric in the ACE task is ACE-Value (NIST, 2004).",
        "The ACE-Value is an entity-based metric computed by subtracting a normalized cost from 1 (so it is unbounded below).",
        "The cost of a system is a weighted sum of costs associated with entity misses, false alarms and errors.",
        "This cost is normalized against the cost of a nominal system that outputs no entity.",
        "A perfect coreference system gets 100% ACE-Value while a system outputting many false-alarm entities could get a negative value.",
        "The default weights in ACE-Value emphasize names, and severely discount pronouns: the relative importance of a pronoun is two orders of magnitude less than that of a name.",
        "So the ACE-Value will not be able to accurately reflect a system’s improvement on pronouns 2.",
        "For this reason, we compute an unweighted entity-constrained mention F-measure (Luo, 2005) and report all contrastive experiments with this metric.",
        "The F-measure is computed by first aligning system and reference entities such that the number of common mentions is maximized and each system entity is constrained to align with at most one reference entity, and vice versa.",
        "For example, suppose that a reference document contains three entities: {[ml], [m2i m31, [m4]} while a system outputs four entities: {[ml, m21, [m3], [m5], [m6]}, where {mi : i = 1, 2, · · · , 6} are mentions, then the best alignment from reference to system would be [ml] '�* [ml, m21, [m2i m31 '�* [m3] and other entities are not aligned.",
        "The number of common mentions of the best alignment is 2",
        "(i.e., ml and ms), thus the recall is 4 and precision is 2Due to the one-to-one entity alignment constraint the V • tY, F-measure here is more stringent than the accuracy (Ge et al., 1998; Mitkov, 1998; Kehler et al., 2004) computed on antecedent-pronoun pairs."
      ]
    },
    {
      "heading": "4.3 Effect of Syntactic Features",
      "text": [
        "We first present the contrastive experimental results on the devtest described in subsection 4.1.",
        "Two coreference systems are trained for each language: a baseline without syntactic features, and a system including the syntactic features.",
        "The entity-constrained F-measures with mention-type breakdown are presented in Table 2.",
        "Rows marked with N,,,, contain the number of mentions, while rows with “base” and “+synt” are F-measures for the baseline and the system with the syntactic features, respectively.",
        "The syntactic features improve pronoun mentions across three languages – not surprising since features inspired by the binding theory are designed to improve pronouns.",
        "The pronoun improvement on the Arabic (from 73.2% to 74.6%) and English (from 69.2% to 72.0%) system is statistically significant (at above 95% confidence level), but change on the Chinese system is not.",
        "For Arabic, the syntactic features improve Arabic NAM, NOM and PRE mentions, probably because Arabic pronouns are sometimes attached to other types of mentions.",
        "For Chinese and English, the syntactic features do not practically change the systems’ performance.",
        "As will be shown in Section 4.5, the baseline systems without syntactic features are already competitive, compared with the results on the coreference evaluation track (EDR-coref) of the ACE 2004 evaluation (NIS, 2004).",
        "So it is nice to see that syntactic features further improve a good baseline on Arabic and English."
      ]
    },
    {
      "heading": "4.4 Error Analyses",
      "text": [
        "From the results in Table 2, we know that the set of syntactic features are working in the Arabic and English system.",
        "But the results also raise some questions: Are there interactions among the the syntactic features and other features?",
        "Why do the syntactic features work well for Arabic and English, but not Chinese?",
        "To answer these questions, we look into each system and report our findings in the following sections."
      ]
    },
    {
      "heading": "4.4.1 English System",
      "text": [
        "Our system uses a group of distance features.",
        "One observation is that information provided by some syntactic features (e.g., VP_count(ml, m2) etc) may have overlapped with some of the distance features.",
        "To test if this is the case, we take out the distance features from the English system, and then train two systems, one with the syntactic features, one without.",
        "The results are shown in Table 3, where numbers on the row “b-dist” are F-measures after removing the distance features from the baseline, and numbers on the row “b-dist+synt” are with the syntactic features.",
        "As can be seen, the impact of the syntactic features is much larger when the distance features are absent in the system: performance improves across all the four mention types after adding the syntactic features, and the overall F-measure jumps from 72.5% to 79.3%.",
        "The PRE type gets the biggest improvement since features extracted from parse trees include apposition, same-parent test, and dependency features, which are designed to help mention pairs in close distance, just as in the case of PRE mentions.",
        "Comparing the numbers in Table 3 with the English baseline of Table 2, we can also conclude that distance features and syntactic features lead to about the same level of performance when the other set of features is not used.",
        "When the distance features are used, the syntactic features further help to improve the performance of the NOM and PRO mention type, albeit to a less degree because of information overlap between the two sets of features."
      ]
    },
    {
      "heading": "4.4.2 Chinese System",
      "text": [
        "Results in Table 2 show that the syntactic features are not so effective for Chinese as for Arabic and English.",
        "The",
        "first thing we look into is if there is any idiosyncrasy in the Chinese language.",
        "In Table 4, we list the statistics collected over the training sets of the three languages: the second row are the total number of mentions, the third row the number of pronoun mentions, the fourth row the number of events where the c-command feature ccmd(ml, m2) is used, and the last row the average number of c-command features per pronoun (i.e., the fourth row divided by the third row).",
        "A pronouns event is defined as a tuple of training instance (e, ml, m2) where ml is a mention in entity e, and the second mention m2 is a pronoun.",
        "From Table 4, it is clear that Chinese pronoun distribution is very different: pronoun mentions account for about 8.7% of the total mentions in Chinese, while 29.0% of Arabic mentions and 25.1% of English mentions are pronouns (the same disparity can be observed in the devtest set in Table 2).",
        "This is because Chinese is a pro-drop language (Huang, 1984): for example, in the Chinese Penn treebank version 4, there are 4933 overt pronouns, but 5750 pro-drops!",
        "The ubiquity of pro-drops in Chinese results in signigicantly less pronoun training events.",
        "Consequently, the pronoun-related features are not trained as well as in English and Arabic.",
        "One way to quantify this is by looking at the average number of c-command features on a per-pronoun basis: as shown in the last row of Table 4, the c-command feature is seen more than twice often in Arabic and English as in Chinese.",
        "Since low-count features are filtered out, the sparsity of pronoun events prevent many compound features (e.g., conjunction of syntactic and distance features) from being trained in the Chinese system, which explains why the syntactic features do not help Chinese pronouns."
      ]
    },
    {
      "heading": "4.4.3 Arabic System",
      "text": [
        "As stated in Table 4, 29.0% of Arabic mentions are pronouns, compared to a slightly lower number (25.1%) for English.",
        "This explains the relatively high positive impact of the syntactic features on the Arabic coreference system, compared to English and Chinese systems.",
        "To understand how syntactic features work in the Arabic system, we examine two examples extracted from the devtest set: (1) the first example shows the negative impact of syntactic features because of the noisy parsing output, and (2) the second example proves the effectiveness of the syntactic features to find the dependency between two mentions.",
        "In both examples, the baseline system and the system with syntactic features give different results.",
        "Let’s consider the following sentence:",
        "The English text shown above is a word-to-word translation of the Arabic text (read from right-to-left).",
        "In this example,,the parser wrongly put the nominal mention �..�J 1 (Jerusalem) and the pronominal mention a: _d I (the-city) under the same constituent, which activates the same-parent feature.",
        "The use of the feature same_parent(Lr-GJI, <: – d I) leads to the two mentions being put into different entities.",
        "This is because there are many cases in the training data where two mentions under the same parent are indeed in different entities: a similar English example is “John called his sister”, where “his” and “sister” belong to two different entities.",
        "The same parent feature is a strong indicator of not putting them into the same entity.",
        "Table 5: An example where syntactic features help to link the PRO mention rA (hm) with its antecedent, the NAM mention vyal9JJ I (AlzqAqywn): top – Arabic sentence; middle – corresponding romanized sentence; bottom – token-to-token English translation.",
        "Table 5 shows another example in the devtest set.",
        "The top part presents the segmented Arabic text, the middle part is the corresponding romanized text, and the bottom part contains the token-to-token English translation.",
        "Note that Arabic text reads from right to left and its corresponding romanized text from left to right (i.e., the rightmost Arabic token maps to the leftmost romanized token).",
        "The parser output the correct syntactic structure: Figure 2 shows a portion of the system-generated parse tree.",
        "It can be checked that NP1 c-commands NP2 and the group of features inspired by the binding theory are active.",
        "These features help to link the PRO(onominal) mention � (hm) with the NAM(e) mention vy�s\"+l\"s�l I (AlzqAqyw Without syntactic features theses two mentions were split into different entities."
      ]
    },
    {
      "heading": "4.5 ACE 2004 Results",
      "text": [
        "To get a sense of the performance level of our system, we report the results on the ACE 2004 official test set with both the F-measure and the official ACE-Value metric.",
        "This data is used as the blind test set which we run our system only once.",
        "Results are summarized in Table 6, where the second row (i.e. “base”) contains the baseline numbers, and the third row (i.e., “+synt”) contains the numbers from systems with the syntactic features.",
        "Columns under “F” are F-measure and those under “AV” are ACE-Value.",
        "The last row N,,,, contains the number of mentions in the three test sets.",
        "The performance of three full (“+synt”) systems is remarkably close to that on the devtest set(cf. Table 2): For Arabic, F-measure is 80.1 on the devtest vs. 81.5 here; For Chinese, 84.9 vs. 84.7; And for English, 80.8 vs. 82.0.",
        "The syntactic features again help Arabic and English – statistically very significant in F-measure, but have no significant impact on Chinese.",
        "The performance consistency across the devtest and blind test set indicates that the systems are well trained.",
        "The F-measures are computed on all types of mentions.",
        "Improvement on mention-types targeted by the syntactic features is larger than the lump-sum F-measure.",
        "For example, the F-measure for English pronouns on this test set is improved from 69.5% to 73.7% (not shown in Table 6 due to space limit).",
        "The main purpose of Table 6 is to get a sense of performance level correspondence between the F-measure and ACE-Value.",
        "Also note that, for Arabic and English, the difference between the “base” and “+synt” systems, when measured by ACE-Value, is much smaller.",
        "This is not surprising since ACE-Value heavily discounts pronouns and is insensitive to improvement on pronouns – the very reason we adopt the F-measure in Section 4.3 and 4.4 when reporting the contrastive experiment results."
      ]
    },
    {
      "heading": "5 Related Work",
      "text": [
        "Many researchers have used the syntactic information in their coreference system before.",
        "For example, Hobbs (1976) uses a set of rules that are applied to parse trees to determine the antecedent of a pronoun.",
        "The rule precedence is determined heuristically and no weight is used.",
        "Lappin and Leass (1994) extracted rules from the output of the English Slot Grammar (ESG) (McCord, 1993).",
        "Rule weights are assigned manually and the system resolves the third person pronouns and reflexive pronouns only.",
        "Ge et al.",
        "(1998) uses a non-parametrized statistical model to find the antecedent from a list of candidates generated by applying the Hobbs algorithm to the English Penn Treebank.",
        "Kehler et al.",
        "(2004) experiments making use of predicate-argument structure extracted from a large TDT-corpus.",
        "Compared with these work, our work uses machine-generated parse trees from which trainable features are extracted in a maximum-entropy coreference system, while (Ge et al., 1998) assumes that correct parse trees are given.",
        "Feature weights are automatically trained in our system while (Lappin and Leass, 1994; Stuckardt, 2001) assign weights manually.",
        "There are a large amount of published work (Morton, 2000; Soon et al., 2001; Ng and Cardie, 2002; Yang et al., 2003; Luo et al., 2004; Kehler et al., 2004) using machine-learning techniques in coreference resolution.",
        "But none of these work tried to compute complex linguistic concept such as governing category 3 .",
        "Our work demonstrates how relevant linguistic knowledge can be derived automatically from system-generated parse trees and encoded into computable and trainable features in a machine-learning framework."
      ]
    },
    {
      "heading": "6 Conclusions",
      "text": [
        "In this paper, linguistic knowledge is used to guide us to design features in maximum-entropy-based coreference resolution systems.",
        "In particular, we show how to compute a set of features to approximate the linguistic notions such as governing category and apposition, and how to compute the dependency features using syntactic parse trees.",
        "While the features are motivated by examining English data, we see significant improvements on both English and Arabic systems.",
        "Due to the language idiosyncrasy (e.g., pro-drops), we do not see the syntactic features change the Chinese system significantly."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "This work was partially supported by the Defense Advanced Research Projects Agency and monitored by SPAWAR under contract No.",
        "N66001-99-2-8916.",
        "The views and findings contained in this material are those of the authors and do not necessarily reflect the position of policy of the Government and no official endorsement should be inferred.",
        "Suggestions for improving the paper from the anonymous reviewers are gratefully acknowledged."
      ]
    }
  ]
}
