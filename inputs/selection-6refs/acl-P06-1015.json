{
  "info": {
    "authors": [
      "Patrick Pantel",
      "Marco Pennacchiotti"
    ],
    "book": "International Conference on Computational Linguistics and Annual Meeting of the Association for Computational Linguistics",
    "id": "acl-P06-1015",
    "title": "Espresso: Leveraging Generic Patterns for Automatically Harvesting Semantic Relations",
    "url": "https://aclweb.org/anthology/P06-1015",
    "year": 2006
  },
  "references": [
    "acl-A97-1051",
    "acl-C00-1072",
    "acl-C02-1144",
    "acl-C04-1111",
    "acl-C92-2082",
    "acl-N04-1041",
    "acl-P02-1006",
    "acl-P05-1014",
    "acl-P90-1034",
    "acl-P99-1008",
    "acl-P99-1016",
    "acl-W02-1111",
    "acl-W04-3206",
    "acl-W97-0313"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In this paper, we present Espresso, a weakly-supervised, general-purpose, and accurate algorithm for harvesting semantic relations.",
        "The main contributions are: i) a method for exploiting generic patterns by filtering incorrect instances using the Web; and ii) a principled measure of pattern and instance reliability enabling the filtering algorithm.",
        "We present an empirical comparison of Espresso with various state of the art systems, on different size and genre corpora, on extracting various general and specific relations.",
        "Experimental results show that our exploitation of generic patterns substantially increases system recall with small effect on overall precision."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Recent attention to knowledge-rich problems such as question answering (Paşca and Harabagiu 2001) and textual entailment (Geffet and Dagan 2005) has encouraged natural language processing researchers to develop algorithms for automatically harvesting shallow semantic resources.",
        "With seemingly endless amounts of textual data at our disposal, we have a tremendous opportunity to automatically grow semantic term banks and ontological resources.",
        "To date, researchers have harvested, with varying success, several resources, including concept lists (Lin and Pantel 2002), topic signatures (Lin and Hovy 2000), facts (Etzioni et al.",
        "2005), and word similarity lists (Hindle 1990).",
        "Many recent efforts have also focused on extracting semantic relations between entities, such as Marco Pennacchiotti ART Group - DISP University of Rome “Tor Vergata” Viale del Politecnico 1 Rome, Italy pennacchiotti@info.uniroma2.it entailments (Szpektor et al.",
        "2004), is-a (Ravi-chandran and Hovy 2002), part-of (Girju et al.",
        "2006), and other relations.",
        "The following desiderata outline the properties of an ideal relation harvesting algorithm:",
        "• Performance: it must generate both high precision and high recall relation instances; • Minimal supervision: it must require little or no human annotation; • Breadth: it must be applicable to varying corpus sizes and domains; and • Generality: it must be applicable to a wide va",
        "riety of relations (i.e., not just is-a or part-of).",
        "To our knowledge, no previous harvesting algorithm addresses all these properties concurrently.",
        "In this paper, we present Espresso, a general-purpose, broad, and accurate corpus harvesting algorithm requiring minimal supervision.",
        "The main algorithmic contribution is a novel method for exploiting generic patterns, which are broad coverage noisy patterns – i.e., patterns with high recall and low precision.",
        "Insofar, difficulties in using these patterns have been a major impediment for minimally supervised algorithms resulting in either very low precision or recall.",
        "We propose a method to automatically detect generic patterns and to separate their correct and incorrect instances.",
        "The key intuition behind the algorithm is that given a set of reliable (high precision) patterns on a corpus, correct instances of a generic pattern will fire more with reliable patterns on a very large corpus, like the Web, than incorrect ones.",
        "Below is a summary of the main contributions of this paper:",
        "• Algorithm for exploiting generic patterns: Unlike previous algorithms that require significant manual work to make use of generic patterns, we propose an unsupervised Web-filtering method for using generic patterns; and • Principled reliability measure: We propose a new measure of pattern and instance reliability which enables the use of generic patterns.",
        "Espresso addresses the desiderata as follows:",
        "• Performance: Espresso generates balanced precision and recall relation instances by exploiting generic patterns; • Minimal supervision: Espresso requires as input only a small number of seed instances; • Breadth: Espresso works on both small and large corpora – it uses Web and syntactic expansions to compensate for lacks of redundancy in small corpora; • Generality: Espresso is amenable to a wide variety of binary relations, from classical is-a and part-of to specific ones such as reaction and succession.",
        "Previous work like (Girju et al.",
        "2006) that has made use of generic patterns through filtering has shown both high precision and high recall, at the expensive cost of much manual semantic annotation.",
        "Minimally supervised algorithms, like (Hearst 1992; Pantel et al.",
        "2004), typically ignore generic patterns since system precision dramatically decreases from the introduced noise and bootstrapping quickly spins out of control."
      ]
    },
    {
      "heading": "2 Relevant Work",
      "text": [
        "To date, most research on relation harvesting has focused on is-a and part-of.",
        "Approaches fall into two categories: pattern and clustering-based.",
        "Most common are pattern-based approaches.",
        "Hearst (1992) pioneered using patterns to extract hyponym (is-a) relations.",
        "Manually building three lexico-syntactic patterns, Hearst sketched a bootstrapping algorithm to learn more patterns from instances, which has served as the model for most subsequent pattern-based algorithms.",
        "Berland and Charniak (1999) proposed a system for part-of relation extraction, based on the (Hearst 1992) approach.",
        "Seed instances are used to infer linguistic patterns that are used to extract new instances.",
        "While this study introduces statistical measures to evaluate instance quality, it remains vulnerable to data sparseness and has the limitation of considering only one-word terms.",
        "Improving upon (Berland and Charniak 1999), Girju et al.",
        "(2006) employ machine learning algorithms and WordNet (Fellbaum 1998) to disambiguate part-of generic patterns like “X’s Y” and “X of Y”.",
        "This study is the first extensive attempt to make use of generic patterns.",
        "In order to discard incorrect instances, they learn WordNet-based selectional restrictions, like “X(scene#4)’s Y(movie#1)”.",
        "While making huge grounds on improving precision/recall, heavy supervision is required through manual semantic annotations.",
        "Ravichandran and Hovy (2002) focus on scaling relation extraction to the Web.",
        "A simple and effective algorithm is proposed to infer surface patterns from a small set of instance seeds by extracting substrings relating seeds in corpus sentences.",
        "The approach gives good results on specific relations such as birthdates, however it has low precision on generic ones like is-a and part-of.",
        "Pantel et al.",
        "(2004) proposed a similar, highly scalable approach, based on an edit-distance technique, to learn lexico-POS patterns, showing both good performance and efficiency.",
        "Espresso uses a similar approach to infer patterns, but we make use of generic patterns and apply refining techniques to deal with wide variety of relations.",
        "Other pattern-based algorithms include (Riloff and Shepherd 1997), who used a semi-automatic method for discovering similar words using a few seed examples, KnowItAll (Etzioni et al.",
        "2005) that performs large-scale extraction of facts from the Web, Mann (2002) who used part of speech patterns to extract a subset of is-a relations involving proper nouns, and (Downey et al.",
        "2005) who formalized the problem of relation extraction in a coherent and effective combinatorial model that is shown to outperform previous probabilistic frameworks.",
        "Clustering approaches have so far been applied only to is-a extraction.",
        "These methods use clustering algorithms to group words according to their meanings in text, label the clusters using its members’ lexical or syntactic dependencies, and then extract an is-a relation between each cluster member and the cluster label.",
        "Caraballo (1999) proposed the first attempt, which used conjunction and apposition features to build noun clusters.",
        "Recently, Pantel and Ravichandran (2004) extended this approach by making use of all syntactic dependency features for each noun.",
        "The advantage of clustering approaches is that they permit algorithms to identify is-a relations that do not explicitly appear in text, however they generally fail to produce coherent clusters from fewer than 100 million words; hence they are unreliable for small corpora."
      ]
    },
    {
      "heading": "3 The Espresso Algorithm",
      "text": [
        "Espresso is based on the framework adopted in (Hearst 1992).",
        "It is a minimally supervised bootstrapping algorithm that takes as input a few seed instances of a particular relation and iteratively learns surface patterns to extract more instances.",
        "The key to Espresso lies in its use of generic patters, i.e., those broad coverage noisy patterns that",
        "extract both many correct and incorrect relation instances.",
        "For example, for part-of relations, the pattern “X of Y” extracts many correct relation instances like “wheel of the car” but also many incorrect ones like “house of representatives”.",
        "The key assumption behind Espresso is that in very large corpora, like the Web, correct instances generated by a generic pattern will be instantiated by some reliable patterns, where reliable patterns are patterns that have high precision but often very low recall (e.g., “X consists of Y” for part-of relations).",
        "In this section, we describe the overall architecture of Espresso, propose a principled measure of reliability, and give an algorithm for exploiting generic patterns."
      ]
    },
    {
      "heading": "3.1 System Architecture",
      "text": [
        "Espresso iterates between the following three phases: pattern induction, pattern ranking/selection, and instance extraction.",
        "The algorithm begins with seed instances of a particular binary relation (e.g., is-a) and then iterates through the phases until it extracts τ1 patterns or the average pattern score decreases by more than τ2 from the previous iteration.",
        "In our experiments, we set τ1 = 5 and τ2 = 50%.",
        "For our tokenization, in order to harvest multi-word terms as relation instances, we adopt a slightly modified version of the term definition given in (Justeson 1995), as it is one of the most commonly used in the NLP literature: ((Adj|Noun)+ |((Adj|Noun)*(NounPrep)?",
        ")(Adj|Noun)*)Noun"
      ]
    },
    {
      "heading": "Pattern Induction",
      "text": [
        "In the pattern induction phase, Espresso infers a set of surface patterns P that connects as many of the seed instances as possible in a given corpus.",
        "Any pattern learning algorithm would do.",
        "We chose the state of the art algorithm described in (Ravichandran and Hovy 2002) with the following slight modification.",
        "For each input instance {x, y}, we first retrieve all sentences containing the two terms x and y.",
        "The sentences are then generalized into a set of new sentences Sx,y by replacing all terminological expressions by a terminological label, TR.",
        "For example:",
        "Term generalization is useful for small corpora to ease data sparseness.",
        "Generalized patterns are naturally less precise, but this is ameliorated by our filtering step described in Section 3.3.",
        "As in the original algorithm, all substrings linking terms x and y are then extracted from Sx,y, and overall frequencies are computed to form P."
      ]
    },
    {
      "heading": "Pattern Ranking/Selection",
      "text": [
        "In (Ravichandran and Hovy 2002), a frequency threshold on the patterns in P is set to select the final patterns.",
        "However, low frequency patterns may in fact be very good.",
        "In this paper, instead of frequency, we propose a novel measure of pattern reliability, rπ, which is described in detail in Section 3.2.",
        "Espresso ranks all patterns in P according to reliability rπ and discards all but the top-k, where k is set to the number of patterns from the previous iteration plus one.",
        "In general, we expect that the set of patterns is formed by those of the previous iteration plus a new one.",
        "Yet, new statistical evidence can lead the algorithm to discard a pattern that was previously discovered."
      ]
    },
    {
      "heading": "Instance Extraction",
      "text": [
        "In this phase, Espresso retrieves from the corpus the set of instances I that match any of the patterns in P. In Section 3.2, we propose a principled measure of instance reliability, rι, for ranking instances.",
        "Next, Espresso filters incorrect instances using the algorithm proposed in Section 3.3 and then selects the highest scoring m instances, according to rι, as input for the subsequent iteration.",
        "We experimentally set m=200.",
        "In small corpora, the number of extracted instances can be too low to guarantee sufficient statistical evidence for the pattern discovery phase of the next iteration.",
        "In such cases, the system enters an expansion phase, where instances are expanded as follows: Web expansion: New instances of the patterns in P are retrieved from the Web, using the Google search engine.",
        "Specifically, for each instance {x, y} ∈ I, the system creates a set of queries, using each pattern in P instantiated with y.",
        "For example, given the instance “Italy, country” and the pattern “Y such as X”, the resulting Google query will be “country such as * ”.",
        "New instances are then created from the retrieved Web results (e.g. “Canada, country”) and added to I.",
        "The noise generated from this expansion is attenuated by the filtering algorithm described in Section 3.3.",
        "Syntactic expansion: New instances are created from each instance {x, y} ∈ I by extracting sub-terminological expressions from x corresponding to the syntactic head of terms.",
        "For ex",
        "ample, the relation “new record of a criminal conviction part-of FBI report” expands to: “new record part-of FBI report”, and “record part-of FBI report”."
      ]
    },
    {
      "heading": "3.2 Pattern and Instance Reliability",
      "text": [
        "Intuitively, a reliable pattern is one that is both highly precise and one that extracts many instances.",
        "The recall of a pattern p can be approximated by the fraction of input instances that are extracted by p. Since it is non-trivial to estimate automatically the precision of a pattern, we are wary of keeping patterns that generate many instances (i.e., patterns that generate high recall but potentially disastrous precision).",
        "Hence, we desire patterns that are highly associated with the input instances.",
        "Pointwise mutual information (Cover and Thomas 1991) is a commonly used metric for measuring this strength of association between two events x and y:",
        "We define the reliability of a pattern p, rπ(p), as its average strength of association across each input instance i in I, weighted by the reliability of each instance i: rπ(p)= III where rι(i) is the reliability of instance i (defined below) and maxpmi is the maximum pointwise mutual information between all patterns and all instances.",
        "rπ(p) ranges from [0,1].",
        "The reliability of the manually supplied seed instances are rι(i) = 1.",
        "The pointwise mutual information between instance i = {x, y} and pattern p is estimated using the following formula:"
      ]
    },
    {
      "heading": "Ix,*, yII*,p,*I",
      "text": [
        "where |x, p, y |is the frequency of pattern p instantiated with terms x and y and where the asterisk (*) represents a wildcard.",
        "A well-known problem is that pointwise mutual information is biased towards infrequent events.",
        "We thus multiply pmi(i, p) with the discounting factor suggested in (Pantel and Ravichandran 2004).",
        "Estimating the reliability of an instance is similar to estimating the reliability of a pattern.",
        "Intuitively, a reliable instance is one that is highly associated with as many reliable patterns as possible (i.e., we have more confidence in an instance when multiple reliable patterns instantiate it.)",
        "Hence, analogous to our pattern reliability measure, we define the reliability of an instance i, rι(i), as:",
        "where rπ(p) is the reliability of pattern p (defined earlier) and maxp mi is as before.",
        "Note that rι(i) and rπ(p) are recursively defined, where rι(i) = 1 for the manually supplied seed instances."
      ]
    },
    {
      "heading": "3.3 Exploiting Generic Patterns",
      "text": [
        "Generic patterns are high recall / low precision patterns (e.g, the pattern “X of Y” can ambiguously refer to a part-of, is-a and possession relations).",
        "Using them blindly increases system recall while dramatically reducing precision.",
        "Minimally supervised algorithms have typically ignored them for this reason.",
        "Only heavily supervised approaches, like (Girju et al.",
        "2006) have successfully exploited them.",
        "Espresso’s recall can be significantly increased by automatically separating correct instances extracted by generic patterns from incorrect ones.",
        "The challenge is to harness the expressive power of the generic patterns while remaining minimally supervised.",
        "The intuition behind our method is that in a very large corpus, like the Web, correct instances of a generic pattern will be instantiated by many of Espresso’s reliable patterns accepted in P. Recall that, by definition, Espresso’s reliable patterns extract instances with high precision (yet often low recall).",
        "In a very large corpus, like the Web, we assume that a correct instance will occur in at least one of Espresso’s reliable pattern even though the patterns’ recall is low.",
        "Intuitively, our confidence in a correct instance increases when, i) the instance is associated with many reliable patterns; and ii) its association with the reliable patterns is high.",
        "At a given Espresso iteration, where PR represents the set of previously selected reliable patterns, this intuition is captured by the following measure of confidence in an instance i = {x, y}:",
        "where T is the sum of the reliability scores rπ(p) for each pattern p ∈ PR, and",
        "where pointwise mutual information between instance i and pattern p is estimated with Google as follows:",
        "An instance i is rejected if S(i) is smaller than some threshold τ.",
        "Although this filtering may also be applied to reliable patterns, we found this to be detrimental in our experiments since most instances generated by reliable patterns are correct.",
        "In Espresso, we classify a pattern as generic when it generates more than 10 times the instances of previously accepted reliable patterns."
      ]
    },
    {
      "heading": "4 Experimental Results",
      "text": [
        "In this section, we present an empirical comparison of Espresso with three state of the art systems on the task of extracting various semantic relations."
      ]
    },
    {
      "heading": "4.1 Experimental Setup",
      "text": [
        "We perform our experiments using the following two datasets:",
        "• TREC: This dataset consists of a sample of articles from the Aquaint (TREC-9) newswire text collection.",
        "The sample consists of 5,951,432 words extracted from the following data files: AP890101 – AP890131, AP890201 – AP890228, and AP890310 – AP890319.",
        "• CHEM: This small dataset of 313,590 words consists of a college level textbook of introductory chemistry (Brown et al.",
        "2003).",
        "Each corpus is preprocessed using the Alembic Workbench POS-tagger (Day et al.",
        "1997).",
        "Below we describe the systems used in our empirical evaluation of Espresso.",
        "• RH02: The algorithm by Ravichandran and Hovy (2002) described in Section 2.",
        "• GI03: The algorithm by Girju et al.",
        "(2006) described in Section 2.",
        "• PR04: The algorithm by Pantel and Ravichandran (2004) described in Section 2.",
        "• ESP-: The Espresso algorithm using the pattern and instance reliability measures, but without using generic patterns.",
        "• ESP+: The full Espresso algorithm described in this paper exploiting generic patterns.",
        "For ESP+, we experimentally set τ from Section 3.3 to τ = 0.4 for TREC and τ = 0.3 for CHEM by manually inspecting a small set of instances.",
        "Espresso is designed to extract various semantic relations exemplified by a given small set of seed instances.",
        "We consider the standard is-a and part-of relations as well as the following more specific relations: • succession: This relation indicates that a person succeeds another in a position or title.",
        "For example, George Bush succeeded Bill Clinton and Pope Benedict XVI succeeded Pope John Paul II.",
        "We evaluate this relation on the TREC-9 corpus.",
        "• reaction: This relation occurs between chemical elements/molecules that can be combined in a chemical reaction.",
        "For example, hydrogen gas reacts-with oxygen gas and zinc reacts-with hydrochloric acid.",
        "We evaluate this relation on the CHEM corpus.",
        "• production: This relation occurs when a proc",
        "ess or element/object produces a result1.",
        "For example, ammonia produces nitric oxide.",
        "We evaluate this relation on the CHEM corpus.",
        "For each semantic relation, we manually extracted a small set of seed examples.",
        "The seeds were used for both Espresso as well as RH02.",
        "Table 1 lists a sample of the seeds as well as sample outputs from Espresso."
      ]
    },
    {
      "heading": "4.2 Precision and Recall",
      "text": [
        "We implemented the systems outlined in Section 4.1, except for GI03, and applied them to the",
        "TREC and CHEM datasets.",
        "For each output set, per relation, we evaluate the precision of the system by extracting a random sample of instances (50 for the TREC corpus and 20 for the CHEM corpus) and evaluating their quality manually using two human judges (a total of 680 instances were annotated per judge).",
        "For each instance, judges may assign a score of 1 for correct, 0 for incorrect, and ½ for partially correct.",
        "Example instances that were judged partially correct include “analyst is-a manager” and “pilot is-a teacher”.",
        "The kappa statistic (Siegel and Castel-lan Jr. 1988) on this task was Κ = 0.692.",
        "The precision for a given set of instances is the sum of the judges’ scores divided by the total instances.",
        "Although knowing the total number of correct instances of a particular relation in any non-trivial corpus is impossible, it is possible to compute the recall of a system relative to another system’s recall.",
        "Following (Pantel et al.",
        "2004), we define the relative recall of system A given system B, RA|B, as:",
        "where RA is the recall of A, CA is the number of correct instances extracted by A, C is the (unknown) total number of correct instances in the corpus, PA is A’s precision in our experiments,",
        "and |A |is the total number of instances discovered by A.",
        "Tables 2 – 8 report the total number of instances, precision, and relative recall of each system on the TREC-9 and CHEM corpora 34.",
        "The relative recall is always given in relation to the ESP system.",
        "For example, in Table 2, RH02 has a relative recall of 5.31 with ESP-, which means that the RH02 system outputs 5.31 times more correct relations than ESP (at a cost of much lower precision).",
        "Similarly, PR04 has a relative recall of 0.23 with ESP-, which means that PR04 outputs 4.35 fewer correct relations than ESP-(also with a smaller precision).",
        "We did not include the results from GI03 in the tables since the system is only applicable to part-of relations and we did not reproduce it.",
        "However, the authors evaluated their system on a sample of the TREC9 dataset and reported 83% precision and 72% recall (this algorithm is heavily supervised.)",
        "In all tables, RH02 extracts many more relations than ESP-, but with a much lower precision, because it uses generic patterns without filtering.",
        "The high precision of ESP is due to the effective reliability measures presented in Section 3.2."
      ]
    },
    {
      "heading": "4.3 Effect of Generic Patterns",
      "text": [
        "Experimental results, for all relations and the two different corpus sizes, show that ESP greatly outperforms the other methods on precision.",
        "However, without the use of generic patterns, the ESP system shows lower recall in all but the production relation.",
        "As hypothesized, exploiting generic patterns using the algorithm from Section 3.3 substantially improves recall without much deterioration in precision.",
        "ESP+ shows one to two orders of magnitude improvement on recall while losing on average below 10% precision.",
        "The succession relation in Table 6 was the only relation where Espresso found no generic pattern.",
        "For other relations, Espresso found from one to five generic patterns.",
        "Table 4 shows the power of generic patterns where system recall increases by 577 times with only a 10% drop in precision.",
        "In Table 7, we see a case where the combination of filtering with a large increase in retrieved instances resulted in both higher precision and recall.",
        "In order to better analyze our use of generic patterns, we performed the following experiment.",
        "For each relation, we randomly sampled 100 instances for each generic pattern and built a gold standard for them (by manually tagging each instance as correct or incorrect).",
        "We then sorted the 100 instances according to the scoring formula S(i) derived in Section 3.3 and computed the average precision, recall, and F-score of each top-K ranked instances for each pattern5.",
        "Due to lack of space, we only present the graphs for four of the 22 generic patterns: “X is a Y” for the is-a relation of Table 2, “X in the Y” for the part-of relation of Table 4, “X in Y” for the part-of relation of Table 5, and “X and Y” for the reaction relation of Table 7.",
        "Figure 1 illustrates the results.",
        "In each figure, notice that recall climbs at a much faster rate than precision decreases.",
        "This indicates that the scoring function of Section 3.3 effectively separates correct and incorrect instances.",
        "In Figure 1a), there is a big initial drop in precision that accounts for the poor precision reported in Table 1.",
        "Recall that the cutoff points on S(i) were set to τ = 0.4 for TREC and τ = 0.3 for CHEM.",
        "The figures show that this cutoff is far from the maximum F-score.",
        "An interesting avenue of future work would be to automatically determine the proper threshold for each individual generic pattern instead of setting a uniform threshold.",
        "5 We can directly compute recall here since we built a gold standard for each set of 100 samples."
      ]
    },
    {
      "heading": "5 Conclusions",
      "text": [
        "We proposed a weakly-supervised, general-purpose, and accurate algorithm, called Espresso, for harvesting binary semantic relations from raw text.",
        "The main contributions are: i) a method for exploiting generic patterns by filtering incorrect instances using the Web; and ii) a principled measure of pattern and instance reliability enabling the filtering algorithm.",
        "We have empirically compared Espresso’s precision and recall with other systems on both a small domain-specific textbook and on a larger corpus of general news, and have extracted several standard and specific semantic relations: is-a, part-of, succession, reaction, and production.",
        "Espresso achieves higher and more balanced performance than other state of the art systems.",
        "By exploiting generic patterns, system recall substantially increases with little effect on precision.",
        "There are many avenues of future work both in improving system performance and making use of the relations in applications like question answering.",
        "For the former, we plan to investigate the use of WordNet to automatically learn selectional constraints on generic patterns, as proposed by (Girju et al.",
        "2006).",
        "We expect here that negative instances will play a key role in determining the selectional restrictions.",
        "Espresso is the first system, to our knowledge, to emphasize concurrently performance, minimal supervision, breadth, and generality.",
        "It remains to be seen whether one could enrich existing ontologies with relations harvested by Espresso, and it is our hope that these relations will benefit NLP applications."
      ]
    }
  ]
}
