{
  "info": {
    "authors": [
      "Dong-Hee Lim",
      "Kyu-Baek Hwang",
      "Seung Shik Kang"
    ],
    "book": "SIGHAN Workshop on Chinese Language Processing",
    "id": "acl-W06-0136",
    "title": "N-Gram Based Two-Step Algorithm for Word Segmentation",
    "url": "https://aclweb.org/anthology/W06-0136",
    "year": 2006
  },
  "references": [
    "acl-C04-1067",
    "acl-I05-3024",
    "acl-P03-1035",
    "acl-P98-2206",
    "acl-W02-1208",
    "acl-W03-1719",
    "acl-W03-1720",
    "acl-W03-1721",
    "acl-W04-3236"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper describes an n-gram based reinforcement approach to the closed track of word segmentation in the third Chinese word segmentation bakeoff.",
        "Character n-gram features of unigram, bigram, and trigram are extracted from the training corpus and its frequencies are counted.",
        "We investigated a step-by-step methodology by using the n-gram statistics.",
        "In the first step, relatively definite segmentations are fixed by the tight threshold value.",
        "The remaining tags are decided by considering the left or right space tags that are already fixed in the first step.",
        "Definite and loose segmentation are performed simply based on the bigram and trigram statistics.",
        "In order to overcome the data sparseness problem of bigram data, unigram is used for the smoothing."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Word segmentation has been one of the very important problems in the Chinese language processing.",
        "It is a necessary in the information retrieval system for the Korean language (Kang and Woo, 2001; Lee et al., 2002).",
        "Though Korean words are separated by white spaces, many web users often do not set a space in a sentence when they write a query at the search engine.",
        "Another necessity of automatic word segmentation is the index term extraction from a sentence that includes word spacing errors.",
        "The motivation of this research is to investigate a practical word segmentation system for the Korean language.",
        "While we develop the system, we found that ngram-based algorithm was exactly applicable to the Chinese word segmentation and we have participated the bakeoff (Kang and Lim, 2005).",
        "The bakeoff result is not satisfiable, but it is acceptable because our method is language independent that does not consider the characteristics of the Chinese language.",
        "We do not use any language dependent features except the average length of Chinese words.",
        "Another advantage of our approach is that it can express the ambiguous word boundaries that are error-prone.",
        "So, there are a good possibility of improving the performance if language dependent functionalities are added such as proper name, numeric expression recognizer, and the postprocessing of single character words.1"
      ]
    },
    {
      "heading": "2 N-gram Features",
      "text": [
        "The n-gram features in this work are similar to the previous one in the second bakeoff.",
        "The basic segmentation in (Kang and Lim, 2005) has performed by bigram features together with space tags, and the trigram features has been used as a postprocessing of correcting the segmentation errors.",
        "Trigrams for postprocessing are the ones that are highly biased to one type of the four tag features of “AiBjC”.2 In addition, unigram features are used for smoothing the bigram, where bigram is not found in the training corpora.",
        "In this current work, we extended the n-gram features to a trigram.",
        "(a) trigram: AiBjC (b) bigram: iAjBk (c) unigram: iAj",
        "In the above features, AB and ABC are a Chinese character sequence of bigram and trigram, respectively.",
        "The subscripts i, j, and k",
        "Proceedings of the Fifth SIGHAN Workshop on Chinese Language Processing, pages 197–200, Sydney, July 2006. c�2006 Association for Computational Linguistics denote word space tags, where the tags are marked as 1(space tag) and 0(non-space tag).",
        "For the unigram iAj, four types of tag features are calculated in the training corpora and their frequencies are stored.",
        "In the same way, eight types of bigram features and four types of trigram features are constructed.",
        "If we take all the inside and outside space-tags of ABC, there are sixteen types of trigram features hAiBjCk for h,ij,k = 0 or 1.",
        "It will cause a data sparseness problem, especially for small-sized training corpora.",
        "In order to avoid the data sparseness problem, we ignored the outside-space tags h and k and constructed four types of trigram features of AiBjC.",
        "Table 1 shows the number of n-gram features for each corpora.",
        "The total number of unique trigrams for CITYU corpus is 1,341,612 in which 104,852 trigrams occurred more than three times.",
        "It is less than one tenth of the total number of trigrams.",
        "N-gram feature is a compound feature of <character, space-tag> combination.",
        "Trigram classes are distinguished by the space-tag context, trigram class hAiBjCk is named as t4-trigram or C3T4.3 It is simplified into four classes of C3T2 trigrams of AiBjC, in consideration of the memory space savings and the data sparseness problem."
      ]
    },
    {
      "heading": "3 Word Segmentation Algorithm",
      "text": [
        "Word segmentation is defined as to choose the best tag-sequence for a sentence.",
        "where",
        "3 ‘Cn’ refers to the number of characters and ‘Tn’ refers to the number of spae-tag.",
        "According to this notation, iAjBk and iAj are expressed as C2T3 and C1T2, respectively.",
        "More specifically at each character position, the algorithm determines a space-tag ‘0’ or ‘1’ by using the word spacing features."
      ]
    },
    {
      "heading": "3.1 The Features",
      "text": [
        "We investigated a two step algorithm of determining space tags in each character position of a sentence using by context dependent n-gram features.",
        "It is based on the assumption that space tags depend on the left and right context of characters together with the space tags that it accompanies.",
        "Let tici be a current <space tag, character> pair in a sentence.4 ... ti-2ci-2 ti-1ci-1 tici ti+1ci+1 ti+2ci+2 ...",
        "In our previous work of (Lim and Kang, 2005), n-gram features (a) and (b) are used.",
        "These features are used to determine the space tag ti.",
        "In this work, core n-gram feature is a C3T2 classes of trigram features ci-2ti-1ci-1tici, ci-1ticiti+1ci+1.",
        "In addition, a simple character trigram with no space tag “ticici+1ci+2” is added.",
        "Extended n-gram features with space tags are effective when left or right tags are fixed.",
        "Suppose that ti-1 and ti+1 are definitely set to 0 in a bigram context “ti-1ci-1ticiti+1”, then a feature “0ci-1tici0”(ti = 0 or 1) is applied, instead of a simple feature “ci-1tici”.",
        "However, none of the space tags are fixed in the beginning that simple character n-gram features with no space tag are used.5"
      ]
    },
    {
      "heading": "3.2 Two-step Algorithm",
      "text": [
        "The basic idea of our method is a cross checking the n-gram features in the space position by using three trigram features.",
        "For a character sequence “ci-2ci-1ticici+1ci+2”, we can set a space mark ‘1’ to ti, if P(ti= 1) is greater than P(ti= 0) in all the three trigram features ci-2ci-1tici, ci-1ticici+1, and tici ci+1ci+2.",
        "Because no space tags are determined in",
        "the beginning, word segmentation is performed in two steps.",
        "In the first step, simple n-gram features are applied with strong threshold values (tlow1 and thigh1 in Table 2).",
        "The space tags with high confidence are determined and the remaining space tags will be set in the next step.",
        "In the second step, extended bigram features are applied if any one of the left or right space tags is fixed in the first step.",
        "Otherwise, simple bigram probability will be applied, too.",
        "In this step, extended bigram features are applied with weak threshold values tlow2 and thigh2.",
        "The space tags are determined by the final threshold tfinal, if it was not determined by weak threshold values.",
        "Considering the fact that average length of Chinese words is about 1.6, the threshold values are lowered or highered.7 In the final step, error correction is performed by 4-gram error correction dictionary.",
        "It is constructed by running the training corpus and comparing the result to the answer.",
        "Error correction data format is 4-gram.",
        "If a 4-gram ci-2ci-1cici+1 is found in a sentence, then tag ti is modified unconditionally as is specified in the 4-gram dictionary."
      ]
    },
    {
      "heading": "4 Experimental Results",
      "text": [
        "We evaluated our system in the closed task on all four corpora.",
        "Table 3 shows the final results in bakeoff 2006.",
        "We expect that Roov will be improved if any unknown word processing is performed.",
        "Riv can also be improved if lexicon is applied to correct the segmentation errors."
      ]
    },
    {
      "heading": "4.1 Step-by-step Analysis",
      "text": [
        "In order to analyze the effectiveness of each step, we counted the number of space positions for sentence by sentence.",
        "If the number of characters in a sentence is n, then the number of words positions is (n-1) because we ignored the first tag t0 for c0.",
        "Table 4 shows the number of space positions in four test corpora.",
        "As we expressed in section 3, we assumed that trigram with space tag information will determine most of the space tags.",
        "Table 5 shows the application rate with strong threshold values.",
        "As we expected, around 93.8%^95.9% of total space tags are set in step-1 with the error rate 1.5%^2.8%.",
        "Table 6 shows the application rate of n-gram with weak threshold values in step-2.",
        "The space tags that are not determined in step-1 are set in the second step.",
        "The error rate in step-2 is 24.3%^30.1%."
      ]
    },
    {
      "heading": "4.2 4-gram Error Correction",
      "text": [
        "We examined the effectiveness of 4-gram error correction.",
        "The number of 4-grams that is extracted from training corpora is about 10,000 to 15,000.",
        "We counted the number of space tags that are modified by 4-gram error correction dictionary.",
        "Table 7 shows the number of modified space tags and the negative effects of 4-gram error correction.",
        "Table 8 shows the results before error correction.",
        "When compared with the final results in Table 3, F-measure is slightly lower than the final results."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "We described a two-step word segmentation algorithm as a result of the closed track in bakeoff 2006.",
        "The algorithm is based on the cross validation of the word spacing probability by using n-gram features of <character, space-tag>.",
        "One of the advantages of our system is that it can show the self-confidence score for ambiguous or feature-conflict cases.",
        "We have not applied any language dependent resources or functionalities such as lexicons, numeric expressions, and proper name recognition.",
        "We expect that our approach will be helpful for the detection of error-prone tags and the construction of error correction dictionaries when we develop a practical system.",
        "Furthermore, the proposed algorithm has been applied to the Korean language and we achieved a good improvement on proper names, though overall performance is similar to the previous method."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "This work was supported by the Korea Science and Engineering Foundation(KOSEF) through Advaned Information Technology Research Center(AITrc)."
      ]
    }
  ]
}
