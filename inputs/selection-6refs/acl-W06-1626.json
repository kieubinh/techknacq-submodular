{
  "info": {
    "authors": [
      "Ying Zhang",
      "Almut Silja Hildebrand",
      "Stephan Vogel"
    ],
    "book": "Conference on Empirical Methods in Natural Language Processing",
    "id": "acl-W06-1626",
    "title": "Distributed Language Modeling for $N$-Best List Re-Ranking",
    "url": "https://aclweb.org/anthology/W06-1626",
    "year": 2006
  },
  "references": [
    "acl-J01-1001",
    "acl-J93-2003",
    "acl-N04-1021",
    "acl-P05-1033",
    "acl-P05-1066",
    "acl-W04-3250",
    "acl-W05-0821"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In this paper we describe a novel distributed language model for N-best list re-ranking.",
        "The model is based on the client/server paradigm where each server hosts a portion of the data and provides information to the client.",
        "This model allows for using an arbitrarily large corpus in a very efficient way.",
        "It also provides a natural platform for relevance weighting and selection.",
        "We applied this model on a 2.97 billion-word corpus and re-ranked the N-best list from Hiero, a state-of-the-art phrase-based system.",
        "Using BLEU as a metric, the re-ranked translation achieves a relative improvement of 4.8%, significantly better than the model-best translation."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Statistical language modeling has been widely used in natural language processing applications such as Automatic Speech Recognition (ASR), Statistical Machine Translation (SMT) (Brown et al., 1993) and Information Retrieval (IR) (Ponte and Croft, 1998).",
        "Conventional n-gram language modeling counts the frequency of all the n-grams in a corpus and calculates the conditional probabilities of a word given its history of n – 1 words P(wilwi – n+1).",
        "As the corpus size increases, building a high order language model offline becomes very expensive if it is still possible (Goodman, 2000).",
        "In this paper, we describe a new approach of language modeling using a distributed computing paradigm.",
        "Distributed language modeling can make use of arbitrarily large training corpora and provides a natural way for language model adaptation.",
        "We applied the distributed LM to the task of re-ranking the N-best list in statistical machine translation and achieved significantly better translation quality when measured by the BLEU metric (Pap-ineni et al., 2001)."
      ]
    },
    {
      "heading": "2 N-best list re-ranking",
      "text": [
        "When translating a source language sentence f into English, the SMT decoder first builds a translation lattice over the source words by applying the translation model and then explores the lattice and searches for an optimal path as the best translation.",
        "The decoder uses different models, such as the translation model, n-gram language model, fertility model, and combines multiple model scores to calculate the objective function value which favors one translation hypothesis over the other (Och et al., 2004).",
        "Instead of outputting the top hypothesis e(1) based on the decoder model, the decoder can output N (usually N = 1000) alternative hypotheses {e(r) lr = 1� � � � � N} for one source sentence and rank them according to their model scores.",
        "Figure 1 shows an example of the output from a SMT system.",
        "In this example, alternative hypothesis e(2) is a better translations than e(1) according to the reference (Ref) although its model score is lower.",
        "SMT models are not perfect, it is unavoidable to have a suboptimal translation output as the model-best by the decoder.",
        "The objective of N-best list re-ranking is then to re-rank the translation hypotheses using features which are not used during decoding so that better translations can emerge as “optimal” translations.",
        "Our exper",
        "6 to 10 BLEU points better than the model-best translation.",
        "In this paper we use the distributed language model on very large data to re-rank the N-best list."
      ]
    },
    {
      "heading": "2.1 Sentence likelihood",
      "text": [
        "The goal of a language model is to determine the probability, or in general the “likelihood” of a word sequence w1... wm (wm1 for short) given some training data.",
        "The standard language modeling approach breaks the sentence probability down into:",
        "The probability of a word given its history can be approximated with the maximum likelihood estimate (MLE) without any smoothing:",
        "In addition to the standard n-gram probability estimation, we propose 3 sentence likelihood met-The simplest metric for sentence likelihood is to count how many n-grams in this sentence can be found in the corpus.",
        "For example, L0 for sentence in figure 2 is 52 because 52 n-grams have non-zero counts.",
        "• Ln1 : Average interpolated n-gram conditional probability.",
        "gram counts (Eq.",
        "3) without any smoothing.",
        "Ak is the weight for k-gram conditional probability, P Ak = 1.",
        "Ln1 is similar to the standard n-gram LM except the probability is averaged over the words in the sentence to prevent shorter sentences being favored unfairly.",
        "• L2: Sum of n-gram’s non-compositionality",
        "For each matched n-gram, we consider all the possibilities to cut/decompose it into two short n-grams, for example “the terrorist attacks on the united states” could be decomposed into (“the”, “terrorist attacks on the united states”) or (“the terrorist”, “attacks on the united states”), ... , or (“the terrorist attacks on the united”, “states”).",
        "For each cut, calculate the point-wise mutual information (PMI) between the two short n-grams.",
        "The one with the minimal PMI is the most “natural” cut for this n-gram.",
        "The PMI over the natural cut quantifies the non-compositionality Inc of an n-gram wz .",
        "The higher the value of Inc(wz) the more likely wz is a meaningful constituent, in other words, it is less likely that wz is composed from two short n-grams just by chance (Ya-mamoto and Church, 2001).",
        "• L0: Number of n-grams matched.",
        "i,j iGj"
      ]
    },
    {
      "heading": "3 Distributed language model",
      "text": [
        "The fundamental information required to calculate the likelihood of a sentence is the frequency of n-grams in the corpus.",
        "In conventional LM training, all the counts are collected from the corpus D and saved to disk for probability estimation.",
        "When the size of D becomes large and/or n is increased to capture more context, the count file can be too large to be processed.",
        "Instead of collecting n-gram counts offline, we index D using a suffix array (Manber and Myers, 1993) and count the occurrences of wzz_n+1 in D on the fly."
      ]
    },
    {
      "heading": "3.1 Calculate n-gram frequency using suffix array",
      "text": [
        "For a corpus D with N words, locating all the occurrences of wzz_n+1 takes O(logN).",
        "Zhang and Vogel (2005) introduce a search algorithm which locates all the m(m + 1)/2 embedded n-grams in a sentence of m words within O(m • logN) time.",
        "Figure 2 shows the frequencies of all the embedded n-grams in sentence “since 2001 after the incident of the terrorist attacks on the united states” matched against a 26 million words corpus.",
        "For example, unigram “after” occurs 4.43 × 104 times, trigram “after the incident” occurs 106 times.",
        "The longest n-gram that can be matched is the 8-gram “of the terrorist attacks on the united states” which occurs 7 times in the corpus."
      ]
    },
    {
      "heading": "3.2 Client/Server paradigm",
      "text": [
        "To load the corpus and its suffix array index into the memory, each word token needs 8 bytes.",
        "For example, if the corpus has 50 million words, 400MB memory is required.",
        "For the English1 Gi-gaWord2 corpus which has 2.7 billion words, the",
        "total memory required is 22GB.",
        "It is practically impossible to fit such data into the memory of any single machine.",
        "To make use of the large amount of data, we developed a distributed client/server architecture for language modeling.",
        "Client/server is the most common paradigm of distributed computing at present (Leopold, 2001).",
        "The paradigm describes an asymmetric relationship between two type of processes, of which one is the client, and the other is the server.",
        "The server process manages some resources and offers a service which can be used by other processes.",
        "The client is a process that needs the service in order to accomplish its task.",
        "It sends a request to the server and asks for the execution of a task that is covered by the service.",
        "We split the large corpus D into d non-overlapping chunks.",
        "One can easily verify that for any n-gram wzz_n+1 the count of its occurrences in D is the sum of its occurrences in all the chunks, i.e.,",
        "Each server3 loads one chunk of the corpus with its suffix array index.",
        "The client sends an English sentence w1 ... wm to each of the servers and requests for the count information of all the n-grams in the sentence.",
        "The client collects the count information from all the servers, sums up the counts for each n-gram and then calculates the likelihood of the sentence.",
        "The client communicates with the servers via TCP/IP sockets.",
        "In our experiments, we used 150 servers running on 26 computers to serve one client.",
        "Multiple clients can be served at the same time if needed.",
        "The process of collecting counts and calculating the sentence probabilities takes about 1 to 2 ms for each English sentence (average length 23.5 words).",
        "With this architecture, we can easily make use of larger corpora by adding additional data servers.",
        "In our experiments, we used all the 2.7 billion word data in the English Gigaword corpus without any technical difficulties."
      ]
    },
    {
      "heading": "4 “More data is better data” or",
      "text": []
    },
    {
      "heading": "“Relevant data is better data”",
      "text": [
        "Although statistical systems usually improve with more data, performance can decrease if additional data does not fit the test data.",
        "There have been debates in the data-driven NLP community as to whether “more data is better data” or “relevant data is better data”.",
        "For N-best list re-ranking, the question becomes: “should we use all the data to re-rank the hypotheses for one source sentence, or select some corpus chunks that are believed to be relevant to this sentence?” Various relevance measures are proposed in (Iyer and Ostendorf, 1999) including content-based relevance criteria and style-based criteria.",
        "In this paper, we use a very simple relevance metric.",
        "Define corpora Dd’s relevance to a source sentence ft as:",
        "R(Dd, ft) estimates how well a corpus Dd can cover the n-grams in the N-best list of a source sentence.",
        "The higher the coverage, the more relevant Dd is.",
        "In the distributed LM architecture, the client first sends N translations of ft to all the servers.",
        "From the returned n-gram matching information, client calculates R(Dd, ft) for each server, and choose the most relevant (e.g., 20) servers for ft.",
        "The n-gram counts returned from these relevant servers are summed up for calculating the likelihood of ft. One could also assign weights to the n-gram counts returned from different servers during the summation so that the relevant data has more impact than the less-relevant ones."
      ]
    },
    {
      "heading": "5 Experiments",
      "text": [
        "We used the N-best list generated by the Hiero SMT system (Chiang, 2005).",
        "Hiero is a statistical phrase-based translation model that uses hierarchical phrases.",
        "The decoder uses a trigram language model trained with modified Kneser-Ney smoothing (Kneser and Ney, 1995) on a 200 million words corpus.",
        "The 1000-best list was generated on 919 sentences from the MT03 Chinese-English evaluation set.",
        "All the data from the English Gigaword corpus plus the English side of the Chinese-English bilingual data available from LDC are used.",
        "The 2.97 billion words data is split into 150 chunks, each has about 20 million words.",
        "The original order is kept so that each chunk contains data from the same news source and a certain period of time.",
        "For example, chunk Xinhua2003 has all the Xin-hua News data from year 2003 and NYT9499 038 has the last 20 million words from the New York Times 1994-1999 corpus.",
        "One could split the data into larger(smaller) chunks which will require less(more) servers.",
        "We choose 20 million words as the size for each chunk because it can be loaded by our smallest machine and it is a reasonable granularity for selection.",
        "In total, 150 corpus information servers run on 26 machines connected by the standard Ethernet LAN.",
        "One client sends each English hypothesis translations to all 150 servers and uses the returned information to re-rank.",
        "The whole process takes about 600 seconds to finish.",
        "We use BLEU scores to measure the translation accuracy.",
        "A bootstrapping method is used to calculate the 95% confidence intervals for BLEU (Koehn, 2004; Zhang and Vogel, 2004)."
      ]
    },
    {
      "heading": "5.1 Oracle score of the N-best list",
      "text": [
        "Because of the spurious ambiguity, there are only 24,612 unique hypotheses in the 1000-best list, on average 27 per source sentence.",
        "This limits the potential of N-best re-ranking.",
        "Spurious ambiguity is created by the decoder where two hypotheses generated from different decoding path are considered different even though they have identical word sequences.",
        "For example, “the terrorist attacks on the united states” could be the output of decoding path [the terrorist attacks][on the united",
        "states] and [the terrorist attacks on] [the united states].",
        "We first calculate the oracle score from the N-best list to verify that there are alternative hypotheses better than the model-best translation.",
        "The oracle best translations are created by selecting the hypothesis which has the highest sentence BLEU score for each source sentence.",
        "Yet a critical problem with BLEU score is that it is a function of the entire test set and does not give meaningful scores for single sentences.",
        "We followed the approximation described in (Collins et al., 2005) to get around this problem.",
        "Given a test set with T sentences, N hypotheses are generated for each source sentence ft. Denote etr) as the r-th ranked hypothesis for ft. et1) is the model-best hypothesis for this sentence.",
        "The baseline BLEU scores are calculated based on the model-best translation set {et1) It = 1,... , T}.",
        "Define the BLEU sentence-level gain for etr) as:",
        "GBLEUetr) calculates the gain if we switch the model-best hypothesis e(1) tusing etr) for sentence ft and keep the translations for the rest of the test set untouched.",
        "With the estimated sentence level gain for each hypothesis, we can construct the oracle best translation set by selecting the hypotheses with the highest BLEU gain for each sentence.",
        "Oracle best BLEU translation set is: {etrt)It = 1, ... , T} where r�t = arg maxr GBLEUetr) .",
        "Table 1 shows the BLEU score of the approximated oracle best translation.",
        "The oracle score is 7 points higher than the model-best scores even though there are only 27 unique hypotheses for each sentence on average.",
        "This confirms our observation that there are indeed better translations in the N-best list."
      ]
    },
    {
      "heading": "5.2 Training standard n-gram LM on large data for comparison",
      "text": [
        "Besides comparing the distributed language model re-ranked translations with the model-best translations, we also want to compare the distributed LM with the the standard 3-gram and 4-gram language models on the N-best list re-ranking task.",
        "Training a standard n-gram model for a 2.9 billion words corpora is much more complicated and tedious than setting up the distributed LM.",
        "Because of the huge size of the corpora, we could only manage to train a test-set specific n-gram LM for this experiment.",
        "First, we split the corpora into smaller chunks and generate n-gram count files for each chunk.",
        "Each count file is then sub-sampled to entries where all the words are listed in the vocabulary of the N-best list (5,522 word types).",
        "We merge all the sub-sampled count files into one and train the standard language model based on it.",
        "We manage to train a 3-gram LM using the 2.97 billion-word corpus.",
        "Resulting LM requires 2.3GB memory to be loaded for the re-ranking experiment.",
        "A 4-gram LM for this N-best list is of 13 GB in size and can not be fit into the memory.",
        "We split the N-best list into 9 parts to reduce the vocabulary size of each sub N-best list to be around 1000 words.",
        "The 4-gram LM tailored for each sub N-best list is around 1.5 to 2 GB in size.",
        "Training higher order standard n-gram LMs with this method requires even more partitions of the N-best list to get smaller vocabularies.",
        "When the vocabulary becomes too small, the smoothing could fail and results in unreliable LM probabilities.",
        "Adapting the standard n-gram LM for each individual source sentence is almost infeasible given our limited computing resources.",
        "Thus we do not have equivalent n-gram LMs to be compared with the distributed LM for conditions where the most relevant data chunks are used to re-rank the N-best list for a particular source sentence."
      ]
    },
    {
      "heading": "5.3 Results",
      "text": [
        "Table 2 lists results of the re-ranking experiments under different conditions.",
        "The re-ranked translation improved the BLEU score from 31.44 to",
        "32.64, significantly better than the model-best translation.",
        "Different metrics are used under the same data situation for comparison.",
        "L0, though extremely simple, gives quite nice results on N-best list re-ranking.",
        "With only one corpus chunk (the most relevant one) for each source sentence, L0 improved the BLEU score to 32.22.",
        "We suspect that L0 works well because it is inline with the nature of BLEU score.",
        "BLEU measures the similarity between the translation hypothesis and human reference by counting how many n-grams in MT can be found in the references.",
        "Instead of assigning weights 1 to all the matched n-grams in L0, L2 weights each n-gram by its non-compositionality.",
        "For all data conditions, L2 consistently gives the best results.",
        "Metric family L1 is close to the standard n-gram LM probability estimation.",
        "Because no smoothing is used, Li performance (32.00) is slightly worse than the standard 3-gram LM result (32.22).",
        "On the other hand, increasing the length of the history in L1 generally improves the performance.",
        "Figure 3 shows the BLEU score of the re-ranked translation when using different numbers of relevant data chunks for each sentence.",
        "The selected data chunks may differ for each sentences.",
        "For example, the 2 most relevant corpora for sentence 1 are Xinhua2002 and Xinhua2003 while for sentence 2 APW2003A and NYT2002D are more relevant.",
        "When we use the most relevant data chunk (about 20 million words) to re-rank the N-best list, 36 chunks of data will be used at least once for 919 different sentences, which accounts for about 720 million words in total.",
        "Thus the x-axis in figure 3 should not be interpreted as the total amount of data used but the number of the most relevant corpora used for each sentence.",
        "All three metrics in figure 3 show that using all data together (150 chunks, 2.97 billion words) does not give better discriminative powers than using only some relevant chunks.",
        "This supports our argument in section 4 that relevance selection is helpful in N-best list re-ranking.",
        "In some cases the re-ranked N-best list has a higher BLEU score after adding a supposedly “less-relevant” corpus chunk and a lower BLEU score after adding a “more-relevant” chunk.",
        "This indicates that the relevance measurement (Eq.",
        "11) is not fully reflecting the real “relevance” of a data chunk for a sentence.",
        "With a better relevance measurement one",
        "would expect to see the curves in figure 3 to be much smoother."
      ]
    },
    {
      "heading": "6 Related work and discussion",
      "text": [
        "Yamamoto and Church (2001) used suffix arrays to compute the frequency and location of an n-gram in a corpus.",
        "The frequencies are used to find “interesting” substrings which have high mutual information.",
        "Soricut et al.",
        "(2002) build a Finite State Acceptor (FSA) to compactly represent all possible English translations of a source sentence according to the translation model.",
        "All sentences in a big monolingual English corpus are then scanned by this FSA and those accepted by the FSA are considered as possible translations for the source sentence.",
        "The corpus is split into hundreds of chunks for parallel processing.",
        "All the sentences in one chunk are scanned by the FSA on one processor.",
        "Matched sentences from all chunks are then used together as possible translations.",
        "The assumption of this work that possible translations of a source sentence can be found as exact match in a big monolingual corpus is weak even for very large corpus.",
        "This method can easily fail to find any possible translation and return zero proposed translations.",
        "Kirchhoff and Yang (2005) used a factored 3 gram model and a 4-gram LM (modified KN smoothing) together with seven system scores to re-rank an SMT N-best.",
        "They improved the translation quality of their best baseline (Spanish",
        "English) from BLEU 30.5 to BLEU 31.0.",
        "Iyer and Ostendorf (1999) select and weight data to train language modeling for ASR.",
        "The data is selected based on its relevance for a topic or the similarity to data known to be in the same domain as the test data.",
        "Each additional document is classified to be in-domain or out-of-domain according to cosine distance with TF-IDF term weights, POS-tag LM and a 3-gram word LM.",
        "n-gram counts from the in-domain and the additionally selected out-of-domain data are then combined with an weighting factor.",
        "The combined counts are used to estimate a LM with standard smoothing.",
        "Hildebrand et al.",
        "(2005) use information retrieval to select relevant data to train adapted translation and language models for an SMT system.",
        "Si et al.",
        "(2002) use unigram distribution similarity to select the document collection which is most relevant to the query documents.",
        "Their work is mainly focused on information retrieval application."
      ]
    },
    {
      "heading": "7 Conclusion and future work",
      "text": [
        "In this paper, we presented a novel distributed language modeling solution.",
        "The distributed LM is capable of using an arbitrarily large corpus to estimate the n-gram probability for arbitrarily long histories.",
        "We applied the distributed language model to N-best re-ranking and improved the translation quality by 4.8% when evaluated by the BLEU metric.",
        "The distributed LM provides a flexible architecture for relevance selection, which makes it possible to select data for each individual test sentence.",
        "Our experiments have shown that relevant data has better discriminative power than using all the data.",
        "We will investigate different relevance weighting schemes to better combine n-gram statistics from different data sources.",
        "We are planning to integrate the distributed LM in the statistical machine translation decoder in the near future."
      ]
    },
    {
      "heading": "8 Acknowledgement",
      "text": [
        "We would like to thank Necip Fazil Ayan and Philip Resnik for providing Hiero system’s N-best list and allowing us to use it for this work."
      ]
    }
  ]
}
