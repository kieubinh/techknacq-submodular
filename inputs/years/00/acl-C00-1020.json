{
  "info": {
    "authors": [
      "Caroline Brun"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C00-1020",
    "title": "A Client/Server Architecture for Word Sense Disambiguation",
    "url": "https://aclweb.org/anthology/C00-1020",
    "year": 2000
  },
  "references": [
    "acl-C90-2067",
    "acl-H93-1051",
    "acl-J98-1001",
    "acl-P95-1026",
    "acl-P96-1006",
    "acl-P98-1051",
    "acl-P98-2228",
    "acl-W97-0213",
    "acl-W97-0810"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper presents a robust client/server implementation of a word sense disambiguator for English.",
        "This system associates a word with its meaning in a given context using dictionaries as tagged corpora in order to extract semantic disambiguation rules.",
        "Semantic rules are used as input of a semantic application program which encodes a linguistic strategy in order to select the best disambiguation rule for the word to be disambiguated.",
        "The semantic disambiguation rule application program is part of the client/server architecture enabling the processing of large corpora."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "This paper describes the implementation of an on-line lexical semantic disambiguation system for English within a client/server linguistic application.",
        "This system allows to select the meaning of a word given its context of appearance in a text segment, and addresses the general problem of Word Sense Disambiguation (WSD), (Ide et al90), (Gale et al.",
        "The basic idea of the semantic disambiguation system described here is to use a dictionary, in our case, the Oxford-Hachette bilingual dictionary (OHFD), (Oxford 94), a bilingual English/French French/English dictionary designed initially for humans but stored in SGML format, in order to extract a semantic disambiguation rule database.",
        "The dictionary is in effect used as a semantically tagged corpus.",
        "Once the semantic disambiguation database is available, it becomes, as well as a dictionary and an ontology, a resource used by the server to perform WSD on new input.",
        "A linguistic strategy was implemented in order to select the best matching disambiguation rule in a given context.",
        "This implementation is a follow-up of the Semantic Dictionary Lookup (SDL) already implemented in this client/server system (Aimelet 98) and of the methods proposed in (Dini et al.",
        "98) and (Dini et al.",
        "99).",
        "The originality of our implementation lies in the rule selection strategy for application as well as in the use of the client/server characteristics to perform WSD.",
        "After a brief presentation of the client/server characteristics, we examine the implementation of the WSD system.",
        "Then we describe the results obtained after evaluation of the system, and finally we conclude with the description of its applications and perspectives."
      ]
    },
    {
      "heading": "2 Architecture of the system",
      "text": []
    },
    {
      "heading": "2.1 XeLDa: a linguistic client/server application",
      "text": [
        "XeLDa addresses the problem of a generic development framework for linguistic-based and linguistics-enriched applications, based on available, as well as future research results.",
        "Potential applications include: translation aids over a network, on a desktop or a portable PC, syntax checking, terminology extraction, and authoring tools in general.",
        "This system provides developers and researchers with a common development architecture for the open and seamless integration of linguistic services.",
        "XeLDa offers different services such as dictionary lookup, tokenization, tagging, shallow parsing, etc.",
        "Dictionary lookup and shallow parsing are extensively used in the semantic rule extraction/application processes described in this paper."
      ]
    },
    {
      "heading": "2.2 Dictionary Lookup",
      "text": [
        "The OHFD dictionary is accessible via the XeLDa server, which allows a fast and easy lookup of words.",
        "Each entry in the OHFD dictionary (cf. Figl, entry of seize in SGML format) is organized in different levels (Akroyd 92), corresponding to syntactic categories ( <SI> </S I>, Sl=part of speech",
        "distinction I), which are themselves divided into semantic categories (<S2> ... </S2>, the senses we arc interested in), themselves divided into several translations (<T12> <ITR>).",
        "Fine-grained SGML tags mark up different kinds of information related to semantic categories (<S2>) and translations, in particular:",
        "• <CO> ... </CO> mark collocates (typical subjects, objects, modifiers,...); • <LC> ... </LC> mark compound examples associated with the headword ; • <LE> ... </LE> mark general examples used for illustration of a word or a phrase; • <LI> ... </LI> mark idiomatic examples; • <LO> </LO> mark examples illustrating an obligatory syntactic structure of an entry; • <I,U> </LU> mark examples of usage; • <I ,V> </LV> mark examples of phrasal verb pattern.",
        "The meta-semantic information encoded into these different scimi, tags is used to acquire semantic disambiguation rules from the dictionary and guides the semantic rule application process, as explained later."
      ]
    },
    {
      "heading": "2.3 Shallow Parser",
      "text": [
        "The \"shallow parsing\" technology is based on a cascade of finite state transducers which allows us to extract from a sentence its shallow syntactic structure (chunks) and its functional relationships (Nit et al.",
        "97).",
        "The following example illustrates the kind of analysis provided by the shallow parser: A revolver and two shotguns were seized at the party.",
        "[SC [NP A revolver NP]/SUBJ and [NP two shotguns NP]/SUBJ :v were seized SC] [PP at the party PP].",
        "SUBJPASS(revolver,seize) SUBJPASS(shotgun,seize) VMODOBJ(seize,at,party) </S1> Shallow parser transducers are accessible via the </SE> XeLDa server enabling fast and robust execution (Roux98).",
        "SGMI, entry of seize The syntactic relations used in the disambiguation",
        "since they distinguish also transitive, intransitive reflexive Subject-verb relations include cases such as pas-verbs, past participles, as well as some plural/singular nouns.",
        "sives, reflexive and relative constructions.",
        "Modifier",
        "relations includes nominal, prepositional, adjectival, and adverbial phrases as well as relative clauses."
      ]
    },
    {
      "heading": "2.4 Rule extractor",
      "text": [
        "To perform semantic tag assignment using the OHFD dictionary, a sense number (Si) is assigned to each semantic category (<S2>) of each entry.",
        "These sense numbers act as semantic tags in the process of disambiguation rule application, because they directly point to a particular meaning of an entry.",
        "In the context of our OHFD-based implementation, sense numbering consists in concatenating the homograph number (which is 0 if there are no homographs of the entry, or 1, 2, 3, ..., for each homograph otherwise), the SI number, and the S2 number.",
        "For example, the entry seize is composed of five distinct senses, respectively numbered 0.1.1, 0.1.2, 0.1.3, 0.1.4 (for the transitive verb), 0.11.1 (for the intransitive verb).",
        "Such sense numbers allow a deterministic retrieval of the semantic categories of a word.",
        "As in GINGER I (Dini et al.",
        "98) and GINGER II (Dini et al.",
        "99) the acquired rules are of two types: word level and/or ambiguity class level.",
        "The database is built according to the following strategy: for each sense number Si of the entry, examples are parsed with the shallow parser, and functional dependencies are extracted from these examples: if a dependency involves the entry lemma (headword), a semantic disambiguation rule is built.",
        "It can be paraphrased as: If the lemma X, which is ambiguous between S1, S2, ..., Sn, appears in the dependency DEP(X,Y) or DEP(Y,X) then it can be disambiguated by assigning the sense Si.",
        "Such rules are word level rules, because they match the lexical context.",
        "For each sense number again, collocates are used to build semantic rules.",
        "The type of dependency illustrated by a collocate of an entry is SGML-tagged in the OHFD2, and is directly exploited to build rules in the same way.",
        "Then, for each rule already built, semantic classes from an ontology (in our case, WordNet3, (Fell",
        "baum 98)) are used to generalize the scope of the rules: the non-headword argument of functional dependencies is replaced in the rule by its semantic classes.",
        "The resulting rule can be paraphrased as: If the lemma X, which is ambiguous between , S2, S„, appears in the dependency DEP(X, ambiguity_class(Y)) or l)EP(ambiguity_class(Y), X) then it can be disambiguated by assigning the sense Such rules are class level rules, because they match the semantic context rather than lexical items.",
        "In both cases, the type of the rule (<LC>, <LE>, <LI>, <LO>, <LU>, <IN>, <CO>) is kept and encoded into the rules.",
        "For example, from the last semantic category of seize, 0.I.1, the system built the following word level rules: SUBJ(engine,seize) 0.1.1 <CO>; SUBJ(mechanism,seize) 0.I.1 <CO>; Since engine belongs to the classes number 6 (noun.artifact) and 19 (noun.phenomenon), whereas mechanism belongs to the classes number 6, 4 (noun.act), 17 (noun.object), and 22 (noun.process), corresponding class level rules are: SU13.1(6/19,seize) 0.1.1 <CO>; SUB.l(4/6/17/22,seize) 0.I.1 <C0>; All dictionary entries are processed, which allow to automatically build a semantic disambiguation rule database available to be used by the semantic application program to disambiguate unseen texts."
      ]
    },
    {
      "heading": "2.5 Rule application program",
      "text": [
        "The rule application program matches rules of the semantic database against new unseen input text using a preference strategy in order to disambiguate words on the fly.",
        "In cases where the system is not able to find any matching rules, it gives as fall back result the first meaning corresponding to the syntactic part of speech of the word in the sentence.",
        "Since the OHFD has been built using corpora frequencies, the most frequent senses of a word appear first in the entry.",
        "Therefore, even if there are no matching rules, the system gives as result the most probable meaning of the word to disambiguate.",
        "The linguistic strategy used in the application program is shown on several examples."
      ]
    },
    {
      "heading": "2.5.1 Simple rule matching",
      "text": [
        "Suppose one wants to disambiguate the word seize in the sentence: Only after oranges had been served did Jed seize the initiative, a scrummage pick-up effort by Ronnie Kirkpatrick cancelling out Moore's score.",
        "The rule application program first extracts the functional dependencies by means of the shallow parser.",
        "The word to be disambiguated has to be member of one or more dependencies, in this case: DOBJ(seize,initiative) The next step tries to match these dependencies with one or more rules in the semantic disambiguation database.",
        "If one and only one rule matches the lexical context of the dependencies directly, the system uses it to disambiguate the word, i.e. to assign the sense number Si4 to it; otherwise, if several rules match directly at word level, the selection process uses the meta-semantic information encoded in SGMI, tags within the dictionary (and kept in the rules on purpose) with the following preference strategy: rule built from collocate (<CO>), from compounds examples (<1_,C>), from idiomatic examples (<1,I>), from structure examples (<1_,O>), from phrasal verb pattern examples (<I V>), from usage examples (<1_,U>), and finally from general examples (<LE>).",
        "As far as implementation is concerned, rules are weighted from 1 to 7 according to their types.",
        "This strategy relies on the linguistic choices lexicographers made to build the dictionary and takes into account the accuracy of the linguistic type of the examples: it ranges from collocates, which encode very typical arguments of predicates, to very general examples, as such the resulting rules are linguistically-based.",
        "In these particular example, only one lexical rule matches the dependency extracted: seize: DOBJ(seize,initiative) 0.1.2 <CO> meaning that the sense number affected to seize is 0.1.2.",
        "This rule has been built using the typical collocate of seize in its 0.1.2 sense, namely initiative.",
        "The translation associated to this sense number of seize in the dictionary is prendre, which is the desired one in this context."
      ]
    },
    {
      "heading": "2.5.2 Rule competition",
      "text": [
        "In some cases, many rules may apply to a given word in the same context, therefore we need a rule selection strategy.",
        "Suppose one wants now to disambiguate the word seize, in the sentence: The police seized a man employed by the Krugers-dory branch of the United Building Society on approximately 18 May 1985.",
        "The dependencies extracted by the shallow parser which might lead to a disambiguation, i.e. which involve seize, are:",
        "In the case of our example, none of the rules of the database match directly the lexical context of the dependencies.",
        "Therefore, the system tries to match the semantic context of the dependency.",
        "To perform this task, the distance between the list of semantic classes of a potential rule (L1) and the list of semantic classes associated with the non-headword of the dependency (L2) is calculated:",
        "lb enable fast execution in terms of distance calculation, a transducer which associates a word with its WordNet top classes has been built and is loaded on the server.",
        "The distance calculated here ranges from 0 to 1, 0 meaning a full match of classes, 1 no match at all, the \"best\" rules being the ones with the smallest distance.",
        "In this particular example, the list of classes attached to man in WordNet is used to calculate the distance with the potential matching rules.",
        "Several rules now match the semantic context of the dependency DOBJ(scize,man).",
        "After removing rules matching with a distance above some threshold, it appears that two potential matching rules still compete:",
        "• one is built using the collocate [prisoner]:",
        "`Possibly translation, depending on the application DOBJ(seize,prisoner) 0.1.3 <CO>;",
        "at class level DOBJ(seize,18) 0.1.3 <C0>; • the other is built using the example to seize somebody around the waist: DOBJ(seize,somebody) 0.I.1 <LE>; at class level DOBJ(seize,18) 0.I.1 <LE>; Indeed, prisoner and somebody share the same semantic WordNet class (18, noun.animate) which is a member of the list of classes attached to man as well.",
        "The following preference strategy is applied5: first, prefer rules from collocate (<CO>), then from compounds examples (<1_,C>), then from structure examples (<1_,O>), then from phrasal verb pattern examples (<1_,V>), then from usage examples (<1_,U>), and then from general examples (<1_,E>).",
        "This strategy allows the selection of the rule to apply, here the one built with the collocate [prisoner].",
        "The sense number attached by the system to seize is 0.1.3, the general meaning being capture, and the French translation s'emparer de.",
        "In cases where two competing rules are exactly of the same type, the system chooses the first one (first sense appearing in the entry), relying on the fact that the OHFD was built using corpora: by default, semantic categories of the entries are ordered according to frequency in corpora.",
        "The previous example showed how rules can compete between each other.",
        "But in some cases they can cooperate as well.",
        "Let's disambiguate seize in the following example sentence: United States federal agents seized a stuface-to-air rocket launcher; a rocket motor; range-finders and a variety of military manuals.",
        "Since the sentence contains a coordinated direct object of seize, one gets the following dependencies from the shallow parser: DOBJ(seize,launcher) DOBJ(seize,motor) DOBJ(seize,range-finder) DOBJ(seize,manuals) Many rules are matching at class level, with a given distance d, namely:",
        "Two rules point out the sense number 0.1.3, the two others, the sense number 0.1.4.",
        "The strategy of rule selection takes this fact into account, giving more importance to sense numbers matching many times.",
        "As far as implementation is concerned, the distances associated with rules pointing on the same sense number are multiplied together.",
        "Since distances range from 0 to 1, multiplying them decreases the resulting value of the distance.",
        "Since the lowest one is chosen, the system put the emphasis on semantic redundancy.",
        "In the example, the distance finally associated with sense number 0.1.4 is 0.6625, which is smaller than the one associated with sense number 0.1.3 (0.675).",
        "The sense number selected by the system is therefore 0.1.4, the translation being saisir, which is the desired one.",
        "The same strategy is implemented for word level rules cooperation, in this case, rule weights are added."
      ]
    },
    {
      "heading": "2.6 Implementation",
      "text": [
        "The different modules of the system presented here are implemented in C++ in the XeLDa client/server architecture: - As already mentioned, the rule learner is a simple XeLDa client that performs rule extraction once ; - The rule application program is implemented as a specific dictionary lookup service: when a word is semantically disambiguated with a rule, the application program reorders the dictionary entry according to the semantic category assigned to the word.",
        "The best matching part of the entry is then presented first.",
        "This application is built on top of Locolex (Bauer et al.",
        "95), an intelligent dictionary lookup which achieves some word sense disambiguation using word context (part-of speech and multiword expressions (MWEs)6 recognition).",
        "However, Locolex choices remain purely syntactic.",
        "Using the OHFD information about examples, collocates and subcategorization as well as semantic classes from an ontology, the system presented here goes further towards semantic disambiguation.",
        "3 Evaluation shows similar results according to part of speech distribution.",
        "We evaluated the system for English on the 34 words used in the SENSEVAL competition (Kilgar-riff 98; Kilgarriff 99), as well as on the SENSEVAL corpus (HECTOR).",
        "This provided a test set of around 8500 sentences.",
        "The SENSEVAL words are all polysemous which means that the results given below reflect real polysemy.",
        "We use the SENSEVAL test set for this in vitro evaluation in order to give us a mean of comparison, especially with the results obtained in this competition with GINGER II (Dini et al.",
        "99).",
        "Still, it is important to keep in mind that this comparison is difficult since the dictionaries used are different.",
        "We used the °HE'D bilingual dictionary while in SENSEVAL the Oxford monolingual dictionary from HECTOR was used.",
        "The evaluation given below is performed if and only if the semantic disambiguator has found a matching rule, which means that the results focus only on our methodology: recall and precision would have been better if we had evaluated all outputs (even when the result is just the first meaning corresponding to the syntactic part of speech of the word in the sentence) because the OHM) gives by default the most frequent meaning of a word.",
        "The results obtained with the system are given on the following table:",
        "Numbers show that the recall is equivalent to the one we obtained with GINGER II (37.6 %) in SENSEVAL (this just means that dictionaries content is about the same) but precision is dramatically improved (46% for GINGER II for 79.5% with this system).",
        "Increase in precision is due to the fact that we used more fine-grained dictionary information.",
        "Moreover, the evaluation shows that the distribution of the precision results follows the preference strategy employed to select rules: collocate rules are more precise than examples rules, compounds or idiom rules are themselves more precise than usage examples, etc.",
        "Another evaluation of smaller coverage has been performed on \"all polysemous words\" of about 400 sentences extracted from the Times newspaper, and",
        "These results confirm that dictiona y information is very reliable for semantic disambiguation tasks."
      ]
    },
    {
      "heading": "4 Conclusion and Future expectations",
      "text": [
        "This paper describes a client/server implementation of a word sense disambiguator.",
        "The method uses a dictionary as a tagged corpus in order to extract a semantic disambiguation rule database.",
        "Since there is no need for a tagged training corpus, the method we describe, which performs \"all words\" semantic disambiguation, is unsupervised and avoids the data acquisition bottleneck observed in WSD.",
        "Rules are available to be used by a semantic application program which uses a specific linguistic strategy to select the best matching rule to apply: the rule selection is based on an SGML typed-based preference strategy and takes into account rules competition and rule cooperation.",
        "Emphasis is put on the advantage of the client/server implementation in terms of robustness as well as on the good results provided by the strategy in terms of recall and precision.",
        "The client/server implementation provides robustness, modularity and fast execution.",
        "The disambiguation strategy provides high precision results, because senses and examples have been defined by lexicographers and therefore provide a reliable linguistic source for constructing a database of semantic disambiguation rules.",
        "Recall results are good as well, meaning that the coverage of the dictionary is important.",
        "These results could be improved by learning more disambiguation rules, for example using the correspondences between functional dependencies: when a dependency DOBJ(X,Y) is extracted, a rule for SUBJPASS(Y,X) can be built (and vice-versa).",
        "They could be improved as well by integrating more fine-grained semantic information for adverbs and adjective, WordNet being relatively poor for these parts of speech.",
        "Since the architecture is modular, the system initially provided for English can be quickly adapted for any other language as soon as the required components are available.",
        "We already started to build a",
        "semantic disambiguator for French, but we need to integrate a French semantic ontology into the system.",
        "At the moment, it is planned to extract such an ontology from the dictionary itself, using the semantic labels which are associated with semantic categories.",
        "The expectation is to obtain more consistency between semantic tags (dictionary) and semantic classes (ontology).",
        "Because we used a bilingual dictionary we integrated the disambiguation module into a general system architecture dedicated to the comprehension of electronic texts written in a foreign language.",
        "This technique coupled with other natural language processing techniques such as shallow parsing can also be used to extract general semantic networks from dictionaries or encyclopedia.",
        "Acknowledgments: Many thanks to Frederique Segond for help, support and advices.",
        "Thanks to E. Aimelet, S. Nit-Mokhtar, J.P. Chanod, M.H.",
        "Cor-reard, G. Grefenstette, C. Roux, and N. Tarbouriech for helpful discussions."
      ]
    }
  ]
}
