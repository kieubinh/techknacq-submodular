{
  "info": {
    "authors": [
      "Jason M. Eisner"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C00-1038",
    "title": "Directional Constraint Evaluation in Optimality Theory",
    "url": "https://aclweb.org/anthology/C00-1038",
    "year": 2000
  },
  "references": [
    "acl-C94-2163",
    "acl-J94-3001",
    "acl-J97-2003",
    "acl-J98-2006",
    "acl-P97-1040",
    "acl-W98-0904"
  ],
  "sections": [
    {
      "text": [
        "Weighted finite-state constraints that can coi; un-boundedly many violations make Optimality Theory more powerful than finite-state transduction (Frank and Satta, 1998).",
        "This result is empirically mid computationally awkward.",
        "We propose replacing these unbounded constraints, as well as non-finite-state Generalized Alignment constraints, with a new class of finite-state dilvetional constraints.",
        "We give linguistic applications, results on generative power, and algorithms to compile grammars into transducers."
      ]
    },
    {
      "heading": "I Introduction",
      "text": [
        "Optimality Theory is a grammar framework that directly expresses constraints on phonological fc)rms.",
        "Roughly, the grammar prefers forms that violate ead i constraint as little as possible.",
        "Most constraints used in practice describe disfavored local configurations in the phonological form (Eisner, 1997a).",
        "It is therefore possible for a given form to offend a single constraint at several locations in the form.",
        "(For example, a constraint against syllable codas will be offended by every syllable that has a coda.)",
        "When comparing forms, then, how do we aggregate a form's multiple local (Menses into an (worall violation level'?",
        ".A constraint could answer tins question in at least three ways, the third being our proposal:",
        "• Unbounded evaluation (Prince and Smolensky, 1993).",
        "A form's violation level is given by the number of offenses.",
        "Forms with fewer offenses are preferred.",
        "• Bounded evaluation (Frank and Satta, 1998; Karttunen, 1998).",
        "A fOrm's violation level is min(k, number of offenses) for some k. This is like unbounded evaluation except that the constraint does not distinguish among forms with > k offenses) • Directional evaluation.",
        "A form's violation level considers the location of offenses, not their total number.",
        "Under left",
        "I am grateful to the 3 anonymous referees for feedback.",
        "'Note that k 1 gives \"binary\" constraints that can be described simply as languages.",
        "Any 1-bounded constraint can easily he simulated by k hinary con4raints.",
        "to-right evaluation, the constraint prefers forms whose offenses are as late as possible.",
        "compare two forms, it aligns them (according to their common underlying representation), and scans them in parallel from left to right, stopping at the first location where one form has an offense and the other does not (\"sudden (heath\"); it prefers the latter.",
        "Right-to-left evaluation is similar.",
        "V of this paper gives linguistic and computational motivation for the proposal.",
        "!i3 formalizes the idea and shows that composin,/«.",
        ": transchicc:r with a directional constraint yields a tramsducer.",
        "Thus directional constraints, like bounded ones, keep (.11' within the class of regular relations.",
        "(lila we also show them to be more expressive.)"
      ]
    },
    {
      "heading": "2 Motivation",
      "text": []
    },
    {
      "heading": "2.1 intuitions",
      "text": [
        "Recall that 01.",
        "\"s constraint ranking mechanism is an answer to the question: How call a grammar evaluate a form by aggregating its violations or several_ constraints?",
        "Above we asked the same question at a liner scale: How can a constraint evaluate a form by aggregating its offenses at several locations'?",
        "Figure 1 illustrates that our answer is just constraint ranking redux.",
        "Directional evaluation strictly ranks the importance of' the locations within a form, e.g., from left to right.",
        "This exemplifies OT's \"do only when necessary\" strategy: the constraint prefers to postpone, offenses until they become strictly necessary toward the right of the form, even at the cost of having Wore of them.",
        "One might think front Figure 1 that each directional constraint c:ould be decomposed into several binary or other bounded constraints, yielding a grammar using only bounded constraints.",
        "However, no single such grannnar general enough to handle all inputs: the number of constraints needed for the decomposition corresponds to the length (i.e., the number of locations) of the underlying representation.",
        "by regarding these as the locations.",
        "CI is some high-ranked constraint that eliminates ban.",
        "to.",
        "di.bo; No CODA is offended by syllable codas.",
        "(a) Traditional unbounded evaluation of NoCoDA.",
        "(b) Left-to-right evaluation of .NoCoDA, shown as if it were split into 4 constraints evaluating the syllables separately.",
        "(c) Right-to-left."
      ]
    },
    {
      "heading": "2.2 Iterative and floating phenomena",
      "text": [
        "The main empirical motivation for directionally evaluated constraints is the existence of \"iterative\" phenomena such as metrical footing.",
        "(Derivational theories described these with procedures that scanned a form from one end to the other and modified it; see (Johnson, 1972).)",
        "For most other phenomena, directional constraints are indistinguishable from traditional unbounded constranns.",
        "Usually, the candidates with the fewest offenses are still the ones that survive.",
        "(Since their competitors offend at exactly the same locations, and more.)",
        "Tins is precisely because most phonology is local: satisfying a constraint at one location does not usually block satisfying it at.",
        "another.",
        "Distinguishing cases, like the artificial Fig. 1.---where the constraint can only trade offenses at one location for offenses at another arise only under special conditions involving nonlocal phenomena.",
        "Just as directional evaluation would predict, such a forced tradeoff is always resolved (to our knowledge) by placing offenses as late, or as early, as higher constraints allow:",
        "• Prosodic groupings force each segment or syllable to choose which constitnent (if any) to associate with.",
        "So-called left-Lo-right directional syllabification (Mester and Padgett, 1994) will syllabify /CVCCCV/ greedily as CVC.CATCAI rather than CV.CVC.CV, postponing epenthetic material until as late as possible.",
        "Similarly, left-to-right binary footing (Hayes, 1995) prefers (a-a)(o-a)o- over o-(cro-)(o- al or (ucr)g(o-o-), postponing unfooted syllables.",
        "• Floating lexical Material irmst surface somewhere in the form.",
        "Floating features (e.g., tone) tend to dock at the leftmost or rightmost available site, postponing the appearance of these marked features.",
        "In-fixed morphemes tend to be infixed as little as possible (McCarthy and Prince, 1995), postponing the appearance of an affix edge or other affix material within the stem.2 • Floating non-lexical material must also appear somewhere.",
        "If a high-ranked constraint, CULMINATIV1TY, requires that a primary stress mark appear on each word, then a directional constraint against primary stress will not only prevent additional marks but also push the single mark to the first or last available syllable the traditional \"End llide\" (Prince, 1983).",
        "• Harmony must decide how far to spread features, and 067' effects such Gl'aSSman's Law must decide which copies of a feature to eliminate.",
        "Again, directional evaluation seems to capture the facts."
      ]
    },
    {
      "heading": "2.3 Why not Generalized Alignment?",
      "text": [
        "In OT, following a remark by Robert Kirchner, it has been traditional to analyze such phenomena using highly non-local Generalized Alignment (CA) constraints (McCarthy and Prince, 1993); For example, left-to-right fooling is favored by ALIGN-LEFT,_(Poot, Stein), which requires every foot Co be left-aligned with a morphological stem.",
        "Not only does each misaligned foot offend the constraint, but the seriousness of its offense is given by the 2 \"Available site\" and \"possible\" amount of infixation are defined hero by higher-ranked constraints.",
        "These might restrict the allowecl tone-bearing-units and the allowed CV shape after infixation, but do not fully determine where the floating material will surface, A referee asks why codas do not also float (to postpone NoCoDA offenses).",
        "Answer: Flotation requires unusual, non-local mechanisms.",
        "Gen or a constraint must ensure that an anchored tone sequence resembles the underlying floating I.rone sequence, which may be represented on au auxiliary input tape or (if bounded) as an input prefix, Hot ordinary faithfulness constraints check only whether underlying material surfaces locally; they would penalize coda flotation as a local deletion plus a local insertion.",
        "mintber of syllables by which it is misaligned.",
        "These numbers are summed over all offending feet to obtain the violation level.",
        "her example, [o-(aa)(o-o-)a(ary)jst„,„ has 1-1-3-1-6 10 violations, awl ra-u-o-cy(o-o-)(o-a)ls-om, is equally had at 4-14i-10 violations.",
        "Shifting feet leftward or eliminating them reduces the violation level.",
        "(Stemberger, 1 996) argued that, GA constraints were too powerfril.",
        "(Ellison, 1.995) showed that no single finite-state unbounded constraint could define same violation levels as a GA constraint.",
        "(Eisner, 1097a) showed more strongly that since CA can :lie made to center n. floating tone on a phrase,' no /4;clytr-c1ly of finite-state unbounded constraints could even define the same oplimal candidatcs as a GA constraint.",
        "Tints GA cannot be simulated in Ellison's (1904) finite-stat,e framework (0.2).",
        "For this reason, as well as the awkwardness atid non-locality of evaluating GA offenses, we propose to replace GA with directional constraints.",
        "Directional constraints ceopcar to more directly capture the observed phenomena.",
        "We do note that at mther.",
        "trickier possibility is to eliminate GA in favor of ordinary vinboan.r.icd constraints that are indifferent to the location of (anises.",
        "1994) noted that GA constraints that evaluated the placement; of only one element (e.g., primary stress) could be replaced by simpler N ol NTE1V1Nll'C COUStraintti.",
        "(Eisner, 1997b) gives a GA-free treatment of the metrical stress typology of (I byes.",
        "1995)."
      ]
    },
    {
      "heading": "2.4 Generative power",
      "text": [
        "If has recently been proposed that for computational reasons, OT should eliminate not only CA but all unbounded constraints (Frank and Sada, 1908; Karttunen, 1998).",
        "As with CA we offer the less extreme approach of replacing them with directional constraints instead.",
        "Recall that a phonological grammar, as usually conceived, is a description of permissible (ER, Sit) pairs.",
        "4 It has long been believed that naturally occurring phonological grammars are regular rciatio7?„3 (Johnson, 1972; Kaplan and Kay, 1994).",
        "This means that they can be implemented as finite-state transducers (FSTs) that accept exactly the grammatical pairs.",
        "IFSTs are immensely useful] in 1)erform-:-Tili17; is 111(10Ni \"WO 1101M:f.111: CCIli:Oril If is it Hat ti\"S (4N1'",
        "ing unmy relevant tasks rapidly: generation (obtaining all possible Srts for a 1_11.t.",
        "), comprehension (conversely), characterizing the set of forms on which two j■;rattnnars (perhaps from different descriptive frameworks) would differ, etc.",
        "Moreover.",
        "FSTs can be applied in parallel to regular sets of forms.",
        "For example, one can obtain a weighted set of possilde Sits (a phoneme lattice) from a speech recognizer, pass it through the inverse transducer, intersect the resulting weighted set of Ulls with the lexicon, and then extract the best surviving lifts.",
        "(Ellison, 1994: Eisner, 1997a) frame OT within this tradition, by modeling Gen and the constraints as weighted finite-state machines (see !Int although those papers showed how to generate the sel, of Sits for a single given Ult, they did not compile the OT grammar into an EST, or obtain the other benefits thereof.",
        "111 fact, (Frank and Satta, 1998) showed that such compilation is impossible in the general case of unbounded constraints.",
        "To see why, consider the grammar MAx, I) EP, HAR-MONY[heighti .",
        ";7> h1)1NT-1 ()[height].",
        "This grammar insists on height harmony among Nitrface vowels, but dislikeH changes from the Ult.",
        "The ro.iilt.",
        "is the unattested phenomenon of \"majority assimilation' (liakovic\":, 1999; Lombardi, 11990): a UR with more Inigh vowels than low will surface with all vowels high, and vice-I.Tersa.",
        "So (..)'1 may (:oinparr: unbmovicel colents in a way that an FST cannot and phonology does not.",
        "This suggests that OT with unbounded constraints is too powerful.",
        "Hence (Frank and Salta, 1998; Karttunen, 1998) propose using only bounded constraints.",
        "They show this reduces OT's power to finite-state transduction.",
        "The worry is emit bounded constraints may not, be expressive enough.",
        "A 2-bounded version of NciCorm would not distinguish among the final three forms in Figure 1.: it is agnostic; Mien the input forces multiple codas in all candidates.",
        "To be sure, a 4:-bounded approximation may work well for large ki\" 13ut, its automaton (0.2) will typically have k times as many states as the unbounded original, since it unrolls loops: the r'Using the approximate grammar for generation, an output is guaranteed correct miless it achieves violations for ioine k-bounded constraint.",
        "One call then raise , recompile the grammar, and try again.",
        "nut may grow (mite large for long inputH like phonological phrases,",
        "state must keep track of the offense count.",
        "Intersecting many such large constraints can produce very large FSTs while still failing to capture simple generalizations, e.g., that all codas are dispreferred.",
        "In §3, we will show that directional constraints are more powerful than bounded constraints, as they can express such generalizations yet they keep us within the world of regular relations and FSTs."
      ]
    },
    {
      "heading": "2.5 Related Work",
      "text": [
        "Walther (1999), working with intersective constraints, defines a similar notion of Bounded Local Optimization (BLO).",
        "Trommer (1998; 1999) applies a variant of Walther's idea to OT.",
        "The motivation in both cases is linguistic.",
        "We sketch how our idea differs via 3 examples:",
        "Consider *b, a left-to-right constraint that is offended by each instance of b.",
        "On our proposal, candidate X wins in each column, because Y always offends *b first, at position 3 in the UR.",
        "But under BLO, this offense is not fatal.",
        "Y can survive *b by inserting epenthetic material (column 2: Y wins by postponing b relative to the SR), or by changing v to z (column 3: Y ties X, since ye vz and BLO merely requires the cheapest choice given the surface output so far).",
        "In the same way, NoCoDA under BLO would trigger many changes unrelated to codas.",
        "Our definition avoids these apparent inconveniences.",
        "Walther and Trommer do not consider the expressive power of l3L0 (cf. §3.3) or whether grammars can be compiled into UR-to-SR FSTs (our main result; see discussion in §3.4)."
      ]
    },
    {
      "heading": "3 Formal Results",
      "text": []
    },
    {
      "heading": "3.1 Definition of OT",
      "text": [
        "An OT grammar is a pair (Gen, d) where",
        "• the candidate generator Gen is a relation that maps each input to a nonempty set of candidate outputs; • the hierarchy d = C2, is a finite",
        "tuple of constraint functions that evaluate outputs.",
        "We write d(8) for the tuple (C1(5), C2 (5), • • •)• Given a UR,, a, as input, the grammar admits as its SR,s all the outputs 6 such that C(6) is lexicographically minimal in {ON : S E Gen(a)}.",
        "The values taken by Ci are called its violation levels.",
        "Conventionally these are natural numbers, but any ordered set will do.",
        "Our directional constraints require the following innovations.",
        "Each input a is a string as usual, but the outputs are not strings.",
        "Rather, each candidate 6 E Gen(a) is a tuple of lal + strings.",
        "We write 6 for the concatenation of these strings (the \"real\" SR).",
        "So 6 specifies an alignment of 6 with a.",
        "The directional constraint Ci maps the tuple 6 to a tuple of natural numbers (\"offense levels\") also of length Jul + 1.",
        "Its violation levels {c(S) : 6 E Gen(a)} are compared lexicographically."
      ]
    },
    {
      "heading": "3.2 Finite-state assumptions",
      "text": [
        "We now confine our attention to finite-state OT grammars, following (Ellison, 1994; Tesar, 1995; Eisner, 1997a; Frank and Satta, 1998; Karttunen, 1998).",
        "Gen C x A* is a regular relation,6 and may be implemented as an unweighted FST.",
        "Each constraint is implemented as a possibly nondeterministic, weighted finite-state automaton (WFSA) that accepts A* and whose arcs are weighted with natural numbers.",
        "An FST, T, is a finite-state automaton in which each arc is labeled with a string pair (v.: Without loss of generality, we require <1.",
        "This lets us define an aligned transduction that maps strings to tuples: If a = a1• • ai-„ we define T(a) as the set of (n 1)-tuples (So, 6n) such that T has a path trans-ducing a : 6 along which 60 • • • is the complete output before ai is read from the input.",
        "We now describe how to evaluate C(6) where C is a WFSA.",
        "Consider the path in C that accepts 6•8 In (un)bounded evaluation, C(6) is the total weight of this path.",
        "In left-to-right evaluation, C(6) is the 71 + 1 tuple giving the respective total weights of the subpaths that consume 60, ... 611.",
        "In right-to-left evaluation, C(6) is the reverse of the previous tuple.9"
      ]
    },
    {
      "heading": "3.3 Expressive power",
      "text": [
        "Thanks to Gen, finite-state OT can trivially implement any regular input-output relation with no constraints at all!",
        "And i3.4 below shows that whether we allow directional or bounded constraints does not affect this generative power.",
        "But in another sense, directional constraints are strictly more expressive than bounded ones.",
        "If Gen is fixed, then any hierarchy of bounded constraints can be simulated by sonic hierarchy of directional constraints]°- but not vice-versa.",
        "Indeed, we show even more strongly that directional constraints cannot always be simulated even by unbounded constraints.\"",
        "Define *b as in 12.5.",
        "This ranks the set (alb)\" in lexicographic order, so it makes 2\" distinctions.",
        "Let; Gen be the regular relation",
        "We claim that the grannnar (Gen, */)) is not equivalent to (Gen, el, , Cs) for any bounded or unbounded constraints Ci , C. There is some k such that for all (5.",
        "E A', each Ci (6) < kn,.1-2 So candidates 6 of length it have at most (kil)s different violation profiles 0(S).",
        "Choose it such that 2\" > (km)s. Then the set of 2' strings (alb)\" must contain two distinct strings, = • x0, and 6' = m • • y„, with ON = Let i be minimal such that and without loss of generality assume wi = a, yi = b.",
        "Put a = • x„.",
        "Now 6, 6' E Gen (a) and 6 is lexicographically minimal in Gen (a).",
        "So the grammar (Gen, *b) maps a to 6 only, whereas (Gen, 0) cannot distinguish between_ 6 and 6', so it maps a to neither or both."
      ]
    },
    {
      "heading": "3.4 Grammar compilation: OT FST",
      "text": [
        "it is trivial to translate an arbitrary FST grammar into OT: let Gen be the FST, and 0 = 0.",
        "The rest of this section shows, conversely, how to compile a finite-state OT grammar (Gen, O) into an FST, provided that; the grammar uses only bounded and/or directional constraints."
      ]
    },
    {
      "heading": "3.4.1 The outer loop of compilation",
      "text": [
        "Let; To = Gen. For i > 0, we will construct an EST Ti that implements the partial grammar (Gen, 01, C2, ... Ci).",
        "We construct; Ti from and Ci only: Ti (x) contains the forms y c (x) for which Ci() is minimal.",
        "If Ci is k-bounded, we use the construction of (Frank and Salta, 1998; Karttunen, 1998).",
        "If C„: is a left-to-right constraint, we compose T,;_i; with the WFSA that represents C, obtaining a weighted finite-state transducer (WFST), .",
        "This transducer may be regarded as assigning a Ci-violation level (an 1)-tuple) to each a : 6 it accepts.",
        "We must now prune away the suboptimal candidates: using the DBP algorithm below, we construct a new unweighted FsT Ti that transdiu.",
        ";es a : S iff the weighted can transduce a : S as cheaply as ally a : 6'.",
        "If Ci is right-to-left, we do just the same, except DBP is used to construct TI?",
        "; from Tin.",
        "All that remains is to give the construction of from 1i, which we call Directional Best Paths (DBP).",
        "Recall standard best-paths or shortest-paths algorithms that pare a WFSA down to its paths of minimum total weight, (Dijkstra, 1959; Ellison, 1994).",
        "Our greedier version does 1.101; sum along paths hut always immediately takes the lightest \"available\" arc.",
        "Crucially, available arcs are defined relative to the input string, because we must retain one or more optimal output; candidates for each input.",
        "So availability requires \"lookahead\": we must take a heavier arc (b : a; below) just when the rest; of the input (e.g., abd) cannot otherwise be accepted on any path.",
        "c:c",
        "(we abbreviates (c, x, 0) s----s---'suboptimal On this example, DBP would simply make state 6 non-final (forcing abc to take the light arc unavailable to abd), but often it; must add states!",
        "This relativization is what lets us compile a hierarchy of directional constraints, once and for all, into an-single FsT that can find the optimal output; for any of the infinitely many possible inputs.",
        "We saw in 2.4: why this is so desirable.",
        "By",
        "contrast, Ellison's (1994) best-paths construction for unbounded constraints, and previously proposed constructions for directional-style constraints (see §2.5) only find the optimal output for a single input, or at best a finite lexicon.",
        "§3.2 restricted our FSTs such that for every arc label a : 7, al < 1.",
        "In this section we construct Ti from i'i under the stronger assumption that lal = 1, i.e., 7'i is c-free on the input side.",
        "If Q is the stateset of then let the stateset of 7'i be {[g; /?",
        "; : RCSCQ,qES-R}.",
        "This has size pi • 31QH1.",
        "However, most of these states are typically unreachable from the start state.",
        "Lazy \"on-the-fly\" construction techniques (Mohri, 1997) can be used to avoid allocating states or arcs until they are discovered during exploration from the start state.",
        "For a C E*, q E Q, define V(a,q) as the mininnun cost (a lal-,tuple of weights) of any a-reading path from Ti's start state go to q.",
        "The start state of Ti is [q0; 0; {q0}].",
        "The intent is that Ti have a path from its start state to [q; R; S] that transduces a : (51-3 iff",
        "• i'i has a go to q, (5 path of cost V(a,q); • R = {q' C Q : V(a, g') < V (a, g)}; and • S {q1 E : V (a, (I) < V (a, q)}So as Ti reads a, it \"follows\" Ti's cheapest a",
        "reading paths to q, while calculating R, to which yet cheaper (but perhaps dead-end) paths exist.",
        "Let [q; R; S] be a final state (in Ti) iff q is final and no q' E R is final (in i1i).",
        "So an accepting path in 1 survives intoT iff there is no lower-cost accepting path in Ti for the same input.",
        "The arcs from [q; R; 5] correspond to arcs from q.",
        "For each arc from q to q' labeled a : and with weight W, add an unweighted a : 7 arc from [q; R; 5] to [q'; R'; S'], provided that the latter state exists (i.e., unless q' E R', indicating that there is a cheaper path to (I).",
        "Here R' is the set of states that are either reachable from R by a (single) a-reading arc, or reachable from S by an a-reading arc of weight < W. S' is the union of .re and all states reachable from S by an a-reading arc of weight W.",
        "To apply the above construction, we must first; transform Ti so it is c-free on the input side.",
        "Of 135 is a tuple of 1'71+1 strings, but 60 = c by &freeness.",
        "course input c's are crucial if Gen is to be allowed to insert unbounded amounts of surface material (to be pruned back by the constraints).\"",
        "To eliminate c's while preserving these semantics, we are forced to introduce FST arc labels of the form a : F where 1' is actually a regular set of strings, represented as an FSA or regular expression.",
        "Following c-elimination, we can apply the construction of §3.4.3 to get T, and finally convert Ti back to a normal transducer by expanding each a :r into a subgraph.",
        "When we eliminate an arc labeled c : 7, we must push 7 and the arc's weight back onto a previous non-c arc (but no further; contrast (Mohri, 1997)).",
        "The resulting machine will implement the same aligned transduction as but more transparently: in the notation of §3.2, the arc reading ai will transduce it directly to 6i.15 Concretely, suppose can get from state q to q\" via a path of total weight T47 that begins with a : on its first arc followed by c :",
        "to substitute an arc from q to q\" with label a : 717273 ... and weight 147.",
        "But there may be infinitely many such q--q\" paths, of varying weight, so we actually write a : F, where r describes just those q-q\" paths with minimum W. The exact procedure is as follows.",
        "Let G be the possibly disconnected subgraph of T formed by c-reading arcs.",
        "Run an all-pairs shortest-paths algorithm on C. This finds, for each state pair (q', q\") connected by an c-reading path, the subgraph Gq,,q, of G formed by the minimum-weight c-reading paths from q' to q\", as well as the common weight Wa,,q, of these paths.",
        "So for each arc in Ti from q to q', with weight W and label a : 7, we now add an arc to Ti from q to q\" with weight IV + Wv,q,, and label a : 7G1, ,qa (c).",
        "(G(c) denotes the regular language to which G transduces c.) Having done this, we can delete all c-reading arcs.",
        "The modified c-free is equivalent to"
      ]
    },
    {
      "heading": "4 Conclusions",
      "text": [
        "This paper has proposed a new notion in OT: \"directional evaluation,\" where underlying locations are strictly ranked by their importance.",
        "Traditional finite-state OT constraints have enough power to compare arbitrarily high counts; Generalized Alignment is even worse.",
        "Directional constraints seem to capture the pros of these constraints: they appropriately nnli-tate against every instance of a disfavored configuration in a candidate form, no matter how in and they naturally capture iterative and edgemost effects.",
        "Yet they do not have the excess power: we have shown that an grammar of directional and/or bounded constraints can be compiled into a finite-state transducer.",
        "That is both empirically and computationally desirable.",
        "The most obvious future work conies from linguistics.",
        "Can directional constraints do all the work of unbounded and GA constraints'?",
        "How do they change the style of analysis'?",
        "(E.g., directional versions of markedness constraii its pin down the locations of marked objects, leaving lower-ranked cotistraints no say.)",
        "Finally, directional constraints can be variously formulated (is *CLUSTE,11, offended at the start or end of each cluster'?",
        "or of its enclosing syllable?).",
        "So what conventions or restrictions should apply'?"
      ]
    }
  ]
}
