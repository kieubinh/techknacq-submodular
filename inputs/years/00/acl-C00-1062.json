{
  "info": {
    "authors": [
      "Ronald M. Kaplan",
      "Jurgen Wedekind"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C00-1062",
    "title": "LFG Generation Produces Context-Free Languages",
    "url": "https://aclweb.org/anthology/C00-1062",
    "year": 2000
  },
  "references": [
    "acl-E95-1007",
    "acl-J99-2006",
    "acl-W91-0104"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper examines the generation problem for a certain linguistically relevant subclass of LFG grammars.",
        "Our main result is that the set of strings that such a grammar relates to a particular f-structure is a context-free language.",
        "This result obviously extends to other context-free based grammatical formalisms, such as PATE., and also to formalisms that permit a context-free skeleton to be extracted (perhaps some variants of IIPSG).",
        "The proof is constructive: from the given f-structure a particular context-free grammar is created whose yield is the desired set of strings.",
        "Many existing generation strategies (top-down, bottom-up, head-driven) can he understood as alternative ways of avoiding the creation of useless context-free productions.",
        "our result can he established for the more general class of LFG grammars, but that is beyond the scope of the present paper."
      ]
    },
    {
      "heading": "1 Introduction and Preliminaries",
      "text": [
        "This paper examines the generation problem for a certain linguistically motivated subclass of LEG grammars.",
        "Our main result is that the set of strings that such a grammar relates to a particular f-structure is a context-free language.",
        "This result extends easily to other context-free based grammatical formalisms, such as PAM (Shieber et al.",
        "1983), and perhaps also to formalisms that permit a context-free skeleton to be extracted from richer representations.",
        "We begin with some background and formal definitions so that we can make the problem and its solution explicit.",
        "An LFG grammar C; assigns to every string in its language at least one c-structure/fstructure pair that are set in correspondence by a piecewise function 0 (Kaplan 1995).",
        "The situation can be characterized in terms of a derivation relation AG, defined as follows: (1) AG (s, c, f) iff C assigns to the string s a c-structure c that piecewise-corresponds to f-structure f via the function 0.",
        "The `piecewise-corresponds' notion means that 0 maps individual nodes of a c-structure tree to units of the f-structure.",
        "The arrangement of the four components of an LFG representation is illustrated in the diagram of Figure 1.",
        "This representation belongs to the AG relation for a grammar that includes the annotated (nonterminal) rules in (2) and lexical rules in (3).",
        "(2) a. SNPVP (t SUB.])",
        "=4.T=4(4.",
        "CASE) = NOM (t TENSE) b. NPDLT N t=1- t=4.",
        "C. VP > V 1'=-1 (3) a. DETa",
        "The c-structure in Figure 1 is derived by applying a sequence of rules from (2) to rewrite the symbol S, the grammar's start symbol, and then rewriting the preterminal categories according to the lexical rules.",
        "Lexical rules are just notational variants of traditional LFG lexical entries.",
        "The 0 correspondence and the f-structure in Figure 1 are associated with that c-structure because the f-structure satisfies the 0-instantiated description constructed from the annotated c-structure derivation, and furthermore, it is a. minimal model for the set of instantiated descriptions collected from all the nodes of the annotated c-structure.",
        "The 0 instantiated description for a local mother-daughters configuration justified by a rule is created in the following way.",
        "First, all occurrences of the symbol t in the functional annotations of the daughters are replaced by a variable standing for the f-structure unit; that / assigns to the mother node.",
        "Then for each of the daughter categories, all occurrences of the symbol I, in its annotations are replaced by a variable",
        "standing for the 0 assignment of the daughter node.",
        "Observe that all variables denote f-structure units in the range of 0, and that the on a category and the t on the daughters that further expand that category are always instantiated with the same variable.",
        "We now turn to the generation problem.",
        "A generator for G provides for any given f-structure F the set of strings that are related to it by the grammar: (4) GenG(F){s ac, s.t.",
        "(s, c, 0, F) E AO.",
        "Our main result is that for a certain subclass of LFG grammars the set GcnG(F) is a context-free language.",
        "In the next section we prove that this is the case by constructing a context-free grammar that accepts exactly this set of strings.",
        "Our proof depends on the fact that the input F---and hence the range of fully specified; Dymetman (1991), van No-ord (1993), and Wedekind (1999) have shown that the general problem of generating from an underspecified input is unsolvable.",
        "We return to this issue at the end of the paper and observe that for certain limited forms of underspecification the context-free result can still be established.",
        "Our proof also depends on the fact that, with minor exceptions, the instantiated descriptions are idemnpotent: if p is a particular instantiated proposition, then a description containing two occurrences of p is logically equivalent to one containing just a single occurrence.",
        "This means that descriptions can be collected by the union operator for ordinary sets rather than by multi-set union.",
        "The standard LFG formalism includes a number of notational conveniences that make it easy to express linguistic generalizations but winch would add complexity to our mathematical analysis.",
        "We make a number of simplifying transformations, without loss of generality.",
        "The LFG c-structure notation allows the right-hand sides of rules to denote arbitrary regular languages, expressed by Boolean combinations of regular predicates (Kaplan 1995, Kaplan and Maxwell 1996).",
        "We assume that these languages are normalized to standard regular expressions involving only concatenation, disjunction, and Kleene-star, and then transform the grammar so that the right sides of the productions denote only finite sequences of annotated categories.",
        "First, the effects of any Kleene-stars are removed in the usual way by the introduction of additional nonterminal categories and the rules necessary to expand them appropriately.",
        "Second, every category X with disjunctive annotations is replaced by a disjunction of X's each associated with one of the alternatives of the original disjunction.",
        "Finally, rules with disjunctive right sides are replaced by sets of rules each of which expands to one of the alternative right-side category sequences.",
        "The result of these transformations is a set of productions all of which are in conventional context-free format and have no internal disjunction and which together define the same string/f-structure mapping as a grammar encoded in the original, linguistically more expressive, notation.",
        "The Kleene-star conversions produce c-structures from which the original ones can be systematically recovered.",
        "The full LFG formalism allows for grammars that assign cyclic and otherwise linguistically unmotivated structures to sentences.",
        "The context-free result can be established for these grammars, but the argument would require a longer and more technical presentation than we can provide in this paper.",
        "Thus, without loss of linguistic relevance, we concentrate here on a restricted class of LFG grammars, those that assign acyclic f-structures to sentences.",
        "For our purposes, then, an LFG grammar G is a 4-tuple (N, T, S, R) where N is the set of nonterminal categories, T is the set of terminal symbols (the lexical items), S E N is the root category, and 1?",
        "is the set of annotated productions.",
        "The context-free skeletons of the rules are of the form X0 Xj ..X or X a, with X1..X E N* and a E T. If the annotations of a nonterminal daughter establish a relationship between and t, then 1, is either identified with t, the value of an attribute in t ((t a) = n, or the member of a set in (,I.E (t a)), where a is a possibly empty sequence of attributes."
      ]
    },
    {
      "heading": "2 A Context-free Grammar",
      "text": [
        "for GenG(F) An input structure F for generation is presented as a hierarchical attribute-value matrix such as the one, in Figure 1, repeated here in (5).",
        "An f-structure is an attribute-value structure where the values are either subsidiary attribute-value matrices, symbols, semantic forms, or sets of subsidiary structures (not shown in this example).",
        "(6) A structure g is contained in a structure f if and only if: = f is a set and g is contained in an element of , or f is an f-structure and q is contained in (fa) for some attribute a.",
        "In essence, g is contained in f if g can be located in f by ignoring some enclosing superstructure.",
        "For any f-structure f, the set of all units contained in f is then defined as in (7).",
        "(7) Units(f) =I g is contained ill f} Note that Units (f) is a finite set; for any f , and Units(f) is the range of any 0 that AG associates with a particular input F. The c-structures and 0 correspondences for F are the unknowns that must be discovered ill the process of generation so that the proper instantiated descriptions can be constructed and evaluated.",
        "I however, since there is only a finite number of possible terms that can be used to designate the units of F, we can produce a (finite) superset of the proper instantiated descriptions without knowing in advance the details of either the c; structure or a particular 0.",
        "Let F be an f-structure that has 111, (In ()) set elements.",
        "We introduce in +1 distinct variables vo, v, which denote biuniquely the root unit of F (v0) and each set element of F i > 0).1 We consider the set of all designators of the form (vi a) which are defined ill F, where a is a (possibly empty) sequence of attributes.",
        "The set; of designators for a particular unit corresponds, of course, to the set of all possible f-structure paths from one of the vi roots to that unit.",
        "Thus, the set of designators for all units of F is finite, since the number of units of F is finite and there are no cycles in F. The set of variables that we will use to construct the instantiated descriptions is the set V consisting of all vt where t is a designator of t;he set just defined.",
        "If 1 is the maximal arity of the rules in G, we will consider for t;he instantiation the set 1 consisting of all sequences (vt,vt..,vti) of variables of V of length I., n + 1, not containing any set ele-11\\41111.i-rooted structures would require a whole set of root variables, similar to set elements.",
        "relent variable nni (i = 0, .., in) more than once.",
        "On the basis of this (finite) set of sequences, we define a (partial) function ID which assigns to each rule r E 11 and each sequence I E 1 that is appropriate for r an instantiated description.",
        "Let 7. be an nary LFG rule",
        "with annotated functional schemata Sm...S. A sequence of variables I E 1 is appropriate for r if I = (vt), v11, .., v t) is of length n + 1 and {(iit a'a) if to = (vi a') and (t a) =4,E Si",
        "a set element variable vi if 4,E (t a) E Si for all j = 1, .., n (a' and a are (possibly empty) sequences of attributes).",
        "(Note that (t =4, reduces to t=t if a is empty.)",
        "If I is appropriate for r, then ID (r, I), the instantiated description for r and 1, is defined as follows:",
        "where fnst(Si ,vt, vt;) is the instantiated description produced by substituting vto for all occurrences of t in Si and substituting vt5 for all occurences of t in S. If r is a lexical rule with a context-free skeleton of the form X ---> a every sequence I (v1(,) of length I is appropriate for r and ID is defined by: (9) ID (r ,= Inst(51,v1).",
        "The instantiation using appropriate sequences of variables, although finite, permits au effective discrimination of the f.-structure variables, since it provides different, variables for the 4.",
        "'s associated with different daughters that have different, function assignments (i.e., annotations of the form (1- a) =.1.",
        "and (t a') =1, with a a'), but identifies variables where f-structure variables are identified explicitly (t=t) or where the identity follows by unification, as in cases where the annotations of two different daughters contain the same function-assigning equation (t a) =1...",
        "Hence, we in fact have enough variables to make all the distinctions that could arise from any c-structure and .0 correspondence for the given f-structure.",
        "The set of all possible instantiated descriptions is large but finite, since R and 1 are finite.",
        "Thus, the set IP(F) of all possible instantiated propositions for G and F is also large but finite.",
        "For the construction of the context-free grammar we have to consider those subsets of IP(F) which have F as their minimal model.",
        "This is the set D(F), again finite.",
        "(11) D(F) is the set of all D C IP(F) such that F is a minimal model for D. We are now prepared to establish the main result of tins paper: (12) Let G be an LFG grammar conforming to the restrictions we have described.",
        "Then for any f-structure F, the set GenG(F) is a context-free language.",
        "Proof: If F is incomplete or incoherent, then GenG(F) is the empty context-free language.",
        "Let G (N, T, 5, R) be an LFG grammar.",
        "If D(F) is empty, then GenG(F) is again the empty context-free language.",
        "If D(F) is not empty, we construct a context-free grammar GI: = (NF, TF, SF, RF) in the following way.",
        "The collection of nonterminals 17\\rp, is the (finite) set {SF} U N x V x Pow(IP(F)), where SF is a new root category.",
        "Categories in NF other than S1 are, written X:v:D, where X is a category in N, v is contained in 17, and D is an instantiated description in Pow(IP(F)).",
        "TF is the set T x {0} x {O}.",
        "The rules RF are constructed from the annotated rules R of G. We include all rules of the form:",
        "(i) SFS:vvo:D, for every D c D(F) (ii) Xo:vto:Dos.t.",
        "(a) there is an r E R expanding X0 to Xi ..X, (b) Do =(r, (vto , vti , vt,)) U U (c) if v,,, E Olt a) belongs to Di then v,vt, (k = 1, .., n) and (h,j) s.t.",
        "v(vt a') E D5,2 (iii) X:vt:Da:0:0 s.t.",
        "(a) there is an r E R expanding X to a, (b) D = ID(r,(vt)).",
        "We define the projection Cat(x:y:z) = x for every category in NF U T1 and extend this function in the natural way to strings of categories and sets of strings of categories.",
        "Note that the set Cat(L(GF)) =IE L(GF) s.t.",
        "Cat(w) = s} is context-free, since the set of context-free languages is closed under homomorphisms such as Cat.",
        "We show that the language Cat(L(GF)) GenG(F).",
        "We prove first that GenG(F) C Cat(L(GF)).",
        "Let c be an annotated c-structure of a string s with f-structure F in G. On the basis of c and F we construct a derivation tree of a string s' in GF with Cat(s') = s in two steps.",
        "In the first step we relabel each terminal node with label a by a:0, the root by S:vvo , each node introducing a set element with label X biuniquely by X:vv and each other node 2 This condition captures LFG's special interpretation of membership statements.",
        "The proper treatment of LFG's semantic forms requires a similar condition.",
        "labelled X by X:vt where t is a designator that is constructable from the function-assigning equations of the annotations along the path from the unique root or set element to that node.",
        "On the basis of this relabelled c-structure we construct a derivation tree of s' in GF bottom-up.",
        "We relabel each terminal node with label a:0 by a:0:0 and each preterminal node with label X:vt by X:vt:D where D is defined as in (iiib) with r expanding X in c to a.",
        "Suppose we have constructed the subtrees dominated by Xj:vti:Di..X:vt:D, the corresponding subtrees in c are derived with r expanding X0 to Xi ..X, and the mother node is relabelled by Xo:vto .",
        "We then relabel this mother node by Xo:vto:Do where Do is determined according to (iib).",
        "By induction on the depth of the subtrees it is then easy to verify that the instantiated description D of a subtree dominated by X:vt:D is equivalent to the f-description of the corresponding annotated subtree in c. Thus, F must be a minimal model of the instantiated description of the root label S:vvo:D , SF derives S:vvo:Dp in CI.",
        "and Cat(s') = s. We now show that Cat(L(GF)) C GenG(F).",
        "Let c\" be a derivation tree of s' in GF with Cat(s') = s and suppose that the root (with label SF) expands to S:vvo:DF.",
        "We construct a new derivation tree c' that results from c\" by eliminating the root.",
        "We then define a function (/)/ such that for each flouter-minal node it of c': q5' (p) vt if ,a is labelled by X:vt:D in c'.",
        "According to our rule construction it can easily be seen by induction on the depth of the subtrees that there must be an annotated c-structure c of G with the same underlying tree structure as c' such that for each node it labelled by x:y:D in c': (i) tt is labelled by x in c, (ii) D is identical with the description that results from DR, the f-description of the sub-c-structure dominated by it in c, by replacing each occurrence of an f-structure variable '0(0' (usually abbreviated by fu) in DR by 0'(v).",
        "Since OW = OM follows for two f-structure designators if (/)' (it) = 0'(v), the (- description of the whole c-structure must be equivalent to DT' and thus !AG (s, c, 0, F) where (/) = o and Ov is the unique function that maps each vt to the unit of F that is denoted by t.QED"
      ]
    },
    {
      "heading": "3 An Example",
      "text": [
        "As a simple illustration, we produce the context-free grammar GF for the input (5) and the grammar in (2,3) above.",
        "The only designator variables that will yield useful rules are v and v(vo SIJI3J) in the following abbreviated by v and vs.",
        "Consider first the context-free rules that correspond to the rules that generate NP's.",
        "If we choose the sequence I = (vs), the instantiated description for the determiner rule",
        "For the NP rule and the sequence (vs, vs, vs), both daughter annotations instantiate to the trivial description v, = v1, and this can combine with many daughter descriptions.",
        "Two of these are the basis for the rules (16) and (17).",
        "The daughter categories of rule (1.6) match the mother categories of rules (14) and (15), and the three rules together can derive the string a:0:0 student:0:0.",
        "Rule (17), on the other hand, is a legitimate rule but does not combine with any others to produce a terminal string.",
        "It is a useless, albeit harmless, production; if desired, it can be removed from the set of productions by standard algorithms for context-free grammars.",
        "If we continue along in this manner, we find that the rules in (18,19,20) are the only other useful rules that belong to CF.",
        "The grammar Cr also includes the following starting rule:",
        "Tins grammar provides one derivation fot a single string, a: 0:0 student :0:0 fell: 0:0.",
        "Applying Cat to this string gives 'a student fell', the only sentence that this grammar associates with the input f-structure."
      ]
    },
    {
      "heading": "4 Consequences and Observations",
      "text": [
        "Our main result offers a new way to conceptualize the problem of generation for LEG and other higher-order context-free-based grammatical formalisms.",
        "The proof of the theorem is constructive: it indicates precisely how to build the grammar CI; whose language is the desired set of strings.",
        "Thus, the problem of LEG generation is divided into two phases, constructing the context-free grammar CF, and then using a standard context-free generation algorithm to produce strings from it.",
        "We can regard the first phase of LEG generation as specializing the original LEG grammar to one that only produces the given input f-structure.",
        "This specialization refines the context-free backbone of the original grammar, but our theorem indicates that the input f-structure provides enough information so that, in effect, the metavariables in the functional annotations can all be replaced by variables contained in a fixed finite set.",
        "Thus, in the LEG generation case the specialized grammar turns out to be in a less powerful formal class than the original.",
        "We can understand different aspects of generation as pertaining either to the way the grammar is constructed or to well-known properties of context-free grammars and context-free generation.",
        "It follows as an immediate corollary, for example, that it is decidable whether the set GenG(F) is empty, contains a finite number of strings, or contains all infinite number of strings.",
        "Tins can be determined by inspecting GI,' with standard context-free tools, once it has been constructed.",
        "If the language is infinite, we can make use of the context-free pumping lemma to identify a finite number of short, strings from which all other strings can be produced by repetition of subderivations.",
        "Wedekind (1995) first, established the decidability of LEG generation and proved a pumping lemma for the generated string set; our theorem provides alternative and very direct proofs of these previously known results.",
        "We also have an explanation for another observation of Wedekind (1.995).",
        "Kaplan and Bresnan (1982) showed that the Nonbranching Dominance Condition (sometimes called Ofiline Parsability) is a sufficient condition to guarantee decidability of the membership problem.",
        "Wedekind noted, however, that this condition is not necessary to determine whether a given f-structure corresponds to any strings.",
        "We now see more clearly why this is the case: if there is a context-free derivation for a given string that involves a nonbranching dominance cycle, we know (from the pumping lemma) that there is ;mother derivation for that same string that has no such cycle.",
        "Thus, the generated language is the same whether or not derivations with nonbranching dominance cycles are allowed.",
        "There is a practical consequence to the two phases of LEG generation.",
        "The grannnar CI., can be provided to a client as a finite representation of the set of perhaps infinitely many strings that correspond to the given f-structure, and the client can then control the process of enumerating individual strings.",
        "The client may choose simply to produce the shortest ones just by avoiding recursive category expansions.",
        "Or the client may apply the technology of stochastic context-free grammars to choose the most probable sentence from the set of possibilities.",
        "The client may also be interested in strings that; meet further conditions that the shortest or most probable strings fail to satisfy; in this case the client may",
        "apply the pumping lemma to systematically produce longer strings for examination.",
        "Our recipe for constructing GI, may produce many categories and expansion rules that cannot; play a role in any derivation, either because they are inaccessible from the root symbol, they do not lead to a terminal string, or because they involve individual descriptions that F does not satisfy.",
        "Having constructed the grammar, we can again apply standard context-free methods, this time to put the grammar in a more optimal form by removing useless categories and productions.",
        "We can view several different generation algorithms as strategies for avoiding the creation of useless categories in the first place.",
        "The most obvious optimization, of course, is to incrementally evaluate all the instantiated descriptions and remove from consideration categories and rules involving descriptions for which F is not a model.",
        "A second strategy is to construct the grammar in bottom-up fashion.",
        "We begin by comparing the terminal rules of the LFG grammar with the features of the input f-structure, and construct only the corresponding categories and rules that meet the criteria in (iii) above.",
        "We then construct rules that can derive the mother categories of those rules, and so on.",
        "With this strategy we insure that every category we construct can derive a terminal string, but we have no guarantee that every bottom-up sequence will reach the root symbol.",
        "It is also appealing to construct the grammar by means of a top-down process.",
        "If we start with an agenda containing the root symbol, create rules only to expand categories on the agenda, and place categories on the agenda whenever they appear for the first time on the right side of a new rule, we get the effect of a top-down exploration of the grammar.",
        "We will only create categories and rules that are accessible from the root symbol, but we may still produce categories that derive no terminal string.",
        "The top-down strategy may not provide effective guidance, however, if the set D(F) contains many alternative descriptions of F. But suppose we can associate with every instantiated description D a unique canonical description that has the same f-structure as its minimal model, and suppose that we then reformulate the grammar construction in terms of such canonical descriptions.",
        "This can sharply reduce the size of the grammar we produce according to any enumeration strategy, since it avoids rules and categories that express only uninformative variation.",
        "It can particularly benefit a top-down enumeration because the set D(F) will have at most one canonical member.",
        "Presumably any practical generation scheme will define and operate on canonical descriptions of some sort, but our context-free result does not depend on whether or how such descriptions might be specified and manipulated.",
        "Just as for context-free parsing, there are a number of mixed strategies that take top-down and bottom-up information into account at the same time.",
        "We can use a precomputed reachability table to guide the process of top-down exploration, for instance.",
        "Or we can simulate a left-corner enumeration of the search space, considering categories that are reachable from a current goal category and",
        "match the left corner of a possible rule.",
        "In general, almost any of the traditional algorithms for processing context-free grammars can be reformulated as a strategy for avoiding the creation of useless categories and rules.",
        "Other enumeration strategies focus on the characteristics of the input f-structure.",
        "A head-driven strategy (e.g. van Noord 1993) identifies the lexical heads first, finds the rules that expand them, and then uses information associated with those heads, such as their grammatical function assignments, to pick other categories to expand.",
        "Our proof depends on the assumption that; the input F is fully specified so that the set of possible instantiations is finite.",
        "Dymetman (1991), van Noord (1993), and Wedekind (1999) have shown that it is in general undecidable whether or not there are any strings associated with an f-structure that has units in addition to those in the input.",
        "Indeed, our proof of context-freeness does not go through if we allow new units to be hypothesized arbitrarily, beyond the ones that appear in F; if tins is permitted, we cannot establish a finite bound on the number of possible categories.",
        "This is unfortunate, since there may be interesting practical situations in which it is convenient to leave unspecified the value of a particular feature.",
        "However, if there can be only a finite number of possible values for an underspecified feature, the context-free result can still be established.",
        "We create from F a set of alternative structures .P1 by filling in all possible values of the unspecified features, and we produce the context-free grammar corresponding to each of them.",
        "Since a finite union of context-free languages is context-free, the set of strings generated from any of these structures remains in that class.",
        "A final comment about the generation problem for other high-order grammatical formalisms.",
        "Our proof depends on several features of LFG: the context-free base, the piecewise correspondence of phrase structure and f-structure units, and the idempotem7y of the functional description language.",
        "PATH, shares these properties, although the correspondence is implicit in the mechanism and not reified as a linguistically significant concept.",
        "So, our proof can be used to establish the context-free result for PATR.",
        "On the other hand, it is not clear whether the string set corresponding to an underlying IIPSG structure is context-free.",
        "IIPSG (Pollard and Sag 1994) does not make direct use of a context-free skeleton, and operations other than concatenation may be used to assemble a collection of substrings into an entire sentence.",
        "We cannot extend our proof to HPSG unless the effect of these mechanisms can be reduced to an equivalent characterization with a context-free base.",
        "However, grammars written for the ALE system's logic of typed feature structures (Carpenter and Penn 1994) do have a context-free component and therefore are amenable t;o the treatment we have outlined."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "We are indebted t;o John Maxwell, Hadar Shemtov, Martin Kay, and Paula Newman for many fruitful and insightful discussions of the LEG generation problem, and for criticisms and suggestions that have helped to clarify many of the mathematical and computational issues."
      ]
    }
  ]
}
