{
  "info": {
    "authors": [
      "Jordi Turmo",
      "Horacio Rodríquez"
    ],
    "book": "Conference on Computational Natural Language Learning and of the Second Learning Language in Logic Workshop CoNLL and LLL",
    "id": "acl-W00-0723",
    "title": "Learning IE Rules for a Set of Related Concepts",
    "url": "https://aclweb.org/anthology/W00-0723",
    "year": 2000
  },
  "references": [
    "acl-W97-1002"
  ],
  "sections": [
    {
      "heading": "1 Introduction",
      "text": [
        "The growing availability of on-line text has led to an increase in the use of automatic knowledge acquisition approaches from textual data.",
        "In fact, a number of Information Extraction (IE) systems has emerged in the past few years in relation to the MUC conferencesl.",
        "The aim of an IE system consists in automatically extracting pieces of information from text, being this information relevant for a set of prescribed concepts (scenario).",
        "One of the main drawbacks of applying IE systems is the high cost involved in manually adapting them to new domains and text styles.",
        "In recent years, a variety of Machine Learning (ML) techniques has been used to improve the portability of IE systems to new domains, as in SRV (Freitag, 1998), RAPIER (Calif and Mooney, 1997), LIEP (Huffman, 1996), CRYSTAL (Soderland et al., 1995) and WHISK (Soderland, 1999) .",
        "However, some drawbacks remain in the portability of these systems: a) existing systems generally depend on the supported text style and learn IE-rules either for structured texts, semi-structured texts or free text , b) IE systems are mostly single-concept learning systems, c) consequently, an extractor (e.g., a rule set) is learned for each concept within the scenario in an independent manner, d) the order of execution of the learners is set manually, and so are the scheduling and way of combination of the resulting extractors, and e) focusing on the training data, the size of available training corpora can be inadequate to accurately learn extractors for all the concepts within the scenario2.",
        "This paper describes EVIUS, a multi-concept learning system for free text that follows a multi-strategy constructive learning approach (MCL) (Michalshi, 1993) and supports insufficient amounts of training corpora.",
        "EVIUS is a component of a multilingual IE system, M-TURBIO (Turmo et al., 1999).",
        "2 EVIUS.",
        "Learning rule sets for a set of related concepts The input of EVIUS is both a partially-parsed semantically-tagged3 training corpus and a description of the desired target structure.",
        "This description is provided as a set of concepts C related to a set of asymmetric binary relations, R. In order to learn set S of IE rule sets for the whole C, EVIUS uses an MCL approach integrating constructive learning, closed-loop learning and deductive restructuring (Ko, 1998).",
        "In this multi-concept situation, the system determines which concepts to learn and, later, incrementally updates S. This can be relatively straightforward when using knowledge about the target structure in a closed-loop learning approach.",
        "Starting with C, EVIUS reduces set U of unlearned concepts iteratively by selecting subset P C U formed by the primitive concepts in U and learning a rule set for each c E P 4.",
        "For instance, the single colour scenarios in fig",
        "ure 1 is provided to learn from instances of the following three related concepts: colour, such as in instance \"azul ligeramente claro\" (slightly pale blue), colour_interval, as in \"entre rosa y rojo sangre\" (between pink and blood red), and to_change, as in \"rojo vira a marrOn\" (red changes to brown).",
        "Initially, U = C ={colour, colour_interval, to_change}.",
        "Then, EVIUS calculates P ={colour} and once a rule set has been learned for colour, the new Li ={colour_interval, to_change} is studied identifying P = U.",
        "In order to learn a rule set for a concept, EVIUS uses the relational learning method explained in section 3, and defines the learning space by means of a dynamic predicate model.",
        "As a pre-process of the system, the training corpus is translated into predicates using the following initial predicate model: a) attributive meta-predicates: pos_X(A), isa_X (A), has_hypernym_X (A), word _X (A) and lemma_X(A), where Xis instantiated with closed categories, b) relational meta-predicates: distance_le_X(A,B), stating that there are X terminal nodes, at most, between A and B, and c) relational predicates: ancestor(A,B), where B is the syntactic ancestor of A, and brother(A,B), where B is the right brother node of A sharing the syntactic ancestor.",
        "Once a rule set for concept c is learned, new examples are added for further learning by means of a deductive restructuring approach: training examples are reduced to generate a more compact and useful knowledge of the learned concept.",
        "This is achieved by using the induced rule set and a syntactico-semantic transformational grammar.",
        "Further to all this, a new predicate isa_c is added to the model.",
        "For instance, in figure 26, the Spanish sentence \"su color rojo vira a marrOn oscuro\" (its red colour changes to dark brown) has",
        "two examples of colour, n3 and n6+n7, being these \"rojo\" (red) and \"marrOn\"+\"oscuro\" (dark brown).",
        "No reduction is required by the former.",
        "However, the latter example is reduced to node n6'.",
        "As a consequence, two new attributes are added to the model: isa_colour(n3) and isa_colour(n6').",
        "This new knowledge will be used to learn the concepts to_change and colour_interval."
      ]
    },
    {
      "heading": "3 Rule set learning",
      "text": [
        "EVIUS uses FOIL (First-order Induction Learning) (Quinlan, 1990) to build an initial rule set Ro from a set of positive and negative examples.",
        "Positive examples E+ can be selected using a friendly environment either as:",
        "• test relations: c(Ai,A2) where both A1 and A2 are terminal nodes that exactly delimit a text value for c. For instance, both text relations colour(n3,n3) or colour(n6,n7) in figure 2, or as: • ontology relations: c(Ai,A2,... ,An) where all Ai are terminal nodes which are instances of already learned concepts related to c in the scenario.",
        "For instance, the ontology relation to_change(n3,n6')7 , in the same figure, means that the colour represented by instance n3 changes to that represented by n6'.",
        "Negative examples 8– are automatically selected as explained in section 3.1.",
        "If any uncovered examples set, Eu+ , remains after FOIL's performance, this is due to the lack of sufficient examples.",
        "Thus, the system tries to improve recall by growing set E+ with artificial examples (pseudo-examples), as explained in 3.2.",
        "A new execution of FOIL is done by using the new E+.",
        "The resulting rule set TV0 is combined with 'R.0 in order to create 'R.1 by appending the new rules from 74 to 'R.o.",
        "Consequently, the recall value of 'R.1 is forced to be at least equal to that of 'R.0, although the accuracy can decrease.",
        "A better method seems to be the merging of rules from TZ.10 and 'R.0 by studying empirical subsumptions.",
        "This last combination allows to create more compact and accurate rule sets.",
        "EVIUS uses an incremental learning approach to learn rule sets for each concept.",
        "This is done by iterating the process above while uncovered examples remain and the F1 score increment (AFI) is greater than predefined constant a:"
      ]
    },
    {
      "heading": "3.1 Generating relevant negative examples",
      "text": [
        "Negative examples can be defined as any combination of terminal nodes out of E+.",
        "However, this approach produces an extremely large number of examples, out of which only a small subset is relevant to learn the concept.",
        "Related to this, (Freitag, 1998) uses words to learn only slot rules (learned from text-relation examples) , selecting as negative those non-positive word pairs that define a string as neither longer than the maximum length in positive examples, nor shorter than the minimum.",
        "A more general approach is adopted to define the distance between possible examples in the learning space, applying a clustering method using positive examples as medoidss .",
        "The N nearest non-positive examples to each medoid can be selected as negative ones.",
        "Distance, in our case, must be defined as multidimensional due to the typology of occurring features.",
        "It is relatively easy to define distances between examples for word_X and lemma_X predicates, being 1 when X values are equal, and 0 otherwise.",
        "For isa_X predicates, the minimum of all possible conceptual distances (Agirre and Rigau, 1995) between X values in EWN has been used.",
        "Greater difficulty is encountered when defining a distance from a morpho-syntactic point of view (e.g., a pronoun seems to be closer to a noun than a verb).",
        "In (Turmo et al., 1999), the concept of S-set has been presented as a syntactic relation generalization, and a distance measure has been based on this concept."
      ]
    },
    {
      "heading": "3.2 Creating pseudo-examples",
      "text": [
        "A method has been used inspired by the generation of convex pseudo data (Breiman, 1998), in which a similar process to gene-combination in genetic algorithms is used.",
        "For each positive example c(241, , An)9 of concept c to be dealt with, an attribute vector is defined as (word_XB„... , ,sem_XB,,,context) where B1, .",
        ".",
        ".",
        ", Bn are the unrepeated terminal nodes from A1, , An, context is the set of all predicates subsumed by the syntactico-semantic structure between the nearest positive example on the left and the nearest one on the right, and sem_XB, is the list of isa_X and has_hypernymX predicates for B,.",
        "Then, for each example uncovered by the rule set learned by FOIL, a set of pseudo-examples is generated.",
        "A pseudo-example is built by combining both the uncovered example vector and a randomly selected covered one.",
        "This is done as follows: for each dimension, one of both possible values is randomly selected as value for the pseudo-example."
      ]
    },
    {
      "heading": "4 Evaluation",
      "text": [
        "EVIUS has been tested on the mycological domain.",
        "A set of 68 Spanish mycological documents (covering 9800 words corresponding to 1360 lemmas) has been used.",
        "13 of them have been kept for testing and the others for training.",
        "The target ontology consisted of 14 concepts and 24 relations.",
        "Several experiments have been carried out with different training sets.",
        "Results of the initial rule set for the colour conceptl° are presented in table 1.",
        "Out of 34 in the 350 initial rule set, one of the most relevant learned rules isle: Colour (A, B):-has_hypernym_00017586n(B), has _hypernym_03464624n (A) , brother (A, B).",
        "Table 2 shows the results of adding pseudo-examples to the 35012 training set and using the algorithm in section 3.",
        "This was tested with a = 0.01 (two iterations are enough, 351 and 352) and 5 pseudo-examples for each uncovered case.",
        "The algorithm returns the rule set produced in the first iteration due to the fact that AFIT13> 0.01 between the first and the second iterations.",
        "Higher results can be generated when using lower values for a.",
        "Although no direct comparison with other systems is possible due to the domain and language used, our results can be considered state",
        "of-the-art regarding similar MUC competition tasks."
      ]
    }
  ]
}
