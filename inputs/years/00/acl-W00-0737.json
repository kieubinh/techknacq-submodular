{
  "info": {
    "authors": [
      "Guodong Zhou",
      "Jian Su",
      "TongGuan Tey"
    ],
    "book": "Conference on Computational Natural Language Learning and of the Second Learning Language in Logic Workshop CoNLL and LLL",
    "id": "acl-W00-0737",
    "title": "Hybrid Text Chunking",
    "url": "https://aclweb.org/anthology/W00-0737",
    "year": 2000
  },
  "references": [
    "acl-A88-1019",
    "acl-C92-3126",
    "acl-P98-1010",
    "acl-W95-0107",
    "acl-W99-0707"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper proposes an error-driven HMM-based text chunk tagger with context-dependent lexicon.",
        "Compared with standard HMM-based tagger, this tagger incorporates more contextual information into a lexical entry.",
        "Moreover, an error-driven learning approach is adopted to decrease the memory requirement by keeping only positive lexical entries and makes it possible to further incorporate more context-dependent lexical entries.",
        "Finally, memory-based learning is adopted to further improve the performance of the chunk tagger."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The idea of using statistics for chunking goes back to Church(1988), who used corpus frequencies to determine the boundaries of simple non-recursive noun phrases.",
        "Skut and Brants(1998) modified Church's approach in a way permitting efficient and reliable recognition of structures of limited depth and encoded the structure in such a way that it can be recognised by a Viterbi tagger.",
        "Our approach follows Skut and Brants' way by employing HMM-based tagging method to model the chunking process."
      ]
    },
    {
      "heading": "2 HMM-based Chunk Tagger with Context-dependent Lexicon",
      "text": [
        "Given a token sequence GI/ = 9192• • -9n , the goal is to find an optimal tag sequence Tr = t1t2• • •4, which maximizes log P(TrIG7):",
        "The second item in the above equation is the mutual information between the tag sequence Tr and the given token sequence G. By assuming that the mutual information between",
        "The first item of above equation can be solved by chain rules.",
        "Normally, each tag is assumed to be probabilistic dependent on the N-1 previous tags.",
        "Here, backoff bigram(N=2) model is used.",
        "The second item is the summation of log probabilities of all the tags.",
        "Both the first item and second item constitute the language model component while the third item constitutes the lexicon component.",
        "Ideally the third item can be estimated by the forward-backward algo-rithm(Rabiner 1989) recursively for the first-order(Rabiner 1989) or second-order HMMs.",
        "However, several approximations on it will be attempted later in this paper instead.",
        "The stochastic optimal tag sequence can be found by maximizing the above equation over all the possible tag sequences using the Viterbi algorithm.",
        "The main difference between our tagger and the standard taggers lies in our tagger has a context-dependent lexicon while others use a context-independent lexicon.",
        "For chunk tagger, we have gi = piwi where Wi = w1w2• • •w„, is the word sequence and Pi = 131132• 'per, is the part-of-speech(POS) sequence.",
        "Here, we use structural tags to representing chunking(bracketing and labeling) structure.",
        "The basic idea of representing the structural tags is similar to Skut and Brants(1998) and the structural tag consists of three parts: 1) Structural relation.",
        "The basic idea is simple: structures of limited depth are encoded using a finite number of flags.",
        "Given a sequence of input tokens(here, the word and POS pairs), we consider the structural relation between the previous input token and the current one.",
        "For the recognition of chunks, it is sufficient to distinguish the following four different structural relations which uniquely identify the substructures of depth 1(Skut and Brants used seven different structural relations to identify the substructures of depth 2).",
        "• 00: the current input token and the previous one have the same parent • 90: one ancestor of the current input token and the previous input token have the same parent • 09: the current input token and one ancestor of the previous input token have the same parent • 99 one ancestor of the current input token and one ancestor of the previous input token have the same parent",
        "Compared with the B-Chunk and I-Chunk used in Ramshaw and Marcus(1995)., structural relations 99 and 90 correspond to B-Chunk which represents the first word of the chunk, and structural relations 00 and 09 correspond to I-Chunk which represents each other in the chunk while 90 also means the beginning of the sentence and 09 means the end of the sentence.",
        "2)Phrase category.",
        "This is used to identify the phrase categories of input tokens.",
        "3)Part-of-speech.",
        "Because of the limited number of structural relations and phrase categories, the POS is added into the structural tag to represent more accurate models.",
        "Principally, the current chunk is dependent on all the context words and their POSs.",
        "However, in order to decrease memory requirement and computational complexity, our baseline HMM-based chunk tagger only considers previous POS, current POS and their word tokens whose POSs are of certain kinds, such as preposition and determiner etc.",
        "The overall precision, recall and Fo=1 rates of our baseline tagger on the test data of the shared task are 89.58%, 89.56% and 89.57%."
      ]
    },
    {
      "heading": "3 Error-driven Learning",
      "text": [
        "After analysing the chunking results, we find many errors are caused by a limited number of words.",
        "In order to overcome such errors, we include such words in the chunk dependence context by using error-driven learning.",
        "First, the above HMM-based chunk tagger is used to chunk the training data.",
        "Secondly, the chunk tags determined by the chunk tagger are compared with the given chunk tags in the training data.",
        "For each word, its chunking error number is summed.",
        "Finally, those words whose chunking error numbers are equal to or above a given threshold(i.e. 3) are kept.",
        "The HMM-based chunk tagger is retrained with those words considered in the chunk dependence context.",
        "The overall precision, recall and Fo=1 rates of our error-driven HMM-based chunk tagger on the test data of the shared task are 91.53%, 92.02% and 91.77"
      ]
    },
    {
      "heading": "4 Memory based Learning",
      "text": [
        "Memory-based learning has been widely used in NLP tasks in the last decade.",
        "Principally, it falls into two paradigms.",
        "First paradigm represents examples as sets of features and carries out induction by finding the most similar cases.",
        "Such works include Daelemans et al.",
        "(1996) for POS tagging and Cardie(1993) for syntactic and semantic tagging.",
        "Second paradigm makes use of raw sequential data and generalises by reconstructing test examples from different pieces of the training data.",
        "Such works include Bod(1992) for parsing, Argamon et al.",
        "(1998) for shallow natural language patterns and Daelemans et al.",
        "(1999) for shallow parsing.",
        "The memory-based method presented here follows the second paradigm and makes use of raw sequential data.",
        "Here, generalization is performed online at recognition time by comparing",
        "the new pattern to the ones in the training corpus.",
        "Given one of the N most probable chunk sequences extracted by the error-driven HMM-based chunk tagger, we can extract a set of chunk patterns, each of them with the format: XP = porlArrin±lpm+i, where ril+1 is the structural relation between pi and pi+1.",
        "As an example, from the bracketed and labeled sentence:",
        "For every chunk pattern, we estimate its probability by using memory-based learning.",
        "If the chunk pattern exists in the training corpus, its probability is computed by the probability of such pattern among all the chunk patterns.",
        "Otherwise, its probability is estimated by the multiply of its overlapped sub-patterns.",
        "Then the probability of each of the N most probable chunk sequences is adjusted by multiplying the probabilities of its extracted chunk patterns.",
        "Table 1 shows the performance of error-driven HMM-based chunk tagger with memory-based learning."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "It is found that the performance with the help of error-driven learning is improved by 2.20% and integration of memory-based learning further improves the performance by 0.35% to 92.12%.",
        "For future work, the experimentation on large scale task will be speculated in the near future.",
        "Finally, a closer integration of memory-based"
      ]
    }
  ]
}
