{
  "info": {
    "authors": [
      "Laura Kallmeyer"
    ],
    "book": "Joint SIGDAT Conference on Empirical Methods in Natural Language Processing and Very Large Corpora",
    "id": "acl-W00-1324",
    "title": "A Query Tool for Syntactically Frame Acquisition",
    "url": "https://aclweb.org/anthology/W00-1324",
    "year": 2000
  },
  "references": [
    "acl-H94-1020"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper presents a query tool for syntactically annotated corpora.",
        "The query tool is developed to search the Verbmobil treebanks annotated at the University of Tubingen.",
        "However, in principle it also can be adapted to other corpora such as the Negra Corpus, the Penn Treebank or the French treebank developed in Paris.",
        "The tool uses a query language that allows to search for tokens, syntactic categories, grammatical functions and binary relations of (immediate) dominance and linear precedence between nodes.",
        "The overall idea is to extract in an initializing phase the relevant information from the corpus and store it in a relational database.",
        "An incoming query is then translated into a corresponding SQL query that is evaluated on the database."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": []
    },
    {
      "heading": "1.1 Syntactic annotation and linguistic research",
      "text": [
        "With the increasing availability of large amounts of electronic texts, linguists have access to more and more material for empirically based linguistic research.",
        "Furthermore, electronic corpora are more and more richly annotated and thereby more and more detailed and structured information contained in the corpora becomes accessable.",
        "Currently many corpora are tagged with morphosyntac-tic categories (part-of-speech) and there are already several syntactically annotated corpora.",
        "Examples are the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) annotated at the University of Pennsylvania, the Negra corpus (Brants et al., 1999) developed in Saarbrficken, the Verbmobil treebanks (Hin-richs et al., 2000) annotated in Tubingen 'The work presented here was done as part of a project in SFB 441 \"Linguistic Data Structures\" at the University of Tubingen.",
        "and the French treebank annotated in Paris (Abeille and Clement, 1999).",
        "However, in order to have access to these rich linguistic annotations, adequate query tools are needed.",
        "In the following, an example of a linguistically relevant construction is considered that illustrates how useful access to structural information in a corpus might be.",
        "fiber Chomsky habe ich ein Buch about Chomsky have I a book",
        "Linguists are often concerned with constructions that seem not very natural and where intuitions about grammaticality fail.",
        "An example is (1) where we have an accusative object (ein Buch) which is positioned between the two verbal elements and whose modifier (the prepositional phrase fiber Chomsky) is topicalized.",
        "Some people claim (1) to be ungrammatical whereas other people are inclined to accept it.",
        "In these cases it is very useful to search in an adequate corpus for more natural data showing the same construction (see also (Meurers, 1999) for other examples of the use of corpora for linguistic research).",
        "In order to find structures like (1) in a German corpus, one needs to search for",
        "(a) a prepositional phrase modifying the accusative object and preceding the finite verb (i.e. in the so-called vorfeld), and (b) an accusative object between finite verb.",
        "and infinite verb forms (i.e. in the so-called mittelfeld)",
        "Obviously, two things need to be available in order to enable such a search.",
        "On the one hand, one needs a corpus with an annotation that is rich enough to encode the properties",
        "(a) and (b).",
        "On the other hand, one needs a query tool with a query language that allows to express the properties (a) and (b).",
        "Corpora encoding features such as (a) and (b) are for example the Verbmobil treebanks."
      ]
    },
    {
      "heading": "1.2 Current query tools",
      "text": [
        "Query tools such as xkwic (Christ, 1994) that allow to search on the tokens and their part-of-speech categories using regular expressions do not allow a direct search on the syntactic annotation structures of the corpus, i.e. a search for specific relations between nodes in the annotation such as dominance or linear precedence.",
        "Therefore many queries a linguist would like to ask using a syntactically annotated corpus either cannnot be expressed in a regular expression based language or at least cannot be expressed in an intuitive way.",
        "Even more recent query languages as Sgm1QL (Le Maitre et al., 1998) and XML-QL (Deutsch et al., 1999) that refer to the SGML or XML annotation of a corpus are in general not adequate for syntactically annotated corpora: if the annotations are trees and the nesting of SGML/XML elements encodes the tree structure, such query languages work nicely.",
        "With regular path expressions as supported by XML-QL, it is possible to search not only for parent but also for dominance relations.",
        "However, in order to deal with discontinuous constituents, most syntactically annotated corpora do not contain trees but slightly different data structures.",
        "The Penn Treebank for example consists of trees with an additional coindexation relation, Negra allows crossing branches and in Verbmobil, an element (a treelike structure) in the corpus might contain completely disconnected nodes.",
        "In order to express these annotations in XML, one has to encode for example each node and each edge as a single element as in (Mengel and Lezius, 2000).",
        "But then a query for a dominance relation can no longer be formulated with a regular path expression.",
        "In this paper, I propose a query tool that allows to search for parent, dominance and linear precedence relations even in corpora annotated with structures slightly different from trees."
      ]
    },
    {
      "heading": "2 The Verbmobil treebanks",
      "text": [
        "The German Verbmobil corpus (Stegmann et al., 1998; Hinrichs et al., 2000) is a treebank annotated at the University of Tubingen",
        "that contains approx.",
        "38.000 trees (or rather treelike annotation structures since, as already mentioned, the structures are not always trees).",
        "The corpus consists of spoken texts restricted to the domain of arrangement of business appointments.",
        "The Verbmobil corpus is part-of-speech tagged using the Stuttgart Tubingen tagset (STTS) described in (Schiller et al., 1995).",
        "One of the design decisions in Verbmobil was that for the purpose of reusability of the treebank, the annotation scheme should not reflect a commitment to a particular syntactic theory.",
        "Therefore a surface-oriented annotation scheme was adopted that is inspired by the notion of topological fields in the sense of (Hale, 1985).",
        "The discontinuous positioning of the verbal elements in verb-first and verb-second sentences (as in (1) for example) is the traditional reason to structure the German sentence by means of topological fields: The verbal elements have the categories LK (linke Klammer) and VC (verbal complex), and roughly everything preceding the LK forms the `vorfeld' VF, everything between LK and VC forms the `mittelfeld' MF and the `nachfeld' NF follows the verbal complex.",
        "The Verbmobil corpus is annotated with syntactic categories as node labels, grammatical functions as edge labels and dependency relations.",
        "The syntactic categories are based on traditional phrase structure and on the theory of topological fields.",
        "In contrast to Negra or Penn Treebank, there are neither crossing branches nor empty categories.",
        "Instead, de",
        "pendency relations are expressed within the grammatical functions (e.g. OA-MOD for a constituent modifying the accusative object).",
        "A sample annotation conformant to the Verbmobil annotation scheme is the annotation of (1) shown in Fig. 1.",
        "(The elements set in boxes are edge labels.)",
        "In order to search for structures as in Fig. 1, one needs to search for trees containing a node n1 with label PX and grammatical function OA-MOD, a node n2 with label VF that dominates n1, a node n3 with label MF and a node 714 with label NX and grammatical function OA that is immediately dominated by n3.",
        "Evaluating a query for structures as in Fig. 1 on the Verbmobil corpus gives results such as (2) that sound much more natural than the constructed example (1).",
        "tja , fiber Flugverbindungen habe ich about flight connections have I (2)leider keine Information .",
        "unfortunately no information .",
        "`unfortunately I have no information about flight connections.'",
        "This example illustrates the usefulness of syntactic annotations for linguistic research and it shows the need of query languages and query tools that allow access to these annotations."
      ]
    },
    {
      "heading": "3 The query language",
      "text": []
    },
    {
      "heading": "3.1 Syntax",
      "text": [
        "As query language for the German Verbmobil corpus, a first order logic without quantification is chosen where variables are interpreted as existentially quantified.",
        "Negation is only allowed for atomic formula.",
        "It seems that even this very simple logic already gives a high degree of expressive power with respect to the queries linguists are interested in (see for example (Kallmeyer, 2000) for theoretical investigations of query languages).",
        "However, it might be that at a later stage the query language will be extended.",
        "Let C (the node labels, i.e. syntactic categories and part-of-speech categories), E (the edge labels, i.e. grammatical functions) and T (the terminals, i.e. tokens) be pairwise disjoint finite sets.",
        "> , >> , .. are constants for the binary relations immediate dominance (parent relation), dominance (reflexive transitive closure of immediate dominance) and linear precedence.",
        "The set IN of natural numbers is used as variables.",
        "Further, &, I , !",
        "are logical connectives (conjunction, disjunction, and negation).",
        "(a) for all iE IN, tE T: token (i)=t and token (i) !=t are queries, (b) for all iE INT, c E C: cat (i)=c and cat (i) !=c are queries, (c) for all iE eE E: fct (i)=e and fct(i)!=e are queries, (d) for all jE IN: i > j and i !> j are queries, i >> j and i !>> j are queries, i.. j and i !",
        ".",
        ".",
        "j are queries, (e) for all queries qi, q2: ql & q2 and (qi I q2) are queries.",
        "Of course, when adapting this language to another corpus, depending on the specific annotation scheme, other unary or binary predicates might be added to the query language.",
        "This does not change the complexity of the query language in general.",
        "However, it is also possible that at a later point negation needs to be allowed in a general way or that quantification needs to be added to the query language for linguistic reasons.",
        "Such modifications would affect the complexity of the language and the performance of the tool.",
        "Therefore the decision was taken to keep the language as simple as possible in the beginning."
      ]
    },
    {
      "heading": "3.2 Intended models",
      "text": [
        "In the case of the German Verbmobil corpus, the data structures are not trees, since structures as in Fig. 2, which shows the annotation of the long-distance wh-movement in (3), can occur.",
        "The structure in Fig. 2 does not have a unique root node, and the two nodes with label SIMPX have neither a dominance nor a linear precedence relation.",
        "(3) wen glaubst du liebt Maria whom believe you loves Maria `whom do you believe Maria loves' Therefore, the models of our queries are defined as more general structures than finite trees.",
        "A model is a tuple (U, P, G, p, n, a) where U is the set of nodes, P, 7, and G are the",
        "binary relations immediate dominance (parent), dominance and linear precedence, p is a function assigning syntactic categories or part-of-speech tags to nodes, n is a function mapping edges to grammatical functions, and a assigns tokens to the leaves (i.e. the nodes that do not dominate any other node).",
        "1. u is a finite set with u n (C u E UT) = 0, the set of nodes.",
        "2.",
        "P, G,D EU xU, such that: (a) P is irreflexive, and for all x E U there is at most one v E U with (v,x) E P. (b) D is the reflexive transitive closure of P, and D is antisymmetric.",
        "(c) G is transitive.",
        "(d) for all x,y E U: if (x,y) E G, then (x,y) D and (y, x) 0 D. (e) for all x,y E U: (x,y) E G if for all z,w E U with (x,z),(y,w) E (z, w) E G holds.",
        "(f) for all x,y,z EU: if (x, y), (x, z) E D, then either (x, z) E D or (z, x) E D or (x, z) E G or (z, x) E G. 3. :U C is a total function.",
        "4. y :P E is a total function.",
        "5. a : {u e U I there is no u' with (u, u') E",
        "With (b), (c) and (d), G is also irreflexive and antisymmetric.",
        "In contrast to finite trees, our query models do not necessarily have a unique root node, i.e. a node that dominates all other nodes.",
        "Consequently, the so-called exhaustiveness property does not hold since two nodes in a query model might be completely disconnected.",
        "In other words, it does not hold in general that (x, y) E D or (y, x) E D or (x, y) E G or (y, x) E G for all x,y E U.",
        "This holds only for nodes x, y E U where a node z exists that dominates x and y."
      ]
    },
    {
      "heading": "3.3 Semantics",
      "text": [
        "Satisfiability of a query q by a query model M is defined in the classical model-theoretic way with respect to an injective assignment g mapping node variables to nodes in the query model.",
        "• M token(i)=t iff a(g(i)) =t.",
        "• M token(i) !=t iff a(g(i)) Ot.",
        "• M cat(i)=c iff p(g(i)) =c.",
        "• M cat (i) !=c iff p(g(i)) 4c.",
        "• M fct(i)=e if there is au E U with (u, g(i)) E P and ri((u,g(i))) =e.",
        "• M f ct (i) !",
        "=e if there is no u E U with (u, g(i)) E P and 71((u, g(i))) =e.",
        "For all jE IN: • M > jiff (g(i),g(j)) E P (i.e. g(i) immediately dominates g(j)) • M 19i !> jiff (g(i),g(j)) OP • M i >> jiff (g(i),g(j)) E D (i.e. g(i) dominates g(j)) • M 19i !» jiff (g(i),g(j)) OD • M jiff (g(i),g(j)) E .0 (i.e. g(i) is left of g(j)) • M 19i !..",
        "j iff (g(i),g(j)) G For all queries qi, q2: • M & q2 if MI=qi and M • M 1s (qi I q2) iff M jsqi or M q2.",
        "Note that the condition that g needs to be injective means that different variables are considered to refer to different-nodes.",
        "In this respect, Def.",
        "3 differs from traditional model-theoretic semantics.",
        "As an example, consider the query for structures as in (1) that is shown in (4).",
        "The structure in Fig. 1 is a query model satisfying (4)."
      ]
    },
    {
      "heading": "4 Storing the corpus in a database",
      "text": [
        "As already mentioned, the general idea of the query tool is to store the information one wants to search for in a relational database and then to translate an expression in the query language presented in the previous section into an SQL expression that is evaluated on the database.",
        "The first part is performed by an initializing component and needs to be done only once per corpus, usually by the corpus administrator.",
        "The second part, i.e. the querying of the corpus, is performed by a query component.",
        "The tool is implemented in Java with Java Database Connectivity (JDBC) as interface and mysql as database management system."
      ]
    },
    {
      "heading": "4.1 The relational database schema",
      "text": [
        "The German Verbmobil corpus consist of several subcorpora.",
        "In the relational database there are two global tables, node_class and pair_class.",
        "Besides these, for each of the sub-corpora identified by i there are tables to-kens_i and node_pair_i.",
        "The database schema is shown in Fig. 3.",
        "The arrows represent foreign keys.",
        "The column did in the table node_pair_i, for example, is a foreign key referring to the column cl_id in the table pair_class.",
        "This means that each entry for did in node_pair_i uniquely refers to one entry for cl_id in pair_class.",
        "The content of the tables is as follows:",
        "• node_class contains node classes characterized by category (node label) and grammatical function (edge label between the node and its mother).",
        "Each node class has a unique identifier, namely the column n_id.",
        "• pair_class contains classes of node pairs characterized by the two node classes and the parent, dominance and linear precedence relation between the two nodes.",
        "The columns pl, p2, dl, d2, 11 and 12 stand for binary relations and have values 1 or 0 depending on whether the relation holds or not.",
        "pl signifies immediate dominance of the first node over the second, p2 immediate dominance of the second over the first, dl dominance of the first over the second, etc.",
        "Each node pair class has a unique identifier, namely its cl_id.",
        "• tokens_i contains all leaves from subcor-pus i with their tokens (word).",
        "• node_pair_i contains all node pairs from",
        "subcorpus i with their pair class.",
        "Of course, only pairs of nodes belonging to one single annotation structure are stored."
      ]
    },
    {
      "heading": "4.2 Initializing the database",
      "text": [
        "The storage of the corpus in the database is done by an initializing component.",
        "This component extracts information from the structures in export format (the format used for the German Verbmobil corpus) and stores them in the database.",
        "The export format explicitly encodes tokens, categories and edge labels, linear precedence between leaves and the parent (immediate dominance) relation.",
        "Dominance and linear precedence in general however need to be precompiled.",
        "First the dominance relation is computed simply as reflexive transitive closure of the parent relation.",
        "Linear precedence on the leaves can be immediately extracted from the export format.",
        "When computing linear precedence for internal nodes, the specific properties of the data structures in Verbmobil (see Section 3) must be taken into account.",
        "Unlike in finite trees, for two nodes ul, u2, the fact that ui dominates some x and u2 dominates some y and x is left of y is not sufficient to decide that ui is left of u2.",
        "Instead (see axiom (e) in Def.",
        "2) the following holds for two nodes ul, u2: ui is left of u2 iff for all x, y dominated by respectively: x is left of y.",
        "In general, the database schema itself does",
        "not reflect the concrete properties of the query model, in particular the properties of the binary relations are not part of the database schema, e.g. considering only the database, the dominance and linear precedence relations are not necessarily transitive.",
        "Therefore, the query tool can be easily adapted to other data structures, for example to feature structures with reentrancy as annotations.",
        "In this case, a modification of the part of the initializing component that computes the binary relations would be sufficient.",
        "As an example, consider how sentence 24 in the subcorpus cd20 (identifier 20) is stored in the database.",
        "This sentence was chosen for the simple reason that it is not too long but contains enough nodes to provide a useful example.",
        "Besides this, its construction and its tokens are not of any interest here.",
        "Fig.",
        "4 shows the sentence in its export format, i.e. the way it originally occurs in the corpus, together with a picture of the corresponding structure.",
        "Parts of the tables in the database concerning sentence 24 are shown in Fig. 5.",
        "Each line in the export format corresponds to one node.",
        "The nodes are assigned numbers 0, 1, ... in the order of the lines in the export format.",
        "The nodes with tokens (i.e. that are leaves) are inserted into the table tokens20.",
        "Furthermore, each pair of nodes occurring in sentence 24 is inserted into the table node_pair20 together with its pair class.",
        "Both orders of a pair are stored.'",
        "The pair classes and node classes belonging to a pair can be found in the two global tables.",
        "Consider for example the nodes 9 and 10 in sentence 24 (the node labelled NX that dominates beides zusammen and the topmost node with label NX).",
        "The did of this pair is 1327.",
        "'In a previous version just one order was stored but it turned out that for some queries this causes an exponential time complexity depending on the number of variables occurring in the query.",
        "This problem is avoided storing both orders of a node pair.",
        "The corresponding entry in pair_class tells us that the second node is the mother of the first, that the second dominates the first, and that there is no linear precedence relation between the two nodes.",
        "Furthermore, the node classes identified by n_idl and n_id2 are such that the first node has label NX and grammatical function HD whereas the second has label NX and no grammatical function."
      ]
    },
    {
      "heading": "4.3 The size of the database",
      "text": [
        "So far, in order to test the tool, approximately one quarter of the German Verbmobil corpus is stored in the database, namely the following sub corpora:",
        "The table pair_class has 23024 entries and node_class has 213 entries.",
        "The following table shows the current size of the files:"
      ]
    },
    {
      "heading": "5 Searching the corpus",
      "text": [
        "In order to search the corpus, one needs of course to know the specific properties of the annotation scheme.",
        "These are described in the STTS guidelines (Schiller et al., 1995) and the Verbmobil stylebook (Stegmann et al., 1998) that must be both available to any user of the query tool.",
        "Currently, the query component does not yet process all possible expressions in the query language.",
        "In particular, it does not allow disjunctions and it does not allow to query for tokens.",
        "Other atomic queries combined with with negations and conjunctions are possible.",
        "In particular, complex syntax-tic structures involving category and edge labels and binary relations can be searched.",
        "The query component will be completed very soon to process all queries defined in Section 3.",
        "The query component takes an expression in the query language as input and translates this into a corresponding SQL expression, which is then passed to the database.",
        "As an example, consider again the query (4) repeated here as (5):",
        "For query (5) as input performed on the subcorpus cd20, the query component produces the following SQL query:",
        "As a second example consider the search for long distance wh-movements as in (3).",
        "The annotation of (3) using the Verbmobil annotation scheme was shown in Fig. 2.",
        "Such structures might be characterized by the following properties: there is an interrogative pronoun (part-of-speech tag PwS for substituting interrogative pronoun) that is part of a simplex clause and there is another simplex clause containing a finite verb such that the two simplex clauses are not connected and the pronoun precedes the finite verb.",
        "This leads to the query (6):"
      ]
    },
    {
      "heading": "AND np1.cl_id=pc1.cl_id AND np1.node1=np2.nodel AND np1.node2=np3.nodel AND np1.tree_id=np2.tree_id AND np2.cl_id=pc2.cl_id AND np2.node2=np4.node1 AND np2.tree_id=np3.tree_id AND np3.cl_id=pc3.cl_id AND np3.node2=np4.node2 AND np3.tree_id=np4.tree_id AND np4.cl_id=pc4.cl_id;",
      "text": [
        "Currently the database and the tool are running on a Pentium II PC 400MHz 128MB under Linux.",
        "On this machine, example (5) takes 1.46 sec to be answered by mysql, and example (6) takes 6.43 sec to be answered.",
        "This shows that although the queries, in particular the last one, are quite complex and involve many intermediate results, the performance of the system is quite efficient.",
        "The performance of course depends crucially on the size of intermediate results.",
        "In cases where more than one node pair is searched for (as in the two examples above) the order of the pairs is important since the result set of the first pair restricts the second pair.",
        "In (5) for example, first a node pair with a PX with function OA-MOD dominated by a VF is searched for.",
        "Afterwards, the search for the NX with function OA in the MF is restricted to those trees that were found when searching for the first pair.",
        "Obviously, the first pair is much more restrictive than the second.",
        "If the order is reversed, the query takes much more time to process.",
        "Currently the ordering of the pairs needs to be done by the user, i.e. depends on the incoming query.",
        "However, we plan to implement at least partly an ordering of the binary conjuncts in the query depending on the frequency of the syntactic categories and grammatical functions involved in the pairs.",
        "The obvious advantage of using a relational database to store the corpus is that some parts of the work are taken over by the database management system such as the search of the corpus.",
        "Furthermore, and this is crucial, the indexing functionalities of the database management system can be used to increase the performance of the tool, e.g. indexes are put on did in node_pair_i and on n_idl and n_id2 in pair_class."
      ]
    },
    {
      "heading": "6 Conclusion and future work",
      "text": [
        "In this paper, I have presented a query tool for syntactically annotated corpora that is developed for the German Verbmobil treebank annotated at the University of Tubingen.",
        "The key idea is to extract in an initializing phase the information one wants to search for from the corpus and to store it in a relational database.",
        "The search itself is done by translating an input query that is an expression in a simple quantifier free first order logic into an SQL query that is then passed to the database system.",
        "An obvious advantage of this architecture is that a considerable amount of work is taken over by the database management system and therefore needs not to be implemented.",
        "Furthermore, the mysql indexing functionalities can be used to directly affect the performance of the search.",
        "The query tool is work in progress, and I briefly want to point out some of the things that still need to be done.",
        "First, the set of queries the tool can process needs to be extended to all queries allowed in the query language.",
        "This will be done very soon.",
        "Another task for the near future is, as mentioned in the previous section, to add an or",
        "dering mechanism on binary conjuncts in order to ensure that the more restrictive node pairs are searched for first.",
        "Further, the design of a graphical user-interface to enter the queries is planned, allowing to specify queries by drawing partial trees instead of typing in the expressions in the query language.",
        "Finally, we also want to implement a web-based user-interface for the query tool.",
        "Besides these tasks that all concern the current query tool for the German Verbmobil corpus, a more general issue to persue in the future is to adapt the tool to other corpora.",
        "In some cases, this implies a modification of the way binary relations are precompiled, and in some other cases this would even lead to a modification of the query language and the database schema, namely in those cases where other binary relations are needed, e.g. the coindexation relation in the case of the Penn Treebank."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "For fruitful discussions I would like to thank Oliver Plaehn and Ilona Steiner.",
        "Furthermore, I am grateful to three anonymous reviewers for their valuable comments."
      ]
    }
  ]
}
