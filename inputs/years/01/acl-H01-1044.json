{
  "info": {
    "authors": [
      "Kumiko Tanaka-Ishii",
      "Yusuke Inutsuka",
      "Masato Takeichi"
    ],
    "book": "Human Language Technology Conference",
    "id": "acl-H01-1044",
    "title": "Japanese Text Input System With Digits",
    "url": "https://aclweb.org/anthology/H01-1044",
    "year": 2001
  },
  "references": [],
  "sections": [
    {
      "heading": "ABSTRACT",
      "text": [
        "We discuss a Japanese text input method for mobile phones.",
        "Different from the current methods that are based on kana kanji conversion system, our system asks user only to input the sequence of digits that in fact corresponds to the sequence of consonants, and then convert it directly into the final kanji form.",
        "After the examination on the number of candidates for a sequence of digits, we explain our method of word estimation based on Hidden Markov Model and describe our implementation.",
        "Then we report the results of evaluation by comparing the number of needed keystrokes to input various kinds of actual texts."
      ]
    },
    {
      "heading": "1 INTRODUCTION",
      "text": [
        "As the mobile phones have come into wide use, various internet services are now becoming available on these phones.",
        "For example, we may look up train timetables, or we may ask for the best Italian restaurant around the place.",
        "This is usually done not by calling up somebody, but by accessing a given home page on the phone, and by typing in the needed text.",
        "The problem here is that mobile phones are only equipped with a small keypad of about 12 small buttons.",
        "Therefore, people are now making great efforts to minimize the number of keystrokes to input text.",
        "This is done not only from the services side (such as to use pop up menu for selection), but also from the users' side (such as to register the frequently used keywords as shortcuts).",
        "Additionally, there is another trend that appeared recently, that is, to adopt the new input method, single-stroke-per-character method [9] [10].",
        "With the past text input method, users have to press the keys multiple times to obtain a suitable character (multiple-strokes-per-character method).",
        "For example, to input \"box\", user taps the sequence of \"2266699\".",
        "Here, 'b' corresponds to the No.2 key assigned three characters of \"ABC\", so, \"22\" means the second character \"B\".",
        "Similarly, tapping No.6 three times indicates the third character of \"MNO\" and twice No.9 is the second character of \"WXYZ\".",
        "Rather, single-strokeper-character method proposes only to press \"269\" for \"box\", the first digits of the same successive numbers.",
        "Off course this sequence does not only correspond to the word \"box\" but also to, \"any\", \"cow\", \"boy\" etc.",
        "So, the system picks all these possibilities, show them to the user and the user chooses his target word.",
        "In essence, single-stroke-per-character method tries to decrease keystrokes by increasing the ambiguity of input and resolving it interactively.",
        "In Japanese, single-stroke-per-character method corresponds to input digits that actually are consonants.",
        "In the early 80's, when the current kana kanji conversion system was still not that established, the discussion of Japanese input system only by consonants existed in the context of desktop computer applications [3] [4].",
        "Shortly after, the research extinguished without being able to find any application.",
        "However, the recent spread of mobile phones has once again brought this topic to the fore.",
        "In general, single-stroke-per-character method needs less number of key strokes for input, but it should handle far larger number of candidates compared with multiplestrokes-per-character.",
        "Additionally, this problem of explosion of candidates is greater in Japanese, first because the Japanese language contains more homonyms and second because the kana alphabet has twice as many characters as the European alphabet.",
        "Therefore, we first need to verify whether such system could be put to use.",
        "After over-viewing the current Japanese input method with digits, we will explore the possibilities for the containment of this explosion of can-didates.Table 1: Digits corresponding to consonants and vowels"
      ]
    },
    {
      "heading": "Consonants 2 INPUT WITH DIGITS",
      "text": [
        "Before we go into our topic, let us briefly explain the kana-kanji conversion system, that is used nowadays to input Japanese text on desktop computers.",
        "The final form of Japanese could be the mixture of two sort of characters; kanji, the Chinese character, kana, the phonetic alphabet character.",
        "We input such a language as follows.",
        "First, the user inputs his target word by the sequence of phonemes, using kana.",
        "Then, the input system looks for the possible final forms that correspond to the user input and show them to the user.",
        "The input finishes when user selects his choice.",
        "Currently.",
        "there are two major methods to do the same with digits.",
        "In both methods, users input the sequence of kana by digits.",
        "It is the user's responsibility to convert kana into digits.",
        "Because a kana is composed of a consonant and a vowel, each of them is attached a digit as is shown in Table 1.",
        "The user may convert any kana sequence into a unique sequence of digits with this table.",
        "For example, \"ri\" (ha) corresponds to \"61\" and \"\"(ko) to \"25\" .",
        "The two input methods differ in how users input the vowel (see Table 2').",
        "The first method is called Pocket Bell method2 (written as PB method in the followings).",
        "The user inputs the digit sequence exactly as was obtained from the Table 1.",
        "For example, to input \"Gt (reads hako, means box), user presses \"6125\" successively.",
        "This method has the priority that the user needs only to input two digits per kana just as with the ordinary keyboard on desktop computers.",
        "However, the user needs to move his fingers more than the following second method.",
        "The second method is called Kona method(with capital 'K'), the most popular input method among the mobile phone users at the moment.",
        "Users tap consonant digit the vowel digit times, just as in the multiplestrokes-per-character method for European language.",
        "In the case of \"ri \", users tap once No.6 key, then five times of No.2 key.",
        "This method has a priority that the user could keep his finger at one place to input one kana.",
        "However, he needs to make many key strokes, especially when the word contains kana with the vowel of \"e\" (four times) or \"o\" (five times).",
        "Because of this, the biggest problem of users in this method is that they tend to",
        "mistype by pressing the same button too many times than expected.",
        "Additional problem is that there is an ambiguity of man-machine interaction when users want to input the kana of the same consonant successively.",
        "For example, \"hihi\" (6262), 6 twice and then 6 twice again is exactly the same as four times of 6 (64) that corresponds to \"he\".",
        "We could observe that what users want is a method that allows text input with: less number of replacement of fingers, and less total number of keystrokes.",
        "Our method asks user to input one stroke of the digit that corresponds to the consonant of kana.",
        "In the case of :1\", the user only needs to input the sequence of \"62\" (corresponding to \"hk\").",
        "This method has a priority that user needs only one stroke per kana, and he neither needs to move fingers for a kana.",
        "The number of strokes by the user decreases to the half that of PB method.",
        "Instead, because such input sequence is more ambiguous compared with the kana-based method, the system needs to guess the actual user input among candidates that have the same sequence of consonants.",
        "For example, \"62\" not only corresponds to \"ri \", but also to other completely different kana sequences such as < \"(reads huku), \" (reads haka).",
        "Further, for each of these kana sequences, there are several final forms.",
        "For example, \".A->< \" corresponds to, \"IN\" (means dress), \"P.J<\" (means to blow), \"tt<\" (means to wipe), \"VI\" (means blessing), \"M\" (means vice) etc.",
        "Therefore, the number of candidates is expected to be very numerous compared with kana-based method.",
        "In the next section, we examine some statistics and discuss whether our input method could be put to use.",
        "more than 100Average by frequency6.291.75"
      ]
    },
    {
      "heading": "3 PROBLEM",
      "text": [
        "Japanese corpus of Mainichi newspaper articles of general news page ('94, 1.3 million word occurrences, 28Mbytes) contains 90 thousand different words.",
        "The average length of words when transliterated in kana alphabet is 4.81.",
        "Because kana has 50 different characters, 504.81 = about 143 million different kana sequences can be represented with the length of 4.81.",
        "Among 143 million, only 90 thousand are used for the vocabulary of Mainichi newspaper.",
        "Therefore, one kana sequence per one word can be easily realized if we do not think about homonyms.",
        "On the other hand, our method only has 10 digits (consonants).",
        "This can represent only 10481_ about 60 thousand different digit sequences.",
        "In this space, we should assign 90 thousand words, that is larger than the space size.",
        "Therefore, large number of words need to share a digit sequence even if all different digit sequences are used.",
        "Here already we have a hunch that the number of word candidates for a sequence becomes very large.",
        "To measure the number of candidates more precisely, we took the statistics of the number of candidates given a sequence of kana or digits that corresponds to a word.",
        "The first line of Table 3 shows the average number of candidates for an input in the case of our method and by PB or Kana.",
        "We could already see that in our case, the number of candidates amounts to more than 2 taking any word at random.",
        "The second line shows the maximum number of candidates; our case is four times as much as kana's case.",
        "Additionally, we also calculated the average number of candidates taking a word according to the word frequency distribution3.",
        "Looking at this",
        "Note that sum is calculated for all possible kana/digit sequences.",
        "line, we nearly feel that we should give up this problem.",
        "One solution to handle this explosion of candidates is to make the selection process into two stages rather than one.",
        "After input, the user is first shown to choose among possible kana sequences.",
        "For example, when he inputs \"62\", then the system first shows \"Gt/P\", (reads haki),< \"\"(reads hoko) and user chooses his target as kana alphabet sequence.",
        "Then, the user's choice is passed to the second selection process, the kana-kanji conversion system.",
        "Such solution is taken by T9[8], or ZI[10].",
        "However, we have a strong impression that such selection process had better be unified if possible.",
        "The largest reason for this is that twice of selection process makes the man-machine interaction rather complex.",
        "Additionally, the action of interactive candidate selection is slow because the user should look for his target by scrolling the candidates back and forth4.",
        "Therefore, the number of selection process had better be eliminated as much as possible.",
        "Consequently, we seek to implement our input method within single stage of selection as is in the kana-kanji conversion system.",
        "User inputs digit and our system converts it into the final form directly.",
        "In this case, we should do something with the number of candidates.",
        "There are only two solutions: 1.decrease the whole number of candidates and 2. sort them in a preferred order.",
        "In order to decrease the number of candidates, we may use the part of speech tag in order to discriminate words better.",
        "The 4th to 6th lines in Table 3 show the same statistics for the whole words but discriminated with part of speech tag.",
        "We could see that the values decrease.",
        "The naive criteria to sort candidates in a better order is the frequency.",
        "Suppose that there are 32 candidates, 2 of them are frequently used but the rest 30 are hardly used.",
        "Then if the system sorts the candidates in the frequency order and shows that two as the best, then the user need not handle the useless 30 candidates.",
        "In order to see whether frequency could be used or not, 7th to 9th rows in the Table 3 shows the same statistics calculated only for the words that occurred more frequently than 100.",
        "We could see that the number of candidates decreases to better values.",
        "Therefore, we could say that frequency information helps to show the candidates in right order.",
        "To conclude, we try to implement our Japanese input 41n Japanese, we also had character based input method named T-code system, that is proved to be the far faster method to input Japanese, compared with any kana-kanji conversion systems.",
        "A T-code is two successive keys that corresponds to one character.",
        "T-code users first memorize codes for all Japanese characters that amounts to more than 5000.",
        "Although proved to be the fastest input method, the load of memorizing T-code was too tough to be accepted by most of the end-users.",
        "KWC 1-PB KPl-PB KWC1-Kana KPl-Kanakana(PB) kana(PB) kana(Kana) kana(Kana)word phrase word phraseyes no yes noone one one oneany mobile phone input system PO-Box[5] (for Palms) any mobile phone input system system that allows user to select the final target within the single selection stage.",
        "In order to do this, we make much use of the part of speech tag and word frequency."
      ]
    },
    {
      "heading": "4 LANGUAGE MODEL",
      "text": [
        "The input system needs to estimate the corresponding word sequence from the input sequence of digits.",
        "We adopt language model based on Hidden Markov Model for this task.",
        "Suppose that C denotes the user input sequence of digits.",
        "Then the best sequence of words is defined as: = arg milax P(W(1) Because C is the same to all candidates, right hand side of equation is: = arg mmax P (W).",
        "(2) If we denote T as the sequence of part of speech tags, then P(W) can be rewritten as:",
        "Here w, means the ith word of W,denotes word sequence from ith to jth of W. Then the right hand side of the equation (3) is transformed into",
        "Such a word model for English is resumed by Charniak[2] , and also in Japanese by Nagata [7] especially for morphological analyzer.",
        "Overall, given a digit sequence, the system calculates the above probability for all the possible candidates, and then sorted shown to the user in that order.",
        "5 IMPLEMENTATION"
      ]
    },
    {
      "heading": "5.1 Input Options",
      "text": [
        "There are other various options to input text other than input by digit vs. kana (second column of Table 4).",
        "One is the language unit.",
        "The choice are among a word, a phrase or phrases (third column)5.",
        "Here, the longer the unit is, the larger the system load because it should look for the best target among combinatorially many candidates.",
        "We could also think of whether to adopt the completion (fourth column).",
        "When using the completion, the system estimates and shows the best candidate not waiting until the input to be as long as the unit.",
        "For example, with DWC1, \"A\" (reads hako, means box corresponds to \"65\") is estimated and shown to the user even when the user only taps \"6\".",
        "This method is very ambiguous at input.",
        "Such a input is proposed for Palm text input systems and it is distributed as free-ware [5] for kana-based input(7th row of Table 4).",
        "Completion by phrase means to estimate the best next word as well as completing the current word.",
        "Therefore, the system might estimate \" rriU\" (a box is) or \"AA )AM't\" (a girl from a good familiy is, Japanese idiomatic expression using the word box) after a single input of \"6\".",
        "In this case, the load on the system will become very high because the search area for candidates is very vast.",
        "The fourth column of the table shows how many selection stages are used until user to end the input.",
        "Our choice is one, as is explained 3.",
        "Here, our input system is mainly to input text with the methods of DWC1 and DP1.",
        "However, we also implemented other variations as in the list, so that all could be compared against each other."
      ]
    },
    {
      "heading": "5.2 System",
      "text": [
        "In general, given a digit sequence, the system looks up all possible candidates using the dictionary (see 5.3) 5Character based input means no ambiguity at input.",
        "that is initialized at boot time.",
        "Then it calculates the probability (explained in 4) for candidates, sorts them and shows them to the user.",
        "If the user's target word is contained in the system results, then the user may choose the word using one of the following commands: +n Select the first word of nth candidate.",
        "m Show the next candidates.",
        "When the input method is phrase-based, then the system cut the input sequence and convert each piece into words.",
        "For example, \" 421430316 \" could be words such as \" Ilfr-f (4214, takeiti, name) (3031, sensei, professor) i \"(6, ha), or \"I( (4214, takeuti, another name) AOY4 \"(30316, sinseihu, new government).",
        "In this case, the system should estimate two parameters: word border and the word itself.",
        "The number of candidates in phrase based method is large because of combinations.",
        "So, in order to decrease the calculation complexity, we adopted Nagata's Viterbi-like algorithm[7] to approximately obtain the best candidate.",
        "From this best candidate, its first word is replaced with the other possible words of the same digit length.",
        "The resulting set is shown in the order of the probability.",
        "We could have chosen to form candidates out of the second best, or the third best according to the formula (6) and Nagata's method.",
        "However, the second and the third best could contain words of different border.",
        "This forces users to make selection among words of different length, that is rather confusing from user interface point of view.",
        "Therefore, we took the above method to form candidates, so that users may decide one parameter at a time, first by adjusting word border and then choosing the target word.",
        "In order to allow users to adjust the word borders, some more commands are prepared:",
        "s Shorten the word border of the first word I Extend the word border of the first word These commands are to be implemented using the direction key and special keys that is also equipped on mobile phones.",
        "Another problem that might occur is when the user's target was not found in the dictionary that is unknown words.",
        "In this case, the user might need to input character by character (see 5.3).",
        "If the user's target is written by kana or kata-kana, then user may do this by: h Transliterate first word with kana k Transliterate first word with katakana Unknown words will be registered automatically into the user dictionary.",
        "(However, for the evaluation section, registration is not performed to measure the system performance in the identical environment.)",
        "For all input methods, human user can be replaced by a routine that automatically inputs any given Japanese text and counts how many keystrokes are needed for the task.",
        "Candidates are formed and shown to the routine using exactly the same statistical method of frequency and part of speech tag based on HMM.",
        "All methods use the same dictionary (described in the next section).",
        "Therefore, the number of key strokes can be compared fairly.",
        "As for methods of completion, the timing to select the candidates are not unique.",
        "For example, user might find his target as the third best after the input of 2 digits, or find his target as the best after the input of 3 digits.",
        "For the automatic input, we decided that the target word is chosen when it appears as the best candidate.",
        "Otherwise, the next digit of the current word is tapped in to filter out the irrelevant candidates.",
        "When input for the word ends and the target does not appear as the best, then the target is chosen from the non best."
      ]
    },
    {
      "heading": "5.3 Dictionary",
      "text": [
        "The dictionary is constructed from Mainichi newspaper corpus (described in the 3).",
        "First, we analyzed corpus morphologically[6], then all words that occurred in the corpus were shaped into a dictionary.",
        "One entry of the dictionary contains the following elements: word transliterated in kana corresponding sequence in digits (only of consonants) word part of speech tag frequency The dictionary is added all characters in Japanese to cope with the unknown words.",
        "In order to minimize the size of the whole dictionary, we implemented the dictionary using trie-based method [1]."
      ]
    },
    {
      "heading": "6 EVALUATION",
      "text": []
    },
    {
      "heading": "6.1 Output Example",
      "text": [
        "We first show two small input examples each by DP1 and DWC1 in Figure 5.",
        "The example phrase is described at the top four rows.",
        "We see that a user inputs a digit by digit when using DWC1, and a phrase by digit when using DP1.",
        "Then system estimates candidates (five candidates are shown at a time in the example case.",
        "Some part of DWC1 is omitted for the sake of space).",
        "Then, the user interactively chooses his target.",
        "The results could be seen accumulated in front of the prompt ' >' as the input proceeds.",
        "For DWC1, the effect of completion could be seen for the words of \"busy\", that the target appears even when the input is not completed."
      ]
    },
    {
      "heading": "6.2 Test Data for Automated Input",
      "text": [
        "We prepared two kinds of texts for evaluation (Table 6).",
        "The first kind is the Mainichi newspaper articles.",
        "For",
        "Avr.len.",
        "of words(digits)2.4312.8662.3262.246 this first kind, two corpus is prepared, the one used for building the dictionary, and the other articles of economics domain not used to build the dictionary.",
        "The second kind is from the completely different domain, that is user's personal texts.",
        "Here also, we prepared two texts, the third author's email corpus (of 1 year, about 150 thousand words) and his article of text book of functional programming (about 90 thousand words).",
        "In order to eliminate the local bias of context, we took a certain number of sentences randomly from all over the place of each corpus, until the total number of words amounts to more than 1500 words.",
        "Here, stops (periods, commas) are also regarded as a kind of word.",
        "The number of unknown words that occurred at input are also shown in the table.",
        "This is not included in the number of words(first line), nor to compute average number of keystrokes in the following.",
        "Note that unknown words occur not only because it is not registered in the dictionary, but also because of the approximation of search for candidates (see 5.2)."
      ]
    },
    {
      "heading": "6.3 Kana vs. Digit",
      "text": [
        "For all four texts, we see the same trends as we have seen with economics article, that is: Input by digits is more efficient than that by kana.",
        "DWC1 is the most efficient.",
        "Therefore, we could probably say that, in general, the input by digit is more efficient than that by kana independent of the text kind.",
        "The text that needed least keystrokes turned up to be the user email text by digits, not the newspaper article used to construct the dictionary.",
        "The reason for this is that email text was quite characteristic that it contains many stops (periods and commas) than other texts (see Table 6).",
        "Note that the average keystrokes that we show also measures text style as well as the efficiency of input.",
        "The worst text by digit input was the user's book data of technical domain.",
        "For this text, DWC1 has least difference with keystrokes by KWC1-PB method.",
        "Therefore, how efficient the input by digit depends on text kind, although the fact that input by digit is the most efficient method stays with our four test data.",
        "As a whole, for all data, DWC1 is 37.76% more efficient than KWC1-Kana, 21.82% than KWC1-PB, DP1 is 40.05% more efficient than KPl-Kana, 19.87% than KPl-PB in average.",
        "The average total keystrokes needed per word is listed in the second column (of economics) in Table 8.",
        "First of all, we see that PB and Kana methods have the same number of strokes for adjusting word border and selection.",
        "This is always true because user ultimately input kana both with PB and Kana methods Also, the number of keystrokes needed for PB method is double that of our method.",
        "We could also see that DWC1 needs less number of keystrokes for a word than DP1, that is the effect of the completion.",
        "With DWC1 and DP1 less keystrokes are needed for input, but more for selection compared with KWC1 and KP1 methods.",
        "However, as a whole, less keystrokes are needed(Table 8, second column).",
        "We see here that our approach is successful for this test document.",
        "We also see that DWC1 is the most efficient method."
      ]
    },
    {
      "heading": "6.4 Difference among Text Kinds",
      "text": [
        "Next, we compare the efficiency to input text of different kinds.",
        "This time, we only show the total average keystrokes per word in Table 8, because the breakups of keystrokes have the same trend as were discussed in the previous section.",
        "invoke the digit/kana kanji conversion, therefore one extra stroke is always needed per language unit which is not counted in our evaluation.",
        "Therefore, balancing these two, for DW1, the count is equal to the minimal number of keystrokes.",
        "For DP1 and KP1, the counts are slightly larger than the minimal."
      ]
    },
    {
      "heading": "6.5 One Stage vs. Two Stages",
      "text": [
        "We also compared our method with that of T9[9] or ZI[10].",
        "As T9 and ZI methods are word based, we also implemented a simple word based method (not using completion) DW1 and then compared it with DW2.",
        "Because our system is based on HMM, conversions of DW1 and DW2 are both estimated by HMM.",
        "As is discussed, DW2 has two stages of selection, first to select kana and then to select the final kanji form of the word.",
        "As T9 and ZI methods both are not open to public, we guessed the minimal input method using two stages and implemented it as follows.",
        "First, user types in a word by digits of consonants, then presses a key to invoke digit to kana conversion.",
        "User selects his target then presses another key to invoke kana to kanji conversion and then selects the final form.",
        "Because there are words of final form that only consists of kana, we made the system not to pass these words to the second selection process of kana-kanji conversion.",
        "We could sum up the number of keystrokes by addition of that needed for input, selection of kana sequence (at least 1 needed to invoke digit kana conversion for all words)7 and selection of target (at least 1 only for words that contain kanji).",
        "The results are shown in Table 9.",
        "Here, keystrokes for input action is not indicated, because it is in common to DW1 and DW2.",
        "The result of second selection is total number of keystrokes divided by whole number of words (also words that does not contain any kanji.)",
        "so that values could be summed for selectl and select2.",
        "For DW2, we could see that the number of keystrokes for selection is small at each stage.",
        "As a result, DW1 is quite defeated by DW2 for the test data of user's book.",
        "Having that the user's book was also a hard task for DP1 and DWC1 (see Table 8, first row), we should look for some other method to specialize the system to the text.",
        "For the other three, DW1 and DW2 competes well.",
        "Having these results, we think that DW1 is better because man-machine interaction is far simpler.",
        "Also, if we compare DWC1 and DW2, then DWC1 is better (except for the user book).",
        "Therefore, we could say that DWC1 is the better choice with its simplicity of man-machine interface and also from the efficiency point of view."
      ]
    },
    {
      "heading": "7 CONCLUSION",
      "text": [
        "We have discussed an alternative Japanese text input method for mobile phones.",
        "The user inputs the sequence of digits that corresponds to the sequence of consonants so that the number of key strokes decreases to at least half.",
        "The system then needs to estimate the most probable word sequence from digits.",
        "We first verified whether such input system could be put to practical use, then argued that the word frequency and part of speech tag could be the key to solving the problem.",
        "Then we implemented our system using Hidden Markov language model.",
        "With this study we verified that our system decreases more than 35% of the key strokes of the most popular text input method used on current mobile phones.",
        "The most important future work is to examine the potential of a personalized dictionary.",
        "Mobile phones are, by nature, for personal use.",
        "Therefore if the dictionary could be personalized based on recent context or the user's own corpus, the text input would be more efficient by eliminating the uncommon word candidates.",
        "We are currently applying a statistical learning method by extending input system described in this paper."
      ]
    }
  ]
}
