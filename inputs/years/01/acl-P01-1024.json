{
  "info": {
    "authors": [
      "Denys Duchier",
      "Ralph Debusmann"
    ],
    "book": "Annual Meeting of the Association for Computational Linguistics",
    "id": "acl-P01-1024",
    "title": "Topological Dependency Trees: A Constraint-Based Account of Linear Precedence",
    "url": "https://aclweb.org/anthology/P01-1024",
    "year": 2001
  },
  "references": [
    "acl-P98-1106"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We describe a new framework for dependency grammar, with a modular decomposition of immediate dependency and linear precedence.",
        "Our approach distinguishes two orthogonal yet mutually constraining structures: a syntactic dependency tree and a topological dependency tree.",
        "The syntax tree is non-projective and even non-ordered, while the topological tree is projective and partially ordered."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Linear precedence in so-called free word order languages remains challenging for modern grammar formalisms.",
        "To address this issue, we propose a new framework for dependency grammar which supports the modular decomposition of immediate dependency and linear precedence.",
        "Duchier (1999) formulated a constraint-based axiomatization of dependency parsing which characterized well-formed syntax trees but ignored issues of word order.",
        "In this article, we develop a complementary approach dedicated to the treatment of linear precedence.",
        "Our framework distinguishes two orthogonal, yet mutually constraining structures: a syntactic dependency tree (ID tree) and a topological dependency tree (LP tree).",
        "While edges of the ID tree are labeled by syntactic roles, those of the LP tree are labeled by topological fields (Bech, 1955).",
        "The shape of the LP tree is a flattening of the ID trees obtained by allowing nodes to climb up to land in an appropriate field at a host node where that field is available.",
        "Our theory of ID/LP trees is formulated in terms of (a) lexicalized constraints and (b) principles governing e.g. climbing conditions.",
        "In Section 2 we discuss the difficulties presented by discontinuous constructions in free word order languages, and briefly touch on the limitations of Reapes (1994) popular theory of word order domains.",
        "In Section 3 we introduce the concept of topological dependency tree.",
        "In Section 4 we outline the formal framework for our theory of ID/LP trees.",
        "Finally, in Section 5 we illustrate our approach with an account of the word-order phenomena in the verbal complex of German verb final sentences."
      ]
    },
    {
      "heading": "2 Discontinuous Constructions",
      "text": [
        "In free word order languages, discontinuous constructions occur frequently.",
        "German, for example, is subject to scrambling and partial extraposition.",
        "In typical phrase structure based analyses, such phenomena lead to e.g. discontinuous VPs:",
        "(1) (dass) einen Mann Maria zu lieben versucht (that) amanacc Mariano m to love tries",
        "whose natural syntax tree exhibits crossing edges: Since this is classically disallowed, discontinuous constituents must often be handled indirectly through grammar extensions such as traces.",
        "Reape (1994) proposed the theory of word order domains which became quite popular in the HPSG community and inspired others such as Muller (1999) and Kathol (2000).",
        "Reape distinguished two orthogonal tree structures: (a) the unordered syntax tree, (b) the totally ordered tree of word order domains.",
        "The latter is obtained from the syntax tree by flattening using the operation of domain union to produce arbitrary interleav-ings.",
        "The boolean feature [uf] of each node controls whether it must be flattened out or not.",
        "Infinitives in canonical position are assigned [u+]: Thus, the above licenses the following tree of word order domains: Extraposed infinitives are assigned [u-]: As a consequence, Reapes theory correctly predicts scrambling (2,3) and full extraposition (4), but cannot handle the partial extraposition in (5):",
        "(2) (dass) Maria einen Mann zu lieben versucht (3) (dass) einen Mann Maria zu lieben versucht (4) (dass) Maria versucht, einen Mann zu lieben (5) (dass) Maria einen Mann versucht, zu lieben"
      ]
    },
    {
      "heading": "3 Topological Dependency Trees",
      "text": [
        "Our approach is based on dependency grammar.",
        "We also propose to distinguish two structures: (a) a tree of syntactic dependencies, (b) a tree of topological dependencies.",
        "The syntax tree (ID tree) is unordered and non-projective (i.e. it admits crossing edges).",
        "For display purposes, we pick an arbitrary linear arrangement: The topological tree (LP tree) is partially ordered and projective: Its edge labels are called (external) fields and are totally ordered: df ~ mf ~ vc.",
        "This induces a linear precedence among the daughters of a node in the LP tree.",
        "This precedence is partial because daughters with the same label may be freely permuted.",
        "In order to obtain a linearization of a LP tree, it is also necessary to position each node with respect to its daughters.",
        "For this reason, each node is also assigned an internal field (d, n, or v) shown above on the vertical pseudo-edges.",
        "The set of internal and external fields is totally or-dered:d~df~n~mf~vc~v Like Reape, our LP tree is a flattened version of the ID tree (Reape, 1994; Uszkoreit, 1987), but the flattening doesnt happen by unioning up; rather, we allow each individual daughter to climb up to find an appropriate landing place.",
        "This idea is reminiscent of GB, but, as we shall see, proceeds rather differently."
      ]
    },
    {
      "heading": "4 Formal Framework",
      "text": [
        "The framework underlying both ID and LP trees is the configuration of labeled trees under valency (and other) constraints.",
        "Consider a finite set L of edge labels, a finite set V of nodes, and E ^ V V L a finite set of directed labeled edges, such that (V, E) forms a tree.",
        "We write w^^^tw& for an edge labeled r?",
        "from w to w'.",
        "We define the",
        "(dass) Maria versucht einen Mann zu lieben (dass) Maria einen Mann zu lieben versucht (dass) Maria einen Mann zu lieben versucht",
        "We write L~ for the set of valency specifications t?",
        "defined by the following abstract syntax: t?",
        ":: = (?",
        "|E?",
        "|E^(E ^ L) A valency is a subset of ~L.",
        "The tree (V, E) satisfies the valency assignment valency : V ^ 2L~ if for all w ^ V and all E ^ L:"
      ]
    },
    {
      "heading": "4.1 ID Trees",
      "text": [
        "An ID tree (V, EID, lex, cat, valencyID) consists of a tree (V, EID) with EID ^ V V R, where the set R of edge labels (Figure 1) represents syntactic roles such as subject or vinf (bare infinitive argument).",
        "lex : V ^ Lexicon assigns a lexical entry to each node.",
        "An illustrative Lexicon is displayed in Figure 1 where the 2 features cats and valencyID of concern to ID trees are grouped under table heading Syntax.",
        "Finally, cat and valencyID assign a category and an R~ valency to each node w ^ V and must satisfy:",
        "(V, EID) must satisfy the valencyID assignment as described earlier.",
        "For example the lexical entry for versucht specifies (Figure 1):",
        "Furthermore, (V, EID) must also satisfy the edge constraints stipulated by the grammar (see Figure 1).",
        "For example, for an edge w^^^^^detw' to be licensed, w' must be assigned category det and both w and w' must be assigned the same agreement.1"
      ]
    },
    {
      "heading": "4.2 LP Trees",
      "text": [
        "An LP tree (V, ELP, lex, valencyLP, fieldext, fieldint) consists of a tree (V, ELP) with ELP ^ V V Fext, where the set Fext of edge labels represents topological fields (Bech, 1955): df the determiner field, mf the Mittelfeld, vc 1Issues of agreement will not be further considered in this paper.",
        "the verbal complement field, xf the extraposition field.",
        "Features of lexical entries relevant to LP trees are grouped under table heading\"_Topology in Figure 1. valencyLP assigns a Fext valency to each node and is subject to the lexicalized constraint:",
        "(V, ELP) must satisfy the valencyLP assignment as described earlier.",
        "For example, the lexical entry for zu lieben2 specifies:",
        "which permits 0 or more mf edges and at most one xf edge; we say that it offers fields mf and xf.",
        "Unlike the ID tree, the LP tree must be projective.",
        "The grammar stipulates a total order on Fext, thus inducing a partial linear precedence on each nodes daughters.",
        "This order is partial because all daughters in the same field may be freely permuted: our account of scrambling rests on free permutations within the mf field.",
        "In order to obtain a linearization of the LP tree, it is necessary to specify the position of a node with respect to its daughters.",
        "For this reason each node is assigned an internal field in Fint.",
        "The set Fext ^ Fint is totally ordered: d~df~n~mf~vc~v~xf In what (external) field a node may land and what internal field it may be assigned is determined by assignments fieldext : V ^ Fext and fieldint : V ^ Fint which are subject to the lexicalized constraints: fieldext(w) ^ lex(w).fieldext fieldint(w) ^ lex(w).fieldint For example, zu lieben1 may only land in field vc (canonical position), and zu lieben2 only in xf (ex-traposed position).",
        "The LP tree must satisfy:",
        "Thus, whether an edge w^^^tw' is licensed depends both on valencyLP(w) and on fieldext(w').",
        "In other words: w must offer field t?",
        "and w' must accept it.",
        "For an edge w^^^tw' in the ID tree, we say that w is the head of w'.",
        "For a similar edge in the LP w is the head of w'.",
        "For a similar edge in the LP",
        "tree, we say that w is the host of w' or that w' lands on w. The shape of the LP tree is a flattened version of the ID tree which is obtained by allowing nodes to climb up subject to the following principles: Principle 1 a node must land on a transitive head2 Principle 2 it may not climb through a barrier We will not elaborate the notion of barrier which is beyond the scope of this article, but, for example, a noun will prevent a determiner from climbing through it, and finite verbs are typically general barriers.",
        "2 This is Brockers terminology and means a node in the transitive closure of the head relation.",
        "Principle 3 a node must land on, or climb higher than, its head Subject to these principles, a node w' may climb up to any host w which offers a field licensed by fieldext(w').",
        "Definition.",
        "An ID/LP analysis is a tuple (V, EID, ELP, lex, cat, valencyID, valencyLP, fieldext, fieldint) such that (V, EID, lex, cat, valencyID) is an ID tree and (V, ELP, lex, valencyLP, fieldext, fieldint) is an LP tree and all principles are satisfied.",
        "Our approach has points of similarity with (Broker, 1999) but eschews modal logic in favor of a simpler and arguably more perspicuous constraint-based formulation.",
        "It is also related to the lifting rules of (Kahane et al., 1998), but where they choose to stipulate rules that license liftings, we opt instead for placing constraints on otherwise unrestricted climbing."
      ]
    },
    {
      "heading": "5 German Verbal Phenomena",
      "text": [
        "We now illustrate our theory by applying it to the treatment of word order phenomena in the verbal complex of German verb final sentences.",
        "We assume the grammar and lexicon shown in Figure 1.",
        "These are intended purely for didactic purposes and we extend for them no claim of linguistic adequacy."
      ]
    },
    {
      "heading": "5.1 VP Extraposition",
      "text": [
        "Control verbs like versuchen or versprechen allow their zu-infinitival complement to be optionally extraposed.",
        "This phenomenon is also known as optional coherence.",
        "(6) (dass) Maria einen Mann zu lieben versucht In the extraposed case, zu lieben2 itself offers field mf:"
      ]
    },
    {
      "heading": "5.2 Partial VP Extraposition",
      "text": [
        "In example (8), the zu-infinitive zu lieben is extraposed to the right of its governing verb versucht, but its nominal complement einen Mann remains in the Mittelfeld: (8) (dass) Maria einen Mann versucht, zu lieben In our account, Mann is restricted to land in an mf field which both extraposed zu lieben2 and finite verb versucht offer.",
        "In example (8) the nominal complement simply climbed up to the finite verb:",
        "(dass) Maria versucht einen Mann zu lieben (7) (dass) Maria versucht, einen Mann zu lieben Both examples share the following ID tree: (dass) Maria einen Mann zu lieben versucht (dass) Maria einen Mann versucht zu lieben"
      ]
    },
    {
      "heading": "5.3 Obligatory Head-final Placement",
      "text": [
        "Verb clusters are typically head-final in German: non-finite verbs precede their verbal heads.",
        "Optional extraposition is handled by having two lexical entries for zu lieben.",
        "One requires it to land in canonical position: fieldext(zu lieben1) = {vc} the other requires it to be extraposed: fieldext(zu lieben2) = {xf} In the canonical case, zu lieben1 does not offer field mf and einen Mann must climb to the finite",
        "verb: (9) (dass) Maria einen Mann lieben wird (that) Mariano m amanacc love will (10)*(dass) Maria einen Mann wird lieben",
        "The ID tree for (9) is: The lexical entry for the bare infinitive lieben requires it to land in a vc field:",
        "(dass) Maria einen Mann zu lieben versucht therefore only the following LP tree is licensed:3 where mf ~ vc ~ v, and subject and object, both in field mf, remain mutually unordered.",
        "Thus we correctly license (9) and reject (10)."
      ]
    },
    {
      "heading": "5.4 Optional Auxiliary Flip",
      "text": [
        "In an auxiliary flip construction (Hinrichs and Nakazawa, 1994), the verbal complement of an auxiliary verb, such as haben or werden, follows rather than precedes its head.",
        "Only a certain class of bare infinitive verbs can land in extraposed position.",
        "As we illustrated above, main verbs do not belong to this class; however, modals such as konnen do, and may land in either canonical (11) or in extraposed (12) position.",
        "This behavior is called optional auxiliary flip.",
        "(11) (dass) Maria einen Mann lieben konnen wird (that) Maria aman love canwill (that) Maria will be able to love a man (12) (dass) Maria einen Mann wird lieben konnen",
        "Both examples share the following ID tree: Our grammar fragment describes optional auxiliary flip constructions in two steps: wird offers both vc and xf fields: valencyID (wird) = {mf^, vc?, xf?}",
        "konnen has two lexical entries, one canonical and one extraposed:",
        "concerning the topological placement of Mann: lieben in canonical position does not offer field mf; therefore Mann must climb to the finite verb.",
        "Thus we correctly account for examples (11) and (12) with the following LP trees: The astute reader will have noticed that other LP trees are licensed for the earlier ID tree: they are considered in the section below."
      ]
    },
    {
      "heading": "5.5 V-Projection Raising",
      "text": [
        "This phenomenon related to auxiliary flip describes the case where non-verbal material is interspersed in the verb cluster:",
        "(13) (dass) Maria wird einen Mann lieben konnen (14)*(dass) Maria lieben einen Mann konnen wird (15)* (dass) Maria lieben konnen einen Mann wird",
        "The ID tree remains as before.",
        "The NP einen Mann must land in a mf field.",
        "lieben is in canonical position and thus does not offer mf, but both extraposed konnen2 and finite verb wird do.",
        "Whereas in (12), the NP climbed up to wird, in",
        "(13) it climbs only up to konnen.",
        "(14) is ruled out because konnen must be in the vc of wird, therefore lieben must be in the vc of konnen, and einen Mann must be in the mf of wird.",
        "Therefore, einen Mann must precede both lieben and konnen.",
        "Similarly for (15).",
        "(dass) Maria einen Mann wird lieben konnen dv (dass) Maria einen Mann lieben konnen wird dv (dass) Maria einen Mann wird lieben konnen (dass) Maria wird einen Mann lieben konnen"
      ]
    },
    {
      "heading": "5.6 Intermediate Placement",
      "text": [
        "The Zwischenstellung construction describes cases where the auxiliary has been flipped but its verbal argument remains in the Mittelfeld.",
        "These are the remaining linearizations predicted by our theory for the running example started above: (16) (dass) Maria einen Mann lieben wird konnen (17) (dass) einen Mann Maria lieben wird konnen where lieben has climbed up to the finite verb."
      ]
    },
    {
      "heading": "5.7 Obligatory Auxiliary Flip",
      "text": [
        "Substitute infinitives (Ersatzinfinitiv) are further examples of extraposed verbal forms.",
        "A substitute infinitive exhibits bare infinitival inflection, yet acts as a complement of the perfectizer haben, which syntactically requires a past participle.",
        "Only modals, AcI-verbs such as sehen and lassen, and the verb helfen can appear in substitute infinitival inflection.",
        "A substitute infinitive cannot land in canonical position; it must be extraposed: an auxiliary flip involving a substitute infinitive is called an obligatory auxiliary flip.",
        "(18) (dass) Maria einen Mann hat lieben konnen (that) Maria aman has love can (that) Maria was able to love a man (19) (dass) Maria hat einen Mann lieben konnen (20)*(dass) Maria einen Mann lieben konnen hat",
        "This is satisfied by konnen2 which insists on being extraposed, thus ruling (20) out:",
        "In (18) einen Mann climbs up to hat, while in (19) it only climbs up to konnen."
      ]
    },
    {
      "heading": "5.8 Double Auxiliary Flip",
      "text": [
        "Double auxiliary flip constructions occur when an auxiliary is an argument of another auxiliary.",
        "Each extraposed verb form offers both vc and mf: thus there are more opportunities for verbal and nominal arguments to climb to.",
        "These examples share the ID tree: (dass) Maria einen Mann hat lieben konnen hat subcategorizes for a verb in past participle inflection because: valencyID(hat) = {subject,vpast} and the edge constraint for w^^^^^^vpastw' requires:",
        "Maria einen Mann wird haben lieben konnen Maria einen Mann wird haben lieben konnen"
      ]
    },
    {
      "heading": "5.9 Obligatory Coherence",
      "text": [
        "Certain verbs like scheint require their argument to appear in canonical (or coherent) position.",
        "(26) (dass) Maria einen Mann zu lieben scheint (that) Maria aman to love seems (that) Maria seems to love a man (27)*(dass) Maria einen Mann scheint, zu lieben",
        "Obligatory coherence may be enforced with the following constraint principle: if w is an obligatory coherence verb and w' is its verbal argument, then w' must land in ws vc field.",
        "Like barriers, the expression of this principle in our grammatical formalism falls outside the scope of the present article and remains the subject of active research.4"
      ]
    },
    {
      "heading": "6 Conclusions",
      "text": [
        "In this article, we described a treatment of linear precedence that extends the constraint-based framework for dependency grammar proposed by Duchier (1999).",
        "We distinguished two orthogonal, yet mutually constraining tree structures: unordered, non-projective ID trees which capture purely syntactic dependencies, and ordered, projective LP trees which capture topological dependencies.",
        "Our theory is formulated in terms of (a) lexicalized constraints and (b) principles which govern climbing conditions.",
        "We illustrated this theory with an application to the treatment of word order phenomena in the verbal complex of German verb final sentences, and demonstrated that these traditionally challenging phenomena emerge naturally from our simple and elegant account.",
        "Although we provided here an account specific to German, our framework intentionally permits the definition of arbitrary language-specific topologies.",
        "Whether this proves linguistically adequate in practice needs to be substantiated in future research.",
        "Characteristic of our approach is that the formal presentation defines valid analyses as the solutions of a constraint satisfaction problem which is amenable to efficient processing through constraint propagation.",
        "A prototype was implemented in Mozart/Oz and supports a parsing 4we also thank an anonymous reviewer for pointing out that our grammar fragment does not permit intraposition mode as well as a mode generating all licensed linearizations for a given input.",
        "It was used to prepare all examples in this article.",
        "While the preliminary results presented here are encouraging and demonstrate the potential of our approach to linear precedence, much work remains to be done to extend its coverage and to arrive at a cohesive and comprehensive grammar formalism."
      ]
    }
  ]
}
