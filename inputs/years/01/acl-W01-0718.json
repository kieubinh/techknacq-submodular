{
  "info": {
    "authors": [
      "Michael Carl"
    ],
    "book": "Workshop on Computational Natural Language Learning CoNLL",
    "id": "acl-W01-0718",
    "title": "Inducing Probabilistic Invertible Translation Grammars from Aligned Texts",
    "url": "https://aclweb.org/anthology/W01-0718",
    "year": 2001
  },
  "references": [
    "acl-C00-2131",
    "acl-C00-2139",
    "acl-C96-1078",
    "acl-C96-2211",
    "acl-P98-2139",
    "acl-P98-2223",
    "acl-W98-1231"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper presents an algorithm for extracting invertible probabilistic translation grammars from bilingual aligned and linguistically bracketed text.",
        "The invertibility condition requires all translation ambiguities to be resolved in the final translation grammar.",
        "The paper examines the complexity of inducing translation grammars and proposes a number of heuristics to reduce the the theoretically exponential computation time."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "In the framework of corpus-based machine translation, a number of methods have been proposed for automatically inducing translation correspondences from aligned texts.",
        "Some researcher parse alignments with the aim of linking word translations and internal nodes of derivation trees in both language sides of the alignment.",
        "(Wu, 1995), for instance, proposes a bilingual stochastic parser.",
        "This parser analyses both language sides of an alignment in parallel where the leaves of the binary derivation trees are terminal symbols and all internal nodes are non-terminals.",
        "(Watanabe et al., 2000) and (Meyers et al., 1996; Meyers et al., 1998) parse each language side independently and try to find most likely node correspondences in the derivation trees.",
        "Other approaches, including this present one, try to induce a set of context-free transfer rules from the alignments.",
        "This paper proposes an algorithm which generates and filters a translation grammar (i.e. a set of context-free transfer rules) from aligned and bracketed pieces of text.",
        "The transfer rules in this grammar are similar to Takeda's \"Translation Pattern\" (Takeda, 1996; Watanabe and Takeda, 1998) with the difference that an accepted input is necessarily also translatable.",
        "Translation grammars are made up of lexical transfer rules which contain only terminal symbols and translation templates - i.e. generalized transfer rules - which also contain variables.",
        "In the framework of Example-Based Machine Translation (EBMT), a number of methods have been proposed for inducing translation grammars from aligned texts.",
        "In so-called \"pure\" EBMT systems, the only available knowledge resource is the aligned text itself (cf. (Block, 2000; Brown, 1997)), while in richer systems additional, linguistic knowledge resources are used to a varying degree; cf. (Somers, 1999) for a review of EBMT-systems and resources used by these systems.",
        "According to (Somers, 1999), EBMT systems differ in the number and the quality of resources used, the way this knowledge is represented, stored and used for trans-cl:(a.)",
        " – (e'.)",
        "C5: (e) – (e'.)",
        "cs: (de.)",
        " – (e ' þ ù ú ( � þ – (e'.)",
        "C2: (a) – (a'.)",
        "C6: (C) – (a'.)",
        "clo: (de.)",
        "(a'.)",
        "c14:(cde) – (a'.)",
        "C3: (a) – (a'b') C7: (C) – (a'b') C11: (de.)",
        "(a'b') c15:(cde) – (a'b') C4: (a) – (a'b'c'.)",
        "c8: (e) – (a'b'c') c12: (de.)",
        "(a'b'c') c16:(cde) – (a'b'c')",
        "this present approach), methods which generalize differences (e.g. (Guvenir and Cicekli, �998�� and methods which generalize both, similarities and - as their complement - differences (McTait and Trujillo, 1999).",
        "While there is increasing research that aims at inducing translation grammars from aligned texts, a detailed analysis of the potentials and implications of the different methods remains to be undertaken in future.",
        "The algorithm I shall present in this paper expects as its input both language sides of the alignments to be bracketed.",
        "We currently use the shallow parser KURD (Carl and Schmidt-Wigger, 1998) for this bracketing, although knowledge-poor methods could similarly be used as, for instance, described in (Zaanen, 2000).",
        "The algorithm generates lexical transfer rules and generalizations from the bracketed alignments and assigns probabilities and weights to each of these rules.",
        "From these rules, a translation grammar is filtered.",
        "This grammar does not contain translation ambiguities.",
        "Instead, each transfer rule encodes a minimal context which makes it unique in the translation grammar.",
        "The algorithm does not require a bilingual lexicon, but a lexicon can be provided to bootstrap the system and enhance the outcome.",
        "The translation grammar is expected to regenerate the aligned text in a most compositional and complete manner.",
        "First, I describe how transfer rules are generated from the bracketed alignments.",
        "Then I describe how a set of invertible transfer rules is filtered.",
        "Last I give an example of an induced grammar."
      ]
    },
    {
      "heading": "2 Complexity of Inducing Translation Templates",
      "text": [
        "The program assumes a bilingual text P which consists of n aligned pieces of text as ... an,.",
        "Each alignment ai consists of a left-hand side (lhs) e and a right-hand side (rhs) f. By means of a (shallow) parser, both language sides e and f are independently bracketed (parsed) which results in a representation similar to the followings: as : (a) b (c(d(c))) – (((a')b')c') d' (e') Without no further knowledge, one cannot know which of the lhs-brackets translates into which bracket in the rhs or whether a lhs-bracket has a rhs-translation at all.",
        "We therefore assume that each lhs-bracket translates with the same probability into any rhs-bracket.",
        "For an alignment ai we can therefore extract p x q lexical transfer rules Ci : {cj ... Cp* 4,}, where p is the number of lhs-brackets and q is the number of rhs-brackets.",
        "The set Cs extracted from as is shown in figure 1.",
        "In a second step, translation templates (or generalizations) are induced from as and the extracted lexical transfer rules cs ... cp*4,.",
        "While a lexical transfer rule consists only of 'The letters `abcde\" on the left-hand side represent lemmas of e; the letters `a'b'c'd'e'\" those of f in the right-hand side.",
        "The brackets are also annotated with a phrasal tag and morpho-syntactic information.",
        "For the sake of simplicity, I will not consider this information here.",
        "terminal symbols, a generalization contains variables (so-called reductions) in places where a shorter transfer rule matches a subsequence in the lhs and in the rhs.",
        "A generalization has thus at least one reduction in each language side and it has an equal number of reductions in the lhs and the rhs.",
        "Each reduction in lhs is linked exactly to one reduction in rhs.",
        "From the transfer rule cl6, for instance, can be generated 4 different generalizations while from transfer rule cll only one generalization can be generated.",
        "These are shown in figure 2.",
        "From the alignment al can be generated 25 generalizations by substituting one or more transfer rules cl ... cl6.",
        "More generally, from a transfer rule cj which has p bracketed sequences in its lhs and q bracketed sequences in its rhs, an exponential number of generalizations #Gj can be generated:",
        "For instance, if we assume both, p and q to be 10 and none of the 10 brackets in either language side are included in another bracket (i.e. all brackets are top-level brackets), more than 180.000 different generalizations can be generated.",
        "This is a number far too big to be computed, as 10 brackets (i.e. constituents in the parsed sentence) is not many.",
        "In fact, 50 or more brackets do appear frequently in parsed sentences, although in the experiment reported below, not all brackets are top-level.",
        "Therefore, a number of heuristics is proposed for generating from the set of possible generalizations only those achieving the highest weight.",
        "mar, each possible item in the translation grammar, alignments ai, lexical transfer rules cj and generalizations gk, is linked to two sets.",
        "Each ai is associated with a set of lexical transfer rules Ci and a set of generalizations Gi which have been generated from ai.",
        "Each lexical transfer rule cj is associated with a set Aj of alignments from which cj has been extracted and a set of generalizations Gj which have been generated from cj.",
        "Finally, each generalization gk is associated with a set of lexical transfer rules Ck which have been replaced in the generalization (i.e. the daughters of the generalization gk) and a set of references Rk.",
        "Since generalizations are generated from alignments and from the extracted lexical transfer rules, the set of references Rk may consist of alignments ai and/or transfer rules cj .",
        "The probability of an alignment ai is its frequency in the aligned text P divided by the number n of alignments in P.",
        "The probability of a lexical transfer rule cj is a function of the number of times cj has been extracted from alignments ai, i = 1 ... n and the cardinality #Ci of the set Ci, normalized by the size of P:",
        "Before introducing heuristics, I first describe how probabilities and weights are assigned to the lexical transfer rules and generalizations.",
        "While inducing the translation gram-The probability of a generalization gk is the sum of the probabilities of the reference(s) r E Rk from which gk has been generated.",
        "Based on these probabilities, a weight is computed for each a.i, cj, 9k.",
        "The weight w(cj) of a lexical transfer rule cj equals the maximum weight of the generalization that has been generated from it.",
        "In case no generalization can be generated",
        "The weight of a generalization equals the sum of the probabilities of the references r E Rk from which it has been generated plus the sum of the weights of the lexical transfer rules (i.e. the daughters of 9k) which have been replaced in the generalization.",
        "The following properties of weights in transfer rules and generalizations hold: a generalization has at least as high a weight as the transfer rule from which it was generated.",
        "A generalization has a higher weight than the daughters which have been substituted in the generalization.",
        "Moreover, generalizations have higher weights if they contain i) more reductions or ii) if the reductions are to the highest extend compositional.",
        "We believe that these properties are suitable when using the induced probabilistic grammar for translation.",
        "As an example for achieving higher weights for more compositional generalizations, consider the following example.",
        "As there are 16 lexical transfer rules extracted from alignment a.l and assuming that n = 1, each of the rules has probability 1/4.",
        "A subsequence in cii : (de)..",
        "(a.",
        "'b') can be substituted by rule c6 : (e) ..",
        "(a.').",
        "This substitution yields generalization 9l, as shown in figure 2.",
        "It is assigned the weight 2/4 (cf. equation 5).",
        "This weight is also assigned to the transfer rule cll (cf. equation 4).",
        "Subsequently, when generalizing the longer rule c16 : (cde) ..",
        "(a.",
        "'b'c'), a set of four generalizations Gi6 is generated from which 9,; is assigned the highest weight due to the compositional nature of the replaced daughter cii : (de) ..",
        "(a.",
        "'b')."
      ]
    },
    {
      "heading": "4 Generating Transfer Rules",
      "text": [
        "Even the quadratic effort for generating the sets Ci for all alignments a.i is too expensive in a large aligned text.",
        "Therefore, alignments a.i, i = 1 ... n are generalized in a sequential manner.",
        "For each a.i, first the p x q lexical transfer rules are extracted and sorted by the length of the shorter string e or f. Transfer rules cj E Ci are then generalized starting with the shortest rule.",
        "The crucial points in the procedure GenerateGrammar( are lines 4 and 9.",
        "As was shown above, extracting the set of lexical transfer requires a quadratic effort in the number of brackets, while generating Gj from cj is exponential.",
        "To tackle this latter complexity, a version of the A* algorithm considers only a limited number of the highest weighted generalization2 .",
        "In this way generalization of lexical transfer rules is reduced to O(k * d) where d is the number of lexical transfer rules matching a subsequence in cj and k is the number of generalizations to be generated.",
        "In addition to this, a couple of parameters can be set to reduce the number of extracted transfer rules and generalizations:",
        "• Only transfer rules are extracted where the difference in the number of words in e and f does not exceed a predefined limit.",
        "This constraint reflects that generally more or less the same number of (content) words appear in both sides of a translation.",
        "• By the same token, transfer rules and generalizations are weighted by the difference of number of words in e and f.",
        "This reflects the experience that translations are likely to contain approximately the same number of words in their source and target sides.",
        "• By means of a bilingual lexicon, transfer rules and generalizations are assigned (high) a-priori weights.",
        "• Only a limited number of highest weighted translation rules and generalizations is generated.",
        "• Each generalization can have up to a fixed maximum number of reductions.",
        "As reductions in generalizations are most reasonable explained to represent the arguments of the remaining unreduced token(s), a maximum of reduction might be set to four.",
        "• A generalization can have maximum number of tokens.",
        "With increasing number of tokens, the chance to match a new sentence decreases exponentially.",
        "Note that this constraint does not apply to translation rules and generalizations from a bilingual lexicon.",
        "• Transfer rules are only asserted if their weights are above a threshold of an already existing, ambiguous transfer rule in the database.",
        "5 Filtering Invertible Translation Grammars",
        "From the set P of alignments and their associated sets of generalizations P : {a j =* Gl, ... a2 =* G} an invertible translation grammar is filtered in a top down fashion.",
        "The aim here is to find a most compositional set of transfer rules capable to reproduce the aligned text P in a most complete manner.",
        "To achieve this goal, translation ambiguities in the resulting grammar are avoided by including the smallest possible context which disambiguates each transfer rule.",
        "A transfer rule e2 � f2 is ambiguous iff the translation grammar contains a different transfer rule el � fl where either el equals e2 or fl equals f2.",
        "A translation grammar is invertible iff it contains no ambiguous transfer rules.",
        "In an invertible translation gram",
        "mar, therefore, each lhs-string e and each rhs-string f occurs exactly once.",
        "The procedure to filter this grammar, FilterGrammar(), starts with the most frequent topmost generalizations - i.e. those generalizations of ai with the highest weight - and recursively prints their daughters.",
        "Less frequent rules, i.e. lower weighted rules, are likely to to come along with more context.",
        "Only one generalization is filtered for each alignment.",
        "The alignments ai E P are sorted by their weights and for each alignment starting with the highest weighted one, the function FilterGrammar(az) is called."
      ]
    },
    {
      "heading": "11 end;",
      "text": [
        "The procedure is called recursively in line 6 to print the highest weighted daughters cj of generalization 9k.",
        "To illustrate the resulting translation grammar, assume the set P contains two alignments, {a l, a2} as shown in figure 3, left.",
        "Alignments al and a2 are associated with Gland G2 which contain the generalizations 9l and 92 respectively.",
        "The daughters of 9l and 92 are Cl : {cl} and C2 : {c2}.",
        "Note that the weights of al and 9l are 2/4 while the weight of al and 92 are 1/4.",
        "The procedure FilterGrammar() is first called with al and then with a2.",
        "Accordingly, first generalization 9l is printed and - in the recursion - cl.",
        "Generalizations 9l and 92 are ambiguous since their lhs is identical but their rhs are different.",
        "Due to the deletion of 92, the set G2 is, thus, empty when calling the function with a2.",
        "The resulting filtered invertible translation grammar is shown in figure 3, right."
      ]
    },
    {
      "heading": "6 Preliminary Experiments",
      "text": [
        "The algorithm has been tested on a partially parsed text with 4997 alignments.",
        "In this first test both languages were identical, i.e. the words and the structure of their brack-etings was identical in the source and target language.",
        "The aim of this experiment was to see to what extend the algorithm produces reasonable translation grammars for a pair of structurally identical languages.",
        "A reasonable assumption for translating a source language into an identical target language is that the induced transfer rules and generalizations are identical in their lhs and rhs, too.",
        "The quality of the translation grammar can then easily be measured by counting the rules which differ in their lhs and rhs.",
        "The 4997 alignments had 45.352 words and 36.687 brackets on each language side.",
        "Dependent on the parameter setting - i.e. how many brackets were maximally considered per language side - the program took between 5 and 10 minutes on a sun work station to generate and filter the invertible grammar.",
        "The filtered invertible grammar contained 814 generalizations and 3692 lexical translation rules and alignments.",
        "3698 of the filtered transfer rules had an identical lhs and rhs while 808 rules (18%) were different in lhs and rhs.",
        "Roughly half of these erroneous rules were lexical transfer rules and half generalizations.",
        "Simulating a lexicon covering 10% of the aligned text reduced erroneous transfer rules about 50% to 9,6% of the size of the translation grammar.",
        "Augmenting the lexicon to 20% reduced errors to 6,5% and with 50% of the aligned text covered by a lexicon produced 3.4% wrong output.",
        "These results show that i� invertible grammars can be induced in reasonable time and ii) the proposed algorithm is scalable for the integration of further knowledge resources - such as a bilingual lexicon - which enhance the quality of the induced grammar.",
        "In further experiments we will parse a text in different ways to see how well the algorithm can tackle different structures in both language sides.",
        "The goal for the future is to design (partial) parsers for different languages which yield similar brackets on both language sides in order to enable the algorithm to extract and filter reasonable translation grammars more easily.",
        "The induced translation grammars are supposed to be used in an EBMT system."
      ]
    },
    {
      "heading": "7 Conclusion",
      "text": [
        "This paper presents an algorithm which generates and filters a translation grammar from aligned texts.",
        "The produced translation grammar consists of lexical transfer rules and generalizations.",
        "Each rule in the grammar describes an unambiguous 1-to-1 mapping from the source language to the target language.",
        "A small experiment is described to test the grammar induction performance.",
        "The algorithm shows satisfying runtime behavior and promising results."
      ]
    }
  ]
}
