{
  "info": {
    "authors": [
      "Kees van Deemter",
      "Magnus M. Halldorsson"
    ],
    "book": "Workshop on Natural Language Generation EWNLG",
    "id": "acl-W01-0804",
    "title": "Logical Form Equivalence: The Case of Referring Expressions Generation",
    "url": "https://aclweb.org/anthology/W01-0804",
    "year": 2001
  },
  "references": [
    "acl-C00-2093",
    "acl-C90-3016",
    "acl-J93-1008",
    "acl-P90-1013",
    "acl-P99-1017",
    "acl-T87-1042",
    "acl-W00-1416",
    "acl-W00-1424",
    "acl-W98-1419"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We examine the principle of co-extensivity which underlies current algorithms for the generation of referring expressions, and investigate to what extent the principle allows these algorithms to be generalized.",
        "The discussion focusses on the generation of complex Boolean descriptions and sentence aggregation."
      ]
    },
    {
      "heading": "1 Logic in GRE",
      "text": [
        "A key question regarding the foundations of Natural Language Generation (NLG) is the problem of logical form equivalence (Appelt 1987).",
        "The problem goes as follows.",
        "NLG systems take semantic expressions as input, usually formulated in some logical language.",
        "These expressions are governed by rules determining which of them count as ‘equivalent’.",
        "If two expressions are equivalent then, ideally, the NLG program should verbalize them in the same ways.",
        "(Being equivalent, the generator would not be warranted in distinguishing between the two.)",
        "The question is: what is the proper relation of equivalence?",
        "Appelt argued that classical logical equivalence (i.e., having the same truth conditions) is not a good candidate.",
        "For example, is logically equivalent with , yet – so the argument goes – an NLG system should word the two formulas differently.",
        "Shieber (1993) suggested that some more sophisticated notion of equivalence is needed, which would count fewer semantic expressions as equivalent.'",
        "In the present pa per, a different response to the problem is explored, which keeps the notion of equivalence classical and prevents the generator from distinguishing between inputs that are logically equivalent (i.e., inputs that have the same truth conditions).",
        "Pragmatic constraints determine which of all the logically equivalent semantic expressions is put into words by the NLG program.",
        "Whereas this programme, which might be called ‘logic-oriented’ generation, would constitute a fairly radical departure from current practice if applied to all of NLG (Krahmer & van Deemter (forthcoming); Power 2000 for related work), the main aim of the present paper is modest: to show that logic-oriented generation is standard practice in connection with the generation of referring expressions (GRE).",
        "More specifically, we show the semantics of current GRE algorithms to be guided by a surprisingly simple principle of co-extensivity, while their pragmatics is guided by Gricean Brevity.",
        "Our game plan is as follows.",
        "In section 2, we illustrate the collaboration between Brevity and co-extensivity, focussing on ‘simple’ referring expressions, which intersect atomic properties (e.g., ‘dog’ and ‘black’).",
        "Section 3 proceeds by showing how other algorithms use the principle to legitimize the creation of more elaborate structures involving, for example, complex Boolean combinations (e.g., the union of some properties, each of which is the intersection of some atomic prop-'See also van Deemter (1990) where, on identical grounds, a variant of Carnap-style intensional isomorphism was proposed as an alternative notion of equivalence.",
        "erties).",
        "This part of the paper will borrow from van Deemter (2001), which focusses on computational aspects of GRE.",
        "Section 4 asks how the principle of co-extensivity may be generalized beyond GRE and questions its validity.",
        "2 Intersective reference to sets of domain objects The Knowledge Base (KB) forming the input to the generator will often designate objects using the jargon of computerized databases, which is not always meaningful for the reader/hearer.",
        "This is true, for example, for an artificial name (i.e., a database key) like ‘ ’ when a person’s proper name is not uniquely distinguishing; it is also true for objects (e.g., furniture, trees, atomic particles) for which no proper names are in common usage.",
        "In all such cases, the NLG program has to ‘invent’ a description that enables the hearer to identify the target object.",
        "The program transforms the original semantic structure in the KB into some other structure.",
        "Let us examine simple references first.",
        "Assume that the information used for interpreting a description is stored in a KB representing what properties are true of each given object.",
        "In addition to these properties, whose extensions are shared between speaker and hearer, there are other properties, which are being conveyed from speaker to hearer.",
        "For example, the speaker may say ‘The white poodle is pregnant’, to convey the new information that the referent of ‘the white poodle’ is pregnant.",
        "GRE ‘sees’ the first, shared KB only.",
        "We will restrict attention to the problem of determining the semantic content of a description, leaving linguistic realization aside.",
        "(Cf. Stone and Webber 1998, Krahmer and Theune 1999, which interleave linguistic realization and generation.)",
        "Accordingly, ‘Generation of Referring Expressions’ (GRE) will refer specifically to content determination.",
        "We will call a GRE algorithm complete if it is successful whenever an individuating description exists.",
        "Most GRE algorithms are limited to individual target objects (for an exception, Stone 2000), but we will present ones that refer to sets of objects (Van Deemter 2000); reference to an individual will equal reference to the singleton set ."
      ]
    },
    {
      "heading": "2.1 The Incremental Algorithm",
      "text": [
        "Dale and Reiter (1995) proposed an algorithm that takes a shared KB as its input and delivers a set of properties which jointly identify the target.",
        "Descriptions produced by the algorithm fullfill the criterion of co-extensivity.",
        "According to this principle, a description is semantically correct if it has the target as its referent (i.e., its extension).",
        "The authors observed that a semantically correct description can still be unnatural, but that naturalness is not always easy to achieve.",
        "In particular, the problem of finding a (‘Full Brevity’) description that contains the minimum number of properties is computationally intractable, and human speakers often produce non-minimal descriptions.",
        "Accordingly, they proposed an algorithm that approximates Full Brevity, while being of only linear complexity.",
        "The algorithm produces a finite set of properties such that the intersection of their denotations equals the target set , causing to be a ‘distinguishing description’ of .",
        "The properties in are selected one by one, and there is no backtracking, which is why the algorithm is called Incremental.",
        "As a result, some of the properties in may be logically superfluous.",
        "For simplicity, we will focus here on properties, without separating them into Attributes and Values (see also Reiter and Dale 2000, section 5.4.5).",
        "Accordingly, reflecting the fact that not all properties are equally ‘preferred’, they are ordered linearly in a listIP, with more preferred ones preceding less preferred ones.",
        "We also simplify by not taking the special treatment of head nouns into account.",
        "Suppose is the target set, and is the set of elements from which is to be selected.",
        "The algorithm iterates through IP; for each property, it checks whether it would rule out at least one member of that has not already been ruled out; if so, the property is added to .",
        "Members that are ruled out are removed from .",
        "The process of expanding and contracting continues until ; if and when this condition is met, is a distinguishing set of properties.",
        "2We have chosen a formulation in which is a superset of , rather than a ‘contrast set’, from whose elements those of must be distinguished (Dale and Reiter 1995).",
        "The difference is purely presentational.",
        "is initialized to the empty set For each PI do",
        "This algorithm, D&RPlu r, constructs better and better approximations of the target set .",
        "Assuming (cf. Dale and Reiter 1995) that the tests in the body of the loop take some constant amount of time, the worst-case running time is in the order of (i.e., ) where is the total number of properties."
      ]
    },
    {
      "heading": "3 Reference using Boolean descriptions",
      "text": [
        "Based on co-extensivity, the algorithms discussed construct an intersective Boolean expression (i.e., an expression of the form , where are atomic) that has the target set as its extension.",
        "But, intersection is not the only operation on sets.",
        "Consider a KB whose domain is a set of dogs ( ) and whose only Attributes are TYPE and COLOUR: In this situation, D&R does not allow us to individuate any of the dogs.",
        "In fact, however, the KB should enable one to refer to dog , since it is the only black dog that is not a poodle: A similar gap exists where disjunctions might be used.",
        "For example, D&R does not make the set of dogs that are either white or poodles referable, whereas it is referable in English, e.g., ‘The white dogs and the poodles’.",
        "Presently, we will investigate how GRE can take negation and disjunction into account.",
        "Section 3.1 will ask how GRE algorithms can achieve Full Boolean Completeness; section 3.2, which follows Van Deemter (2001), adds Brevity as a requirement.",
        "Boolean descriptions do the same thing that intersective descriptions do, except in a more dramatic way: they ‘create’ even more structure.",
        "As a result, the problem of optimizing these structures with respect to constraints such as Brevity becomes harder as well.",
        "As a first step, we show how one can tell which targets are identifiable given a set of properties and set intersection.",
        "We calculate, for each element in the domain, the ‘Satellite set’ of , that is, the intersection of the extensions of all the properties that are true of .",
        "Taking all extensions from our example, If two objects occur in the same Satellite set then no intersective description can separate them: any description true of one must be true of the other.",
        "It follows, for example, that no object in the domain is uniquely identifiable, since none of them occurs in a Satellite set that is a singleton."
      ]
    },
    {
      "heading": "3.1 Boolean descriptions (i): generate and simplify",
      "text": [
        "Boolean completeness is fairly easy to achieve until further constraints are added.",
        "Suppose the task is to construct a description of a target set , given a setPI of atomic properties, without any further constraints.",
        "We will discuss an algorithm that starts by calculating a generalized type of Satellite sets, based on all atomic properties and their negations.",
        "Construction of Satellite sets: IP PI PI For each do IP Property is added to TYPE: dog , poodle COLOUR: black , white First, the algorithm adds toPI the properties whose extensions are the complements of those in IP.",
        "Then it calculates, for each element in , by lining up all the properties in IP that are true of , then taking the intersection of their extensions.",
        "Satellite sets may be exploited for the construction of descriptions by forming the union of a number of expressions, each of which is the intersection of the elements of (for some )."
      ]
    },
    {
      "heading": "Description By Satellite sets (DBS): Description",
      "text": [
        "Meaning (Note that Description is returned instead of Meaning, since the latter is just the set .)",
        "Des c r i p t i o n is a set of sets of sets of domain objects.",
        "As is made explicit in Meaning, this third-order set is interpreted as a union of intersections.",
        "A Description is successful if it evaluates to the target set ; otherwise the algorithm returns Fail.",
        "If Fail is returned, no Boolean description of is possible: DBS is computationally cheap: it has a worst-case running time of , where is the number of objects in , and the number of atomic properties.",
        "Rather than searching among all the possible unions of some large set of sets, a set is described as the union of Satellites sets, each of which equals the intersection of those (at most ) sets inIP that contain .",
        "Descriptions can make use of the Satellite sets computed for earlier descriptions, causing a further reduction of time.",
        "Satellites sets can even be calculated off-line, for all the elements in the domain, before the need for specific referring expressions has arisen.3 Unfortunately, the descriptions produced by DBS tend to be far from brief: .",
        ".",
        ".",
        "To describe the target set , for example, the algorithm generates the Description .",
        "Consequently, the boolean expression generated is But of course, a much shorter description, , would have sufficed.",
        "What are the prospects for simplifying the output of DBS?",
        "Unfortunately, perfect simplification (i.e., Full Brevity) is incompatible with computational tractibility.",
        "Suppose brevity of descriptions is defined as follows: is less brief than if either contains only atomic properties while contains non-atomic properties as well, or contains more Boolean operators than .",
        "Then the intractability of Full Brevity for intersections of atomic properties logically implies that of the new algorithm: Proof.",
        "Suppose an algorithm, BOOL, produced a maximally brief Boolean description whenever one exists.",
        "Then whenever a target set can be described as an intersection of atomic properties, BOOL( ) would be a maximally brief intersection of atomic properties, and this is inconsistent with the intractability of Full Brevity for intersections of atomic properties.",
        "is obtainable by a sequence of boolean operations on the properties inPI if and only if equals .",
        "Proof.",
        "The implication from right to left is obvious.",
        "For the reverse direction, suppose .",
        "Then for some , Satellites contains an element that is not in .",
        "But Satellites implies that every set inPI must either contain both of and , or neither.",
        "It follows that , which contains only one of , cannot be obtained by a combination of Boolean operations on the sets inIP.",
        "This negative result gives rise to the question whether Full Brevity may be approximated, perhaps in the spirit of Reiter (1990)’s ‘Local Brevity’ algorithm which takes a given intersective description and tests whether any set of properties in it may be replaced by one other property.",
        "Unfortunately, however, simplification is much harder in the Boolean setting.",
        "Suppose, for example, one wanted to use the Quine-McCluskey algorithm (McCluskey 1965), known from its applications to electronic circuits, to reduce the number of Boolean operators in the description.",
        "This would go only a small part of the way, since Quine-McCluskey assumes logical independence of all the properties involved.",
        "Arbitrarily complex information about the extensions of properties can affect the simplification task, and this reintroduces the spectre of computationally intractability.4 Moreover, the ‘generate and simplify’ approach has other disadvantages in addition.",
        "In particular, the division into two phases, the first of which generates an unwieldy description while the second simplifies it, makes it psychologically unrealistic, at least as a model for speaking.",
        "Also, unlike the Incremental algorithm, it treats all properties alike, regardless of their degree of preferedness.",
        "For these reasons, it is worthwhile to look for an alternative approach, which takes the Incremental algorithm as its point of departure.",
        "This does not mean that DBS is useless: we suggest that it is used for determining whether a Boolean description exists; if not, the program returns Fail; if a Boolean description is possible, the computationally more expensive algorithm of the following section is called."
      ]
    },
    {
      "heading": "3.2 Boolean descriptions (ii): extending the Incremental algorithm",
      "text": [
        "In this section, we will explore how the Incremental algorithm may be generalized to take all Boolean combinations into account.",
        "Given that the Incremental algorithm deals with intersections",
        "between sets, Full Boolean Completeness can be achieved by the addition of set difference.",
        "Set difference may be added to D&RPlur as follows.",
        "First we add negations to the list of atomic properties (much like the earlier DBS algorithm).",
        "Then D&RPlur runs a number of times: first, in phase 1, the algorithm is performed using all positive and negative literals; if this algorithm ends before , phase 2 is entered in which further dis-tractors are removed from using negations of intersections of two literals, and so on, until either (Success) or all combinations have been tried (Failure).",
        "Observe that the negation of an intersection comes down to set union, because of De Morgan’s Law: .",
        "Thus, phase 2 of the algorithm deals with disjunctions of length 2, phase 3 deals with disjunctions of length 3, etcetera.",
        "A schematic presentation will be useful, in which stands for any positive or negative literal.",
        "The length of a property will equal the number of literals occurring in it.",
        "We will say that a D&R phase uses a set of properties if it loops through the properties in (i.e., takes the place ofPI in the original D&RPlur).",
        "D&R",
        "1.",
        "Perform a D&R phase using all properties of the form ;",
        "if this phase is successful then stop, otherwise go to phase (2).",
        "2.",
        "Based on the Values of and coming out of phase (1), perform a D&R phase using all properties of the form ; if this phase is successful then stop, otherwise go to phase (3).",
        "3.",
        "Based on the Values of and coming out of phase (2), perform a D&R phase using all properties of the form ; if this phase is successful then stop, otherwise go to phase (4).",
        "Etcetera.",
        "One can require without loss of generality that no property, considered at any phase, may have : different occurrences of the same atom.5 Since, therefore, at phase , there is room for properties of length , the maximal number of phases equals the total number of atomic properties in the language.",
        "Note that D&R is incremental in two different ways: within a phase, and from one phase to the next.",
        "The latter guarantees that shorter disjunctions are favoured over longer ones.",
        "Once a property has been selected, it will not be abandoned even if properties selected during later phases make it superfluous.",
        "As a result, one may generate descriptions like (i.e., ‘white (cats and dogs)’) when (i.e., ‘cats and dogs’) would have sufficed.",
        "The empirical correctness of this type of incremen-tality is debatable, but repairs can be made if needed.6 Unfortunately, however, the algorithm is not tractable as it stands.",
        "To estimate its running time as a function of the number of properties ( ) in the KB and the number of properties used in the description ( ), note that the maximal number of properties to be considered equals (The factor of derives from inspecting both each atom and its negation.)",
        "If then this is in the order of .7 To avoid intractability, the algorithm can be pruned.",
        "No matter where this is done, the result is polynomial.",
        "By cutting off after phase (1), for example, we generate negations of atomic properties only, producing such descriptions as ‘the black dog that is not a poodle’, while disregarding more complex descriptions.",
        "As a result, Boolean completeness is lost, but only for references to non-singleton sets.",
        "The number of properties to be considered main, or the property , which is equivalent to the earlier-considered property .",
        "by this simpler algorithm equals .",
        "If one wanted to produce more complex descriptions like (‘the white dogs and the poodles’), the algorithm might be cut off one phase later, leading to a worst-case running time of ."
      ]
    },
    {
      "heading": "4 Discussion",
      "text": [
        "Hybrid algorithms, which make use of elements of both algorithms, are possible.",
        "In particular, the idea of incrementality can be injected into the generate and simplify algorithm of section 3.1, firstly, at the level of the construction of Satellite sets (i.e., by letting take into account only those properties fromIP that are necessary for singling out ) and, secondly, where the union of the is formed in DBS (i.e., by taking only those into account that change the resulting Meaning).",
        "Instead of offering any details on this, we choose to discuss a more general problem relating to the problem of Logical Form Equivalence that was noted in section 1.",
        "GRE algorithms exploit a principle of coexten-sivity for determining what are semantically correct ways of referring to an entity.",
        "Thus, consistent with the idea of logic-oriented generation, the structure of the description is not prejudged by the syntactic form of the input to the generator (i.e., by the fact that the input contains an individual constant rather than a description).",
        "As a result, GRE can ‘create’ substantial amounts of new semantic structure containing, for example, any number of Boolean operators.",
        "In section 1, it was suggested that the processes of structure transformation used in GRE might have wider applicability.",
        "The present section questions the validity of coextensivity as a general principle, first for GRE (section 4.",
        "1), then for sentence aggregation (section 4.2)."
      ]
    },
    {
      "heading": "4.1 Descriptions in intensional contexts",
      "text": [
        "The principle of co-extensivity is not valid in intensional contexts.",
        "For example, consider",
        "(a) John knows that [the red button] is dangerous (b) John knows that [the rocket launching button] is dangerous.",
        "5 For example, it is useless to consider the property , which must be true of any element in the do-(a) and (b) have different truth conditions even if",
        "speaker and hearer share the information that the red button is the rocket launching button.",
        "In other words, the two descriptions are not interchangeable, even if reader and hearer know them to be coextensive; what would be necessary is for John to know that they are coextensive.",
        "Extending current GRE algorithms to the generation of referring expressions in intensional contexts is likely to be a difficult enterprise.",
        "Failiure of substitutivity in intensional contexts is, of course, a well-known problem, for which various solutions are available on the theoretical market (e.g., Montague 1973, Barwise and Perry 1983).",
        "But one has to wonder whether co-extensivity is ever really sufficient.",
        "Consider extensional truncations of (a) and (b), such as may be generated from an input I(1) (where the semantic predicate ‘dangerous’ is abbreviated as and is a constant referring to the button): Suppose (a) and (b) are semantically interchangeable (e.g., when said to someone who knows the colours and functions of all objects in the domain), so a choice between them can only be motivated by an appeal to pragmatic principles.",
        "Even then, it is difficult to accept that the same choice must be made regardless whether the input to the generator is I(1), I(2) or I(3): (Here says that is for launching rockets; is the Russellian description operator.)",
        "Co-extensivity, after all, does not allow the generator to distinguish between I(1), I(2) and I(3), because these three have the same extension!",
        "Perhaps a weakened version of co-extensivity is needed which allows the generator to add new structure (e.g., when the input is I(1)), but not to destroy existing structure (e.g., when the input is I(2) or I(3)).",
        "It is, however, unclear what the theoretical justification for such a limitation of co-extensivity might be.",
        "Note that these problems become more dramatic as GRE is able to ‘invent’ more structure (e.g., elaborate Boolean structure, as discussed in section 3).",
        "Crucially, we have to assume that, in an ideal generator, there are many other pragmatic constraints than Brevity.",
        "One description can be chosen over another, for example, because it fullfills some additional communicative goal (Dale and Reiter 1995, section 2.4; also Stone and Webber 1998).",
        "Depending on the communicative goal, for example, (b) might be chosen over (a) because the properties that identify the button also explain why it is dangerous.",
        "Brevity will then have to be interpreted as ‘Brevity provided all the other constraints are fullfilled’."
      ]
    },
    {
      "heading": "4.2 Logic in sentence aggregation",
      "text": [
        "GRE algorithms are sometimes presented as if the principles underlying them were unrelated to those underlying other components of an NLG system.9 This is especially true for the logic-based structure transformations on which this paper has focused.",
        "In what follows, however, we will suggest that analogous transformations motivate some of the key operations in sentence aggregation (Reiter and Dale 2000, p.133-144).",
        "To exemplify, (and limiting the discussion to distributive readings only) the choice between the (a) and (b) variants of (1)-(3) involves a decision as to whether information is expressed in one or more sentences:",
        "(a ) [The red button] is dangerous (b ) [The rocket launching button] is dangerous Analogous to uses of Brevity in GRE, a preference for (1b) over (1a) might be motivated by a preference for a semantic structure with fewer logical operations.",
        "Examples (2)-(3) are not dissimilar to what we see in (1).",
        "For example, the following logical equivalences support the linguistic equivalence of (2a)/(2b) and (3a)/(3b):",
        "In ( ), three properties, and , are aggregated into (i.e., to have each of the three properties and ).",
        "In ( ), two antecedents and are aggregated into .10 As before, a generator might prefer the (b) versions because they are structurally simpler than the logically equivalent (a) versions.",
        "In sentence aggregation, however, co-extensivity is not enough.",
        "For example, we expect ‘Eat(j)’ to be worded differently from ‘Eat(m)’, even if both propositions are true and consequently have the same extension.",
        "Unlike GRE, therefore, aggregation requires at least logical equivalence.",
        "11"
      ]
    },
    {
      "heading": "5 Acknowledgment",
      "text": [
        "Thanks are due to Emiel Krahmer for discussion and comments."
      ]
    },
    {
      "heading": "6 References",
      "text": []
    }
  ]
}
