{
  "info": {
    "authors": [
      "Efrat Jaeger",
      "Nissim Francez",
      "Shuly Wintner"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C02-1066",
    "title": "Guaranteeing Parsing Termination of Unification Grammars",
    "url": "https://aclweb.org/anthology/C02-1066",
    "year": 2002
  },
  "references": [
    "acl-J89-4001",
    "acl-P83-1021"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Unification grammars are known to be Turing-equivalent; given a grammar and a word , it is undecidable whether .",
        "In order to ensure decidability, several constraints on grammars, commonly known as off-line parsability (OLP) were suggested.",
        "The recognition problem is decidable for grammars which satisfy OLP.",
        "An open question is whether it is decidable if a given grammar satisfies OLP.",
        "In this paper we investigate various definitions of OLP, discuss their interrelations and show that some of them are undecidable."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Context-free grammars are considered to lack the expressive power needed for modelling natural languages.",
        "Unification grammars have originated as an extension of context-free grammars, the basic idea being to augment the context-free rules with feature structures (FSs) in order to express additional information.",
        "Today, several variants of unification grammars exist, some of which do not necessarily assume an explicit context-free backbone.",
        "The recognition problem (also known as the membership problem), for a grammar and a string , is whether .",
        "The parsing problem, for a grammar and a string , is to deliver all parse trees that induces on , determining what structural descriptions are assigned by to .",
        "The rest of this paper is concerned with recognition.",
        "Unification grammars have the formal power of Turing machines, thus the recognition problem for them is undecidable.",
        "In order to ensure decidability of the recognition problem, a constraint called off-line parsability (OLP) was suggested.",
        "The recognition problem is decidable for OLP grammars.",
        "There exist several variants of OLP in the literature (Pereira and Warren, 1983; Johnson, 1988; Haas, 1989; Torenvliet and Trautwein, 1995; Shieber, 1992; Wintner and Francez, 1999; Kuhn, 1999).",
        "Some variants of OLP were suggested without recognizing the existence of all other variants.",
        "In this paper we make a comparative analysis of the different OLP variants for the first time.",
        "Some researchers (Haas, 1989; Torenvliet and Trautwein, 1995) conjecture that some of the OLP variants are undecidable (it is undecidable whether a grammar satisfies the constraint), although none of them gives any proof of it.",
        "There exist some variants of OLP for which decidability holds, but these conditions are too restrictive; there is a large class of non-OLP grammars for which parsing termination is guaranteed.",
        "Our main contribution is to show proofs of undecidability for three OLP definitions.",
        "Section 2 defines the basic concepts of our formalism.",
        "Section 3 discusses the different OLP definitions.",
        "Section 4 gives an analysis of several OLP definitions and the interrelations among them.",
        "Section 5 proves the undecidability of three of the OLP conditions."
      ]
    },
    {
      "heading": "2 Preliminaries",
      "text": [
        "The following definitions are based on Francez and Wintner (In preperation) and Carpenter (1992).",
        "Grammars are defined over a finite set FEATS of features, a finite set ATOMS of atoms, and a finite set CATS of categories.",
        "A multi-rooted feature structure (MRS) is a pair where is a finite, directed, labelled graph consisting of a set NODES of nodes, a partial function, FEATS , specifying the arcs and a partial function, ATOMS, labelling the sinks,",
        "is an MRS and is a root in then naturally induces an FS , where is the set of nodes reachable from , and .",
        "Thus can be viewed as an ordered sequence of (not necessarily disjoint) FSs.",
        "We use the two views of MRSs interchangeably.",
        "The substructure of , induced by the pair and denoted , is If An MRS subsumes an MRS (denoted by ) iff and there exists a total function such",
        "that for every root ; for every and FEATS, if then ; and for every if",
        ".",
        "Skeletal grammars are a variant of unification grammars which have an explicit context-free backbone/skeleton.",
        "These grammars can be viewed as an extension of context-free grammars, where every category is associated with an informative FS.",
        "An extended category is a pair where is an FS and CATS.",
        "Definition 2.1.",
        "A skeletal grammar (over FEATS, ATOMS and CATS) is a tuple where is a finite set of rules, each of which is an MRS of length (with a designatedfirst element, the head of the rule), and a sequence of length of categories is a lexicon, which associates with every terminal (over a fixed finite set of terminals) a finite set of extended categories is the start symbol (an extended category).",
        "A skeletal form is a pair , where is an",
        "MRS of length and is a sequence of categories ( CATS for ).",
        "Definition 2.2 (Derivation).",
        "Let and be forms such that",
        "and ately derives iff there exist a skeletal rule of length and an MRS ,",
        "be a skeletal grammar.",
        "A tree is a derivation tree admitted by iff: The root of the tree is the start symbol The internal vertices are extended categories (over the same features, atoms and categories as the grammar ) The leaves are pre-terminals of length If a vertex has descendants, , then immediately derives with respect to some rule ."
      ]
    },
    {
      "heading": "Definition 2.6. A general unification grammar",
      "text": [
        "(over FEATS and ATOMS) is a tuple where is a finite set of rules, each of which is an MRS of length is a lexicon, which associates with every terminal a finite set of FSs is the start symbol (an FS).",
        "General unification grammar formalism do not assume the existence of a context-free backbone.",
        "Derivations, pre-terminals, languages and derivation trees for general unification grammars are defined similarly to skeletal grammars, ignoring all categories.",
        "such that: The first elements of and are identical: ’s head is some element of : ’s body is a substructure of : The last elements of and are identical: is obtained by replacing the -th element of"
      ]
    },
    {
      "heading": "3 Off-line-parsability constraints",
      "text": [
        "It is well known that unification based grammar formalisms are Turing-equivalent in their generative capacity (Pereira and Warren, 1983; Johnson, 1988, 87-93); determining whether a given string is generated by a given grammar is equivalent to deciding whether a Turing machine halts on an empty input, which is known to be undecidable.",
        "Therefore, the recognition problem is undecidable in the general case.",
        "However, for grammars that satisfy a certain restriction, called off-line parsability constraint (OLP), decidability of the recognition problem is guaranteed.",
        "In this section we present some different variants of the OLP constraint suggested in the literature.",
        "Some of the constraints (Pereira and Warren, 1983; Kaplan and Bresnan, 1982; Johnson, 1988; Kuhn, 1999) apply only to skeletal grammars since they use the term category which is not well defined for general unification grammars.",
        "Others (Haas, 1989; Shieber, 1992; Torenvliet and Trautwein, 1995; Wintner and Francez, 1999) are applicable to both skeletal and general unification grammars.",
        "Some of the constraints impose a restriction on allowable derivation trees, but provide no explicit definition of an OLP grammar.",
        "Such a definition can be understood in (at least) two manners:",
        "1.",
        "A grammar is OLP ifffor every every derivation tree for satisfies the OLP constraint.",
        "2.",
        "A grammar is OLP ifffor every there exists a derivation tree which satisfies the OLP constraint.",
        "We begin the discussion with OLP constraints for skeletal grammars.",
        "One of the first definitions was suggested by Pereira and Warren (1983).",
        "Their constraint was designed for DCGs (a skeletal unification grammar formalism which assumes an explicit context-free backbone) for guaranteeing termination of general proof procedures of definite clause sets.",
        "Rephrased in terms of skeletal grammars, the definition is as follows: Definition 3.2 (Pereira and Warren’s OLP for skeletal grammars ( )).",
        "A grammar is off-line parsable iff its context free skeleton is not infinitely ambiguous.",
        "The context free skeleton is obtained by ignoring all FSs of the grammar rules and considering only the categories.",
        "In Jaeger et al.",
        "(2002) we prove that the depth of every derivation tree generated by a grammar whose context-free skeleton is finitely ambiguous is bounded by the number of syntactic categories times the size of its yield, therefore the recognition problem is decidable.",
        "Kaplan and Bresnan (1982) suggested a linguis-ticly motivated OLP constraint which refers to valid derivations for the lexical functional grammar formalism (LFG), a skeletal grammar formalism.",
        "They impose constraints on two kinds of ’s, optionality and controlled ’s, but as these terms are not formally defined, we use a variant of their constraint, suggested by Johnson (1988, 95-97), eliminating all ’s of any kind."
      ]
    },
    {
      "heading": "Definition 3.3 (Johnson’s OLP ( )). A con",
      "text": [
        "stituent structure satisfies the off-line parsability constraint iff it does not include a non-branching dominance chain in which the same category appears twice and the empty string does not appear as a lexical form annotation of any (terminal) node.",
        "This constraint bounds the depth of any OLP derivation tree by a linear function of the size of its yield, thus ensuring decidability of the recognition problem.",
        "Johnson’s definition is a restriction on allowable c-structures rather than on the grammar itself.",
        "We use definition 3.1 for grammars and refer only to its second part since it is less restrictive.",
        "The next definition is also based on Kaplan and Bresnan’s constraint and is also dealing only with OLP derivations.",
        "OLP grammar definitions are according to definition 3.1.",
        "X-bar theory grammars (Chomsky, 1975) have a strong linguistic justification in describing natural languages.",
        "Unfortunately neither Kaplan and Bres-nan’s nor Johnson’s constraints allow such grammars, since they do not allow derivation trees in which the same category appears twice in a non-branching dominance chain.",
        "Kuhn (1999) refers to the problem from a linguist’s point of view.",
        "The purpose of his constraint was to expand the class of grammars which satisfy Kaplan and Bresnan’s constraint in order to allow X-bar derivations.",
        "Again, since there exists no formal definition of the different kinds of ’s we assume that does not represent a lexical item (no -rules)."
      ]
    },
    {
      "heading": "Definition 3.4 (Kuhn’s OLP ( )). A c",
      "text": [
        "structure derivation is valid iff no category appears twice in a non-branching dominance chain with the same f-annotation.",
        "Kuhn (1999) gives some examples of X-bar theory derivation trees of German and Italian sentences which contain the same category twice in a non-branching dominance chain with a different f-annotation.",
        "Therefore they are invalid OLP derivation trees (by both Kaplan and Bresnan’s and John-son’s constraints), but they satisfy Kuhn’s OLP constraint.",
        "According to Kuhn (1999), “The Off-line parsability condition is a restriction on allowable c-structures excluding that for a given string, infinitely many c-structure analyses are possible”.",
        "In other words, Kuhn assumes that OLP is, in fact, a condition that is intended to guarantee finite ambiguity.",
        "Kuhn’s definition may allow X-bar derivations, but it does not ensure finite ambiguity.",
        "The following grammar is an LFG grammar generating c-structures in which the same category appears twice in a non-branching dominance chain only with a different f-annotation, therefore it satisfies Kuhn’s definition of OLP.",
        "But the grammar is infinitely ambiguous:",
        "Therefore, it is not clear whether the condition guarantees parsing termination nor decidability of the recognition problem and we exclude Kuhn’s definition from further analysis.",
        "The following definitions are applicable to both skeletal and general unification grammars.",
        "The first constraint was suggested by Haas (1989).",
        "Based on the fact that not every natural unification grammar has an obvious context-free backbone, Haas suggested a constraint for guaranteeing solvability of the parsing problem which is applicable to all unification grammar formalisms.",
        "Haas’ definition of a derivation tree is slightly different from the definition given above (definition 2.5).",
        "He allows derivation trees with nonterminals at their leaves, therefore a tree may represent a partial derivation."
      ]
    },
    {
      "heading": "Definition 3.5 (Haas’ Depth-boundedness ( )).",
      "text": [
        "A unification grammar is depth-bounded ifffor every there is a such that every parse tree for a sentential form of symbols has depth less than .",
        "According to Haas (1989), “a depth-bounded grammar cannot build an unbounded amount of tree structure from a bounded number of symbols”.",
        "Therefore, for each sentential form of length there exist a finite number of partial derivation trees, guaranteeing parsing termination.",
        "The definition applies only to skeletal grammars, general unification grammars do not necessarily yield an explicit context-free skeleton.",
        "But the definition can be extended for all unification grammar formalisms: Definition 3.6 (Finite ambiguity for unification grammars ( )).",
        "A unification grammar is OLP ifffor every string there exist a finite number of derivation trees.",
        "Shieber’s OLP definition (Shieber, 1992, 79–82) is defined in terms of logical constraint based grammar formalisms.",
        "His constraint is defined in logical terms, such as models and operations on models.",
        "We reformulate the definition in terms of FSs."
      ]
    },
    {
      "heading": "Definition 3.7 (Shieber’s OLP ( )). A gram",
      "text": [
        "mar is off-line parsable iff there exists a finite-ranged function on FSs such that for all and there are no derivation trees admitted by in which a node dominates a node , both are roots of sub-trees with an identical yield and .",
        "The constraint is intended to bound the depth of every derivation tree by the range of times the size of its yield.",
        "Thus the recognition problem is decidable.",
        "Johnson’s OLP constraint is too restrictive, since it excludes all repetitive unary branching chains and - rules, furthermore, it is applicable only to skeletal grammars.",
        "Therefore, Torenvliet and Trautwein (1995) have suggested a more liberal constraint, which is applicable to all unification grammar formalisms.",
        "Definition 3.8 (Honest parsability constraint ( )).",
        "A grammar satisfies the Honest Parsabil-ity Constraint (HPC) iff there exists a polynomial s.t.",
        "for each there exists a derivation",
        "The definition guarantees that for every string of the grammar’s language there exists at least one polynomial depth (in the size of the derived string) derivation tree.",
        "Furthermore, the definition allows X-bar theory derivation trees, since a category may appear twice in a non-branching dominance chain as long as the depth of the tree is bounded by a polynomial function of its yield."
      ]
    },
    {
      "heading": "4 OLP Analysis",
      "text": [
        "In this section we first give some grammar examples and mention their OLP properties, then compare the different variants of OLP definitions using these examples.",
        "The examples use a straightforward encoding of lists as FSs, where an empty list is denoted by , and head tail represents a list whose first item is , followed by .",
        "Figure 1 lists an example unification grammar generating the language .",
        "A string of occurrences of has exactly one parse tree and its depth is .",
        "Therefore, is and",
        "rences of has exactly one parse tree.",
        "The feature DEPTH represents the current depth of the derivation tree; at each derivation step an item is added to the DEPTH list.",
        "The feature TEMP represents the number of derivation steps before generating the next symbol.",
        "Every application of the second rule doubles the depth of TEMP list (with respect to its length after the previous application of the rule).",
        "Thus the number of derivation steps for generating each is always twice the number of steps for generating its predecessor, and for every sentential form of length any partial derivation tree’s depth is bounded by an exponential function of (approximately ).",
        "Therefore is and but neither nor",
        ".is neither nor ; it may generate arbitrarily deep derivation trees (containing lists of increasing length) whose frontier consists of only one symbol, and thus there exists no finite-ranged function mapping each FS on such a derivation to a finite set of",
        "generating the language .",
        "There exist infinitely many derivation trees, of arbitrary depths, for the string , therefore, is neither nor nor .is ; there exists a derivation tree for"
      ]
    },
    {
      "heading": "Interrelations among the OLP definitions",
      "text": [
        "Below we make a comparison of all given OLP definitions; such relationships were not investigated in the past.",
        "We begin by considering skeletal grammars.",
        "Johnson’s condition is the only one omitting all ’s, thus none of the others implies .",
        "– .",
        "–, , , : The grammar of figure 2 is an grammar (viewing CAT as the category) but it does not satisfy the other constraints.",
        "– , , , : By Jaeger et al.",
        "(2002), the depth of any derivation tree (partial/non-partial) admitted by an grammar is bounded by a linear function of the size of its yield, thus an grammar satisfies all the other constraints.",
        "A grammar satisfying the constraints may still have an infinitely ambiguous context-free backbone.",
        "We continue the analysis by comparing the definitions which are applicable to general unification grammars.",
        "– .",
        "–: None of the conditions implies the other.",
        "The grammar of figure 3 is but not .",
        "A grammar whose language consists of only one word, and its derivation is of a constant depth, may still contain a redundant rule generating arbitrarily deep trees whose frontier is of length .",
        "Thus it is but not tree is bounded by some function of its yield.",
        "means that for every string there exist at least one derivation tree of a polynomial depth of its yield.",
        "The grammar of figure 3 is and , but since every derivation tree’s depth is exponential in the size of its yield, it is not .",
        "The grammar of figure 2 is , but since it is infinitely ambiguous, it is neither nor tree admitted by an grammar is bounded by .",
        "Figure 4 depicts the interrelations hierarchy diagram of the OLP definitions, separated for skeletal and general unification grammars.",
        "The arrows represent the implications discussed above.",
        "skeletal grammars.",
        "general unification grammars."
      ]
    },
    {
      "heading": "5 Undecidability proofs",
      "text": [
        "For the definitions which are applicable only to skeletal grammars it is easy to verify whether a grammar satisfies the constraint.",
        "The definitions that apply to arbitrary unification grammars are harder to check.",
        "In this section we give sketches of proofs of undecidability of three of the OLP definitions: Finite Ambiguity ( ), Depth-Boundedness ( ) and Shieber’s OLP ( ).",
        "Theorem 1.",
        "Finite ambiguity is undecidable.",
        "Proof sketch.",
        "In order to show thatfinite ambiguity is undecidable, we use a reduction from the membership problem, which is known to be undecidable (Johnson, 1988).",
        "We assume that there exists an algorithm, , for deciding and show how it can be used to decide whether Apply to , is on iff .If then , therefore by applying the rule infinitely many times, there exist an infinite number of derivation trees for admitted by .",
        "If then , no application of the additional rule would generate any derivation tree for , and is finitely ambiguous.",
        "Since the membership problem is undecidable, it is undecidable whether there exist only a finite number of derivation trees for a string admitted by .",
        "Hence finite ambiguity is undecidable.",
        "–: The depth of any derivation , : The depth of any derivation tree is bounded by a linear function of its yield, therefore for every string there exists a derivation tree of at most a polynomial depth, and an grammar is : A grammar is also ; it can only generate derivation trees whose depth is bounded by a function of their yield, and there exist only a finite number of derivation trees up to a certain depth.",
        "By figure 1, an grammar is not necessarily , – :means that every derivation a linear function of its yield.",
        "Thus an grammar is and .",
        "By figure 1, an and grammar is not necessarily .",
        "Given a string and a grammar , construct , by adding the rule to ’s set of rules.",
        "Theorem 2.",
        "Depth-boundedness is undecidable.",
        "Proof sketch.",
        "In order to prove undecidability of depth-boundedness, we use a reduction from the Turing machines halting problem, which is known to be undecidable (Hopcroft and Ullman, 1979, 183- 185).",
        "We assume that there exists an algorithm, , for deciding and show how it can be used to decide whether a Turing machine terminates on the empty input .",
        "Johnson (1988) suggested a transformation from the Turing machines halting problem to unification grammars.",
        "The transformation generates a grammar, , which consists of unit-rules only, and can generate at most one complete derivation tree.",
        "Assume the existence of an algorithm .",
        "Apply to .",
        "If is then the grammar generates a complete derivation tree, therefore its language is non empty and terminates on the empty input.",
        "Otherwise, and does not terminate on the empty input.",
        "Thus, we have decided the Turing machines halting problem.",
        "Theorem 3. is undecidable.",
        "Proof sketch.",
        "In order to prove undecidability of , we use a combination of the undecidability proofs of and .",
        "Given a Turing machine , construct using Johnson’s reduction, then construct by adding to .",
        "Assume the existence of an algorithm , deciding"
      ]
    },
    {
      "heading": "6 Conclusions",
      "text": [
        "In this paper we compare several variants of the OLP constraint for the first time.",
        "We give sketches of proofs of undecidability of three OLP conditions, full proofs along with undecidability proofs of other conditions are given in Jaeger et al.",
        "(2002).",
        "In Jaeger et al.",
        "(2002) we also give a novel OLP constraint as well as an algorithm for deciding whether a grammar satisfies it.",
        "The constraint is applicable to all unification grammar formalisms.",
        "It is more liberal than the existing constraints that are limited to skeletal grammars only, yet, unlike all definitions that are applicable to general unification grammars, it can be tested efficiently."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "The work of Nissim Francez was partially funded by the vice-president’s fund for the promotion of research at the Technion.",
        "The work of Shuly Wintner was supported by the Israeli Science Foundation (grant no.",
        "136/1)."
      ]
    }
  ]
}
