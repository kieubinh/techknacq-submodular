{
  "info": {
    "authors": [
      "Takehito Utsuro",
      "Manabu Sassano",
      "Kiyotaka Uchimoto"
    ],
    "book": "Conference on Empirical Methods in Natural Language Processing",
    "id": "acl-W02-1036",
    "title": "Combining Outputs of Multiple Japanese Named Entity Chunkers by Stacking",
    "url": "https://aclweb.org/anthology/W02-1036",
    "year": 2002
  },
  "references": [
    "acl-A00-2005",
    "acl-A00-2007",
    "acl-C00-2102",
    "acl-P00-1042",
    "acl-P94-1013",
    "acl-P98-1029",
    "acl-P98-1081",
    "acl-W98-1118",
    "acl-W98-1120",
    "acl-W99-0623"
  ],
  "sections": [
    {
      "text": [
        "tagging (van Halteren et al., 1998), base noun phrase chunking (Tjong Kim Sang, 2000), and parsing (Henderson and Brill, 1999; Henderson and Brill, 2000).",
        "The aim of system combination is to combine portions of the individual systems’ outputs which are partial but can be regarded as highly accurate.",
        "The process of system combination can be decomposed into the following two sub-processes:",
        "1.",
        "Collect systems which behave as differently as possible: it would help a lot if at least the col",
        "lected systems tend to make errors of different types, because simple voting technique can identify correct outputs.",
        "Previously studied techniques for collecting such systems include: i) using several existing real systems (van Halteren et al., 1998; Brill and Wu, 1998; Henderson and Brill, 1999; Tjong Kim Sang, 2000), ii) bagging/boosting techniques (Henderson and Brill, 1999; Henderson and Brill, 2000), and iii) switching the data expression and obtaining several models (Tjong Kim Sang, 2000).",
        "2.",
        "Combine the outputs of the several systems: previously studied techniques include: i) voting techniques (van Halteren et al., 1998; Tjong Kim Sang, 2000; Henderson and Brill, 1999; Henderson and Brill, 2000), ii) switching among several systems according to confidence values they provide (Henderson and Brill, 1999), iii) stacking techniques (Wolpert, 1992) which train a second stage classifier for"
      ]
    },
    {
      "heading": "Abstract",
      "text": [
        "In this paper, we propose a method for learning a classifier which combines outputs of more than one Japanese named entity extractors.",
        "The proposed combination method belongs to the family of stacked generalizers, which is in principle a technique of combining outputs of several classifiers at the first stage by learning a second stage classifier to combine those outputs at the first stage.",
        "Individual models to be combined are based on maximum entropy models, one of which always considers surrounding contexts of a fixed length, while the other considers those of variable lengths according to the number of constituent morphemes of named entities.",
        "As an algorithm for learning the second stage classifier, we employ a decision list learning method.",
        "Experimental evaluation shows that the proposed method achieves improvement over the best known results with Japanese named entity extractors based on maximum entropy models."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "In the recent corpus-based NLP research, system combination techniques have been successfully applied to several tasks such as parts-of-speech combining outputs of classifiers at the first stage (van Halteren et al., 1998; Brill and Wu, 1998; Tjong Kim Sang, 2000).",
        "In this paper, we propose a method for combining outputs of (Japanese) named entity chunkers, which belongs to the family of stacking techniques.",
        "In the sub-process 1, we focus on models which differ in the lengths of preceding/subsequent contexts to be incorporated in the models.",
        "As the base model for supervised learning of Japanese named entity chunking, we employ a model based on the maximum entropy model (Uchimoto et al., 2000), which performed the best in IREX (Information Retrieval and Extraction Exercise) Workshop (IREX Committee, 1999) among those based on machine learning techniques.",
        "Uchimoto et al.",
        "(2000) reported that the optimal number of preceding/subsequent contexts to be incorporated in the model is two morphemes to both left and right from the current position.",
        "In this paper, we train several maximum entropy models which differ in the lengths of preceding/subsequent contexts, and then combine their outputs.",
        "As the sub-process 2, we propose to apply a stacking technique which learns a classifier for combining outputs of several named entity chunkers.",
        "This second stage classifier learns rules for accepting/rejecting outputs of several individual named entity chunkers.",
        "The proposed method can be applied to the cases where the number of constituent systems is quite small (e.g., two).",
        "Actually, in the experimental evaluation, we show that the results of combining the best performing model of Uchimoto et al.",
        "(2000) with the one which performs poorly but extracts named entities quite different from those of the best performing model can help improve the performance of the best model."
      ]
    },
    {
      "heading": "2 Named Entity Chunking based on Maximum Entropy Models",
      "text": []
    },
    {
      "heading": "2.1 Task of the IREX Workshop",
      "text": [
        "The task of named entity recognition of the IREX workshop is to recognize eight named entity types in Table 1 (IREX Committee, 1999).",
        "The organizer of the IREX workshop provided 1,174 newspaper articles which include 18,677 named entities as the training data.",
        "In the formal run (general domain)",
        "of the workshop, the participating systems were requested to recognize 1,510 named entities included in the held-out 71 newspaper articles."
      ]
    },
    {
      "heading": "2.2 Named Entity Chunking",
      "text": [
        "We first provide our definition of the task of Japanese named entity chunking (Sekine et al., 1998; Borthwick et al., 1998; Uchimoto et al., 2000).",
        "Suppose that a sequence of morphemes is given as below:",
        "Given that the current position is at the morpheme MZ 'E, the task of named entity chunking is to assign a chunking state (to be described in section 2.3.",
        "1) to the morpheme MZ 'E at the current position, considering the patterns of surrounding morphemes.",
        "Note that in the supervised learning phase, we can use the chunking information on which morphemes constitute a named entity, and which morphemes are in the left/right contexts of the named entity."
      ]
    },
    {
      "heading": "2.3 The Maximum Entropy Model",
      "text": [
        "In the maximum entropy model (Della Pietra et al., 1997), the conditional probability of the output y given the context x can be estimated as the following pA(y I x) of the form of the exponential family, where binary-valued indicator functions called feature functions fz (x, y) are introduced for expressing a set of “features”, or “attributes” of the context x and the output y.",
        "A parameter λz is introduced for each feature fz, and is estimated from a training data.",
        "Uchimoto et al.",
        "(2000) defines the context x as the patterns of surrounding morphemes as well as that at the current position, and the output y as the named entity chunking state to be assigned to the morpheme at the current position.",
        "Uchimoto et al.",
        "(2000) classifies classes of named entity chunking states into the following 40 tags:",
        "• Each of eight named entity types plus an “OPTIONAL” type are divided into four chunking states, namely, the beginning/middle/end of an named entity, or an named entity consisting of a single morpheme.",
        "This amounts to 9 × 4 = 36 classes.",
        "• Three more classes are distinguished for morphemes immediately preceding/following a named entity, as well as the one between two named entities.",
        "• Other morphemes are assigned the class “OTHER”."
      ]
    },
    {
      "heading": "2.3.2 Features",
      "text": [
        "Following Uchimoto et al.",
        "(2000), feature functions for morphemes at the current position as well as the surrounding contexts are defined.",
        "More specifically, the following three types of feature functions are used: 1",
        "1.",
        "2052 lexical items that are observed five times or more within two morphemes from named entities in the training corpus.",
        "2. parts-of-speech tags of morphemes2.",
        "3. character types of morphemes (i.e., Japanese",
        "(hiragana or katakana), Chinese (kanji), numbers, English alphabets, symbols, and their combinations).",
        "As for the number of preceding/subsequent morphemes as contextual clues, we consider the following models:",
        "This model considers the preceding two morphemes M-2, M-1 as well as the subsequent two morphemes M1, M2 as the contextual clue.",
        "Both in (Uchimoto et al., 2000) and in this paper, this is the model which performs the best among all the individual models without system combination.",
        "For both 7-gram and 9-gram models, we consider the following three modifications to those models:",
        "• with all features • with lexical items and parts-of-speech tags (without the character types) of M{(-4),-3,3,(4)} • with only the lexical items of M{(-4),-3,3,(4)}",
        "In our experiments, the number of features is 13,200 for 5-gram model and 15,071 for 9-gram model.",
        "The number of feature functions is 31,344 for 5-gram model and 3 5,3 11 for 9-gram model.",
        "Training a variable length (5∼9-gram) model, testing with 9-gram model The major disadvantage of the 5/7/9-gram models is that in the training phase it does not take into account whether or not the preceding/subsequent morphemes constitute one named entity together with the morpheme at the current position.",
        "Considering this disadvantage, we examine another model, namely, variable length model, which incorporates variable length contextual information.",
        "In the training phase, this model considers which of the preceding/subsequent morphemes constitute one named entity together with the morpheme at the currentpo-sition (Sassano and Utsuro, 2000).",
        "It also considers several morphemes in the left/right contexts of the named entity.",
        "Here we restrict this model to explicitly considering the cases of named entities of the length up to three morphemes and only implicitly considering those longer than three morphemes.",
        "We also restrict it to considering two morphemes in both left and right contexts of the named entity.",
        "1.",
        "In the cases where the current named entity consists of up to three morphemes, all the constituent morphemes are regarded as within the current named entity.",
        "The following is an example of this case, where the current named entity consists of three morphemes, and the current position is at the middle of those constituent morphemes as below:",
        "2.",
        "In the cases where the current named entity consists of more than three morphemes, only the three constituent morphemes are regarded as within the current named entity and the rest are treated as if they were outside the named entity.",
        "For example, suppose that the current named entity consists of four morphemes:",
        "In this case, the fourth constituent morpheme M4 E is treated as if it were in the right context of the current named entity as below:",
        "In the testing phase, we apply this model considering the preceding four morphemes as well as the subsequent four morphemes at every position, as in the case of 9-gram model3.",
        "We consider the following three modifications to this model, where we suppose that the morpheme at the current position be M0:",
        "• with all features • with lexical items and parts-of-speech tags (without the character types) of M{-4,-3,3,41 • with only the lexical items of M{-4,-3,3,41"
      ]
    },
    {
      "heading": "3 Learning to Combine Outputs of Named Entity Chunkers",
      "text": []
    },
    {
      "heading": "3.1 Data Sets",
      "text": [
        "The following gives the training and test data sets for our framework of learning to combine outputs of named entity chunkers.",
        "1.",
        "TrI: training data set for learning individual named entity chunkers.",
        "2.",
        "TrC: training data set for learning a classifier for combining outputs of individual named entity chunkers.",
        "3.",
        "Ts: test data set for evaluating the classifier for combining outputs of individual named entity chunkers."
      ]
    },
    {
      "heading": "3.2 Procedure",
      "text": [
        "The following gives the procedure for learning the classifier to combine outputs of named entity chunkers using TrI and TrC.",
        "1.",
        "Train the individual named entity chunkers NEchki (i = 1, ... , n) using TrI.",
        "2.",
        "Apply the individual named entity chunkers NEchki (i = 1, ... , n) to TrC, respectively, and obtain the list of chunked named entities NEListi(TrC) for each named entity chun-ker NEchki.",
        "3.",
        "Align the lists NEListi(TrC) (i = 1, ... , n) of chunked named entities according to the positions of the chunked named entities in the text TrC, and obtain the event expression TrCev of TrC.",
        "4.",
        "Train the classifier NEchkcmb for combining outputs of individual named entity chunkers using the event expression TrCev.",
        "The following gives the procedure for applying the learned classifier to Ts.",
        "1.",
        "Apply the individual named entity chunkers NEchki (i = 1, ..., n) to Ts, respectively, and obtain the list of chunked named entities NEListi(Ts) for each named entity chunker NEchki.",
        "2.",
        "Align the lists NEListi(Ts) (i =1, ... , n) of chunked named entities according to the positions of the chunked named entities in the text Ts, and obtain the event expression Tsev of Ts.",
        "3.",
        "Apply NEchkcomb to Tsev and evaluate its performance."
      ]
    },
    {
      "heading": "3.3 Data Expressions 3.3.1 Events",
      "text": [
        "The event expression TrCev of TrC is obtained by aligning the lists NEListi(TrC) (i = 1, .",
        ".",
        "., n) of chunked named entities, and is represented as a sequence of segments, where each segment is a set of aligned named entities.",
        "Chunked named entities are aligned under the constraint that those which share at least one constituent morpheme have to be aligned into the same segment.",
        "Examples of segments, into which named entities chunked by two systems are aligned, are shown in Table 2.",
        "In the first segment SegEvi, given the sequence of the two morphemes, the system No.0 decided to extract two named entities, while the system No.1 chunked the two morphemes into one named entity.",
        "In those event expressions, systems indicates the list of the indices of the systems which output the named entity, mlength gives the number of the constituent morphemes, NEtag gives one of the nine named entity types, POS gives the list of parts-of-speech of the constituent morphemes, and classNE indicates whether the named entity is a correct one compared against the gold standard (“+”), or the one over-generated by the systems (“−”).",
        "In the second segment SegEvi+1, only the system No.1 decided to extract a named entity from the sequence of the three morphemes.",
        "In this case, the event expression for the system No.0 is the one which indicates that no named entity is extracted by the system No.0.",
        "In the training phase, each segment SegEvj of event expression constitutes a minimal unit of an event, from which features for learning the classifier are extracted.",
        "In the testing phase, the classes of each system’s outputs are predicted against each segment SegEvj."
      ]
    },
    {
      "heading": "3.3.2 Features and Classes",
      "text": [
        "In principle, features for learning the classifier for combining outputs of named entity chunkers are represented as a set of pairs of the system indices list (p, ... , q) and a feature expression F of the named entity:",
        "In the training phase, any possible feature of this form is extracted from each segment SegEvj of",
        "event expression.",
        "The system indices list (p, ... , q) indicates the list of the systems which output the named entity.",
        "A feature expression F of the named entity can be any possible subset of the full feature expression {mlength = · · · , NEtag = · · · , POS = · · ·}, or the set indicating that the system outputs no named entity within the segment.",
        "�any subset of mlength =· · · 1l,",
        "{ class,,,=“no outputs” } JJ In the training and testing phases, within each segment SegEvj of event expression, a class is assigned to each system, where each class classisys for the i-th system is represented as a list of the classes of the named entities output by the system:",
        "class... = “no output” (i = 1, ... , n)"
      ]
    },
    {
      "heading": "3.4 Learning Algorithm",
      "text": [
        "We apply a simple decision list learning method to the task of learning a classifier for combining outputs of named entity chunkers4.",
        "A decision list (Yarowsky, 1994) is a sorted list of decision rules, each of which decides the value of class given some features f of an event.",
        "Each decision rule in a decision list is sorted in descending order with respect to some preference value, and rules with higher preference values are applied first when applying the decision list to some new test data.",
        "In this paper, we simply sort the decision list according to the conditional probability P(classi |f) of the classi of the i-th system’s output given a feature f."
      ]
    },
    {
      "heading": "4 Experimental Evaluation",
      "text": [
        "We experimentally evaluate the performance of the proposed system combination method using the IREX workshop’s training and test data."
      ]
    },
    {
      "heading": "4.1 Comparison of Outputs of Individual Systems",
      "text": [
        "First, Table 3 shows the performance of the individual models described in the section 2.3.2, where trained with the IREX workshop’s training data, and tested against the IREX workshop’s test data as Ts.",
        "The 5-gram model performs the best among those individual models.",
        "Next, assuming that each of the models other than the 5-gram model is combined with the 5-gram model, Table 4 compares the named entities of their outputs.",
        "Recall rate of the correct named entities in the union of their outputs, as well as the overlap rate5 of the over-generated entities against those included in the output of the 5-gram model are shown.",
        "From the Tables 3 and 4, it is clear that the 7-gram and 9-gram models are quite similar to the 5-gram model both in the performance and in the distribution of correct/over-generated named entities.",
        "On the other hand, variable length models have distribution of correct/over-generated named entities a lit",
        "tle different from that of the 5-gram model.",
        "Variable length models have lower performance mainly because of the difference between the training and testing phases with respect to the modeling of context lengths.",
        "Especially, the variable length model with “all” features of M{_4,_3,3,4} has much lower performance as well as significantly different distribution of correct/over-generated named entities.",
        "This is because character types features are so general that many (erroneous) named entities are over-generated, while sometimes they contribute to finding named entities that are never detected by any of the other models."
      ]
    },
    {
      "heading": "4.2 Results of Combining System Outputs",
      "text": [
        "This section reports the results of combining the output of the 5-gram model with that of 7-gram models, 9-gram models, and the variable length models.",
        "As the training data sets TrI and TrC, we evaluate the following two assignments (a) and (b), where DCRL denotes the IREX workshop’s training data:",
        "We use the IREX workshop’s test data for Ts.",
        "In the assignment (a), TrI and TrC are disjoint, while in the assignment (b), individual named entity chunkers are applied to their own training data, i.e., closed data.",
        "The assignment (b) is for the sake of avoiding data sparseness in learning the classifier for combining outputs of two named entity chunkers.",
        "Table 5 shows the peformance in F-measure (β = 1) for both assignments (a) and (b).",
        "For both (a) and",
        "(b), “5-gram + variable length (All)” significantly outperforms the 5-gram model, which is the best model among all the individual models without system combination.",
        "It is remarkable that models which perform poorly but extract named entities quite different from those of the best performing model can actually help improve the best model by the proposed method.",
        "The performance for the assignment (b) is better than that for the assignment (a).",
        "This result claims that the training data size should be larger when learning the classifier for combining outputs of two named entity chunkers.",
        "In the Table 6, for the best performing result (i.e., 5-gram + variable length (All)) as well as the constituent individual models (5-gram model and variable length model (All)), we classify the system output according to the number of constituent morphemes of each named entity.",
        "In the Table 7, we classify the system output according to the named entity types.",
        "The following summarizes several remarkable points of these results: i) the benefit of the system combination is more in the improvement of precision rather than in that of recall.",
        "This means that the proposed system combination technique is useful for detecting over-generation of named entity chunkers, ii) the combined outputs of the 5-gram model and the variable length model improve the results of chunking longer named entities quite well compared with shorter named entities.",
        "This is the effect of the variable length features of the variable length model."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "This paper proposed a method for learning a classifier to combine outputs of more than one Japanese named entity chunkers.",
        "Experimental evaluation showed that the proposed method achieved improvement in F-measure over the best known results with an ME model (Uchimoto et al., 2000), when a complementary model extracted named entities quite differently from the best performing model."
      ]
    }
  ]
}
