{
  "info": {
    "authors": [
      "Lixin Zhou",
      "Qun Liu"
    ],
    "book": "Workshop on SEMANET: Building and Using Semantic Networks",
    "id": "acl-W02-1117",
    "title": "A Character-Net Based Chinese Text Segmentation Method",
    "url": "https://aclweb.org/anthology/W02-1117",
    "year": 2002
  },
  "references": [
    "acl-J96-3004",
    "acl-J97-4004"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "The segmentation of Chinese texts is a key process in Chinese information processing.",
        "The difficulties in segmentation are the process of ambiguous character string and unknown Chinese words.",
        "In order to obtain the correct result, the first is identification of all possible candidates of Chinese words in a text.",
        "In this paper, a data structure Chinese-character-net is put forward, then, based on this character-net, a new algorithm is presented to obtain all possible candidate of Chinese words in a text.",
        "This paper gives the experiment result.",
        "Finally the characteristics of the algorithm are analysed."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The segmentation of Chinese texts is a key problem in Chinese information processing.",
        "In the process of segmentation, the ambiguity processing, unknown Chinese words (not included in the lexicon) recognition (such as person names, organization names etc) are very difficult.",
        "As for those problems, many algorithms are put forward [Liu 2000].",
        "But the existing algorithms haven’t a universal data structure, each algorithm can resolve a problem, and correspond to a concrete data structure specifically.",
        "In process of the difficulties, the first step is identification of all possible candidates of Chinese words segmentation.",
        "For examples: \"✁ ✄✆ ✝ ✟✡ ☞✌ ✄ ✍✎✑✓✔✕ these words should be obtained: ✁ ✄ ✗ ✆ ✝ ✗ ✝ ✟ ✗ ✟ ✡ ✗ ✡ ☞ ✗ ✌ ✗ ✄ ✗ ✍ ✎✗ ✑✓✛ The ambiguous string is ✟✡ ☞ ✔ .There are some methods to resolve this problem: the one is the method forward maximum matching, backward maximum matching and minimum matching are used to find out the possible word strings from the character string [Guo 1997; Sproat et al.",
        "1996; Gu and Mao 1994; Li et al.",
        "1991; Wang et al.",
        "1991b; Wang et al.",
        "1990].",
        "The second is The words finding automaton based on the Aho-Corasick Algorithm [Hong-I and Lua].",
        "The former requires three scans of the input character string.",
        "In addition, during each scan, backtracking has to be performed in cases where a dictionary search fails.",
        "After that, the word recognition is built based on the candidates.",
        "The second requires building up a state chart, is difficult to combine with other algorithms.",
        "In this paper, an algorithm is put forward to solve this problem, which uses the connection information between Chinese characters to recognize all possible candidates of segmentation words in a Chinese text.",
        "In the method, at first establish a Chinese character-net , try to establish a universal data structure, which is easy to combine with other algorithms in Chinese text segmentation, and can use different kinds of information in a Chinese text, then identify all possible candidates of words segmentation easily."
      ]
    },
    {
      "heading": "2 Data Structure and Model",
      "text": [
        "A Chinese character is considered as a node, a connection between characters considered as an edge.",
        "If a character is the final character of a Chinese word, the character is considered as a control node, and the formed edge weight is 1.",
        "The connection is defined as follows :",
        "In the structure, id is the sequence number of a connection edge, char1 is the first character node, char2 is the second character node; weight is the weight of a edge, if char1 and char2 is in a Chinese word and char2 isn’t the final character of a word, weight equal to 0; if char2 is the final character of a word(char2 is a control node), weight equal to 1. wlen is the length of a word, if char2 isn’t a control node, wlen is zero; wpos is the part-of-speech of a word, if char2 isn’t a control node, wpos is null; bchar is the first character of a word, if char2 isn’t a control node, bchar is null; route is the former connection id, if the length of a word is greater to two characters.",
        "For examples, as for these words : “ ✁”✕"
      ]
    },
    {
      "heading": "3 Algorithm",
      "text": [
        "Based on the Chinese character net which is described in section 2, the algorithm finding all the possible candidates of words segmented in a Chinese text is as follows: Begin the algorithm Variable CString strSrc;//the source string CString strRes; //the result of all possible word candidates int i; //the current character in the source string int iFind; //the position-number of the final-character of the last formed word int len; //the length of the source string Char str1 [5]; //the current first character Char str2[5]; //the current second character BOOL Find=0; // a tag points the current routes are or aren’t in words int Frec=0; //a tag points the route is or isn’t in a word while(i < len-1) { get the first current character into str1 from the source string; get the second current character into str2 from the source string; select the connection between str1 and str2 from the Chinese-character-net;",
        "add the current route to route list; } else if(weight == 1) { j = the position-number of the first character of the current formed word; if(its route matches the former right route) then {",
        "process the middle characters ( between iFind and j ) as single characters; add the candidate word to the result string strRes; set iFind to current value; } else set Frec = -1; reduce the current route from the route list ; } if (each of the connections isn’t in a word) then Find = false; End for If ( Find == false) then { process the current character as single character; set iFind += 2; } else if(not find connection) { process the current character as single character;",
        "✐❥” ambiguous segmentation strings.",
        "An other example is the following Chinese character string"
      ]
    },
    {
      "heading": "4 Experiment",
      "text": [
        "Based on a basic Chinese word dictation obtained from Beijing University, which has 61135 Chinese words, we obtain the connections between each two characters, establish a Chinese character net which has 76259 connections.",
        "The records increase 24.7% ((76259-61135)/ 61135).",
        "In the character net, there are 2857 connections which have same char1 and same char2.",
        "In a general Chinese machine readable lexicon, there are about only 12% of words whose length are longer than three Chinese characters, about 70% of words whose length equal 4, and about 15% of words whose length equal 6.",
        "So, in the algorithm in this paper, the structure of the character-net is fine and the confliction may be processed seldom in the selection of the connections between same char1 and same char2.",
        "About 1500 Chinese characters can be processed per second."
      ]
    },
    {
      "heading": "5 Analysis of the Algorithm",
      "text": [
        "In Chinese, the meaning of a character is atomic and based, the meaning of most of the Chinese words can be derived from the characters in the word, as is to say, the meaning of a Chinese word is compound or derived.",
        "This paper resolves the difficulties in segmentation of Chinese texts by the thought.",
        "The information in a Chinese text are divided into three kinds: (1) about characters, (2) about connections between characters, and (3) about Chinese words.",
        "As is expressed in Fig. 2.",
        "In fig.2, a character and another character, which have relation between them, can compose into a connection.",
        "A connection and zero or several connections compose into a Chinese word.",
        "A Chinese word is composed of one or several Chinese characters.",
        "About a character, there are following information: (1) the probability used in a person name, (2) if it is a single character word etc.",
        "About a connection, there are information as described in section 2 and 3.",
        "About a word, there are following information: (1) if it is used as a prefix or a suffix(such as “J�I❛”, “✁❛”, “✂✄”, “✞ ”); (2) mutual information between words, etc.",
        "In the process of segmentation of Chinese texts, we make the segmentation character by character.",
        "At first, the information of a character is processed, for example in this step we can obtain the possible person names; the second is obtaining and processing the information of connections between each two characters by the Chinese-character-net described in this paper; then we obtain all the possible candidate of segmentation words in a Chinese text.",
        "The third, we use the information of words and between words, resolve the ambiguity of segmentation words, identification of unknown words such as person names, place names and organization names.",
        "So the algorithm in this paper is easy combined with other existing algorithms."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "In this paper, an algorithm of finding all possible candidate words in segmentation of a Chinese text has been presented.",
        "The algorithm is based on a Chinese-character-net, which is established by the information of connections between each two Chinese characters.",
        "The algorithm has some characteristics as follows: (1) the character net is a basic data structure, makes the use of all information in segmentation consistently and easy.",
        "(2) The scan of a text need only once.",
        "(3) The algorithm is easy combined with other existing algorithms.",
        "(4) The algorithm is effective.",
        "(5) The algorithm is easy extensible.",
        "After all possible candidate segmentation words are obtained, we can obtain the result of FMM by FMM thought, obtain the result of BMM by BMM thought, and can process ambiguity and unknown words by probability grammar or HMM method.",
        "Based on the result obtained by the algorithm, different tactics of processing the possible candidates words segmented can be adopted according to the needs of different kinds of applications such as search engine [Zhou 2001], text classification, machine translation, information extraction, retrieval or filter etc."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "Our thanks go to the Institute of Computational Language, Peking University for the Lexicon.",
        "The paper is supported by the ICT Youth Science Foundation."
      ]
    }
  ]
}
