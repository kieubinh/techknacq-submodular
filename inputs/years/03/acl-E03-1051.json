{
  "info": {
    "authors": [
      "Olga Van Herwijnen",
      "Jacques Terken",
      "Antal van den Bosch",
      "Erwin Marsi"
    ],
    "book": "Conference of the European Association for Computational Linguistics",
    "id": "acl-E03-1051",
    "title": "Learning PP Attachment for Filtering Prosodic Phrasing",
    "url": "https://aclweb.org/anthology/E03-1051",
    "year": 2003
  },
  "references": [
    "acl-A00-2018",
    "acl-C94-2195",
    "acl-H94-1048",
    "acl-J90-1003",
    "acl-J93-1003",
    "acl-J93-1005",
    "acl-P90-1003",
    "acl-P96-1025",
    "acl-W95-0103",
    "acl-W97-0301",
    "acl-W97-1016"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We explore learning prepositional-phrase attachment in Dutch, to use it as a filter in prosodic phrasing.",
        "From a syntactic treebank of spoken Dutch we extract instances of the attachment of prepositional phrases to either a governing verb or noun.",
        "Using cross-validated parameter and feature selection, we train two learning algorithms, iBl and RIPPER, on making this distinction, based on unigram and bigram lexical features and a cooccurrence feature derived from WWW counts.",
        "We optimize the learning on noun attachment, since in a second stage we use the attachment decision for blocking the incorrect placement of phrase boundaries before prepositional phrases attached to the preceding noun.",
        "On noun attachment, IBl attains an F-score of 82; RIPPER an F-score of 78.",
        "When used as a filter for prosodic phrasing, using attachment decisions from IBl yields the best improvement on precision (by six points to 71) on phrase boundary placement."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "One of the factors determining the acceptability of synthetic speech is the appropriate placement of phrase boundaries, realized typically and most audibly by pauses (Sanderman, 1996).",
        "Incorrect prosodic phrasing may impede the listener filtering prosodic phrasing Antal van den Bosch and Erwin Marsi ILK / Comp.",
        "Ling, and AI Tilburg University P.O.",
        "Box 90153, NL-5000 LE Tilburg The Netherlands {A.vdnBosch,E.Marsi}@uvt.nl in the correct understanding of the spoken utterance (Sanderman and Collier, 1997).",
        "A major factor causing difficulties in appropriate phrase boundary placement is the lack of reliable information about syntactic structure.",
        "Even if there is no one-to-one mapping between syntax and prosody, the placement of prosodic phrase boundaries is nevertheless dependent on syntactic information (Selkirk, 1984; Bear and Price, 1990; van Herwijnen and Terken, 2001b).",
        "To cope with this lack of syntactic information that a speech synthesis developer may face currently, e.g. in the absence of a reliable parser, several strategies have been applied to allocate phrase boundaries.",
        "One strategy is to allocate phrase boundaries on the basis of punctuation only.",
        "In general, however, this results in too few phrase boundaries (and some incorrect ones, e.g. in enumerations).",
        "A clear example of information about syntactic structure being useful for placing phrase boundaries is the attachment of prepositional phrases (PPs).",
        "When a PP is attached to the preceding NP or PP (henceforth referred to as noun attachment), such as in the structure ... eats pizza with anchovies, a phrase boundary between pizza and with is usually considered inappropriate.",
        "However, when a PP is attached to the verb in the clause (verb attachment), as in the structure ... eats pizza with a fork, an intervening phrase boundary between the PP and its preceding NP or PP (between pizza and with) is optional, and when placed, usually judged appropriate (Marsi et al., 1997).",
        "Deciding about noun versus verb attachment of PPs is a known hard task in parsing, since it is understood to involve knowing lexical preferences, verb subcategorization, fixed phrases, but also semantic and pragmatic \"world\" knowledge.",
        "A typical current parser (e.g., statistical parsers such as (Collins, 1996; Ratnaparkhi, 1997; Charniak, 2000)) interleaves PP attachment with all its other disambiguation tasks.",
        "However, because of its interesting complexity, a line of work has concentrated on studying the task in isolation (Hindle and Rooth, 1993; Ratnaparkhi et al., 1994; Brill and Resnik, 1994; Collins and Brooks, 1995; Franz, 1996; Zavrel et al., 1997).",
        "Our study can be seen as following these lines of isolation studies, pursuing the same process for another language, Dutch.",
        "At present there are no parsers available for Dutch that disambiguate PP attachment, which leaves the comparison between PP attachment as an embedded subtask of a full parser with our approach as future work.",
        "In line with these earlier studies, we assume that at least two sources of information should be used as features in training data: (i) lexical features (e.g. unigrams and bigrams of head words), and (ii) word cooccurrence strength values (the probability that two words occur together, within some defined vicinity).",
        "Lexical features may be informative when certain individual words or bigrams frequently, or exclusively, occur with either noun or verb attachment.",
        "This may hold for prepositions, but also heads of the involved phrases, as well as for combinations of these words.",
        "Cooccurrence strength values may provide additional clues to informational ties among words; when we investigate the cooccurrences of nouns and prepositions, and of verbs and prepositions, the cooccurrence strength value could also indicate whether the prepositional phrase is attached to the noun or to the verb in the syntactic tree.",
        "In this study, we use two machine learning algorithms to perform PP attachment.",
        "In line with the case study for English introduced in Ratnaparkhi et al.",
        "(1994), we collect a training set of Dutch PP attachment instances from a syntactic treebank.",
        "Collection of this data is described in Section 2.",
        "We extract lexical head features (unigram and bigram) from the treebank occurrences, and enrich this data with cooccurrence information extracted from the WWW (Section 3).",
        "Using the same features, we analogously build a held-out test corpus for which prosodic labeling is available.",
        "The setup of the machine learning experiments, involving automatic parameter and feature selection, is described in Section 4.",
        "We give the results of the cross-validation experiments on the original data and on the held-out data in Section 5.",
        "Employing the learned PP attachment modules for filtering phrase break placement is discussed in Section 6, where we test on the held-out written text corpus.",
        "We discuss our findings in Section 7."
      ]
    },
    {
      "heading": "3 Feature engineering",
      "text": [
        "Analogous to Ratnaparkhi et al.",
        "(1994), we (manually) selected the four lexical heads of the phrases involved in the attachment as features.",
        "We used the manually annotated phrasing and function labelling to determine the heads of all involved phrases.",
        "First, the noun of the preceding NP or PP that the focus PP might be attached to (Nl); second, the preposition (P) of the PP to be attached; third, the verbal head (V) of the clause that the PP is in; and fourth, the noun head of the PP to be attached.",
        "For example, the Dutch sequence ... [PP met Duits] [PP om de oren] [VP slaan] (blow someone up over German), Nl is Duits, P is om, V is slaan, and N2 is oren.",
        "In the fixed expression om de oren slaan, om de oren attaches to slaan.",
        "Subsequently, we added all combinations of two heads as features.",
        "There are six possible combinations of the four heads: Nl-P, Nl-V, ....",
        "The example construction is thus stored in the data set as the following comma-separated 10-feature instance labelled with the VERB attachment class: Duits, om, slaan, oren, Duits-om, Duits-slaan, Duits-oren, om-slaan, om-oren, slaan-oren, VERB Several metrics are available that estimate to what extent words or phrases belong together informationally.",
        "Well known examples of such cooccurrence strength metrics are mutual information (Church and Hanks, 1991), chi-square and log likelihood (Dunning, 1993).",
        "Cooccurrence strength values are typically estimated from a very large corpus.",
        "Often, these corpora are static and do not contain neologisms and names from later periods.",
        "In this paper, we explore an alternative by estimating cooccurrence strength values from the WWW.",
        "The WWW can be seen as a dynamic corpus: it contains new words that are not yet incorporated in other (static) corpora.",
        "Another advantage of using the WWW as a corpus is that it is the largest freely and electronically accessible corpus (for most languages including Dutch).",
        "Consequently, frequency counts obtained from the WWW are likely to be much more robust than those obtained from smaller corpora.",
        "If cooccurrences correlate with PP attachment, then the WWW could be an interesting robust background source of information.",
        "Recently, this reasoning was introduced in (Volk, 2000), a study in which the WWW was used to resolve PP attachment.",
        "Following this, the second step in engineering our feature set was to add cooccurrence strength values for Dutch words extracted from the WWW.",
        "We explored three methods in which the cooccurrence strength value was used to decide between noun or verb attachment for all 1004 phrases from the CGN.",
        "The first method is a replication of the study by Volk (2000).",
        "In this study cooccurrence strength values were computed for the verb within close vicinity of the preposition Cooc(VnearP) and for the noun within close vicinity of the preposition Cooc(NnearP).",
        "Second, we investigated the method in which only Cooc(NnearP) is used.",
        "Third, we tested a variant on the second method by computing the cooccurrence strength value of a noun immediately succeeded by a preposition Cooc(N P), because there cannot be a word in between.",
        "The general formula for computing the cooccurrence strength value of two terms is given by function (1) as proposed by Volk (2000).",
        "This method is based on the respective frequency of X and the joint frequency of X with a given preposition; where P stands for Preposition and X can be either a Noun or a Verb.",
        "We restricted the search to documents which were automatically identified as being written in Dutch by Altavista.",
        "For the Cooc(VnearP) and Cooc(NnearP) we used the advanced search function NEAR of the WWW search engine Altavista (Altavista, 2002).",
        "This function restricts the search to the appearance of two designated words at a maximal distance of 10 words, which is the default.",
        "The search is performed for both possible orders of appearance of the two desig",
        "nated words.",
        "For the Cooc(N P) we used the search function to search for exact multi-word phrases: \"<noun> <prep>\".",
        "This function restricts the search to the appearance of the two adjacent words in the indicated order.",
        "The number of found documents according to these search methods was used for freq(X P).",
        "The freq(X) was derived from the WWW by performing a separate search for the single word form.",
        "Method I: cooccurrence NnearP or VnearP Volk (2000) assumes that the higher value of Cooc(VnearP) and Cooc(NnearP) decides the attachment.",
        "According to this assumption we say that if Cooc(VnearP) is the higher value, the PP attaches to the verb.",
        "If Cooc(NnearP) is the higher value, the PP attaches to the noun.",
        "When only Cooc(NnearP) was available (because the phrase did not contain a verb), the decision for noun or verb attachment was based on comparison of Cooc(NnearP) with a threshold of 0.5 (cooccurrence strength values are between 0.00 and 1.00).",
        "This is the threshold used by Volk (2000).",
        "For the 1004 phrases derived from the CGN we computed the accuracy (the percentage of correct attachment decisions), and precision, recall, and F^-score with /?",
        "= 1 (van Rijsbergen, 1979), for both noun and verb attachment.",
        "The respective values are given in Table 1.",
        "A baseline was computed, which gives the performance measures when noun attachment was predicted for all 1004 phrases.",
        "Method II: cooccurrence NnearP Alternatively, we can base the decision between noun and verb attachment on Cooc(NnearP) only, comparing the cooccurrence strength value to a threshold.",
        "The cooccurrence strength values we found",
        "according to this method range from very high to very low (1.00 - 0.00) and differ significantly for noun and verb attachment (t=-l 1.65, p<0.001, df=1002).",
        "By computing the performance measures for several thresholds, using 10-fold cross validation, we determined that the optimal cooccurrence threshold should be 0.36 for optimization on noun attachment.",
        "Cooccurrence strength values higher than the threshold predict that the PP is attached to the noun.",
        "The performance measures obtained with this method are also given in Table 1.",
        "Method III: cooccurrence N P To simplify Method II further, we use Cooc(N P) instead of Cooc(NnearP) to decide between noun and verb attachment, comparing the cooccurrence strength value to a threshold.",
        "The cooccurrence strength values we found according to this approach range from very high to very low (0.99 - 0.00) and differ significantly for noun and verb attachment (t=-12.43, p<0.001, df=1002).",
        "By computing the performance measures for several thresholds, using 10-fold cross validation, we determined that the optimal cooccurrence threshold should be 0.07.",
        "The performance measures obtained with this method are also given in Table 1.",
        "Preferred method Table 1 shows that Method III has the best accuracy on PP attachment.",
        "Although it is not the best in all respects, we prefer this method, because it uses cooccurrence strength values for adjacent nouns and prepositions in the order in which they appear in the text (see §3.2), this in analogy with the fact that order is meaningful in PP attachment.",
        "Thus, we added the Cooc(N P) feature as the eleventh feature to our data sets for both corpora.",
        "accuracy"
      ]
    },
    {
      "heading": "4 Machine learning experiments",
      "text": [
        "We choose to use two machine learning algorithms in our study: rule induction as implemented in RIPPER (Cohen, 1995) (version 1, release 2.4) and memory-based learning IB 1 (Aha et al., 1991; Daelemans et al., 1999), as implemented in the TiMBL software package (Daelemans et al., 2002).",
        "Rule induction is an instance of \"eager\" learning, where effort is invested in searching for a minimal-description-length rule set that covers the classifications in the training data.",
        "The rule set can then be used for classifying new instances of the same task.",
        "Memory-based learning, in contrast, is \"lazy\"; learning is merely the storage of learning examples in memory, while the effort is deferred to the classification of new material, which in IB 1 essentially follows the ^-nearest neighbor classification rule (Cover and Hart, 1967) of searching for nearest neighbors in memory, and extrapolating their (majority) class to the new instance.",
        "A central issue in the application of machine learning is the setting of algorithmic parameters; both RIPPER and IBl feature several parameters of which the values can seriously affect the bias and result of learning.",
        "Also, which parameters are optimal interacts with which features are selected and how much data is available.",
        "Few reliable rules of thumb are available for setting parameters.",
        "To estimate appropriate settings, a big search space needs to be sought through in some way, after which one can only hope that the estimated best parameter setting is also good for the test material - it might be overfitted on the training material.",
        "Fortunately, we were able to do a semi-exhaustive search (testing a selection of sensible numeric values where in principle there is an infinite number of settings), since the CGN data set is small (1004 instances).",
        "For IBl, we varied the following parameters systematically in all combinations:",
        "• the type of feature weighting: none, gain ratio, information gain, chi-squared, shared variance • the similarity metric: overlap, or MVDM with back-off to overlap at levels 1 (no backoff), 2, and 10 • the type of distance weighting: none, inverse distance, inverse linear distance, and exponential decay with a = 1.0 and a = 2.0 For RIPPER we varied the following parameters: • the class order for which rules are induced: increasing and decreasing frequency • allowing negation in nominal tests or not • the number of rule set optimization steps: 0, 1, 2",
        "We performed the full matrix of all combinations of these parameters for both algorithms in a nested 10-fold cross-validation experiment.",
        "First, the original data set was split in ten partitions of 90% training material and 10% test material.",
        "Second, nested 10-fold cross-validation experiments were performed on each 90% data set, splitting it again ten times.",
        "To each of these 10 x 10 experiments all parameter variants were applied.",
        "Per main fold, a nested cross-validation average performance was computed; the setting with the average highest F-score on noun attachment is then applied to the full 90% training set, and tested on the 10% test set.",
        "As a systematic extra variant, we performed both the RIPPER and IBl experiments with and without the six bigram features (mentioned in §3.1)."
      ]
    },
    {
      "heading": "5 Results",
      "text": [
        "Internal results: Spoken Dutch Corpus data Table 2 lists the performance measures produced by ripper and ib 1 on the CGN data.",
        "For both algorithms it proved a disadvantage to have the bigram features; both attain higher F-scores on noun attachment without them.",
        "ib 1 produces the highest F-score, 82, which is significantly higher than the F-score of ripper without bigrams, 78 (t=2.78, p<0.05, df=19).",
        "For ripper, the best overall cross-validated parameter setting is to allow a minimum of ten cases to be covered by a rule, induce rules on the most frequent class first (noun attachment), allow negation (which is, however, not used effectively), and run one optimization round.",
        "The most common best rule set (also when including bigram features) is the following:",
        "1. if p = van then NOUN 3. if p = voor then NOUN 4. if there is no verb then NOUN 5. else verb",
        "This small number of rules test on the presence of the two prepositions van (from, of) and voor (for, before) which often co-occur with noun attachment (on the whole data set, 351 out of 406 occurrences of the two), a high value of Cooc(N P) similar to the threshold reported earlier (0.07), and the absence of a verb (which occurs in 27 instances).",
        "The best overall cross-validated setting for ib 1 was no feature weighting, k = 11, and exponential decay distance weighting with a = 2.",
        "It has been argued in the literature that high k and distance weighting is a sensible combination (Zavrel et al., 1997).",
        "More surprisingly, no feature weighting means that every feature is regarded equally important.",
        "External results: newspaper and email data We evaluated the results of applying the overall best settings on the 157 sentence external newspaper and email material.",
        "Performances are given in Table 3.",
        "These results roughly correspond with the previous results; iBl has lower precision but higher recall than RIPPER on noun attachment.",
        "RIPPER performed the same with and without bigram features, since its rules do not test on them.",
        "Overall, these results suggest that the learned models have a reasonably stable performance on different data.",
        "6 Contribution to phrase boundary allocation In a third experiment we measured the added value of having PP attachment information available in a straightforward existing prosodic phrasing algorithm for Dutch (van Herwijnen and Terken, 2001b).",
        "This phrasing algorithm uses syntactic information and sentence length for the allocation of prosodic phrase boundaries.",
        "For a subset (44 phrases) of the held-out corpus, we compared the allocation of boundaries according to the phrasing algorithm and according to the same algorithm complemented with PP attachment information, to a consensus transcription of ten phonetic experts (van Herwijnen and Terken, 2001a).",
        "This consensus transcription was not available for all 157 phrases of the newspaper and email data.",
        "Table 4 shows the performance measures for this comparison, indicating that the improvement from PP attachment information is largely in precision.",
        "Indeed, blocking certain incorrect placements of phrase boundaries improves the precision on boundary placement.",
        "IBl attains the best improvement of six points in precision.",
        "Although it incorrectly prevents five intended phrase bound",
        "aries (when compared to the manual classification mentioned in §2), it does in fact correctly prevent unintended boundaries in twelve other cases.",
        "Some examples of the latter are: 1.",
        "... afschaffing |van het laatste recht... 2.",
        "... het grootste deel |van Nederland ... 3.",
        "... de straatlantaarns |langs de provinciale weg ... 1.",
        "... abolition |of the final right... 2.",
        "... the biggest part |of the Netherlands ... 3.",
        "... the street lights |along the provincial road ..."
      ]
    },
    {
      "heading": "7 Discussion",
      "text": [
        "We have presented experiments on isolated learning of PP attachment in Dutch, and on using predicted PP attachment information for filtering out incorrect placements of prosodic boundaries.",
        "First, PP attachment was learned by the best optimized machine learner, IBl at an accuracy of 78, an F-score of 82 on noun attachment, and 71 on verb attachment.",
        "The learners were optimized (via nested cross-validation experiments and semi-exhaustive parameter selection) on noun attachment, since that type of attachment typically prevents a prosodic boundary.",
        "In general, incorrect boundaries are considered more problematic to the listener than omitted boundaries.",
        "We show that small improvements are made in the precision of boundary allocation; a high precision means few incorrect boundaries.",
        "Comparing the eager learner RIPPER with the lazy learner IB 1, we saw that RIPPER typically induces a very small number of safe rules, leading to reasonable precision but relatively low recall.",
        "The bias of IBl to base classifications on all training examples available, no matter how low-frequent or exceptional, resulted in a markedly higher recall of up to 82 on noun attachment, indicating that there is more reliable information in local matching on lexical features and the cooccurrence feature than RIPPER estimates.",
        "However, with a larger training corpus, we might not have found these differences in performance between IB 1 and RIPPER.",
        "In engineering our feature set we combined disjoint ideas on using both lexical (unigram and bigram) features and cooccurrence strength values.",
        "The lexical features were sparse, since they only came from the 1004-instance training corpus, while the cooccurrence feature was very robust and \"unsupervised\", based on the very large WWW.",
        "Within the set of lexical features, the bigram features were sparser than the unigram features, and neither of the algorithms benefited from the bigram features.",
        "Thus, given the current data set, all necessary information was available in the four unigram features in combination with the cooccurrence feature.",
        "Only the combination of the five yielded the best performance - individually the features do carry information, but always less than the combination.",
        "When running nested cross-validation experiments with IB 1 on the four unigram features, F-scores are lower than the optimal 82: 77 (Nl), 75 (P), 72 (V), 74 (N2), and 75 Cooc(N P).",
        "These results suggest that it is essential for this experiment to employ features that (1) are preferably robust counter to sparse, and (2) each add unique information, either on lexical identity or on cooccurrence strength."
      ]
    }
  ]
}
