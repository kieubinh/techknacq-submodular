{
  "info": {
    "authors": [
      "Michael Schiehlen"
    ],
    "book": "Conference of the European Association for Computational Linguistics",
    "id": "acl-E03-1087",
    "title": "A Cascaded Finite-State Parser for German",
    "url": "https://aclweb.org/anthology/E03-1087",
    "year": 2003
  },
  "references": [
    "acl-A00-1033",
    "acl-A97-1014",
    "acl-C02-1121",
    "acl-E99-1016",
    "acl-P02-1035",
    "acl-P97-1050"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "The paper presents two approaches to partial parsing of German: a tagger trained on dependency tuples, and a cascaded finite-state parser (Abney, 1997).",
        "For the tagging approach, the effects of choosing different representations of dependency tuples are investigated.",
        "Performance of the finite-state parser is boosted by delaying syntactically unsolvable disambiguation problems via underspecification.",
        "Both approaches are evaluated on a 340,000-token corpus."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Traditional parsers are often quite brittle, and optimize precision over recall.",
        "It is therefore important to also look at shallow approaches that come at virtually no cost in manual labour but can potentially supplement more knowledge-prone approaches.",
        "The paper discusses one such approach which gets by with a tree bank and a tagger.",
        "Another issue in parsing is speed, which can only be gained by deterministic processing.",
        "Deterministic parsers return exactly one syntactic reading, which forces them to solve many locally unsolvable puzzles.",
        "Abney (1997) suggests a way out of this dilemma: The parser leaves ambiguities unresolved if they are contained in a local domain.",
        "So at least ambiguities of this land can conceivably be handed over to some expert disambiguation module.",
        "The paper fleshes out this idea and shows its impact on overall performance."
      ]
    },
    {
      "heading": "2 Evaluation Method",
      "text": [
        "Instead of using the prevalent PARSEVAL measures, we opted for a dependency-based evaluation (Lin, 1995), which is arguably (Srinivas et al., 1996) (Klibler and Telljohann, 2002) fairer to partial parsers.",
        "In a dependency structure, every word token (dependent) is related to another token (head) over a grammatical role, but for one word token, which is called the root.",
        "Thus, a parser constructing a dependency structure needs to associate every word token either with a head token plus grammatical role or mark it as the root or 'TOP' node.",
        "The task can be seen as a classification problem and measured in (labelled) precision and recall.",
        "To simplify the task, grammatical roles can be neglected (unlabelled precision and recall).",
        "The details deserve some attention.",
        "With Kubier and Telljohann (2002) and in contrast to Lin (1995), we assume that PPs are headed by their internal NPs, and that conjoined phrases have multiple heads (the conjuncts), with the conjunction linked to the last conjunct.",
        "Carroll et al.",
        "(1998) introduce additional links for control phenomena, map several tokens to one node (e.g. linked preposition-noun and determiner-noun pairs), and allow nodes for elided words (e.g. in pro-/topic-drop and gapping).",
        "An important objection is that the weight of words is determined quite arbitrarily (Clark and Hockenmaier, 2002).",
        "Thus, we adopt Lin's scheme with the above provisos.",
        "Training and test sets for the experiments described below were derived from a tokenized version of the Negra tree bank of German newspaper texts (Skut et al., 1997), comprising ca.",
        "340,000 tokens in 19,547 sentences.",
        "Different tagging qualities were taken into account by alternatively using Part-Of-Speech tags determined by the Tree Tagger (Schmid, 1994) (tagger tags), POS tags determined by the Tree Tagger trained on the tree bank (lexicon tags), or the POS tags of the tree bank (ideal tags).",
        "All experiments were run on a SUN Blade-1000."
      ]
    },
    {
      "heading": "3 Tagging Approach",
      "text": [
        "The head tokens in dependency tuples can be coded in several ways.",
        "The position method represents a head token by its position in the sentence (pos/jead).",
        "On the Negra tree bank, this method yields 121 unlabelled and 1810 labelled classes.",
        "The distance method codes a head token by giving the distance to the dependent (pos/jea^-pos,^), yielding 123 unlabelled but only 1139 labelled classes.",
        "Lin (1995) represents the head token by its word type and a position indicator which encodes the direction where the head can be found and the number of tokens of identical type between head and dependent (e.g. < first token with same word type on the left, >>> third token with same word type on the right, etc.).",
        "To get fewer classes, we use the category of the head token instead of its word type.",
        "The resulting method (which we will call nth-tag method) yields 115 unlabelled and 639 labelled classes.",
        "For the experiment, the trigram-based Tree Tagger was used to map tokens directly to the dependency classes (see for a similar approach (Srini-vas et al., 1996)).",
        "Performance was degraded when the tagger got information on both word type and POS tag of the tokens, so we only used POS tag.",
        "We didn't test the position method.",
        "Figure 1 shows results achieved via 10-fold cross-validation with Ideal and Tagger tags.",
        "The tagger always gives a unique answer, but head tokens not found in the string count as not assigned, hence the discrepancy between precision and recall.",
        "A figure is also given for the percentage of sentences getting a completely correct parse.",
        "^EGRA distinguishes 33 grammatical roles.",
        "Figure 1 : Evaluation Results for Tagger Processing speed is measured in Words Per Second.",
        "We also combined the distance and nth-tag method by using a greedy method to choose between them on the basis of the POS tag of the token and the proposed result.",
        "This hybrid method achieved 80.99%/75.82% labelled precision recall on Ideal tags and 78.02%/72.83% on Tagger tags."
      ]
    },
    {
      "heading": "4 Cascaded Finite-State Parser",
      "text": [
        "The parser described here essentially relies on techniques also used by Abney (1997).",
        "It basically consists of a noun chunker and a clause chunker.",
        "The noun chunker is deterministic, but recognizes recursive noun chunks in several passes.",
        "Morphological information on case, number and gender coded is computed with bit vectors (Abney, 1997).",
        "A noun chunk is defined as an NP or PP with all adjuncts at the beginning (e.g. adverbs) and at the end (e.g. PPs and relative clauses) stripped off (Brants, 1999) (Schiehlen, 2002).",
        "The clause chunker consists of three deterministic transducers recognizing verb-final, verb-first, and verb-second clauses.",
        "The parser aims to determine full clauses rather than the \"simplex clauses\" of Abney (1997) (i.e. non-recursive \"core\" parts of clauses).",
        "The verb-final clause transducer e.g. works from right to left so that subclauses are maximally embedded.",
        "Example (1) shows chunker output (a flat parse tree) after the recognition phase.",
        "(1) Udo hat eine sehr nette Frau aus Rio .",
        "Udo has a very nice wife from Rio.",
        "or: A very nice woman has Udo from Rio.",
        "or: A very nice woman from Rio has Udo.",
        "NPnom;akk ppaus XK^t rrdat (3) Udo hat eine sehr nette Frau aus Rio .",
        "Finally, a deterministic transducer recognizes sub-categorization frames using a grammar automatically constructed from lexically specified frames and introduces a fine-grained differentiation of the complement relation (61 additional grammatical roles).",
        "See example (4) for output.",
        "NP ,,L NP PP (4) Udo hat eine sehr nette Frau aus Rio .",
        "If the frame transducer fails, an unspecified gramin German (cf. example (4)).",
        "In context-free parsing, the solution to this problem is conservation of ambiguities in the output: Difficult decisions are delayed to a later stage.",
        "Similar techniques can be used in finite-state parsing (Elworthy et al., 2001).",
        "Underspecification can be elegantly implemented with context variables (Maxwell III and Kaplan, 1989) (Dorre, 1997).",
        "Since subcatego-rization ambiguities are specific to main verbs in clauses and never interact across clause boundaries, the clause nodes themselves can be interpreted as context variables.",
        "The different options are implicitly encoded by bringing the varying grammatical roles of a constituent node in a clause-wide uniform order (e.g. in example (4) position 1: first NP nominative, second NP accusative; position 2: first NP accusative, second NP nominative).",
        "VP coordination sometimes gives rise to structures with constituents figuring in several subcategorization frames at once.",
        "In this case several lists of grammatical roles are associated with the constituent, one for each conjunct in left-to-right order (cf. example (5)).",
        "(5) Hans((N;A)(N;D)) [[kennt Maria((A;N))] und [hilft Karla((D;N))]].",
        "Hans knows Maria and helps Karla.",
        "or: Maria knows and Karla helps Hans, or: Maria knows Hans and he helps Karla.",
        "or: Hans knows Maria and Karla helps him.",
        "In a final processing step, the constituent trees are converted into dependency tuples.",
        "In this step, attachment and subcategorization ambiguities are overtly represented with context variables, cf. (6): There are 13 grammatical roles: head, adjunct, apposition, complement, adjunct or complement, conjunction, first part of conjunction, measure phrase, marker, specifier, subject, governed verb, unconnected.",
        "Riezler et al.",
        "(2002) evaluate underspecified syntactic representations by distinguishing lower bound performance (random choice of a parse) and upper bound performance (selection of the best parse according to the test set).",
        "matical role is left (Carroll et al., 1998).",
        "Such roles"
      ]
    }
  ]
}
