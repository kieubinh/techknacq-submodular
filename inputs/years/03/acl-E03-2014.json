{
  "info": {
    "authors": [
      "Horacio Saggion",
      "Hamish Cunningham",
      "Jan Kuper",
      "Thierry Declerck",
      "Peter Wittenburg"
    ],
    "book": "Conference of the European Association for Computational Linguistics â€“ Demonstrations",
    "id": "acl-E03-2014",
    "title": "Event-Coreference Across Multiple, Multi-Lingual Sources in the Mumis Project",
    "url": "https://aclweb.org/anthology/E03-2014",
    "year": 2003
  },
  "references": [
    "acl-J98-3005",
    "acl-P02-1022"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We present our work on information extraction from multiple, multilingual sources for the Multimedia Indexing and Searching Environment (MUMIS), a project aiming at developing technology to produce formal annotations about essential events in multimedia programme material.",
        "The novelty of our approach consists on the use of a merging or cross-document coreference algorithm that aims at combining the output delivered by the information extraction systems.",
        "The merging component in MUMIS combines the partial information as extracted from various sources, such that more complete annotations can be obtained.",
        "Information extraction and merging from multiple sources has been tried in the past (Radev and McKeown, 1998) but only for single events, the novelty of our approach consists on applying merging to multiple-events extracted from multiple sources.",
        "As an example consider the following situation (Netherlands-Yugoslavia match): One of the IE components extracted from document A that in the 30th minute of the match a free-kick was taken, but did not discover who took it.",
        "It did find the names of two players, though: Mihajlovic (a Yugoslavian player) and Van der Sar (the Dutch keeper).",
        "From document B a save in the 31st minute was extracted by the IE component, and the names of the same two players were recognised.",
        "From these two results it now can be concluded that it was Mihajlovic who took the free-kick, and that Van der Sar made the save, thus giving a more complete picture of what happened in the 30-31st minute of the match.",
        "It is a first task of the merging component of the MUMIS project to find out which events from the various documents should be combined such that more complete information can be derived.",
        "The person who produced the natural language text from which events are extracted, acts as a \"semantic filter\": the events he/she described are understood to belong together in the same scene (groups of events semantically related) if they are mentioned in the same textual fragment.",
        "For example, if the same players are mentioned in two different but close (in time) textual fragments, then the events accounted for in those fragments could be connected under specific constraints.",
        "The merging program consists of the following steps:",
        "1) Bi-document alignment: given two source documents A and B, every scene from A is checked for compatibility with every scene from B.",
        "In determining the strength of a possible connection between two scenes, various aspects play a role: number of common player names, distance in time, etc.",
        "First, the program calculates the strength of all bindings between all pairs of scenes from documents A and B respectively.",
        "Suppose that the binding strength between a scene SA from document A and a scene SB from document B is the strongest, then the program concludes that these two scenes are about the same episode in the match, and the combination is confirmed.",
        "Choosing the combination rules out certain other combinations from the two documents A and B, e.g. combinations between scenes from document A which are before scene SA and scenes from document B which are after scene SB are eliminated.",
        "This process is repeated recursively until all possible combinations between scenes from documents A and B are fixed.",
        "2) Multi-document alignment: the above process is performed on every pair of documents, thus yielding pairs of scenes.",
        "The next step is to build sets of scenes which are connected as follows.",
        "Create a set consisting of any scene, and add all scenes to this set which are connected to this scene by the process from step 1.",
        "Repeat this for all these newly added scenes recursively until no new scenes are found which should be added to the set.",
        "This set naturally forms a (connected) graph of combined scenes.",
        "Notice that the graph need not be complete, i.e. not every pair of scenes in the graph needs to be connected.",
        "In fact, scenes may be incompatible and nevertheless occur in the same graph through a sequence of intermediate scenes.",
        "Since a graph is supposed to contain scenes from various documents which all are about the same episode during the match, a graph should not contain such scenes which are incompatible in that sense.",
        "In order to exclude such scenes from a graph, the program splits a graph into complete subgraphs, such that only graphs remain in which all scenes are connected to all other scenes.",
        "This splitting up again is based on the strongest connections in a given graph.",
        "3) Unification: the partial events from the various scenes in a given graph are combined and empty slots are filled in.",
        "At this point several (semantical) rules expressing domain knowledge are used.",
        "There are several kinds of rules to be used at this point.",
        "First, event internal rules describe which events are possible (i.e., a keeper will not take a corner).",
        "Second, event external rules express possible combinations of events (i.e., a player shooting at goal will belong to the other team as a player who blocks this shot).",
        "As a result, more completely filled in events are produced.",
        "4) Ordering: finally the events inside such a scene have to be put into the correct order.",
        "For example, a shot on goal in the same scene as a goal typically will take place before that goal and not after.",
        "For this ordering process scenarios are used.",
        "The output produced by the merging algorithm, which contains temporal information, is used on the one hand to extract JPEG keyframes images that serve for quick inspection in the user interface, and on the other hand to index the multimedia database.",
        "The software used for offline keyframe extraction from MPEG1 movies is Spikes: it takes a movie file, a list of times stamps, and the size of the keyframe and produces a list of keyframes."
      ]
    },
    {
      "heading": "4 User Interface",
      "text": [
        "The user interface allows the user to enter formal queries to the MUMIS system.",
        "The interface makes use of the lexica in the three target languages and domain ontology to assist the user while entering his/her query.",
        "The hits of the query are indicated to the user as thumbnails in the storyboard together with extra information about each of the retrieved events.",
        "The user can select a particular fragment and play it."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "The huge amount of multimedia information accessible directly to the end users require a new generation of tools to provide \"intelligent\" access to specific information.",
        "MUMIS is the first multimedia indexing project which carries out indexing by applying information extraction to multimedia and multilingual information sources, merging information from many sources to improve the quality of the annotation database, and combining database queries with direct access to multimedia fragments."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": []
    }
  ]
}
