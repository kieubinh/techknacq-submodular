{
  "info": {
    "authors": [
      "Thomas Hanneforth",
      "Silvan Heintze",
      "Manfred Stede"
    ],
    "book": "Human Language Technology Conference and Meeting of the North American Association for Computational Linguistics – Short Papers",
    "id": "acl-N03-2011",
    "title": "Rhetorical Parsing With Underspecification and Forests",
    "url": "https://aclweb.org/anthology/N03-2011",
    "year": 2003
  },
  "references": [
    "acl-J00-3005",
    "acl-P99-1047"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We combine a surface based approach to discourse parsing with an explicit rhetorical grammar in order to efficiently construct an underspecified representation of possible discourse structures."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The task of rhetorical parsing, i.e., automatically determining discourse structure, has been shown to be relevant, inter alia, for automatic summarization (e.g., Marcu, 2000).",
        "Not surprisingly, though, the task is very difficult.",
        "Previous approaches have thus emphasized the need for heuristic or probabilistic information in the process of finding the best or most likely rhetorical tree.",
        "As an alternative, we explore the idea of strictly separating “high-confidence” information from hypothetical reasoning and of working with underspecified trees as much as possible.",
        "We create a parse forest on the basis of surface cues found in the text.",
        "This forest can then be subject to further processing.",
        "Depending on the application, such further steps can either calculate the “best” tree out of the forest or continue working with a set of structured hypotheses.",
        "Section 2 briefly summarizes our proposal on underspecified rhetorical trees; section 3 introduces our grammar approach to text structure; section 4 compares this strategy to earlier work."
      ]
    },
    {
      "heading": "2 Parse forests and underspecification",
      "text": [
        "We will illustrate the underspecification of ambiguities with the following example: “(1) Yesterday the delegates elected their new representative by a narrow margin.",
        "Even though (2) Smith got only 234 votes, (3) he accepted the position.",
        "But (4) his predecessor was rather irritated by the results.” We take it that even though unambiguously marks a CONCESSION between the embedded clause (2, satellite) and the matrix clause (3, nucleus).",
        "For the purpose of illustration, we also assume that “but” can only signal a binuclear CONTRAST relation with the second nucleus (4); the span of the first nucleus is in this case ambiguous (1-3 or 2-3).",
        "For linking (1) to the remaining material, we suppose that either ELABORATION (with nucleus (1)) or SEQUENCE holds.",
        "Further relations are possible, which will add to the possibilities, but our points can be made with the situation as just described.",
        "Instead of enumerating all possible rhetorical trees for our example text, we use a parse forest representation which compactly encodes the different analysises.",
        "A parse forest is basically an attributed And-Or-graph with the properties of subtree sharing and containment of ambiguities.",
        "The first property means that a subtree, which plays different roles in some bigger structure, is represented only once.",
        "The second property ensures that two subtrees which have in common the same category and the same terminal yield, but which differ in the first step of a leftmost derivation are unified together.",
        "Fig.",
        "1 shows a simplified parse forest for the example text.",
        "Subtree sharing is indicated by nodes (e.g. “1”) which have several incoming edges.",
        "Containment of ambiguities is exemplified in fig. 1 by the upper left contrast node which represents a disjunctive hypothesis concerning the span of the relation.",
        "Reitter and Stede (to appear) developed an XML-DTD scheme to represent such parse forests in XML notation."
      ]
    },
    {
      "heading": "3 Discourse structure parsing",
      "text": [
        "In our approach, we combine a standard chunk parser which identifies the relevant units for discourse processing with a feature-based grammar which builds larger rhetorical trees out of these chunks.",
        "The categories and features we use are summarized in table 1.",
        "There are three groups of grammar rules:",
        "1.",
        "Rules combining chunks to terminal RST-trees 2.",
        "Rules combining discourse particles and sentence fragments to non-primitives RST-trees 3.",
        "Rules combining sentences or groups of sentences (so called macro segments) to non-primitive RST-trees.",
        "An example for a rule in group 1 is the one which builds a terminal RST-tree of category mc (main clause) out of a discourse particle, and sentence fragment and a full stop (all examples are given in Prolog-style notation, with curly brackets indicating feature structures): (1) rst({cat:mc, dp:DP, type:term}) ---> dp({cat:pav, dp:DP}), chunk({cat:ip} ), punct({cat:fullstop} ).",
        "Rules like this one are used to build terminal RST-trees for sentences like (4) in our example text.",
        "The second group of rules is exemplified by a rule which combines two terminal RST-trees - a subordinate clause containing a conjunction like even though and another clause - to a hypotactic RST-tree: rst({cat:mc, rel:concession, dp:no_dp, type:ns}) ---> rst({cat:sc, dp:even_though, role:sat}), rst({cat:mc, dp:no_dp, role:nuc}).",
        "The macro segment building rules of the third group can be divided into two subclasses.",
        "The first class is constituted by rules which construct RST-trees on the basis of a relation that is triggered by a discourse particle.",
        "An example of this type is the possible contrast-relation between segments 4 and 2-3 in (1), which is triggered by the discourse particle but.",
        "The other subclass contains rules which freely construct branching RST-trees without the overt evidence of discourse particles.",
        "The relations which are typically involved here are SEQUENCE and ELABORATION.",
        "Relations which have in common the same type of nucleus-satellite-configuration are unified into a single rule using the list-valued form of the relation-feature:",
        "dp:no_dp, type:nn}) ---> rst({cat:macro_seg, role:nuc, dp:no_dp}), rst({cat:macro_seg, role:nuc, dp:no_dp}).",
        "Fig.",
        "2 shows a parse tree which reflects one analysis of our example text.",
        "Note that the segments into which the input is broken usually smaller than sentences.",
        "Rules like (4) ensure the robustness of the grammar as they can be used to combine partial structures without any structure triggering discourse particles.",
        "Furthermore, rules of the kind shown in (4) are on the one hand necessary to produce all possible branching structure over a given sequence of terminal elements.",
        "On the other hand they introduce massive ambiguities into the grammar which causes the number of analyses to grow according to the Catalan numbers (cf. Aho and Ullman, 1972, p. 165).",
        "It is therefore crucial that during parsing the construction of parse trees is strictly avoided because that would turn an otherwise polynomial parsing algorithm like chart parsing into an exponential one.",
        "Instead we incrementally build the parse forest mentioned in section 2.",
        "This is done by assigning a unique id to each edge introduced into the chart and by storing the ids of the immediate daughters within the edge.",
        "After parsing the parse forest is constructed by partitioning the set of edges into equivalence classes.",
        "Two chart edges E1 and E2 are in the same equivalence class if they a) have identical start and end positions and b) the categories of E1 and E2 subsume each other.",
        "For the subsumption test it is necessary to ignore the role-feature, because this feature is an attribute of the parse forest edges and not of the parse forest nodes.",
        "Besides keeping the parsing algorithm polynomial it is of equal importance to keep the grammar constant low.",
        "For example, rule (4) which establishes a SEQUENCE/ELABORATION relation between two macro segments also connects two simple clauses (of category mc), a macro segment and a simple clause, or a simple clause and a macro segment.",
        "The standard move to avoid this kind of rule multiplication is to introduce an unary chain rule of the form rst({cat:macro_seg}) ---> rst({cat:mc}) which ensures the desired level shifting.",
        "Because of the inherent relational nature of RST trees this solution is blocked.",
        "Instead we use an inheritance hierarchy like that in fig. 3 and replace rule (4) with the following one, which is underspecified w.r.t to the category feature.",
        "(5) rst({cat:macro_seg, rel:[sequence,elaboration], dp:no_dp, type:nn}) ---> rst({cat:rst_tree, role:nuc, dp:no_dp}), rst({cat:rst_tree, role:nuc, dp:no_dp}).",
        "segment rst_tree non_rst_tree"
      ]
    },
    {
      "heading": "4 Related work",
      "text": [
        "Similar to Marcu (2000) we assume discourse markers as indicators for rhetorical relations.",
        "But contrary to Marcu (1999) and also to Schilder (2002) we use a full-fledged discourse grammar and a standard parsing algorithm, which makes it, in our opinion, unnecessary to propose special rhetorical tree building operations, as suggested e.g. by Marcu (1999).",
        "By using the chart parsing algorithm combined with the construction of an underspecified parse forest, it can easily be shown that our method is of cubic complexity.",
        "This is a crucial property, because it is commonly assumed that the number of distinct structures that can be constructed over a sequence of n discourse units is exponential in n, (as it is for example implicit in the DCG based algorithm proposed by Schilder, 2002).",
        "Our system is robust in the same way as the one in Schilder (2002) because the grammar admits underspecified rhetorical trees in the absence of overt discourse markers."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "We have shown that a grammar based approach to rhetorical parsing is suitable for efficient and robust construction of underspecified rhetorical structures."
      ]
    }
  ]
}
