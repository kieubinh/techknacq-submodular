{
  "info": {
    "authors": [
      "Jun Suzuki",
      "Tsutomu Hirao",
      "Yutaka Sasaki",
      "Eisaku Maeda"
    ],
    "book": "Annual Meeting of the Association for Computational Linguistics",
    "id": "acl-P03-1005",
    "title": "Hierarchical Directed Acyclic Graph Kernel: Methods for Structured Natural Language Data",
    "url": "https://aclweb.org/anthology/P03-1005",
    "year": 2003
  },
  "references": [
    "acl-C02-1054",
    "acl-W02-2016"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper proposes the “Hierarchical Directed Acyclic Graph (HDAG) Kernel” for structured natural language data.",
        "The HDAG Kernel directly accepts several levels of both chunks and their relations, and then efficiently computes the weighed sum of the number of common attribute sequences of the HDAGs.",
        "We applied the proposed method to question classification and sentence alignment tasks to evaluate its performance as a similarity measure and a kernel function.",
        "The results of the experiments demonstrate that the HDAG Kernel is superior to other kernel functions and baseline methods."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "As it has become easy to get structured corpora such as annotated texts, many researchers have applied statistical and machine learning techniques to NLP tasks, thus the accuracies of basic NLP tools, such as POS taggers, NP chunkers, named entities taggers and dependency analyzers, have been improved to the point that they can realize practical applications in NLP.",
        "The motivation of this paper is to identify and use richer information within texts that will improve the performance of NLP applications; this is in contrast to using feature vectors constructed by a bag-of-words (Salton et al., 1975).",
        "We now are focusing on the methods that use numerical feature vectors to represent the features of natural language data.",
        "In this case, since the original natural language data is symbolic, researchers convert the symbolic data into numeric data.",
        "This process, feature extraction, is ad-hoc in nature and differs with each NLP task; there has been no neat formulation for generating feature vectors from the semantic and grammatical structures inside texts.",
        "Kernel methods (Vapnik, 1995; Cristianini and Shawe-Taylor, 2000) suitable for NLP have recently been devised.",
        "Convolution Kernels (Haussler, 1999) demonstrate how to build kernels over discrete structures such as strings, trees, and graphs.",
        "One of the most remarkable properties of this kernel methodology is that it retains the original representation of objects and algorithms manipulate the objects simply by computing kernel functions from the inner products between pairs of objects.",
        "This means that we do not have to map texts to the feature vectors by explicitly representing them, as long as an efficient calculation for the inner products between a pair of texts is defined.",
        "The kernel method is widely adopted in Machine Learning methods, such as the Support Vector Machine (SVM) (Vapnik, 1995).",
        "In addition, kernel function K(x, y) has been described as a similarity function that satisfies certain properties (Cristianini and Shawe-Taylor, 2000).",
        "The similarity measure between texts is one of the most important factors for some tasks in the application areas of NLP such as Machine Translation, Text Categorization, Information Retrieval, and Question Answering.",
        "This paper proposes the Hierarchical Directed Acyclic Graph (HDAG) Kernel.",
        "It can handle several of the structures found within texts and can calculate the similarity with regard to these structures at practical cost and time.",
        "The HDAG Kernel can be widely applied to learning, clustering and similarity measures in NLP tasks.",
        "The following sections define the HDAG Kernel and introduce an algorithm that implements it.",
        "The results of applying the HDAG Kernel to the tasks of question classification and sentence alignment are then discussed."
      ]
    },
    {
      "heading": "2 Convolution Kernels",
      "text": [
        "Convolution Kernels were proposed as a concept of kernels for a discrete structure.",
        "This framework defines a kernel function between input objects by applying convolution “sub-kernels” that are the kernels for the decompositions (parts) of the objects.",
        "Let D be a positive integer and X, X1, ... , XD be nonempty, separable metric spaces.",
        "This paper focuses on the special case that X, X1, ..., XD are countable sets.",
        "We start with x E X as a composite structure and x = X 1, ... , X D as its “parts”, where Xd E Xd.",
        "R is defined as a relation on the set X, x • • • x XD x X such that R(x, x) is true if x are the “parts” of x. R-1(x) is defined as R-1(x) _ {x R(x, X)}.",
        "Suppose x, y E X, x be the parts of x with",
        "We note that Convolution Kernels are abstract concepts, and that instances of them are determined by the definition of sub-kernel Kd(Xd,Yd).",
        "The Tree Kernel (Collins and Duffy, 2001) and String Subsequence Kernel (SSK) (Lodhi et al., 2002), developed in the NLP field, are examples of Convolution Kernels instances.",
        "An explicit definition of both the Tree Kernel and",
        "Conceptually, we enumerate all substructures occurring in x and y, where M represents the total number of possible substructures in the objects.",
        "0, the feature mapping from the sample space to the feature space, is given by O(x) _ (01(X),...,0M(X))In the case of the Tree Kernel, x and y be trees.",
        "The Tree Kernel computes the number of common subtrees in two trees x and y.",
        "0i(x) is defined as the number of occurrences of the ’th enumerated subtree in tree x.",
        "In the case of SSK, input objects x and y are string sequences, and the kernel function computes the sum of the occurrences of ’th common subsequence Oi (x) weighted according to the length of the subsequence.",
        "These two kernels make polynomial-time calculations, based on efficient recursive calculation, possible, see equation (1).",
        "Our proposed method uses the framework of Convolution Kernels."
      ]
    },
    {
      "heading": "3 HDAG Kernel",
      "text": []
    },
    {
      "heading": "3.1 Definition of HDAG",
      "text": [
        "This paper defines HDAG as a Directed Acyclic Graph (DAG) with hierarchical structures.",
        "That is, certain nodes contain DAGs within themselves.",
        "In basic NLP tasks, chunking and parsing are used to analyze the text semantically or grammatically.",
        "There are several levels of chunks, such as phrases, named entities and sentences, and these are bound by relation structures, such as dependency structure, anaphora, and coreference.",
        "HDAG is designed to enable the representation of all of these structures inside texts, hierarchical structures for chunks and DAG structures for the relations of chunks.",
        "We believe this richer representation is extremely useful to improve the performance of similarity measure between texts, moreover, learning and clustering tasks in the application areas of NLP.",
        "Figure 1 shows an example of the text structures that can be handled by HDAG.",
        "Figure 2 contains simple examples of HDAG that elucidate the calculation of similarity.",
        "As shown in Figures 1 and 2, the nodes are allowed to have more than zero attributes, because nodes in texts usually have several kinds of attributes.",
        "For example, attributes include words, part-of-speech tags, semantic information such as Word",
        "Net, and class of the named entity."
      ]
    },
    {
      "heading": "3.2 Definition of HDAG Kernel",
      "text": [
        "First of all, we define the set of nodes in HDAGs Gland G2 as P and Q, respectively, p and q represent nodes in the graph that are defined as {p p i E P, i = PJ} and {qlqj E Q, j = 1..., QJ}, respectively.",
        "We use the expression p 1 ` p4 p7 to represent the path from p1 to P7 through p4.",
        "We define “attribute sequence” as a sequence of attributes extracted from nodes included in a sub-path.",
        "The attribute sequence is expressed as ‘A-B’ or ‘A-(C-B)’ where ( ) represents a chunk.",
        "As a basic example of the extraction of attribute sequences from a sub-path, q2 – q3 in Figure 2 contains the four attribute sequences ‘e-b’, ‘e-V’, ‘N-b’ and ‘NV’, which are the combinations of all attributes in q 2 and q3.",
        "Section 3.3 explains in detail the method of extracting attribute sequences from sub-paths.",
        "Next, we define “terminated nodes” as those that do not contain any graph, such as p2, ps; “non-terminated nodes” are those that do, such as q1, q4.",
        "Since HDAGs treat not only exact matching of substructures but also approximate matching, we allow node skips according to decay factor A(0 < A < 1) when extracting attribute sequences from the sub-paths.",
        "This framework makes similarity evaluation robust; the similar substructures can be evaluated in the value of similarity, in contrast to exact matching that never evaluate the similar substructure.",
        "Next, we define parameter n (n = 1,2 .",
        "...) as the number of attributes combined in the attribute sequence.",
        "When calculating similarity, we consider only combination lengths of up to n. Given the above discussion, the feature vector of HDAG is written as 0(G) = (01(G), ..., 0Aj(G)), where 0 represents the explicit feature mapping of HDAG and M represents the number of all possible n attribute combinations.",
        "The value of 0 i (G) is the number of occurrences of the ’th attribute sequence in HDAG G; each attribute sequence is weighted according to the node skip.",
        "The similarity between HDAGs, which is the definition of the HDAG Kernel, follows equation (2) where input objects x and y are Gland G2, respectively.",
        "According to this approach, the HDAG Kernel calculates the inner product of the common attribute sequences weighted according to their node skips and the occurrence between the two HDAGs, G 1 and G2.",
        "We note that, in general, if the dimension of the feature space becomes very high or approaches infinity, it becomes computationally infeasible to generate feature vector O(G) explicitly.",
        "To improve the reader’s understanding of what the HDAG Kernel calculates, before we introduce our efficient calculation method, the next section details the attribute sequences that become elements of the feature vector if the calculation is explicit."
      ]
    },
    {
      "heading": "3.3 Attribute Sequences: The Elements of the Feature Vector",
      "text": [
        "We describe the details of the attribute sequences that are elements of the feature vector of the HDAG Kernel using G1 and G2 in Figure 2.",
        "The framework of node skip We denote the explicit representation of a node skip by ”*”.",
        "The attribute sequences in the sub-path under the “node skip” are written as ‘a-*-c’.",
        "It costs A to skip a terminated node.",
        "The cost of skipping a",
        "non-terminated node is the same as skipping all the graphs inside the non-terminated node.",
        "We introduce decay functions NA (p), TA (p) and BA (p); all are based on decay factor A. NA(p) represents the cost of node skip p. For example, NA(pi) = 2A2 represents the cost of node skip p2 – 84 and that of p3 – p4; NA (P2) = A is the cost of just node skip p2.",
        "TA (p) represents the sum of the multiplied cost of the node skips of all of the nodes that have a path to p, TA (N) = 2A that is the sum cost of both P2 and p3 that have a path to p4, TA(pl) = 1(a°).",
        "BA (p) represents the sum of the multiplied cost of the node skips of all the nodes that p has a path to.",
        "BA (P2) = A represents the cost of node skip P4 where p2 has a path to p4.",
        "Attribute sequences for non-terminated nodes We define the attributes of the non-terminated node as the combinations of all attribute sequences including the node skip.",
        "Table 1 shows the attribute sequences and values ofp1 and q4."
      ]
    },
    {
      "heading": "Details of the elements in the feature vector",
      "text": [
        "The elements of the feature vector are not considered in any of the node skips.",
        "This means that ‘A*-B-C’ is the same element as ‘A-B-C’, and ‘A-*-*B-C’ and ‘A-*-B-*-C’ are also the same element as ‘A-B-C’.",
        "Considering the hierarchical structure, it is natural to assume that ‘(N-*)-(d)-a’ and ‘(N-*)-((*d)-a)’ are different elements.",
        "However, in the framework of the node skip and the attributes of the non-terminated node, ‘(N-*)-(*)-a’ and ‘(N-� )-((� -� )-a)’ are treated as the same element.",
        "This framework",
        "achieves approximate matching of the structure automatically, The HDAG Kernel judges all pairs of attributes in each attribute sequence that are inside or outside the same chunk.",
        "If all pairs of attributes in the attribute sequences are in the same condition, inside or outside the chunk, then the attribute sequences judge as the same element.",
        "Table 2 shows the similarity, the values of KHDAG(G1, G2), when the feature vectors are explicitly represented.",
        "We only show the common elements of each feature vector that appear in both G 1 and G2, since the number of elements that appear in only G1 or G2 becomes very large.",
        "Note that, as shown in Table 2, the attribute sequences of the non-terminated node itself are not addressed by the features of the graph.",
        "This is due to the use of the hierarchical structure; the attribute sequences of the non-terminated node come from the combination of the attributes in the terminated nodes.",
        "In the case of sl, attribute sequence ‘N-*’ comes from ‘N’ in s2.",
        "If we treat both ‘N-*’ in pl and ‘N’ in p2, we evaluate the attribute sequence ‘N’ in p2 twice.",
        "That is why the similarity value in Table 2 does not contain ‘c-*’ in p 1 and ‘(c-*)-*’ in q4, see Table 1. q4, see Table 1.",
        "val(p, q) returns the number of common attributes of nodes p and q, not including the attributes of nodes inside p and q.",
        "We define function in(p) as returning a set of nodes inside a non-terminated node p. in(p) _ 0 means node p is a terminated node.",
        "For example, in(pi) _ {p2, p3, P41 and in(p2) _ 0.",
        "We define functions Arrz (p, q), Arrz (p, q) and Arrz (p, q) to calculate V n (p, q).",
        "Function rel(p) returns the set of nodes that have direct links to node p. r'el (p) _ 0 means no nodes have direct links to s. rel (p4) _ {p2, p3} and rel(pi) = 0.",
        "Next, we define K(p, q) as representing the sum of the common attribute sequences that are the m-combinations of attributes extracted from the sub-paths whose sinks are p and q, respectively.",
        "needed for the recursive calculation of Km (p, q), are written in the same form as Am (p, q), Arrz (p, q) and A\" (p, q) respectively, except for the boundary condition of Cm (p, q), which is written as:",
        "Finally, an efficient similarity calculation formula is written as",
        "According to equation (13), given the recursive definition of Km (p, q), the similarity between two HDAGs can be calculated in O (n I P I I Q I) time 1."
      ]
    },
    {
      "heading": "3.5 Efficient Calculation Method",
      "text": [
        "We will now elucidate an efficient processing algorithm.",
        "First, as a pre-process, the nodes are sorted under the following condition: all nodes that have a path to the focused node and are in the graph inside the focused node should be set before the focused node.",
        "We can get at least one set of ordered nodes since we are treating an HDAG.",
        "In the case of Gl, we can get (p2, ps, p4, pi, ps, ps, p7).",
        "We can rewrite the recursive calculation formula in “for loops”, if we follow the sorted order.",
        "Figure 3 shows the algorithm of the HDAG kernel.",
        "Dynamic programming technique is used to compute the HDAG Kernel very efficiently because when following the sorted order, the values that are needed to calculate the focused pair of nodes are already calculated in the previous calculation.",
        "We can calculate the table by following the order of the nodes from left to right and top to bottom.",
        "We normalize the computed kernels before their use within the algorithms.",
        "The normalization corresponds to the standard unit norm normalization of",
        "examples in the feature space corresponding to the kernel space (Lodhi et al., 2002)."
      ]
    },
    {
      "heading": "4 Experiments",
      "text": [
        "We evaluated the performance of the proposed method in an actual application of NLP; the data set is written in Japanese.",
        "We compared HDAG and DAG (the latter had no hierarchy structure) to the String Subsequence Kernel (SSK) for word sequence, Dependency Structure",
        "Kernel (DSK) (Collins and Duffy, 2001) (a special case of the Tree Kernel), and Cosine measure for feature vectors consisting of the occurrence of attributes (BOA), and the same as BOA, but only the attributes of noun and unknown word (BOA’)were used.",
        "We expanded SSK and DSK to improve the total performance of the experiments.",
        "We denote them as SSK’ and DSK’ respectively.",
        "The original SSK treats only exact n string combinations based on parameter n. We consider string combinations of up to n for SSK’.",
        "The original DSK was specifically constructed for parse tree use.",
        "We expanded it to be able to treat the n combinations of nodes and the free order of child node matching.",
        "Figure 4 shows some input objects for each evaluated kernel, (a) for HDAG, (b) for DAG and DSK’, and (c) for SSK’.",
        "Note, though DAG and DSK’ treat the same input objects, their kernel calculation methods differ as do the return values.",
        "We used the words and semantic information of “Goi-taikei” (Ikehara et al., 1997), which is similar to WordNet in English, as the attributes of the node.",
        "The chunks and their relations in the texts were analyzed by cabocha (Kudo and Matsumoto, 2002), and named entities were analyzed by the method of (Isozaki and Kazawa, 2002).",
        "We tested each n-combination case with changing parameter A from 0.1 through 0.9 in the step of 0.1.",
        "Only the best performance achieved under parameter A is shown in each case.",
        "Ci [Pi, gj] = Vi [Pi, gj] Ai [pi ,gj] T,\\ (pi) -T,\\(gj)'Vi [pi ,gj] for (r), = 2; rn, < n,; rn,++) Cm [Pi, gj] = A.., [Pi, gj] = 17m [Pi, gj] for (a = 1; a < rn,; a++) K,,, [Pi, gj]+=Ca [Pi, gj] ' 17a – a [Pi, gj] Cm Pi, gj]+=Ca [Pi, gj] ' 17 – a [Pi, gj] Am [Pi, gj]+=Aa [Pi, gj] ' 17a – a [Pi, gj]"
      ]
    },
    {
      "heading": "4.1 Performance as a Similarity Measure Question Classification",
      "text": [
        "We used the 1011 questions of NTCIR-QAC1 2 and the 2000 questions of CRL-QA data 3 We assigned them into 148 question types based on the CRL-QA data.",
        "We evaluated classification performance in the following step.",
        "First, we extracted one question from the data.",
        "Second, we calculated the similarity between the extracted question and all the other questions.",
        "Third, we ranked the questions in order of descending similarity.",
        "Finally, we evaluated performance as a similarity measure by Mean Reciprocal Rank (MRR) (Voorhees and Tice, 1999) based on the question type of the ranked questions.",
        "Table 3 shows the results of this experiment."
      ]
    },
    {
      "heading": "Sentence Alignment",
      "text": [
        "The data set (Hirao et al., 2003) taken from the “Mainichi Shinbun”, was formed into abstract sentences and manually aligned to sentences in the “Yomiuri Shinbun” according to the meaning of sentence (did they say the same thing).",
        "This experiment was prosecuted as follows.",
        "First, we extracted one abstract sentence from the “Mainichi Shinbun” dataset.",
        "Second, we calculated the similarity between the extracted sentence and the sentences in the “Yomiuri Shinbun” dataset.",
        "Third, we ranked the sentences in the “Yomiuri Shinbun” in descending order based on the calculated similarity values.",
        "Finally, we evaluated performance as a similarity measure using the MRR measure.",
        "Table 4 shows the results of this experiment."
      ]
    },
    {
      "heading": "4.2 Performance as a Kernel Function Question Classification",
      "text": [
        "The comparison methods were evaluated the performance as a kernel function in the machine learning approach of the Question Classification.",
        "We chose SVM as a kernel-based learning algorithm that produces state-of-the-art performance in several NLP tasks.",
        "We used the same data set as used in the previous experiments with the following difference: if a question type had fewer than ten questions, we moved the entries into the upper question type as defined in CRL-QA data to provide enough training samples for each question type.",
        "We used one-vs-rest as the multi-class classification method and found a highest scoring question type.",
        "In the case of BOA and BOA’, we used the polynomial kernel (Vapnik, 1995) to consider the attribute combinations.",
        "Table 5 shows the average accuracy of each question as evaluated by 5-fold cross validation."
      ]
    },
    {
      "heading": "5 Discussion",
      "text": [
        "The experiments in this paper were designed to evaluated how the similarity measure reflects the semantic information of texts.",
        "In the task of Question Classification, a given question is classified into Question Type, which reflects the intention of the question.",
        "The Sentence Alignment task evaluates which sentence is the most semantically similar to a given sentence.",
        "The HDAG Kernel showed the best performance in the experiments as a similarity measure and as a kernel of the learning algorithm.",
        "This proves the usefulness of the HDAG Kernel in determining the similarity measure of texts and in providing an SVM kernel for resolving classification problems in NLP tasks.",
        "These results indicate that our approach, incorporating richer structures within texts, is well suited to the tasks that require evaluation of the semantical similarity between texts.",
        "The potential use of the HDAG Kernel is very wider in NLP tasks, and we believe it will be adopted in other practical NLP applications such as Text Categorization and Question Answering.",
        "Our experiments indicate that the optimal parameters of combination number n and decay factor A depend the task at hand.",
        "They can be determined by experiments.",
        "The original DSK requires exact matching of the tree structure, even when expanded (DSK’) for flexible matching.",
        "This is why DSK’ showed the worst performance.",
        "Moreover, in Sentence Alignment task, paraphrasing or different expressions with the same meaning is common, and the structures of the parse tree widely differ in general.",
        "Unlike DSK’, SSK’ and HDAG Kernel offer approximate matching which produces better performance.",
        "The structure of HDAG approaches that of DAG, if we do not consider the hierarchical structure.",
        "In addition, the structure of sequences (strings) is entirely included in that of DAG.",
        "Thus, the framework of the HDAG Kernel covers DAG Kernel and SSK."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "This paper proposed the HDAG Kernel, which can reflect the richer information present within texts.",
        "Our proposed method is a very generalized framework for handling the structure inside a text.",
        "We evaluated the performance of the HDAG Kernel both as a similarity measure and as a kernel function.",
        "Our experiments showed that HDAG Kernel offers better performance than SSK, DSK, and the baseline method of the Cosine measure for feature vectors, because HDAG Kernel better utilizes the richer structure present within texts."
      ]
    }
  ]
}
