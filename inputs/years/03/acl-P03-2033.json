{
  "info": {
    "authors": [
      "Akane Yakushiji",
      "Yuka Tateisi",
      "Yusuke Miyao",
      "Naoki Yoshinaga",
      "Jun'ichi Tsujii"
    ],
    "book": "Annual Meeting of the Association for Computational Linguistics – Interactive Posters and Demonstrations",
    "id": "acl-P03-2033",
    "title": "A Debug Tool for Practical Grammar Development",
    "url": "https://aclweb.org/anthology/P03-2033",
    "year": 2003
  },
  "references": [
    "acl-A92-1030",
    "acl-C96-1049",
    "acl-W02-1508",
    "acl-W97-1506"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We have developed willex, a tool that helps grammar developers to work efficiently by using annotated corpora and recording parsing errors.",
        "Willex has two major new functions.",
        "First, it decreases ambiguity of the parsing results by comparing them to an annotated corpus and removing wrong partial results both automatically and manually.",
        "Second, willex accumulates parsing errors as data for the developers to clarify the defects of the grammar statistically.",
        "We applied willex to a large-scale HPSG-style grammar as an example."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "There is an increasing need for syntactical parsers for practical usages, such as information extraction.",
        "For example, Yakushiji et al.",
        "(2001) extracted argument structures from biomedical papers using a parser based on XHPSG (Tateisi et al., 1998), which is a large-scale HPSG.",
        "Although large-scale and general-purpose grammars have been developed, they have a problem of limited coverage.",
        "The limits are derived from deficiencies of grammars themselves.",
        "For example, XHPSG cannot treat coordinations of verbs (ex.",
        "“Molybdate slowed but did not prevent the conversion.”) nor reduced relatives (ex.",
        "“Rb mutants derived from patients with retinoblastoma.”).",
        "Finding these grammar defects and modifying them require tremendous human effort.",
        "Hence, we have developed willex that helps to improve the general-purpose grammars.",
        "Willex has two major functions.",
        "First, it reduces a human workload to improve the general-purpose grammar through using language intuition encoded in syntactically tagged corpora in XML format.",
        "Second, it records data of grammar defects to allow developers to have a whole picture of parsing errors found in the target corpora to save debugging time and effort by prioritizing them.",
        "2 What Is the Ideal Grammar Debugging?",
        "There are already other grammar developing tools, such as a grammar writer of XTAG (Paroubek et al., 1992), ALEP (Schmidt et al., 1996), ConTroll (G¨otz and Meurers, 1997), a tool by Nara Institute of Science and Technology (Miyata et al., 1999), and [incr tsdb()] (Oepen et al., 2002).",
        "But these tools have following problems; they largely depend on human debuggers’ language intuition, they do not help users to handle large amount of parsing results effectively, and they let human debuggers correct the bugs one after another manually and locally.",
        "To cope with these shortcomings, willex proposes an alternative method for more efficient debugging process.",
        "The workflow of the conventional grammar developing tools and willex are different in the following ways.",
        "With the conventional tools, human debuggers must check each sentence to find out grammar defects and modify them one by one.",
        "On the other hand, with willex human debuggers check sentences that are tagged with syntactical structure, one by one, find grammar defects, and record them, while willex collects the whole grammar defect records.",
        "Then human debuggers modify the found grammar defects.",
        "This process allows human debuggers to make priority over defects that appear more frequently in the corpora, or defects that are more critical for purposes of syntactical parsing.",
        "Indeed, it is possible for human debuggers using the conventional tools to collect and modify the defects but willex saves the trouble of human debuggers to collect defects to modify them more efficiently."
      ]
    },
    {
      "heading": "3 Functions of willex",
      "text": [
        "To create the new debugging tool, we have extended will (Imai et al., 1998).",
        "Will is a browser of parsing results of grammars based on feature structures.",
        "Will and willex are implemented in JAVA."
      ]
    },
    {
      "heading": "3.1 Using XML Tagged Corpora",
      "text": [
        "Willex uses sentence boundaries, word chunking, and POSs/labels encoded in XML tagged corpora.",
        "First, with the information of sentence boundaries and word chunking, ambiguity of sentences is reduced, and ambiguity at parsing phase is also reduced.",
        "A parser connected to willex is assumed to produce only results consistent with the information.",
        "An example is shown in Figure 1 (<su> is a sentential tag and <np> is a tag for noun phrases).",
        "I saw a girl with a telescope",
        "Next, willex compares POSs/labels encoded in XML tags and parsing results, and deletes improper parsing trees.",
        "Therefore, it reduces numbers of partial parsing trees, which appear in the way of parsing and should be checked by human debuggers.",
        "In addition, human debuggers can delete partial parsing trees manually later.",
        "Figure 2 shows a concrete example.",
        "(NP and S are labels for noun and sentential"
      ]
    },
    {
      "heading": "3.2 Output of Grammar Defects",
      "text": [
        "Willex has a function to output information of grammar defects into a file in order to collect the defects data and treat them statistically.",
        "In addition, we can save a log of debugging experiences which show what grammar defects are found.",
        "An example of an output file is shown in Table 1.",
        "It includes sentence numbers, word ranges in which parsing failed, and comments input by a human debugger.",
        "For example, the first row of the table means that the sentence #0 has coordinations of verb phrases at position #3–#12, which cannot be parsed.",
        "“OK” in the second row means the sentence is parsed correctly (i.e., no grammar defects are found in the sentence).",
        "The third row means that the word #4 of the sentence #2 has no proper lexical entry.",
        "The word ranges are specified by human debuggers using a GUI, which shows parsing results in CKY tables and parse trees.",
        "The comments are input by human debuggers in a natural language or chosen from the list of previous comments.",
        "A postprocess-ing module of willex sorts the error data by the comments to help statistical analysis."
      ]
    },
    {
      "heading": "4 Experiments and Discussion",
      "text": [
        "We have applied willex to rental -XTAG, an HPSG-style grammar converted from the XTAG English grammar (The XTAG Research Group, 2001) by a grammar conversion (Yoshinaga and Miyao, 2001).1 The corpus used is MEDLINE abstracts with tags based on a slightly modified version of GDA-DTD2 (Hasida, 2003).",
        "The corpus is “partially parsed”; the attachments of prepositional phrases are annotated manually.",
        "The tags do not always specify the correct structures based on rental-XTAG (i.e., the grammar assumed by tags is different from rental-XTAG), so we prepared a POS/label conversion table.",
        "We can use tagged corpora based on various grammars different from the grammar that the parser is assuming by using POS/label conversion tables.",
        "We investigated 208 sentences (average 24.2 words) from 26 abstracts.",
        "73 sentences were parsed successfully and got correct results.",
        "Thus the coverage was 35.1%."
      ]
    },
    {
      "heading": "4.1 Qualitative Evaluation",
      "text": [
        "Willex received three major positive feedbacks from a user; first, the function of restricting partial results was helpful, as it allows human debuggers to check fewer results, second, the function to delete incorrect partial results manually was useful, because there are some cases that tags do not specify POSs/labels, and third, human debuggers could use the recording function to make notes to analyze them carefully later.",
        "However, willex also received some negative evaluations; the process of locating the cause of parsing failure in a sentence was found to be a bit troublesome.",
        "Also, willex loses its accuracy if the human debuggers themselves have trouble understanding the correct syntactical structure of a sentence.3",
        "3 Thus, we divided the process of identifying grammar defects to two steps.",
        "First, a non-expert roughly classifies parsing errors and records temporary memorandums.",
        "Then, the non-expert shows typical examples of sentences in each class to experts and identifies grammar defects based on experts’ inference.",
        "Here, we can make use of the recording function of We found from these evaluations that the functions of willex can be used effectively, though more automation is needed."
      ]
    },
    {
      "heading": "4.2 Quantitative Evaluation",
      "text": [
        "Figure 3 shows the decrease in partial parsing trees caused by using the tagged corpus.",
        "(Data of 10 sentences among the 208 sentences are shown.)",
        "The graph shows that human workload was reduced by using the tagged corpus.",
        "without any info.",
        "with chunk info.",
        "with chunk and POS/label info."
      ]
    },
    {
      "heading": "4.3 Defects of rental-XTAG",
      "text": [
        "(3) inability to parse coordinations of verbs are serious problems of rental-XTAG.",
        "4.4 Conflicts Between the Modified GDA and rental-XTAG Conflicts between rental-XTAG and the grammar on which the modified GDA based cause parsing failures.",
        "Statistics of the conflicts is shown in Table 3.",
        "These conflicts cannot be resolved by a simple POS/label conversion table.",
        "One resolution is inserting a preprocess module that deletes and moves tags which cause conflicts.",
        "We do not consider these conflicts as grammar defects but the difference of grammars to be absorbed in the conversion phase."
      ]
    },
    {
      "heading": "5 Conclusion and Future Work",
      "text": [
        "We developed a debug tool, willex, which uses XML tagged corpora and outputs information of grammar defects.",
        "By using tagged corpora, willex succeeded to reduce human workload.",
        "And by recording grammar defects, it provides debugging environment with a bigger perspective.",
        "But there remains a problem that a simple POS/label conversion table is not enough to resolve conflicts of a debugged grammar and a grammar assumed by tags.",
        "The tool should support to handle the complicated conflicts.",
        "In the future, we will try to modify willex to infer causes of parsing errors (semi-)automatically.",
        "It is difficult to find a point of parsing failure automatically, because subsentences that have no correspondent partial results are not always the failed point.",
        "Hence, we will expand willex to find the longest subsentences that are parsed successfully.",
        "Words, POS/labels and features of the subsentences can be clues to infer the causes of parsing errors."
      ]
    }
  ]
}
