{
  "info": {
    "authors": [
      "Hai Leong Chieu",
      "Hwee Tou Ng"
    ],
    "book": "Conference on Computational Natural Language Learning CoNLL",
    "id": "acl-W03-0423",
    "title": "Named Entity Recognition With a Maximum Entropy Approach",
    "url": "https://aclweb.org/anthology/W03-0423",
    "year": 2003
  },
  "references": [
    "acl-C02-1025",
    "acl-M98-1028",
    "acl-P02-1060",
    "acl-W02-2004"
  ],
  "sections": [
    {
      "heading": "1 Introduction",
      "text": [
        "The named entity recognition (NER) task involves identifying noun phrases that are names, and assigning a class to each name.",
        "This task has its origin from the Message Understanding Conferences (MUC) in the 1990s, a series of conferences aimed at evaluating systems that extract information from natural language texts.",
        "It became evident that in order to achieve good performance in information extraction, a system needs to be able to recognize names.",
        "A separate subtask on NER was created in MUC6 and MUC-7 (Chinchor, 1998).",
        "Much research has since been carried out on NER, using both knowledge engineering and machine learning approaches.",
        "At the last CoNLL in 2002, a common NER task was used to evaluate competing NER systems.",
        "In this year’s CoNLL, the NER task is to tag noun phrases with the following four classes: person (PER), organization (ORG), location (LOC), and miscellaneous (MISC).",
        "This paper presents a maximum entropy approach to the NER task, where NER not only made use of local context within a sentence, but also made use of other occurrences of each word within the same document to extract useful features (global features).",
        "Such global features enhance the performance of NER (Chieu and Ng, 2002b)."
      ]
    },
    {
      "heading": "2 A Maximum Entropy Approach",
      "text": [
        "The maximum entropy framework estimates probabilities based on the principle of making as few assumptions as possible, other than the constraints imposed.",
        "Such constraints are derived from training data, expressing some relationship between features and outcome.",
        "The probability distribution that satisfies the above property is the one with the highest entropy.",
        "It is unique, agrees with the maximum-likelihood distribution, and has the exponential form (Della Pietra et al., 1997):",
        "where o refers to the outcome, h the history (or context), and Z(h) is a normalization function.",
        "The features used in the maximum entropy framework are binary.",
        "An example of a feature function is fj (h, o) = r 1 if o = org-B, word = PETER l 0 otherwise The parameters αj are estimated by a procedure called Generalized Iterative Scaling (GIS) (Darroch and Rat-cliff, 1972).",
        "This is an iterative procedure that improves the estimation of the parameters at each iteration.",
        "The maximum entropy classifier is used to classify each word as one of the following: the beginning of a NE (B tag), a word inside a NE (C tag), the last word of a NE (L tag), or the unique word in a NE (U tag).",
        "During testing, it is possible that the classifier produces a sequence of inadmissible classes (e.g., PER-B followed by LOC-L).",
        "To eliminate such sequences, we define a transition probability between word classes P(ci l cj ) to be equal to 1 if the sequence is admissible, and 0 otherwise.",
        "The probability of the classes c1, ... , cn assigned to the words in a sentence s in a document D is defined as follows:",
        "where P(ci l s, D) is determined by the maximum entropy classifier.",
        "The Viterbi algorithm is then used to select the sequence of word classes with the highest probability."
      ]
    },
    {
      "heading": "3 Feature Representation",
      "text": [
        "We present two systems: a system ME1 that does not make use of any external knowledge base other than the training data, and a system ME2 that makes use of additional features derived from name lists.",
        "ME1 is used for both English and German.",
        "For German, however, for features that made use of the word string, the lemma (provided in the German training and test data) is used instead of the actual word."
      ]
    },
    {
      "heading": "3.1 Lists derived from training data",
      "text": [
        "The training data is first preprocessed to compile a number of lists that are used by both ME1 and ME2.",
        "These lists are derived automatically from the training data.",
        "Frequent Word List (FWL) This list consists of words that occur in more than 5 different documents.",
        "Useful Unigrams (UNI) For each name class, words that precede the name class are ranked using correlation metric (Chieu and Ng, 2002a), and the top 20 are compiled into a list.",
        "Useful Bigrams (UBI) This list consists of bigrams of words that precede a name class.",
        "Examples are “CITY OF”, “ARRIVES IN”, etc.",
        "The list is compiled by taking bigrams with higher probability to appear before a name class than the unigram itself (e.g., “CITY OF” has higher probability to appear before a location than “OF”).",
        "A list is collected for each name class.",
        "We have attempted to use bigrams that appear after a name class, but for English at least, we have been unable to compile any such meaningful bigrams.",
        "A possible explanation is that in writing, people tend to explain with bigrams such as “CITY OF” before mentioning the name itself.",
        "Useful Word Suffixes (SUF) For each word in a name class, three-letter suffixes with high correlation metric score are collected.",
        "This is especially important for the MISC class, where suffixes such as “IAN” and “ISH” often appear.",
        "Useful Name Class Suffixes (NCS) A suffix list is compiled for each name class.",
        "These lists capture tokens that frequently terminate a particular name class.",
        "For example, the ORG class often terminates with tokens such as INC and COMMITTEE, and the MISC class often terminates with CUP, OPEN, etc.",
        "Function Words (FUN) Lower case words that occur within a name class.",
        "These include “van der”, “of”, etc."
      ]
    },
    {
      "heading": "3.2 Local Features",
      "text": [
        "The basic features used by both ME1 and ME2 can be divided into two classes: local and global (Chieu and Ng, 2002b).",
        "Local features of a token w are those that are derived from the sentence containing w. Global features are derived by looking up other occurrences of w within the same document.",
        "In this paper, w_i refers to the ith word before w, and w+i refers to the ith word after w. The features used are similar to those used in (Chieu and Ng, 2002b).",
        "Local features include: First Word, Case, and Zone For English, each document is segmented by simple rules into 4 zones: headline (HL), author (AU), dateline (DL), and text (TXT).",
        "To identify the zones, a DL sentence is first identified using a regular expression.",
        "The system then looks for an AU sentence that occurs before DL using another regular expression.",
        "All sentences other than AU that occur before the DL sentence are then taken to be in the HL zone.",
        "Sentences after the DL sentence are taken to be in the TXT zone.",
        "If no DL sentence can be found in a document, then the first sentence of the document is taken as HL, and the rest as TXT.",
        "For German, the first sentence of each document is taken as HL, and the rest as TXT.",
        "Zone is used as part of the following features: If w starts with a capital letter (i.e., initCaps), and it is the first word of a sentence, a feature (firstword-initCaps, zone) is set to 1.",
        "If it is initCaps but not the first word, a feature (initCaps, zone) is set to 1.",
        "If it is the first word but not initCaps, (firstword-notInitCaps, zone) is set to 1.",
        "If it is made up of all capital letters, then (allCaps, zone) is set to 1.",
        "If it starts with a lower case letter, and contains both upper and lower case letters, then (mixedCaps, zone) is set to 1.",
        "A token that is allCaps will also be initCaps.",
        "Case and Zone of w+1 and w_1 Similarly, if w+1 (or w_1) is initCaps, a feature (initCaps, zone)NEXT (or (initCaps, zone)PREV) is set to 1, etc.",
        "Case Sequence Suppose both w_1 and w+1 are initCaps.",
        "Then if w is initCaps, a feature I is set to 1, else a feature NI is set to 1.",
        "Token Information These features are based on the string w, such as contains-digits, contains-dollar-sign, etc (Chieu and Ng, 2002b).",
        "Lexicon Feature The string of w is used as a feature.",
        "This group contains a large number of features (one for each token string present in the training data)."
      ]
    },
    {
      "heading": "Lexicon Feature of Previous and Next Token The",
      "text": [
        "string of the previous token w_1 and the next token w+1 is used with the initCaps information of w. If w has initCaps, then a feature (initCaps, w+1)NEXT is set to 1.",
        "If w is not initCaps, then (not-initCaps, w+1)NEXT is set to 1.",
        "Same for w_1.",
        "Hyphenated Words Hyphenated words w of the form s1-s2 have a feature U-U set to 1 if both s1 and s2 are initCaps.",
        "If s1 is initCaps but not s2, then the features U=s1, L=s2, and UL are set to 1.",
        "If s2 is initCaps but not s1, then the features U=s2, L=s1, and LU are set to 1.",
        "Within Quotes/Brackets Sequences of tokens within quotes or brackets have a feature to indicate that they are within quotes.",
        "We found this feature useful for MISC class, where names such as movie names often appear within quotes.",
        "Rare Words If w is not found in FWL, then this feature is set to 1.",
        "Bigrams If (w_2, w_1) is found in UBI for the name class nc, then the feature BI-nc is set to 1.",
        "Word Suffixes If w has a 3-letter suffix that can be found in SUF for the name class nc, then the feature SUF-nc is set to 1.",
        "Class Suffixes For w in a consecutive sequence of initCaps tokens (w, w+1 , ... , w+n), if any of the tokens from w+1 to w+,, is found in the NCS list of the name class nc, then the feature NCS-nc is set to 1.",
        "Function Words If w is part of a sequence found in FUN, then this feature is set to 1."
      ]
    },
    {
      "heading": "3.3 Global Features",
      "text": [
        "The global features include: Unigrams If another occurrence of w in the same document has a previous word wp that can be found in UNI, then these words are used as features Other-occurrence-prev=wp.",
        "Bigrams If another occurrence of w has the feature BI-nc set to 1, then w will have the feature OtherBI-nc set to 1.",
        "Class Suffixes If another occurrence of w has the feature NCS-nc set to 1, then w will have the feature OtherNCS-nc set to 1.",
        "InitCaps of Other Occurrences This feature checks for whether the first occurrence of the same word in an unambiguous position (non first-words in the TXT zone) in the same document is initCaps or not.",
        "For a word whose initCaps might be due to its position rather than its meaning (in headlines, first word of a sentence, etc), the case information of other occurrences might be more accurate than its own.",
        "Acronyms Words made up of all capitalized letters in the text zone will be stored as acronyms (e.g., IBM).",
        "The system will then look for sequences of initial capitalized words that match the acronyms found in the whole document.",
        "Such sequences are given additional features of A begin, A continue, or A end, and the acronym is given a feature A unique.",
        "For example, if FCC and Federal Communications Commission are both found in a document, then Federal has A begin set to 1, Communications has A continue set to 1, Commission has A end set to 1, and FCC has A unique set to 1.",
        "Sequence of InitCaps In the sentence Even News Broadcasting Corp., noted for its accurate reporting, made the erroneous announcement., a NER may mistake Even News Broadcasting Corp. as an organization name.",
        "However, it is unlikely that other occurrences of News Broadcasting Corp. in the same document also co-occur with Even.",
        "This group of features attempts to capture such information.",
        "For every sequence of initial capitalized words, its longest substring that occurs in the same document as a sequence of initCaps is identified.",
        "For this example, since the sequence Even News Broadcasting Corp. only appears once in the document, its longest sub-string that occurs in the same document is News Broadcasting Corp.",
        "In this case, News has an additional feature ofI begin set to 1, Broadcasting has an additional feature ofI continue set to 1, and Corp. has an additional feature of I end set to 1."
      ]
    },
    {
      "heading": "Name Class of Previous Occurrences The name class",
      "text": [
        "of previous occurrences of w is used as a feature, similar to (Zhou and Su, 2002).",
        "We use the occurrence where w is part of the longest name class phrase (name class with the most number of tokens).",
        "For example, if w is the second token in a person name class phrase of 5 tokens, then a feature 2Person5 is set to 1.",
        "During training, the name classes are known.",
        "During testing, the name classes are the ones already assigned to tokens in the sentences already processed.",
        "This last feature makes the order of processing important.",
        "As HL sentences usually contain less context, they are processed after the other sentences."
      ]
    },
    {
      "heading": "3.4 Name List",
      "text": [
        "In additional to the above features used by both ME1 and ME2, ME2 uses additional features derived from name lists compiled from a variety of sources.",
        "These sources are the Internet and the list provided by the organizers of this shared task.",
        "The list is a mapping of sequences of words to name classes.",
        "An example of an entry in the list is “JOHN KENNEDY: PERSON”.",
        "Words that are part of a sequence of words mapped to a name class nc will have a feature CLASS=nc set to 1.",
        "Another list of weekdays and month names is also used in the same way.",
        "For ME2, we have also manually added additional entries into the automatically compiled NCS lists."
      ]
    },
    {
      "heading": "4 Experiments",
      "text": [
        "The English training and test data are part of the Reuters Corpus, Volume 11.",
        "The German training and test data are part of the European Corpus Initiative, Multilingual Corpus 1.",
        "The best results obtained on the developement and test sets of the 2 languages are as shown in Table 2.",
        "Results in Table 1 are obtained by applying ME1, without the help of name lists, on the 2 languages.",
        "The best results for English are obtained using ME2, which made use of name lists compiled from the Internet and the list provided with the training set (See Section 3.4).",
        "The best results on German are obtained by using part-of-speech tags (provided in both training and test data) as an additional feature to the features used by ME1.",
        "For all experiments, features that occur only once in the training data are not used, and the GIS algorithm is run for 600 iterations.",
        "Running more iterations does not bring about any significant improvement to the accuracy.",
        "Our system usually does well for the LOC and PER class, but fails to do as well for the MISC and ORG class.",
        "The bad performance on the MISC class agrees with the observations of (Carreras et al., 2002).",
        "We felt that the",
        "MISC class is particularly difficult due to its generality (it can refer to anything from movie titles to sports events).",
        "Acknowledgements We would like to thank Yoong Keok Lee for helping us to apply boosting and feature selection to the maximum entropy algorithm, although these were not used in the final system."
      ]
    }
  ]
}
