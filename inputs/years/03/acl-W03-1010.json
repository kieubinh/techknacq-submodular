{
  "info": {
    "authors": [
      "Timothy Baldwin",
      "Francis Bond"
    ],
    "book": "Conference on Empirical Methods in Natural Language Processing",
    "id": "acl-W03-1010",
    "title": "A Plethora of Methods for Learning English Countability",
    "url": "https://aclweb.org/anthology/W03-1010",
    "year": 2003
  },
  "references": [
    "acl-C02-1013",
    "acl-C02-1052",
    "acl-J96-2004",
    "acl-N01-1006",
    "acl-P03-1059",
    "acl-W00-0726"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper compares a range of methods for classifying words based on linguistic diagnostics, focusing on the task of learning countabilities for English nouns.",
        "We propose two basic approaches to feature representation: distribution-based representation, which simply looks at the distribution of features in the corpus data, and agreement-based representation which analyses the level of token-wise agreement between multiple preprocessor systems.",
        "We additionally compare a single multiclass classifier architecture with a suite of binary classifiers, and combine analyses from multiple preprocessors.",
        "Finally, we present and evaluate a feature selection method.",
        "with differences in meaning: I submitted two papers “documents” (countable) vs.",
        "Please use white paper “substance to be written on” (uncountable).",
        "This research complements that described in Baldwin and Bond (2003), where we present the linguistic foundations and features drawn upon in the countability classification task, and motivate the claim that countability preferences can be learned from corpus evidence.",
        "In this paper, we focus on the methods used to tackle the task of countability classification based on this fixed feature set.",
        "The remainder of this paper is structured as follows.",
        "Section 2 outlines the countability classes, resources and preprocessors.",
        "Section 3 presents two methods of representing the feature space.",
        "Section 4 details the different classifier designs and the dataset, which are then evaluated in Section 5.",
        "Finally, we conclude the paper with a discussion in Section 6."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Lexical acquisition can be described as the process of populating a grammar skeleton with lexical items, through a process of mapping word lemmata onto lexical types described in the grammar.",
        "Depending on the linguistic precision of the base grammar, lexical acquisition can range in complexity from simple part-of-speech tagging (shallow lexical acquisition) to the acquisition of selectionally-constrained subcategorisation frame clusters or constructional compatibilities (deep lexical acquisition).",
        "Our particular interest is in the latter task of deep lexical acquisition with respect to English nouns.",
        "We are interested in developing learning techniques for deep lexical acquisition which take a fixed set of linguistic diagnostics, and classify words according to corpus data.",
        "We propose a range of general techniques for this task, as exemplified over the task of English countability acquisition.",
        "Countability is the syntactic property that determines whether a noun can take singular and plural forms, and affects the range of permissible modifiers.",
        "Many nouns have both countable and uncountable lemmas,"
      ]
    },
    {
      "heading": "2 Preliminaries",
      "text": [
        "In this section, we describe the countability classes, the resources used in this research, and the feature extraction method.",
        "These are described in greater detail in Baldwin and Bond (2003)."
      ]
    },
    {
      "heading": "2.1 Countability classes",
      "text": [
        "Nouns are classified as belonging to one or more of four possible classes: countable, uncountable, plural only and bipartite.",
        "Countable nouns can be modified by denumerators, prototypically numbers, and have a morphologically marked plural form: one dog, two dogs.",
        "Uncountable nouns cannot be modified by denumerators, but can be modified by unspecific quantifiers such as much; they do not show any number distinction (prototypically being singular): *one equipment, some equipment, *two equipments.",
        "Plural only nouns only have a plural form, such as goods, and cannot be either denumerated or modified by much; many plural only nouns, such as clothes, use the plural form even as modifiers: a clothes horse.",
        "Bipartite nouns are plural when they head a noun phrase (trousers), but generally singular when used as a modifier (trouser leg); they can be denumerated with the classifier pair: a pair of scissors."
      ]
    },
    {
      "heading": "2.2 Gold standard data",
      "text": [
        "Information about noun countability was obtained from two sources: COMLEX 3.0 (Grishman et al., 1998) and the common noun part of ALT-J/E’s Japanese-to-English semantic transfer dictionary (Ikehara et al., 1991).",
        "Of the approximately 22,000 noun entries in COMLEX, 13,622 are marked as countable, 710 as uncountable and the remainder are unmarked for countability.",
        "ALT-J/E has 56,245 English noun types with distinct countability."
      ]
    },
    {
      "heading": "2.3 Feature space",
      "text": [
        "Features used in this research are divided up into feature clusters, each of which is conditioned on the occurrence of a target noun in a given construction.",
        "Feature clusters are either one-dimensional (describing a single multivariate feature) or two-dimensional (describing the interaction between two multivariate features), with each dimension describing a lexical or syntactic property of the construction in question.",
        "An example of a one-dimensional feature cluster is head noun number, i.e. the number (singular or plural) of the target noun when it occurs as the head of an NP; an example of a two-dimensional feature cluster in subject–verb agreement, i.e. the number (singular or plural) of the target noun when it occurs as head of a subject NP vs. number agreement on the verb (singular or plural).",
        "Below, we provide a basic description of the 10 feature clusters used in this research and their dimensionality ([x]=1-dimensional feature cluster with",
        "x unit features, [x\"y]=2-dimensional feature cluster with x x y unit features).",
        "These represent a total of 206 unit features.",
        "Head noun number:[2] the number of the target noun when it heads an NP Modifier noun number: [2] the number of the target noun when a modifier in an NP Subject–verb agreement:[2\"2] the number of the target noun in a subject position vs. number agreement on the governing verb Coordinate noun number: [2\"2] the number of the target noun vs. the number of the head nouns of conjuncts N of N constructions: [ll \"2] the type of the Nl (e.g.",
        "COLLECTIVE, TEMPORAL) vs. the number of the target noun (N2) in an Nl of N2 construction Occurrence in PPs: [52\"2] the preposition type vs. the presence or absence of a determiner when the target noun occurs in singular form in a PP Pronoun co-occurrence: [l2 \"2] what personal, possessive and reflexive pronouns (e.g. he, their, itself) occur in the same sentence as singular and plural instances of the target noun Singular determiners:[l�] what singular-selecting determiners (e.g. a, much) occur in NPs headed by the target noun in singular form Plural determiners: [l2] what plural-selecting determiners (e.g. many, various) occur in NPs headed by the target noun in plural form Non-bounded determiners:[ll \"2] what non-bounded determiners (e.g. more, sufficient) occur in NPs headed by the target noun, and what is the number of the target noun for each"
      ]
    },
    {
      "heading": "2.4 Feature extraction",
      "text": [
        "The values for the features described above were extracted from the written component of the British National Corpus (BNC, Burnard (2000)) using three different pre-processors: (a) a POS tagger, (b) a full-text chunker and (c) a dependency parser.",
        "These are used independently to test the efficacy of the different systems at capturing features used in the classification process, and in tandem to consolidate the strengths of the individual methods.",
        "With the POS extraction method, we first tagged the BNC using an fnTBL-based tagger (Ngai and Florian, 2001) trained over the Brown and WSJ corpora and based on the Penn POS tagset.",
        "We then lemmatised this data using a Penn tagset-customised version of morph (Minnen et al., 2001).",
        "Finally, we implemented a range of high-precision, low-recall POS-based templates to extract out the features from the processed data.",
        "For the chunker, we ran fnTBL over the lemmatised tagged data, training over CoNLL 2000- style (Tjong Kim Sang and Buchholz, 2000) chunk-converted versions of the full Brown and WSJ corpora.",
        "For the NP-internal features (e.g. determiners, head number), we used the noun chunks directly, or applied POS-based templates locally within noun chunks.",
        "For inter-chunk features (e.g. subject–verb agreement), we looked at only adjacent chunk pairs so as to maintain a high level of precision.",
        "We read dependency tuples directly off the output of RASP (Briscoe and Carroll, 2002b) in grammatical relation mode.1 RASP has the advantage that recall is high, although precision is potentially lower",
        "than chunking or tagging as the parser is forced into resolving phrase attachment ambiguities and committing to a single phrase structure analysis.",
        "After generating the different feature vectors for each noun based on the above configurations, we filtered out all nouns which did not occur at least 10 times in NP head position in the output of all three systems.",
        "This resulted in a total of 20,530 nouns, of which 9,031 are contained in the combined COMLEX and ALT-J/E lexicons.",
        "The evaluation is based on these 9,031 nouns."
      ]
    },
    {
      "heading": "3 Feature representation",
      "text": [
        "We test two basic feature representations in this research: distribution-based, which simply looks at the relative occurrence of different features in the corpus data, and agreement-based, which analyses the level of token-wise agreement between multiple systems."
      ]
    },
    {
      "heading": "3.1 Distribution-based feature representation",
      "text": [
        "In the distribution-based feature representation, we take each target noun in turn and compare its amalgamated value for each unit feature with (a) the values for other target nouns, and (b) the value of other unit features within that same feature cluster.",
        "That is, we focus on the relative prominence of features globally within the corpus and locally within each feature cluster.",
        "In the case of a one-dimensional feature cluster (e.g. singular determiners), each unit feature fs for target noun w is translated into 3 separate feature values:",
        "where freq (*) is the frequency of all words in the corpus.",
        "That is, for each unit feature we capture the relative corpus frequency, frequency relative to the target word frequency, and frequency relative to other features in the same feature cluster.",
        "Thus, for an n-valued one-dimensional feature cluster, we generate 3n independent feature values.",
        "In the case of a two-dimensional feature matrix (e.g. subject-position noun number vs. verb number agreement), each unit feature f s,t for target noun w is translated into corpfreq(f s,t, w), wordfreq(f s,t, w) and featfreq(f s,t, w) as above, and 2 additional feature values:",
        "which represent the featfreq values calculated along each of the two feature dimensions.",
        "Additionally, we calculate cumulative totals for each row and column of the feature matrix and describe each as for the one-dimensional features above (in the form of 3 values).",
        "Thus, for an m x n-valued two-dimensional feature cluster, we generate a total of 5mn + 3(m + n) independent feature values.",
        "The feature clusters produce a combined total of 1284 individual feature values."
      ]
    },
    {
      "heading": "3.2 Agreement-based feature representation",
      "text": [
        "The agreement-based feature representation considers the degree of token agreement between the features extracted using the three different preprocessors.",
        "This allows us to pinpoint the reliable diagnostics within the corpus data and filter out noise generated by the individual preprocessors.",
        "It is possible to identify the features which are positively-correlated with a unique countability class (e.g. occurrence of a singular noun with the determiner a occurs only for countable nouns), and for each to determine the token-level agreement between the different systems.",
        "The number of diagnostics considered for each of the countability classes is: 32 for countable nouns, 19 for uncountable nouns and 1 for each of plural only and bipartite nouns.",
        "The total number of diagnostics we test agreement across is thus 53.",
        "The token-level correlation for each feature f s is calculated fourfold according to relative agreement, the K statistic, correlated frequency and correlated weight.",
        "The relative agreement between systems sysl and sys wrt f s for target noun w is defined to be: agr(fs,w)(sys , sysa) = tok(fs,w)(sys ) n tok (fs,w)(sysa)I tok(fs,w)(sys ) U tok (fs,w)(sysa)I where tok(fs,w) (sysi) returns the set of token in stances of (f s, w).",
        "The K statistic (Carletta, 1996) is recast as:",
        "In this modified form, K(fs w) represents the divergence in relative agreement wrt f s for target noun w, relative to the mean relative agreement wrt f s over all words.",
        "Correlated frequency is defined to be:",
        "Itok(fs,w)(sys ) n tok(fs,w)(sysa)I It describes the occurrence of tokens in agreement for (f 3, w) relative to the total occurrence of the target word.",
        "The metrics are used to derive three separate feature values for each diagnostic over the three preprocessor system pairings.",
        "We additionally calculate the mean value of each metric across the system pairings and the overall correlated weight for each countability class C as: cw(C,w)(sys , sysa) = Pfs∈CItok(fs,w)(sys ) n tok(fs,w)(sysa)j PiItok(fi,w)(sys )ntok(fi,w)(sysa)I Correlated weight describes the occurrence of correlated features in the given countability class relative to other correlated features.",
        "We test agreement: (a) for each of these diagnostics individually and within each countability class (Agree(Token,*)), and (b) across the amalgam of diagnostics for each of the countability classes (Agree(Class, *)).",
        "For Agree(Token,*), we calculate agr, r. and cfreq values for each of the 53 diagnostics across the 3 system pairings, and additionally calculate the mean value for each value.",
        "We additionally calculate the overall cw value for each countability class.",
        "This results in a total of 640 feature values (3 x 53 x 3 + 53 x 3 + 4).",
        "In the case ofAgree(Class,*), we average the agr, r. and cfreq values across each countability class for each of the three system pairings, and also calculate the mean value in each case.",
        "We further calculate the overall cw value for each countability class, culminating in 52 feature values (3 x 4 x 3+ 4 x 3+ 4)."
      ]
    },
    {
      "heading": "4 Classifier Set-up and Evaluation",
      "text": [
        "Below, we outline the different classifiers tested and describe the process used to generate the gold-standard data."
      ]
    },
    {
      "heading": "4.1 Classifier architectures",
      "text": [
        "We propose a variety of unsupervised and supervised classifier architectures for the task of learning countability, and also a feature selection method.",
        "In all cases, our classifiers are built using TiMBL version 4.2 (Daelemans et al., 2002), a memory-based classification system based on the k-nearest neighbour algorithm.",
        "As a result of extensive parameter optimisation, we settled on the default configuration2 for TiMBL with k set to 9.3",
        "Full-feature supervised classifiers The simplest system architecture applies the supervised learning paradigm to the distribution-based feature vectors for each of the POS tagger, chunker and RASP (Dist(POS,*), Dist(chunk,*) and Dist(RASP,*), respectively).",
        "For the distribution-based feature representation, we additionally combine the outputs of the three preprocessors by: (a) concatenating the individual distribution-based feature vectors for the three systems (resulting in a 3852-element feature vector: Dist(AllCON,*)); and (b) taking the mean over the three systems for each distribution-based feature value (resulting in a 1284-element feature vector: Dist(AllMEAN,*)).",
        "The agreement-based feature representation provides two additional system configurations: Agree(Class,*) and Agree(Token,*) (see Section 3.2).",
        "Orthogonal to the issue of how to generate the feature values is the question of how to classify a given noun according to the different countability classes.",
        "The two basic options here are to either have a single classifier and define multiclasses according to all observed combinations of countability classes (Dist(*, SINGLE)), or have a suite of binary classifiers, one for each countability class (Dist(*, SUITE)).",
        "The SINGLE classifier architecture has advantages in terms of speed (a 4x speed-up over the classifier suite) and simplicity, but runs into problems with data sparseness for the less-commonly attested multi-classes given that a single noun can occur with multiple countabilities.",
        "The SUITE classifier architecture delineates the different countability classes more directly, but runs the risk of a noun not being classified according to any of the four classes."
      ]
    },
    {
      "heading": "Feature-selecting supervised classifiers",
      "text": [
        "We improve the performance of the basic classifiers by way of best-N filter-based feature selection.",
        "Feature selection has been shown to improve classification accuracy over a variety of tasks (Liu and Motoda, 1988), but in the case of memory-based learners such as TiMBL, has the additional advantage of accelerating the classification process and reducing memory overhead.",
        "The computational complexity of memory-based learners is proportional to the number of features, so any reduction in the feature space leads to a proportionate reduction in computational time.",
        "For tasks such as countability classification with a large number of both feature values and test instances (particularly if we are to classify all noun types in a given corpus), this speed-up is vital.",
        "Our feature selection method uses a combined feature relevance metric to estimate the best-N features for each countability class, and then restricts the classifier to operate over only those N features.",
        "Feature relevance is estimated through analysis of the correspondence between class and feature values for a given feature, through metrics including shared variance and information gain.",
        "These individual metrics tend to be biased toward particular features: information gain and gain ratio, e.g., tend to favour features of higher cardinality (White and Liu, 1994).",
        "In order to minimise such bias, we generate a feature ranking for each feature selection metric (based on the relative feature relevance scores), and simply add the absolute ranks for each feature together.",
        "By re-ranking the features in increasing order of summed rank, we can generate a generalised feature relevance ranking.",
        "We are now in a position to prune the feature space to a predetermined size, by taking the best-N features in the feature ranking.",
        "The feature selection metrics we combine are those implemented in TiMBL, namely: shared variance, chi-square, information gain and gain ratio."
      ]
    },
    {
      "heading": "Unsupervised classifier",
      "text": [
        "In order to derive a common baseline for the different systems, we built an unsupervised classifier which, for each target noun, simply checks to see if any diagnostic (as used in the agreement-based feature representation) was detected for each of the countability classes; even a single occurrence of a diagnostic is taken to be sufficient evidence for membership in that countability class.",
        "Elementary system combination is achieved by voting between the three preprocessor outputs as to whether the target noun belongs to a given countability class.",
        "That is, the target noun is classified as belonging to a given countability class iff at least two of the preprocessors furnish linguistic evidence for membership in that class."
      ]
    },
    {
      "heading": "4.2 Training data",
      "text": [
        "Training data was generated independently for the SINGLE and SUITE classifiers.",
        "In each case, we first extracted all countability-annotated nouns from each of the ALT-J/E and COMLEX lexicons which are attested at least 10 times in the BNC, and composed the training data from these pre-filtered sets.",
        "In the case of the SINGLE classifier, we simply classified words according to the union of all countabilities from ALT-J/E and COMLEX, resulting in the following dataset:",
        "From this, it is evident that some class combinations (e.g. plural only+bipartite) are highly infrequent, hinting at a problem with data sparseness.",
        "For the SUITE classifier, we generate the positive exemplars for the countable and uncountable classes from the intersection of the COMLEX and ALT-J/E data for that class; negative exemplars, on the other hand, are those not annotated as belonging to that class in either lexicon.",
        "With the plural only and bipartite data, COMLEX cannot be used as it does not describe these two classes.",
        "We thus took all members of each class listed in ALT-J/E as our positive exemplars, and all remaining nouns with non-identical singular and plural forms as negative exemplars.",
        "This resulted in the following datasets:"
      ]
    },
    {
      "heading": "5 Evaluation",
      "text": [
        "Evaluation of the supervised classifiers was carried out based on 10-fold stratified cross-validation over the relevant dataset, and results presented here are averaged over the 10 iterations.",
        "Classifier performance is rated according to classification accuracy (the proportion of instances classified correctly) and F-score (Q = 1).",
        "In the case of the SINGLE classifier, the class-wise F-score is calculated by decomposing the multiclass labels into their components.",
        "A count-able+uncountable instance misclassified as countable, for example, would count as a misclassification in terms of classification accuracy, a correct classification in the calculation of the countable F-score, and a misclassification in the calculation of the uncountable F-score.",
        "Note that the SINGLE classifier is run over a different dataset to each member of the SUITE classifier, and cross-comparison of the classification accuracies is not representative of the relative system performance (classification accuracies for the SINGLE classifier are given in parentheses to reinforce this point).",
        "Classification accuracies are thus simply used for classifier comparison within a basic classifier architecture (SINGLE or SUITE), and F-score is",
        "the evaluation metric of choice for overall evaluation.",
        "We present the results for two baseline systems for each countability class: a majority-class classifier and the unsupervised method.",
        "The Majority class system is run over the binary data used by the SUITE classifier for the given class, and simply classifies all instances according to the most commonly-attested class in that dataset.",
        "Irrespective of the majority class, we calculate the F-score based on a positive-class classifier, i.e. a classifier which naively classifies each instance as belonging to the given class; in the case that the positive class is not the majority class, the F-score is given in parentheses.",
        "The results for the different system configurations over the four countability classes are presented in Tables 1–4, in which the highest classification accuracy and F-score values for each class are presented in boldface.",
        "The classifier Dist(AllCON, SUITE), for example, applies the distribution-based feature representation in a SUITE classifier configuration (i.e. it tests for binary membership in each countability class), using the concatenated feature vectors from each of the tagger, chunker and RASP.",
        "Items of note in the results are:",
        "• all system configurations surpass both the majority-class baseline and unsupervised classifier in terms of F-score • for all other than bipartite nouns, the SUITE classifier outperforms the SINGLE classifier in terms of F-score • the best of the distribution-based classifiers was, without exception, superior to the best of the agreement-based classifiers • chunk-based feature extraction generally produced superior performance to POS tag-based feature extraction, which was in turn generally better than RASP-based feature extraction; statistically significant differences in F-score (based on the two-tailed t-test, p < .05) were observed for both chunking and tagging over RASP for the plural only class, and chunking over RASP for the countable class • for the SUITE classifier, system combination by either concatenation (Dist(AllCON, SUITE)) or averaging over the individual feature values (Dist(AllMEAN, SUITE)) generally led to a statistically significant improvement over each of the individual systems for the countable",
        "and uncountable classes,4 but there was no statistical difference between these two architectures for any of the 4 countability classes; for the SINGLE classifier, system combination (Dist(AllCON, SUITE)) did not lead to a significant performance gain To evaluate the effects of feature selection, we graphed the F-score value and processing time (in instances processed per second5) over values of N from 25 to the full feature set.",
        "We targeted the Dist(AllCON, SUITE) system for evaluation (3852 features), and ran it over both the countable and uncountable classes.6 We additionally carried out random feature selection as a baseline to compare the feature selection results against.",
        "Note that the x-axis (N) and right y-axis (instances/sec) are both logarithmic, such that the linear right-decreasing time curves are indicative of the direct proportionality between the number of features and processing time.",
        "The differential in F-score for the best-N configuration as compared to the full feature set is statistically insignificant for N > 100 for countable nouns and N > 50 for uncountable nouns.",
        "That is, feature selection facilitates a relative speed-up of around 30 × without a significant drop in F-score.",
        "Comparing the results for the best-N and rand-N features, the difference in F-score was statistically significant for all values of N < 1000.",
        "The proposed method of feature selection thus allows us to maintain the full classification potential of the feature set while enabling",
        "a speedup greater than an order of magnitude, potentially making the difference in practical utility for the proposed method.",
        "To determine the relative impact of the component feature values on the performance of the distribution-based feature representation, we used the Dist(AllMEAN, SUITE) configuration to build: (a) a classifier using a single binary value for each unit feature, based on simple corpus occurrence (Binary); and (b) 3 separate classifiers based on each of the corpfreq, wordfreq and featfreq features values only (without the 2D feature cluster totals).",
        "In each case, the total number of feature values is 206.",
        "The results for each of these classifiers over countable and uncountable nouns are presented in Table 5, as compared to the basic Dist(AllMEAN, SUITE) classifier with all 1,284 features (Allfeatures) and also the best-200 features (Best-200).",
        "Results which differ from those for All features to a level of statistical significance are asterisked.",
        "The binary classifiers performed significantly worse than All features for both countable and uncountable nouns, underlining the utility of the distribution-based feature representation.",
        "wordfreq is marginally superior to corpfreq as a standalone feature representation, and both of these were on the whole slightly below the full feature set in performance (although no significant difference was observed).",
        "featfreq performed slightly worse again, significantly below the level of the full feature set.",
        "Results for the best-200 classifier were marginally higher than those for each of the individual feature representations in the case of the countable class, but marginally below the results for corpfreq and wordfreq in the case of the uncountable class.",
        "The differences here are not statistically significant, and additional evaluation is required to determine the relative success of feature selection over simply using wordfreq values, for example."
      ]
    },
    {
      "heading": "6 Discussion",
      "text": [
        "There have been at least three earlier approaches to the automatic determination of countability: two using semantic cues and one using corpora.",
        "Bond and Vatikiotis-Bateson (2002) determine a noun’s countability preferences – as defined in a 5-way classification – from its semantic class in the ALT-J/E lexicon, and show that semantics predicts countability 78% of the time.",
        "O’Hara et al.",
        "(2003) implemented a similar approach using the much larger Cyc ontology and achieved 89.5% accuracy, mapping onto the 2 classes of countable and uncountable.",
        "Schwartz (2002) learned noun countabilities by looking at determiner occurrence in singular noun chunks and was able to tag 11.7% of BNC noun tokens as countable and 39.5% as uncountable, achieving a noun type agreement of 88% and 44%, respectively, with the ALT-J/E lexicon.",
        "Our results compare favourably with each of these.",
        "In a separate evaluation, we took the best-performing classifier (Dist(AllCON, SUITE)) and ran it over open data, using best-500 feature selection (Baldwin and Bond, 2003).",
        "The output of the classifier was evaluated relative to hand-annotated data, and the level of agreement found to be around 92.4%, which is approximately equivalent to the agreement between COMLEX and ALT-J/E of 93.8%.",
        "In conclusion, we have presented a plethora of learning techniques for deep lexical acquisition from corpus data, and applied each to the task of classifying English nouns for countability.",
        "We specifically compared two feature representations, based on relative feature occurrence and token-level classification, and two basic classifier architectures, using a suite of binary classifiers and a single multi-class classifier.",
        "We also analysed the effects of combing the output of multiple pre-processors, and presented a simple feature selection method.",
        "Overall, the best results were obtained using a distribution-based suite of binary classifiers combining the output of multiple preprocessors."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": []
    }
  ]
}
