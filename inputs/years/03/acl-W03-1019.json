{
  "info": {
    "authors": [
      "Yasemin Altun",
      "Mark Johnson",
      "Thomas R. Hofmann"
    ],
    "book": "Conference on Empirical Methods in Natural Language Processing",
    "id": "acl-W03-1019",
    "title": "Investigating Loss Functions and Optimization Methods for Discriminative Learning of Label Sequences",
    "url": "https://aclweb.org/anthology/W03-1019",
    "year": 2003
  },
  "references": [
    "acl-P02-1062",
    "acl-P99-1069",
    "acl-W00-1308",
    "acl-W02-1002"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Discriminative models have been of interest in the NLP community in recent years.",
        "Previous research has shown that they are advantageous over generative models.",
        "In this paper, we investigate how different objective functions and optimization methods affect the performance of the classifiers in the discriminative learning framework.",
        "We focus on the sequence labelling problem, particularly POS tagging and NER tasks.",
        "Our experiments show that changing the objective function is not as effective as changing the features included in the model."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Until recent years, generative models were the most common approach for many NLP tasks.",
        "Recently, there is a growing interest on discriminative models in the NLP community, and these models were shown to be successful for different tasks(Lafferty et al., 2001; Ratnaparkhi, 1999; Collins, 2000).",
        "Discriminative models do not only have theoretical advantages over generative models, as we discuss in Section 2, but they are also shown to be empirically favorable over generative models when features and objective functions are fixed (Klein and Manning, 2002).",
        "In this paper, we use discriminative models to investigate the optimization of different objective functions by a variety of optimization methods.",
        "We focus on label sequence learning tasks.",
        "Part-of-Speech (POS) tagging and Named Entity Recognition (NER) are the most studied applications among these tasks.",
        "However, there are many others, such as chunking, pitch accent prediction and speech edit detection.",
        "These tasks differ in many aspects, such as the nature of the label sequences (chunks or individual labels), their difficulty and evaluation methods.",
        "Given this variety, we think it is worthwhile to investigate how optimizing different objective functions affects performance.",
        "In this paper, we varied the scale (exponential vs logarithmic) and the manner of the optimization (sequential vs pointwise) and using different combinations, we designed 4 different objective functions.",
        "We optimized these functions on NER and POS tagging tasks.",
        "Despite our intuitions, our experiments show that optimizing objective functions that vary in scale and manner do not affect accuracy much.",
        "Instead, the selection of the features has a larger impact.",
        "The choice of the optimization method is important for many learning problems.",
        "We would like to use optimization methods that can handle a large number of features, converge fast and return sparse classifiers.",
        "The importance of the features, and therefore the importance of the ability to cope with a larger number of features is well-known.",
        "Since training discriminative models over large corpora can be expensive, an optimization method that converges fast might be advantageous over others.",
        "A sparse classifier has a shorter test time than a denser classifier.",
        "For applications in which the test time is crucial, optimization methods that result in sparser classifiers might be preferable over other methods",
        "even if their training time is longer.",
        "In this paper we investigate these aspects for different optimization methods, i.e. the number of features, training time and sparseness, as well as the accuracy.",
        "In some cases, an approximate optimization that is more efficient in one of these aspects might be preferable to the exact method, if they have similar accuracy.",
        "We experiment with exact versus approximate as well as parallel versus sequential optimization methods.",
        "For the exact methods, we use an off-the-shelf gradient based optimization routine.",
        "For the approximate methods, we use a perceptron and a boosting algorithm for sequence labelling which update the feature weights parallel and sequentially respectively."
      ]
    },
    {
      "heading": "2 Discriminative Modeling of Label",
      "text": []
    },
    {
      "heading": "Sequences Learning",
      "text": [
        "Label sequence learning is, formally, the problem of learning a function that maps a sequence of observations to a label sequence , where each , the set of individual labels.",
        "For example, in POS tagging, the words ’s construct a sentence , and is the labelling of the sentence where is the part of speech tag of the word .",
        "We are interested in the supervised learning setting, where we are given a corpus, in order to learn the classifier.",
        "The most popular model for label sequence learning is the Hidden Markov Model (HMM).",
        "An HMM, as a generative model, is trained by finding the joint probability distribution over the observation and label sequences that explains the corpus the best (Figure 1a).",
        "In this model, each random variable is assumed to be independent of the other random variables, given its parents.",
        "Because of the long distance dependencies of natural languages that cannot be modeled by sequences, this conditional independence assumption is violated in many NLP tasks.",
        "Another shortcoming of this model is that, due to its generative nature, overlapping features are difficult to use in HMMs.",
        "For this reason, HMMs have been standardly used with current word-current label, and previous label(s)-current label features.",
        "However, if we incorporate information about the neighboring words and/or information about more detailed characteristics of the current word directly to our model, rather than propagating it through the previous labels, we may hope to learn a better classifier.",
        "Many different models, such as Maximum Entropy Markov Models (MEMMs) (McCallum et al., 2000), Projection based Markov Models (PMMs) (Punyakanok and Roth, 2000) and Conditional Random Fields (CRFs) (Lafferty et al., 2001), have been proposed to overcome these problems.",
        "The common property of these models is their discriminative approach.",
        "They model the probability distribution of the label sequences given the observation sequences: .",
        "The best performing models of label sequence learning are MEMMs or PMMs (also known as Maximum Entropy models) whose features are carefully designed for the specific tasks (Ratnaparkhi, 1999; Toutanova and Manning, 2000).",
        "However, maximum entropy models suffer from the so called label bias problem, the problem of making local decisions (Lafferty et al., 2001).",
        "Lafferty et al.",
        "(2001) show that CRFs overcome the label-bias problem and outperform MEMMs in POS tagging.",
        "CRFs define a probability distribution over the whole sequence , globally conditioning over the whole observation sequence (Figure 1b).",
        "Because they condition on the observation (as opposed to generating it), they can use overlapping features.",
        "The features used in this paper are of the form:",
        "1.",
        "Current label and information about the observation sequence, such as the identity or spelling features of a word that is within a window of the word currently labelled.",
        "Each of these features corresponds to a choice of and where and is the half window size 2.",
        "Current label and the neighbors of that label, i.e. features that capture the inter-label dependencies.",
        "Each of these features corresponds to",
        "The conditional probability distribution defined by this model is : where ’s are the parameters to be estimated from the training corpus C and is a normalization term to assure a proper probability distribution.",
        "In order to simplify the notation, we introduce , which is the number of times feature is observed in pair and, , which is the linear combination of all the features with parameterization.",
        "is the sufficient statistic of .",
        "Then, we can rewrite as: ."
      ]
    },
    {
      "heading": "3 Loss Functions for Label Sequences",
      "text": [
        "Given the theoretical advantages of discriminative models over generative models and the empirical support by (Klein and Manning, 2002), and that CRFs are the state-of-the-art among discriminative models for label sequences, we chose CRFs as our model, and trained by optimizing various objective functions with respect to the corpus .",
        "The application of these models to the label sequence problems vary widely.",
        "The individual labels might constitute chunks (e.g. Named-Entity Recognition, shallow parsing), or they may be single entries (e.g. POS tagging).",
        "The difficulty, therefore the accuracy of the tasks are very different from each other.",
        "The evaluation of the systems differ from one task to another, and the nature of the statistical noise level is task and corpus dependent.",
        "Given this variety, using objective functions tailored for each task might result in better classifiers.",
        "We consider two dimensions in designing objective functions: exponential versus logarithmic loss functions, and sequential versus pointwise optimization functions."
      ]
    },
    {
      "heading": "3.1 Exponential vs Logarithmic Loss functions",
      "text": [
        "Most estimation procedures in NLP proceed by maximizing the likelihood of the training data.",
        "To",
        "overcome the numerical problems of working with a product of a large number of small probabilities, usually the logarithm of the likelihood of the data is optimized.",
        "However, most of the time, these systems, sequence labelling systems in particular, are tested with respect to their error rate on test data, i.e. the fraction of times the function assigns a higher score to a label sequence (such that ) than the correct label sequence for every observation in test data.",
        "Then, the rank loss of might be a more natural objective to minimize.",
        "is the total number of label sequences that ranks higher than the correct label sequences for the training instances in the corpus .",
        "Since optimizing the rank loss is NP-complete, one can optimize an upper bound instead, e.g. an exponential loss function: The exponential loss function is well studied in the Machine Learning domain.",
        "The advantage of the exp-loss over the log-loss is its property of penalizing incorrect labellings very severely, whereas it penalizes almost nothing when the label sequence is correct.",
        "This is a very desirable property for a classifier.",
        "Figure 2 shows this property of exp-loss in contrast to log-loss in a binary classification problem.",
        "However this property also means that, exp-loss has the disadvantage of being sensitive to noisy data, since systems optimizing exp-loss spends more",
        "effort on the outliers and tend to be vulnerable to noisy data, especially label noise."
      ]
    },
    {
      "heading": "3.2 Sequential vs Pointwise Loss functions",
      "text": [
        "In many applications it is very difficult to get the whole label sequence correct since most of the time classifiers are not perfect and as the sequences get longer, the probability of predicting every label in the sequence correctly decreases exponentially.",
        "For this reason performance is usually measured point-wise, i.e. in terms of the number of individual labels that are correctly predicted.",
        "Most common optimization functions in the literature, however, treat the whole label sequence as one label, penalizing a label sequence that has one error and a label sequence that is all wrong in the same manner.",
        "We may be able to develop better classifiers by using a loss function more similar to the evaluation function.",
        "One possible way of accomplishing this may be minimizing pointwise loss functions.",
        "Sequential optimizations optimize the joint conditional probability distribution , whereas pointwise optimizations that we propose optimize the marginal conditional probability distribution, ."
      ]
    },
    {
      "heading": "3.3 Four Loss functions",
      "text": [
        "We derive four loss functions by taking the cross product of the two dimensions discussed above: Sequential Log-loss function: This function, based on the standard maximum likelihood optimization, is used with CRFs in (Lafferty et al., 2001).",
        "As shown in (Altun et al., 2002) it is possible to sum over all label sequences by using a dynamic algorithm.",
        "Note that the exponential loss function is just the inverse conditional probability plus a constant.",
        "Pointwise Log-loss function: This function optimizes the marginal probability of the labels at each position conditioning on the observation sequence: Obviously, this function reduces to the sequential log loss if the length of the sequence is .",
        "Pointwise Exp-loss function: Following the parallelism in log-loss vs exp-loss functions of sequential optimization (log vs inverse conditional probability), we propose minimizing the pointwise exp-loss function below, which reduces to the standard multi-class exponential loss when the length of the sequence is ."
      ]
    },
    {
      "heading": "4 Comparison of the Four Loss Functions",
      "text": [
        "We now compare the performance of the four loss functions described above.",
        "Although (Lafferty et al., 2001) proposes a modification of the iterative scaling algorithm for parameter estimation in sequential log-loss function optimization, gradient-based methods have often found to be more efficient for minimizing the convex loss function in Eq.",
        "(1) (Minka, 2001).",
        "For this reason, we use a gradient based method to optimize the above loss functions.",
        "Sequential Exp-loss function: This loss function, was first introduced in (Collins, 2000) for NLP tasks with a structured output domain.",
        "However, there, the sum is not over the whole possible label sequence set, but over the best label sequences generated by an external mechanism.",
        "Here we include all possible label sequences; so we do not require an external mechanism to identify the best sequences.."
      ]
    },
    {
      "heading": "4.1 Gradient Based Optimization",
      "text": [
        "The gradients of the four loss function can be computed as follows:",
        "(3) where expectations are taken w.r.t.",
        ".",
        "Thus at the optimum the empirical and expected values of the sufficient statistics are equal.",
        "The loss function and the derivatives can be calculated with one pass of the forward-backward algorithm.",
        "At the optimum the empirical values of the sufficient statistics equals their conditional expectations where the contribution of each instance is weighted by the inverse conditional probability of the instance.",
        "Thus this loss function focuses on the examples that have a lower conditional probability, which are usually the examples that the model labels incorrectly.",
        "The computational complexity is the same as the log-loss case.",
        "At the optimum the expected value of the sufficient statistics conditioned on the observation are equal to their expected value when also conditioned on the correct label sequence .",
        "The computations can be done using the dynamic programming described in (Kakade et al., 2002), with the computational complexity of the forward-backward algorithm scaled by a constant.",
        "At the optimum the expected value of the sufficient statistics conditioned on are equal to the value when also conditioned on , where each point is weighted by .",
        "Computational complexity is the same as the log-loss case."
      ]
    },
    {
      "heading": "4.2 Experimental Setup",
      "text": [
        "Before presenting the experimental results of the comparison of the four loss functions described above, we describe our experimental setup.",
        "We ran experiments on Part-of-Speech (POS) tagging and Named-Entity-Recognition (NER) tasks.",
        "For POS tagging, we used the Penn TreeBank corpus.",
        "There are 47 individual labels in this corpus.",
        "Following the convention in POS tagging, we used a Tag Dictionary for frequent words.",
        "We used Sections 1-21 for training and Section 22 for testing.",
        "For NER, we used a Spanish corpus which was provided for the Special Session of CoNLL2002 on NER.",
        "There are training and test data sets and the training data consists of about 7200 sentences.",
        "The individual label set in the corpus consists of 9 labels: the beginning and continuation of Person, Organization, Location and Miscellaneous names and nonname tags.",
        "We used three different feature sets: is the set of bigram features, i.e. the current tag and the current word, the current tag and previous tags.",
        "consists of features and spelling features of the current word (e.g. ”Is the current word capitalized and the current tag is Person-Beginning?”).",
        "Some of the spelling features, which are mostly adapted from (Bikel et al., 1999) are the last one, two and three letters of the word; whether the first letter is lower case, upper case or alphanumeric; whether the word is capitalized and contains a dot; whether all the letters are capitalized; whether the word contains a hyphen.",
        "includes features not only for the current word but also for the words within a fixed window of size .",
        "is an instance of where .",
        "An example of features for is ”Does the previous word ends with a dot and the current tag is Organization-Intermediate?”.",
        "For NER, we used a window of size 3 (i.e. considered features for the previous and next words).",
        "Since the Penn TreeBank is very large, including features, i.e. incorporating the information in the neighboring words directly to the model, is intractable.",
        "Therefore, we limited our experiments to and features for POS tagging."
      ]
    },
    {
      "heading": "4.3 Experimental Results",
      "text": [
        "As a gradient based optimization method, we used an off-the-shelf optimization tool that uses the limited-memory updating method.",
        "We observed that this method is faster to converge than the conjugate gradient descent method.",
        "It is well known that optimizing log-loss functions may result in over-fitting, especially with noisy data.",
        "For this reason, we used a regularization term in our cost functions.",
        "We experimented with different regularization terms.",
        "As expected, we observed that the regularization term increases the accuracy, especially when the training data is small; but we did not observe much difference when we used different regularization terms.",
        "The results we report are with the Gaussian prior regularization term described in (Johnson et al., 1999).",
        "Our goal in this paper is not to build the best tagger or recognizer, but to compare different loss functions and optimization methods.",
        "Since we did not spend much effort on designing the most useful features, our results are slightly worse than, but comparable to the best performing models.",
        "We extracted corpora of different sizes (ranging from 300 sentences to the complete corpus) and ran experiments optimizing the four loss functions using different feature sets.",
        "In Table 1 and Table 2, we report the accuracy of predicting every individual label.",
        "It can be seen that the test accuracy obtained by different loss functions lie within a relatively small range and the best performance depends on what kind of features are included in the model.",
        "We observed similar behavior when the training set is smaller.",
        "The accuracy is highest when more features are included to the model.",
        "From these results we conclude that when the model is the same, optimizing different loss functions does not have much effect on the accuracy, but increasing the variety of the features included in the model has more impact."
      ]
    },
    {
      "heading": "5 Optimization methods",
      "text": [
        "In Section 4, we showed that optimizing different loss function does not have a large impact on the accuracy.",
        "In this section, we investigate different methods of optimization.",
        "The conjugate based method used in Section 4 is an exact method.",
        "If the training corpus is large, the training may take a long time, especially when the number of features are very large.",
        "In this method, the optimization is done in a parallel fashion by updating all of the parameters at the same time.",
        "Therefore, the resulting classifier uses all the features that are included in the model and lacks sparseness.",
        "We now consider two approximation methods to optimize two of the loss functions described above.",
        "We first present a perceptron algorithm for labelling sequences.",
        "This algorithm performs parallel optimization and is an approximation of the sequential log-loss optimization.",
        "Then, we present a boosting algorithm for label sequence learning.",
        "This algorithm performs sequential optimization by updating one parameter at a time.",
        "It optimizes the sequential exp-loss function.",
        "We compare these methods with the exact method using the experimental setup presented in Section 4.2."
      ]
    },
    {
      "heading": "5.1 Perceptron Algorithm for Label Sequences",
      "text": [
        "Calculating the gradients, i.e. the expectations of features for every instance in the training corpus can be computationally expensive if the corpus is very large.",
        "In many cases, a single training instance might be as informative as all of the corpus to update the parameters.",
        "Then, an online algorithm which makes updates by using one training example may converge much faster than a batch algorithm.",
        "If the distribution is peaked, one label is more likely than others and the contribution of this label dominates the expectation values.",
        "If we assume this is the case, i.e. we make a Viterbi assumption, we can calculate a good approximation of the gradients by considering only the most likely, i.e. the best label sequence according to the current model.",
        "The following online perceptron algorithm (Algorithm 1), presented in (Collins, 2002), uses these two approximations: Algorithm 1 Label sequence Perceptron algorithm .",
        "At each iteration, the perceptron algorithm calculates an approximation of the gradient of the sequential log-loss function (Eq.",
        "3) based on the current training instance.",
        "The batch version of this algorithm is a closer approximation of the optimization of sequential log-loss, since the only approximation is the Viterbi assumption.",
        "The stopping criteria may be convergence, or a fixed number of iterations over the training data."
      ]
    },
    {
      "heading": "5.2 Boosting Algorithm for Label Sequences",
      "text": [
        "The original boosting algorithm (AdaBoost), presented in (Schapire and Singer, 1999), is a sequential learning algorithm to induce classifiers for single random variables.",
        "(Altun et al., 2002) presents a boosting algorithm for learning classifiers to predict label sequences.",
        "This algorithm minimizes an upper bound on the sequential exp-loss function (Eq.",
        "2).",
        "As in AdaBoost, a distribution over observations is defined:",
        "This distribution which expresses the importance of every training instance is updated at each round, and the algorithm focuses on the more difficult examples.",
        "The sequence Boosting algorithm (Algorithm 2) optimizes an upper bound on the sequential exp-loss function by using the convexity of the exponential function.",
        "is the maximum difference of the sufficient statistic in any label sequence and the correct label sequence of any observation .",
        "has a similar meaning.",
        ".",
        "Algorithm 2 Label sequence Boosting algorithm."
      ]
    },
    {
      "heading": "6: end for",
      "text": [
        "9: Update 10: until stopping criteria As it can be seen from Line 4 in Algorithm 2, the feature that was added to the ensemble at each round is determined by a function of the gradient of the sequential exp-loss function (Eq.",
        "4).",
        "At each round, one pass of the forward backward algorithm over the training data is sufficient to calculate ’s for all .",
        "Considering the sparseness of the features in each training instance, one can restrict the forward backward pass only to the training instances that contain the feature that is added to the ensemble in the last round.",
        "The stopping criteria may be a fixed number of rounds, or by cross-validation on a heldout corpus."
      ]
    },
    {
      "heading": "6 Experimental Results",
      "text": [
        "The results summarized in Table 3 compares the perceptron and the boosting algorithm with the gradient based method.",
        "Performance of the standard perceptron algorithm fluctuates a lot, whereas the average perceptron is more stable.",
        "We report the results of the average perceptron here.",
        "Not surprisingly, it does slightly worse than CRF, since it is an approximation of CRFs.",
        "The advantage of the Perceptron algorithm is its dual formulation.",
        "In the dual form, explicit feature mapping can be avoided by using the kernel trick and one can have a large number of features efficiently.",
        "As we have seen in the previous sections, the ability to incorporate more features has a big impact on the accuracy.",
        "Therefore, a dual perceptron algorithm may have a large advantage over other methods.",
        "When only HMM features are used, Boosting as a sequential algorithm performs worse than the gradient based method that optimizes in a parallel fashion.",
        "This is because there is not much information in the HMM features other than the identity of the word to be labeled.",
        "Therefore, the boosting algorithm needs to include almost all the features one by one in the ensemble.",
        "When there are just a few more informative features, the boosting algorithm makes better use of them.",
        "This situation is more dramatic in POS tagging.",
        "Boosting gets 89.42% and 94.92% accuracy for and features, whereas the gradient based method gets 94.57% and 95.25%.",
        "The gradient based method uses all of the available features, whereas boosting uses only about 10% of the features.",
        "Due to the loose upper bound that Boosting optimizes, the estimate of the updates are very conservative.",
        "Therefore, the same features are selected many times.",
        "This negatively effects the convergence time, and the other methods outperform Boosting in terms of training time."
      ]
    },
    {
      "heading": "7 Conclusion and Future Work",
      "text": [
        "In this paper, we investigated how different objective functions and optimization methods affect the accuracy of the sequence labelling task in the discriminative learning framework.",
        "Our experiments show that optimizing different objective functions does not have a large affect on the accuracy.",
        "Extending the feature space is more effective.",
        "We conclude that methods that can use large, possibly infinite number of features may be advantageous over others.",
        "We are running experiments where we use a dual formulation of the perceptron algorithm which has the property of being able to use infinitely many features.",
        "Our future work includes using SVMs for label sequence learning task."
      ]
    }
  ]
}
