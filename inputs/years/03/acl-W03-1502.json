{
  "info": {
    "authors": [
      "Fei Huang",
      "Stephan Vogel",
      "Alex Waibel"
    ],
    "book": "Workshop on Multilingual and Mixed-Language Named Entity Recognition",
    "id": "acl-W03-1502",
    "title": "Automatic Extraction of Named Entity Translingual Equivalence Based on Multi-Feature Cost Minimization",
    "url": "https://aclweb.org/anthology/W03-1502",
    "year": 2003
  },
  "references": [
    "acl-A97-1029",
    "acl-C96-2141",
    "acl-J00-2004",
    "acl-J93-2003",
    "acl-P00-1004",
    "acl-P02-1051",
    "acl-P97-1017",
    "acl-W98-1005"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Translingual equivalence refers to the relationship between expressions of the same meaning from different languages.",
        "Identifying translingual equivalence of named entities (NE) can significantly contribute to multilingual natural language processing, such as crosslingual information retrieval, crosslingual information extraction and statistical machine translation.",
        "In this paper we present an integrated approach to extract NE translingual equivalence from a parallel Chinese-English corpus.",
        "Starting from a bilingual corpus where NEs are automatically tagged for each language, NE pairs are aligned in order to minimize the overall multi feature alignment cost.",
        "An NE transliteration model is presented and iteratively trained using named entity pairs extracted from a bilingual dictionary.",
        "The transliteration cost, combined with the named entity tagging cost and word-based translation cost, constitute the multi feature alignment cost.",
        "These features are derived from several information sources using unsupervised and partly supervised methods.",
        "A greedy search algorithm is applied to minimize the alignment cost.",
        "Experiments show that the proposed approach extracts NE translingual equivalence with 81% F-score and improves the translation score from 7.68 to 7.74."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Translingual equivalence refers to the relationship between expressions of the same meaning from different languages.",
        "Identifying translingual equivalence of named entities (NE), including proper names, temporal and numerical expressions, is very important to multilingual language processing.",
        "This is because named entities, especially names of persons, locations and organizations, convey essential meaning in human languages [1][2].",
        "Some approaches for named entity translation, like bilingual dictionary lookup, word/subword translation or transliteration, have been explored in the past few years [3][4][5][6][7].",
        "However, dictionary lookup is particularly difficult for translating uncommon NEs because of its limited coverage, and simply applying word-based or character-based transformation without considering their context information, in most cases, cannot achieve satisfactory performance either.",
        "For instance, \" /Fenglingdu\", a Chinese location name, cannot be found in an LDC dictionary with 50k entries, and it is also inappropriate to adopt the character-by-character translation, \"wind tomb cross\".",
        "Rule-based translation is suitable for temporal and numerical NEs, because of their limited vocabulary and regular usage, but does not generalize well for proper name translation, especially the translation of foreign location or person names.",
        "One possible solution is to automatically extract named entity translingual equivalence from a parallel corpus, where named entities have been manually or automatically annotated.",
        "For example, in the following sentence pair where NEs are automatically tagged,",
        "Additionally, tagging errors should also be handled.",
        "Therefore more sophisticated models that are able to incorporate multiple informative features are necessary.",
        "In this paper we propose an integrated approach to the automatic extraction of named entity translation equivalence from a parallel Chinese/English corpus.",
        "Initially, named entities are automatically tagged for each language, after that NE pairs are aligned based on a multi-feature alignment cost minimization strategy.",
        "We present a named entity transliteration model and iteratively extract named entities from a bilingual dictionary to train the model.",
        "The NE transliteration cost, combined with the NE tagging cost and word-based translation cost, constitute the multi-feature alignment cost.",
        "These features are derived from several information sources using unsupervised and partly supervised methods.",
        "A greedy search algorithm is applied to minimize the total alignment cost for each sentence pair.",
        "Experiments show that the proposed approach can extract NE translingual equivalence with 81% F-score and improved the translation score from 7.68 to 7.74, which is statistically significant.",
        "The structure of this paper is as follows: in section 2 we introduce the NE transliteration model, in section 3 we propose the multi-feature named entity alignment framework, which incorporates transliteration cost, word-based translation cost and tagging cost.",
        "In section 4 we present the experiments and analysis of the results.",
        "Conclusions will be given in the last section."
      ]
    },
    {
      "heading": "2. Named Entity Transliteration Model",
      "text": [
        "Transliteration is the process of translating certain words (e.g., person's name, location's name) from the source language into their phonetic approximations in the target language.",
        "It is an essential component for NE translation.",
        "NEs are usually translated by combining the phonetic transliteration of some units and semantic translations of other units, where units can be characters, sub-words or words.",
        "Previous work on transliteration ([3],[6]) explicitly resorts to phoneme similarities, where a pronunciation lexicon is often needed.",
        "Here we try to take the transliteration on the surface level using DP-based string matching.",
        "Directly transliterating Chinese characters into English letters needs a large amount of bilingual NE pairs for training, considering the parameter estimation for over 6,000 frequent Chinese characters.",
        "However, intermediate transliteration through pinyin syllables (pinyin is the romanized representation of Chinese characters) is more accurate and easier, because the much smaller alphabet size of pinyin alleviates the data sparseness.",
        "Furthermore, pinyin and English letters share a quite similar alphabet that enables the Dynamic Programming (DP)-based string matching.",
        "Mapping Chinese characters to their pinyin syllables (e.g., \" \" to \"sa la re wo\") can be greatly facilitated by a character-pinyin mapping table, which is easy to obtain.",
        "However, mapping pinyin syllables to English string (e.g., \"sa la re wo\" to \"Sarajevo\") needs more sophisticated models, which usually require a bilingual NE list for training.",
        "To acquire an NE list, we propose an unsupervised learning approach in which NE pairs are automatically extracted from a large bilingual dictionary.",
        "DP-based string matching is iteratively applied in order to estimate the transliteration probability from pinyin to English letter sequences."
      ]
    },
    {
      "heading": "2.1 Transliteration Model Definition",
      "text": [
        "To extract NE pairs from a given bilingual dictionary D, we want to find Chinese-English NE pair (f *, e *) with highest joint probability, where f is the Chinese character sequence and e is the English word string, P (f) is the probability of generating the character sequence of the Chinese NE, and P (e I f) is the probability of transliterating the Chinese NE into an English NE.",
        "Suppose f has m characters.",
        "For i =1,2,..m , character f is transliterated into an English letter string e through the pinyin syllable y .",
        "These strings are non-overlapping.",
        "The generation process can be depicted as f E f – > y – > e E e. Here the subscript i indicates that the sub-string is transliterated from f , and it is not necessarily the i th word/letter in e .",
        "Let's assume each Chinese character is independently transliterated into an English letter string through its pinyin syllable.",
        "Considering that mappings from Chinese characters to their pinyin syllables are mostly deterministic, i.e., p(y I f ) ;z� 1, then",
        "This formula represents two levels of transliteration, Chinese character to pinyin syllable and pinyin syllable to English letter string.",
        "language model for Chinese NEs,"
      ]
    },
    {
      "heading": "2.2 DP-based Alignment and Iterative Training",
      "text": [
        "Following the derivation of the transliteration model, the next steps are how to identify letter-to-letter alignment and how to train the transliteration model and language model.",
        "Dynamic programming (DP) has been successfully applied in searching for the \"optimal\" alignment path between two strings, where \"optimal\" means the minimum accumulated editing cost between aligned word/letter pairs (the cost is usually defined as 0 if they are the same or 1 if there exists insertion, deletion or substitution errors).",
        "Since pinyin and English share a similar alphabet, the DP-based string alignment is also applicable.",
        "However, the original binary cost function is not appropriate for pronunciation-based transliteration.",
        "Now the phonetic similarity is more important than the orthographic similarity [3], therefore alignment cost between letters with similar pronunciations (e.g., \"c\" and \"k\" or \"p\" and \"b\") should be smaller.",
        "One alternative is to take the minus logarithm of the letter transliteration probability as the matching cost, i.e., the cost of aligning letter e from English and letter",
        "This cost function is defined directly from transliteration probabilities.",
        "It allows both self-transliteration and the transliteration from letters with similar pronunciations.",
        "Thus it is more general and accurate.",
        "Further more, the final accumulative alignment cost between pinyin syllables and English words also corresponds to the word/character-level transliteration cost.",
        "To calculate the alignment the transliteration model parameters have to be known, which in turn are computed based on the relevant alignment frequency, i.e.,"
      ]
    },
    {
      "heading": ",Y)is",
      "text": [
        "the frequency that e and",
        "is aligned.",
        "To resolve this interdependence between models, the original binary cost function is first applied to the DP-based string alignment.",
        "A list of bilingual NE pairs is extracted from the dictionary according to their alignment cost.",
        "Based on this initial imperfect name list, the letter transliteration model and character language model are trained, and employed for the NE joint probability estimation (see formula (1), (4) and (5)).",
        "In the following iterations, the alignment cost function as well as the transliteration probability is updated, NE pairs are selected according to their joint probabilities, and translation and language models are retrained using the cleaner NE list.",
        "Experiment results in section 4 show that an unsupervised learning approach improves the accuracy of extracted NE list by refining both translation and language models iteratively."
      ]
    },
    {
      "heading": "3. Multi-Feature Named Entity Alignment",
      "text": []
    },
    {
      "heading": "Model",
      "text": [
        "To align the NE translingual equivalence within a sentence pair, we adopt the NE alignment model which incorporates several features for cost estimation and minimizes the total cost for the given pair.",
        "These features include NE transliteration cost, word-based NE translation cost and NE tagging cost, and will be discussed in more details in the following sections."
      ]
    },
    {
      "heading": "3.1. Named Entity Transliteration Cost",
      "text": [
        "\" to \"Sarajevo\") and semantic translation of the general facility (\" \" to \"airport\").",
        "To deal with this problem, we adopted atranslation-based transliteration approach, similar to the candidate generation approach proposed by [4],.",
        "For each word in the Chinese NE candidate, its transliteration could be either pinyin or its semantic translation(s) from the bilingual dictionary, and can be aligned to any word in the English NE candidate.",
        "By way of a greedy search algorithm (detailed discussion in section 3.4), each English word is aligned to a unique Chinese word such that their transliteration cost is the minimum among the unaligned word pairs.",
        "The total NE transliteration cost is the sum of the word-to-word transliteration costs along the alignment path.",
        "Let A *denotes the \"optim�l \"alignment path, and let f ,e be the i th word in Chinese NE f and the j th word in English NE e ,respectively.",
        "Then",
        "where C(e",
        "The translation of different NE equivalences is highly type-dependent.",
        "While most PERSON and LOCATION NE equivalences can be transformed primarily through transliteration, some LOCATION and most ORGANIZATION NE equivalences are transformed by combining both semantic translation and phonetic transliteration.",
        "For example, translating a location name \" \" needs both phonetic transliteration of the specific city name (\"",
        "where y is one element in f 's transliteration candidate set E .",
        "This approach allows the alignment between any word pairs, so it is not sensitive to the word orders in NE pairs, and therefore can handle flexible combination of translation and transliteration.",
        "It is also robust to inflectional forms (e.g., the plural form of nouns) in English NEs."
      ]
    },
    {
      "heading": "3.2. Named Entity Translation Cost",
      "text": [
        "Word translation probabilities can be estimated from a parallel corpus using various well-known alignment models, such as the IBM-model and FIMM-model [8][9].",
        "They can be further used to calculate the probability that a Chinese NE is the translation of an English NE on the word level.",
        "Assume the English NE e has L English words, e e ,...e , and the Chinese NE f has J Chinese words, f f,... f .",
        "The translation probability of the named entities pair is computed using the IBM model-1, as:",
        "This alignment model is asymmetric, as one source word can only be aligned to one target word, while one target word can be aligned to multiple source words.",
        "To make it symmetric, we estimate both P(f I e ) and",
        "is composed of the sum of the bi-direction translation cost, and weighted by position match weight A .",
        "A models the \"distance\" between the relative positions of aligned NEs in each sentence.",
        "It is characterized by a normal distribution,",
        "according to the homogeneity of word orders between guages.",
        "The relative position of an English NE, p , is defined similarly.",
        "The varian",
        "where p ,the relative position of a Chinese NE covering words from w to w , is defined as two lan"
      ]
    },
    {
      "heading": "3.3. Named Entity Tagging Cost",
      "text": [
        "An NE tagging software, IdentiFinderTM, automatically tags NEs for both English and Chinese.",
        "When evaluated on the bilingual corpus, the tagging accuracy for ENAMEX type (including PERSON, LOCATION and ORGANIZATION) NEs is about 80%.",
        "Those tagging errors, including missing, spurious (false positive) and partial tagging, inevitably introduce errors into NE alignment.",
        "It would be helpful to know the confidence or the probability that a tagged word sequence is a real NE.",
        "Unfortunately, the outsourced tagger doesn't output such information.",
        "To get this information, an FIMM-based NE tagger is trained from the imperfect training corpus, i.e., the automatically tagged bilingual corpus containing incorrect NEs.",
        "Automatic named entity tagging based on"
      ]
    },
    {
      "heading": "FIMM",
      "text": [
        "has achieved satisfactory performance [2].",
        "In this framework, each type of NEs as well as the remaining type,",
        "An NE-tagged sentence is generated according to the following assumption: 1.",
        "The current NE type is selected according to the previous word and its NE type, with type transitional probability P",
        "2.",
        "The first word in a NE is generated according to the current and previous NE types, with first word generation probability P",
        "3.",
        "Each subsequent word in this NE is generated from a type-dependent bigram model, with probability P(wIw ,N).",
        "In the above notation, N and N represent the current and previous NE type respectively, w represents the first word in the current NE type, w represents the current word, and w represents the previous word.",
        "Given a sequence of words yy = (w,w,...,w) and its corresponding NE type sequence N= (N,N,...,N), the probability of generating the words from the NE type sequence is defined as",
        "N )denotes the transitional probability from w to w , given that the corresponding NE types are N and N .When the transition is within the same NE, i.e., N = N ,this is just the type-dependent bigram model P (w I w , N ) .",
        "When the transition is between different NEs, this becomes the product of type transition probability",
        "For an aligned NE pair (e , f ) , their NE types should be the same.",
        "So the NE tagging cost is defined as",
        "This criteria chooses the best NE type N from PERSON, LOCATION and ORGANIZATION that generates the Chinese and English NE word sequences with the highest probabilities.",
        "During parameter estimation, to reduce negative effect from erroneous initial tagging, the corpus is split into 2 parts, and the model is trained from one half when applied on the other half."
      ]
    },
    {
      "heading": "3.4 Multi-Feature Cost Minimization",
      "text": [
        "Provided with different alignment features, including the transliteration cost C , the translation cost C and the tagging cost C , the overall alignment cost for the NE pair (e , f ) is their linear combination: where the three A, 's are either empirically chosen to discriminate correct and incorrect NE alignments with best accuracy, or selected according to the quality/confidence of each feature model.",
        "In the current implementation, these parameters are selected to map the three weighted costs into the same numerical range while putting a little less confidence on C (since it is trained from imperfect training data).",
        "For any bilingual sentence pair containing multiple NEs, the desirable alignment scheme should minimize the sum of the overall alignment cost.",
        "To find this optimal alignment, an algorithm similar to the competitive linking algorithm [10] is adopted:",
        "1.",
        "Initialize NE Aligned to be an empty set and NE",
        "Pairs as the list of all possible combinations of a source language NE and a target language NE in the given sentence pair;",
        "2.",
        "Sort NE-Pairs in ascending order according to their overall alignment cost defined in Formula (15); 3.",
        "Move the topmost pair (e , f ) , i.e. the pair with the smallest alignment cost from NE-Pairs to NE-Aligned; 4.",
        "Remove all entries containing either e or f from",
        "NE-Pairs, with the assumption that once a Chinese NE is aligned with an English NE, it can't be aligned with any other English NE.",
        "The same is true for English NEs;",
        "5.",
        "Repeat from Step 3 until NE-Pairs is empty or the top alignment cost is above a certain threshold.",
        "The resultant NE Aligned leads to the \"optimal\" alignment.",
        "Note that this algorithm is based on a greedy search approximation, i.e., it only chooses the local optimal alignment – the currently minimum cost alignment pair among unaligned pairs – at each step, it cannot guarantee the global optimality.",
        "But empirically it often finds the alignment with minimum or close to minimum sentence alignment cost."
      ]
    },
    {
      "heading": "3.5 Open-End NE Alignment",
      "text": [
        "When applying extracted NE equivalences to the statistical machine translation task (see section 4.3), the translation score is improved.",
        "Detailed analysis shows that initial tagging errors still cause many problems for NE translation.",
        "Some NEs in the test data are not translated correctly because they are untagged, partially tagged or tagged with other words as one NE in the training corpus.",
        "For example,",
        "To recover from those partial tagging errors, an open-end NE alignment window is utilized.",
        "The window is initially set to fit the originally tagged NEs, afterwards both ends of the window are allowed to expand and shrink within a given range.",
        "As a result, optimal aligned NEs are searched from all word sequences within the resultant variable-length sliding window.",
        "4.",
        "Experiment Result and Discussion 4.1 Named Entity Transliteration",
        "e Three sets of experiments are conducted.",
        "The first one is to evaluate the proposed iterative training for the NE transliteration model by examining the accuracy of the extracted NE lists.",
        "The second is to measure the precision/recall of NE pair extracted from a small data set, and the third is to assess the increased translation quality by adding the NE bilingual dictionary.",
        "The",
        "bilingual dictionary used to train the transliteration model is the Chinese-English dictionary version 3.1 released by the Linguistic Data Consortium (LDC).",
        "This dictionary contains 81,945 entries for 54,131 unique Chinese words.",
        "Initially we extracted 3,000 NE pairs with minimum string matching cost under a 0/1 cost function.",
        "From this small name list, the letter transliteration model and Chinese character language model are trained and integrated into the statistical transliteration framework.",
        "In the following extraction iteration, additional 500 named entity pairs with higher NE joint probabilities are added and used to update the transliteration model and the language model.",
        "This process continues until adding more NE pairs doesn't improve the extraction accuracy any more, which usually happens at the 6 iteration where a total of 5,500�6,000 NE entries are included.",
        "Because NE pairs are sorted descendingly according to their joint probabilities, entries at the top of the sorted list are more likely to be NE pairs than those at the bottom.",
        "To estimate the overall accuracy for all extracted NEs, we evaluate the \"local\" accuracy of evenly distributed segments in the sorted NE pair list.",
        "In other word we count the number of correct NE pairs for each segment located at the 0-100 , 900 -1000 , 1900 – 2000 NE pair, etc..",
        "The precision evaluated on these sub-samples is used to estimate the overall accuracy.",
        "Figure 1 shows the precision curve after selected iterations at different evaluation segments.",
        "\"0/1 baseline\" represents the result when using only DP string matching with the 0/1 cost function.",
        "\"Itex\" means the result after the xth iteration.",
        "One can see that for well-trained models (after the 4 iteration) the accuracy of the evaluation segment at 5000 just slightly degrades compared with those top segments.",
        "The precisions of all the segments are consistently increased after each iteration.",
        "One can see that the most significant accuracy degradation happens at the 6000 segment.",
        "This indicates that most NE pairs in the dictionary have already been included, and adding more non-NE entries will \"pollute\" the transliteration model, thus the performance can become even worse."
      ]
    },
    {
      "heading": "4.2 Extracting Named Entity Translingual Equivalence",
      "text": [
        "The bilingual corpus contains sentence-aligned newswire data from the Xinhua News Agency and the Foreign Broadcast Information Service (FBIS).",
        "Some bilingual sentence pairs are automatically extracted and aligned, therefore there exist errors in both alignment and translation.",
        "The Chinese sentences are pre-segmented using a maximum-matching segmenter with a 44K wordlist.",
        "Totally there are 152,391 sentence pairs, about 6 million English words and 5.5 million Chinese words.",
        "Named entities in the bilingual corpus are first annotated using BBN's IdentiFinderTM, then aligned according to the multi-feature cost minimization framework.",
        "For the purpose of evaluation, a small set of test data is randomly selected, which contains 100 sentence pairs, 4950 Chinese words and 5646 English words.",
        "The number of named entity pairs which can be aligned is 357.",
        "These named entities are manually annotated and aligned, and used as the gold standard to evaluate the automatically extracted and aligned NE pairs.",
        "Table 1 shows the precision/recall/F-score using different feature sets for cost minimization.",
        "\" C \" means using word-level translation cost only, \"+ C \" means adding NE tagging cost, \"+ C \" means adding NE transliteration cost into the previous feature set.",
        "It can be seen that by adding more information, both precision and recall are improved.",
        "Tagging cost and transliteration cost individually lead to about 3% increase in F-score and the overall improvement is about 6.8%.",
        "The last row shows the NE alignment accuracy on manually annotated test data, where all tagging errors have been corrected.",
        "The significant improvement in F-score (81.3% to 93.7%) indicates that initial tagging errors remain the major cause of alignment errors.",
        "Figure 2 demonstrates some examples of extracted NE translation equivalences from the given sentence pairs, when applying various models.",
        "In each example NE pairs with the same number label (e.g., C1 and E1) are considered correct alignment.",
        "One can see from example 1 that the proposed alignment strategy can correctly align most NE pairs, even with NE translation cost only.",
        "Those incorrect alignments, marked by (*), are caused either by missed NE tagging or non-exact translations.",
        "When adding tagging cost, some missed NEs could be recovered and correctly aligned (See example 2).",
        "Example 3 shows that the transliteration model works best for NEs containing people's name."
      ]
    },
    {
      "heading": "4.3 Improving Translation Quality with Named Entity Dictionary",
      "text": [
        "A NE translation dictionary can be constructed from extracted NE equivalences.",
        "In the dictionary one Chinese NE may have multiple English translations with different probabilities.",
        "These probabilities are proportional to the frequencies of the NE alignments.",
        "This dictionary is integrated into a statistical machine translation (SMT) engine and evaluated on Chinese-English newswire translation.",
        "The SMT system is based on weighted finite state transducers [11], where each transducer is a collection of bilingual equivalence for words, phrases or NEs.",
        "In our experiment, three transducers are integrated into the translation engine,",
        "• A word level transducer, which is essentially from the LDC Chinese-English dictionaries (see Section 4.1).",
        "Since many entries in this dictionary are manually compiled, this dictionary has very high accuracy.",
        "It is called \"LDC\" in table 2.",
        "• A phrase-to-phrase transducers where the phrase pairs are extracted from the HMM Viterbi alignment [9] for each sentence pair in the bilingual corpus.",
        "It is called \"HMM\" in table 2.",
        "• A NE transducer from the NE translation dictionary, the \"NE\" in table 2.",
        "The evaluation data is the same newswire data used in TIDES 2001 dry-run evaluation.",
        "It contains 993 sentences, 24,821 words.",
        "From this data set the IdentiFinderTM extracted 2,379 NEs with totally 3,597 words.",
        "Evaluation metrics are fully automatic, including Bleu and NIST8 scores.",
        "Table 2 shows the improvement on translation score after adding the NE transducer to various transducer settings.",
        "From the table we can see that the NE transducer gives statistically significant improvement in all the settings, although the amount of improvement varies from 0.06 to 0.45.",
        "This is because there are some overlaps between the NE transducer and the HMM phrase transducer."
      ]
    },
    {
      "heading": "5. Conclusion",
      "text": [
        "We proposed an approach to the automatic extraction of named entity translation equivalence from a parallel Chinese/English corpus based on multi-feature cost minimization.",
        "We presented a named entity transliteration model and iteratively extracted named entities from a bilingual dictionary to train the model.",
        "The NE transliteration cost, the NE tagging cost and word-based translation cost constitute the multi-feature alignment cost.",
        "These features are derived from several information sources using unsupervised and partly supervised methods.",
        "Experiments showed that the proposed approach can extract NE translingual equivalence with 81% in terms of F-score and significantly improved the translation score from 7.68 to 7.74."
      ]
    },
    {
      "heading": "6. Acknowledgement",
      "text": [
        "We cordially thank the anonymous reviewers for their valuable comments and suggestions in order to prepare the final version of this paper.",
        "We also thank BBN for providing us with their named entity tagging software IdentiFinderTM."
      ]
    },
    {
      "heading": "7. References",
      "text": []
    }
  ]
}
