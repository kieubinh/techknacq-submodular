{
  "info": {
    "authors": [
      "Isao Goto",
      "Naoto Katoh",
      "Terumasa Ehara",
      "Hideki Tanaka"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C04-1119",
    "title": "Back Transliteration from Japanese to English Using Target English Context",
    "url": "https://aclweb.org/anthology/C04-1119",
    "year": 2004
  },
  "references": [
    "acl-J98-4003",
    "acl-P98-1036",
    "acl-W02-2017",
    "acl-W98-1005"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper proposes a method of automatic back transliteration of proper nouns, in which a Japanese transliterated-word is restored to the original English word.",
        "The English words are created from a sequence of letters; thus our method can create new English words that are not registered in dictionaries or English word lists.",
        "When a katakana character is converted into English letters, there are various candidates of alphabetic characters.",
        "To ensure adequate conversion, the proposed method uses a target English context to calculate the probability of an English character or string corresponding to a Japanese katakana character or string.",
        "We confirmed the effectiveness of using the target English context by an experiment of personal-name back transliteration."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "In transliteration, a word in one language is converted into a character string of another language expressing how it is pronounced.",
        "In the case of transliteration into Japanese, special characters called katakana are used to show how a word is pronounced.",
        "For example, a personal name and its transliterated word are shown below.",
        "(ka ni n ga mu) Here, the italic alphabets are romanized Japanese katakana characters.",
        "New transliterated words such as personal names or technical terms in katakana are not always listed in dictionaries.",
        "It would be useful for cross-language information retrieval if these words could be automatically restored to the original English words.",
        "Back transliteration is the process of restoring transliterated words to the original English words.",
        "Here is a problem of back transliteration.",
        "[Back transliteration] ?",
        "クラッチフィールド (English word) (ku ra cchi fi – ru do) There are many ambiguities to restoring a transliterated katakana word to its original English word.",
        "For example, should \"a\" in \"ku ra cchi fi – ru do\" be converted into the English letter of \"a\" or \"u\" or some other letter or string?",
        "Trying to resolve the ambiguity is a difficult problem, which means that back transliteration to the correct English word is also difficult.",
        "Using the pronunciation of a dictionary or limiting output English words to a particular English word list prepared in advance can simplify the problem of back transliteration.",
        "However, these methods cannot produce a new English word that is not registered in a dictionary or an English word list.",
        "Transliterated words are mainly proper nouns and technical terms, and such words are often not registered.",
        "Thus, a back transliteration framework for creating new words would be very useful.",
        "A number of back transliteration methods for selecting English words from an English pronunciation dictionary have been proposed.",
        "They include Japanese-to-English (Knight and Graehl, 1998)1, Arabic-to-English (Stalls and Knight,",
        "1998), and Korean-to-English (Lin and Chen, 2002).",
        "There are also methods that select English words from an English word list, e.g., Japanese-to-English (Fujii and Ishikawa, 2001) and Chinese-to-English (Chen et al., 1998).",
        "Moreover, there are back transliteration methods capable of generating new words, there are some methods for back transliteration from Korean to English (Jeong et al., 1999; Kang and Choi, 2000).",
        "These previous works did not take the target English context into account for calculating the plausibility of matching target characters with the source characters.",
        "This paper presents a method of taking the target English context into account to generate an English word from a Japanese katakana word.",
        "Our character-based method can produce new English words that are not listed in the learning corpus.",
        "This paper is organized as follows.",
        "Section 2 describes our method.",
        "Section 3 describes the experimental set-up and results.",
        "Section 4 discusses the performance of our method based on the experimental results.",
        "Section 5 concludes our research."
      ]
    },
    {
      "heading": "2 Proposed Method",
      "text": []
    },
    {
      "heading": "2.1 Advantage of using English context",
      "text": [
        "First we explain the difficulty of back transliteration without a pronunciation dictionary.",
        "Next, we clarify the reason for the difficulty.",
        "Finally, we clarify the effect using English context in back transliteration.",
        "In back transliteration, an English letter or string is chosen to correspond to a katakana character or string.",
        "However, this decision is difficult.",
        "For example, there are cases that an English letter \"u\" corresponds to \"a\" of katakana, and there are cases that the same English letter \"u\" does not correspond to the same \"a\" of katakana.",
        "\"u\" in Cunningham corresponds to \"a\" in katakana and \"u\" in Bush does not correspond to \"a\" in katakana.",
        "It is difficult to resolve this ambiguity without the pronunciation registered in a dictionary.",
        "The difference in correspondence mainly comes from the difference of the letters around the English letter \"u.\" The correspondence of an English letter or string to a katakana character or string varies depending on the surrounding characters, i.e., on its English context.",
        "Thus, our back transliteration method uses the target English context to calculate the probability of English letters corresponding to a katakana character or string."
      ]
    },
    {
      "heading": "2.2 Notation and conversion-candidate lattice",
      "text": [
        "We formulate the word conversion process as a unit conversion process for treating new words.",
        "Here, the unit is one or more characters that form a part of characters of the word.",
        "A katakana word, K, is expressed by equation 2.1 with \"^\" and \"$\" added to its start and end, respectively.",
        "where kj is the j-th character in the katakana word, and m is the number of characters except for \"^\" and \"$\" and ko +l is a character string from k0 to km+1.",
        "We use katakana units constructed of one or more katakana characters.",
        "We denote a katakana unit as ku.",
        "For any ku, many English units, eu, could be corresponded as conversion-candidates.",
        "The ku's and eu's are generated using a learning corpus in which bilingual words are separated into units and every ku unit is related an eu unit.",
        "L {E} denotes the lattice of all eu's corresponding to ku's covering a Japanese word.",
        "Every eu is a node of the lattice and each node is connected with next nodes.",
        "L {E} has a lattice structure starting from \"^\" and ending at \"$.\" Figure 1 shows an example of L {E} corresponding to a katakana word \" キル シ ュ シ ュ タ イ ン (ki ru shu shu ta i n).\" In the figure, each circle represents one eu.",
        "A character string linking individual character units in the paths pd ∈ (p 1,p2,.., pq) between \"^\" and \"$\" in L {E} becomes a conversion candidate, where q is the number of paths between \"^\" and \"$\" in L{E}.",
        "We get English word candidates by joining eu's from \"^\" to \"$\" in L{E}.",
        "We select a certain path, pd, in L{E} .",
        "The number of character units",
        "except for \"^\" and \"$\" in pd is expressed as n(pd) .",
        "The character units in pd are numbered from start to end.",
        "The English word, E, resulting from the conversion of a katakana word, K, for pd is expressed as follows:",
        "where ej is the j-th character in the English word.",
        "l(p d) is the number of characters except for \"^\" and \"$\" in the English word.",
        "euQ(Pd)+' for each pd in G {E} in equation 2.4 becomes the candidate English word.",
        "kuo (Pd)+1 in equation 2.3 shows the sequence of katakana units."
      ]
    },
    {
      "heading": "2.3 Probability models using target English context",
      "text": [
        "To determine the corresponding English word for a katakana word, the following equation 2.6 must be calculated:",
        "Here, Eˆ represents an output result.",
        "To use the English context for calculating the matching of an English unit with a katakana unit, the above equation is transformed into Equation 2.7 by using Bayes’ theorem.",
        "Equation 2.7 contains a translation model in which an English word is a condition and katakana is a result.",
        "The word in the translation model P(K |E ) in Equation 2.7 is broken down into character units by using equations 2.3 and 2.4.",
        "o(Pd)+1 includes information of E. K is only eu affected by kuo(pd)+1 .",
        "Thus equation 2.8 can be rewritten as follows:",
        "kuo(Pd)+1 is the same, and the strings of the kuo(Pd)+1 of all paths in the lattice and the string of the K is the same.",
        "Thus, p(Klku0n(Pd)+1) is always 1.",
        "We approximate the sum of paths by selecting the maximum path.",
        "We show an instance of each probability model with a concrete value as follows:",
        "We broke down the language model P(E ) in equation 2.10 into letters.",
        "Here, a is a constant.",
        "Equation 2.11 is an (a+1)-gram model of English letters.",
        "Next, we approximate the translation model",
        "proposed approximation technique (Goto et al., 2003).",
        "The outline of the technique is shown as follows.",
        "where start(i) is the first position of the i-th character unit eui, while end(i) is the last position of the i-th character unit eui; and b is a constant.",
        "Equation 2.12 takes English context estart(i)−1 and q g start(i)−b eend(i)+ 1 into account.",
        "Next, the chunking model P(eu0(pd)+1 |E) is transformed.",
        "All chunking patterns of E = eo(pd)+1 into eu0(Pd)+1 are denoted by each l(pd)+1 point between l(pd)+2 characters that serve or do not serve as delimiters.",
        "eu0 and eu n(pd)+1 are determined in advance.",
        "l(pd)-1 points remain ambiguous.",
        "We represent the value that is delimiter or is non-delimiter between ej and ej+1 by zj.",
        "We call the zj delimiter distinction.",
        "z delimiter = (2.13) non-delimiter Here, we show an example of English units using zj.",
        "In this example, a delimiter of zj is represented by 1 and a non-delimiter is represented by 0.",
        "The chunking model is transformed into a processing per character by using zj.",
        "And we reduce the condition.",
        "The conditional information of the English ejj±c is as many as c characters and 1 character before and after zj, respectively.",
        "The conditional information of z�j=c−1 is as many as c+1 delimiter distinctions before zj.",
        "By using equation 2.11, 2.12, and 2.14, equation 2.10 becomes as follows:"
      ]
    },
    {
      "heading": "2.4 Beam search solution for context sensitive grammar",
      "text": [
        "Equation 2.15 includes context-sensitive grammar.",
        "As such, it can not be carried out efficiently.",
        "In decoding from the head of a word to the tail, eend(i)+1 in equation 2.15 becomes context-sensitive.",
        "Thus we try to get approximate results by using a beam search solution.",
        "To get the results, we use dynamic programming.",
        "Every node of eu in the lattice keeps the N-best results evaluated by using a letter of eend(i)+1 that gives the maximum probability in the next letters.",
        "When the results of next node are evaluated for selecting the N-best, the accurate probabilities from the previous nodes are used."
      ]
    },
    {
      "heading": "2.5 Learning probability models based on the maximum entropy method",
      "text": [
        "The probability models are learned based on the maximum entropy method.",
        "This makes it possible to prevent data sparseness relating to the model as well as to efficiently utilize many conditions, such as context, simultaneously.",
        "We use the Gaussian Prior (Chen and Rosenfeld, 1999) smoothing method for the language model.",
        "We use one Gaussian variance.",
        "We use the value of the Gaussian variance that minimizes the test set's perplexity.",
        "The feature functions of the models based on the maximum entropy method are defined as combinations of letters.",
        "In addition, we use vowel, consonant, and semi-vowel classes for the translation model.",
        "We manually define the combinations of the letter positions such as ej and ej-1.",
        "The feature functions consist of the letter combinations that meet the combinations of the letter positions and are observed at least once in the learning data."
      ]
    },
    {
      "heading": "2.6 Corpus for learning",
      "text": [
        "A Japanese-English word list aligned by unit was used for learning the translation model and the chunking model and for generating the lattice of conversion candidates.",
        "The alignment was done by semi-automatically.",
        "A romanized katakana character usually corresponds to one or several English letters or strings.",
        "For example, a romanized katakana character \"k\" usually corresponds to an English letter \"c,\" \"k,\" \"ch,\" or \"q.\" With such heuristic rules, the Japanese-English word corpus could be aligned by unit and the alignment errors were corrected manually."
      ]
    },
    {
      "heading": "3 Experiment",
      "text": []
    },
    {
      "heading": "3.1 Learning data and test data",
      "text": [
        "We conducted an experiment on back transliteration using English personal names.",
        "The learning data used in the experiment are described below.",
        "The Dictionary of Western Names of 80,000 People2 was used as the source of the Japanese-English word corpus.",
        "We chose the names in alphabet from A to Z and their corresponding katakana.",
        "The number of distinct words was 39,830 for English words and 39,562 for katakana words.",
        "The number of English-katakana pairs was 83,0573.",
        "We related the alphabet and katakana character units in those words by using the method described in section 2.6.",
        "We then used the corpus to make the translation and the chunking models and to generate a lattice of conversion candidates.",
        "The learning of the language model was carried out using a word list that was created by merging two word lists: an American personal",
        "name list4, and English head words of the Dictionary of Western Names of 80,000 people.",
        "The American name list contains frequency information for each name; we also used the frequency data for the learning of the language model.",
        "A test set for evaluating the value of the Gaussian variance was created using the American name list.",
        "The list was split 9:1, and we used the larger data for learning and the smaller data for evaluating the parameter value.",
        "The test data is as follows.",
        "The test data contained 333 katakana name words of American Cabinet officials, and other high-ranking officials, as well as high-ranking governmental officials of Canada, the United Kingdom, Australia, and New Zealand (listed in the World Yearbook 2002 published by Kyodo News in Japan).",
        "The English name words that were listed along with the corresponding katakana names were used as answer words.",
        "Words that included characters other than the letters A to Z were excluded from the test data.",
        "Family names and First names were not distinguished."
      ]
    },
    {
      "heading": "3.2 Experimental models",
      "text": [
        "We used the following methods to test the individual effects of each factor of our method.",
        "• Method A",
        "Used a model that did not take English context into account.",
        "The plausibility is expressed as follows:",
        "• Method B",
        "Used our language model and a translation model that did not consider English context.",
        "The constant a = 3 in the language model.",
        "The plausibility is expressed as follows:",
        "• Method C",
        "Applied our chunking model to method B, with c = 3 in the chunking model.",
        "The plausibility is expressed as follows:",
        "• Method D",
        "Used our translation model that considered English context, but not the chunking model.",
        "b = 3 in the translation model.",
        "The plausibility is expressed as follows:",
        "• Method E",
        "Used our language model, translation model, and chunking model.",
        "The plausibility is expressed as follows:"
      ]
    },
    {
      "heading": "3.3 Results",
      "text": [
        "Table 1 shows the results of the experiment5 on back transliteration from Japanese katakana to English.",
        "The conversion was determined to be successful if the generated English word agreed perfectly with the English word in the test data.",
        "Table 2 shows examples of back transliterated words."
      ]
    },
    {
      "heading": "4 Discussion",
      "text": [
        "The correct-match ratio of the method E for the first-ranked words was 66%.",
        "Its correct-match ratio for words up to the 10th rank was 87%.",
        "Regarding the top 1 ranked words, method B that used a language model increase the ratio 33- points from method A that did not use a language model.",
        "This demonstrates the effectiveness of the language model.",
        "Also for the top 1 ranked words, method C which adopted the chunking model increase the ratio 4-points from method B that did not adopt the chunking model in the top 1 ranked words.",
        "This indicates the effectiveness of the chunking model.",
        "Method D that used a translation model taking English context into account had a ratio 5-points higher in top 1 ranked words than that of method B that used a translation model not taking English context into account.",
        "This demonstrates the effectiveness of the language model.",
        "Method E gave the best ratio.",
        "Its ratio for the top 1 ranked word was 42-points higher than method A's.",
        "These results demonstrate the effectiveness of using English context for back transliteration."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "This paper described a method for Japanese to English back transliteration.",
        "Unlike conventional methods, our method uses a target English context to calculate the plausibility of matching between English and katakana.",
        "Our method can treat English words that do not exist in learning data.",
        "We confirmed the effectiveness of our method in an experiment using personal names.",
        "We will apply this technique to cross-language information retrieval."
      ]
    }
  ]
}
