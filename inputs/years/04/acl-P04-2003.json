{
  "info": {
    "authors": [
      "Martin Holub",
      "Jiri Semecky",
      "Jiri Divis"
    ],
    "book": "Annual Meeting of the Association for Computational Linguistics – Student Research Workshop",
    "id": "acl-P04-2003",
    "title": "Searching for Topics in a Large Collection of Texts",
    "url": "https://aclweb.org/anthology/P04-2003",
    "year": 2004
  },
  "references": [
    "acl-A00-2013"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We describe an original method that automatically finds specific topics in a large collection of texts.",
        "Each topic is first identified as a specific cluster of texts and then represented as a virtual concept, which is a weighted mixture of words.",
        "Our intention is to employ these virtual concepts in document indexing.",
        "In this paper we show some preliminary experimental results and discuss directions of future work."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "In the field of information retrieval (for a detailed survey see e.g. (Baeza-Yates and Ribeiro-Neto, 1999)), document indexing and representing documents as vectors belongs among the most successful techniques.",
        "Within the framework of the well known vector model, the indexed elements are usually individual words, which leads to high dimensional vectors.",
        "However, there are several approaches that try to reduce the high dimensionality of the vectors in order to improve the effectivity of retrieving.",
        "The most famous is probably the method called Latent Semantic Indexing (LSI), introduced by Deerwester et al.",
        "(1990), which employs a specific linear transformation of original word-based vectors using a system of “latent semantic concepts”.",
        "Other two approaches which inspired us, namely (Dhillon and Modha, 2001) and (Torkkola, 2002), are similar to LSI but different in the way how they project the vectors of documents into a space of a lower dimension.",
        "Our idea is to establish a system of “virtual concepts”, which are linear functions represented by vectors, extracted from automatically discovered “concept-formative clusters” of documents.",
        "Shortly speaking, concept-formative clusters are semantically coherent and specific sets of documents, which represent specific topics.",
        "This idea was originally proposed by Holub (2003), who hypothesizes that concept-oriented vector models of documents based on indexing virtual concepts could improve the effectiveness of both automatic comparison of documents and their matching with queries.",
        "The paper is organized as follows.",
        "In section 2 we formalize the notion of concept-formative clusters and give a heuristic method of finding them.",
        "Section 3 first introduces virtual concepts in a formal way and shows an algorithm to construct them.",
        "Then, some experiments are shown.",
        "In sections 4 we compare our model with another approach and give a brief survey of some open questions.",
        "Finally, a short summary is given in section 5."
      ]
    },
    {
      "heading": "2 Concept-formative clusters",
      "text": []
    },
    {
      "heading": "2.1 Graph of a text collection",
      "text": [
        "Let C = {dl, d2,.",
        ".. , dN} be a collection of text documents; N is the size of the collection.",
        "Now suppose that we have a function sim(d27 dj) _ sim(dj, d2) c (0, 1), which gives a degree of document similarity for each pair of documents.",
        "Then we represent the collection as a graph.",
        "(i.e. a threshold weight of edge).",
        "Now we introduce some terminology and necessary notation.",
        "Let G = (C, E) be a graph of collection C. Each subset X C C is called a cut of G;",
        "1 stands for the complement C \\ X.",
        "If A, B C C are disjoint cuts then • e(A) = {e I e E E n e C A} is a set of edges within cut A; • w(A) _ &C,(A) w(e) is called weight of cut A; • e(A, B) = e(A U B) \\ (e(A) U e(B)) is a set of edges between cuts A and B; • w(A, B) = EeEe(A,․) w(e) is called weight of the connection between cuts A and B; • w = w(C) / (2) is the expected weight of edge in graph G; • w (X) = w (x2 1) is the expected weight of cut X; • w(X,X) = w•JXJ•(N – JXJ) isthe expected weight of the connection between cut X and the rest of the collection; • each cut X naturally splits the collection into",
        "three disjoint subsets C = X U YX U RX where YX = {y E C \\ X I e({ y}, X) :7� 01 andRX =C\\ (X UYX)."
      ]
    },
    {
      "heading": "2.2 Quality of cuts",
      "text": [
        "Now we formalize the property of “being concept-formative” by a positive real function called quality of cut.",
        "A high value of quality means that a cut must be specific and extensive.",
        "A cut X is called specific if (i) the weight w(X) is relatively high and (ii) the connection between X and the rest of the collection w(X,X) is relatively small.",
        "The first property is called compactness of cut, and is defined as Com(X) = w(X)/w(X), while the other is called exhaustivity of cut, which is defined as",
        "are positive.",
        "Thus, the specificity of cut X can be formalized by the following formula",
        "are used for balancing the two factors.",
        "The extensity of cut X is defined as a positive function Ext(X) = logte.t JXJ where te,t is a threshold size of cut.",
        "Definition: The total quality of cut Q (X) is a positive real function composed of all factors mentioned above and is defined as",
        "where the three lambdas are parameters whose purpose is balancing the three factors.",
        "To be concept-formative, a cut (i) must have a sufficiently high quality and (ii) must be locally optimal."
      ]
    },
    {
      "heading": "2.3 Local optimization of cuts",
      "text": [
        "A cut X C C is called locally optimal regarding quality function Q if each cut X' C C which is only a small modification of the original X does not have greater quality, i.e. Q(X') < Q(X).",
        "Now we describe a local search procedure whose purpose is to optimize any input cut X; if X is not locally optimal, the output of the LocalSearch procedure is a locally optimal cut X* which results from the original X as its local modification.",
        "First we need the following definition:"
      ]
    },
    {
      "heading": "Definition: Potential of document d E C with re",
      "text": [
        "spect to cut X C C is a real function",
        "The LocalSearch procedure is described in Fig. 1.",
        "Note that",
        "1.",
        "LocalSearch gradually generates a sequence of cuts X (°) , X (1 ) , X (2) , ... so that",
        "(i) Q(X(2-1)) < Q(X(')) for i > 1, and (ii) cut X M always arises from X(' – ') by adding or taking away one document into/from it; 2. since the quality of modified cuts cannot increase infinitely, a finite k > 0 necessarily exists so that X(k) is locally optimal and consequently the program stops at least after the k-th iteration; 3. each output cut X* is locally optimal.",
        "Now we are ready to precisely define concept-formative clusters: Definition: A cut X C C is called a concept-formative cluster if",
        "(i) Q(X) > Qt where Qt is a threshold quality and (ii) X = X* where X* is the output of the",
        "LocalSearch algorithm.",
        "The whole procedure for finding concept-formative clusters consists of two basic stages: first, a set of initial cuts is found within the whole collection, and then each of them is used as a seed for the Local _Search algorithm, which locally optimizes the quality function Q.",
        "Note that Ai, A2, A3 are crucial parameters, which strongly affect the whole process of searching and consequently also the character of resulting concept-formative clusters.",
        "We have optimized their values by a sort of machine learning, using a small manually annotated collection of texts.",
        "When optimized A-parameters are used, the LocalSearch procedure tries to simulate the behavior of human annotator who finds topically coherent clusters in a training collection.",
        "The task of A-optimization leads to a system of linear inequalities, which we solve via linear programming.",
        "As there is no scope for this issue here, we cannot go into details."
      ]
    },
    {
      "heading": "3 Virtual concepts",
      "text": [
        "In this section we first show that concept-formative clusters can be viewed as fuzzy sets.",
        "In this sense, each concept-formative cluster can be characterized by a membership function.",
        "Fuzzy clustering allows for some ambiguity in the data, and its main advantage over hard clustering is that it yields much more detailed information on the structure of the data (cf. (Kaufman and Rousseeuw, 1990), chapter 4).",
        "Then we define virtual concepts as linear functions which estimate degree of membership of documents in concept-formative clusters.",
        "Since virtual concepts are weighted mixtures of words represented as vectors, they can also be seen as virtual documents representing specific topics that emerge in the analyzed collection.",
        "Definition: Degree of membership of a document d E C in a concept-formative cluster X C C is a function M(d, X): C x P(C) i--� R. For d E XUYX we define M(d, X) = exp(aP(d, X)) where a > 0 is a constant.",
        "For d E RX we define",
        "The following holds true for any concept",
        "-formative cluster X and any document d: • M(d,X)>1iffdEX; • M(d,X) E (0, 1) iffd E YX.",
        "Now we formalize the notion of virtual concepts.",
        "Let dl, d2, ... , dN E Rm be vector representations of documents dl, d2, ... , dN, where",
        "Input: n pairs (di, M(di )), ... , (dn, M(dn)) where dl, ... , dm, E RT11;",
        "such a vector cX E Rm so that cX • di ,:t M(d27 X) approximately holds for any i E { 1, ... , N}.",
        "This vector cX is then called virtual concept corresponding to concept-formative cluster X.",
        "The task of finding virtual concepts can be solved using the Greedy Regression Algorithm (GRA), originally suggested by Semeck´y (2003)."
      ]
    },
    {
      "heading": "3.1 Greedy Regression Algorithm",
      "text": [
        "The GRA is directly based on multiple linear regression (see e.g. (Rice, 1994)).",
        "The GRA works in iterations and gradually increases the number of non-zero elements in the resulting vector, i.e. the number of words with non-zero weight in the resulting mixture.",
        "So this number can be explicitly restricted by a parameter.",
        "This feature of the GRA has been designed for the sake of generalization, in order to not overfit the input sample.",
        "The input of the GRA consists of (i) a sample set of document vectors with the corresponding values of M(d, X), (ii) a maximum number of non-zero elements, and (iii) an error threshold.",
        "The GRA, which is described in Fig. 2, requires a procedure for solving multiple linear regression (MLR) with a limited number of non-zero elements in the resulting vector.",
        "Formally,",
        "• a set of n vectors xj E Rm; • a corresponding set of n values yj E R to be approximated; and • a set of indexes J C { 1, ... , m} of the ele",
        "ments which are allowed to be non-zero in the output vector.",
        "The output of the MLR is a vector",
        "Implementation and time complexity For solving multiple linear regression we use a public-domain Java package JAMA (2004), developed by the MathWorks and NIST.",
        "The computation of inverse matrix is based on the LU decomposition, which makes it faster (Press et al., 1992).",
        "As for the asymptotic time complexity of the GRA, it is in O(k • m • complexityoftheMLR) since the outer loop runs k times at maximum and the inner loop always runs nearly m times.",
        "The MLR substantially consists of matrix multiplications in dimension n x k and a matrix inversion in dimension k x k. Thus the complexity of the",
        "To reduce this high computational complexity, we make a term pre-selection using a heuristic method based on linear programming.",
        "Then, the GRA does not need to deal with high-dimensional vectors in Rm, but works with vectors in dimension m' « m. Although the acceleration is only linear, the required time has been reduced more than ten times, which is practically significant."
      ]
    },
    {
      "heading": "3.2 Experiments",
      "text": [
        "The experiments reported here were done on a small experimental collection of N = 39,667 Czech documents.",
        "The texts were articles from two different newspapers and one journal.",
        "Each document was morphologically analyzed and lem-matized (Hajiˇc, 2000) and then indexed and represented as a vector.",
        "We indexed only lemmas of nouns, adjectives, verbs, adverbs and numerals whose document frequency was greater than 10 and less than 20, 000.",
        "Then the number of indexed terms was m = 35, 393.",
        "The cosine similarity was used to compute the document similarity; threshold was wt = 0.3.",
        "There were 472,427 edges in the graph of the collection.",
        "We had computed a set of concept-formative clusters and then approximated the corresponding membership functions by virtual concepts.",
        "The first thing we have observed was that the quadratic residual error systematically and progre-sivelly decreases in each GRA iteration.",
        "Moreover, the words in virtual concepts are obviously intelligible for humans and strongly suggest the topic.",
        "An example is given in Table 1.",
        "Another example is cluster #19 focused on “pension funds”, which was approximated (k = 20) by the following words (literally translated):",
        "(The signs after the words indicate their positive or negative weights in the concept.)",
        "Figure 3 shows the approximation of this cluster by virtual concept."
      ]
    },
    {
      "heading": "4 Discussion 4.1 Related work",
      "text": [
        "A similar approach to searching for topics and employing them for document retrieval has been recently suggested by Xu and Croft (2000), who, however, try to employ the topics in the area of distributed retrieval.",
        "They use document clustering, treat each cluster as a topic, and then define topics as probability distributions of words.",
        "They use the Kullback-Leibler divergence with some modification as a distance metric to determine the closeness of a document to a cluster.",
        "Although our virtual concepts cannot be interpreted as probability distributions, in this point both approaches are quite similar.",
        "The substantial difference is in the clustering method used.",
        "Xu and Croft have chosen the K-Means algorithm, “for its efficiency”.",
        "In contrast to this hard clustering algorithm, (i) our method is consistently based on empirical analysis of a text collection and does not require an a priori given number of topics; (ii) in order to induce permeable topics, our concept-formative clusters are not disjoint; (iii) the specificity of our clusters is driven by training samples given by human.",
        "Xu and Croft suggest that retrieval based on topics may be more robust in comparison with the classic vector technique: Document ranking against a query is based on statistical correlation between query words and words in a document.",
        "Since a document is a small sample of text, the statistics in a document are often too sparse to reliably predict how likely the document is relevant to a query.",
        "In contrast, we have much more texts for a topic and the statistics are more stable.",
        "By excluding clearly unrelated topics, we can avoid retrieving many of the non-relevant documents."
      ]
    },
    {
      "heading": "4.2 Future work",
      "text": [
        "As our work is still in progress, there are some open questions, which we will concentrate on in the near future.",
        "Three main issues are (i) evaluation, (ii) parameters setting (which is closely connected to the previous one), and (iii) an effective implementation of crucial algorithms (the current implementation is still experimental).",
        "As for the evaluation, we are building a manually annotated test collection using which we want to test the capability of our model to estimate inter-document similarity in comparison with the classic vector model and the LSI model.",
        "So far, we have been working with a Czech collection for we also test the impact of morphology and some other NLP methods developed for Czech.",
        "Next step will be the evaluation on the English TREC collections, which will enable us to rigorously evaluate if our model really helps to improve IR tasks.",
        "The evaluation will also give us criteria for parameters setting.",
        "We expect that a positive value of wt will significantly accelerate the computation without loss of quality, but finding the right value must be based on the evaluation.",
        "As for the most important parameters of the GRA (i.e. the size of the sample set n and the number of words in concept k), these should be set so that the resulting concept is a good membership estimator also for documents not included in the sample set."
      ]
    },
    {
      "heading": "5 Summary",
      "text": [
        "We have designed and implemented a system that automatically discovers specific topics in a text collection.",
        "We try to employ it in document indexing.",
        "The main directions for our future work are thorough evaluation of the model and optimization of the parameters."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "This work has been supported by the Ministry of Education, project Center for Computational Linguistics (project LN00A063)."
      ]
    }
  ]
}
