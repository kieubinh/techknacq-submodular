{
  "info": {
    "authors": [
      "Anssi Yli-Jyra"
    ],
    "book": "Workshop on Recent Advances in Dependency Grammar",
    "id": "acl-W04-1504",
    "title": "Axiomatization of Restricted Non-Projective Dependency Trees Through Finite-State Constraints That Analyse Crossing Bracketings",
    "url": "https://aclweb.org/anthology/W04-1504",
    "year": 2004
  },
  "references": [
    "acl-J03-4001",
    "acl-J90-4003",
    "acl-P98-1106"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In this paper, a representation for syntactic dependency trees (D-trees) is defined through a finite set of axioms.",
        "The axiomatized representation constitutes a string that can encode non-projective D-trees of restricted structural complexity.",
        "Upper-bounds for the structural complexity of these D-trees are fixed through the following new parameters: proper embracement depth , nested crossing depth , and non -projectivity depth .",
        "In the representation, syntactic dependencies between words are indicated with pairs of brackets.",
        "When the brackets indicate dependencies that cross each other, the crossing pairs of brackets are distinguished by assigning separate colors to each of them.",
        "These colors are allocated in a way (Yli-Jyr¨a and Nyk¨anen, 2004) that ensures a unique representation for each D-tree, and entails that languages whose nested crossing depth is not bounded cannot be captured using a fixed number of colors.",
        "Although the axiomatization is finite, it ensures that the represented dependency structures are trees.",
        "This is possible because the described D-trees have bounded non -projectivity depth.",
        "The axioms are also regular because proper embracement depth of represented D-trees is bounded.",
        "Our representation suggests that extra strong generative power can be squeezed out of finite-state equivalent grammars.",
        "Bracketed D-tree representations (cf. annotated sentences) are structural descriptions that are assigned to their subsequences (cf. generated strings or yields of trees) where brackets and other special-purpose characters have been omitted."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Recently, many dependency syntactic parsers using finite-state machines (FSMs) have been presented (Kahane et al., 1998; Elworthy, 2000; Nasr et al., 2002; Oflazer, 2003; Yli-Jyr¨a, 2004a).",
        "This article shows that a finite-state equivalent grammatical system is capable of assigning even non-projective syntactic dependency trees – or their representations – to terminal strings.",
        "An appropriate representation is conveniently defined through a set of axioms presented in this work.",
        "The complexity of the structures assigned is bounded by some special parameters."
      ]
    },
    {
      "heading": "1.1 Motivation",
      "text": [
        "We argue that the possibilities of FSMs have not been fully exploited in dependency syntax.",
        "So far, almost all the dependency parsers that use FSMs take them merely as subroutines in a system whose generative power exceeds regular languages.",
        "Although there are some pure finite-state approaches to surface syntactic parsing (Krauwer and des Tombe, 1981; Abney, 1996; Koskenniemi, 1997; Yli-Jyr¨a, 2004a) there seems to be a lack of a pure finite-state approach that is capable of assigning non-projective dependency structures to the input strings.",
        "The applicability of finite-state systems to natural language syntax has been questioned since Chomsky (1957), who suggested that center embedding in natural language is unbounded.",
        "In contrast to this view, a recent corpus-based study (Karlsson, in print) suggests an opposite generalisation according to which there is an absolute limit (2 – 3) on center-embedding of subordinate clauses in matrix clauses, on top of which there are also category restrictions on which type of center-embeddings are allowed at each embedding level.",
        "Although such limits may lack some mathematical elegancy, they may entail some other kind of mathematical beauty (e.g. the closure properties of regular languages) and, moreover, new possibilities in the framework of parameterized complexity can become available.",
        "In natural language engineering, where ambiguity generated by a syntactic parser can be very high, limits on syntactic complexity may resolve some ambiguity and reduce the number of non-typical analyses generated by the parser.",
        "Several such limits on the complexity of D-trees are proposed in this paper.",
        "To facilitate implementation of a non-projective dependency grammar with FSMs, this paper introduces a suitable string representation.",
        "This representation is inspired by Colored Non-Projective Dependency Grammar (Yli-Jyr¨a and Nyk¨anen, 2004), where multiple index pushdowns are used to store symbols for dependency links.",
        "The axiomatization deals with crossing dependencies and enforces acyclicity of the represented dependency graph.",
        "It involves several extensions that are not present in earlier encoding schemes where dependencies are also indicated through matching pairs of symbols (Oflazer, 2003; Yli-Jyr¨a, 2004a)."
      ]
    },
    {
      "heading": "1.2 Non-Projective Dependency Trees",
      "text": [
        "In dependency syntax, the analysis of a sentence is given as a dependency tree (D-tree) whose nodes correspond – as assumed in this paper – to the words of the analyzed sentence.",
        "A D-tree consists of dependency links (directed arcs) drawn above the sentence – and implicitly, of the sentence itself.",
        "The D-tree shows which words are related to which words and in what way.",
        "Figure 1 gives an example of a D-tree.",
        "The graphical representation for the D-tree is interpreted as follows.",
        "If is a (directed) arc between two nodes, we will say that depends immediately on (or, conversely, governs immediately), and that is an immediate syntactic dependent of (and is the immediate syntactic governor of ).",
        "(Mel’ˇcuk 1988.)",
        "In each D-tree, there is a unique non-governed node.",
        "For this purpose, we have reserved an external wall node ( ) that is placed on the left of the sentence, while the words in the sentence are always governed by exactly one node.",
        "A D-tree is non -projective, if some of the arcs cross each other when the tree is drawn above the sentence."
      ]
    },
    {
      "heading": "1.3 The New Representation",
      "text": [
        "The string representation (Figure 2) for a D-tree consists of overlapping views – string subsequences – that realize different aspects of the D-tree encoding.",
        "For example, substrings delimited by a pair or boundary symbols (#) are called nodes in the string representation.",
        "The first node corresponds to the wall ( ) and the other nodes contain single word tokens of the sentence: # # Ultima # Cumaei # venit # iam # carminis # aetas # For any given D-tree there is a unique way to assign colors to its arcs.",
        "When the coloring is done, the result is a colored D-tree.",
        "At each node of the colored D-tree, there is a unique active color that is used for the arcs that connect the node to the right.",
        "In the string representation this is indicated by special tokens , as follows:",
        "The arcs are encoded with separate pairs of brackets as follows:",
        "where the intervening string has a balanced bracketing w.r.t.",
        "[ ] -brackets, corresponds to an arc between two nodes in the D-tree.",
        "When these subsequences are put on top of each other we obtain the following combination:",
        "For each arc in Figure 1, there is a label that tells how depends on .",
        "These labels are attached to the brackets as follows:",
        "The direction of each arc is indicated by adding an over-line to the dependent-side labels: [ attr [ attr pred ] adv gntv subj ] .",
        "The non-projectivity depth of an arc measures its specially defined distance from the wall node .",
        "In each node, the non-projectivity depth of an outgoing arc is greater (or equal) than the depth of the incoming arc.",
        "The depth of arcs is indicated as follows:",
        "When we combine all these views, we obtain a string that represents the D-tree of Figure 1.",
        "This string is shown in Figure 2."
      ]
    },
    {
      "heading": "2 Prerequisites",
      "text": [
        "We are going to define the string representation for D-trees with axioms that are given as extended regular expressions.",
        "The intersection of the languages described by these axioms is the set of valid representations.",
        "In the following, we define the alphabets and regular expressions used in the axioms.",
        "Assume that is the set of category labels for the arcs, and that , , and are the parameters specifying upper bounds respectively for the proper bracketing depth, nested crossing depth, and non-projectivity depth.",
        "These depth measures will be precisely defined in an appropriate context."
      ]
    },
    {
      "heading": "2.1 Alphabets",
      "text": [
        "In Figure 2, several different kinds of symbols are involved.",
        "They belong to the following alphabets: the sets , , , consisting respectively of brackets [ ] , , the color selectors , the dependent labels , the governor labels , the set of word tokens , and the set of special symbols # .",
        "The union of these alphabets is denoted as .",
        "The union of the alphabets and is ."
      ]
    },
    {
      "heading": "2.2 Regular Expressions",
      "text": [
        "Let and be sets of strings, and a positive integer.",
        "In the axioms we will use the following regular operations: Kleene’s closure ( ), finite iteration ( ), concatenation ( ), asymmetric difference ( ), union ( ), and intersection ( ) – with this precedence order.",
        "The semantics of these operations is defined in the usual way.",
        "Parenthesis ( ) is used for grouping.",
        "The boxed dot denotes the language subset of and each context , , is of the form , where .",
        "The operation is expressed using a notation and it defines the set of all strings such that, for every possible and , for which , there exists some context , , where both and .",
        "The axioms in this paper produce a set of quite small automata and the satisfiability and usability of this lazy finite-state system for choosing a representation has been tested with real D-trees.",
        "(After these tests, the axioms presented here have undergone some editing that hopefully have not introduced typos or bugs.)"
      ]
    },
    {
      "heading": "2.3 The Basic Structure",
      "text": [
        "Axiom 1.",
        "(a) The string begins and ends with a node boundary (#).",
        "(b) Between each two boundaries there exists at least one word token or the wall .",
        "(c) Two tokens are always separated by a node boundary.",
        "Axiom 2.",
        "(a) There are no two similar square brackets in a node.",
        "(b) The color indices of closing brackets increase monotonically when we move from a right bracket towards the closest node boundary (#) on the left.",
        "Axiom 3.",
        "(a) All the labels belong to some surrounding bracket.",
        "(b) Each left (right) bracket has some label that is attached to it.",
        "Axiom 4.",
        "(a) Angle brackets do not have more than one label attached to them.",
        "(b) Within each node, no angle bracket ( ) occurs inside a square bracket [ ( ] ) having the same color .",
        "Axiom 5.",
        "(a) The wall ( ) and all the word tokens occur before a color selector .",
        "(b) All the color selectors occur after a word token or the wall.",
        "Axiom 6.",
        "(a) There is one and only one ungoverned node.",
        "(b) All other nodes are governed by some node.",
        "(c) No node depends immediately on more than one other node.",
        "(d) No node depends on itself.",
        "These axioms are presented more formally as the following regular expressions:",
        "A context restriction of a center in contexts is a regular operation where is a",
        "We define first, for each color , a string homomorphism [ ] in such a way that it essentially deletes all the other symbols except the brackets [ and ] , and the regular languages",
        "In the context of D-trees, a counterpart notion for center-embedding of constituent trees is needed.",
        "We say that an arc properly embraces another arc , if and only if and , where is the linear precedence order among the nodes.",
        "The proper embracement depth of a colored D-tree is the maximum number of arcs , , ,where all the arcs have the same color and each , , properly embraces .",
        "This measure is applied to a D-tree in the Figure 3.",
        "Note that proper embracement does not generally imply that the arcs belong to a common path: in Figure 1 the arc aetas Ultima embraces properly the arc carminis Cumaei.",
        "An arc that shares a node with another arc does not properly embrace the later.",
        "If they overlap each other, the shorter of these arcs will be represented with a pair of an angle bracket and a square bracket as shown in Figure 2, unless the longer arc is already presented by an angle bracket.",
        "Thus, the maximum number of nested square brackets needed corresponds to the proper embracement depth of the colored D-tree.",
        "In our representation, the proper embracement depth of trees is bounded by a fixed parameter .",
        "This allows defining finite-state constraints that define bracketings up to a bounded number of nested square brackets.",
        "In the following, we will give axioms that check that brackets for each color are balanced and do not exceed the proper embracement depth .",
        "Axiom 7.",
        "The [ ] -bracketings must be balanced and the number of nested brackets is bounded.",
        "Axiom 8.",
        "(a+b) Left (right) angle brackets match with a square bracket.",
        "(c) The arcs indicated with angle-square bracket pairs do not cross each other as in [ ] .",
        "These axioms are given more formally as follows:",
        "where"
      ]
    },
    {
      "heading": "4 Nested Crossing Depth",
      "text": [
        "We added colors to brackets because crossing brackets have to be separated by some means.",
        "Unfortunately, assigning colors to brackets entails new problems:",
        "1.",
        "We can represent non-projective trees that are not typical for natural language.",
        "In particular, we conjecture that although we bound the number of colors available, there is a set of colored trees (in the limit ) that gives structural descriptions for the Bach language (cf. Joshi 1985), the strings of which consist of an equal number of a’s, b’s and c’s.",
        "2.",
        "In parsing, the colors must be selected in one way or in another and this results normally into an ambiguity where there are many colorings available.",
        "Thus, we need a discipline that tells how to assign colors to the arcs in an unambiguous way.",
        "The first problem could be addressed e.g. by combining a constituent-based structure (topological fields etc.)",
        "with the dependency syntax.",
        "In our representation for D-trees, we need however a solution that addresses both of these problems.",
        "Such a solution has been developed recently and presented in many ways: by means of constraints (Yli-Jyr¨a, 2003a), through an informal algorithm (Yli-Jyr¨a, 2004b), and very formally as a special index storage type used in Colored Non-projective Dependency Grammar (Yli-Jyr¨a and Nyk¨anen, 2004).",
        "We conjecture, however, that there is no essential differences in the allocation disciplines defined in these works.",
        "In the following, we will adapt the constraint-based definition (Yli-Jyr¨a, 2003a) to the allocation of colors of brackets: .",
        "An effect of this axiom can be seen in Figure 2, where a new color is selected after venit although the color is no more in use.",
        "The reason is that there is a bracket [ that is still open at that position.",
        "Axiom 10 (Left conjoin).",
        "All the opening brackets belonging to the same node have the same color.",
        "This axiom corresponds intuitively to the fact that there is no need to give different colors to arcs that do not cross each other.",
        "Axiom 11 (Continuous tiling).",
        "A position cannot contain colored bracket [ , where , if, on the left, there are no other brackets [ (of the same color) that remain opened at the position, except if there is, on the left, another bracket [ with (of the preceding color) that remains open at this position but will be matched with with a bracket or ] that occurs before the bracket [ of the current position is closed with ] .",
        "This axiom corresponds to the fact that when a new color is introduced at some position (Figure 2), this is done due to a danger of having crossing brackets with the same color.",
        "The actual effect of these three axioms is that for each D-tree there remains a unique way to assign colors, square brackets, and angle brackets to the arcs.",
        "The nested crossing depth of a D-tree is the number of colors in a colored D-tree that conforms Axioms 9 – 11.",
        "In our representation, the nested crossing depth (i.e. the number of colors) is bounded.",
        "Bounded nested crossing depth has considerable linguistic relevance.",
        "The length of the longest chain ( ) of crossing edges is a lower bound for the nested crossing depth, but such chains are typically very short in natural language sentences.",
        "The possible upper bound for the nested crossing depth has been studied experimentally (Yli-Jyr¨a, 2003a; Yli-Jyr¨a, 2004b) with the result that in non-projective D-trees of some 700 Danish sentences, the number of required colors is pretty low ( – ).",
        "A few interesting exceptions1 actually contained a chain of up to five crossing dependencies.",
        "Such complex examples seem to be successful combinations of non-local dependencies, and it may be very difficult to generalize what is possible and what is not.",
        "Nevertheless, we conjecture that D-trees of the Bach (or MIX) language (cf. Joshi 1985) are not captured in our system when the number colors is fixed, because Colored Non-Projective Dependency Grammar (Yli-Jyr¨a and Nyk¨anen, 2004) is a linear context-free rewriting system.",
        "In order to facilitate formalization of Axiom 11, we use of color selectors and the following axiom: , indicates that there is a left bracket [ that has not yet been closed.",
        "(b) Color selector indicates that no bracket [ is open at that position.",
        "If we assume also a bound for the proper embracement depth, we can present the above axioms more formally as follows:"
      ]
    },
    {
      "heading": "5 Subcategorization",
      "text": [
        "We have seen in Section 3 that angle brackets are used when several overlapping arcs share a common node.",
        "This corresponds to use of reduced bracketing for initial and final embedding in some systems (Krauwer and des Tombe, 1981; Yli-Jyr¨a, 2003b), and it facilitates linguistically appropriate bracketing with FSMs.",
        "Our axiomatization (Section 6 in particular) requires that information about the labels and directions on the arcs of the node are locally present both in the dependent and the governor nodes.",
        "Unfortunately, this kind of duplication of the labeling information cannot be captured with regular axioms unless there is a limit on the amount of information that is duplicated.",
        "A solution would be to assign each square bracket an unsaturated subcategorization frame with a symbol that indicates a state in a special subcategorization automaton.",
        "The automata could be simulated by propagating – by means of le.g.",
        "“Det har b˚ade noget med stolene og bordet",
        "where declarative constraints – the state information of each square bracket to the first angle bracket, and then further from one angle bracket to another.",
        "We have chosen, however, a more restricted approach for brevity, although we do not argue that it is the most elegant and general solution.",
        "This approach is presented in the sequel.",
        "and and describe what is inside the [ ] - square brackets, when the th label of the left and right square bracket, respectively, has a matching label.",
        "These languages are defined as where",
        "We assume that the number of left or right arcs per color is bounded by an integer .",
        "Thus, at most labels can be associated with one square bracket.",
        "The label that is nearest to the opening (closing) square bracket corresponds to the label that is nearest to the corresponding closing (opening) square bracket.",
        "Each additional label of the square bracket corresponds to a label of an angle bracket (Figure 4).",
        "We will now give axioms that check that the labels of square brackets corresponds to the labels of the matching square and angle brackets: Axiom 13.",
        "(a)+(b) The number of left (right) angle brackets matching each right (left) square bracket is determined by the number of labels associated with the right (left) square bracket.",
        "Axiom 14.",
        "(a) Every label of the right square brackets has a corresponding bracket with a corresponding label.",
        "(b) Every label of the left square brackets has a corresponding bracket with a corresponding label.",
        "These axiom are formulated as follows: is a language whose strings contain just matching pairs of labels and everything that can come between them."
      ]
    },
    {
      "heading": "6 Non-Projectivity Depth",
      "text": [
        "The arcs in dependency trees constitute, by the definition of trees, an acyclic graph – our discussion assumes that there are no secondary links in D-trees.",
        "In the axiomatization of the string representation, we have to enforce acyclicity by some constraints.",
        "Procedurally the acyclicity could be decided, for example, by trying to arrange the nodes into an order where the arcs go from the left to the right (topological sorting).",
        "Corresponding declarative solutions would be e.g. (i) to use set constraints (Duchier, 1999) or (ii) to attach each node an integer that increases strictly in the nodes reached by the outgoing arcs of the node.",
        "Both of these solutions are problematic because the number of reached nodes is, in practice, unbounded.",
        "An alternative solution that is adopted her is to use a monotonically increasing counter that is incremented only at certain critical positions.",
        "For technical reasons, we attach such a counter to arcs and brackets rather than to the nodes – this change is not mathematically significant.",
        "Let be the linear precedence relation over the nodes.",
        "A node in a D-tree is an articulation node if no arcs are passing it and the arcs coming into it are on the opposite side than the arcs going out from it.",
        "A chain of colored arcs , or (iii) .",
        "The non -projectivity depth of a (colored dependency) path that does not contain an articulation node is the number of critical nodes visited by it.",
        "The maximum depth of such paths in a D-tree is the non -projectivity depth of the D-tree.",
        "Incrementing counters only at the critical positions has an important advantage over the other solutions mentioned: projective trees do not contain any critical positions, and in non-projective trees of",
        "where",
        "where , , , ,where is the color of an arc , is called a colored dependency path.",
        "Anode , , is critical if either (i) , (ii) natural language sentences we probably need only very small numbers.",
        "If the counter is incremented several times, the path can be very “unnatural” as shown in Figure 5.",
        "We conjecture that if a de",
        "pendency path is acyclic, we cannot increment the counters at every critical position.",
        "In other words, assigning depths to the arcs of a D-graph excludes the alternative that the graph would be cyclic.",
        "In our representation, there is a fixed upper bound for the non -projectivity depth.",
        "Based on it, we can define, for all , the sets , and .",
        "The second component of each label is the non-projectivity depth counter.",
        "The incrementation of these counters in critical nodes gives rise to the following axioms.",
        "They constrain nodes i.e. substrings occurring between two word boundaries: Axiom 15.",
        "(a) In nodes that are not articulation nodes, there is no label , where , if there is a label , .",
        "Axiom 16.",
        "(a) There are no labels and , where , that are attached to closing brackets in this order.",
        "(b) There are no labels and , where , that are attached to opening brackets in this order.",
        "(c) There are no labels and ,",
        "where , that are attached respectively to a closing bracket and an opening bracket so that the color index of the closing bracket is smaller than that of the opening bracket.",
        "Axiom 17.",
        "There is no label , , that is attached to an opening bracket, if on the left of the label there is no , or on the right of the label there is no label .",
        "Axiom 18.",
        "There is no label , , that is attached to a closing bracket with color , if on the right of the label there no label , or on the left of the label there is no label , or there is no label that is attached to an opening bracket with a color greater than .",
        "Axiom 19.",
        "In articulation nodes, the counters of the outgoing arc labels must be zero.",
        "More formally these are given as follows:"
      ]
    },
    {
      "heading": "7 Colored Non-projective Dependency Grammar",
      "text": [
        "A new grammatical framework, called Colored Non projective Dependency Grammar (CNDG) (Yli-Jyr¨a and Nyk¨anen, 2004), has been developed on the top of the bounded nested crossing depth and bounded non-projectivity depth using a carefully designed linear context free rewriting system.",
        "A regular approximation for such a grammar is obtained by compiling the colored dependency rules to constraints that specify local subcategorization features (labels and bracket colors) within the node boundaries.",
        "The current axioms will take care of the non-local structure of the described D-trees.",
        "When the second and the third rule, for example, are compiled, we obtain the following two constraints:"
      ]
    },
    {
      "heading": "8 Further Work",
      "text": [
        "In the future, the current axiomatization should be extended to allow free dependents, and to include rules without colors and arc order.",
        "Furthermore, efficient methods for applying the axioms should be developed and a standard finite-state parser using these axioms should be specified.",
        "The approach could be extended with a multi-tiered approach where different kinds of bracketed strings (including e.g. P-markers) are processed with a multi-tape finite automaton.",
        "We could also use weighted automata to improve the ranking of alternative analyses.",
        "We would like to develop full scale grammars and to evaluate the presented representation properly in practical setting.",
        "Possibilities to induce a grammar automatically from a treebank could be examined.",
        "The proposed complexity bounds could be applied also to treebank validation and more generally in linguistic studies of natural language complexity."
      ]
    },
    {
      "heading": "9 Conclusion",
      "text": [
        "In this article, we have proposed a new representation for restricted non-projective dependency trees: The representation combines both dependency and linearization into a single string structure, and it gives a realistic basis for non-projective finite-state dependency parsers.",
        "The complexity measures used here may be of interest in different areas of linguistics."
      ]
    },
    {
      "heading": "10 Acknowledgements",
      "text": [
        "This work was funded by NorFA under the author’s personal Ph.D. scholarship (ref.nr.",
        "010529).",
        "The author is grateful to the anonymous referees for insightful comments on an earlier version of this paper."
      ]
    }
  ]
}
