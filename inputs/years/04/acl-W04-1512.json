{
  "info": {
    "authors": [
      "Alexander Dikovsky"
    ],
    "book": "Workshop on Recent Advances in Dependency Grammar",
    "id": "acl-W04-1512",
    "title": "Dependencies As Categories",
    "url": "https://aclweb.org/anthology/W04-1512",
    "year": 2004
  },
  "references": [
    "acl-P01-1021",
    "acl-P01-1024",
    "acl-P90-1005",
    "acl-P97-1043",
    "acl-P98-1026",
    "acl-P98-1106",
    "acl-P98-2130"
  ],
  "sections": [
    {
      "text": [
        "Dependencies as Categories Alexander Dikovsky LINA, Universite de Nantes 2 rue de la Houssiniere BP 92208 F 44322 Nantes Cedex 3, France"
      ]
    },
    {
      "heading": "Alexandre. DikovskyAlina.univ-nantes.fr Abstract",
      "text": [
        "Categorial Dependency Grammars (CDG) introduced in this paper make clear-cut distinction between local and distant word driven dependencies.",
        "The former are treated in classical categorial grammar terms.",
        "The latter are defined in terms of polarized valencies, whose neutralization is controlled by the simple principle \"choose the first available\" ( FA).",
        "Being very expressive, CDGs are analyzed in polynomial time.",
        "Besides this, CDGs represent a convenient frame for relating dependency grammar with linguistic semantics."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Dependency grammars (DGs) are formal grammars assigning dependency trees (DTs) to well-formed sentences.",
        "A DT of a sentence is a labelled arrows tree whose nodes are the words of the sentence.",
        "A rather formal description of DGs and DG syntax was given by L. Tesnießre (Tesnießre, 1959).",
        "The first exact definitions are due to D. Hays (Hays, 1960) and H. Gaifman (Gaifman, 1961).",
        "The basic syntactic principle behind the DGs is quite different from that of syntagmatic grammars.",
        "They are designed for and more adapted to definitions of binary relations between wordforms (syntactic dependencies), than to definitions of sentence constituents.",
        "Meanwhile, historically the first DGs define in fact both.",
        "The Hays-Gaifman's DGs are lexicalized.",
        "They assign grammatical categories to words and position the subordinates with respect to their governors.",
        "In this manner, they define not only the binary relations \"governor – � subordinate\", whose union forms a tree, but also (due to the order given) the projections of words on the sentence, which form a system of constituents with the projected words serving as the constituents' heads.",
        "From the 70ies, it is known ((Gladkij, 1966; Robinson, 1970)) that this link between the two structures is reversible: a selection of one immediate head per constituent induces a unique DT by the following induction: C C C' ==> root(ImmHead(C')) – �* root(ImmHead(C)).",
        "This structural \"equivalence\" produced an illusion that DTs are byproduct of head selection in constituent structures.",
        "So all syntagmatic grammars with head selection (e.g., LFG (Kaplan and Bresnan, 1982) and HPSG (Pollard and Sag, 1994)) may in a way be considered as DGs.",
        "Formally, such \"extension\" to DG concerns TAGs (Joshi et al., 1975) and categorial grammars (CGs) (Bar-Hillel, 1953; Lambek, 1958)) as well.",
        "However, this analogy is very superficial.",
        "It was soon realized that dependency and precedence are rather independent.",
        "For instance, the head driven DT above are always projective: the projections of all words fill continuous segments.",
        "Meanwhile, discontinuous non-projective dependencies are inevitable in languages.",
        "They often mark communicative structure (e.g. topicalization) and special constructions encoding complex semantic relations (e.g. clefting, subject or object extraction in pied-piping, etc.).",
        "This distinction led to many propositions, both in terms of order constraints (e.g., (Maruyama, 1990; Broker, 1998; Duchier and Debusmann, 2001)) and in structure sharing terms like lifting (e.g., (Lombardo and Lesmo, 1998; Kahane et al., 1998)).",
        "In logical type based grammars, like CGs, adequate extension to DG presupposes one more distinction: that of semantic functionality and of syntactic subordinacy, which are opposite, for instance, for verb and noun modifiers.",
        "Multi-modal extensions of CGs take proper account of these distinctions (cf. (Moortgat and Morrill, 1991; Morrill, 1994; Kruijff, 2001)).",
        "The overwhelming majority of DGs are head driven in the above sense.",
        "At the same time, some linguistic theories, e.g. \"MeaningText Theory\" (Mel'cuk, 1997), \"Word Gram-mar\" (Hudson, 1984) use a very different perspective of syntactic dependency, to which we will refer as word driven.",
        "Word-driven DG is closer to the original idea of Tesnießre.",
        "Basically, it describes dependencies as binary relations between words in the language without addressing head scopes.",
        "This leads to far-reaching consequences for grammatical classification of words and dependency typology (cf. (Jackend-off, 1977; Keenan and Comrie, 1977) and a word driven DG of English in (Mel'cuk and Pertsov, 1987)).",
        "Formal definitions of word driven DGs are few in number.",
        "Historically the first was (Gladkij and Mel'c�uk, 1971).",
        "It proposed a concept of tree generating DG and started a mathematical research into subfamilies of this very general class of grammars (see a review in (Dikovsky and Modina, 2000)).",
        "More recent propositions are Link Grammars (Sleator and Temperly, 1993) expressing only projective DTs and Polarized DGs (Dikovsky, 2001).",
        "The existing word driven DG definitions are operational and make no link with logic.",
        "In particular, there is no definition based on word driven dependency types.",
        "In this paper, we propose such a definition in terms of classical CGs.",
        "The Categorial Dependency Grammars (CDGs) we propose have two particularities: a specific type system inspired by (Mel'cuk and Pertsov, 1987) and a simple dependency calculus for projective and discontinuous dependencies."
      ]
    },
    {
      "heading": "2 Syntactic types",
      "text": [
        "A word driven dependency G(overnor) D S(ubordinate) encodes an irreflexive antisymmetric antitransitive binary relation on words with intuitive meaning \"G licenses S\" defined by constraints on lexical and grammatical features, precedence constraints, pronominalization constraints, etc.",
        "concerning the words G and S and sometimes also close context words (see (Iordanskaja and Mel'cuk, 2000) for a detailed presentation).",
        "Let us see a fragment of the definition in (Mel'cuk and Pertsov, 1987) of the modificative dependency in English:",
        "and a = (N, not pron), (Num), `ONE2' and , = (A, not det, not pred!, not postpos!",
        "), (V)ppres, (V, not postpos!",
        ")pass This complex formula is encoded by the dependency name modif.",
        "The corresponding dependency is the set of pairs of wordforms satisfying the formula in their occurrences.",
        "Suppose that we have to describe syntactic type of the word theory in terms of such dependencies.",
        "Then we are to look at this word from two different points of view.",
        "For theory as dependent, we must find all possible incoming dependencies:",
        "For theory as governor, we must find all possible dependencies outgoing from it: In so doing, we must of course take into account the precedence of beginnings (ends) of the arrows with respect to the word.",
        "This we can do using the classical CG type constructors.",
        "The fundamental difference compared with CG is that now a primitive type D corresponds to the incoming dependency D and in complex types, e.g. D\\a assigned to a word w, D corresponds to the beginning of dependency D. Finally, we must find all mutually compatible combinations of outgoing arrows and of an incoming arrow compatible with the features of the word theory.",
        "Each such combination describes a dependency type:",
        "In this example, being assigned to theory, the type [modi f *\\det\\dir - obj/attr - rel] admits several (possibly no) left dependents of theory through dependency modi f (modi f * denotes iteration), requires a left dependent through det, a right dependent through dir-obj and the incoming dependency attr - rel.",
        "The position of the end of attr-rel must be determined through derivation.",
        "As we will see, such types are sufficient do describe projective dependencies.",
        "In order to specify the long distance discontinuous dependencies, we use, as we do in (Dikovsky, 2001), polarized dependency types.",
        "A positive polarized type specifies the name and the direction of an outgoing dependency.",
        "For instance, in the sentence It was yesterday that we had the meeting, the positive subcategory (%it-cleft) of the category assigned to that marks the beginning of the distant dependency named it-clef t outgoing from the clause root (see Fig. 3).",
        "A negative polarized type specifies the name and the direction of an incoming dependency.",
        "For instance, the end of the discontinuous dependency it cleft incoming to the expletive pronoun in the syntactic role of subject of the main sentence is defined by the negative category (,// it-cleft) assigned to It.",
        "The categories (,//it-cleft) and (%it-cleft) are dual.",
        "Together, they describe the discontinuous de-it-cleft pendency that 4 It.",
        "Now, let us define the dependency types formally.",
        "For simplicity, in this paper we consider the primitive dependency types as elementary categories without parameters.",
        "C denotes a finite set of such elementary categories.",
        "C*=df {A* I A C C} denotes the set of all iterated categories.",
        "Defining polarized categories, we distinguish between four dependency polarities: left and right positive %, Z and left and right negative \\�,,// .",
        "For each polarity v C there is the unique dual polarity v: K\\ = � � � , ,// =%, Z =\\�,, \\�, =Z.",
        "Z C, % C, \\�, C and ,// C denote the corresponding sets of polarized distant dependency categories.",
        "E.g., Z C = {(Z C) I C C C} is the set of right positive categories.",
        "V+ (C) = ZC U %C is the set of positive distant dependency categories, V-(C) C U ,// C is the set of those negative.",
        "If we limit ourself to these categories we cannot express adjacency of distant subordinates to a given word.",
        "E.g., in French, the negative dependency category ,// clit-dobj of a cliticized direct object must be anchored to the auxiliary verb or to the verb in a non-analytic form.",
        "For that, we will use specially marked anchored negative categories: Anc(C)=df {#(a) I a C V (C) } - our name for negative categories whose position is determined relative to some other category - whereas the negative categories in V (C)will be called loose.",
        "Definition 1 The set Cat(C) of categories is the least set verifying the conditions:",
        "1.",
        "C U V (C)U Anc(C) C Cat(C).",
        "2.",
        "For C C Cat(C), Al C (C U C* U Anc(C) U%C) and A2 C (C U C* U Anc(C) UZC), the categories [A1\\C] and [C/A2] also belong to Cat(C).",
        "By the nature of word driven dependencies, the type constructors \\, / are associative.",
        "So every complex category can be presented in the form: [Lk\\... L1\\C/RI ... /R„,,].",
        "E.g., [#(,// clit_dobj)\\subj\\S/aux] is one of possible categories of an auxiliary verb, which defines it as the host word for a cliticized direct object, requires the local subject dependency on its left, and on its right, the local outgoing dependency aux."
      ]
    },
    {
      "heading": "3 Grammar definition",
      "text": [
        "Definition 2 A categorial dependency grammar (CDG) is a system G = (W, C, S, b), where W is a finite set of words, C is a finite set of elementary categories containing the selected root category S, and b - called lexicon - is an assignment of finite sets of categories in Cat(C) to words in W (i.e. b(a) C Cat(C) for a C W).",
        "The language and DT language generated by a DCG are defined by a calculus of local and polarized dependencies.",
        "In this calculus, most specific are the rules for polarized dependencies.",
        "These rules establish a distant dependency between two words with dual polarized categories, if the corresponding negative category is loose.",
        "The anchored negative dependency valencies serve only to anchor a distant subordinate to a host word.",
        "As soon as the correct position of the subordinate is identified by the anchored dependency rule, its category becomes loose and so available to the governor.",
        "So the anchored dependency marker serves as an exponential in this resource sensitive calculus.",
        "In the definition below, indexed IF denote strings of categories.",
        "An occurrence of an elementary category C in a derived string of categories corresponds to a DT D of category C. r(D) denotes the root of D. For space reasons, we present only the rules for left constructors.",
        "The rules for right constructors are similar.",
        "The rule applies if there are no occurrences of subcategories,/C, #(,/C) and %C in I'2.",
        "If,/ C is the category of D1 and [(% C)\\a] is that of D2, then a becomes the category of the new DT D1 U D2 U {r(D1) � C – r(D2)}.",
        "�-* is the reflexive-transitive closure of �- .",
        "Comments: 1.",
        "L1, L' are standard elimination rules present in all kinds of categorial grammars.",
        "The rigid distribution constraints encoded by elementary word driven dependencies make impossible type raising and symmetrical introduction rules.",
        "2.",
        "The iteration rules I1, I', 01, 0' induce different realizations of the same iterated modifier type.",
        "In fact, the iteration marker also serves as an exponential in this calculus.",
        "3.",
        "D1, D' are rules establishing distant",
        "valencies between the \"closest\" dual loose dependency valencies.",
        "This is another important particularity of this calculus implied by the nature of word driven dependencies and the 'The DTs rest unchanged when no instruction.",
        "underlying concept of polarity.",
        "Definition 4 A DT D is assigned by a CDG G = (W, C, S, b) to a sentence w (denoted G(D, w)) if D is defined as DT of category S in a proof I' �-* S for some I' E b(w).",
        "The DT-language generated by G is the set of DTs 0(G) = {D I 3w E W+ G(D,w)}.",
        "The language generated by G is the set of sentences L(G) = {w E W+ 13D G(D, w)}.",
        "This definition is correct in the following sense: Proposition 1 For each CDG G, G(D, w) implies that D is a DT on w. Proposition 2 L(Go)={djand2bnd3cnln > 01.",
        "In Figures 1-3, two meeting continuous slanting lines correspond to one application of rules L or I, two meeting dashed slanting lines correspond to one application of rule A, and right-angled dashed lines connect categories to which rule D is applied.",
        "Anchored categories must first be made loose by applying the rule A.",
        "Only then a distant dependency can be introduced by application of the rule D. E.g., in Fig. 2, first A is applied to C3 and C4, and then D applies to C3 and C7.",
        "Using CDGs - and this is their important advantage - one can describe discontinuous syntactic dependencies caused by topicalization, extraction, and other movement operations in a uniform and concise manner.",
        "E.g., let us see how can be described PP-movement (Fig.",
        "2) and it-clefting (Fig.",
        "3).",
        "In the proof in Fig. 2, we use the categories",
        "In this proof, the rule L applied to det and Cl gives the dependency the �de-t person of category [subj/attr - rel].",
        "L applied to subj and subj C3 gives the dependency you F must of category [wh - rel/in f - obj].",
        "A applied to #(,// prepos) and C2 gives (,// prepos) [attr-rel /wh-rel].",
        "Now we can eliminate (,// prepos) applying D to it and C4.",
        "This reduces C4 to in f -obj and gives the distant dependency to wh�rel re f er.",
        "Finally, L is applied four times.",
        "The proof in Fig. 3 uses categories: Ci = [#(,//it-cleft)\\S/subj clef t/circ] E 6(was),",
        "The weak expressive power of CDGs is not completely explored.",
        "Meanwhile, some observations can already be made.",
        "Let G(,n), m > 1, be the CGD defined by: do H [S/Do] and d,n+1 H D,n, ao H [Do/Do/(T A,n)/... /(T A,)], for 0 < i < m, d2 H [D2-1/#(\\�,A2)], and a2 H [#(\\�,A2)/#(\\�,A2)], [#(\\�,A2)/D2].",
        "Then the following proposition holds: Proposition 3 For each m > 0, L(G(,n)) {doaodlai ... d ,na'd,n+lI In > 0}.",
        "This means that not all languages in L(CDG) are generated by TÙGs.",
        "On the other hand, we suppose that the copy language {ww I w c {a, b}+} is not generated by CDGs.",
        "The CDGs are sensitive to the following structural dependency measure.",
        "Definition 5 Let D be a DT of a sentence w = al ... an.",
        "For a space i between the words a2 and a2+1, 1 < i < n, we define the distant dependencies thickness in i (denoted dth(D,i)) as the number of distant dependencies (ak �d-al), (ak -dö al) in D covering i (i. e. such that k < i < l for some k, l and d).",
        "dth(D)=df max{dth(D, i)I1 < i < IDI} and dth(G)=df max{0, min{dth(D) IG(D, w)} I w c L(G)}.",
        "E.g., dth(Go) = oc (same for all G(,n), m > 1).",
        "For natural languages, this measure is seemingly bounded by a small constant (2 or 3).",
        "In both sub j",
        "examples above, dth(D) = 1.",
        "Meanwhile, the following theorem is a consequence of Theorem 2 in (Dikovsky, 2001).",
        "Theorem 1 If for a CDG G, the measure dth(G) is bounded by a constant, then L(G) is context-free.",
        "This result confirms once more that relevant is the strong and not the weak expressive power.",
        "5 Complexity It turns out that correctness of sentences with respect to a CDG can be expressed in terms of two independent tests: the first in terms of only local (projective) dependencies, and the second in terms of neutralizability of distant dual polarized dependencies.",
        "This fact ensures efficient parsing algorithms .",
        "In this short paper we don't describe the notions and technical details underlying efficient analysis of CDGs (see (Dekhtyar and Dikovsky, 2004)) and only announce several facts.",
        "Theorem 2 (i) There is an algorithm pars which parses CDGs in time O(n5).",
        "(ii) If a CDG G has bounded distant dependencies thickness dth(G) < const, then the algorithm pars parses G in time O(n3).",
        "The analysis algorithm is Earley-type with items including current state of counters controlling well-pairing of loose polarized dependencies.",
        "When no polarized dependencies are used in the grammar or if their thickness is bounded, the items are counter-less (or bounded-counter) .",
        "Corollary 1 There is an algorithm parse which parses projective CDGs in time 0(n3)."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "The Categorial Dependency Grammars introduced in this paper can be used in practice as it – cleft",
        "low level DGs into which should be compiled for parsing high level word driven DGs.",
        "They can be easily extended to grammars using bounded depth feature structures as primitive categories and feature unification and propagation through dependencies.",
        "Using anchored categories, it is possible to express a variety of linear order constraints.",
        "At the same time, the CDGs have efficient parsing algorithms, comparable with or more fast than those for other dependency grammars expressing unlimited distant dependencies (cf. (Lombardo and Lesmo, 1998; Neuhaus and Broker, 1997; Kahane et al., 1998)).",
        "A very important advantage of CDGs is their type-driven style definition which fits well the standard methods of constructing formal semantics."
      ]
    },
    {
      "heading": "7 Acknowledgments",
      "text": [
        "The author is grateful to Denis Be�chet, Annie Foret and Michael Dekhtyar for helpful comments and fruitful discussions of this work."
      ]
    }
  ]
}
