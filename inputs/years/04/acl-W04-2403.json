{
  "info": {
    "authors": [
      "Alessandro Moschitti",
      "Cosmin Adrian Bejan"
    ],
    "book": "Conference on Computational Natural Language Learning CoNLL",
    "id": "acl-W04-2403",
    "title": "A Semantic Kernel for Predicate Argument Classification",
    "url": "https://aclweb.org/anthology/W04-2403",
    "year": 2004
  },
  "references": [
    "acl-J02-3001",
    "acl-J93-2004",
    "acl-P02-1031",
    "acl-P02-1034",
    "acl-P03-1002",
    "acl-W03-1006",
    "acl-W03-1008"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Automatically deriving semantic structures from text is a challenging task for machine learning.",
        "The flat feature representations, usually used in learning models, can only partially describe structured data.",
        "This makes difficult the processing of the semantic information that is embedded into parse-trees.",
        "In this paper a new kernel for automatic classification of predicate arguments has been designed and experimented.",
        "It is based on sub-parse-trees annotated with predicate argument information from PropBank corpus.",
        "This kernel, exploiting the convolution properties of the parse-tree kernel, enables us to learn which syntactic structures can be associated with the arguments defined in PropBank.",
        "Support Vector Machines (SVMs) using such a kernel classify arguments with a better accuracy than SVMs based on linear kernel."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Several linguistic theories, e.g. (Jackendoff, 1990), claim that semantic information in natural language texts is connected to syntactic structures.",
        "Hence, to deal with natural language semantics, the learning algorithm should be able to represent and process structured data.",
        "The classical solution adopted for such tasks is to convert syntax structures in a flat feature representation, which is suitable for a given learning model.",
        "The main drawback is structures may not be properly represented by flat features as: (1) these latter may not be able to capture the required properties or (2) the feature designer may not know what structure properties enable the processing of semantic information.",
        "In particular, these problems arise for semantic information represented via predicate argument structures defined on syntactic parse trees.",
        "For example, Figure 1 Arg 1 shows the parse tree of the sentence: \"Paul gives A g a lecture in Rome\" along with the annotation of predicate arguments.",
        "A predicate may be a verb or a noun or an adjective whereas generally Arg 0 stands for agent, Arg 1 for direct object or theme or patient and ArgM may indicate locations, as in our example.",
        "A standard for predicate argument annotation is provided in the PropBank project (Kingsbury and Palmer, 2002).",
        "It has produced one million word corpus annotated with predicate-argument structures on top of the Penn Treebank 2 Wall Street Journal texts.",
        "In this way, for a large number of the Penn TreeBank parse-trees, there are available predicate annotations in a style similar to that shown in Figure 1.",
        "In PropBank only verbs are considered to be predicates whereas arguments are labeled sequentially from Arg 0 to Arg 91.",
        "In addition to these core arguments, adjunctive arguments are marked up.",
        "They include functional tags, e.g. ArgM-DIR indicates a directional, ArgM-LOC indicates a locative and ArgM-TMP stands for a temporal.",
        "An example of PropBank markup is:",
        "Company ].",
        "1 Automatically recognizing the boundaries and classifying the type of arguments allows Natural Language Processing systems (e.g. Information Extraction, Question Answering or Summarization) to answer questions such as ”Who”, ”When”, ”What”, ”Where”, ”Why”, and so on.",
        "Given the importance of this task for Natural Language Processing applications, several machine learning approaches for argument identification and classification have been developed (Gildea and Jurasky, 2002; Sur-deanu et al., 2003; Hacioglu et al., 2003; Chen and Ram-bow, 2003; Gildea and Hockenmaier, 2003).",
        "Their common characteristic is the adoption of feature spaces that model predicate-argument structures in a flat representation.",
        "The major problem of this choice is that there is no linguistic theory that supports the selection of syntactic features to recognize semantic structures.",
        "As a consequence, researchers are still trying to extend the basic features with other ones, e.g. (Surdeanu et al., 2003), to improve the flat feature space.",
        "Convolution kernels are a viable alternative to flat feature representation that aims to capture the structural information in term of substructures.",
        "The kernel functions can be used to measure similarities between two objects without explicitly evaluating the object features.",
        "That is, we do not need to understand which syntactic feature may be suited for representing semantic data.",
        "We need only to define the similarity function between two semantic structures.",
        "An example of convolution kernel on the parse-tree space is given in (Collins and Duffy, 2002).",
        "The aim was to design a novel syntactic parser by looking at the similarity between the testing parse-trees and the correct parse-trees available for training.",
        "In this paper, we define a kernel in a semantic structure space to learn the classification function of predicate arguments.",
        "The main idea is to select portions of syntactic/semantic trees that include the target <predicate, argument> pair and to define a kernel function between these objects.",
        "If our similarity function is well defined the learning model will converge and provide an effective argument classification.",
        "Experiments on PropBank data show not only that Support Vector Machines (SVMs) trained with the proposed semantic kernel converge but also that they have a higher accuracy than SVMs trained with a linear kernel on the standard features proposed in (Gildea and Jurasky, 2002).",
        "This provides a piece of evidence that convolution kernel can be used to learn semantic linguistic structures.",
        "Moreover, interesting research lines on the use of kernel for NLP are enabled, e.g. question classification in Question/Answering or automatic template designing in Information Extraction.",
        "The remaining of this paper is organized as follows: Section 2 defines the Predicate Argument Extraction problem and the standard solution to solve it.",
        "In Section 3 we present our approach based on the parse-tree kernel whereas in Section 4 we show our comparative results between SVMs using standard features and the proposed kernel.",
        "Finally, Section 5 summarizes the conclusions."
      ]
    },
    {
      "heading": "2 Automatic Predicate-Argument extraction",
      "text": [
        "Given a sentence in natural language, all the predicates associated with its verbs have to be identified along with their arguments.",
        "This problem can be divided in two subtasks: (a) detection of the target argument boundaries, i.e. all its compounding words, and (b) classification of the argument type, e.g. Arg0 or ArgM.",
        "A direct approach to learn both detection and classification of predicate arguments is summarized by the following steps:",
        "1.",
        "Given a sentence from the training-set, generate a full syntactic parse-tree; 2. let P and A be the set of predicates and the set of parse-tree nodes (i.e. the potential arguments), respectively; 3. for each pair <p, a> E P x A: • extract the feature representation set, Fp,a; • if the subtree rooted in a covers exactly the words of one argument of p, put Fp,a in T+ (positive examples), otherwise put it in T – (negative examples).",
        "For example, in Figure 1, for each combination of the predicate give with the nodes N, S, VP, V, NP, PP, D or IN the instances F”give”,a are generated.",
        "In case the node a exactly covers Paul, a lecture or in Rome, it will be a positive instance otherwise it will be a negative one, e.g. F”give”,”IN”.",
        "The above T+ and T – sets can be reorganized as positive T +arg, and negative T – arg, examples for each argument i.",
        "In this way, an individual ONE-vs-ALL classifier for each argument i can be trained.",
        "We adopted this solution as it is simple and effective (Pradhan et al., 2003).",
        "In the classification phase, given a sentence of the test-set, all its Fp,a are generated and classified by each individual classifier.",
        "As a final decision, we select the argument associated with the maximum value among the scores provided by the SVMs2, i.e. argmaxiES Ci, where S is the target set of arguments."
      ]
    },
    {
      "heading": "2.1 Standard feature space",
      "text": [
        "The discovering of relevant features is, as usual, a complex task, nevertheless there is a common consensus on the basic features that should be adopted.",
        "These standard features, firstly proposed in (Gildea and Jurasky, 2002), refer to a flat information derived from parse trees, i.e.",
        "Phrase Type, Predicate Word, Head Word, Governing Category, Position and Voice.",
        "Table 1 presents the standard features and exemplifies how they are extracted from a given parse tree.",
        "- Phrase Type: This feature indicates the syntactic type of the phrase labeled as a predicate argument, e.g. NP for Arg1 in Figure 1.",
        "- Parse Tree Path: This feature contains the path in the parse tree between the predicate and the argument phrase, expressed as a sequence of nonterminal labels linked by direction (up or down) symbols, e.g. V T VP J NP for Arg1 in Figure 1.",
        "- Position: Indicates if the constituent, i.e. the potential argument, appears before or after the predicate in the sentence, e.g. after for Arg1 and before for Arg0 (see Figure 1).",
        "- Voice: This feature distinguishes between active or passive voice for the predicate phrase, e.g. active for every argument (see Figure 1).",
        "- Head Word: This feature contains the head word of the evaluated phrase.",
        "Case and morphological information are preserved, e.g. lecture for Arg1 (see Figure 1).",
        "- Governing Category: This feature applies to noun phrases only, and it indicates if the NP is dominated by a sentence phrase (typical for subject arguments with active voice predicates), or by a verb phrase (typical for object arguments), e.g. the NP associated with Arg1 is dominated by a verbal phrase VP (see Figure 1).",
        "- Predicate Word: In our implementation this feature consists of two components: (1) the word itself with the case and morphological information preserved, e.g. gives for all arguments; and (2) the lemma which represents the verb normalized to lower case and infinitive form, e.g. give for all arguments (see Figure 1).",
        "For example, the Parse Tree Path feature represents the path in the parse-tree between a predicate node and one of its argument nodes.",
        "It is expressed as a sequence of nonterminal labels linked by direction symbols (up or down), e.g. in Figure 1, VTVPtNP is the path between the predicate to give and the argument 1, a lecture.",
        "If two pairs <p1, a1> and <p2, a2> have a Path that differs even for one character (e.g. a node in the parse-tree) the match will not be carried out, preventing the learning algorithm to generalize well on unseen data.",
        "In order to address also into a multi-class categorization problem; several optimization have been proposed, e.g. (Goh et al., 2001).",
        "this problem, next section describes a novel kernel space for predicate argument classification."
      ]
    },
    {
      "heading": "3 A semantic kernel for argument classification",
      "text": [
        "We consider the predicate argument structures annotated in PropBank as our semantic space.",
        "Many semantic structures may constitute the objects of our space.",
        "Some possibilities are: (a) the selection of the whole sentence parse-tree, in which the target predicate is contained or (b) the selection of the sub-tree that encloses the whole predicate annotation (i.e. all its arguments).",
        "However, both choices would cause an exponential explosion on the potential sub-parse-trees that have to be classified during the testing phase.",
        "In fact, during this phase we do not know which are the arguments associated with a predicate.",
        "Thus, we need to build all the possible structures, which contain groups of potential arguments for the target predicate.",
        "More in detail, assuming that S is the set of PropBank argument types, and m is the maximum number of entries that the target predicate can have, we have to evaluate (s) argument combinations for each target predicate.",
        "In order to define an efficient semantic space we select as objects only the minimal substructures that include one predicate with only one of its arguments.",
        "For example, Figure 2 illustrates the parse-tree of the sentence \"Paul delivers a lecture in formal style\".",
        "The circled substructures in (a), (b) and (c) are our semantic objects associated with the three arguments of the verb to deliver, i.e. <deliver, Arg0>, <deliver, Arg1> and <deliver, ArgM>.",
        "In this formulation, only one of the above structures is associated with each predicate/argument pair, i.e. Fp,a contain only one of the circled sub-trees.",
        "We note that our approach has the following properties:",
        "• The overall semantic feature space F contain substructures composed of syntactic information embodied by parse-tree dependencies and semantic information under the form of predicate/argument annotation.",
        "• This solution is efficient as we have to classify at maximum IAI nodes for each predicate, i.e. the set of the parse-tree nodes of a testing sentence.",
        "• A constituent cannot be part of two different arguments of the target predicate, i.e. there is no overlapping between the words of two arguments.",
        "Thus, two semantic structures Fp1,a1 and Fp2,a23, asso",
        "3Fp,a was defined as the set of features of our objects <p, a>.",
        "Since in our kernel we have only one element in Fp,a with an abuse of notation we use it to indicate the objects themselves.",
        "ciated with two different arguments, cannot be included one in the other.",
        "This property is important because, a convolution kernel would not be effective to distinguish between an object and its sub-parts.",
        "Once defined our semantic space we need to design a kernel function to measure a similarity between two objects.",
        "These latter may still be seen as described by complex features but such a similarity is carried out avoiding the explicit feature computation.",
        "For this purpose we define a mapping 0 : F – > F' such as:",
        "where F' allows us to design an efficient semantic kernel K(x, �z) _<0(�x) • 0(�z)>."
      ]
    },
    {
      "heading": "3.1 The Semantic Kernel (SK)",
      "text": [
        "Given the semantic objects defined in the previous section, we design a convolution kernel in a way similar to the parse-tree kernel proposed in (Collins and Duffy, 2002).",
        "Our feature set F' is the set of all possible substructures (enumerated from 1 to 1F'1) of the semantic objects extracted from PropBank.",
        "For example, Figure 3 illustrates all valid fragments of the semantic structure Fdeliver,Arg1 (see also Figure 2).",
        "It is worth noting that the allowed sub-trees contain the entire (not partial) production rules.",
        "For instance, the sub-tree [NP [D a]] is excluded from the set of the Figure 3 since only a part of the production NP – > D N is used in its generation.",
        "However, this constraint does not apply to the production VP – > V NP PP along with the fragment [VP [V NP]] as the subtree [VP [PP [...]]] is not considered part of the semantic structure.",
        "Even if the cardinality of F' will be very large the evaluation of the kernel function is polynomial in the number of parse-tree nodes.",
        "More precisely, a semantic structure x� is mapped in 0(x) _ (h1 (x), h2 (x), ...), where the feature function hi(x) simply counts the number of times that the i-th substructure of the training data appears in x.",
        "Let",
        "where Nx and Nz are the nodes in x and z, respectively.",
        "In (Collins and Duffy, 2002), it has been shown that Eq.",
        "1 can be computed in O (1 Nx 1 x 1 Nz 1) by eval",
        "uating A(nx, nz) _ Pi Ii(nx)Ii(nz) with the following recursive equations: • if the production at nx and nz are different then",
        "4Additionally, we carried out the normalization in the kernel space, thus the final kernel is K'(�x, �z) = x(-e,-z) √x(-e,-e) × x(-z,-z) .",
        "• if the production at n., and nz are the same, and n., and nz are pre-terminals then",
        "• if the production at n., and nz are the same, and n., and nz are not pre-terminals then",
        "where nc(n.,) is the number of children of n., and ch(n, i) is the i-th child of the node n. Note that as the productions are the same ch(n.,, i) = ch(nz, i).",
        "This kind of kernel has the drawback of assigning more weight to larger structures while the argument type does not depend at all on the size of its structure.",
        "In fact two sentences such as:",
        "(1) [Argo Paul ][predicate delivers ] [Argo a lecture] and (2) [Argo Paul ][predicate delivers ] [Arg1 a plan on the detection of theorist groups active in the North Iraq] have the same argument type with a very different size.",
        "To overcome this problem we can scale the relative importance of the tree fragments with their size.",
        "For this purpose a parameter A is introduced in equations 2 and 3 obtaining:",
        "It is worth noting that even if the above equations define a kernel function similar to the one proposed in (Collins and Duffy, 2002), the substructures on which SK operates are different from the parse-tree kernel.",
        "For example, Figure 3 shows that structures such as [VP [V] [NP]], [VP [V delivers ] [NP]] and [VP [V] [NP [DT N]]] are valid features, but these fragments (and many others) are not generated by a complete production, i.e. VP → V NP PP.",
        "As a consequence they are not included in the parse-tree kernel representation of the sentence."
      ]
    },
    {
      "heading": "3.2 Comparison with Standard Features",
      "text": [
        "We have synthesized the comparison between standard features and the SK representation in the following points.",
        "First, SK estimates a similarity between two semantic structures by counting the number of substructures that are in common.",
        "As an example, the similarity between the two structures in Figure 2, F°delivers°,Arg0 and F°delivers°,Arg1, is equal to 1 since they have in common only the [V delivers] substructure.",
        "Such low value depends on the fact that different argument types tend to appear in different structures.",
        "On the contrary, if two structures differ only for a few nodes (especially terminal or near terminal nodes) the similarity remains quite high.",
        "For example, if we change the tense of the verb to deliver (Figure 2) in delivered, the [VP [V delivers] NP] subtree will be transformed in [VP [VBD delivered] NP], where the NP is unchanged.",
        "Thus, the similarity with the previous structure will be quite high as: (1) the NP with all sub-parts will be matched and (2) the small difference will not highly affect the kernel norm and consequently the final score.",
        "This conservative property does not apply to the Parse Tree Path feature which is very sensible to small changes in the tree-structure, e.g. two predicates, expressed in different tenses, generate two different Path features.",
        "Second, some information contained in the standard features is embedded in SK: Phrase Type, Predicate Word and Head Word explicitly appear as structure fragments.",
        "For example, in Figure 3 are shown fragments like [NP [DT] [N]] or [NP [DT a] [N talk]] which explicitly encode the Phrase Type feature NP for Arg 1 in Figure 2.b.",
        "The Predicate Word is represented by the fragment [V delivers] and the Head Word is present as [N talk].",
        "Finally, Governing Category, Position and Voice cannot be expressed by SK.",
        "This suggests that a combination of the flat features (especially the named entity class (Surdeanu et al., 2003)) with SK could furthermore improve the predicate argument representation."
      ]
    },
    {
      "heading": "4 The Experiments",
      "text": [
        "For the experiments, we used PropBank (www.cis.upenn.edu/ – ace) along with Penn-TreeBank5 2 (www.cis.upenn.edu/ – treebank) (Marcus et al., 1993).",
        "This corpus contains about 53,700 sentences and a fixed split between training and testing which has been used in other researches (Gildea and Jurasky, 2002; Surdeanu et al., 2003; Hacioglu et al., 2003; Chen and Rambow, 2003; Gildea and Hocken-maier, 2003; Gildea and Palmer, 2002; Pradhan et al., 2003).",
        "In this split, Sections from 02 to 21 are used for training, section 23 for testing and sections 1 and 22 as developing set.",
        "We considered all PropBank arguments from Arg0 to Arg9, ArgA and ArgM even if only Arg0 from Arg4 and ArgM contain enough training/testing data to affect the global performance.",
        "In Table 2 some characteristics of the corpus used in our experiments are reported.",
        "The classifier evaluations were carried out using the SVM-light software (Joachims, 1999) available at http://svmlight.joachims.org/ with the default linear kernel for the standard feature evaluations.",
        "For processing our semantic structures, we implemented our own kernel and we used it inside SVM-light.",
        "The classification performances were evaluated using the f, measure for single arguments as each of them has a different Precision and Recall and by using the accuracy for the final multi-class classifier as the global Precision = Recall = accuracy.",
        "The latter measure allows us to compare the results with previous literature works, e.g. (Gildea and Palmer, 2002; Surdeanu et al., 2003; Hacioglu et al., 2003; Chen and Rambow, 2003; Gildea and Hockenmaier, 2003).",
        "To evaluate the effectiveness of our new kernel we divided the experiments in 3 steps:",
        "• The evaluation of SVMs trained with standard features in a linear kernel, for comparison purposes.",
        "• The estimation of the A parameter (equations 4 and 5) for SK from the validation-set .",
        "• The performance measurement of SVMs, using SK along with A computed in the previous step.",
        "Additionally, both Linear and SK kernels were evaluated using different percentages of training data to compare the gradients of their learning curves."
      ]
    },
    {
      "heading": "4.1 SVM performance on Linear and Semantic Kernel",
      "text": [
        "The evaluation of SVMs using a linear kernel on the standard features did not raise particular problems.",
        "We used the default regularization parameter (i.e., C = 1 for normalized kernels) and we tried a few cost-factor values (i.e., j E {0.1, 1, 2, 3, 4, 5}) to adjust the rate between precision and recall.",
        "Given the huge amount of training data, we used only 30% of training-set in these validation experiments.",
        "Once the parameters were derived, we learned 6 different classifiers (one for each role) and measured their performances on the test-set.",
        "We note that the maximal value from the validation-set is also the maximal value from the test-set for every argument.",
        "This suggests that: (a) it is easy to detect an optimal parameter and (b) there is a common (to all arguments) A-value which defines how much the size of two structures impacts on their similarity.",
        "Moreover, some experiments using A greater than 1 have shown a remarkable decrease in performance, i.e. a correct A seems to be essential to obtain a good generalization6 of the training-set.",
        "Table 3 reports the performances of SVM trained with the standard features (STD column) and with the Semantic Kernel (SK column).",
        "In columns Prob.",
        "and C4.5 are reported the results for argument classification achieved in (Gildea and Palmer, 2002) and (Surdeanu et al., 2003).",
        "This latter used C4.5 model on standard feature set (STD sub-column) and on an extended feature set (EXT sub-column).",
        "We note that: (a) SVM performs better than the probabilistic approach and C4.5 learning model independently of the adopted features and (b) the Semantic Kernel considerably improves the standard feature set.",
        "In order to investigate if SK generalizes better than the",
        "linear kernel, we measured the performances by selecting different percentages of training data.",
        "Figure 5 shows the curves for the three roles Arg0, Arg1 and ArgM, respectively for linear and semantic kernel whereas Figure 6 shows the multi-class classifier f 1 plots.",
        "We note that not only SK produces higher accuracy but also the gradient of the learning curves is higher: for example, Figure 6 shows that with only 20% of training data, SVM using SK approaches the accuracy of SVM trained with all data on standard features.",
        "Additionally, we carried out some preliminary experiments for argument identification (boundary detection), but the learning algorithm was not able to converge.",
        "In fact, for this task the non-inclusion property (discussed in Section 3) does not hold.",
        "A constituent ai, which has incorrect boundaries, can include or be included in the correct argument a,.",
        "Thus, the similarity K(ai, a,) between ai and a, is quite high preventing the algorithm to learn the structures of correct arguments."
      ]
    },
    {
      "heading": "4.2 Discussion and Related Work",
      "text": [
        "The material of the previous sections requires a discussion of the following points: firstly, in Section 3.2 we have noted that some standard features are explicitly coded in SK but Governing Category, Position and Voice features are not expressible as a single fragment of a semantic structure.",
        "For example, to derive the Position of an argument relatively to the target predicate is required a visit of the tree.",
        "No parse-tree information, i.e. node tags or edges, explicitly indicates this feature.",
        "A similar rationale applies to Governing Category and Voice, even if for the latter some tree fragments may code the to be feature.",
        "Since these three features have been proved important for role classification we argue that either (a) SK implicitly produces this kind of information or (b) SK is able to provide a different but equally effective information which allows it to perform better than the standard features.",
        "In this latter case, it would be interesting to study which features can be backported from SK to the linear kernel to obtain a fast and improved system (Cumby and Roth, 2003).",
        "As an example, the fragment [VP [V NP]] defines a sort of sub-categorization frame that may be used to cluster together syntactically similar verbs.",
        "Secondly, it is worth noting that we compared SK against a linear kernel of standard features.",
        "A recent study, (Pradhan et al., 2003), has suggested that a polynomial kernel with degree = 2 performs better than the linear one.",
        "Using such a kernel, the authors obtained 88% in classification but we should take into account that they also used a larger set of flat features, i.e. sub-categorization information (e.g. VP – > V NP PP for the tree in Figure 1), Named Entity Classes and a Partial Path feature.",
        "Thirdly, this is one of the first massive use of convolution kernels for Natural Language Processing tasks, we trained SK and tested it on 123,918 and 7,426 arguments, respectively.",
        "For training each large argument (in term of instances) were required more than 1.5 billion of kernel iterations.",
        "This was a little time consuming (about a couple of days for each argument on a Intel Pentium 4, 1,70 GHz, 512 Mbytes Ram) as the SK computation complexity is quadratic in the number of semantic structure nodes7.",
        "This prevented us to carry out cross/fold validation.",
        "An important aspect is that a recent paper (Vishwanathan and Smola, 2002) assesses that the tree-kernel complexity can be reduced to linear one; this would make our approach largely applicable.",
        "Finally, there is a considerable work in Natural Language Processing oriented kernel (Collins and Duffy, 2002; Lodhi et al., 2000; G¨artner, 2003; Cumby and Roth, 2003; Zelenko et al., 2003) about string, parse",
        "semantic structure of the training data.",
        "tree, graph, and relational kernels but, to our knowledge, none of them was used to derive semantic information on the form of predicate argument structures.",
        "In particular, (Cristianini et al., 2001; Kandola et al., 2003) address the problem of semantic similarity between two terms by using, respectively, document sets as term context and the latent semantic indexing.",
        "Both techniques attempt to cluster together terms that express the same meaning.",
        "This is quite different in means and purpose of our approach that derives more specific semantic information expressed as argument/predicate relations."
      ]
    },
    {
      "heading": "5 Conclusions",
      "text": [
        "In this paper, we have experimented an original kernel based on semantic structures from PropBank corpus.",
        "The results have shown that:",
        "• the Semantic Kernel (SK) can be adopted to classify predicate arguments defined in PropBank; • SVMs using SK performs better than SVMs trained with the linear kernel of standard features; and • the higher gradient in the accuracy/trainingpercentage plots shows that SK generalizes better than the linear kernel.",
        "Finally, SK suggests that some features, contained in the fragments of semantic structures, should be backported in a flat feature space.",
        "Conversely, the good performance of the linear kernel suggests that standard features, e.g. Head Word, Predicate Word should be emphasized in the definition of a convolution kernel for argument classification.",
        "Moreover, other selections of predicate/argument substructures (able to capture different linguistic relations) as well as kernel combinations (e.g. flat features with SK) could furthermore improve semantic shallow parsing."
      ]
    },
    {
      "heading": "6 Acknowledgements",
      "text": [
        "This research has been sponsored by the ARDA AQUAINT program.",
        "In addition, we would like to thank prof. Sanda Harabagiu to support us with interesting advices.",
        "Many thanks to the anonymous reviewers for their professional and committed suggestions."
      ]
    }
  ]
}
