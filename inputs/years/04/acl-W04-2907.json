{
  "info": {
    "authors": [
      "Cyril Allauzen",
      "Mehryar Mohri",
      "Murat Saraçlar"
    ],
    "book": "Workshop on Interdisciplinary Approaches to Speech Indexing and Retrieval",
    "id": "acl-W04-2907",
    "title": "General Indexation of Weighted Automata - Application to Spoken Utterance Retrieval",
    "url": "https://aclweb.org/anthology/W04-2907",
    "year": 2004
  },
  "references": [
    "acl-J97-2003",
    "acl-N04-1017"
  ],
  "sections": [
    {
      "heading": "1 Motivation",
      "text": [
        "Much of the massive quantities of digitized data widely available is highly variable or uncertain.",
        "This uncertainty affects the interpretation of the data and its computational processing at various levels, e.g., natural language texts are abundantly ambiguous, speech and handwritten sequences are highly variable and hard to recognize in presence of noise, biological sequences may be altered or incomplete.",
        "Searching or indexing such data requires dealing with a large number of ranked or weighted alternatives.",
        "These may be for example the different parses of an input text, the various responses to a search engine or information extraction query, or the best hypotheses of a speech or handwritten recognition system.",
        "In most cases, alternative sequences can be compactly represented by weighted automata.",
        "The weights may be probabilities or some other weights used to rank different hypotheses.",
        "This motivates our study of the general problem of indexation of weighted automata.",
        "This is more general than the classical indexation problems since, typically, there are many distinct hypotheses or alternatives associated with the same index, e.g., a specific input speech or handwritten sequence may have a large number of different transcriptions according to the system and models used.",
        "Moreover, the problem requires taking into consideration the weight of each alternative, which does not have a counterpart in classical indexation problems.",
        "We describe a general indexation algorithm for weighted automata.",
        "The resulting index is represented by a deterministic weighted transducer that is optimal for search: the search for an input string takes time linear in the sum of the size of that string and the number of indices of the weighted automata where it appears.",
        "In some cases, one may wish to search using sequences in some level, e.g. word sequences, different from the level of the sequences of the index, e.g. phonemic sequences.",
        "One may also wish to search for complex sequences including both words and parts-of-speech, or re"
      ]
    },
    {
      "heading": "Abstract",
      "text": [
        "Much of the massive quantities of digitized data widely available, e.g., text, speech, handwritten sequences, are either given directly, or, as a result of some prior processing, as weighted automata.",
        "These are compact representations of a large number of alternative sequences and their weights reflecting the uncertainty or variability of the data.",
        "Thus, the indexation of such data requires indexing weighted automata.",
        "We present a general algorithm for the indexation of weighted automata.",
        "The resulting index is represented by a deterministic weighted transducer that is optimal for search: the search for an input string takes time linear in the sum of the size of that string and the number of indices of the weighted automata where it appears.",
        "We also introduce a general framework based on weighted transducers that generalizes this indexation to enable the search for more complex patterns including syntactic information or for different types of sequences, e.g., word sequences instead of phonemic sequences.",
        "The use of this framework is illustrated with several examples.",
        "We applied our general indexation algorithm and framework to the problem of indexation of speech utterances and report the results of our experiments in several tasks demonstrating that our techniques yield comparable results to previous methods, while providing greater generality, including the possibility of searching for arbitrary patterns represented by weighted automata.",
        "strict the search by either restricting the weights or probabilities or the lengths or types of sequences.",
        "We describe a general indexation framework covering all these cases.",
        "Our framework is based on the use of filtering weighted transducers for restriction or other transducers mapping between distinct information levels or knowledge structures.",
        "We illustrate the use of this framework with several examples that demonstrate its relevance to a number of indexation tasks.",
        "We applied our framework and algorithms to the particular problem of speech indexation.",
        "In recent years, spoken document retrieval systems have made large archives of broadcast news searchable and browsable.",
        "Most of these systems use automatic speech recognition to convert speech into text, which is then indexed using standard methods.",
        "When a user presents the system with a query, documents that are relevant to the query are found using text-based information retrieval techniques.",
        "As speech indexation and retrieval systems move beyond the domain of broadcast news to more challenging spoken communications, the importance for the indexed material to contain more than just a simple text representation of the communication is becoming clear.",
        "Indexation and retrieval techniques must be extended to handle more general representations including for example syntactic information.",
        "In addition to the now familiar retrieval systems or search engines, other applications such as data mining systems can be used to automatically identify useful patterns in large collections of spoken communications.",
        "Information extraction systems can be used to gather high-level information such as named-entities.",
        "For a given input speech utterance, a large-vocabulary speech recognition system often generates a lattice, a weighted automaton representing a range of alternative hypotheses with some associated weights or probabilities used to rank them.",
        "When the accuracy of a system is relatively low as in many conversational speech recognition tasks, it is not safe to rely only on the best hypothesis output by the system.",
        "It is then preferable to use instead the full lattice output by the recognizer.",
        "We report the results of our experiments in several tasks demonstrating that our techniques yield comparable results to the previous methods of Saraclar and Sproat (2004), while providing greater generality, including the possibility of searching for arbitrary patterns represented by weighted automata.",
        "The paper is organized as follows.",
        "Section 2 introduces the notation and the definitions used in the rest of the paper.",
        "Section 3 describes our general indexation algorithm for weighted automata.",
        "The algorithm for searching that index is presented in Section 4 and our general indexation framework is described and illustrated in Section 5.",
        "Section 6 reports the results of our experiments in several tasks."
      ]
    },
    {
      "heading": "2 Preliminaries",
      "text": []
    },
    {
      "heading": "Definition 1 A system (K, G, ®, 0,1) is a semiring",
      "text": [
        "(Kuich and Salomaa, 1986) if: (K, G, 0) is a commutative monoid with identity element 0; (K, ®,1) is a monoid with identity element 1; ® distributes over G; and 0 is an annihilatorfor ®: for all a E K, a ® 0 = 0 ® a = 0.",
        "Thus, a semiring is a ring that may lack negation.",
        "Two semirings often used in speech processing are: the log semiring L = (R U fool, Glog, +, oo, 0) (Mohri, 2002) which is isomorphic to the familiar real or probability semiring (R+, +, x, 0,1) via a log morphism with, for all a,bERU fool: a Glog b = – log(exp( – a) + exp( – b)) and the convention that: exp( – oo) = 0 and – log(0) = oo, and the tropical semiring T = (R+ U fool, min, +, oo, 0) which can be derived from the log semiring using the Viterbi approximation.",
        "Definition 2 A weighted finite-state transducer T over a semiring K is an 8-tuple T = (E, A, Q, I, F, E, λ, ρ) where: E is the finite input alphabet of the transducer; A is the finite output alphabet; Q is a finite set of states; I C_ Q the set of initial states; F C_ Q the set offinal states; EC_Qx(EUfcl)x(AUfcl)xKxQafinite set of transitions; λ : I – > K the initial weight function; and ρ : F – > K the final weight function mapping F to K. A Weighted automaton A = (E, Q, I, F, E, λ, ρ) is defined in a similar way by simply omitting the output labels.",
        "We denote by L(A) C_ E* the set of strings accepted by an automaton A and similarly by L(X) the strings described by a regular expression X.",
        "We denote by JAJ = JQJ + JEJ the size of A.",
        "Given a transition e E E, we denote by i[e] its input label, p[e] its origin or previous state and n[e] its destination state or next state, w[e] its weight, o[e] its output label (transducer case).",
        "Given a state q E Q, we denote by E[q] the set of transitions leaving q.",
        "A path 7r = e1 • • • ek is an element of E* with consecutive transitions: n[ei_1] = p[ei], i = 2, ... , k. We extend n and p to paths by setting: n[7r] = n[ek] and p[7r] = p[e1].",
        "A cycle 7r is a path whose origin and destination states coincide: n[7r] = p[7r].",
        "We denote by P(q, q') the set of paths from q to q' and by P(q, x, q') and P(q, x, y, q') the set of paths from q to q' with input label x E E* and output label y (transducer case).",
        "These definitions can be extended to subsets R, R' C_ Q, by: P(R, x, R') = UgER, g�ER�P(q, x, q').",
        "The labeling functions i (and similarly o) and the weight function w can also be extended to paths by defining the label of a path as the concatenation of the labels of its constituent transitions, and the weight of a path as the ®-product of the weights of its constituent transitions:",
        "larly, the output weight associated by a transducer T to a pair of input-output string (x, y) is:",
        "path in a weighted automaton or transducer M is a path from an initial state to a final state.",
        "M is unambiguous if for any string x E E* there is at most one successful path labeled with x.",
        "Thus, an unambiguous transducer defines a function.",
        "For any transducer T, denote by II2 (T) the automaton obtained by projecting T on its output, that is by omitting its input labels.",
        "Note that the second operation of the tropical semiring and the log semiring as well as their identity elements are identical.",
        "Thus the weight of a path in an automaton A over the tropical semiring does not change if A is viewed as a weighted automaton over the log semiring or vice-versa.",
        "Given two strings u and v in E*, v is a factor of u if u = xvy for some x and y in E*; if y = e then v is also a suffix of u.",
        "More generally, v is afactor (resp.",
        "suffix) of L C_ E* if v is a suffix (resp.",
        "factor) of some u E L. We denote by I x I the length of a string x E E*."
      ]
    },
    {
      "heading": "3 Indexation Algorithm",
      "text": [
        "This section presents an algorithm for the construction of an efficient index for a large set of speech utterances.",
        "We assume that for each speech utterance ui of the dataset considered, i = 1, ... , n, a weighted automaton Ai over the alphabet E and the log semiring, e.g., phone or word lattice output by an automatic speech recognizer, is given.",
        "The problem consists of creating a full index, that is one that can be used to search directly any factor of any string accepted by these automata.",
        "Note that this problem crucially differs from classical indexation problems in that the input data is uncertain.",
        "Our algorithm must make use of the weights associated to each string by the input automata.",
        "The main idea behind the design of the algorithm described is that the full index can be represented by a weighted finite-state transducer T mapping each factor x to the set of indices of the automata in which x appears and the negative log of the expected count of x.",
        "More precisely, let Pi be the probability distribution defined by the weighted automaton Ai over the set of strings E* and let Cx (u) denote the number of occurrences of a factor x in u, then, for any factor x E E* and automaton index",
        "Our algorithm for the construction of the index is simple, it is based on general weighted automata and transducer algorithms.",
        "We describe the consecutive stages of the algorithm.",
        "This algorithm can be seen as a generalization to weighted automata of the notion of suffix automaton and factor automaton for strings.",
        "The suffix (factor) automaton of a string u is the minimal deterministic finite automata recognizing exactly the set of suffixes (resp.",
        "factors) of u (Blumer et al., 1985; Crochemore, 1986).",
        "The size of both automata is linear in the length of u and both can be built in linear time.",
        "These are classical representations used in text indexation (Blumer et al., 1987; Crochemore, 1986)."
      ]
    },
    {
      "heading": "3.1 Preprocessing",
      "text": [
        "When the automata Ai are word or phone lattices output by a speech recognition or other natural language processing system, the path weights correspond to joint probabilities.",
        "We can apply to Ai a general weight-pushing algorithm in the log semiring (Mohri, 1997) which converts these weights into the desired (negative log of) posterior probabilities.",
        "More generally, the path weights in the resulting automata can be interpreted as log-likelihoods.",
        "We denote by Pi the corresponding probability distribution.",
        "When the input automaton Ai is acyclic, the complexity of the weight-pushing algorithm is linear in its size (O (I AiI)).",
        "Figures 1(b)(d) illustrates the application of the algorithm to the automata of Figures 1(a)(c)."
      ]
    },
    {
      "heading": "3.2 Construction of Transducer Index T",
      "text": [
        "Let Bi = (E, Qi, Ii, Fi, Ei, λi, ρi) denote the result of the application of the weight pushing algorithm to the automaton Ai.",
        "The weight associated by Bi to each string it accepts can be interpreted as the log-likelihood of that string for the utterance ui given the models used to generate the automata.",
        "More generally, Bi defines a probability distribution Pi over all strings x E E* which is just the sum of the probability of all paths of Bi in which x appears.",
        "For each state q E Qi, denote by d[q] the shortest distance from Ii to q (or log of the forward probability) and by f [q] the shortest distance from q to F (or log of the backward probability):",
        "• Create a new transition (s, e, e, d[q], q) for each state q E Qi; • Create a new transition (q, e, i, f [q], e) for each state q E Qi; 2.",
        "Optimization.",
        "The resulting transducer can be optimized by applying weighted e-removal, weighted determinization, and minimization over the log semiring",
        "by viewing it as an acceptor, i.e., input-output labels are encoded a single labels.",
        "It is clear from Equation 4 that for any factor x E E*:",
        "This construction is illustrated by Figures 2(a)(b).",
        "Our full index transducer T is the constructed by",
        "• taking the",
        "⊕log-sum (or union) of all the transducers",
        "• defining T as the result of determinization (in the log semiring) applied to that transducer.",
        "d optimization.",
        "T1 index of the weighted au-B1 given Figure 1(b): (a) intermediary result after factor selection and (b) resulting weighted transducer",
        "The full index represented by the weighted finite-state transducer T is optimal.",
        "Indeed, T contains no transition with input e other than the final transitions labeled with an output index and it is deterministic.",
        "Thus, the set of indices Ix of the weighted automata containing a factor x can be obtained in",
        "by reading in T the unique path with input label x and then the transitions with input e which have each a distinct output label.",
        "The user’s query is typically an unweighted string, but it can be given as an arbitrary weighted automaton X.",
        "This covers the case of Boolean queries or regular expressions which can be compiled into automata.",
        "The response to a query X is computed using the general algorithm of composition of weighted transducers (Mohri et al., 1996) followed by projection on the output:",
        "which is then e-removed and determinized to give directly the list of all indices and their corresponding log",
        "likelihoods.",
        "The final result can be pruned to include only the most likely responses.",
        "The pruning threshold may be used to vary the number of responses."
      ]
    },
    {
      "heading": "5 General Indexation Framework",
      "text": [
        "The indexation technique just outlined can be easily extended to include many of the techniques used for speech indexation.",
        "This can be done by introducing a transducer F that converts between different levels of information sources or structures, or that filters out or reweights index entries.",
        "The filter F can be applied (i) before, (ii) during or (iii) after the construction of the index.",
        "For case (i), the filter is used directly on the input and the indexation algorithm is applied to the weighted automata (F o Ai) 1<i<n. For case (ii), filtering is done after the factor selection step of the algorithm and the filter applies to the factors, typically to restrict the factors that will be indexed.",
        "For case (iii), the filter is applied to the index.",
        "Obviously different filters can be used in combination at different stages.",
        "When such a filter is used, the response to a query X is obtained using another transducer F' 1 and the following composition and projection:",
        "Since composition is associative, it does not impose a specific order to its application.",
        "However, in practice, it is often advantageous to compute X o F' before application of T. The following are examples of some filter transducers that can be of interest in many applications.",
        "• Pronunciation Dictionary: a pronunciation dictionary can be used to map word sequences into their phonemic transcriptions, thus transform word lattices into equivalent phone lattices.",
        "This mapping can represented by a weighted transducer F. Using an index based on phone lattices allows a user to search for words that are not in the ASR vocabulary.",
        "In this case, the inverse transduction F' is a grapheme to phoneme converter, commonly present in TTS front-ends.",
        "Among others, Witbrock and Hauptmann (1997) present a system where a phonetic transcript is obtained from the word transcript and retrieval is performed using both word and phone indices.",
        "• Vocabulary Restriction: in some cases using a full index can be prohibitive and unnecessary.",
        "It might be desirable to do partial indexing by ignoring some words (or phones) in the input.",
        "For example, we might wish to index only “named entities”, or just the consonants.",
        "This is mostly motivated by the reduction of the size of the index while retaining the necessary information.",
        "A similar approach is to apply a many to one mapping to index groups of phones, or metaphones (Amir et al., 2001), to overcome phonetic errors.",
        "• Reweighting: a weighted transducer can be used to emphasize some words in the input while deemphasizing other.",
        "The weights, for example might correspond to TF-IDF weights.",
        "Another reweight-ing method might involve edit distance or confusion statistics.",
        "• Classification: an extreme form of summarizing the information contained in the indexed material is to assign a class label, such as a topic label, to each input.",
        "The query would also be classified and all answers with the same class label would be returned as relevant.",
        "• Length Restriction: a common way of indexing phone strings is to index fixed length overlapping phone strings (Logan et al., 2002).",
        "This results in a partial index with only fixed length strings.",
        "More generally a minimum and maximum string length may be imposed on the index.",
        "An example restriction automaton is given in Figure 4.",
        "In this case, the filter applies to the factors and has to be applied during or after indexation.",
        "The restricted index will be smaller in size but contains less information and may result in degradation in retrieval performance, especially for long queries.",
        "The length restriction filter requires a modification of the search procedure.",
        "Assume a fixed – say r – length restriction filter and a string query of length k. If k < r,",
        "then we need to pad the input to length r with Erk.",
        "If k ≥ r, then we must search for all substrings of length r in the index.",
        "A string is present in a certain lattice if all its substrings are (and not vice versa).",
        "So, the results of each substring search must be intersected.",
        "The probability of each substring xi+r-1 for i E 11, ... , k + 1 − r} is an upper bound on the probability of the string xk1, and the count of each substring is an upper bound on the count of the string, so for i E 11,.",
        ".. , k + 1 − r}",
        "Since, we take the system described there as our baseline, we give a brief review of the basic indexation algorithm used there.",
        "The algorithm uses the same preprocessing step.",
        "For each label in E, an index file is constructed.",
        "For each arc a that appears in the preprocessed weighted automaton Bi, the following information is stored: (i, p[a], n[a], d[p[a]], w[a]).",
        "Since the preprocessing ensures that f [q] = 0 for all q in Bi, it is possible to compute − log(EP, [Cx]) as in Equation 4 using the information stored in the index."
      ]
    },
    {
      "heading": "6.1 Evaluation Metrics",
      "text": [
        "For evaluating retrieval performance we use precision and recall with respect to manual transcriptions.",
        "Let Correct(q) be the number of times the query q is found correctly, Answer(q) be the number of answers to the query q, and Reference(q) be the number of times q is found in the reference.",
        "We compute precision and recall rates for each query and report the average over all queries.",
        "The set of queries Q includes all the words seen in the reference except for a stoplist of 100 most common words.",
        "Therefore, the intersection operation must use minimum Precision = 1 Precision(q) for combining the expected counts of substrings.",
        "In other IQI 9EQ Recall(q) words, the expected count of the string is approximated 1 by the minimum of the probabilities of each of its sub Recall = strings, IQI 9EQ",
        "In addition to a filter transducer, pruning can be applied at different stages of the algorithm to reduce the size of the index.",
        "Pruning eliminates least likely paths in a weighted automaton or transducer.",
        "Applying pruning to Ai can be seen as part of the process that generates the uncertain input data.",
        "When pruning is applied to Bi, only the more likely alternatives will be indexed.",
        "If pruning is applied to Ti, or to T, pruning takes the expected counts into consideration and not the probabilities.",
        "Note that the threshold used for this type of pruning is directly comparable to the threshold used for pruning the search results in Section 4 since both are thresholds on expected counts."
      ]
    },
    {
      "heading": "6 Experimental Results",
      "text": [
        "Our task is retrieving the utterances (or short audio segments) that a given query appears in.",
        "The experimental setup is identical to that of Saraclar and Sproat (2004).",
        "For lattice based retrieval methods, different operating points can be obtained by changing the threshold.",
        "The precision and recall at these operating points can be plotted as a curve.",
        "In addition to individual precision-recall values we also compute the F-measure defined as",
        "and report the maximum F-measure (maxF) to summarize the information in a precision-recall curve."
      ]
    },
    {
      "heading": "6.2 Corpora",
      "text": [
        "We use three different corpora to assess the effectiveness of different retrieval techniques.",
        "The first corpus is the DARPA Broadcast News corpus consisting of excerpts from TV or radio programs including various acoustic conditions.",
        "The test set is the 1998 Hub-4 Broadcast News (hub4e98) evaluation test set (available from LDC, Catalog no.",
        "LDC2000S86)"
      ]
    },
    {
      "heading": "EP [C(xi+r-1)]",
      "text": [
        "which is 3 hours long and was manually segmented into 940 segments.",
        "It contains 32411 word tokens and 4885 word types.",
        "For ASR we use a real-time system (Saraclar et al., 2002).",
        "Since the system was designed for SDR, the recognition vocabulary of the system has over 200K words.",
        "The second corpus is the Switchboard corpus consisting of two party telephone conversations.",
        "The test set is the RT02 evaluation test set which is 5 hours long, has 120 conversation sides and was manually segmented into 6266 segments.",
        "It contains 65255 word tokens and 3788 word types.",
        "For ASR we use the first pass of the evaluation system (Ljolje et al., 2002).",
        "The recognition vocabulary of the system has over 45K words.",
        "The third corpus is named Teleconferences since it consists of multi-party teleconferences on various topics.",
        "A test set of six teleconferences (about 3.5 hours) was transcribed.",
        "It contains 31106 word tokens and 2779 word types.",
        "Calls are automatically segmented into a total of 1157 segments prior to ASR.",
        "We again use the first pass of the Switchboard evaluation system for ASR.",
        "We use the AT&T DCD Library (Allauzen et al., 2003) as our ASR decoder and our implementation of the algorithm is based on the AT&T FSM Library (Mohri et al., 2000), both of which are available for download."
      ]
    },
    {
      "heading": "6.3 Results",
      "text": [
        "We implemented some of the proposed techniques and made comparisons with the previous method used by Saraclar and Sproat (2004).",
        "The full indexing method consumed too much time while indexing Broadcast News lattices and used too much memory while indexing phone lattices for Teleconferences.",
        "In the other cases, we confirmed that the new method yields identical results.",
        "In Table 1 we compare the index sizes for full indexing and partial indexing with the previous method.",
        "In both cases, the input lattices are pruned so that the cost (negative log probability) difference between two paths is less than six.",
        "Although the new method results in much smaller index sizes for the string case (i.e. nbest=1), it can result in very large index sizes for full indexing of lattices (cost=6).",
        "However, partial indexing by length restriction solves this problem.",
        "For the results reported in Table 1, the length of the word strings to be indexed was restricted to be less than or equal to four, and the length of the phone strings to be indexed was restricted to be exactly four.",
        "In Saraclar and Sproat (2004), it was shown that using word lattices yields a relative gain of 3-5% in maxF over using best word hypotheses.",
        "Furthermore, it was shown that a “search cascade” strategy for using both word and phone indices increases the relative gain over the baseline to 8-12%.",
        "In this strategy, we first search the word index for the given query, if no matches are found we search the phone index.",
        "Using the partial indices, we obtained a precision recall performance that is almost identical to the one obtained with the previous method.",
        "Comparison of the maximum F-measure for both methods is given in",
        "As an example, we used a filter that indexes only consonants (i.e. maps the vowels to e).",
        "The resulting index was used instead of the full phone index.",
        "The size of the consonants only index was 370MB whereas the size of the full index was 431MB.",
        "In Figure 5 we present the precision recall performance of this consonant only index."
      ]
    },
    {
      "heading": "7 Conclusion",
      "text": [
        "We described a general framework for indexing uncertain input data represented as weighted automata.",
        "The indexation algorithm utilizes weighted finite-state algorithms to obtain an index represented as a weighted finite-state transducer.",
        "We showed that many of the techniques used for speech indexing can be implemented within this framework.",
        "We gave comparative results to a previous method for lattice indexing.",
        "The same idea and framework can be used for indexation in natural language processing or other areas where uncertain input data is given as weighted automata.",
        "The complexity of the index construction algorithm can be improved in some general cases using techniques similar to classical string matching ones (Blumer et al., 1985;",
        "Crochemore, 1986; Blumer et al., 1987).",
        "Various pruning techniques can be applied to reduce the size of the index without significantly degrading performance.",
        "Finally, other types of filters that make use of the general framework can be investigated."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "We wish to thank our colleague Richard Sproat for useful discussions and the use of the lattice indexing software (lctools) used in our baseline experiments."
      ]
    }
  ]
}
