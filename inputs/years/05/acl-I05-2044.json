{
  "info": {
    "authors": [
      "Meixun Jin",
      "Mi-Young Kim",
      "Jong-Hyeok Lee"
    ],
    "book": "Second International Joint Conference on Natural Language Processing: Companion Volume including Posters/Demos and tutorial abstracts",
    "id": "acl-I05-2044",
    "title": "Two-Phase Shift-Reduce Deterministic Dependency Parser of Chinese",
    "url": "https://aclweb.org/anthology/I05-2044",
    "year": 2005
  },
  "references": [
    "acl-A00-2018",
    "acl-C04-1010",
    "acl-C96-1058",
    "acl-P03-1056",
    "acl-P96-1025",
    "acl-P97-1003",
    "acl-W00-1201"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In the Chinese language, a verb may have its dependents on its left, right or on both sides.",
        "The ambiguity resolution of right-side dependencies is essential for dependency parsing of sentences with two or more verbs.",
        "Previous works on shift-reduce dependency parsers may not guarantee the connectivity of a dependency tree due to their weakness at resolving the right-side dependencies.",
        "This paper proposes a two-phase shift-reduce dependency parser based on SVM learning.",
        "The left-side dependents and right-side nominal dependents are detected in Phase I, and right-side verbal dependents are decided in Phase II.",
        "In experimental evaluation, our proposed method outperforms previous shift-reduce dependency parsers for the Chine language, showing improvement of dependency accuracy by 10.08%."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Dependency parsing describes syntactic structure of a sentence in terms of links between individual words rather than constituency trees.",
        "The fundamental relation in dependency parsing is between head and dependent.",
        "Robinson[1] formulates four axioms to the well-formed dependency structures, known as single headed, acyclic, connective and projective.",
        "In this paper, we present a dependency parsing strategy that produces one dependency structure that satisfies all these constraints.",
        "This paper is organized as follows.",
        "Related works are introduced in section 2.",
        "In section 3, detailed analysis of the work of Nivre[2] and Yamada[3] are given.",
        "Then our parsing strategy is introduced.",
        "In section 4, experiments and results are delivered.",
        "Finally a conclusion will be given in section 5."
      ]
    },
    {
      "heading": "2 Overview of Related Works",
      "text": [
        "Most nature language grammars tend to assign many possible syntactic structures to the same input utterance.",
        "A parser should output a single analysis for each sentence.",
        "The task of selecting one single analysis for a given sentence is known as disambiguation.",
        "Some of the parsing strategies first produce all possible trees for a sentence.",
        "The disambiguation work is done in the end by searching the most probable one through parsing tree forest.",
        "Statistical parsers employ probability as a disambiguation measure and output the tree with the highest probability[4,5].",
        "However, in the work of Collins [6], 42% of the correct parse trees were not in the candidate pool of ~30-best parses.",
        "Disambiguation work by searching throughout the parsing tree forest has limitations.",
        "The alternative way is to disambiguate at each parsing step and output the parsing result deterministically.",
        "Nivre[2] and Yamada[3] suggest a shift-reduce like dependency parsing strategy.",
        "In section 3.1 we give a detailed analysis of their approach.",
        "There are several approaches for dependency parsing on Chinese text.",
        "Ma[5] and Cheng[18] are examples of these approaches.",
        "The training and test set Ma[5] used, are not sufficient to prove the reliability of Ma’s[5] approach.",
        "On the frame of parsing Chinese with CFG, there are several approaches to apply the original English parsing strategies to Chinese [7,8,9].",
        "The potential purposes of these works are to take advantage of state-of-art English parsing strategy and to find a way to apply it to Chinese text.",
        "Due to the differences between Chinese and English,",
        "这个 省 计划 扩大 招商 引资, This province plan extend attract merchants attract investments.",
        "The province plans to expand attracting merchants and investments.",
        "stack , input relation set A",
        "the performance of the system on Chinese is about 10% lower comparing the performance of the original system."
      ]
    },
    {
      "heading": "3 Two-Phase Dependency Parsing",
      "text": []
    },
    {
      "heading": "3.1 Review of Previous Shift-Reduce Dependency Parsers",
      "text": [
        "Nivre[3] presented a shift-reduce dependency parsing algorithm which can parse in linear time.",
        "The Nivre’s parser was represented by a triples <S, I, A>, where S is a stack, I is a list of (remaining) input tokens, and A is the set of determined dependency relations.",
        "Nivre defined four transitions: Left-Arc, Right-Arc, Reduce, and Shift.",
        "If there is a dependency relation between the top word of the stack and the input word, according to the direction of the dependency arc, it can be either Left-Arc or Right-Arc.",
        "Otherwise, the transition can be either shift or reduce.",
        "If the head of the top word of the stack is already determined, then the transition is reduce, otherwise shift.",
        "The action of each transition is shown in Fig.1.",
        "For details, please refer to Nivre[3,10].",
        "Fig.2 gives an example1 of parsing a Chinese sentence using Nivre’s algorithm.",
        "Nivre’s[3,10] approach has several advantages.",
        "First, the dependency structure produced by the algorithm is projective and acyclic[3].",
        "Second, the algorithm performs very well for deciding short-distance dependences.",
        "Third, at each parsing step, all of the dependency relations on the left side of the input word are determined.",
        "Also as the author emphasizes, the time complexity is linear.",
        "However, wrong decision of reduce transition, like early reduce, cause the word at the top of the stack loses the chance to be the head of others.",
        "Some words lose the chance to be the head of other following words.",
        "As a result, the dependents of this word will have a wrong head or may have no head.",
        "The parsing steps of a Chinese sentence using Nivre’s[3] algorithm are given in Fig.2.",
        "At step5 of Fig.2, after reduce, the top of the stack was popped.",
        "The algorithm doesn’t give a chance for the word 扩大 to be the head of other words.",
        "Therefore, word ‘ 引 资’ cannot have word ‘扩 大’ as its head.",
        "In the final dependency tree of example-1 in Fig.2, the arc from 计划 to 引资 is wrong.",
        "Fig.3 gives the correct dependency tree.",
        "Here, 扩大 is the head of word 引资.",
        "Fig.4.",
        "gives the parsing step of another example.",
        "As the final dependency tree in Fig.4 shows, there is no head for word 消息 。 After Step-5, the top of the stack is word 给 and input word is – .",
        "There is no dependency relation between these two words.",
        "Since the head of the word 给 is already determined in step-2, the next transition is R(educe).",
        "As a result, word 给 loses the chance to be the head of word #J,l..",
        "So, there is no head assigned to word #J,l.",
        "in Fig.4.",
        "Therefore, Nivre’s algorithm causes some errors for determining the right-side dependents.",
        "Yamada’s algorithm define three actions: left, right and shift, which were similar to those of Nivre’s.",
        "Yamada parsed a sentence by scanning the sentence word by word from left to right, during the meantime, left or right or shift actions were decided.",
        "For short dependents, Yamada’s algorithm can cope with it easily.",
        "For long dependents, Yamada tried to solve by increasing the iteration of scanning the sentences.",
        "As Yamada pointed out, ‘shift’ transition was executed for two kinds of structure.",
        "This may cause wrong decision while deciding the action of transition.",
        "Yamada tried to resolve it by looking ahead for more information on the right side of the target word.",
        "When applying to Chinese parsing, the determination of dependency relation between two verbs is not effective.",
        "In the example-3 of Fig.5, at step-i, the parser decides whether the dependency relation between 报 告 and 引 进 is either Left-arc or Right-arc.",
        "The actual head of the verb 引进 is 的, which is distant.",
        "By looking only two or three right side words ahead, to decide the dependency relation between these verbs at this moment is not reliable.",
        "Yamada’s algorithm is not a clear solution to determine the right side dependents either."
      ]
    },
    {
      "heading": "3.2 Two-Phase Dependency Parsing",
      "text": [
        "For the head-final languages like Korean or Japanese, Nivre[3] and Yamada’s[4] approaches are efficient.",
        "However, being applied to Chinese text, the existing methods cannot correctly detect various kinds of right-side dependents involved in verbs.",
        "All wrong decisions of reduce transition mainly occur if the right dependent of a verb is also a verb, which may have right-side dependents.",
        "For the correct detection of the right-side dependents, we divide the parsing procedure into two-phase.",
        "Phase I is to detect the left-side dependents and right-side nominal dependents.",
        "Although some nominal dependents are right-side, they don’t have dependents on the right side, and will not cause any ambiguities related to right-side dependents.",
        "In Phase II, the detection of right-side verbal dependents, are performed."
      ]
    },
    {
      "heading": "3.2.1 Phase I",
      "text": [
        "In Phase I, we determine the left-side dependents and right-side nominal dependents.",
        "We define three transitions for Phase I: Shift, Left-Arc, Right-Arc.",
        "The actions of transition shift and Left-Arc are the same as Nivre[3] defines.",
        "However, in our method, the transition of Right Arc does not push the input token to the stack.",
        "The original purpose for pushing input to stack after right-arc, is to give a chance for the input to be a potential head of the following words.",
        "In Chinese, only verbs and prepositions have right-side dependents.",
        "For other POS categories, the action of pushing into stack is nonsense.",
        "In case that the input word is a preposition, there is no ambiguities we describe.",
        "Only the words belong to various verbal categories may cause problems.",
        "The method that we use is as follows.",
        "When the top word of the stack and the next input word are verbs, like VV, VE, VC or VA2 [11], the detection of the dependency relation between these two verbs is delayed by transition of shift.",
        "To differentiate this shift from original shift, we call this verbal-shift.",
        "The determination of the dependency relation between these two verbs will be postponed until phase II.",
        "The transitions are summarized as Fig.6.",
        "If there is no more input word, phase I terminates.",
        "The output of the phase I is a stack, which",
        "contains verbs in reverse order of the original appearance of the verbs in the sentence.",
        "Each verb in the stack may have their partial dependents, which are determined in Phase I.",
        "If the action is Verbal-shift : push the input to the stack else if the action is Shift push the input to the stack else if the action is Left-arc set the dependency relation for two words; pop the top of the stack else if the action is Right-arc set the dependency relation for two words",
        "The type of transition is determined by the top word of the stack, input word and their context.",
        "Most of the previous parsing models[4,12,13] use lexical words as features.",
        "Compared to Penn English Treebank, the size of Penn Chinese Treebank (version 4.0, abbreviated as CTB) is rather small.",
        "Considering the data sparseness problem, we use POS tags instead of lexical words itself.",
        "As Fig.7.",
        "shows, the window for feature extraction is the top word of the stack, input word, previous word of the top of the stack, next word of the input.",
        "The left-side nearest dependent of these is also taken into consideration.",
        "Besides, we use two more features, if_adjoin, and Punc.",
        "The feature vector for Phase I is shown in Fig.7."
      ]
    },
    {
      "heading": "3.2.2 Phase II",
      "text": [
        "After Phase I, only verbs remain in the stack.",
        "In Phase II, we determine the right-side verbal dependents.",
        "We take the output stack of Phase I as input.",
        "Some words in the stack will have right-side dependents as shown in Fig.8.",
        "For Phase II, we also define three transitions: shift, left-arc, right-arc.",
        "The operations of these three transitions are the same as Phase I, but there are no verbal-shifts.",
        "Fig.9 shows the output of Phase I and parsing at Phase II of example given in Fig.8.",
        "The window for feature extraction is the same as that of Phase I.",
        "The right-side nearest dependent is newly taken as features for Phase II.",
        "The feature vector for Phase II is shown in Fig.10.",
        "The two-phase parsing will output a projective, acyclic and connective dependency structure.",
        "Nivre[10] said that the time complexity of his parser is 2 times the size of the sentence.",
        "Our algorithm is 4 times the size of the sentence, so the time complexity of our parser is still linear to the size of the sentence.",
        "这位官员说,四川将奉行更加开放的政策,不断改善投资环境,引进更多的海外资金、先进的技术和管理经验。",
        "The contents of stack after Phase I: <引 进, 改善,奉行 , 说>."
      ]
    },
    {
      "heading": "4 Experiments and Evaluation",
      "text": [
        "Our parsing procedure is sequentially performed from left to right.",
        "The feature vectors for Windows for feature extraction : t.stack : top word of the stack p.stack: previous word of top of the stack input : input word n.input: next word of the input word x.pos : POS tag of word x x.left.",
        "child : the left-side nearest dependent of word x punc : the surface form of punctuation between top word of the stack and input word, if there is any if_adjoin : a binary indicator to show if the top word of the stack and input word are adjoined The feature vector for Phase I is :",
        "Phase I and Phase II are used as the input for the parsing model.",
        "The model outputs a parsing action, left-arc, right-arc or shift.",
        "We use SVM as the model to obtain a parsing action, and use CTB for training and test the model."
      ]
    },
    {
      "heading": "4.1 Conversion of Penn Chinese Treebank to Dependency Trees",
      "text": [
        "Annotating a Treebank is a tedious task.",
        "To take the advantage of CTB, we made some heuristic rules to convert CTB into dependency Treebank.",
        "This kind of conversion task has been done on English Treebank[14,10,4].",
        "We use the dependency formalism as Zhou[15] defined.",
        "CTB contains 15,162 newswire sentences (including titles, fragments and headlines).",
        "The contents of CTB are from Xinhua of mainland, information services department of HKSAR and Sinorama magazine of Taiwan.",
        "For experiments, 12,142 sentences are extracted, excluding all the titles, headlines and fragments.",
        "For the conversion task, we made some heuristic rules.",
        "CTB defines total 23 syntactic phrases and verb compounds[11].",
        "A phrase is composed of several words accompanied to a head word.",
        "The head word of each phrase is used as an important resource for PCFG parsing[12,13].",
        "According to the position of the head word with respect to other words, a phrase3 can be categorized into head-final, head-initial or head-middle set.",
        "Table.1 shows the head-initial, head-final and head-middle groups.",
        "For VP, IP and CP, these phrases have a verb as its head word.",
        "So we find a main verb and regard the verb the head word of the phrase.",
        "If the head word for each phrase is determined, other words composing the phrase simply take the head word of the phrase as its head.",
        "In the case of BA/LB4, we take a different view from what is done in CTB.",
        "Zhou[15] regards BA/LB as the dependent of the following verb.",
        "We follow Zhou’s[15] thought.",
        "For sentences containing BA/LB, we converted them into dependency trees manually.",
        "With above heuristics, we converted the original CTB into dependency Treebank."
      ]
    },
    {
      "heading": "4.2 Experiments",
      "text": [
        "SVM is one of the binary classifiers based on maximum margin strategy introduced by Vap-nik[16].",
        "SVM has been used for various NLP tasks, and gives reasonable outputs.",
        "For the experiments reported in this paper, we used the software package SVMlight [17].",
        "For evaluation matrix, we use Dependency Accuracy and Root Accuracy defined by Yamada[4].",
        "An additional evaluation measure, None Head is defined as following.",
        "None Head: the proportion of words whose head is not determined.",
        "We construct two SVM binary classifiers, Dep vs. N_Dep and LA vs. RA, to output the transition action of Left-arc, Right-arc or Shift.",
        "Dep vs. N_Dep classifier determines if two words have a dependency relation.",
        "If two words have no dependency relation, the transition action is simply Shift.",
        "If there is a dependency relation, the second classifier will decide the direction of it, and the transition action is either Left-arc or Right-arc.",
        "We first train a model along the algorithm of Nivre[10].",
        "The training and test sentences are randomly selected.",
        "Table.2 shows that 1.53% of the words cannot find their head after parsing.",
        "This result means that the original Nivre’s algorithm cannot guarantee a connective dependency structure.",
        "With our two-phase parsing algorithm, there is no none head.",
        "Then, the dependency accuracy and root accuracy are increased by 10.08% and 13.35% respectively."
      ]
    },
    {
      "heading": "4.3 Comparison with Related Works",
      "text": [
        "Compared to the original works of Nivre[10] and Yamada[4], the performance of our system is lower.",
        "We think that is because the target language is different.",
        "The average length of sentence in our test set is 34, which is much longer than that in Ma[5] and Cheng[18].",
        "The performance of our system is still better than Ma[5] and less than Cheng[8]."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "To resolve the right-side long distance dependencies, we propose two-phase shift-reduce parsing strategy.",
        "The parsing strategy not only guarantees the connectivity of dependency tree, but also improves the parsing performance.",
        "As the length of sentences increases, the ambiguities for parsing increase drastically.",
        "With our two-phase shift-reduce parsing strategy, the performance of syntactic parsing of long sentences is also reasonable.",
        "The motivation of this paper is to design a well-formed dependency parser for Chinese.",
        "We believe that there’re rooms to improve the performance.",
        "We plan to work further to explore the optimal features.",
        "We also plan to parse English text with our algorithm to see if it can compete with the state-of-art dependency parsers on English.",
        "We believe that our parsing strategy can apply to other languages, in which head position is mixed, as Chinese language.",
        "We think that it is the main contribution of our approach."
      ]
    }
  ]
}
