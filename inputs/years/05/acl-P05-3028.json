{
  "info": {
    "authors": [
      "Christof E. Müller"
    ],
    "book": "Annual Meeting of the Association for Computational Linguistics – Interactive Poster and Demonstration Sessions",
    "id": "acl-P05-3028",
    "title": "A Flexible Stand-Off Data Model With Query Language for Multi-Level Annotation",
    "url": "https://aclweb.org/anthology/P05-3028",
    "year": 2005
  },
  "references": [],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We present an implemented XML data model and a new, simplified query language for multilevel annotated corpora.",
        "The new query language involves automatic conversion of queries into the underlying, more complicated MMAXQL query language.",
        "It supports queries for sequential and hierarchical, but also associative (e.g. coreferential) relations.",
        "The simplified query language has been designed with non-expert users in mind."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Growing interest in richly annotated corpora is a driving force for the development of annotation tools that can handle multiple levels of annotation.",
        "We find it crucial in order to make full use of the potential of multilevel annotation that individual annotation levels be treated as self-contained modules which are independent of other annotation levels.",
        "This independence should also include the storing of each level in a separate file.",
        "If these principles are observed, annotation data management (incl.",
        "level addition, removal and replacement, but also conversion into and from other formats) is greatly facilitated.",
        "The way to keep individual annotation levels independent of each other is by defining each with direct reference to the underlying basedata, i.e. the text or transcribed speech.",
        "Both sequential and hierarchical (i.e. embedding or dominance) relations between markables on different levels are thus only expressed implicitly, viz. by means of the relations of their basedata elements.",
        "While it has become common practice to use the stand-off mechanism to relate several annotation levels to one basedata file, it is also not uncommon to find this mechanism applied for relating markables to other markables (on a different or the same level) directly, expressing the relation between them explicitly.",
        "We argue that this is unfavourable not only with respect to annotation data management (cf. above), but also with respect to querying: Users should not be required to formulate queries in terms of structural properties of data representation that are irrelevant for their query.",
        "Instead, users should be allowed to relate markables from all levels in a fairly unrestricted and ad-hoc way.",
        "Since querying is thus considerably simplified, exploratory data analysis of annotated corpora is facilitated for all users, including non-experts.",
        "Our multilevel annotation tool MMAX21 (M¨uller & Strube, 2003) uses implicit relations only.",
        "Its query language MMAXQL is rather complicated and not suitable for naive users.",
        "We present an alternative query method consisting of a simpler and more intuitive query language and a method to generate MMAXQL queries from the former.",
        "The new, simplified MMAXQL can express a wide range of queries in a concise way, including queries for associative relations representing e.g. coreference."
      ]
    },
    {
      "heading": "2 The Data Model",
      "text": [
        "We propose a stand-off data model implemented in XML.",
        "The basedata is stored in a simple XML file",
        "which serves to identify individual tokens2 and associate an ID with each (Figure 1).",
        "In addition, there is one XML file for each annotation level.",
        "Each level has a unique, descriptive name, e.g. utterances or pos, and contains annotations in the form of <markable> elements.",
        "In the most simple case, a markable only identifies a sequence (i.e. span) of basedata elements (Figure 2).",
        "Normally, however, a markable is also associated with arbitrarily many user-defined attribute-value pairs (Figure 3, Figure 4).",
        "Markables can also be discontinuous, like markable954 in Figure 4.",
        "For each level, admissible attributes and their values are defined in a separate annotation scheme file (not shown, cf. M¨uller & Strube (2003)).",
        "Freetext attributes can have any string value, while nominal attributes can have one of a (user-defined) closed set of possible values.",
        "The data model also supports associative relations between markables: Markable set relations associate arbitrarily many markables with each other in a transitive, undirected way.",
        "The corefclass attribute in Figure 4 is an example of how such a relation can be used to represent a coreferential relation between markables (here: mar kable954 and mar kable963, rest of set 2Usually words, but smaller elements like morphological units or even characters are also possible.",
        "not shown).",
        "Markable pointer relations associate with one markable (the source) one or more target markables in an intransitive, directed fashion."
      ]
    },
    {
      "heading": "3 Simplified MMAXQL",
      "text": [
        "Simplified MMAXQL is a variant of the MMAXQL query language.",
        "It offers a simpler and more concise way to formulate certain types of queries for multilevel annotated corpora.",
        "Queries are automatically converted into the underlying query language and then executed.",
        "A query in simplified MMAXQL consists of a sequence of query tokens which are combined by means of relation operators.",
        "Each query token queries exactly one basedata element (i.e. word) or one markable."
      ]
    },
    {
      "heading": "3.1 Query Tokens",
      "text": [
        "Basedata elements can be queried by matching regular expressions.",
        "Each basedata query token consists of a regular expression in single quotes, which must exactly match one basedata element.",
        "The query ’ [ Tt] he’ matches all definite articles, but not e.g. ether or",
        "there.",
        "For the latter two words to also match, wild-cards have to be used: ’ .",
        "*[ Tt] he.",
        "*’ Sequences of basedata elements can be queried by simply concatenating several space-separated3 tokens.",
        "The query ’ [ Tt] he [ A-Z] .",
        "+’ will match sequences consisting of a definite article and a word beginning with a capital letter.",
        "Markables are the carriers of the actual annotation information.",
        "They can be queried by means of string matching and by means of attribute-value combinations.",
        "A markable query token has the form string/conditions where string is an optional regular expression and conditions specifies which attribute(s) the markable should match.",
        "The most simple ’condition’ is just the name of a markable level, which will match all markables on that level.",
        "If a regular expression is also supplied, the query will return only the matching markables.",
        "The query [ Aa] n?",
        "\\s .",
        "* /refexp4 will return all markables from the refexp level beginning with the indefinite article.",
        "The conditions part of a markable query token can indeed be much more complex.",
        "A main feature of simplified MMAXQL is that redundant parts of conditions can optionally be left out, making queries very concise.",
        "For example, the markable level name can be left out if the name of the attribute accessed by the query is unique across all active markable levels.",
        "Thus, the query /!corefclass=empty can be used to query markables from the refexp level which have a non-empty value in the c o r e f _class attribute, granted that only one attribute of this name exists.",
        "The same applies to the names of nominal attributes if the value specified in the query unambiguously points to this attribute.",
        "Thus, the query /pn",
        "can be used to query markables from the pos level which have the value pn, granted that there is exactly one nominal attribute with the possible value pn.",
        "Several conditions can be combined into one query token.",
        "Thus, the query /{possdet,pron},!corefclass=empty returns all markables from the refexp level that are either possessive determiners or pronouns and that are part in some coreference set.6"
      ]
    },
    {
      "heading": "3.2 Relation Operators",
      "text": [
        "The whole point of querying corpora with multilevel annotation is to relate markables from different levels to each other.",
        "The reference system with respect to which the relation between different markables is established is the sequence of basedata elements, which is the same for all markables on all levels.",
        "Since this bears some resemblance to different events occurring in several temporal relations to each other, we (like also Heid et al.",
        "(2004), among others) adopt this as a metaphor for expressing the sequential and hierarchical relations between markables, and we use a set of relation operators that is inspired by (Allen, 1991).",
        "This set includes (among others) the operators before, meets (default), starts, during/in, contains/dom, equals, ends, and some inverse relations.",
        "The following examples give an idea of how individual query tokens can be combined by means of relation operators to form complex queries.",
        "The example uses the ICSI meeting corpus of spoken multi-party dialogue.7 This corpus contains, among others, a segment level with markables roughly corresponding to speaker turns, and a meta level containing markables representing e.g. pauses, emphases, or sounds like breathing or mike noise.",
        "These two levels and the basedata level can be combined to retrieve instances of you know that occur in segments spoken by female speakers8 which also contain a pause or an emphasis: ’ [ Yy] ou know’ in (/participant={ f.*} dom /{ pause,emphasis} )",
        "Relation operators for associative relations (i.e. markable set and markable pointer) are nextpeer, anypeer and nexttarget, anytarget, respectively.",
        "Assuming the sample data from Section 2, the query /ref_exp nextpeer:coref_class /ref_exp retrieves pairs of anaphors (right) and their direct antecedents (left).",
        "The query can be modified to /ref_exp nextpeer:coref_class (/ref_exp equals /pron) to retrieve only anaphoric pronouns and their direct antecedents.",
        "If a query is too complex to be expressed as a single query token sequence, variables can be used to store intermediate results of sub-queries.",
        "The following query retrieves pairs of utterances (incl.",
        "the referring expressions embedded into them) that are more than 30 tokens9 apart, and assigns the resulting 4-tuples to the variable $distantutts.",
        "(/utterances dom /ref_exp) before:31- (/utterances dom /ref_exp) -> $distant_utts The next query accesses the second and last column in the temporary result (by means of the zero-based column index) and retrieves those pairs of anaphors and their direct antecedents that occur in utterances that are more than 30 tokens apart: $distant_utts.1 nextpeer:coref_class $distant_utts.3"
      ]
    },
    {
      "heading": "4 Related Work",
      "text": [
        "In the EMU speech database system (Cassidy & Harrington, 2001) the hierarchical relation between levels has to be made explicit.",
        "Sequential and hierarchical relations can be queried like with simplified MMAXQL, with the difference that e.g. for sequential queries, the elements involved must come from the same level.",
        "Also, the result of a hierarchical query always only contains either the parent or child element.",
        "The EMU data model supports an association relation (similar to our markable pointer) which can be queried using a => operator.",
        "Annotation Graphs (Bird & Liberman, 2001) identify elements on various levels as arcs connecting two points on a time scale shared by all levels.",
        "Relations between elements are thus also represented implicitly.",
        "The model can also express a",
        "binary association relation.",
        "The associated Annotation Graph query language (Bird et al., 2000) is very explicit, which makes it powerful but at the same time possibly too demanding for naive users.",
        "The NITE XML toolkit (Carletta et al., 2003) defines a data model that is close to our model, although it allows to express hierarchical relations explicitly.",
        "The model supports a labelled pointer relation which can express one-to-many associations.",
        "The associated query language NXT Search (Heid et al., 2004) is a powerful declarative language for querying diverse relations (incl.",
        "pointers), supporting quantification and constructs like forall and exists."
      ]
    },
    {
      "heading": "5 Future Work",
      "text": [
        "We work on support for queries like ’pairs of referring expressions that are a certain number of referring expressions apart’.",
        "We also want to include wild cards and proximity searches, and support for automatic markable creation from query results."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "This work has been funded by the Klaus Tschira Foundation, Heidelberg, Germany."
      ]
    }
  ]
}
