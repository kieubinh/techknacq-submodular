{
  "info": {
    "authors": [
      "Michael W. Daniels"
    ],
    "book": "International Workshop on Parsing Technology",
    "id": "acl-W05-1523",
    "title": "Parsing Generalized ID/LP Grammars",
    "url": "https://aclweb.org/anthology/W05-1523",
    "year": 2005
  },
  "references": [
    "acl-C04-1025"
  ],
  "sections": [
    {
      "heading": "1 Introduction",
      "text": [
        "The Generalized ID/LP (GIDLP) grammar formalism (Daniels and Meurers 2004a,b; Daniels 2005) was developed to serve as a processing backbone for linearization-HPSG grammars, separating the declaration of the recursive constituent structure from the declaration of word order domains.",
        "This paper shows that the key aspects of this formalism – the ability for grammar writers to explicitly declare word order domains and to arrange the right-hand side of each grammar rule to minimize the parser’s search space – lead directly to improvements in parsing efficiency."
      ]
    },
    {
      "heading": "2 Defining GIDLP Grammars",
      "text": [
        "A brief overview of GIDLP syntax is given in 1, and an example GIDLP grammar is given in 2 that recognizes a very small fragment of German, focusing on the free word order of arguments and adjuncts in the Mittelfeld.l The basic idea of this grammar is that no word order constraints apply below the level of the clause.",
        "This allows the verb’s arguments and adjuncts to freely intermingle, before being compacted at the clause level, at which point the constraints on the location of the finite verb apply.",
        "It is important to note that this grammar cannot be straightforwardly expressed in the ID/LP formalism, where LP constraints only apply within local trees."
      ]
    },
    {
      "heading": "3 The GIDLP Parsing Algorithm",
      "text": [
        "The GIDLP parser Daniels and Meurers (2004a); Daniels (2005) is based on Earley’s algorithm for 'For compactness, categories are described in this example with prolog-style terms; the actual GIDLP syntax assumes feature structure categories.",
        "context-free parsing, suitably modified to handle discontinuous constituents.",
        "A central insight of the GIDLP parsing algorithm is that the same data structure used to describe the coverage of an edge can also encode restrictions on the parser’s search space.",
        "This is done by adding two bitvectors to each edge: a negative mask (n-mask), which marks positions that must not be part of the edge, and a positive mask (p-mask), which marks positions that must be part of the edge.",
        "These masks are generated during the prediction phase and then tested during the completion phase using efficient bitvector operations.",
        "Compiling LP constraints into",
        "Vancouver, October 2005. c�2005 Association for Computational Linguistics bitmasks in this way allows the LP constraints to be integrated directly into the parser at a fundamental level.",
        "Instead of weeding out inappropriate parses in a cleanup phase, LP constraints in this parser can immediately block an edge from being added to the chart."
      ]
    },
    {
      "heading": "4 Evaluation",
      "text": [
        "To evaluate the effectiveness of the GIDLP formalism, a moderate-scale grammar of German was obtained from Professor Martin Volk (Stockholm University).",
        "This grammar combines ID/LP rules with PS rules, as argued for in (Volk 1996), and uses a flat structure to encode the flexibility of the German Mittelfeld.",
        "As an example, the rule for ditransitive verbs is given in (1).",
        "This grammar can be mechanically translated into the GIDLP format, as each of Volk’s PS rules corresponds to a GIDLP rule.",
        "This translation establishes an ‘initial’ GIDLP grammar.",
        "The grammar was then optimized in two successive steps to take advantage of the GIDLP formalism.",
        "First, a ‘medial’ grammar was created in which word order domains were introduced only when necessary.",
        "(In the ID/LP formalism, every local tree is an order domain.)",
        "Second, a ‘final’ grammar was created by reordering the RHS order of each rule so as to put the most discriminatory RHS element first – generally the finite verb.",
        "To compare these three grammars, a testsuite of 150 sentences was constructed.",
        "The sentences were generally chosen to equally cover the sentence types recognized by the grammar.",
        "The results from parsing this testsuite with each grammar are summarized in Figure 3, which shows the average number of chart insertion attempts at each sentence length.",
        "(Chart insertion attempts have traditionally been used as an overall metric for parsing efficiency, as parse time tends to be dominated by the time taken searching the chart for blocking edges.)",
        "Overall, the final grammar shows a clear improvement over the medial and initial grammars.",
        "Averaging over all 150 sentences, the final grammar sees a decrease of 69.2% in the number of chart insertion attempts compared to the initial grammar.",
        "Thus the expressive capabilities provided by the GIDLP formalism lead directly to improvements in parsing efficiency."
      ]
    },
    {
      "heading": "5 Summary",
      "text": [
        "This paper has shown that two key aspects of the GIDLP grammar formalism – the ability for grammar writers to explicitly declare word order domains in the spirit of the linearization-HPSG tradition and the ability to completely order the RHS of a grammar rule to minimize the parser’s overall search space – lead directly to improvements in parse efficiency."
      ]
    }
  ]
}
