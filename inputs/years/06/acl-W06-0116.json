{
  "info": {
    "authors": [
      "Wenliang Chen",
      "Yujie Zhang",
      "Hitoshi Isahara"
    ],
    "book": "SIGHAN Workshop on Chinese Language Processing",
    "id": "acl-W06-0116",
    "title": "Chinese Named Entity Recognition With Conditional Random Fields",
    "url": "https://aclweb.org/anthology/W06-0116",
    "year": 2006
  },
  "references": [
    "acl-N03-1028"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We present a Chinese Named Entity Recognition (NER) system submitted to the close track of Sighan Bakeoff2006.",
        "We define some additional features via doing statistics in training corpus.",
        "Our system incorporates basic features and additional features based on Conditional Random Fields (CRFs).",
        "In order to correct inconsistently results, we perform the post-processing procedure according to n-best results given by the CRFs model.",
        "Our final system achieved a F-score of 85.14 at MSRA, 89.03 at CityU, and 76.27 at LDC."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Named Entity Recognition task in the 2006 Sighan Bakeoff includes three corpora: Microsoft Research (MSRA), City University of Hong Kong (CityU), and Linguistic Data Consortium (LDC).",
        "There are four types of Named Entities in the corpora: Person Name, Organization Name, Location Name, and Geopolitical Entity (only included in LDC corpus).",
        "We attend the close track of all three corpora.",
        "In the close track, we can not use any external resources.",
        "Thus except basic features, we define some additional features by applying statistics in training corpus to replace external resources.",
        "Firstly, we perform word segmentation using a simple left-to-right maximum matching algorithm, in which we use a word dictionary generated by doing n-gram statistics.",
        "Then we define the features based on word boundaries.",
        "Secondly, we generate several lists according to the relative position to Named Entity (NE).",
        "We define another type of features based on these lists.",
        "Using these features, we build a Conditional Random Fields(CRFs)-based Named Entity Recognition (NER) System.",
        "We use the system to generate n-best results for every sentence, and then perform a post-processing."
      ]
    },
    {
      "heading": "2 Conditional Random Fields",
      "text": []
    },
    {
      "heading": "2.1 The model",
      "text": [
        "Conditional Random Fields(CRFs), a statistical sequence modeling framework, was first introduced by Lafferty et al(Lafferty et al., 2001).",
        "The model has been used for chunking(Sha and Pereira, 2003).",
        "We only describe the model briefly since full details are presented in the pa-per(Lafferty et al., 2001).",
        "In this paper, we regard Chinese NER as a sequence labeling problem.",
        "For our sequence labeling problem, we create a linear-chain CRFs based on an undirected graph G = (V, E), where V is the set of random variables Y = {Yi 11 G i G n}, for each of n tokens in an input sentence and E= {(Yi_1,Yi)11 G i G n}is the set ofn-1 edges forming a linear chain.",
        "For each sentence x, we define two non-negative factors: exp(��k� 1 �kfk(yi_1, yi, x)) for each edge exp(Ek ' 1 A'kf'k(yi, x)) for each node where fk is a binary feature function, and K and K' are the number of features defined for edges and nodes respectively.",
        "Following Lafferty et al(Lafferty et al., 2001), the conditional probability of a sequence of tags y given a sequence of tokens x is:",
        "where Z(x) is the normalization constant.",
        "Given the training data D, a set of sentences (characters Xk fk (yi-1 , yi, x) + X 0Xkfk(yi, x)) i,k",
        "with their corresponding tags), the parameters of the model are trained to maximize the conditional log-likelihood.",
        "When testing, given a sentence x in the test data, the tagging sequence y is given by Argmaxy,P(y'Ix).",
        "CRFs allow us to utilize a large number of observation features as well as different state sequence based features and other features we want to add."
      ]
    },
    {
      "heading": "2.2 CRFs for Chinese NER",
      "text": [
        "Our CRFs-based system has a first-order Markov dependency between NER tags.",
        "In our experiments, we do not use feature selection and all features are used in training and testing.",
        "We use the following feature functions: f (yi – 1, yi, x, i) = p(x, i)q(yi – 1, yi) (2) where p(x, i) is a predicate on the input sequence x and current position i and q(yi – 1, yi) is a predicate on pairs of labels.",
        "For instance, p(x, i) might be ”the char at position i is �(and)”.",
        "In our system, we used CRF++ (V0.42)1 to implement the CRFs model."
      ]
    },
    {
      "heading": "3 Chinese Named Entity Recognition",
      "text": [
        "The training data format is similar to that of the CoNLL NER task 2002, adapted for Chinese.",
        "The data is presented in two-column format, where the first column consists of the character and the second is a tag.",
        "Table 1 shows the types of Named Entities in the data.",
        "Every character is to be tagged with a NE type label extended with B (Beginning character of a NE) and I (Non-beginning character of a NE), or 0 (Not part of a NE).",
        "To obtain a good-quality estimation of the conditional probability of the event tag, the observations should be based on features that represent the difference of the two events.",
        "In our system, we define three types of features for the CRFs model."
      ]
    },
    {
      "heading": "3.1 Basic Features",
      "text": [
        "The basic features of our system list as follows:",
        "• .",
        "Cn(n = – 2, – 1,0,1,2) • .",
        "CnCn+1 (n = – 1, 0)",
        "Where C refers to a Chinese character while C0 denotes the current character and Cn(C – n) denotes the character n positions to the right (left) of the current character.",
        "For example, given a character sequence ”�Vw ���”,when considering the character C0 denotes ”�”, C – 1 denotes ”Vw”, C – 1 C0 denotes ”� �”,and so on."
      ]
    },
    {
      "heading": "3.2 Word Boundary Features",
      "text": [
        "The sentences in training data are based on characters.",
        "However, there are many features related to the words.",
        "For instance, the word ”��” can be a important feature for Person Name.",
        "We perform word segmentation using the left-to-right maximum matching algorithm, in which we use a word dictionary generated by doing n-gram statistics in training corpus.",
        "Then we use the word boundary tags as the features for the model.",
        "Firstly, we construct a word dictionary by extracting N-grams from training corpus as follows:",
        "1.",
        "Extract arbitrary N-grams (2 < n < 10, Frequency > 10 ) from training corpus.",
        "We get a list W1.",
        "2.",
        "Use a tool to perform statistical substring reduction in W1 [ described in (Lv et al., 2004)]2.",
        "We get a list W2.",
        "3.",
        "Construct a character list (CH)3, in which the characters are top 20 frequency in training corpus.",
        "4.",
        "Remove the strings from W2, which contain the characters in the list CH.",
        "We get final N-grams list W3.",
        "Secondly, we use W3 as a dictionary for left-to-right maximum matching word segmentation.",
        "We assign word boundary tags to sentences.",
        "Each character can be assigned one of 4 possible boundary tags: ”B” for a character that begins a word and is followed by another character, ”M” for a",
        "character that occurs in the middle of a word, ”E” for a character that ends a word, and ”S” for a character that occurs as a single-character word.",
        "The word boundary features of our system list as follows: • .",
        "WTn(n = – 1, 0, 1) Where WT refers to the word boundary tag while WTo denotes the tag of current character and WTn(WT – n) denotes the tag n positions to the right (left) of the current character."
      ]
    },
    {
      "heading": "3.3 Char Features",
      "text": [
        "If we can use external resources, we often use the lists of surname, suffix of named entity and prefix of named entity for Chinese NER.",
        "In our system, we generate these lists automatically from training corpus by the procedure as follows:",
        "We remove the items in uni-gram lists if their frequencies are less than 5 and in bi-gram lists if their frequencies are less than 2.",
        "Based on these lists, we assign the tags to every character.",
        "For instance, if a character is included in PSur list, then we assign a tag ”PSur 1”, otherwise assign a tag ”PSur 0”.",
        "Then we define the char features as follows: .",
        ".",
        "PSur0PC0; .. PSurnPCnPSurn+1PCn+1(n = – 1, 0); .",
        ".",
        "PPre0; .",
        ".",
        "PSuf0; .",
        ".",
        "LC0OC0; S is the list of sentences, S = {s1, s2, ..., sn1.",
        "T is m-best results of S, T = {t1, t2, ..., tn1, which ti is a set of m-best results of si.",
        "pij is the score of tij, that is the jth result in ti.",
        ".",
        ".",
        "LSu fnOSu fnLSu fn+1OSu fn+1(n = – 1, 0);"
      ]
    },
    {
      "heading": "4 Post-Processing",
      "text": [
        "There are inconsistently results, which are tagged by the CRFs model.",
        "Thus we perform a post-processing step to correct these errors.",
        "The post-processing tries to assign the correct tags according to n-best results for every sentence.",
        "Our system outputs top 20 labeled sequences for each sentence with the confident scores.",
        "The post-processing algorithm is shown at Table 2.",
        "Firstly, we collect NE list from high confident results.",
        "Secondly, we reassign the tags for low confident results using the NE list."
      ]
    },
    {
      "heading": "5 Evaluation Results",
      "text": []
    },
    {
      "heading": "5.1 Results on Sighan bakeoff 2006",
      "text": [
        "We evaluated our system in the close track, on all three corpora, namely Microsoft Research (MSRA), City University of Hong Kong (CityU), and Linguistic Data Consortium (LDC).",
        "Our official Bakeoff results are shown at Table 3, where the columns P, R, and FB 1 show precision, recall and F measure(Q = 1).",
        "We used all three types of features in our final system.",
        "In order to evaluate the contribution of features, we conducted the experiments of each type of features using the test sets with gold-standard dataset.",
        "Table 4 shows the experimental results,",
        "where F1 refers to use basic features, F2 refers to use the word boundary features, F3 refers to use the char features, and Post refers to perform the post-processing.",
        "The results indicated that word boundary features helped on LDC and CityU, char features only helped on CityU and the post-processing always helped to improve the performance."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "This paper presented our Named Entity Recognition system for the close track of Bakeoff2006.",
        "Our approach was based on Conditional Random Fields model.",
        "Except basic features, we defined the additional features by doing statistics in training corpus.",
        "In addition, we performed a post-processing according to n-best results generated by the CRFs model.",
        "The evaluation results showed that our system achieved state-of-the-art performance on all three corpora in the close track."
      ]
    }
  ]
}
