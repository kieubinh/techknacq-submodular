{
  "info": {
    "authors": [
      "Jost Schatzmann",
      "Blaise Thomson",
      "Karl Weilhammer",
      "Hui Ye",
      "Steve Young"
    ],
    "book": "Human Language Technologies 2007: the Conference of the North American Chapter of the Association for Computational Linguistics; Companion Volume, Short Papers",
    "id": "acl-N07-2038",
    "title": "Agenda-Based User Simulation for Bootstrapping a POMDP Dialogue System",
    "url": "https://aclweb.org/anthology/N07-2038",
    "year": 2007
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Jost Schatzmann, Blaise Thomson, Karl Weilhammer, Hui Ye and Steve Young",
        "Cambridge University Engineering Department Trumpington Street, Cambridge, CB21PZ, United Kingdom",
        "This paper investigates the problem of bootstrapping a statistical dialogue manager without access to training data and proposes a new probabilistic agenda-based method for simulating user behaviour.",
        "In experiments with a statistical POMDP dialogue system, the simulator was realistic enough to successfully test the prototype system and train a dialogue policy.",
        "An extensive study with human subjects showed that the learned policy was highly competitive, with task completion rates above 90%."
      ]
    },
    {
      "heading": "1. Background and Introduction",
      "text": [
        "One of the key advantages of a statistical approach to Dialogue Manager (DM) design is the ability to formalise design criteria as objective reward functions and to learn an optimal dialogue policy from real dialogue data.",
        "In cases where a system is designed from scratch, however, it is often the case that no suitable in-domain data is available for training the DM.",
        "Collecting dialogue data without a working prototype is problematic, leaving the developer with a classic chicken-and-egg problem.",
        "Wizard-of-Oz (WoZ) experiments can be carried out to record dialogues, but they are often time-consuming and the recorded data may show characteristics of humanhuman conversation rather than typical human-computer dialogue.",
        "Alternatively, human-computer dialogues can be recorded with a handcrafted DM prototype but neither of these two methods enables the system designer to test the implementation of the statistical DM and the learning algorithm.",
        "Moreover, the size of the recorded corpus (typically <^ 10 dialogues) usually falls short of the requirements for training a statistical DM (typically > 10dialogues).",
        "In recent years, a number of research groups have investigated the use of a two-stage simulation-based setup.",
        "A statistical user model is first trained on a limited amount of dialogue data and the model is then used to simulate dialogues with the interactively learning DM (see Schatzmann et al.",
        "(2006) for a literature review).",
        "The simulation-based approach assumes the presence of a small corpus of suitably annotated in-domain dialogues or out-of-domain dialogues with a matching dialogue format (Lemon et al., 2006).",
        "In cases when no such data is available, handcrafted values can be assigned to the model parameters given that the model is sufficiently simple (Levin et al., 2000; Pietquin and Dutoit, 2005) but the performance of dialogue policies learned this way has not been evaluated using real users.",
        "This paper presents a new probabilistic method for simulating user behaviour based on a compact representation of the user goal and a stack-like user agenda.",
        "The model provides an elegant way of encoding the relevant dialogue history from a user's point of view and has a very small parameter set so that manually chosen priors can be used to bootstrap the DM training and testing process.",
        "In experiments presented in this paper, the agenda-based simulator was used to train a statistical POMDP-based (Young, 2006; Young et al., 2007) DM.",
        "Even without any training of its model parameters, the agenda-based simulator was able to produce dialogue behaviour realistic enough to train a competitive dialogue policy.",
        "An extensive study with 40 human subjects showed that task completion with the learned policy was above 90% despite a mix of native and non-native speakers.",
        "type = bar drinks = beer area = central",
        "Hello, how may I help you?",
        "inf orm(type = bar) inform (drinks = beer) inf orm(area = central) request(name) request(addr) request(phone) bye()",
        "I'm looking for a nice bar serving beer.",
        "Ok, a wine bar.",
        "What pricerange?",
        "negate(drinks = beer) inf orm(pricerange = cheap) inf orm(area = central) request(name) request(addr) request(phone) bye() No, beer please!",
        "A bar serving beer, correct?",
        "affirm() inf orm(pricerange = cheap) inf orm(area = central) request(name) request(addr) request(phone) bye()",
        "Yeah something cheap in the town centre.",
        "Murphy s on Main Square serves cheap beer.",
        "request(phone) bye()"
      ]
    },
    {
      "heading": "2. Agenda-Based Simulation",
      "text": [
        "Human-machine dialogue can be formalised on a semantic level as a sequence of state transitions and dialogue acts.",
        "At any time t, the user is in a state S, takes action au, transitions into the intermediate state S', receives machine action am, and transitions into the next state S'' where the cycle restarts.",
        "Assuming a Markovian state representation, user behaviour can be decomposed into three models: P(au\\S) for action selection, P(S'\\au,S) for the state transition into S', and P(S\"\\am,Sr) for the transition into S''.",
        "Inspired by agenda-based methods to dialogue management (Wei and Rudnicky, 1999) the approach described here factors the user state into an agenda A and a goal G.",
        "During the course ofthe dialogue, the goal G ensures that the user behaves in a consistent, goal-directed manner.",
        "G consists of constraints C which specify the required venue, eg.",
        "a centrally located bar serving beer, and requests R which specify the desired pieces ofinformation, eg.",
        "the name, address and phone number (cf.",
        "Fig.",
        "1).",
        "The user agenda A is a stack-like structure containing the pending user dialogue acts that are needed to elicit the information specified in the goal.",
        "At the start of the dialogue a new goal is randomly generated using the system database and the agenda is initially populated by converting all goal constraints into inform acts and all goal requests into request acts.",
        "A bye act is added at the bottom of the agenda to close the dialogue.",
        "As the dialogue progresses the agenda and goal are dynamically updated and acts are selected from the top of the agenda to form user acts au.",
        "In response to incoming machine acts am, new user acts are pushed onto the agenda and no longer relevant ones are removed.",
        "The agenda thus serves as a convenient way of tracking the progress of the dialogue as well as encoding the relevant dialogue history.",
        "Acts can also be temporarily stored when actions of higher priority need to be issued first, hence providing the simulator with a simple model of user memory.",
        "At any time during the dialogue, the updated agenda of length N contains all dialogue acts the user intends to convey to the system.",
        "Since the agenda is ordered according to priority, with A[N] denoting the top and A[1] denoting the bottom item, selecting the next user act simplifies to popping n items off the top of the stack.",
        "Hence, letting au [i] denote the ith item in the user act au",
        "Using A[N â€“ n+1 ..N] as aMatlab-like shorthand notation for the top n items on A, the action selection model becomes a Dirac delta function where the random variable n corresponds to the level of initiative taken by the simulated user.",
        "In a statistical model the probability distribution over integer values for n should be conditioned on A and learned from dialogue data.",
        "For the purposes ofbootstrapping the system, n can be assumed independent of A and any distribution P(n) that places the majority of its probability mass on small values of n can be used.",
        "The factorisation of S into A and G can now be applied to the state transition models P(S'\\au,S) and P(S''\\am,S').",
        "Letting A' denote the agenda after selecting au (as explained in the previous subsection) and using to denote the size of A',wehave A'[i]:= A[i] Mi e [1..N'].",
        "Using this definition of A' and assuming that the goal remains constant when the user executes au, the first state transition depending on au simplifies to",
        "Using S =(A, G), the chain rule ofprobability, and reasonable conditional independence assumptions, the second state transition based on am can be decomposed into goal update and agenda update modules:",
        "agenda update goal update",
        "When no restrictions are placed on A'' and G'', the space of possible state transitions is vast.",
        "The model parameter set is too large to be handcrafted and even substantial amounts of training data would be insufficient to obtain reliable estimates.",
        "It can however be assumed that A'' is derived from A' and that G'' is derived from G' and that in each case the transition entails only a limited number of well-defined atomic operations.",
        "The agenda transition from A' to A'' can be viewed as a sequence of push-operations in which dialogue acts are added to the top of the agenda.",
        "In a second \"clean-up\" step, duplicate dialogue acts, null() acts, and unnecessary request() acts for already filled goal request slots must be removed but this is a deterministic procedure so that it can be excluded in the following derivation for simplicity.",
        "Considering only the push-operations, the items 1 to N'at the bottom of the agenda remain fixed and the update model can be rewritten as follows:",
        "The first term on the RHS of Eq.",
        "9 can now be further simplified by assuming that every dialogue act item in am triggers one push-operation.",
        "This assumption can be made without loss of generality, because it is possible to push a null() act (which is later removed) or to push an act with more than one item.",
        "The advantage of this assumption is that the known number M of items in amnow determines the number of push-operations.",
        "Hence",
        "The expression in Eq.",
        "11 shows that each item am[i] in the system act triggers one push operation, and that this operation is conditioned on the goal.",
        "This model is now simple enough to be handcrafted using heuristics.",
        "For example, the model parameters can be set so that when the item x=y in am[i] violates the constraints in G'', one of the following is pushed onto A'': negate(), inform(x=z), deny(x=y, x=z), etc.",
        "The goal update model P(G''\\am,G') describes how the user constraints C' and requests R' change with a given machine action am.",
        "Assuming that R'' is conditionally independent of C' given C' it can be shown that",
        "To restrict the space of transitions from R' to R'' it can be assumed that the request slots are independent and each slot (eg.",
        "addr,phone,etc.)",
        "is either filled using information in am or left unchanged.",
        "Using R[k] to denote the k'th request slot, we approximate that the value of R''[k] only depends on its value at the previous time step, the value provided by am, and M(am,C'') which indicates a match or mismatch between the information given in am and the goal constraints.",
        "To simplify P(C''\\am,R',C') we assume that C'' is derived from C' by either adding a new constraint, setting an existing constraint slot to a different value (eg.",
        "drinks=dontcare), or by simply changing nothing.",
        "The choice of transition does not need to be conditioned on the full space of possible am, R' and C'.",
        "Instead it can be conditioned on simple boolean flags such as \"Does amask for a slot in the constraint set?",
        "\", \"Does am signal that no item in the database matches the given constraints?",
        "\", etc.",
        "The model parameter set is then sufficiently small for handcrafted values to be assigned to the probabilities."
      ]
    },
    {
      "heading": "3. Evaluation",
      "text": [
        "The Hidden Information State (HIS) model is the first trainable and scalable implementation of a statistical spoken dialog system based on the Partially-Observable Markov Decision Process (POMDP) model of dialogue (Young, 2006; Young et al., 2007; Williams and Young, 2007).",
        "POMDPs extend the standard Markov-Decision-Process model by maintaining a belief space, i.e. a probability distribution over dialogue states, and hence provide an explicit model of the uncertainty present in human-machine communication.",
        "The HIS model uses a grid-based discretisation of the continuous state space and online e-greedy policy iteration.",
        "Fig.",
        "2 shows a typical training run over 60,000 simulated dialogues, starting with a random policy.",
        "User goals are randomly generated and an (arbitrary) reward function assigning 20 points for successful completion and 1 for every dialogue turn is used.",
        "As can be seen, dialogue performance (defined as the average reward over 1000 dialogues) converges after roughly 25,000 iterations and asymptotes to a value of approx.",
        "14 points.",
        "A prototype HIS dialogue system with a learned policy was built for the Tourist Information Domain and extensively evaluated with 40 human subjects including native and non-native speakers.",
        "A total of 160 dialogues with 21667 words was recorded and the average Word-Error-Rate was 29.8%.",
        "Task scenarios involved finding a specific bar, hotel or restaurant in a fictitious town (eg.",
        "the address of a cheap, Chinese restaurant in the west).",
        "The performance of the system was measured based on the recommendation of a correct venue, i.e. a venue matching all constraints specified in the given task (all tasks were designed to have a solution).",
        "Based on this definition, 145 out of 160 dialogues (90.6%) were completed successfully, and the average number of turns to completion was 5.59 (if no correct venue was offered the full number of turns was counted)."
      ]
    },
    {
      "heading": "4. Summary and Future Work",
      "text": [
        "This paper has investigated a new agenda-based user simulation technique for bootstrapping a statistical dialogue manager without access to training data.",
        "Evaluation results show that, even with manually set model parameters, the simulator produces dialogue behaviour realistic enough for training and testing a prototype system.",
        "While the results demonstrate that the learned policy works well for real users, it is not necessarily optimal.",
        "The next step is hence to use the recorded data to train the simulator, and to then retrain the DM policy."
      ]
    }
  ]
}
