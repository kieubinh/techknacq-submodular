{
  "info": {
    "authors": [
      "Svetlana Stenchikova",
      "Basia Mucha",
      "Sarah Hoffman",
      "Amanda J. Stent"
    ],
    "book": "Human Language Technologies: the Annual Conference of the North American Chapter of the Association for Computational Linguistics (NAACL-HLT)",
    "id": "acl-N07-4008",
    "title": "RavenCalendar: A Multimodal Dialog System for Managing a Personal Calendar",
    "url": "https://aclweb.org/anthology/N07-4008",
    "year": 2007
  },
  "references": [
    "acl-W07-0305"
  ],
  "sections": [
    {
      "text": [
        "RavenCalendar: A Multimodal Dialog System for Managing a",
        "Personal Calendar*",
        "Svetlana Stenchikova and Basia Mucha and Sarah Hoffman and Amanda Stent",
        "1 Introduction",
        "Dialog applications for managing calendars have been developed for every generation of dialog systems research (Heidorn, 1978; Yankelovich, 1994; Constantinides and others, 1998; Horvitz and Paek, 2000; Vo and Wood, 1996; Huang and others, 2001).",
        "Today, Web-based calendar applications are widely used.",
        "A spoken dialog interface to a Web-based calendar application permits convenient use of the system on a handheld device or over the telephone.",
        "In this demo, we present RavenCalendar, a multimodal dialog system built around the Google Calendar and Google Maps Web applications.",
        "RavenCalendar allows the user to create, modify and remove calendar events, query for events, and hear descriptions of events.",
        "In our demonstration we will focus on two aspects of RavenCalendar: its flexible approach to language understanding and dialog management, and its multimodal interface.",
        "Flexible dialog management In RavenCal-endar, during event management or event querying a user can provide event information either in a single utterance (e.g. \"Addameeting for tomorrow from two to three in the computer science lounge\" or by engaging in a subdialog with the system (Table 1).",
        "This functionality is made possiblebecauseweuse theRavenclaw dialog manager (Bohus and Rudnicky, 2003).",
        "We would like to thank Dan Bohus, Antoine Raux, and Thomas Harris for providing Olympus, and for answering many questions about Ravenclaw.",
        "This research is based on work supported by the National Science Foundation under grant no.",
        "0325188.",
        "S: Welcome to RavenCalendar, the automated dialog calendar system.",
        "S: What can I do for you today?",
        "U: add a meeting for Monday S: For what time do you want to add the meeting?",
        "U: from ten until eleven S: The event was added type meeting for tomorrow starting at ten a.m. U: List all events for the next week Table 1: Sample dialog with RavenCalendar Multimodality A RavenCalendar user may interact with the calendar directly using the Google Calendar interface, or may interact through RavenCalendar using text, speech, map gestures or a combination of these media.",
        "A user may use the Google Maps interface to specify the location of an event; the system uses Google Maps to display the locations of events."
      ]
    },
    {
      "heading": "2. System Description",
      "text": [
        "RavenCalendar, whose architecture is shown in Figure 1, is developed using Ravenclaw and Olympus (Bohus and others, 2007).",
        "Olympus is a dialog system shell; Ravenclaw is the Olympus dialog manager.",
        "In developing RavenCal-endar, we chose to use an existing dialog shell to save time on system development.",
        "(We are gradually replacing the Olympus components for speech recognition, generation and TTS.)",
        "RavenCalendar is one of the first dialog systems based on Olympus to be developed outside of CMU.",
        "Other Olympus-based systems developed at CMU include the Let's Go (Raux and others, 2005), Room Line, and LARRI (Bohus and Rudnicky, 2002) systems.",
        "Flexible dialog management The Raven-claw dialog manager (Bohus and Rudnicky, 2003) allows \"object-oriented\" specification of a dialog structure.",
        "In RavenCalendar, we define the dialog as a graph.",
        "Each node in the graph is a minimal dialog component that performs a specific action and has pre-and post-conditions.",
        "The dialog flow is determined by edges between nodes.",
        "With this structure, we maximize the reuse of minimal dialog components.",
        "Ravenclaw gives a natural way to define a dialog, but fine-tuning the dialog manager was the most challenging part of system development.",
        "Multimodality In RavenCalendar,a back-end server integrates with Google Calendar for storing event data.",
        "Also, a maps front end server integrates with Google Maps.",
        "In addition to the locations recognized by Google Maps, an XML ile with preselected location-name mappings helps the user specify locations."
      ]
    },
    {
      "heading": "3. Current and Future Work",
      "text": [
        "We are currently modifying RavenCalendar to use grammar-based speech recognition for tighter integration of speech recognition and parsing, to automatically modify its parsing grammar to accommodate the words in the user's calendar, to permit trainable, adaptable response generation, and to connect to additional Web services and Web-based data resources.",
        "This last topic is particularly interesting to us.",
        "RavenCalendar already uses several Web-based applications, but there are many other Web services of potential utility to mobile users.",
        "We are now building a component for RavenClaw that searches a list of URLs for event types of interest to the user (e.g. sports events, music events), and automatically notifies the user of events of interest.",
        "In the future, we plan to incorporate additional Web-based functionality, with the ultimate goal of creating a general-purpose dialog interface to Web applications and services."
      ]
    }
  ]
}
