{
  "info": {
    "authors": [
      "Doug Downey",
      "Stefan Schoenmackers",
      "Oren Etzioni"
    ],
    "book": "45th Annual Meeting of the Association of Computational Linguistics",
    "id": "acl-P07-1088",
    "title": "Sparse Information Extraction: Unsupervised Language Models to the Rescue",
    "url": "https://aclweb.org/anthology/P07-1088",
    "year": 2007
  },
  "references": [
    "acl-P05-1077",
    "acl-P06-1102"
  ],
  "sections": [
    {
      "text": [
        "Doug Downey, Stefan Schoenmackers, and Oren Etzioni",
        "Even in a massive corpus such as the Web, a substantial fraction of extractions appear infrequently.",
        "This paper shows how to assess the correctness of sparse extractions by utilizing unsupervised language models.",
        "The REALM system, which combines HMM-based and n-gram-based language models, ranks candidate extractions by the likelihood that they are correct.",
        "Our experiments show that REALM reduces extraction error by 39%, on average, when compared with previous work.",
        "Because Realm pre-computes language models based on its corpus and does not require any hand-tagged seeds, it is far more scalable than approaches that learn models for each individual relation from hand-tagged data.",
        "Thus, REALM is ideally suited for open information extraction where the relations of interest are not specified in advance and their number is potentially vast."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "the extraction and words or phrases indicative of class membership (e.g., \"cities such as\").",
        "However, Zipf's Law governs the distribution of extractions.",
        "Thus, even the Web has limited redundancy for less prominent instances of relations.",
        "Indeed, 50% of the extractions in the data sets employed by (Downey et al., 2005) appeared only once.",
        "As a result, Downey etal.",
        "'s model, and related methods, had no way of assessing which extraction is more likely to be correct for fully half of the extractions.",
        "This problem is particularly acute when moving beyond unary relations.",
        "We refer to this challenge as the task of assessing sparse extractions.",
        "This paper introduces the idea that language modeling techniques such as n-gram statistics (Manning and Schütze, 1999) and HMMs (Rabiner, 1989) can be used to effectively assess sparse extractions.",
        "The paper introduces the REALM system, and highlights its unique properties.",
        "Notably, REALM does not require any hand-tagged seeds, which enables it to scale to Open IE – extraction where the relations of interest are not specified in advance, and their number is potentially vast (Banko et al., 2007).",
        "REALM is based on two key hypotheses.",
        "The Information Extraction (IE) from text is far from in KnowItAll hypothesis is that extractions that oc-fallible.",
        "In response, researchers have begun to ex-cur more frequently in distinct sentences in the ploit the redundancy in massive corpora such as the corpus are more likely to be correct.",
        "For examWeb in order to assess the veracity of extractions ple, the hypothesis suggests that the argument pair (e.g., (Downey et al., 2005; Etzioni et al., 2005; (Giuliani, New York) is relatively likely to be Feldman et al., 2006)).",
        "In essence, such methods uti- appropriate for the Mayor relation, simply because lize extraction patterns to generate candidate extrac- this pair is extracted for the Mayor relation relations (e.g., \"Istanbul\") and then assess each candi- tively frequently.",
        "Second, we employ an instance of date by computing co-occurrence statistics between the distributional hypothesis (Harris, 1985), which can be phrased as follows: different instances of the same semantic relation tend to appear in similar textual contexts.",
        "We assess sparse extractions by comparing the contexts in which they appear to those of more common extractions.",
        "Sparse extractions whose contexts are more similar to those of common extractions are judged more likely to be correct based on the conjunction of the KnowltAll and the distributional hypotheses.",
        "The contributions of the paper are as follows:",
        "• The paper introduces the insight that the sub-field of language modeling provides unsupervised methods that can be leveraged to assess sparse extractions.",
        "These methods are more scalable than previous assessment techniques, and require no hand tagging whatsoever.",
        "• The paper introduces an HMM-based technique for checking whether two arguments are of the proper type for a relation.",
        "• The paper introduces a relational n-gram model for the purpose of determining whether a sentence that mentions multiple arguments actually expresses a particular relationship between them.",
        "• The paper introduces a novel language-modeling system called Realm that combines both HMM-based models and relational n-gram models, and shows that Realm reduces error by an average of 39% over previous methods, when applied to sparse extraction data.",
        "The remainder of the paper is organized as follows.",
        "Section 2 introduces the IE assessment task, and describes the Realm system in detail.",
        "Section 3 reports on our experimental results followed by a discussion of related work in Section 4.",
        "Finally, we conclude with a discussion of scalability and with directions for future work."
      ]
    },
    {
      "heading": "2. IE Assessment",
      "text": [
        "This section formalizes the IE assessment task and describes the Realm system for solving it.",
        "An IE assessor takes as input a list of candidate extractions meant to denote instances of a relation, and outputs a ranking of the extractions with the goal that correct extractions rank higher than incorrect ones.",
        "A correct extraction is defined to be a true instance of the relation mentioned in the input text.",
        "More formally, the list of candidate extractions for a relation R is denoted as ER = {(ai, bi),..., (am, bm)}.",
        "An extraction (a*, bi) is an ordered pair of strings.",
        "The extraction is correct if and only if the relation R holds between the arguments named by ai and bi.",
        "For example, for R = Headquartered, a pair (a*, bi) is correct iff there exists an organization ai that is in fact headquartered in the location b*.",
        "ER is generated by applying an extraction mechanism, typically a set of extraction \"patterns\", to each sentence in a corpus, and recording the results.",
        "Thus, many elements of ER are identical extractions derived from different sentences in the corpus.",
        "This task definition is notable for the minimal inputs required – IE assessment does not require knowing the relation name nor does it require hand-tagged seed examples of the relation.",
        "Thus, an IE Assessor is applicable to Open IE.",
        "In this section, we describe the Realm system, which utilizes language modeling techniques to perform IE Assessment.",
        "Realm takes as input a set of extractions ER, and outputs a ranking of those extractions.",
        "The algorithm Realm follows is outlined in Figure 1.",
        "Realm begins by automatically selecting from ERa set of bootstrapped seeds SR intended to serve as correct examples of the relation R. Realm utilizes the KnowItAll hypothesis, setting SR equal to the h elements in ER extracted most frequently from the underlying corpus.",
        "This results in a noisy set of seeds, but the methods that use these seeds are noise tolerant.",
        "Realm then proceeds to rank the remaining (non-seed) extractions by utilizing two language-modeling components.",
        "An n-gram language model is a probability distribution P(w1, ...,wn) over consecutive word sequences of length n in a corpus.",
        "Formally, if we assume a seed (s1, s2) is a correct extraction of a relation R, the distributional hypothesis states that the context distribution around the seed extraction, P(w1,wn|w* = s1,Wj = s2) for 1 < i,j < n tends to be \"more similar\" to",
        "Realm(Ex/rac/ions ER = {e1,em}) SR = the h most frequent extractions in ER Ur = Er - Sr TypeRankings(lJR) – Hmm-T(Sr, Ur) RelationRankings(UR) – Rel-grams(SR, Ur) return a ranking of ER with the elements of SR at the top (ranked by frequency) followed by the elements of Ur = {u1, ...,um-h} ranked in ascending order of TypeRanking(ui) * RelationRanking(ui).",
        "P(w\\,wn\\wi = e\\,Wj = e2) when the extraction (ei,e2) is correct.",
        "Naively comparing context distributions is problematic, however, because the arguments to a relation often appear separated by several intervening words.",
        "In our experiments, we found that when relation arguments appear together in a sentence, 75% of the time the arguments are separated by at least three words.",
        "This implies that n must be large, and for sparse argument pairs it is not possible to estimate such a large language model accurately, because the number of modeling parameters is proportional to the vocabulary size raised to the nth power.",
        "To mitigate sparsity, Realm utilizes smaller language models in its two components as a means of \"backing-off from estimating context distributions explicitly, as described below.",
        "First, Realm utilizes an HMM to estimate whether each extraction has arguments of the proper type for the relation.",
        "Each relation R has a set of types for its arguments.",
        "For example, the relation AuthorOf(a, b) requires that its first argument be an author, and that its second be some kind of written work.",
        "Knowing whether extracted arguments are of the proper type for a relation can be quite informative for assessing extractions.",
        "The challenge is, however, that this type information is not given to the system since the relations (and the types of the arguments) are not known in advance.",
        "Realm solves this problem by comparing the distributions of the seed arguments and extraction arguments.",
        "Type checking mitigates data sparsity by leveraging every occurrence of the individual extraction arguments in the corpus, rather than only those cases in which argument pairs occur near each other.",
        "Although argument type checking is invaluable for extraction assessment, it is not sufficient for extracting relationships between arguments.",
        "For example, an IE system using only type information might determine that Intel is a corporation and that Seattle is a city, and therefore erroneously conclude that Headquartered(Intel, Seattle) is correct.",
        "Thus, Realm s second step is to employ an n-gram-based language model to assess whether the extracted arguments share the appropriate relation.",
        "Again, this information is not given to the system, so Realm compares the context distributions ofthe extractions to those of the seeds.",
        "As described in",
        "Figure 1: Pseudocode for Realm at run-time.",
        "The language models used by the Hmm-T and Rel-grams components are constructed in a preprocessing step.",
        "Section 2.3, Realm employs a relational n-gram language model in order to accurately compare context distributions when extractions are sparse.",
        "Realm executes the type checking and relation assessment components separately; each component takes the seed and non-seed extractions as arguments and returns a ranking of the non-seeds.",
        "Realm then combines the two components assessments into a single ranking.",
        "Although several such combinations are possible, Realm simply ranks the extractions in ascending order of the product of the ranks assigned by the two components.",
        "The following subsections describe Realm s two components in detail.",
        "We identify the proper nouns in our corpus using the Lex method (Downey et al., 2007).",
        "In addition to locating the proper nouns in the corpus, Lex also concatenates each multi-token proper noun (e.g.,Los Angeles) together into a single token.",
        "Both of Realm s components construct language models from this tokenized corpus.",
        "In this section, we describe our type-checking component, which takes the form of a Hidden Markov Model and is referred to as Hmm-T. Hmm-T ranks the set UR of non-seed extractions, with a goal of ranking those extractions with arguments of proper type for R above extractions containing type errors.",
        "Formally, let URi denote the set of the ith arguments of the extractions in UR.",
        "Let SRi be defined similarly for the seed set SR.",
        "Our type checking technique exploits the distributional hypothesis – in this case, the intuition that are to those of the seed arguments.",
        "Specifically, we define a function:",
        "headquartered in Santa+Clara",
        "Figure 2: Graphical model employed by Hmm-T.",
        "Shown is the case in which k = 2.",
        "Corpus preprocessing results in the proper noun Santa Clara being concatenated into a single token.",
        "extraction arguments in URi of the proper type will likely appear in contexts similar to those in which the seed arguments SRi appear.",
        "In order to identify terms that are distributionally similar, we train a probabilistic generative Hidden Markov Model (HMM), which treats each token in the corpus as generated by a single hidden state variable.",
        "Here, the hidden states take integral values from {1, .",
        ".",
        ".",
        ", T}, and each hidden state variable is itself generated by some number k of previous hidden states.",
        "Formally, the joint distribution of the corpus, represented as a vector of tokens w, given a corresponding vector of states t is:",
        "The distributions on the right side of Equation 1 can be learned from a corpus in an unsupervised manner, such that words which are distributed similarly in the corpus tend to be generated by similar hidden states (Rabiner, 1989).",
        "The generative model is depicted as a Bayesian network in Figure 2.",
        "The figure also illustrates the one way in which our implementation is distinct from a standard HMM, namely that proper nouns are detected a priori and modeled as single tokens (e.g., Santa Clara is generated by a single hidden state).",
        "This allows the type checker to compare the state distributions of different proper nouns directly, even when the proper nouns contain differing numbers of words.",
        "To generate a ranking of UR using the learned HMM parameters, we rank the arguments ei according to how similar their state distributions P(t|ei) where K L represents KL divergence, and the outer sum is taken over the arguments Ci of the extraction e. We rank the elements of UR in ascending order of f (e).",
        "Hmm-T has two advantages over a more traditional type checking approach of simply counting the number of times in the corpus that each extraction appears in a context in which a seed also appears (cf. (Ravichandran et al., 2005)).",
        "The first advantage of Hmm-T is efficiency, as the traditional approach involves a computationally expensive step of retrieving the potentially large set of contexts in which the extractions and seeds appear.",
        "In our experiments, using Hmm-T instead of a context-based approach results in a 10-50x reduction in the amount of data that is retrieved to perform type checking.",
        "Secondly, on sparse data Hmm-T has the potential to improve type checking accuracy.",
        "For example, consider comparing Pickerington, a sparse candidate argument of the type City, to the seed argument Chicago, for which the following two phrases appear in the corpus:",
        "(i) \"Pickerington, Ohio\" (ii) \"Chicago, Illinois\"",
        "In these phrases, the textual contexts surrounding Chicago and Pickerington are not identical, so to the traditional approach these contexts offer no evidence that Pickerington and Chicago are of the same type.",
        "For a sparse token like Pickerington, this is problematic because the token may never occur in a context that precisely matches that of a seed.",
        "In contrast, in the HMM, the non-sparse tokens Ohio and Illinois are likely to have similar state distributions, as they are both the names of U.S. States.",
        "Thus, in the state space employed by the HMM, the contexts in phrases (i) and (ii) are in fact quite similar, allowing Hmm-T to detect that Pickerington and Chicago are likely of the same type.",
        "Our experiments quantify the performance improvements that Hmm-T offers over the traditional approach for type checking sparse data.",
        "The time required to learn Hmm-T's parameters scales proportional to Tk+1 times the corpus size.",
        "Thus, for tractability, Hmm-T uses a relatively small state space of T = 20 states and a limited k value of 3.",
        "While these settings are sufficient for type checking (e.g., determining that Santa Clara is a city) they are too coarse-grained to assess relations between arguments (e.g., determining that Santa Clara is the particular city in which Intel is headquartered).",
        "We now turn to the Rel-grams component, which performs the latter task.",
        "Realm s relation assessment component, called Rel-grams, tests whether the extracted arguments have a desired relationship, but given Realm's minimal input it has no a priori information about the relationship.",
        "Rel-grams relies instead on the distributional hypothesis to test each extraction.",
        "As argued in Section 2.1, it is intractable to build an accurate language model for context distributions surrounding sparse argument pairs.",
        "To overcome this problem, we introduce relational n-gram models.",
        "Rather than simply modeling the context distribution around a given argument, a relational n-gram model specifies separate context distributions for an arguments conditioned on each of the other arguments with which it appears.",
        "The relational n-gram model allows us to estimate context distributions for pairs of arguments, even when the arguments do not appear together within a fixed window of n words.",
        "Further, by considering only consecutive argument pairs, the number of distinct argument pairs in the model grows at most linearly with the number of sentences in the corpus.",
        "Thus, the relational n-gram model can scale.",
        "Formally, for a pair of arguments (e1; e2), a relational n-gram model estimates the distributions P(w1;wn|wi = e1,e1 <-> e2) for each 1 < i < n, where the notation e1 <-> e2 indicates the event that e2 is the next argument to either the right or the left of e1 in the corpus.",
        "Rel-grams begins by building a relational n-gram model of the arguments in the corpus.",
        "For notational convenience, we represent the model s distributions in terms of \"context vectors\" for each pair of arguments.",
        "Formally, for a given sentence containing arguments ei and e2 consecutively, we define a context of the ordered pair (e1, e2) to be any window of n tokens around e1.",
        "Let C = (c1; c2,c|C|} be the set of all contexts of all argument pairs found in the corpus.",
        "For a pair of arguments (ej, ek), we model their relationship using a \\C\\ dimensional context vector v(ej efc), whose i-th dimension corresponds to the number of times context ci occurred with the pair (ej, ek) in the corpus.",
        "These context vectors are similar to document vectors from Information Retrieval (IR), and we leverage IR research to compare them, as described below.",
        "To assess each extraction, we determine how similar its context vector is to a canonical seed vector (created by summing the context vectors of the seeds).",
        "While there are many potential methods for determining similarity, in this work we rank extractions by decreasing values of the BM25 distance metric.",
        "BM25 is a TF-IDF variant introduced in TREC-3(Robertson et al., 1992), which outperformed both the standard cosine distance and a smoothed KL divergence on our data."
      ]
    },
    {
      "heading": "3. Experimental Results",
      "text": [
        "This section describes our experiments on IE assessment for sparse data.",
        "We start by describing our experimental methodology, and then present our results.",
        "The first experiment tests the hypothesis that Hmm-T outperforms an n-gram-based method on the task of type checking.",
        "The second experiment tests the hypothesis that Realm outperforms multiple approaches from previous work, and also outperforms each of its Hmm-T and Rel-grams components taken in isolation.",
        "The corpus used for our experiments consisted of a sample of sentences taken from Web pages.",
        "From an initial crawl of nine million Web pages, we selected sentences containing relations between proper nouns.",
        "The resulting text corpus consisted of about three million sentences, and was tokenized as described in Section 2.",
        "For tractability, before and after performing tokenization, we replaced each token occurring fewer than five times in the corpus with one of two \"unknown word\" markers (one for capitalized words, and one for uncapitalized words).",
        "This preprocessing resulted in a corpus containing about sixty-five million total tokens, and 214,787 unique tokens.",
        "We evaluated performance on four relations: Conquered, Founded, Headquartered, and Merged.",
        "These four relations were chosen because they typically take proper nouns as arguments, and included a large number of sparse extractions.",
        "For each relation R, the candidate extraction list ER was obtained using TextRunner (Banko et al., 2007).",
        "TextRunner is an IE system that computes an index of all extracted relationships it recognizes, in the form of (object, predicate, object) triples.",
        "For each of our target relations, we executed a single query to the TextRunner index for extractions whose predicate contained a phrase indicative of the relation (e.g., \"founded by\", \"headquartered in\"), and the results formed our extraction list.",
        "For each relation, the 10 most frequent extractions served as bootstrapped seeds.",
        "All of the non-seed extractions were sparse (no argument pairs were extracted more than twice for a given relation).",
        "These test sets contained a total of 361 extractions.",
        "As discussed in Section 2.2, on sparse data Hmm-T has the potential to outperform type checking methods that rely on textual similarities of context vectors.",
        "To evaluate this claim, we tested the Hmm-T system against an n-grams type checking method on the task of type-checking the arguments to a relation.",
        "The n-grams method compares the context vectors of extractions in the same way as the Rel-grams method described in Section 2.3, but is not relational (n-grams considers the distribution of each extraction argument independently, similar to Hmm-T).",
        "We tagged an extraction as type correct iff both arguments were valid for the relation, ignoring whether the relation held between the arguments.",
        "The results of our type checking experiments are shown in Table 1.",
        "For all types, Hmm-T outperforms n-grams, and Hmm-T reduces error (mea-",
        "Table 1: Type Checking Performance.",
        "Listed is area under the precision/recall curve.",
        "Hmm-T outperforms n-grams for all relations, and reduces the error in terms of missing area under the curve by 46% on average.",
        "sured in missing area under the precision/recall curve) by 46%.",
        "The performance difference on each relation is statistically significant (p < 0.01, two-sampled t-test), using the methodology for measuring the standard deviation of area under the precision/recall curve given in (Richardson and Domingos, 2006).",
        "n-grams, like Rel-grams, employs the BM-25 metric to measure distributional similarity between extractions and seeds.",
        "Replacing BM-25 with cosine distance cuts Hmm-T's advantage over n-grams, but Hmm-T's error rate is still 23% lower on average.",
        "The Realm system combines the type checking and relation assessment components to assess extractions.",
        "Here, we test the ability of Realm to improve the ranking of a state of the art IE system, TextRunner.",
        "For these experiments, we evaluate Realm against the TextRunner frequency-based ordering, a pattern-learning approach, and the Hmm-T and Rel-grams components taken in isolation.",
        "The TextRunner frequency-based ordering ranks extractions in decreasing order of their extraction frequency, and importantly, for our task this ordering is essentially equivalent to that produced by the \"Urns\" (Downey et al., 2005) and Pointwise Mutual Information (Etzioni et al., 2005) approaches employed in previous work.",
        "The pattern-learning approach, denoted as Pl, is modeled after Snowball (Agichtein, 2006).",
        "The algorithm and parameter settings for Pl were those manually tuned for the Headquartered relation in previous work (Agichtein, 2005).",
        "A sensitivity analysis of these parameters indicated that the re-",
        "Type",
        "Hmm-T",
        "n-grams",
        "Conquered",
        "0.917",
        "0.767",
        "Founded",
        "0.827",
        "0.636",
        "Headquartered",
        "0.734",
        "0.589",
        "Merged",
        "0.920",
        "0.854",
        "Average",
        "0.849",
        "0.712",
        "Table 2: Performance of Realm for assessment of sparse extractions.",
        "Listed is area under the precision/recall curve for each method.",
        "In parentheses is the percentage reduction in error over the strongest baseline method (TextRunner or Pl) for each relation.",
        "\"Avg.",
        "Prec.\"",
        "denotes the fraction of correct examples in the test set for each relation.",
        "Realm outperforms its Rel-grams and Hmm-T components taken in isolation, as well as the TextRunner and Pl systems from previous work.",
        "sults are sensitive to the parameter settings.",
        "However, we found no parameter settings that performed significantly better, and many settings performed significantly worse.",
        "As such, we believe our results reasonably reflect the performance of a pattern learning system on this task.",
        "Because Pl performs relation assessment, we also attempted combining Pl with Hmm-T in a hybrid method (Pl+ Hmm-T) analogous to Realm.",
        "The results of these experiments are shown in Table 2.",
        "Realm outperforms the TextRunner and Pl baselines for all relations, and reduces the missing area under the curve by an average of 39% relative to the strongest baseline.",
        "The performance differences between Realm and TextRunner are statistically significant for all relations, as are differences between Realm and Pl for all relations except Conquered (p < 0.01, two-sampled t-test).",
        "The hybrid Realm system also outperforms each of its components in isolation."
      ]
    },
    {
      "heading": "4. Related Work",
      "text": [
        "To our knowledge, Realm is the first system to use language modeling techniques for IE Assessment.",
        "Redundancy-based approaches to pattern-based IE assessment (Downey et al., 2005; Etzioni et al., 2005) require that extractions appear relatively frequently with a limited set of patterns.",
        "In contrast, Realm utilizes all contexts to build a model of extractions, rather than a limited set of patterns.",
        "Our experiments demonstrate that Realm outperforms these approaches on sparse data.",
        "Type checking using named-entity taggers has been previously shown to improve the precision of pattern-based IE systems (Agichtein, 2005; Feldman et al., 2006), but the Hmm-T type-checking component we develop differs from this work in important ways.",
        "Named-entity taggers are limited in that they typically recognize only small set of types (e.g., ORGANIZATION, LOCATION, PERSON), and they require hand-tagged training data for each type.",
        "Hmm-T, by contrast, performs type checking for any type.",
        "Finally, Hmm-T does not require hand-tagged training data.",
        "Pattern learning is a common technique for extracting and assessing sparse data (e.g. (Agichtein, 2005; Riloff and Jones, 1999; Paşca et al., 2006)).",
        "Our experiments demonstrate that Realm outperforms a pattern learning system closely modeled after (Agichtein, 2005).",
        "Realm is inspired by pattern learning techniques (in particular, both use the distributional hypothesis to assess sparse data) but is distinct in important ways.",
        "Pattern learning techniques require substantial processing of the corpus after the relations they assess have been specified.",
        "Because of this, pattern learning systems are unsuited to Open IE.",
        "Unlike these techniques, Realm pre-computes language models which allow it to assess extractions for arbitrary relations at run-time.",
        "In essence, pattern-learning methods run in time linear in the number of relations whereas Realm s run time is constant in the number of relations.",
        "Thus, Realm scales readily to large numbers of relations whereas pattern-learning methods do not.",
        "Conquered",
        "Founded",
        "Headquartered",
        "Merged",
        "Average",
        "Avg.",
        "Prec.",
        "0.698",
        "0.578",
        "0.400",
        "0.742",
        "0.605",
        "TextRunner",
        "0.738",
        "0.699",
        "0.710",
        "0.784",
        "0.733",
        "Pl",
        "0.885",
        "0.633",
        "0.651",
        "0.852",
        "0.785",
        "Pl+ Hmm-T",
        "0.883",
        "0.722",
        "0.727",
        "0.900",
        "0.808",
        "Hmm-T",
        "0.830",
        "0.776",
        "0.678",
        "0.864",
        "0.787",
        "Rel-grams",
        "0.929 (39%)",
        "0.713",
        "0.758",
        "0.886",
        "0.822",
        "Realm",
        "0.907 (19%)",
        "0.781 (27%)",
        "0.810 (35%)",
        "0.908 (38%)",
        "0.851 (39%)",
        "A second distinction of Realm is that its type checker, unlike the named entity taggers employed in pattern learning systems (e.g., Snowball), can be used to identify arbitrary types.",
        "A final distinction is that the language models Realm employs require fewer parameters and heuristics than pattern learning techniques.",
        "Similar distinctions exist between Realm and a recent system designed to assess sparse extractions by bootstrapping a classifier for each target relation (Feldman et al., 2006).",
        "As in pattern learning, constructing the classifiers requires substantial processing after the target relations have been specified, and a set of hand-tagged examples per relation, making it unsuitable for Open IE."
      ]
    },
    {
      "heading": "5. Conclusions",
      "text": [
        "This paper demonstrated that unsupervised language models, as embodied in the Realm system, are an effective means of assessing sparse extractions.",
        "Another attractive feature of Realm is its scalability.",
        "Scalability is a particularly important concern for Open Information Extraction, the task ofex-tracting large numbers of relations that are not specified in advance.",
        "Because Hmm-T and Rel-grams both pre-compute language models, Realm can be queried efficiently to perform IE Assessment.",
        "Further, the language models are constructed independently of the target relations, allowing Realm to perform IE Assessment even when relations are not specified in advance.",
        "In future work, we plan to develop a probabilistic model of the information computed by Realm.",
        "We also plan to evaluate the use of non-local context for IE Assessment by integrating document-level modeling techniques (e.g., Latent Dirichlet Allocation)."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "This research was supported in part by NSF grants IIS-0535284 and IIS-0312988, DARPA contract NBCHD030010, ONR grant N00014-05-1-0185 as well as a gift from Google.",
        "The first author is supported by an MSR graduate fellowship sponsored by Microsoft Live Labs.",
        "We thank Michele Banko, Jeff Bilmes, Katrin Kirchhoff, and Alex Yates for helpful comments."
      ]
    }
  ]
}
