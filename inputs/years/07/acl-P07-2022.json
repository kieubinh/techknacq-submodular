{
  "info": {
    "authors": [
      "Daniel Janus",
      "Adam Przepiórkowski"
    ],
    "book": "45th Annual Meeting of the Association for Computational Linguistics Companion Volume Proceedings of the Demo and Poster Sessions",
    "id": "acl-P07-2022",
    "title": "Poliqarp: An open source corpus indexer and search engine with syntactic extensions",
    "url": "https://aclweb.org/anthology/P07-2022",
    "year": 2007
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Poliqarp",
        "An open source corpus indexer and search engine with syntactic extensions",
        "Daniel Janus Adam Przepiorkowski",
        "Sentivision Polska Sp.",
        "z o.o.",
        "Insitute of Computer Science",
        "Marynarska 19a, 02-674 Warsaw, Poland Polish Academy of Sciences",
        "nathell@korpus .pl Ordona 21, 01-237 Warsaw, Poland",
        "adamp@ipipan.waw.pl",
        "This paper presents recent extensions to Poliqarp, an open source tool for indexing and searching morphosyntactically annotated corpora, which turn it into a tool for indexing and searching certain kinds of treebanks, complementary to existing treebank search engines.",
        "In particular, the paper discusses the motivation for such a new tool, the extended query syntax of Poliqarp and implementation and efficiency issues."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "The aim of this paper is to present extensions to Poliqarp, an efficient open source indexer and search tool for morphosyntactically annotated XCES-encoded (Ide et al., 2000) corpora, with query syntax based on that of CQP (Christ, 1994), but extending it in interesting ways.",
        "Poliqarp has been in constant development since 2003 (Przepiorkowski et al., 2004) and it is currently employed as the search engine of the IPI PAN Corpus of Polish (Przepiorkowski, 2004) and the Lisbon corpus of Portuguese (Barreto et al., 2006), as well as in other projects.",
        "Poliqarp has a typical server-client architecture, with various Poliqarp clients developed so far, including GUI clients for a variaty of operating systems (Linux, Windows, MacOS, Solaris) and architectures (big-endian and little-endian), as well as a PHP client.",
        "Since March 2006, the 1st stable version of Poliqarp (Janus and",
        "Przepiorkowski, 2006) is available under GPL.",
        "A version of Poliqarp that implements various statistical extensions is at the beta-testing stage.",
        "Although Poliqarp was designed as a tool for corpora linguistically annotated at word-level only, the extensions described in this paper turn it into an indexing and search tool for certain kinds of treebanks, complementary to existing treebank search engines.",
        "Section 2 briefly introduces the basic query syntax of Poliqarp, section 3 presents extensions of Poliqarp aimed at the processing of treebanks, section 4 discusses implementation and efficiency issues, and section 5 concludes the paper."
      ]
    },
    {
      "heading": "2. Query Syntax",
      "text": [
        "In the Poliqarp query language, just as in CQP, regular expressions may be formulated over corpus positions, e.g.: [pos=\"adj\"] +, where any non-empty sequence of adjectives is sought, or within values of attributes, e.g.: [pos=\" a.",
        "*\"], concerning forms (henceforth: segments) tagged with POSs whose names start with an a, e.g., adj and adv.",
        "Parts of speech and morphosyntactic categories may be queried separately, e.g., the query [gend=masc] could be used to search for masculine segments, regardless of the POS or other categories, while the query [pos = \"subst|ger\" & gend!=masc] can be used to find nominal and gerundive segments which are not masculine.",
        "A unique feature of Poliqarp is that it may be used for searching corpora containing, in addition to disambiguated interpretations, information about all possible morphosyntactic interpretations given by the morphological analyser.",
        "For example, the query [case~acc] finds all segments with an accusative interpretation (even if this is not the interpretation selected in a given context), while [case=acc] finds segments which were disambiguated to accusative in a given context.",
        "Moreover, Poliqarp does not make the assumption that only one interpretation must be correct for any given segment; some examples of sentences containing an ambiguous segment which cannot be uniquely disambiguated even given unlimited context and all the linguistic and encyclopaedic knowledge are cited in (Przepiorkowski et al., 2004).",
        "In such cases, the = operator has the existential meaning, i.e., [case=acc] finds segments with at least one accusative interpretation marked as correct in the context (\"disambiguated\").",
        "On the other hand, the operator == is universal, i.e., [case==acc] finds segments whose all disambiguated interpretations are accusative: segments which were truly uniquely disambiguated to one (accusative) interpretation, or segments which have many interpretations correct in the context, but all of them are accusative.",
        "For completeness, the operator – is added, which universally applies to all morphosyntactic interpretations, i.e., [case – acc] finds segments whose all interpretations as given by a morphological analyser (before disambiguation) are accusative.",
        "The most detailed presentation of the original query syntax of Poliqarp is available in (Przepiorkowski, 2004), downloadable from http://korpus.pl/index.php?page= publications."
      ]
    },
    {
      "heading": "3. Syntactic Extensions",
      "text": [
        "(Przepiorkowski, 2007) argues for the explicit representation of both a syntactic head and a semantic head for each syntactic group identified in a (partially parsed) constituency-based (as opposed to dependency-based) treebank.",
        "For example, for the Polish syntactic group tuzin biafych koni, 'a dozen of white horses', lit.",
        "'dozen-NOM/ACC white-GEN horses-GEN', the syntactic head is tuzin 'dozen', while the semantic head is koni 'horses'.",
        "The segment koni is also both the syntactic head and the semantic head of the embedded nominal group biafych koni 'white horses'.",
        "In general, following (Przepiorkowski, 2007), a given segment is a syntactic head of at most one group (e.g., tuzin and koni in the example above), but it may be a semantic head ofa number ofgroups (e.g., koni above is a semantic head of biafych koni and of tuzin biafych koni).",
        "This kind ofrepresentation is problematic forgeneral search tools for constituency-based treebanks,such as TIGERSearch (Lezius, 2002), which usually assume that the set of edges within a syntactic representation of a sentence is a tree, in particular, that it has a single root node and that each leaf has (at most) one incoming edge.",
        "While the former assumption is not a serious problem (an artificial single root may always be added), the latter is fatal for representations alluded to above, as a single segment may be a semantic head of a number of syntactic groups, i.e., it may have several incoming edges.",
        "The extension of Poliqarp presented here makes it possible to index and search for such (partial) syntactic-semantic treebanks.",
        "Specifications of syntactic constructions in the extended Poliqarp query language syntax are similar to specifications of particular segments, but they use a different repertoire of attributes, non-overlapping with the attributes used to specify single segments.",
        "Two main attributes to be used for querying for syntactic groups are: type and head.",
        "The attribute type specifies the general syntactic type of the group, so [type=coordination] will find coordinated constructions, while [type=\" [pn]G\"] will find prepositional and nominal groups.",
        "The syntax ofvalues ofthe attribute head differs from that of the other attributes; its values must be enclosed in a double or a single set of square brackets, as in: [head= [...][...]] or [head= [...]].",
        "In the first case, the first brackets specify the syntactic head and second brackets specify the semantic",
        "projekte/TIGER/.",
        "head, as in the following query which may be used to find elective constructions of the type najstarszy z koni '(the) oldest of horses', which are syntactically headed by the adjective and semantically by the semantic head of the dependent of that adjective:",
        "[head=[pos=adj] [pos=noun]].",
        "In the second case, the content ofthe single brackets specifies both the syntactic head and the semantic head and, additionally, makes the requirement that they be the same segment.",
        "This means that the queries [head= [case=gen] [case=gen] ] and [head= [case=gen] ] have a slightly different semantics: the first will find syntactic groups where the two heads may be different or the same, but they must be genitive; the second will find groups with the two heads being necessarily the same genitive segment.",
        "The usefulness of such queries may be illustrated with a query for verbs which co-occur with dative dependents denoting students; the first approximation of such a query may look like this:",
        "[pos=verb] [head=[case=dat] [base=student]].",
        "This query will find not only dative nominal groups headed by a form of student, but also dative numeral groups whose main noun is a form of student, appropriate dative adjectival elective groups, etc.",
        "As syntactic sugar, the constructs synh= [...] and semh= [...] can be used to enforce a constraint only on, respectively, syntactic or semantic head of a group.",
        "It may seem that, given the possibility to specify the syntactic head of the construction, the attribute type is redundant; in fact, we are not currently aware of cases where the specification type=\"PG\" or type=\"NG\" could not be replaced by an appropriate reference to the grammatical class (part of speech) of the syntactic head.",
        "However, the type attribute is useful for finding constructions which are not defined by their heads, for example, oratio recta constructions, and it is also useful for dealing with coordinate structures."
      ]
    },
    {
      "heading": "4. Implementation Issues",
      "text": [
        "To allow for fast searching, the original Poliqarp uses its own compact binary format for corpora, described in detail in (Janus, 2006) and briefly in (Janus and Przepiorkowski, 2006).",
        "Because the number of syntactic groups can easily grow very large and be on par with total number of words in a fully-tagged corpus, the representation of syntactic groups should be space-efficient, yet allow for fast decoding and random access.",
        "The key observation to achieving this goal is that, due to the tree nature of the group set, any two groups can be either mutually disjoint or completely contained in each other.",
        "Thus, it is possible to serialize the tree into a list, sorted by the lower bound of a group, such that each group is immediately followed by its direct subgroups.",
        "More precisely, the on-disk representation of a treebank is a bit vector that contains the following data for each group: 1) synchronization bit (see below), usually 0; 2) the difference between the lower bound of the previous group and the lower bound of the one in question, encoded in 7-code; 3) 7-encoded length of current group in segments; 4) 7-encoded number of type of this group (the mapping of numbers to type names is stored in a separate on-disk dictionary in which two type numbers are reserved: 0 for coordinated groups and 1 for conjunctions); 5) if this is a coordinated construct (i.e., type = 0) – 7-encoded number of subsequent groups (excluding the current one but including indirect subgroups) that are part of the coordination;or 6) if this is not a coordinated construct (i.e., it is an ordinary group) – offset of syntactic and semantic head of this group, in that order, each represented by a binary number of log l bits, where l stands for the length of the group.",
        "One drawback of this representation is that it does not allow for random access: the 7-code and head offsets have variable length, thus it is not possible to determine which bit one should start with to decode the group sequence for a certain segment.",
        "To mitigate this, a synchronization mechanism is employed.",
        "For every k-th segment (k is a constant defined for the corpus, usually 1024), the bit offset of start of the description of the earliest group that intersects this segment is stored as an unsigned little-endian 32-bit integer in a separate file.",
        "In the description of this group, the synchronization bit is set to 1, and the lower bound is spelled in full (as an unsigned 32-bit binary integer) so that it is not necessary to know the previous lower bound to start decoding.",
        "This synchronization lines up with the sparse inverted indexing mechanism used by Poliqarp for efficient searching.",
        "Poliqarp artificially splits the corpus into fixed-size chunks and remembers which segments occur in which chunks; if the search engine makes random access to the corpus, the accessed segments' offsets are multiplies of the chunk size.",
        "It is best, thus, to ascertain that the constant k is also equal to this chunk size.",
        "In a typical scenario with many mostly small groups occurring close to each other, this encoding schema is capable of achieving the ratio of well under two bytes per group and does not incur a significant overhead in corpus size (which is usually in the range of 10-12 bytes times the number of segments for a morphosyntactically but not structurally tagged corpus).",
        "This is important, since disk access is the key factor in Poliqarp's performance."
      ]
    },
    {
      "heading": "5. Conclusions",
      "text": [
        "In this paper, we presented an extension ofPoliqarp, a tool for indexing and searching morphosyntacti-cally annotated corpora, towards the management of syntactically annotated corpora.",
        "An interesting feature of thus extended Poliqarp is its ability to deal with treebanks which do not adopt the \"at most one incoming edge\" assumption and which distinguish between syntactic heads and semantic heads.",
        "We also sketched the original and efficient method of indexing such treebanks.",
        "The implementation of the extensions currently approaches the alpha stage.",
        "By the time of ACL 2007, we expect to release the sources of a relatively stable beta-stage version."
      ]
    }
  ]
}
