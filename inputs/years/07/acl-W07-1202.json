{
  "info": {
    "authors": [
      "Stephen Clark",
      "James R. Curran"
    ],
    "book": "Workshop on Deep Linguistic Processing",
    "id": "acl-W07-1202",
    "title": "Perceptron Training for a Wide-Coverage Lexicalized-Grammar Parser",
    "url": "https://aclweb.org/anthology/W07-1202",
    "year": 2007
  },
  "references": [
    "acl-C04-1041",
    "acl-C96-1058",
    "acl-J05-1003",
    "acl-J99-2004",
    "acl-N06-1021",
    "acl-P02-1035",
    "acl-P02-1043",
    "acl-P04-1014",
    "acl-P04-1015",
    "acl-P05-1011",
    "acl-P06-1088",
    "acl-P06-1110",
    "acl-P06-4020",
    "acl-P07-1032",
    "acl-P96-1011",
    "acl-P99-1069",
    "acl-W02-1001",
    "acl-W04-3201",
    "acl-W04-3202",
    "acl-W96-0213"
  ],
  "sections": [
    {
      "text": [
        "Stephen Clark James R. Curran",
        "Oxford University Computing Laboratory School of Information Technologies Wolfson Building, Parks Road University of Sydney",
        "Oxford, OX1 3QD, UK NSW 2006, Australia",
        "stephen.clark@comlab.ox.ac.uk james@it.usyd.edu.au",
        "This paper investigates perceptron training for a wide-coverage ccg parser and compares the perceptron with a log-linear model.",
        "The ccg parser uses a phrase-structure parsing model and dynamic programming in the form of the Viterbi algorithm to find the highest scoring derivation.",
        "The difficulty in using the perceptron for a phrase-structure parsing model is the need for an efficient decoder.",
        "We exploit the lexicalized nature of ccg by using a finite-state supertagger to do much of the parsing work, resulting in a highly efficient decoder.",
        "The perceptron performs as well as the log-linear model; it trains in a few hours on a single machine; and it requires only a few hundred mb of r am for practical training compared to 20 gb for the log-linear model.",
        "We also investigate the order in which the training examples are presented to the online perceptron learner, and find that order does not significantly affect the results."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "A recent development in data-driven parsing is the use of discriminative training methods (Riezler et al., 2002; Taskar et al., 2004; Collins and Roark, 2004; Turian and Melamed, 2006).",
        "One popular approach is to use a log-linear parsing model and maximise the conditional likelihood function (Johnson et al., 1999; Riezler et al., 2002; Clark and Curran,",
        "Tsujii, 2005).",
        "Maximising the likelihood involves calculating feature expectations, which is computationally expensive.",
        "Dynamic programming (dp) in the form of the inside-outside algorithm can be used to calculate the expectations, if the features are sufficiently local (Miyao and Tsujii, 2002); however, the memory requirements can be prohibitive, especially for automatically extracted, wide-coverage grammars.",
        "In Clark and Curran (2004b) we use cluster computing resources to solve this problem.",
        "Parsing research has also begun to adopt discriminative methods from the Machine Learning literature, such as the perceptron (Freund and Schapire, margin methods underlying Support Vector Machines (Taskar et al., 2004; McDonald, 2006).",
        "Parser training involves decoding in an iterative process, updating the model parameters so that the decoder performs better on the training data, according to some training criterion.",
        "Hence, for efficient training, these methods require an efficient decoder; in fact, for methods like the perceptron, the update procedure is so trivial that the training algorithm essentially is decoding.",
        "This paper describes a decoder for a lexicalized-grammar parser which is efficient enough for practical discriminative training.",
        "We use a lexicalized phrase-structure parser, the ccg parser of Clark and Curran (2004b), together with a dp-based decoder.",
        "The key idea is to exploit the properties of lexi-calized grammars by using a finite-state supertagger prior to parsing (Bangalore and Joshi, 1999; Clark and Curran, 2004a).",
        "The decoder still uses the cky algorithm, so the worst case complexity of the parsing is unchanged; however, by allowing the supertagger to do much of the parsing work, the efficiency of the decoder is greatly increased in practice.",
        "We chose the perceptron for the training algorithm because it has shown good performance on other nlp tasks; in particular, Collins (2002) reported good performance for a perceptron tagger compared to a Maximum Entropy tagger.",
        "Like Collins (2002), the decoder is the same for both the perceptron and the log-linear parsing models; the only change is the method for setting the weights.",
        "The perceptron model performs as well as the loglinear model, but is considerably easier to train.",
        "Another contribution of this paper is to advance wide-coverage ccg parsing.",
        "Previous discriminative models for ccg (Clark and Curran, 2004b) required cluster computing resources to train.",
        "In this paper we reduce the memory requirements from 20 gb of ram to only a few hundred mb, but without greatly increasing the training time or reducing parsing accuracy.",
        "This provides state-of-the-art ccg parsing with a practical development environment.",
        "More generally, this work provides a practical environment for experimenting with discriminative models for phrase-structure parsing; because the training time for the ccg parser is relatively short (a few hours), experiments such as comparing alternative feature sets can be performed.",
        "As an example, we investigate the order in which the training examples are presented to the perceptron learner.",
        "Since the perceptron training is an online algorithm – updating the weights one training sentence at a time – the order in which the data is processed affects the resulting model.",
        "We consider random ordering; presenting the shortest sentences first; and presenting the longest sentences first; and find that the order does not significantly affect the final results.",
        "We also use the random orderings to investigate model averaging.",
        "We produced 10 different models, by randomly permuting the data, and averaged the weights.",
        "Again the averaging was found to have no impact on the results, showing that the perceptron learner – at least for this parsing task – is robust to the order of the training examples.",
        "The contributions of this paper are as follows.",
        "First, we compare perceptron and log-linear parsing models for a wide-coverage phrase-structure parser, the first work we are aware of to do so.",
        "Second, we provide a practical framework for developing discriminative models for ccg, reducing the memory requirements from over 20 gb to a few hundred mb.",
        "And third, given the significantly shorter training time compared to other discriminative parsing models (Taskar et al., 2004), we provide a practical framework for investigating discriminative training methods more generally."
      ]
    },
    {
      "heading": "2. The CCG Parser",
      "text": [
        "Clark and Curran (2004b) describes the ccg parser.",
        "The grammar used by the parser is extracted from CCGbank, a ccg version of the Penn Treebank (Hockenmaier, 2003).",
        "The grammar consists of 425 lexical categories, expressing subcategorisation information, plus a small number of combinatory rules which combine the categories (Steedman, 2000).",
        "A Maximum Entropy supertagger first assigns lexical categories to the words in a sentence, which are then combined by the parser using the combinatory rules and the cky algorithm.",
        "A log-linear model scores the alternative parses.",
        "We use the normalform model, which assigns probabilities to single derivations based on the normal-form derivations in CCGbank.",
        "The features in the model are defined over local parts of the derivation and include wordword dependencies.",
        "A packed chart representation allows efficient decoding, with the Viterbi algorithm finding the most probable derivation.",
        "The supertagger is a key part of the system.",
        "It uses a log-linear model to define a distribution over the lexical category set for each word and the previous two categories (Ratnaparkhi, 1996) and the forward backward algorithm efficiently sums over all histories to give a distibution for each word.",
        "These distributions are then used to assign a set of lexical categories to each word (Curran et al., 2006).",
        "Supertagging was first defined for ltag (Bangalore and Joshi, 1999), and was designed to increase parsing speed for lexicalized grammars by allowing a finite-state tagger to do some of the parsing work.",
        "Since the elementary syntactic units in a lexi-calized grammar – in ltag's case elementary trees and in ccg's case lexical categories - contain a significant amount of grammatical information, combining them together is easier than the parsing typically performed by phrase-structure parsers.",
        "Hence",
        "Bangalore and Joshi (1999) refer to supertagging as almost parsing.",
        "Supertagging has been especially successful for ccg: Clark and Curran (2004a) demonstrates the considerable increases in speed that can be obtained through use of a supertagger.",
        "The supertagger interacts with the parser in an adaptive fashion.",
        "Initially the supertagger assigns a small number ofcat-egories, on average, to each word in the sentence, and the parser attempts to create a spanning analysis.",
        "If this is not possible, the supertagger assigns more categories, and this process continues until a spanning analysis is found.",
        "The number ofcategories assigned to each word is determined by a parameter ß in the supertagger: all categories are assigned whose forward-backward probabilities are within ß of the highest probability category (Curran et al., 2006).",
        "Clark and Curran (2004a) also shows how the supertagger can reduce the size of the packed charts to allow discriminative log-linear training.",
        "However, even with the use of a supertagger, the packed charts for the complete CCGbank require over 20 gb of ram.",
        "Reading the training instances into memory one at a time and keeping a record of the relevant feature counts would be too slow for practical development, since the log-linear model requires hundreds of iterations to converge.",
        "Hence the packed charts need to be stored in memory.",
        "In Clark and Curran (2004b) we use a cluster of 45 machines, together with a parallel implementation of the bfgs training algorithm, to solve this problem.",
        "The need for cluster computing resources presents a barrier to the development of further ccg parsing models.",
        "Hockenmaier and Steedman (2002) describe a generative model for ccg, which only requires a non-iterative counting process for training, but it is generally acknowledged that discriminative models provide greater flexibility and typically higher performance.",
        "In this paper we propose the perceptron algorithm as a solution.",
        "The perceptron is an online learning algorithm, and so the parameters are updated one training instance at a time.",
        "However, the key difference compared with the loglinear training is that the perceptron converges in many fewer iterations, and so it is practical to read the training instances into memory one at a time.",
        "The difficulty in using the perceptron for training phrase-structure parsing models is the need for an efficient decoder (since perceptron training essentially is decoding).",
        "Here we exploit the lexicalized nature of ccg by using the supertagger to restrict the size of the charts over which Viterbi decoding is performed, resulting in an extremely effcient decoder.",
        "In fact, the decoding is so fast that we can estimate a state-of-the-art discriminative parsing model in only a few hours on a single machine."
      ]
    },
    {
      "heading": "3. Perceptron Training",
      "text": [
        "The parsing problem is to find a mapping from a set of sentences x G X to a set of parses y G Y.",
        "We assume that the mapping F is represented through a feature vector $(x, y) G Rd and a parameter vector a G Rd in the following way (Collins, 2002):",
        "yGGEN(x)",
        "where gen(x) denotes the set of possible parses for sentence x and $(x,y) • a = Y^i ai^i(x,y) is the inner product.",
        "The learning task is to set the parameter values (the feature weights) using the training set as evidence, where the training set consists of examples (xi,yi) for 1 < i < N. The decoder is an algorithm which finds the argmax in (1).",
        "In this paper, Y is the set of possible ccg derivations and gen(x) enumerates the set of derivations for sentence x.",
        "We use the same feature representation $(x, y) as in Clark and Curran (2004b), to allow comparison with the log-linear model.",
        "The features are defined in terms of local subtrees in the derivation, consisting of a parent category plus one or two children.",
        "Some features are lexicalized, encoding word-word dependencies.",
        "Features are integer-valued, counting the number of times some configuration occurs in a derivation.",
        "gen(x) is defined by the ccg grammar, plus the supertagger, since the supertagger determines how many lexical categories are assigned to each word in x (through the ß parameter).",
        "Rather than try to recreate the adaptive supertagging described in Section 2 for training, we simply fix the the value of ß so that gen(x) is the set of derivations licenced by the grammar for sentence x, given that value.",
        "ß is now a parameter of the training process which we determine experimentally using development data.",
        "The ß parameter can be thought of as determining the set of incorrect derivations which the training algorithm",
        "uses to \"discriminate against\", with a smaller value of ß resulting in more derivations.",
        "The same decoder is used for both training and testing: the Viterbi algorithm.",
        "However, the packed representation of gen(x) in each case is different.",
        "When running the parser, a lot of grammatical information is stored in order to produce linguistically meaningful output.",
        "For training, all that is required is a packed representation of the features on each derivation in GEN(x) for each sentence in the training data.",
        "The feature forests described in Miyao and Tsujii (2002) provide such a representation.",
        "Clark and Curran (2004b) describe how a set of C CG derivations can be represented as a feature forest.",
        "The feature forests are created by first building packed charts for the training sentences, and then extracting the feature information.",
        "Packed charts group together equivalent chart entries.",
        "Entries are equivalent when they interact in the same manner with both the generation of subsequent parse structure and the numerical parse selection.",
        "In practice, this means that equivalent entries have the same span, and form the same structures and generate the same features in any further parsing of the sentence.",
        "Back pointers to the daughters indicate how an individual entry was created, so that any derivation can be recovered from the chart.",
        "A feature forest is essentially a packed chart with only the feature information retained (see Miyao and details).",
        "Dynamic programming algorithms can be used with the feature forests for efficient estimation.",
        "For the log-linear parsing model in Clark and Curran (2004b), the inside-outside algorithm is used to calculate feature expectations, which are then used by the bfgs algorithm to optimise the likelihood function.",
        "For the perceptron, the Viterbi algorithm finds the features corresponding to the highest scoring derivation, which are then used in a simple additive update process.",
        "The training algorithm initializes the parameter vector as all zeros, and updates the vector by decoding the examples.",
        "Each feature forest is decoded with the current parameter vector.",
        "If the output is incorInputs: training examples (xi,yi) Initialisation: set a = 0 Algorithm:",
        "rect, the parameter vector is updated by adding the feature vector of the correct derivation and subtracting the feature vector of the decoder output.",
        "Training typically involves multiple passes over the data.",
        "Figure 1 gives the algorithm, where N is the number of training sentences and T is the number of iterations over the data.",
        "For all the experiments in this paper, we used the averaged version of the perceptron.",
        "Collins (2002) introduced the averaged perceptron, as a way of reducing overfitting, and it has been shown to perform better than the non-averaged version on a number of tasks.",
        "The averaged parameters are defined as follows: Ys = Et=i...T,i=i...N aS,i/NT where alf is the value of the sth feature weight after the tth sentence has been processed in the ith iteration.",
        "A naive implementation of the averaged percep-tron updates the accumulated weight for each feature after each example.",
        "However, the number of features whose values change for each example is a small proportion of the total.",
        "Hence we use the algorithm described in Daumé III (2006) which avoids unnecessary calculations by only updating the accumulated weight for a feature fs when as changes."
      ]
    },
    {
      "heading": "4. Experiments",
      "text": [
        "The feature forests were created as follows.",
        "First, the value of the ß parameter for the supertagger was fixed (for the first set of experiments at 0.004).",
        "The supertagger was then run over the sentences in Sections 2-21 of CCGbank.",
        "We made sure that every word was assigned the correct lexical category among its set (we did not do this for testing).",
        "Then the parser was run on the supertagged sentences, using the CKY algorithm and the CCG combinatory rules.",
        "We applied the same normal-form restrictions used in Clark and Curran (2004b): categories can only combine if they have been seen to combine in Sections 2-21 of CCGbank, and only if they do not violate the Eisner (1996a) normal-form constraints.",
        "This part of the process requires a few hundred mb of ram to run the parser, and takes a few hours for Sections 2-21 of CCGbank.",
        "Any further training times or memory requirements reported do not include the resources needed to create the forests.",
        "The feature forests are extracted from the packed chart representation used in the parser.",
        "We only use a feature forest for training if it contains the correct derivation (according to CCGbank).",
        "Some forests do not have the correct derivation, even though we ensure the correct lexical categories are present, because the grammar used by the parser is missing some low-frequency rules in CCGbank.",
        "The total number of forests used for the experiments was 35,370 (89% of Sections 2-21).",
        "Only features which occur at least twice in the training data were used, of which there are 477,848.",
        "The complete set of forests used to obtain the final perceptron results in Section 4.1 require 21 gb of disk space.",
        "The perceptron is an online algorithm, updating the weights after each forest is processed.",
        "Each forest is read into memory one at a time, decoding is performed, and the weight values are updated.",
        "Each forest is discarded from memory after it has been used.",
        "Constantly reading forests off disk is expensive, but since the perceptron converges in so few iterations the training times are reasonable.",
        "In contrast, log-linear training takes hundreds of iterations to converge, and so it would be impractical to keep reading the forests off disk.",
        "Also, since loglinear training uses a batch algorithm, it is more convenient to keep the forests in memory at all times.",
        "In Clark and Curran (2004b) we use a cluster of 45 machines, together with a parallel implementation of bfgs, to solve this problem, but need up to 20 gb of ram.",
        "The feature forest representation, and our implementation of it, is so compact that the perceptron training requires only 20 mb of ram.",
        "Since the supertagger has already removed much ofthe practical parsing complexity, decoding one of the forests is extremely quick, and much of the training time is taken with continually reading the forests off disk.",
        "However, the training time for the perceptron is still only around 5 hours for 10 iterations.",
        "model ram iterations time (mins)",
        "Table 1 compares the training for the perceptron and log-linear models.",
        "The perceptron was run for 10 iterations and the log-linear training was run to convergence.",
        "The training time for 10 iterations of the perceptron is longer than the log-linear training, although the results in Section 4.1 show that the per-ceptron typically converges in around 4 iterations.",
        "The striking result in the table is the significantly smaller memory requirement for the perceptron.",
        "Table 2 gives the first set of results for the averaged perceptron model.",
        "These were obtained using Section 00 of CCGbank as development data.",
        "Gold-standard pos tags from CCGbank were used for all the experiments.",
        "The parser provides an analysis for 99.37% of the sentences in Section 00.",
        "The F-scores are based only on the sentences for which there is an analysis.",
        "Following Clark and Curran (2004b), accuracy is measured using F-score over the goldstandard predicate-argument dependencies in CCG-bank.",
        "The table shows that the accuracy increases initially with the number of iterations, but converges quickly after only 4 iterations.",
        "The accuracy after only one iteration is also surprisingly high.",
        "Table 3 compares the accuracy of the perceptron and log-linear models on the development data.",
        "LP is labelled precision, LR is labelled recall, and cat is the lexical category accuracy.",
        "The same feature forests were used for training the perceptron and log-linear models, and the same parser and decoding algorithm were used for testing, so the results for the two models are directly comparable.",
        "The only difference in each case was the weights file used.",
        "The table also gives the accuracy for the percep-tron model (after 6 iterations) when a smaller value of the supertagger ß parameter is used during the forest creation (with the number of training iterations again optimised on the development data).",
        "A smaller ß value results in larger forests, giving more incorrect derivations for the training algorithm to \"discriminate against\".",
        "Increasing the size of the forests is no problem for the perceptron, since the memory requirements are so modest, but this would cause problems for the log-linear training which is already highly memory intensive.",
        "The table shows that increasing the number of incorrect derivations gives a small improvement in performance for the perceptron.",
        "perceptron",
        "20 mb",
        "10",
        "312",
        "log-linear",
        "19 gb",
        "475",
        "91",
        "Table 4 gives the accuracies for the two models on the test data, Section 23 of CCGbank.",
        "Here the coverage of the parser is 99.63%, and again the accuracies are computed only for the sentences with an analysis.",
        "The figures for the averaged perceptron were obtained using 6 iterations, with ß = 0.002.",
        "The perceptron slightly outperforms the log-linear model (although we have not carried out significance tests).",
        "We justify the use of different ß values for the two models by arguing that the perceptron is much more flexible in terms of the size of the training forests it can handle.",
        "Note that the important result here is that the perceptron model performs at least as well as the log-linear model.",
        "Since the perceptron is considerably easier to train, this is a useful finding.",
        "Also, since the log-linear parsing model is a Conditional Random Field (crf), the results suggest that the perceptron should be compared with a crf for other tasks for which the crf is considered to give state-of-the-art results."
      ]
    },
    {
      "heading": "5. Order of Training Examples",
      "text": [
        "As an example of the flexibility of our discriminative training framework, we investigated the order in which the training examples are presented to the online perceptron learner.",
        "These experiments were particularly easy to carry out in our framework, since the 21 gb file containing the complete set of training forests can be sampled from directly.",
        "We stored the position on disk of each of the forests, and selected the forests one by one, according to some order.",
        "The first set of experiments investigated ordering the training examples by sentence length.",
        "Buttery (2006) found that a psychologically motivated Cate-gorial Grammar learning system learned faster when the simplest linguistic examples were presented first.",
        "Table 5 shows the results both when the shortest sentences are presented first and when the longest sentences are presented first.",
        "Training on the longest sentences first provides the best performance, but is no better than the standard ordering.",
        "For the random ordering experiments, forests were randomly sampled from the complete 21 gb training file on disk, without replacement.",
        "The new forests file was then used for the averaged-perceptron training, and this process was repeated 9 times.",
        "The number of iterations for each training run was optimised in terms of the accuracy of the resulting model on the development data.",
        "There was little variation among the models, with the best model scoring 86.84% F-score on the development data and the worst scoring 86.63%.",
        "Table 6 shows that the performance of this best model on the test data is only slightly better than the model trained using the CCGbank ordering.",
        "log-linearß=o.QQ4",
        "87.02",
        "86.07",
        "86.54",
        "93.99",
        "perceptron^=o.oo4",
        "87.11",
        "85.98",
        "86.54",
        "94.03",
        "perceptronß=o.QQ2",
        "87.25",
        "86.20",
        "86.72",
        "94.08",
        "Table 5: F-score of the averaged perceptron on the development data for different data orderings (ß = 0.002)",
        "Finally, we used the 10 models (including the model from the original training set) to investigate model averaging.",
        "Corston-Oliver et al.",
        "(2006) motivate model averaging for the perceptron in terms of Bayes Point Machines.",
        "The averaged percep-tron weights resulting from each permutation of the training data were simply averaged to produce a new model.",
        "Table 6 shows that the averaged model again performs only marginally better than the original model, and not as well as the best-performing \"random\" model, which is perhaps not surprising given the small variation among the performances of the component models.",
        "In summary, the perceptron learner appears highly robust to the order of the training examples, at least for this parsing task."
      ]
    },
    {
      "heading": "6. Comparison with Other Work",
      "text": [
        "Taskar et al.",
        "(2004) investigate discriminative training methods for a phrase-structure parser, and also use dynamic programming for the decoder.",
        "The key difference between our work and theirs is that they are only able to train on sentences of 15 words or less, because of the expense of the decoding.",
        "There is work on discriminative models for dependency parsing (McDonald, 2006); since there are efficient decoding algorithms available (Eisner, 1996b), complete resources such as the Penn Treebank can used for estimation, leading to accurate parsers.",
        "There is also work on discriminative models for parse reranking (Collins and Koo, 2005).",
        "The main drawback with this approach is that the correct parse may get lost in the first phase.",
        "The existing work most similar to ours is Collins and Roark (2004).",
        "They use a beam-search decoder as part of a phrase-structure parser to allow practical estimation.",
        "The main difference is that we are able to store the complete forests for training, and can guarantee that the forest contains the correct derivation (assuming the grammar is able to generate it given the correct lexical categories).",
        "The downside of our approach is the restriction on the locality of the features, to allow dynamic programming.",
        "One possible direction for future work is to compare the search-based approach of Collins and Roark with our dp-based approach.",
        "In the tagging domain, Collins (2002) compared log-linear and perceptron training for hmm-style tagging based on dynamic programming.",
        "Our work could be seen as extending that of Collins since we compare log-linear and perceptron training for a dp-based wide-coverage parser."
      ]
    },
    {
      "heading": "7. Conclusion",
      "text": [
        "Investigation of discriminative training methods is one of the most promising avenues for breaking the current bottleneck in parsing performance.",
        "The drawback of these methods is the need for an efficient decoder.",
        "In this paper we have demonstrated how the lexicalized nature of ccg can be used to develop a very efficient decoder, which leads to a practical development environment for discriminative training.",
        "We have also provided the first comparison of a perceptron and log-linear model for a wide-coverage phrase-structure parser.",
        "An advantage of the percep-tron over the log-linear model is that it is considerably easier to train, requiring 1/1000th of the memory requirements and converging in only 4 iterations.",
        "Given that the global log-linear model used here (crf) is thought to provide state-of-the-art performance for many nlp tasks, it is perhaps surprising that the perceptron performs as well.",
        "The evaluation in this paper was based solely on CCGbank, but we have shown in Clark and Curran (2007) that the ccg parser gives state-of-the-art performance, outperforming the rasp parser (Briscoe et al., 2006) by over 5% on DepBank.",
        "This suggests the need for more comparisons of crfs and discriminative methods such as the perceptron for other nlp tasks.",
        "iteration",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "Standard order",
        "86.14",
        "86.30",
        "86.53",
        "86.61",
        "86.69",
        "86.72",
        "Shortest first",
        "85.98",
        "86.41",
        "86.57",
        "86.56",
        "86.54",
        "86.53",
        "Longest first",
        "86.25",
        "86.48",
        "86.66",
        "86.72",
        "86.74",
        "86.75",
        "perceptron model",
        "LP",
        "LR",
        "F",
        "cat",
        "standard order",
        "87.50",
        "86.62",
        "87.06",
        "94.08",
        "best random order",
        "87.52",
        "86.72",
        "87.12",
        "94.12",
        "averaged",
        "87.53",
        "86.67",
        "87.10",
        "94.09"
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "James Curran was funded under ARC Discovery grants DP0453131 and DP0665973."
      ]
    }
  ]
}
