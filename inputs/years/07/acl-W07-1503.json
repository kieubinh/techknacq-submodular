{
  "info": {
    "authors": [
      "Gosse Bouma",
      "Geert Kloosterman"
    ],
    "book": "Linguistic Annotation Workshop",
    "id": "acl-W07-1503",
    "title": "Mining Syntactically Annotated Corpora with XQuery",
    "url": "https://aclweb.org/anthology/W07-1503",
    "year": 2007
  },
  "references": [
    "acl-H05-1091",
    "acl-I05-6008",
    "acl-W06-2704"
  ],
  "sections": [
    {
      "text": [
        "Gosse Bouma and Geert Kloosterman",
        "Information Science University of Groningen The Netherlands",
        "g.bouma|g.j.kloosterman@rug.nl",
        "This paper presents a uniform approach to data extraction from syntactically annotated corpora encoded in XML.",
        "XQuery, which incorporates XPath, has been designed as a query language for XML.",
        "The combination of XPath and XQuery offers flexibility and expressive power, while corpus specific functions can be added to reduce the complexity of individual extraction tasks.",
        "We illustrate our approach using examples from dependency treebanks for Dutch."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Manually annotated treebanks have played an important role in the development of robust and accurate syntactic analysers.",
        "Now that such parsers are available for various languages, there is a growing interest in research that uses automatically annotated corpora.",
        "While such corpora are not error-free, the fact that they can be constructed relatively easily, and the fact that they can be an order of magnitude larger than manually corrected treebanks, makes them attractive for several types of research.",
        "Syntactically annotated corpora have suc-cesfully been used to acquire lexico-semantic information (Lin and Pantel, 2001; Snow et al., 2005), for relation extraction (Bunescu and Mooney, 2005), in IR (Cui et al., 2005), and in QA (Katz and Lin, 2003; Molla and Gardiner, 2005).",
        "What these tasks have in common is the fact that they all operate on large amounts of data extracted from syntactically annotated text.",
        "Tools to perform this task are often developed with only a single application in mind (mostly corpus linguistics) or are developed in an ad-hoc fashion, as part of a specific application.",
        "We propose a more principled approach, based on two observations:",
        "• XML is widely used to encode syntactic annotation.",
        "Syntactic annotation is not more complex that some other types of information that is routinely stored in XML.",
        "This suggests that XML technology can be used to process syntactically annotated corpora.",
        "• XQuery is a query language for XML data.",
        "As such, it is the obvious choice for mining syntactically annotated corpora.",
        "The remainder of this paper is organised as follows.",
        "In the next section, we present the Alpino treebank format, which we use for syntactic annotation.",
        "The Alpino parser has been used to annotate large corpora, and the results have been used in a number of research projects.",
        "In section 3, we discuss the existing approaches to data extraction from Alpino corpora.",
        "We note that all of these have drawbacks, either because they lack expressive power, or because they require a serious amount of programming overhead.",
        "In section 4, we present our approach, starting from a relatively straightforward corpus linguistics task, that requires little more than XPath, and ending with a more advanced relation extraction task, that requires XQuery.",
        "We demonstrate that much of the complexity of advanced tasks can be avoided by providing users with a corpus specific module, that makes available common concepts and functions."
      ]
    },
    {
      "heading": "2. The Alpino Treebank format",
      "text": [
        "As part of the development of the Alpino parser (Bouma et al., 2001), a number of manually annotated dependency treebanks have been created (van der Beek et al., 2002).",
        "Annotation guidelines were adopted from the Corpus of Spoken Dutch (Oostdijk, 2000), a large corpus annotation project for Dutch.",
        "In addition, large corpora (e.g. the 80M word Dutch CLEF corpus, the 500M word Twente News corpus, and Dutch Wikipedia) have been annotated automatically.",
        "Both types of treebanks have been used for corpus linguistics (van der Beek, 2005; Villada Moiron, 2005; Bouma et al., 2007).",
        "The automatically annoted treebanks have been used for lexical acquisition (van der Plas and Bouma, 2005), and form the core of a Dutch QA system (Bouma et al., 2005).",
        "The format of Alpino dependency trees is illustrated in figure 1.",
        "The (somewhat simplified) XML for this tree is in fig. 2.",
        "Nodes in the tree are labeled with a dependency relation and a category or POStag.",
        "Furthermore, the begin and end position of constituents is represented in attributes, and the root and word form of terminal nodes is encoded.",
        "Note that heads do not have their dependents as children, as is the case in most dependency tree formats.",
        "Instead, the head is a child of the constituent node if which it is the head, and its dependents are siblings of the head.",
        "Finally, trees may contain index nodes (indicated by indices in bold in the graphical representation and by the index attribute in the XML) to indicate 'secondary' edges.",
        "The subject Alan Turing in fig. 2 is a subject of the passive auxiliary word, but also a direct object of the verb aanjref.",
        "Thus, Alpino dependency trees are actually graphs.",
        "A large syntactically annotated corpus tends to",
        "Figure 1: Op 7 juni 1954 werd Alan Turing dood aangetroffen (On June 7, 1954, Alan Turing was found dead) give rise to even larger volumes of XML.",
        "To support efficient storage and retrieval of XML data, a set of tools has been developed for compression of XML data (using dictzip) and for efficient visualisation and search of data in compressed XML files.",
        "The tools are described in more detail at the Alpino website."
      ]
    },
    {
      "heading": "3. Existing approaches to extraction",
      "text": [
        "Users have taken quite different approaches to corpus exploration and data extraction.",
        "• For corpus exploration, Alpino dtsearch is the most widely used tool.",
        "It allows XPath queries to be matched against trees in a treebank.",
        "The result can be a visual display oftrees with matching nodes highlighted, but alternative outputs are possible as well.",
        "Examples of how XPath can be used for extraction are presented in the next section.",
        "• For relation extraction (i.e. finding symptoms of diseases), the Alpino system itself has been",
        "TreebankTools.html",
        "hd",
        "SU",
        "verb",
        "1",
        "\\v0rd4",
        "mwu",
        "mwp",
        "mwp",
        "name",
        "name",
        "Alans",
        "Turing6",
        "mod",
        "obj1",
        "pp",
        "1",
        "predc",
        "hd",
        "adj",
        "verb",
        "dood7",
        "tref-aang",
        "mwp",
        "mwp",
        "mwp",
        "noun",
        "noun",
        "noun",
        "7i",
        "junii",
        "19543",
        "used.",
        "It provides functionality for converting dependency trees in XML into a Prolog list of dependency triples.",
        "The full functionality of Prolog can then be used to do the actual extraction.",
        "• Alternatively, one can use XSLT to extract data from the XML directly.",
        "As XSLT is primarily intended for transformations, this tends to give rise to complex code.",
        "• Alternatively, a general purpose scripting or programming language such as Perl or Python, with suitable XML support, can be used.",
        "As in the Alpino/Prolog case, this has the advantage that one has a full programming language available.",
        "A disadvantage is that there is no specific support for working with dependency trees or triples.",
        "None of the approaches listed above is optimal.",
        "XPath is suitable only for identifying syntactic patterns, and does not offer the possibility of extraction of elements (i.e. it has no capturing mechanism).",
        "The other three approaches do allow for both matching and extraction, but they all require skills that go considerably beyond conceptual knowledge of the treebank and some basic knowledge of XML.",
        "Another disadvantage of the current situation is that there is little or no sharing of solutions between users.",
        "Yet, different applications tend to encounter the same problems.",
        "For instance, multiword expressions (such as Alan Turing or 7 juni 1954) are encoded as trees, dominated by a cat='mwu' node.",
        "An extraction task that requires names to be extracted must thus take into account the fact that names can be both nodes with a label pos='name' as well as cat='mwu' nodes (dominating a pos='name' ).",
        "The situation is further complicated by the fact that individual parts of a name, such as Alan in Alan Turing, should normally not be matched.",
        "Similar problems arise if one wants to match e.g. finite verbs (there is no single attribute which expresses tense) or nps (the cat='np' attribute is only present on complex nps, not on single words).",
        "A very frequent issue is the proper handling of index nodes.",
        "Searching for the object of the verb trefjaan in fig. 2 requires that one finds the node in the tree that is coindexed with the rel='obj1' node with index 1.",
        "This is a challenge in all approaches listed above, except for Alpino/Prolog, which solves the problem by converting trees to sets of dependency triples.",
        "Some of the problems mentioned above could be solved by introducing more and more fine-grained attributes (i.e. a separate attribute for tense, assigning both a category and a pos-tag to (nonhead) terminal-nodes, etc.)",
        "or by introducing unary branching nodes.",
        "This has the obvious drawback of introducing redundancy in the encoding, would mean another departure from the usual conception of dependency trees (in the case unary branching is introduced), and may still not cover all distinctions that users need to make.",
        "Also, finding the content of an index-node cannot be solved in this way.",
        "One might consider moving to a radically different treebank format, such as Tiger XML for instance, in which trees are basically a listing of nodes, with non-terminal nodes dominating a number of edge elements that take (the index of) other nodes as value.",
        "Note, however, that most of the problems mentioned above refer to linguistic concepts, and thus are unlikely to be solved by changing the architecture of the underlying XML representation."
      ]
    },
    {
      "heading": "4. XQuery and XPath",
      "text": [
        "Two closely related standards for processing XML documents are XSLT and XQuery .",
        "Both make use of XPath, the XML language for locating parts of XML documents.",
        "While XSLT is primarily intended for transformations of documents, XQuery is primarily intended for extraction of information from XML databases.",
        "XQuery is in many respects similar to SQL and is rapidly becoming the standard for XML database systems.",
        "A distinctive difference between the XSLT and XQuery is the fact that XSLT documents are themselves XML documents, whereas this is not the case for XQuery.",
        "This typically makes XQuery more concise and easier to read",
        "These considerations made us experiment with XQuery as a language for data extraction from syntactically annotated corpora.",
        "Similar studies were carried out by Cassidy (2002) (for an early version of XQuery) and Mayo et al.",
        "(2006), who compare the NITE Query Language and XQuery.",
        "Below, we first illustrate a task that requires use of XPath only, and then move on to tasks that require the additional functionality of XQuery.",
        "www.ims.uni-stuttgart.de/projekte/ TIGER/",
        "As argued in Bouma and Kloosterman (2002), XPath provides a powerful query language for formulating linguistically relevant queries, provided that the XML encoding of the treebank reflects the syntactic structure of the trees.",
        "Inherent reflexive verbs, for instance, are verbal heads with a rel='se' dependent.",
        "A verb with an inherently reflexive can therefore be found as follows (remember that in Alpino dependency trees, dependents are actually siblings of the head):",
        "The double slash ( // ) ensures that we search for nodes anywhere within the XML document.",
        "The material in brackets ([ ]) can be used to specify additional constraints that matching nodes have to meet.",
        "The @-sign is used to refer to attributes of an element.",
        "The double dots ( .. ) locate the parent element of an XML element.",
        "Children of an element are located using the single slash ( / ) operator.",
        "The two can be combined to locate siblings.",
        "Comparison operators are available to compare e.g. attributes that have a numeric value.",
        "The following XPath query identifies cases where the reflexive precedes the subject:",
        "Note that we can also use the / to locate attributes of an element, and that the begin attribute encodes the initial string position of a constituent.",
        "Reflexives preceding the subject are a marked option in Dutch.",
        "We may contrast matching verbs with verbs matching the following expression:",
        "Here we have simply reversed the comparison operator.",
        "As we want to exclude from consideration cases where the subject precedes the finite verb (e.g. is in sentence-initial position), we have added a negative constraint with this effect.",
        "Using the two queries above to search one year of newspaper text, we can collect the outcome and compute, for a given verb, the relative frequency of refl-su vs. su-refl order for non-subject initial sentences in Dutch.",
        "A sample of verbs that have a high percentage of refl-su occurrences, is given in table 1.",
        "The result confirms an observation in Hae-sereyn et al.",
        "(1997), that refl-su word order occurs especially with verbs having a somewhat bleeched semantics and expressing that something exists or comes into existence.",
        "It should be noted that XPath offers considerable more possibilities than what is illustrated here.",
        "XPath 2.0 in particular is an important step forward for linguistic search, as it includes far more functionality for string processing (i.e. tokenization and regular expressions) than its predecessors.",
        "Bird et al.",
        "(2006) propose an extension of XPath 1.0 for linguistic queries.",
        "The intuitive notation they introduce might be useful for some users.",
        "However, the examples they concentrate on (all having to do with linear order) presuppose trees without crossing branches'.",
        "The introduction of begin and end attributes in the Alpino format makes it possible to handle such queries for dependency trees (with crossing branches) as well, and furthermore, does not require an extension of XPath.",
        "The kind of explorative corpus search for which XPath is ideally suited is supported by most other treebank query languages as well, although not all alternatives offer the same expressive power.",
        "There are many applications, however, in which it is necessary to extract more than just (root forms of) matching nodes.",
        "XQuery offers the functionality that is required to perform arbitrary extraction.",
        "XQuery programs consist of so-called flwor expressions (for, let, where, order by, return, not all parts are required).",
        "The example below illustrates this.",
        "Assume we want to extract from a treebank all occurrences of names, along with their named entity class.",
        "The following XQuery script covers the base case.",
        "for $name in",
        "The for-statement locates the nodes to be processed.",
        "Nodes are located by XPath expressions.",
        "The collection-predicate defines the directory to be processed.",
        "For every document in the collection, nodes with a pos-attribute name are processed.",
        "We use a let-statement to assign the variable $nec is assigned the string value of the neclass-attibute (which indicates the named entity class of the name).",
        "The return-statement returns for each matching node an XML element containing the string value of the word attribute of the name, as well as an attribute indicating the named entity class.",
        "The complexity of XQuery scripts can increase considerably, depending on the complexity of the underlying XML data and the task being performed.",
        "One of the most interesting features of XQuery is the possibility to define functions.",
        "They can be used to enhance the readibility of code.",
        "Furthermore, functions can be collected in modules, and thus can be reused across applications.",
        "For Alpino treebanks, for instance, we have implemented a module that covers concepts and tasks that are needed frequently.",
        "As pointed out above, names in the Alpino treebank are not just single nodes, but, in case a name consists of two or more words, can also consist of multiple node[@pos='name'] elements, with a node[@cat='mwu'] as parent.",
        "This motivates the introduction ofa name and neclass function,",
        "refl-su",
        "su-refl",
        "verb (gloss)",
        "%",
        "#",
        "%",
        "#",
        "94.3",
        "33",
        "5.7",
        "2",
        "vorm (to shape)",
        "91.7",
        "11",
        "8.3",
        "1",
        "ontvouw (to unfold)",
        "74.1",
        "234",
        "25.9",
        "82",
        "doe.voor (to happen)",
        "73.5",
        "36",
        "26.5",
        "13",
        "teken_af (to form)",
        "58.8",
        "10",
        "41.2",
        "7",
        "wreek (to take revenge)",
        "57.1",
        "44",
        "42.9",
        "33",
        "voltrek (to take place)",
        "56.0",
        "42",
        "44.0",
        "33",
        "verzamel (to assemble)",
        "54.6",
        "309",
        "45.4",
        "257",
        "bevind (to be located)",
        "50.0",
        "18",
        "50.0",
        "18",
        "dring_op (to impose)",
        "48.3",
        "58",
        "51.7",
        "62",
        "dien_aan (to announce)",
        "for $name in",
        "as shown in fig. 3.",
        "Assuming that the alpino module has been imported, we can now write a better name extraction script:",
        "where alpino:name($name)",
        "As we are matching with non-terminal nodes as well, we need to take into account that it no longer suffices to return the value of word to obtain the yield of a node.",
        "As this situation arises frequently as well, we added a yield function (see fig. 3).",
        "It takes a node as argument, collects all descendant node/@word attribute values in the variable $words, sorted by the begin value of their node element.",
        "The yield function returns the string concatenation of the elements in $words, separated by blanks.",
        "Note that this solution also gives the correct result for discontinuous constituents.",
        "We used a wrapper around the XQuery processor Saxon to execute XQuery scripts directly on compacted corpora.",
        "The result is output such as:",
        "<term nec=\"LOC\">Atlantische Oceaan</term>",
        "A more advanced relation extraction example is given in fig. 4.",
        "It is a script for extraction of events involving the death of a person from a syntactically annotated corpus (Dutch wikipedia in this case).",
        "It will return the name of the person who died, and, if these can be found in the same sentence, the date, location, and cause of death.",
        "The script makes heavy use of functions from the alpino module that were added to facilitate relation extraction.",
        "The selector-of function defines the 'semantic head of a phrase.",
        "This is either the sibling marked rel='hd' , or (for nodes that are themselves heads) the head of the mother.",
        "For appositions and conjuncts, it it the selector of the head.",
        "Note that the last case involves a recursive function call.",
        "Similarly, the semantic role is normally identical to the value of the rel-attribute, but we go up",
        "14 .",
        "www.saxonica.com Questions about such facts are relatively frequent in Question Answering evaluation tasks.",
        "one additional level for heads, appositions and conjuncts.",
        "The value of $resolved is given by the resolve-index function shown in fig. 3, i.e. if a node is just an index (as is the case for the object of aanjref in fig. 1), the 'antecedent' node is returned.",
        "In all other cases, the node itself is returned.",
        "Date and place are found using functions for locating the date and place dependents of the verb.",
        "Finally, relevant events are found using the die-verb and kill-verb functions.",
        "Some examples of the output of the extraction script are (i.e. John Lennon was killed on December 8, 1980, and Erasmus died in Basel on July, 12,",
        "person=\"John Lennon\" cause=\"vermoord\"",
        "The functions illustrated in the two examples can be used for a range of similar data extraction tasks, whether these are intended for corpus linguistics research or as part of an information extraction system.",
        "The definition of corpus specific functions that cover frequently used syntactic and semantic concepts allows the application specific code to be relatively compact and straightforward.",
        "In addition, code which builds upon well tested corpus specific functions tends to give more accurate results than code developed from scratch."
      ]
    },
    {
      "heading": "5. Conclusions",
      "text": [
        "In this paper, we have presented an approach to mining syntactically corpora that uses standard XML technology.",
        "It can be used both for corpus exploration as well as for information extraction tasks.",
        "By providing a corpus specific module, the complexity of such tasks can be reduced.",
        "By adopting standard XML languages, we can benefit optimally from the fact that these are far more expressive than what is provided in application specific languages or tools.",
        "In addition, there is no shortage of tools or platforms supporting these languages.",
        "Thus, development of corpus specific tools can be kept at a minimum.",
        "module namespace alpino=\"alpino.xq\" ;",
        "declare function name($constituent as element(node)) as xs:boolean { if ( $constituent[@pos='name'] or",
        "declare function neclass($constituent as element(node)) as xs:string { if $constituent[@neclass] then fn:string($constituent/@neclass) else if $constituent/node[@neclass] then fn:string($constituent/node[1]/@neclass)",
        "declare function alpino:yield($constituent as element(node)) as xs:string { let $words := for $leaf in $constituent/descendant-or-self::node[@word] order by number($leaf/@begin) return $leaf/@word return string-join($words,\" \")",
        "declare function alpino:resolve-index($constituent as element(node)) as element(node) { if ( $constituent[@index and not(@pos or @cat)] ) then $constituent/ancestor::alpino_ds/ descendant::node",
        "[@index = $constituent/@index and (@pos or @cat)] else $constituent for $node in collection('wikipedia')/alpino_ds//node let $verb := alpino:selector-of($node) then alpino:yield(alpino:date-dependents($verb)[1]) else 'nil' let $place := if ( exists(alpino:location-dependents($verb)) ) then alpino:yield(alpino:location-dependents($verb)[1]) else 'nil' let $role := alpino:semantic-role($node) let $resolved := alpino:resolve-index($node) where alpino:person-node($resolved)"
      ]
    }
  ]
}
