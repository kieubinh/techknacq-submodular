{
  "info": {
    "authors": [
      "Adriana Badulescu",
      "Munirathnam Srikanth"
    ],
    "book": "Fourth International Workshop on Semantic Evaluations (SemEval-2007)",
    "id": "acl-W07-2045",
    "title": "LCC-SRN: LCC's SRN System for SemEval 2007 Task 4",
    "url": "https://aclweb.org/anthology/W07-2045",
    "year": 2007
  },
  "references": [
    "acl-H05-1112",
    "acl-W07-2003"
  ],
  "sections": [
    {
      "text": [
        "Proceedings of the 4th International Workshop on Semantic Evaluations (SemEval-2007), pages 215?218, Prague, June 2007. c?2007 Association for Computational Linguistics"
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The Semantic Relations between Nominals task from SemEval 2007 focuses on identifying the semantic relations that hold between two arguments manually annotated with word senses (Girju et al. 2007).",
        "The previous work in identifying semantic relations between nominals focuses on finding one or more relations in text for specific syntactic patterns or constructions (like genitives and noun compounds) using semi-automated and automated systems.",
        "An overview of some of these methods can be found in (Badulescu, 2004).",
        "The LCC SRN system, developed during the SRN training period, was for us, the beginning of a different approach to semantic relations detection: detecting semantic relations in text without using a syntactic pattern.",
        "Our existing work on semantic relation detection was on detecting semantic relations in text (one or more at a time) at different levels in the sentence using different syntactic patterns like genitives, noun compounds, verb-arguments, etc.",
        "For SRN, we built a new system that combines the output of the pattern dependent classifiers with the new pattern-independent classifiers for better results.",
        "The remainder of this paper is organized as follows: Section 2 describes our system, Section 3 details the experimental results, and Section 4 summarizes the conclusions."
      ]
    },
    {
      "heading": "2 System description",
      "text": [
        "The system consists of two types of classifiers: classifiers that do not use the syntactic parsed tree and that were built specifically for the SemEval 2007 Task 4(SRN) and classifiers that use specific syntactic pattern to determine the semantic relations and there were previously developed at LCC and then adapted to the SRN task (SRNPAT).",
        "The classifiers for each type were built from annotated examples using supervised machine learning algorithms like Decision Trees (DT)1, Support Vector Machines (SVM) 2 , Semantic Scattering (SS) (Moldovan and Badulescu, 2005) , Iterative Semantic Specialization (ISS) (Girju, Badulescu, and Moldovan, 2006), Na?ve Bayes (NB) 3 and Maximum Entropy (ME)4.",
        "The outputs of different classifiers (built using different types of machine learning algorithms were combined and ranked using predefined rules.",
        "Figure 1 shows the architecture of our SRN system."
      ]
    },
    {
      "heading": "2.1 Text Preprocessing",
      "text": [
        "The sentences were processed using an in-house text tokenizer, Brill's part-of-speech tagger, an in-house WordNet?based concept detector, an in-house Named Entity Recognizer, and an in-house syntactic parser.",
        "Then, the syntactic and semantic information obtained using these tools (concepts, part of speech, named entities, etc) or obtained from the sensekeys for the arguments as provided by the Task 4 organizers (e.g. word senses, lemmas, etc) were mapped into the syntactic trees.",
        "If an argument corresponds to more than one tree node, the annotation was mapped to the phrase containing the two nodes."
      ]
    },
    {
      "heading": "2.2 Learning and Classification Methods",
      "text": [
        "The core of our system is the learning and classification module.",
        "We used two types of methods: pattern-dependent that uses the syntactic parsed trees for extracting and assigning a label to the arguments and pattern-independent that creates classifiers form all the examples disregarding the pattern in the tree.",
        "Considering the limited number of examples for each pattern, we developed pattern-independent methods for classifying the semantic relations using the provided argument annotations and the context from the sentence.",
        "We built two types of classifiers: binary that focuses on building a classifier for a specific relation (SRNREL) and multi-class methods that build classifiers for all the SRN relations (SRN).",
        "Table 1 presents the accuracy of the classifiers built using different machine learning algorithms.",
        "built using different machine learning algorithms.",
        "The classifiers were built using lexical, semantic, and syntactic features of the arguments, their phrases, their clauses, their common phrase/clause, and their modifier or head phrase.",
        "The system uses WordNet, an in-house Named Entity Recognizer, and an in-house Syntactic Parser for determining the values of some of these features.",
        "Table 2 presents the list of features used by the SRN classifiers.",
        "Argument's lexical, semantic, and syntactic features: the surface form, the label (POS tag or phrase label), the named entity (human, group, location, etc), the WordNet hierarchy (entity, group, abstraction, etc), the Semantic Scattering class (e.g. object, substance, etc), the grammatical role (subject or object of the clause), the syntactic parser structure, the POS Pattern (the sequence of POS of the words from the argument), and the phrase pattern (the sequence of labels of the phrases, words from the argument); Argument's phrase features: surface form, label, grammatical role, named entity, POS pattern, Phrase patterns; Argument's Modifier/Head features: the label, surface forms, NE, and WN Hierarchy for the first modifier, post modifier, pre-modifier, and head; Arguments' common tree node features: label, named entity, grammatical role, POS pattern, and phrase pattern, the tree path between arguments, and their order in tree; Arguments' clause: label, verb, voice, POS pattern, phrase pattern.",
        "The second type of methods we used, were for particular patterns frequent in the training corpus.",
        "Table 3 shows the list of most frequent patterns in the training corpus.",
        "For having general pattern and covering the arguments that correspond to more",
        "than one node in a tree, we considered as argument the noun phrase that contains the nominal instead of the node for the nominal.",
        "The incoming <e1>chairman</e1> of the <e2>committee</e2> is promising an array of oversight investigations that could provoke sharp disagreement with Republicans and the White",
        "For the pattern-dependent methods we adapted some of our existing binary and multi-class classifiers to work with the SRN relations.",
        "For the SRN system we used only one binary classifier built for the Part-Whole relation (relation 6) using the ISS learning algorithm and trained/tested on the examples used in (Girju, Badulescu, and Moldovan, 2006) and different multi-class classifiers for the first 4 patterns from Table 3 built using DT, SVM, SS, and NB learning algorithms trained on a corpus annotated with 40 semantic relations (extracted from Wall Street Journal articles from the TreeBank collection and LATimes articles from TREC 9 collection) that includes the 7 SRN relations (or equivalents).",
        "(Badulescu, 2004) gives more details on this list of relations (definitions, examples, distribution on corpus, etc).",
        "Table 4 shows the accuracy of these classifiers on other WSJ and LAT articles for the 40 LCC relations and respectively Part-Whole relation for the most frequent patterns from the SRN"
      ]
    },
    {
      "heading": "2.3 Relation Selection",
      "text": [
        "Any of the SRN or SRNPAT classifiers can return a relation for a pair of arguments.",
        "The best relation is selected by weighting them using the following predefined rules: The relations returned by the SRN classifiers weight more than the ones returned by SRNPAT classifiers because they were trained on the task annotated examples The relations returned by the binary classifiers weight more than the ones returned by multi-class classifiers because they focus on one relation and therefore are more precise."
      ]
    },
    {
      "heading": "3 Experimental Results",
      "text": []
    },
    {
      "heading": "3.1 Experiments on Testing",
      "text": [
        "During the competition we performed several experiments to assess the correct combination of classifiers that leads to the best results.",
        "The organizer provided 140 examples for each of the 7 relations.",
        "For testing the classifiers we trained the system on the first 110 examples and tested it on the last 30 of them.",
        "We performed different sets of experiments.",
        "Experiments with one type of classifiers.",
        "These experiments showed that ME has a best performance (55.1) 10.05 more than DT and 8.05 more than SV.",
        "ME also got the highest score for Cause-Effect, while DT obtained the best score for Product-Producer.",
        "Experiments with multiple classifiers.",
        "These experiments showed that DT+SV+SS+ISS has the best score (66.72) followed by DT+SS+ISS with 55.66.",
        "Also by adding the SS and ISS classifiers the DT score increased with 10.51, the SV score with 5.81 and the DT+SV with 20.57.",
        "Experiments with types of methods.",
        "These experiments showed that the SRN methods (with a score 0.44) are better than the SRNPAT methods (with a score of 0.41) with 0.03 which was expected since SRN were trained on provided examples.",
        "Table 5 shows the results of our SRN system when using specific classifiers or a combination of classifiers.",
        "The time did not permit us to do any experiments with the ME and NB classifiers.",
        "the different classifiers on the testing corpus.",
        "We submitted the DT+SS+ISS version because of its closeness to the normal distribution rather than DT+SV+SS+ISS that had a better f-measure but it was closer to All-True.",
        "The evaluation results showed that the testing examples we used were representative and the DT+SV+SS+ISS produce better results."
      ]
    },
    {
      "heading": "3.2 Results",
      "text": [
        "Table 6 shows the results obtained by our system on the evaluation corpus for the B4 case (using WordNet but not the query and all the training examples.",
        "the following baseline systems: All-True, a system that always returns true, Majority, a system that always returns the majority value from the training, and Prob-Match, a system that randomly generate the value.",
        "We have obtained a larger precision and accuracy than the All-True and the Prob-Match systems.",
        "However, we obtained a lower recall and therefore an F-measure."
      ]
    },
    {
      "heading": "3.3 Discussions",
      "text": [
        "The results are promising.",
        "However, there is still room for improvement.",
        "The system was developed in a limited time, and therefore it could have been benefited from more features, feature selection, more experiments, a more complex relation selection scheme (using learning), more patterns, and more types of machine learning algorithms (especially unsupervised ones)."
      ]
    },
    {
      "heading": "4 Conclusion",
      "text": [
        "We presented a system for classifying the semantic relations between nominals that combines the results of different methods (pattern-dependent or pattern-independent) and machine learning algorithms (decision tree, support vector machines, semantic scattering, maximum entropy, naive bayes, etc).",
        "The classifiers use lexical, semantic, and syntactic features and external resources like WordNet and an in-house Named Entity dictionary."
      ]
    }
  ]
}
