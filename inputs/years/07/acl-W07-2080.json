{
  "info": {
    "authors": [
      "Preslav Nakov",
      "Marti A. Hearst"
    ],
    "book": "Fourth International Workshop on Semantic Evaluations (SemEval-2007)",
    "id": "acl-W07-2080",
    "title": "UCB: System Description for SemEval Task \\#4",
    "url": "https://aclweb.org/anthology/W07-2080",
    "year": 2007
  },
  "references": [
    "acl-P02-1032",
    "acl-P06-1040",
    "acl-P06-2064",
    "acl-P98-1015"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "The UC Berkeley team participated in the SemEval 2007 Task #4, with an approach that leverages the vast size of the Web in order to build lexically-specific features.",
        "The idea is to determine which verbs, prepositions, and conjunctions are used in sentences containing a target word pair, and to compare those to features extracted for other word pairs in order to determine which are most similar.",
        "By combining these Web features with words from the sentence context, our team was able to achieve the best results for systems of category C and third best for systems of category A."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Semantic relation classification is an important but understudied language problem arising in many NLP applications, including question answering, information retrieval, machine translation, word sense disambiguation, information extraction, etc.",
        "This year's SemEval (previously SensEval) competition has included a task targeting the important special case of Classification of Semantic Relations between Nominals.",
        "In the present paper we describe the UCB system which took part in that competition.",
        "The SemEval dataset contains a total of 7 semantic relations (not exhaustive and possibly overlapping), with 140 training and about 70 testing sentences per relation.",
        "Sentence classes are approximately 50% negative and 50% positive (?near misses?).",
        "Table 1 lists the 7 relations together with some examples.",
        "(context sentences are not shown).",
        "Each example consists of a sentence, two nominals to be judged on whether they are in the target semantic relation, manually annotated WordNet 3.0 sense keys for these nominals, and the Web query used to obtain that example: \"Among the contents of the <e1>vessel</e1> were a set of carpenters <e2>tools</e2>, several large storage jars, ceramic utensils, ropes and remnants of food, as well as a heavy load of ballast stones.\""
      ]
    },
    {
      "heading": "2 Related Work",
      "text": [
        "Lauer (1995) proposes that eight prepositions are enough to characterize the relation between nouns in a noun-noun compound: of, for, in, at, on, from, with or about.",
        "Lapata and Keller (2005) improve on his results by using Web statistics.",
        "Rosario et al. (2002) use a ?descent of hierarchy?, which characterizes the relation based on the semantic category of the two nouns.",
        "Girju et al. (2005) apply SVM, decision trees, semantic scattering and iterative seman",
        "tic specialization, using WordNet, word sense disambiguation, and linguistic features.",
        "Barker and Szpakowicz (1998) propose a two-level hierarchy with 5 classes at the upper level and 30 at the lower level.",
        "Turney (2005) introduces latent relational analysis, which uses the Web, synonyms, patterns like ?X for Y ?, ?X such as Y ?, etc., and singular value decomposition to smooth the frequencies.",
        "Turney (2006) induces patterns from the Web, e.g.",
        "CAUSE is best characterized by ?Y * causes X?, and ?Y in * early X?",
        "is the best pattern for TEMPORAL.",
        "Kim and Baldwin (2006) propose to use a predefined set of seed verbs and multiple resources: WordNet, CoreLex, and Moby's thesaurus.",
        "Finally, in a previous publication (Nakov and Hearst, 2006), we make the claim that the relation between the nouns in a noun-noun compound can be characterized by the set of intervening verbs extracted from the Web."
      ]
    },
    {
      "heading": "3 Method",
      "text": [
        "Given an entity-annotated example sentence, we reduce the target entities e1 and e2 to single nouns noun1 and noun2, by keeping their last nouns only, which we assume to be the heads.",
        "We then mine the Web for sentences containing both noun1 and noun2, from which we extract features, consisting of word(s), part of speech (verb, preposition, verb+preposition, coordinating conjunction), and whether noun1 precedes noun2.",
        "Table 2 shows some example features and their frequencies.",
        "We start with a set of exact phrase queries against Google: ?infl1 THAT * infl2?, ?infl2 THAT * infl1?, ?infl1 * infl2?, and ?infl2 * infl1?, where infl1 and infl2 are inflectional variants of noun1 and noun2, generated using WordNet (Fellbaum, 1998); THAT can be that, which, or who; and * stands for 0 or more (up to 8) stars separated by spaces, representing the Google * single-word wildcard match operator.",
        "For each query, we collect the text snippets from the result set (up to 1000 per query), split them into sentences, assign POS tags using the OpenNLP tagger1, and extract features: Verb: If one of the nouns is the subject, and the other one is a direct or indirect object of that verb, we extract it and we lemmatize it using WordNet (Fellbaum, 1998).",
        "We ignore modals and auxil",
        "member.",
        "V stands for verb, P for preposition, and C for coordinating conjunction.",
        "iaries, but retain the passive be, verb particles and prepositions (in case of indirect object).",
        "Preposition: If one of the nouns is the head of an NP which contains a PP, inside which there is an NP headed by the other noun (or an inflectional form thereof), we extract the preposition heading that PP.",
        "Coordination: If the two nouns are the heads of two coordinated NPs, we extract the coordinating conjunction.",
        "In addition, we include some non-Web features2: Sentence word: We use as features the words from the context sentence, after stop words removal and stemming with the Porter stemmer.",
        "Entity word: We also use the lemmas of the words that are part of ei (i = 1, 2).",
        "Query word: Finally, we use the individual words that are part of the query string.",
        "This feature is used for category C runs only (see below).",
        "Once extracted, the features are used to calculate the similarity between two noun pairs.",
        "Each feature triplet is assigned a weight.",
        "We wish to downweight very common features, such as ?of?",
        "used as a preposition in the 2 ?",
        "1 direction, so we apply tf.idf weighting to each feature.",
        "We then use the following variant of the Dice coefficient to compare the weight",
        "This vector representation is similar to that of",
        "Lin (1998), who measures word similarity by using triples extracted from a dependency parser.",
        "In particular, given a noun, he finds all verbs that have it as a subject or object, and all adjectives that modify it, together with the corresponding frequencies."
      ]
    },
    {
      "heading": "4 Experiments and Results",
      "text": [
        "Participants were asked to classify their systems into categories depending on whether they used the WordNet sense (WN) and/or the Google query (GC).",
        "Our team submitted runs for categories A (WN=no, QC=no) and C (WN=no, QC=yes) only, since we believe that having the target entities annotated with the correct WordNet senses is an unrealistic assumption for a real-world application.",
        "Following Turney and Littman (2005) and Barker and Szpakowicz (1998), we used a 1-nearest-neighbor classifier.",
        "Given a test example, we calculated the Dice coefficient between its feature vector",
        "and the vector of each of the training examples.",
        "If there was a single highest-scoring training example, we predicted its class for that test example.",
        "Otherwise, if there were ties for first, we assumed the class predicted by the majority of the tied examples.",
        "If there was no majority, we predicted the class that was most likely on the training data.",
        "Regardless of the classifier's prediction, if the head words of the two entities e1 and e2 had the same lemma, we classified that example as negative.",
        "Table 3 and 4 show the results for our A and C runs for different amounts of training data: 45 (A1, C1), 90 (A2, C2), 105 (A3, C3) and 140 (A4, C4).",
        "All results are above the baseline: always propose the majority label (?true?/?false?)",
        "in the test set.",
        "In fact, our category C system is the best-performing (in terms of F and Acc) among the participating systems, and we achieved the third best results for category A.",
        "Our category C results are slightly but",
        "consistently better than forA for all measures (P ,R, F , Acc), which suggests that knowing the query is helpful.",
        "Interestingly, systems UCB-A2 and UCB-C2 performed worse than UCB-A1 and UCB-C1, which means that having more training data does not necessarily help with a 1NN classifier.",
        "Table 5 shows additional analysis for A4 and C4.",
        "We study the effect of adding extra Google contexts (using up to 10 stars, rather than 8), and using different subsets of features.",
        "We show the results for: (a) leave-one-out cross-validation on the training data, (b) on the test data, and (c) our official UCB runs.",
        "Acknowledgements: This work is supported in part by NSF DBI-0317510."
      ]
    }
  ]
}
