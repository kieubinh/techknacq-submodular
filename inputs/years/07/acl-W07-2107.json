{
  "info": {
    "authors": [
      "JosÃ© Iria",
      "Lei Xia",
      "Ziqi Zhang"
    ],
    "book": "Fourth International Workshop on Semantic Evaluations (SemEval-2007)",
    "id": "acl-W07-2107",
    "title": "WIT: Web People Search Disambiguation using Random Walks",
    "url": "https://aclweb.org/anthology/W07-2107",
    "year": 2007
  },
  "references": [
    "acl-N06-1061",
    "acl-W07-2012"
  ],
  "sections": [
    {
      "text": [
        "Proceedings of the 4th International Workshop on Semantic Evaluations (SemEval-2007), pages 480?483, Prague, June 2007. c?2007 Association for Computational Linguistics"
      ]
    },
    {
      "heading": "Abstract",
      "text": [
        "In this paper, we describe our work on a random walks-based approach to disambiguating people in web search results, and the implementation of a system that supports such approach, which we used to participate at"
      ]
    },
    {
      "heading": "Semeval?07 Web People Search task. 1 Introduction",
      "text": [
        "Finding information about people on the Web using a search engine is far from being a quick and easy process.",
        "There is very often a many-to-many mapping of person names to the actual persons, that is, several persons may share the same name, and several names may refer to the same person.",
        "In fact, person names are highly ambiguous: (Guha and Garg, 2004) reports that only 90.000 thousand different names are shared by 100 million people according to the U.S. Census Bureau.",
        "This creates the need to disambiguate the several referents typically found in the web pages returned by a query for a given person name.",
        "The Semeval?07 Web People Search challenge (Artiles et al., 2007) formally evaluated systems on this task.",
        "In this paper, we describe our work on a random walks-based approach to disambiguating people in web search results, heavily influenced by (Minkov et al., 2006).",
        "This particular model was chosen due to its elegance in seamlessly combining lexico-syntactic features local to a given webpage with topological features derived from its place in the network formed by the hyperlinked web pages returned by the query, to arrive at one single measure of similarity between any two pages."
      ]
    },
    {
      "heading": "2 Proposed Method",
      "text": [
        "In a nutshell, our approach 1) uses a graph to model the web pages returned by the search engine query, 2) discards irrelevant web pages using a few simple hand-crafted heuristics, 3) computes a similarity matrix for web pages using random walks over the graph, and 4) finally clusters the web pages given the similarity matrix.",
        "The next subsections detail these steps."
      ]
    },
    {
      "heading": "2.1 Web People Search Graph",
      "text": [
        "We build a directed weighted typed graph from the corpus.",
        "The graph is a 5-tuple G = (V,E, t, l, w), where V is the set of nodes,E : V ?V is the ordered set of edges, t : V ?",
        "T is the node type function",
        "the edge label function (L = {l1, .",
        ".",
        ".",
        ", l|L|} is a set of labels), and w : L ?",
        "R is the label weight function.",
        "We structure our problem domain with the types and labels presented in Figure 1.",
        "In order to transform the text into a graph that conforms to the model shown, we take the output of standard NLP tools and input it as nodes and edges into the graph, indexing nodes by string value to ensure that identical contents for any given node type are merged into a single node in the graph.",
        "To process the corpus, we run a standard NLP pipeline seperately over the metadata, title and body of the HTML pages, but not before having transformed its contents as much into plain text as possible, by removing HTML tags, javascript code, etc.",
        "The pipeline used is composed of tokenization, removal of stop words and infrequent words, and stemming with Porter's algorithm.",
        "The resulting graph at this",
        "stage consists of the nodes of type Token, Webpage, Metadata, Title and Body, properly interconnected.",
        "We then run a named entity recognizer to associate NE tags to the respective documents, via the constituent words of the NE.",
        "The information about the original URL of page is given by the corpus, while Host is trivially obtained from it.",
        "We finalise the graph by inserting an edge of type linked by between any web page linked by another in the corpus, and an edge of type related to between any web page related to another in the corpus, as given by Google's related: operator.",
        "For the named entity recognition task, we have compared GATE and OpenNLP toolkits.",
        "Although both toolkits show comparable results, OpenNLP demonstrated faster performance.",
        "Moreover, some documents in the corpus consisted of very extensive lists of names (e.g. phonebook records) which slowed the NER to a halt in practice.",
        "To compensate for this, we applied a chunking window at the beginning and end of each body content and around each occurrence of the person name being considered (and its variants determined heuristically).",
        "The window size used was 3000 characters in length, and an overlap between windows results in a merged window."
      ]
    },
    {
      "heading": "2.2 Discarding using heuristics",
      "text": [
        "To discard irrelevant documents within the corpus, we manually devised two heuristics rules for classification by observing the training data at hand.",
        "The heuristics are 1) whether the page has content at all, 2) whether the page contains at least one appearance of mentioned person name with its variants.",
        "This simple classification showed high precision and low recall on the training data.",
        "We also tried a SVM-based classifier trained on a typical bag-of-words feature vector space obtained from the training data, but found the such classifier not to be sufficiently reliable."
      ]
    },
    {
      "heading": "2.3 Random Walks Model",
      "text": [
        "We aim to determine the similarity between any two nodes of type Webpage in the graph.",
        "In our work, similarity between two nodes in the graph is obtained by employing a random walks model.",
        "A random walk, sometimes called a ?drunkard's walk,?",
        "is a formalization of the intuitive idea of taking successive steps in a graph, each in a random direction (Lova?sz, 2004).",
        "Intuitively, the ?harder?",
        "it is for a drunkard to arrive at a given webpage starting from another, the less similar the two pages are.",
        "Our model defines weights for each edge type, which, informally, determine the relevance of each feature type to establish a similarity between any two pages.",
        "Let Ltd = {l(x, y) : (x, y) ?",
        "E ?",
        "leaving nodes of type td.",
        "We require that the weights form a probability distribution over Ltd , i.e.",
        "We build an adjacency matrix of locally appropriate similarity between nodes as",
        "(2) where Wij is the ith-line and jth-column entry of W , indexed by V .",
        "Equation 2 distributes uniformly the weight of edges of the same type leaving a given node.",
        "We could choose to distribute them otherwise, e.g. we could distribute the weights according to some string similarity function or language model (Erkan, 2006), depending on the label.",
        "We associate the state of a Markov chain to every node of the graph, that is, to each node i we associate the one-step probability P (0)(j|i) of a random walker traversing to an adjacent node j.",
        "These",
        "probabilities are expressed by the row stochastic matrix D?1W , where D is the diagonal degree matrix given by Dii = ?",
        "k Wik.",
        "The ?reinforced?",
        "similarity between two nodes in the graph is given by the t-step transition probability P (t)(j|i), which can be simply computed by a matrix power, i.e.,",
        "Note that t should not be very large in our case.",
        "The probability distribution of an infinite random walk over the nodes, called the stationary distribution of the graph, is uninteresting to us for clustering purposes since it gives an information related to the global structure of the graph.",
        "It is often used as a measure to rank the structural importance of the nodes in a graph (Page et al., 1998).",
        "For clustering, we are more interested in the local similarities inside a cluster of nodes that separate them from the rest of the graph.",
        "Also, in practice, using t > 2 leads to high computational cost requirements, as the matrix becomes more dense as t grows.",
        "Equation 2 introduces the need to learn the function w. In other words, we need to tune the model to use the most relevant features for this particular task.",
        "Tuning is performed on the training set by comparing the standard purity and inverse purity measures of the clusters against the gold standard, and using a simulated annealing optimization method as described in (Nie et al., 2005)."
      ]
    },
    {
      "heading": "2.4 Commute Time Distance",
      "text": [
        "The algorithm takes as input a symmetric similarity matrix S, which we derive from the random walk model of the previous section as follows.",
        "We compute the Euclidean Commute Time (ECT) distance (Saerens et al., 2004) of any two nodes of type Webpage in the graph.",
        "The ECT distance is (also) based on a random walk model, and presents the interesting property of decreasing when the number of paths connecting two nodes increases or when the length of any path decreases, which makes it well-suited for clustering tasks.",
        "Another nice property of ECT is that it is non-parametric, so no tuning is required here.",
        "ECT has connections with principal component analysis and spectral theory (Saerens et al., 2004).",
        "In particular, we are interested in the average commute time quantity, n(i, j), which is defined as the average number of steps a random walker, starting in state i, will take before entering a given state j for the first time, and go back to i.",
        "That is, n(i, j) = m(j|i) + m(i|j), where the quantity m(j|i), called the average first-passage time, is defined as the average number of steps a random walker, starting in state i, will take to enter state j for the first time.",
        "We compute the average first-passage time iteratively by means of the following recurrence:",
        "where P (t)(?|?)",
        "is the t-step transition probability of the random walk model over G presented in the previous section.",
        "Informally, we may regard the random walk model presented in the previous section as a ?refined?",
        "document similarity measure, replacing, e.g., the typical TF-IDF measure with a measure that works in a similar way but over all features represented in the graph, whereas we can regard the ECTmeasure presented in this section as a ?booster?",
        "to a basic clustering techniques (cf. next section), achieved by means of coupling clustering with a random walk-based distance which has been shown to be competitive with state-of-the-art algorithms such as spectral clustering (Luh Yen et al., 2007)."
      ]
    },
    {
      "heading": "2.5 Clustering",
      "text": [
        "Clustering aims at partitioning n given data points into k clusters, such that points within a cluster are more similar to each other than ones taken from different clusters.",
        "An important feature of the clustering algorithm that we require for the problem at hand is its ability to determine the number k of natural clusters, since any number of referents may be present in the web search results.",
        "However, most clustering algorithms require this number to be an input, which means that they may break up or combine natural clusters, or even create clusters when no natural ones exist in the data.",
        "We use a form of group-average agglomerative clustering as described in (Fleischman and Hovy, 2004), shown in Table 1, which works fast for this problem.",
        "A difficult problem (with any clustering approach) has to do with the number of initial clusters or, alternatively, with setting a threshold for when to stop clustering.",
        "This threshold could po",
        "Input: symmetric similarity matrix S, threshold ?",
        "Output: a set of clusters C",
        "1.",
        "(i, j)?",
        "find min score in S 2. if Sij > ?",
        "then exit 3. place i and j in the same cluster in C (merging existing clusters of i and j if needed) 4.",
        "(average pairs of edges connecting to nodes i,j from any node k) 4a.",
        "Sik ?",
        "(Sik + Sjk)/2, k 6= i, j 4b.",
        "Ski ?",
        "(Ski + Skj)/2, k 6= i, j 5. remove j-th column and j-th line from S (effectively merging nodes i,j into a single node) 6. goto 1 7. return clusters C",
        "tentially also be optimized using the training data; however, we have opted for unsupervised heuristics to do that, e.g. the well-known Calinski&Harabasz stopping rule (Calinski&Harabasz, 1974)."
      ]
    },
    {
      "heading": "3 Results Obtained",
      "text": [
        "The results obtained by the system are presented in the following table.",
        "The evaluation measures used were f-measure, purity and inverse purity - for a detailed description refer to the task description (Artiles et al., 2007).",
        "aver f05 aver f02 aver pur aver inv pur 0,49 0,66 0,36 0,93 The results are below average for this Semeval task, and should not be regarded as representative of the approach adopted, since the authors have had limited time available to ensure a pristine implementation of the whole approach."
      ]
    }
  ]
}
