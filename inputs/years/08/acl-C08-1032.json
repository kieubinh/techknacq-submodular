{
  "info": {
    "authors": [
      "Claire Gardent"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C08-1032",
    "title": "Integrating a Unification-Based Semantics in a Large Scale Lexicalised Tree Adjoining Grammar for French",
    "url": "https://aclweb.org/anthology/C08-1032",
    "year": 2008
  },
  "references": [
    "acl-C88-2147",
    "acl-C92-1034",
    "acl-C96-1034",
    "acl-E03-1030",
    "acl-P01-1019",
    "acl-P06-2032",
    "acl-P95-1011"
  ],
  "sections": [
    {
      "text": [
        "In contrast to LFG and HPSG, there is to date no large scale Tree Adjoining Grammar (TAG) equiped with a compositional semantics.",
        "In this paper, we report on the integration of a unification-based semantics into a Feature-Based Lexicalised TAG for French consisting of around 6 000 trees.",
        "We focus on verb semantics and show how factorisation can be used to support a compact and principled encoding of the semantic information that needs to be associated with each of the verbal elementary trees.",
        "The factorisation is made possible by the use of xmg, a high-level linguistic formalism designed to specify and compile computational grammars and in particular, grammars based on non-local trees or tree descriptions."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Whilst there exists large scale LFGs (Lexical Functional Grammar) and HPSGs (Head-Driven Phrase Structure Grammar) equipped with a compositional semantics (Copestake et al., 2001; Frank and van Genabith, 2001), available Tree Adjoining Grammars remain largely syntactic.",
        "One reason for this is that there has been, up to recently, much debate about how best to combine TAG with a compositional semantics.",
        "Should it be based on the derived or the derivation tree ?",
        "Should Feature-Based LTAG be used or should synchronous TAG?",
        "Many proposals have been put forward but only recently did sufficient consensus emerge to support the specification of a TAG based compositional semantics.",
        "In a nutshell, it can be achieved either by using a synchronous TAG (Nes-son and Shieber, 2006) (in this case, the grammar explicitely describes and synchronises syntax and semantics structures) or by using Feature-Based LTAG (in which case, the synchronisation between syntax and semantics is mediated by the unification of semantic indices associated with the FTAG elementary trees).",
        "Another more practical reason for the absence of large scale TAGs integrating a compositional semantics is the lack of available computational frameworks.",
        "Up to recently, there has been no available grammar writing environment and parser that would support the integration of compositional semantics into a TAG.",
        "One step in that direction is provided by the development of xmg(Duchier et al., 2004), a formalism which supports the specification of Feature-Based LT-AGs equipped with a compositional semantics a la (Gardent and Kallmeyer, 2003).",
        "In this paper, we report on the integration of a unification-based semantics into a Feature-Based LTAG for French which consists of around 6 000 trees.",
        "This integration is specified using xmg and we show how this formalism can be used to support a compact and principled encoding of the semantic information that needs to be associated with each of the 6 000 elementary trees.",
        "The article is structured as follows.",
        "We start (section 2) by presenting xmg and showing how it supports the specification of Feature-Based LT-AGs equipped with a compositional semantics.",
        "We then present SemFraG, the FTAG grammar for French that we developed (section 3).",
        "In section 4, we show how xmg can be used to minimise the development cost involved in enriching such a grammar with a compositional semantics.",
        "Section 5 compares the approach with related work and concludes with pointers for further research."
      ]
    },
    {
      "heading": "2. The xmg formalism",
      "text": [
        "The xmg formalism was designed to support the development and factorisation of computational grammars for Natural Language.",
        "Like patr ii it is theory neutral in that its use is not restricted to a single grammatical theory.",
        "Unlike patr ii however, the language provided by xmg allows the linguist to talk about the basic building blocks not only of rule based computational linguistic theories such as as HPSG (Head Driven Phrase Structure Grammar) and LFG (Lexical Functional Grammar) but also of tree based theories such as TAG (Tree Adjoining Grammar).",
        "As we shall see, this involves allowing for sophisticated node naming and identification mechanisms.",
        "Other differences between patr ii and xmg include a more general use of disjunction, the use of colours to control tree construction and a more natural encoding of trees and of semantic representation than is permitted by patr ii.",
        "A detailed definition of the xmg formalism is given in (Duchier et al., 2004).",
        "In what follows, we give an intuitive presentation of xmg emphasising the points that support a strongly factorised specification of grammars and in particular, of SemFraG.",
        "We start by presenting the basic building blocks xmg allows the linguist to talk about (2.1).",
        "We then go on to discuss the factorising mechanisms it supports (2.2).",
        "Finally, we introduce the several node naming and identification mechanisms it provides (2.3).",
        "In xmg, the basic building blocks are classes which may be specified along three dimensions : a syntactic dimension (syn) which consists of a tree description whose node variables can be decorated with feature structures; a semantic dimension (sem) consisting of a flat semantic formula; and a syntax/semantic interface (interface) for synchronising semantic formulae and tree descriptions .",
        "syn.",
        "The syntactic dimension in xmg allows the linguist to specify tree descriptions i.e., trees that can be underspecified with respect to both dominance and precedence.",
        "The trees described may be either local or extended and their nodes may be decorated with either one or two feature structures sem.",
        "Using the semantic dimension, the linguist can specify unification based flat semantic formulae in the sense of (Copestake et al., 2001) i.e., non recursive formulae describing first order formulae with lambda binders replaced by unification variables and where scope may be underspecified.",
        "Semantic schemas can also be specified in which predicates are replaced by unification variables that will be instantiated during lexical lookup.",
        "For instance, the sem dimension may include the following semantic formula and schema:",
        "In (la), the flat semantic formula associated with every underspecifies scope by stating that the scope handle h2 scopes, directly or indirectly (>), over (the label L2 associated with) the scopal ar-gument.In (lb) on the other hand, underspecification bears on the predicate P and the theta roles Thetai,Theta2 which are unification variables whose value will be provided by the lexicon.",
        "In this way, this binary relation schema can be used to represent the semantics of all verbs denoting a binary relation.",
        "The lexicon will then specify for each verb the relevant relation and theta roles.",
        "interface.",
        "The third xmg dimension permits synchronising syntax and semantics.",
        "In essence, features that are used in syn or in sem can be assigned global names in the interface dimension and synchronised using variable sharing.",
        "For instance, given a feature-value pair f = X occuring in the syn dimension and a semantic parameter Y occuring in the sem dimension, the following interface constraint permits both unifying (\"synchronising\") X and Y and assigning them the global names idx and arg respectively :",
        "As we shall see in section 4.2.2, the interface allows for a natural and highly factorised means of stating syntax/semantics linking constraints (e.g., the subject constituent provides the semantic index for the first semantic argument).",
        "'Here and in what follows, we adopt the convention that identifiers starting with an upper case letter are unification variables.",
        "(two for TAG top and bottom feature structures).",
        "An important feature of a linguistic formalism is that it supports a high level of factorisation thus facilitating grammar development, debugging and maintenance.",
        "In xmg, factorising can be achieved using disjunctions, conjunctions and inheritance of classes.",
        "As argued in (Crabbe, 2005), classes disjunction supports the description of alternatives, for instance, to describe the alternative possible realisations of a subject (see below).",
        "As usual, conjunction and inheritance of classes permits combining the content of two classes.",
        "In combining tree descriptions, the linguist often wants to identify nodes across descriptions.",
        "One distinguishing feature of xmg it that it supports a sophisticated treatment of node naming and node identification (Gardent and Parmentier, 2006).",
        "Node naming.",
        "In xmg, node names are by default local to a class.",
        "However explicit import and export declarations can be used to make names \"visible\" to children classes.",
        "An export declaration makes the exported name(s) visible to all children classes.",
        "Conversely restrictive import declarations can be used either to block or to rename exported variables that are visible through inheritance.",
        "Node identification.",
        "As we have just seen, import and export declarations can be used to make names \"visible\" to children classes and thereby idendify nodes from different classes.",
        "For instance, if class C\\ inherits from class C2, C\\ refers to a node variable X and C2 exports X, then X denotes the same node in both C\\ and C2.",
        "However, this mechanism only works within a single branch of the inheritance hierarchy.",
        "Indeed in case of multiple inheritance (two classes C\\ and C2 export the same variable X to a third class inheriting from both C\\ and C2), identification will fail (X will not be interpreted as denoting the same node in both C\\ and C2).",
        "To remedy this shortcoming, xmg allows for explicit node identifications.",
        "Thus in the above case, X can be identified using the constraint C\\.X = C2.X.",
        "This concludes our informal presentation of xmg.",
        "For a more precise definition of its syntax, semantic and compilation process, we refer the reader to (Duchier et al., 2004)."
      ]
    },
    {
      "heading": "3. SemFraG",
      "text": [
        "To illustrate the expressive power of xmg, we now show how it can be used to specify SemFraG, a TAG for French which integrates a unification based compositional semantics.",
        "We start by presenting the grammar produced by the xmg specification.",
        "SemFraG is a unification based version of LTAG namely, Feature-based TAG.",
        "A Feature-based TAG (FTAG, (Vijay-Shanker and Joshi, 1988)) consists of a set of (auxiliary or initial) elementary trees and of two tree composition operations: substitution and adjunction.",
        "Initial trees are trees whose leaves are labelled with substitution nodes (marked with a downarrow) or terminal categories.",
        "Auxiliary trees are distinguished by a foot node (marked with a star) whose category must be the same as that of the root node.",
        "Substitution inserts a tree onto a substitution node of some other tree while adjunction inserts an auxiliary tree into a tree.",
        "In an FTAG, the tree nodes are furthermore decorated with two feature structures (called top and bottom) which are unified during derivation as follows.",
        "On substitution, the top of the substitution node is unified with the top of the root node of the tree being substituted in.",
        "On adjunction, the top of the root of the auxiliary tree is unified with the top of the node where adjunction takes place; and the bottom features of the foot node are unified with the bottom features of this node.",
        "At the end of a derivation, the top and bottom of all nodes in the derived tree are unified.",
        "To associate semantic representations with natural language expressions, the FTAG is modified as proposed in (Gardent and Kallmeyer, 2003).",
        "Each",
        "The distinction between conjunction and inheritance has to do with some intricate issues concerning node identifications which we will not address here.",
        "See (Gardent and Parmentier, 2006) for a detailed discussion on this.",
        "elementary tree is associated with a flat semantic representation.",
        "For instance, in Figure l, the trees for John, runs and often are associated with the semantics name(j,john), run(r,s) and oftenfx) respectively.",
        "The arguments of a semantic functor are represented by unification variables which occur both in the semantic representation of this functor and on some nodes of the associated syntactic tree.",
        "For instance in Figure 1, the semantic index s occurring in the semantic representation of runs also occurs on the subject substitution node of the associated elementary tree.",
        "The value of semantic arguments is then determined by the unifications taking place during derivation.",
        "For instance, the semantic index s in the tree for runs is unified during substitution with the semantic indices labelling the root nodes of the tree for John.",
        "As a result, the semantics of John often runs is",
        "SemFraG describes a core fragment of French and contains around 6 000 elementary trees.",
        "It covers some 35 basic verbal subcategorisation frames and for each of these frames, the set of argument redistributions (active, passive, middle, neuter, re-flexivisation, impersonal, passive impersonal) and of argument realisations (cliticisation, extraction, omission, permutations, etc.)",
        "possible for this frame.",
        "Predicative (adjectival, nominal and prepositional) and light verb constructions are also covered as well as subcategorising nouns and adjectives.",
        "Basic descriptions are provided for the remaining constructions i.e., adverbs, determiners and prepositions."
      ]
    },
    {
      "heading": "4. Implementing SemFraG using xmg",
      "text": [
        "We now illustrate the power of xmg by showing how it can be used to produce a highly factorised specification of SemFraG, an FTAG of 6 000 trees enriched with a unification based compositional semantics.",
        "Given the space constraints, we concentrate on the verbal trees (trees anchored by verbs).",
        "We start (4.1) by summarising the specification of SemFraG verbal syntactic trees given in (Crabbe, 2005).",
        "We then (4.2) show how this specification of the syntax of verbal trees can be enriched with a unification based compositional semantics.",
        "We show in particular that this enrichment can be performed using only a limited set of general principles.",
        "The syntactic dimension of SemFraG was specified in (Crabbe, 2005).",
        "For the verbal trees, it can be summarised as follows.",
        "First, tree families are specified as disjunctions of diatheses.",
        "For instance, the nOVnI family is defined as :",
        "V dianOVnlPassive",
        "V dianOVnldePassive",
        "V dianOVnlShortPassive",
        "V dianOVnllmpersonalPassive",
        "V dianOVnl middle",
        "V dianOVnlReflexive )",
        "Second, diatheses are defined as conjunctions of classes.",
        "For instance, dianOVnl Active is defined as:",
        "dianOVnl Active – > ( Subject (2) A ActiveV erbF orm A Object )",
        "Third, each grammatical function appearing in the definition of a diathesis is defined as a disjunction of classes, each class representing a possible realisation of that function.",
        "For instance, the Subject class is:",
        "V RelativisedSubject",
        "V WhSubject",
        "V CleftSubject",
        "V CliticSubject )",
        "Fourth, each class describing a possible grammatical function realisation specifies the adequate tree description.",
        "For instance, the fragments for CanonicalSubject, ActiveVerbForm and Canon-icalObject are sketched in Figure 2.",
        "In sum, the XMG specification relies on a fairly intuitive use of classes disjunctions and conjunctions.",
        "Moreover, the basic leaf classes (i.e., the most deeply embedded disjuncts and conjuncts in the grammar specification) are defined by inheritance, the inheritance hierarchy encoding the sharing of tree description fragments and/or feature",
        "V dianOVnlPassive",
        "V dianOVnldePassive",
        "V dianOVnlShortPassive",
        "V dianOVnllmpersonalPassive",
        "V dianOVnl middle",
        "V dianOVnlReflexive )",
        "(CanSubj) (Active) (Cm0bj)",
        "structures between leaf classes.",
        "As a result, several thousand trees are specified using only a few hundred classes.",
        "Just like grammar engineering is a complex issue, enriching a computational grammar with a compositional semantics is potentially time consuming and error prone.",
        "We now show that XMG permits this enrichment by means of a few general semantic principles thus minimising both work and the risk of errors.",
        "To enrich a purely syntactic FTAG with the type of unification based semantics described in section 3, three main changes need to be carried out.",
        "First, trees must be labelled with appropriate semantic indices and labels.",
        "For instance, the subject node of a verbal tree must be labelled with a semantic index.",
        "Second, trees must be associated with appropriate semantic schemas.",
        "For instance, the trees of the nOVnl family must be associated with a semantic schema representing a binary relation.",
        "Third, variable sharing between semantic schemas and syntactic trees must be enforced.",
        "For instance, the semantic index of the subject node of an active verb should be identified with the first semantic argument of the associated semantic schema.",
        "We now provide an XMG encoding of this information.",
        "As for the syntax, we proceed top-down from the verb families down to argument realisation and node labelling.",
        "4.2.1 Associating trees with semantic formulae.",
        "As indicated in the previous section, trees in TAG are grouped into tree families.",
        "We use this feature to associate in one fell swoop all the trees of a given family with the appropriate semantic schema.",
        "For instance, to associate transitive verbs with a binary relation schema, the syntactic specification given in (1) is modified to:",
        "Next the correct syntax/semantic interface constraints must be specified for each diathesis.",
        "That is, the correct mapping between syntactic and semantic arguments must be enforced.",
        "This is done in two steps.",
        "First, we define a set of interface constraints of the form",
        "which are meant to enforce the identification of the semantic index (indexp) labelling a given tree node with grammatical function F (e.g., F = subject) with the index (argi) representing the i-th argument in a semantic schema.",
        "For instance, when combined with a class C containing a variable X named argi and a variable Y named indexsukject, the SubjArgl linking constraint indexsubject = V, argi = V ensures that X and Y are identified.",
        "Assuming further that argi is used to name the first semantic argument and indexsukject to name the value of the index feature labelling a subject node, this constraint ensures a subject/argi mapping.",
        "Given such interface constraints, we then refine the diathesis definitions so as to ensure the correct bindings.",
        "For instance, the specification in (2) is modified to :",
        "dianOVnl Active – > ( SubjArgl (5) A ObjArg2 A Subject A ActiveV erbF orm A Object )",
        "whilst the passive diathesis is specified as:",
        "dianOVnlPassive – > ( SubjArg2 (6) A CagentArgl A Subject",
        "A PassiveV erbF orm A Cagent )",
        "V RelativisedSubject",
        "V Wh Subject",
        "V CleftSubject",
        "V CliticSubject )",
        "4.2.3 Labelling trees with semantic indices.",
        "The above scheme relies on the assumption that tree nodes are appropriately labelled with semantic indices (e.g., the subject node must be labelled with a semantic index) and that these indices are appropriately named (arg\\ must denote the parameter representing the first argument of a binary relation and indexsubject the value of the index feature on a subject node).",
        "As suggested in (Gardent, 2007), a complete semantic labelling of a TAG with the semantic features necessary to enrich this TAG with the unification based compositional semantics sketched in section 3 can be obtained by applying the following labelling principles^:",
        "Argument labelling: In trees associated with semantic functors, each argument node is labelled with a semantic index named after the grammatical function of the argument node (e.g., indexgubject for a subject node).",
        "Anchor projection: The anchor node projects its label up to its maximal projection.",
        "Foot projection: A foot node projects its label up to the root",
        "Controller/Controllee: In trees associated with control verbs, the semantic index of the controller is identified with the value of the controlled index occuring on the sentential argument node.",
        "As we shall now see, XMG permits a fairly direct encoding of these principles.",
        "Argument labelling.",
        "In the tree associated with a syntactic functor (e.g., a verb), each tree node representing a syntactic argument (e.g., the subject node) should be labelled with a semantic index named after the grammatical function of that node (e.g., index subject)-",
        "To label argument nodes with an appropriately named semantic index, we first define a set of classes encapsulating a node with an index and a name.",
        "We then identify this node with the appropriate tree nodes.",
        "More specifically, we define for each grammatical function Function e",
        "Because of space constraints, the principles required to handle quantification are omitted.",
        "{subject, object, cagent, iobject,...}, a semantic class FunctionSem which associates with an (exported) node called xFunction the feature value pair index = I and an interface constraint of the form index Function = I-For instance, the class SubjectSem associates the node xSubject with the feature value pair index = I and the interface constraint indexsubject = I-",
        "subjectSem – > [syn] : xSubject[index = I] [interface] : [index3Ubject = I]",
        "When specifying the tree fragments describing the possible realisations of the grammatical functions, the (exported) argument node is systematically named xArg.",
        "Finally, we modify the specification of the grammatical functions realisations to import the appropriate semantic class and identify xArg and xFunction nodes.",
        "For instance, 3 above is changed to:",
        "Subject – > SubjectSem A (8) xArg = xSubject A ( Canonical Subject",
        "As a result, all xArg nodes in the tree descriptions associated with a subject realisation are labelled with an index / feature whose global name",
        "is indexSubject •",
        "Controller/Controllee.",
        "Value sharing between the semantic index of the controller (e.g., the subject of the control verb) and that of the controllee (e.g., the empty subject of the infinitival complement) is enforced using linking constraints between the semantic index labelling the controller node and that labelling the sentential argument node of the control verb.",
        "Control verb definitions then import the appropriate (object or subject control) linking constraint.",
        "Anchor and foot projection.",
        "The anchor (foot) projection principle stipulate the projection of semantic indices from the anchor (foot) node up to the maximal projection (root).",
        "To enforce these principles, we define a set of anchor projection classes as illustrated in Figure 3.",
        "We then \"glue\" these projection skeletons onto the relevant syntactic trees by importing them in their definition and explicitely identifying the anchor node of the semantic projection classes with the anchor or foot node of these trees.",
        "Since the solutions must be trees, the nodes dominating the anchor node of the",
        "Active VerbForm",
        "projection class will deterministically be unified with those dominating the anchor or foot node of the trees being combined with.",
        "For instance, for verbs, the class specifying the verbal spine (e.g., ActiveVerbForm, cf. 2) will import a projection class and equate the anchor node of the verbal spine with that of the projection skeleton.",
        "As a result, the verb projects its index up to the root (modulo the renaming made necessary by the possibility of an adjunction) as illustrated on the right inside of Figure 3.",
        "Arguably, the xmg encoding we provided to enrich an FTAG with a unification based compositional semantics, is compact and principled.",
        "It is principled in that it provides a direct and transparent formulation of the main principles underlying the integration in a TAG of the unification based semantics sketched in Section 3.",
        "It is compact in that the number of modifications needed to enrich syntax with semantics is relatively small: 76 class definitions and 498 class calls are sufficient to associate the required semantic information (semantic schemas, semantic indices and index projections) with roughly 6000 trees.",
        "Crucially, this means that the time involved in integrating the semantics in the grammar is small (roughly a week linguist work) and further that the maintenance, extension and debugging of the semantic component is greatly facilitated.",
        "Both these points rely on the expressivity of xmg.",
        "More in particular, the encoding heavily relies on two specific features of xmg namely, generalised classes disjunctions and the possibility to use global names not only for tree nodes but also for feature values and semantic parameters.",
        "Generalised classes disjunctions are used to associate large sets of trees with semantic schema (section 4.2.1) and to label sets of tree fragments with the appropriately named index (section 4.2.3).",
        "Intuitively, generalised classes disjunction and conjunction permit factoring out the common operand of an enumeration (e.g., instead of enumerating (a A b) V (a A c) V (a A d) V ..., we can specify a A (b V c V d) ).",
        "In practice, this means that the number of statements necessary to specify the grammar can be greatly reduced.",
        "For instance, the association of several thousands of verb trees with a semantic schema is enforced by a total of 176 statements.",
        "In contrast, standard linguistic formalisms such as patr nor the lkb only allow disjunctions over atomic feature values.",
        "Global names in turn, were used to support a direct encoding of linking constraints (section 4.2.2).",
        "37 linking constraints definitions and 255 linking constraints calls are sufficient to ensure the appropriate mapping between syntactic and semantic arguments in verb trees as well as adjectival and nominal predicative trees.",
        "More generally, the possibility to introduce global names not only for tree nodes as in e.g., (Vijay-Shanker and Schabes, 1992) but also for feature values and semantic parameters allows for a simple and direct encoding of constraints applying to identifiers occuring \"far apart\" in a given tree (for instance, between the index of the subject node in a control verb tree and that of a pro index of its infinitival argument)."
      ]
    },
    {
      "heading": "5. Conclusion",
      "text": [
        "Whilst the development of standard unification-based grammars is well supported by the design of formalisms such as patr n, the xle and the lkb, formalisms for developing Tree-Based Grammars have received less attention, xmg aims to remedy this shortcoming by providing a formalism that supports talking about trees, tree sharing and tree labelling.",
        "Trees of arbitrary (finite) depth can be described using underspecified tree descriptions.",
        "Additionally, trees can be combined with further linguistic dimensions such as semantic representations and a syntax/semantic interface to form more complex linguistic units.",
        "Tree sharing is supported by the inheritance, the conjunction and the disjunction of tree descriptions together with a sophisticated identifier handling mechanism : identifiers are by default local but can be made global or semi-global, on demand.",
        "Furthermore, identifiers can be identified either ex-plicitely (using either the interface or explicit identification constraints) or implicitely (through inheritance or through the use of colours, a mechanism not discussed here).",
        "E3 ' E2",
        "E2 'El",
        "E2 'El",
        "•I",
        "•I",
        "•l",
        "i'E)",
        "i'E)",
        "i'E)",
        "Depth 3",
        "Depth 2",
        "Depth 1",
        "Finally, tree labelling can be expressed by associating tree nodes with one or two (for TAG) feature structures.",
        "Importantly, feature values can be assigned global names thereby allowing for the specification of constraints on features that are \"far apart from each other\" within a tree.",
        "In this paper, we have argued that these features of xmg are effective in supporting an encoding of an FTAG with a unification based compositional semantics which is principled, transparent and compact.",
        "These features also markedly distinguish xmg from existing formalisms used to encode tree based grammars such as the nonmonotonic encoding of TAG proposed in (Evans et al., 1995) (in contrast, xmg is fully monotonic) and the tree descriptions based approaches proposed in (Candito, 1996; Xia et al., 1998) where in particular, tree descriptions can only be conjoined (not disjoined) and where identification across tree fragments is restricted to nodes.",
        "More in general, we believe that expressive formalisms are necessary to allow not only for the quick development of symbolic tree based grammars but also for their comparison and for the factoring of several grammars be they different wrt to the language they handle (as for instance in the HPSG Delphin or in the LFG Pargram project) or in the semantics they integrate e.g., a glue semantics as proposed in (Frank and van Genabith, 2001), a lambda-based semantics as proposed in (Gardent, 2007) or as shown here, a unification based flat semantics.",
        "A. Frank and J. van Genabith.",
        "2001.",
        "Ll-based semantics for ltag - and what it teaches us about lfg and ltag.",
        "In Proc.",
        "of the LFG '01 Conference, Hong Kong.",
        "CSLI Online Publications.",
        "C. Gardent and L. Kallmeyer.",
        "2003.",
        "Semantic construction in ftag.",
        "In Proc.",
        "of EACL, Budapest, Hungary.",
        "C. Gardent and Y. Parmentier.",
        "2006.",
        "Coreference handling in xmg.",
        "In Proc.",
        "ofCOLING (Poster), Sydney, Australia.",
        "C. Gardent.",
        "2007.",
        "Tree adjoining grammar, semantic calculi and labelling invariant.",
        "In Proc.",
        "oflWCS.",
        "Rebecca Nesson and Stuart M. Shieber.",
        "2006.",
        "Simpler TAG semantics through synchronization.",
        "In Proceedings of the 11th Conference on Formal Grammar, Malaga, Spain, 29-30 July.",
        "K. Vijay-Shanker and A. K. Joshi.",
        "1988.",
        "Feature structures based tree adjoining grammar.",
        "In Proc.",
        "ofCOLING, pages 714-719, Budapest.",
        "K. Vijay-Shanker and Y. Schabes.",
        "1992.",
        "Structure sharing in lexicalised tree adjoining grammar.",
        "In Proc.",
        "ofCOLING 92, pages 205-211.",
        "F. Xia, M. Palmer, K. Vijay-Shanker, and J. Rosenzweig.",
        "1998.",
        "Consistent grammar development using partial-tree descriptions for lexicalized tree adjoining grammar.",
        "Proc.",
        "ofTAG+4."
      ]
    }
  ]
}
