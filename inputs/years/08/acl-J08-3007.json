{
  "info": {
    "authors": [
      "Noah A. Smith"
    ],
    "book": "Computational Linguistics",
    "id": "acl-J08-3007",
    "title": "Book Reviews: Computational Approaches to Morphology and Syntax by Brian Roark and Sproat, Richard",
    "url": "https://aclweb.org/anthology/J08-3007",
    "year": 2008
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Computational Approaches to Morphology and Syntax Brian Roark and Richard Sproat",
        "(Oregon Health and Science University and University of Illinois at Urbana-Champaign)",
        "Oxford: Oxford University Press (Oxford surveys in syntax and morphology, edited by Robert D. Van Valin Jr, volume 4), 2007, xx+316 pp; hardbound, ISBN 978-0-19-927477-2, $110.00, £60.00; paperbound, ISBN 978-0-19-927478-9, $45.00, £24.99",
        "Reviewed by",
        "Brian Roark and Richard Sproat have written a compact and very readable book surveying computational morphology and computational syntax.",
        "This text is not introductory; instead, it will help bring computational linguists who do not work on morphology or syntax up to date on these areas' latest developments.",
        "Certain chapters (in particular, Chapters 2 and 8) provide especially good starting points for advanced graduate courses or seminars.",
        "The text is divided into an Introduction and Preliminaries chapter, four chapters on computational approaches to morphology, and four chapters on computational approaches to syntax.",
        "The morphology chapters focus primarily on formal and theoretical issues, and are likely to be of interest to morphologists, computational and not.",
        "The syntax chapters are driven more by engineering goals, with more algorithm details.",
        "Because a good understanding of probabilistic modeling is assumed, these chapters will also be useful for machine learning researchers interested in language processing.",
        "Despite the authors' former affiliations, this book is not an AT&T analogue of Beesley and Karttunen's (2003) pedagogically motivated text on the Xerox finite-state tools.",
        "This text is not about the AT&T FSM libraries or the algorithms underlying them (cf. Roche and Schabes 1997)."
      ]
    },
    {
      "heading": "1.. Chapter 1: Introduction and Preliminaries",
      "text": [
        "The first chapter is a take-no-prisoners introduction to finite-state automata and transducers and their semiring-weighted generalizations.",
        "Algorithms (e.g., for FST composition) are discussed but not presented in detail.",
        "Epsilon removal, minimization, and determinization are mentioned but not defined.",
        "This material is probably too cursory to serve as a lone introduction for those wishing to fully understand weighted FSTs, but that lack of understanding will not be an impediment in the ensuing chapters because weights do not resurface until chapter 6, in the context of n-gram models, and even then the algebraic view given here is not mentioned.",
        "The chapter concludes with a defense of the place of finite-state models in linguistics, followed by a clear explanation of the trade-offs in computational linguistics (e.g., between computational cost, expressive power, and annotation cost).",
        "2.",
        "Part I (Chapters 2-5): Computational Approaches to Morphology",
        "These chapters are primarily an argument for the effectiveness of finite-state transducers in modeling natural language morphology.",
        "Chapter 2 provides a laundry list of morphological phenomena, arguing that finite-state composition captures each of them, even in cases where there is a more obvious solution (e.g., finite-state concatenation for concatenative phenomena).",
        "Examples of many kinds of phenomena are given from diverse languages: prosodic restrictions in Yowulmne, phonological effects of German affixes, and subsegmental morphology in Welsh, to name a few.",
        "Importantly, the compile-reduce and merge operations are argued to be syntactic sugar for effects achievable by finite-state composition, so that even root-and-pattern Arabic morphology is explained in the same algebraic framework.",
        "Reduplication effects, of course, challenge finite-state explanations, and so receive their own section.",
        "Extended (non-regular) computational models are presented alongside data from Gothic, Dakota, and Sye.",
        "The authors speculate that, in contrast with the commonly accepted Correspondence theory, Morphological Doubling theory (Inkelas and Zoll 1999), if correct, would imply that a non-regular \"copying\" process is not at work in reduplication.",
        "It is at this point that the reader may experience some discomfort; should the reduplication problem be addressed in syntax rather than morphology?",
        "Where exactly does the boundary lie?",
        "Readers hoping for a reassessment of this boundary, or even a new bridge over it, will not find it here.",
        "Chapter 3 begins with Stump's (2001) two-dimensional taxonomy of morphological theories, which appears rather divorced from the rich work on finite-state computational morphology in Chapter 2.",
        "The subtleties among the four types of theories (lexical vs. inferential and incremental vs. realizational, a more nuanced breakdown of the debate over \"item-and-arrangement\" vs. \"item-and-process\") may be difficult to understand for the reader not trained in morphological theory, but resolution comes quickly.",
        "We are presented with a series of examples showing \"proof-of-concept\" fragmentary implementations (in AT&T's lextools) of phenomena in Sanskrit, Swahili, and Breton to argue that lexical-incrementalist and inferential-realizational theories are computationally equivalent; both can be implemented using FSTs and can lead to the same models.",
        "Chapter 4 gives an algebraic analysis of Koskenniemi's (1983) \"KIMMO\" two-level morphological analysis system.",
        "Koskenniemi's hand-coded morphology rules are argued to be a historical accident; if only computers had been more powerful in the 1980s, compilation of those rules into FSTs might have been automated, and in fact Kaplan and Kay had already developed the algorithms.",
        "In the spirit of the previous chapter, Sproat and Roark also note that morphological accounts that use one, two, or more \"cascaded\" levels are all computationally equivalent rational relations under the finite-state approach, and that Optimality Theory can (under certain assumptions about constraints) be implemented with finite-state operations as well (Ellison 1994).",
        "Chapter 5, \"Machine learning of morphology,\" focuses on unsupervised morphology induction methods.",
        "There is about a page of discussion on statistical language modeling approaches for disambiguation in agglutinative languages; no mention is made of the more recent use of discriminative machine learning in morphological disambiguation (Kudo, Yamamoto, and Matsumoto 2004; Habash and Rambow 2005; Smith, Smith, and Tromble 2005).",
        "The chapter focuses on the approaches of Goldsmith (2001), Schone and Jurafsky (2001), and Yarowsky and Wicentowski (2001).",
        "Although each approach is interesting on its own, little effort is made to unify work in this area, and none to bring the reader back full circle to finite-state models or the problem of inducing from data regular grammars (Stolcke and Omohundro 1993) or their weights",
        "1 The authors rightly point out that Koskenniemi deserves much credit for building an implementation that aimed to have broad coverage, not merely a proof-of-concept.",
        "(Eisner 2002).",
        "Another missed opportunity here is the recent introduction of Bayesian learning for word segmentation (Goldwater, Griffiths, and Johnson 2006).",
        "Part I, in summary, aims to reduce many accounts of morphological phenomena to finite-state transducer composition, drawing on a wealth of illustrative examples.",
        "Twenty-two languages are listed in the language index at the end of the book, and, tellingly, all of them are discussed exclusively in Part I.",
        "These chapters are good diplomacy toward theoretical linguistics, showing how computational arguments can have theoretical implications."
      ]
    },
    {
      "heading": "3.. Part II (Chapters 6-9): Computational Approaches to Syntax",
      "text": [
        "In Part II, Roark and Sproat turn to models of syntax in computational linguistics.",
        "Because most research in this area has been on English, English parsing is what they present.",
        "Chapter 6 covers finite-state approaches to syntax, including n-gram models and smoothing, class-based language models, hidden Markov models (though without a formal definition), part-of-speech tagging, log-linear models, and shallow parsing/ chunking.",
        "The Forward, Viterbi, Viterbi n-best, Forward-Backward algorithms, and \"Forward-Backward Decoding\" (also known as posterior or minimum Bayes risk decoding) are covered with examples.",
        "This chapter is not as leisurely as the treatments of HMMs by Manning and Schütze (1999) or Charniak (1993), and it omits basic background on probabilistic modeling.",
        "For example, why must we ensure that an n-gram model's total probability sums exactly to one?",
        "The answer relies on an understanding of perplexity and its use in evaluation, now in decline (cf. \"stupid backoff\" in Brants et al.",
        "2007).",
        "The chapter does not reconnect with the algebraic view presented in Chapter 1; for example, the connection between HMMs and WFSAs is never expressed.",
        "Chapter 7 introduces context-free grammars and their parsers, broken down into \"deterministic\" and \"nondeterministic\" approaches.",
        "Probabilistic CFGs and treebanks are introduced informally alongside the latter, which may confuse some readers.",
        "Ambiguity is only presented as a natural phenomenon, not a problem of crude, overgenerating grammars.",
        "The probabilistic CKY and Earley algorithms are presented.",
        "The Inside-Outside algorithm is presented in the context of Goodman's (1996) maximum expected recall parsing (another instance of minimum Bayes risk).",
        "As in the case of the dynamic programming algorithms for HMMs in Chapter 6, the exposition is probably too brisk to be an introduction to the topic.",
        "Chapter 8 contains a thoughtful discussion of many best practices in statistical parsing: treebank \"decoration\" techniques such as parent annotation and lexicalization, and the probability models underlying the parsers of Collins (1997) and Charniak (1997).",
        "Dependency parsing, unsupervised grammar induction, and finite-state approximations to PCFGs are allotted short sections.",
        "Chapter 9 covers context-sensitive models of syntax.",
        "Unification-based parsing is presented at a high level, without formal details of unification or the differences between theories such as LFG and HPSG.",
        "The \"lexicalized\" models (TAG and CCG) are treated more thoroughly; pseudocode for a TAG dynamic programming parser is provided.",
        "There is brief treatment of Data-Oriented Parsing, reranking (a section that",
        "2 These terms, though in wide use, are misnomers.",
        "All of these parsers are deterministic, since none involve randomness or nondeterministic behavior resulting from multiple processors.",
        "Here \"(non)deterministic\" refers to the grammar, not the parser.",
        "would have been of more practical use in Chapter 8), and transduction grammars (i.e., grammars over more than one string, most frequently used in machine translation).",
        "The abundance of dynamic programming algorithms in Part II leads to the question of whether such algorithms can be more easily taught (and unified) using recursive equations (Manning and Schütze 1999), or a more declarative framework (Shieber, Schabes, and Pereira 1995).",
        "Readers who prefer procedural pseudocode will find it here, though the book does not address implementation tricks for storing and indexing parse charts, or agenda-ordering methods to make parsing efficient.",
        "These chapters are neither a gentle introduction to probabilistic modeling of syntax for linguists nor a handbook for the language engineer who wants to build an efficient, competitive parser.",
        "(There is also no advice on the relative merits of today's parsers available for download.)",
        "The audience that will find Part II most valuable will be researchers who understand the principles of probabilistic modeling but want a more up-to-date view of statistical parsing than offered by Manning and Schütze (1999), with more coverage of advanced topics than Jurafsky and Martin (2008).",
        "This group might include structured machine-learning researchers interested in the nuances of natural language parsing and computational linguists who do not work on syntax but want to keep up with the area."
      ]
    },
    {
      "heading": "4.. Conclusion",
      "text": [
        "The two major parts of this book stand as clear, up-to-date, and concisely written summaries of particular sub-fields in computational linguistics: finite-state morphology and English syntactic processing.",
        "The book does a fine job of elucidating the tradeoffs that make computational linguistics a tightrope act, and therefore serves as good diplomacy for researchers in related fields.",
        "At 112 and 146 pages, respectively, either of the parts is readable on a half-day plane or train trip.",
        "Today, the strongest bridge between morphology and syntax is the Chomsky hierarchy, which is mentioned frequently in this book (but never depicted).",
        "The contrast between Parts I and II implies blueprints for more bridges: data resources to support more powerful learning algorithms for morphology (as we have seen in syntax), a stronger influence of non-English data on computational syntactic modeling (as we have seen in morphology), and practical ways to accomplish the amalgamation of morphology and syntax.",
        "This reviewer believes Computational Approaches to Morphology and Syntax will reintroduce the two sub-communities to each other and help each to leverage the successes of the other."
      ]
    }
  ]
}
