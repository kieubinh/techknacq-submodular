{
  "info": {
    "authors": [
      "Mikio Nakano",
      "Kotaro Funakoshi",
      "Yuji Hasegawa",
      "Hiroshi Tsujino"
    ],
    "book": "Proceedings of the 9th SIGdial Workshop on Discourse and Dialogue",
    "id": "acl-W08-0114",
    "title": "A Framework for Building Conversational Agents Based on a Multi-Expert Model",
    "url": "https://aclweb.org/anthology/W08-0114",
    "year": 2008
  },
  "references": [
    "acl-W02-0201",
    "acl-W02-0216",
    "acl-W06-1302"
  ],
  "sections": [
    {
      "text": [
        "A Framework for Building Conversational Agents Based on a Multi-Expert",
        "Model",
        "Mikio Nakano, Kotaro Funakoshi, Yuji Hasegawa, Hiroshi Tsujino",
        "Honda Research Institute Japan Co., Ltd. 8-1 Honcho, Wako, Saitama 351-0188, Japan",
        "This paper presents a novel framework for building symbol-level control modules of animated agents and robots having a spoken dialogue interface.",
        "It features distributed modules called experts each of which is specialized to perform certain kinds of tasks.",
        "A common interface that all experts must support is specified, and any kind of expert can be incorporated if it has the interface.",
        "Several modules running in parallel coordinate the experts by accessing them through the interface, so that the whole system can achieve flexible control, such as interruption handling and parallel task execution."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "As much attention is recently paid to autonomous agents such as robots and animated agents, spoken dialogue is expected to be a natural interface between users and such agents.",
        "Our objective is to establish a framework for developing the intelligence module of such agents.",
        "In establishing such a framework, we focus on achieving the following features.",
        "(1) Multi-domain dialogue: Since agents are usually expected to perform multiple kinds of tasks, they need to work in multiple domains and switch domains according to user utterances.",
        "(2) Interruption handling: It is crucial for human-agent interaction to be able to handle users' interrupting utterances while speaking or performing tasks.",
        "(3) Parallel task execution: Agents, especially robots that perform physical actions, are expected to be able to execute multiple tasks in parallel when possible.",
        "For example, robots should be",
        "Proceedings of the 9th SIGdial Workshop o Columbus, June 2008.",
        "Â©2008 Associ",
        "able to engage in a dialogue while moving.",
        "(4) Extensibility: Since the agents can be used for a variety of tasks, various strategies for dialogue and task planning should be able to be incorporated.",
        "Although a number of models for conversational agents have been proposed, no model has all of the above properties.",
        "Several multi-domain dialogue system models have been proposed and they are extensible, but it is not clear how they handle interruptions to system utterances and actions (e.g., O'Neill et al.",
        "(2004), Lin et al.",
        "(1999), and Hartikainen et al.",
        "(2004)).",
        "There are several spoken dialogue agents and robots that can handle interruptions thanks to their asynchronous control (Asoh et al., 1999; Boye et al., 2000; Blaylock et al., 2002; Lemon et al., 2002), they do not focus on making it easy to add new dialogue domains with a variety of dialogue strategies.",
        "This paper presents a framework called RIME (Robot Intelligence based on Multiple Experts), which employs modules called experts.",
        "Each expert is specialized for achieving certain kinds of tasks by performing physical actions and engaging in dialogues.",
        "It corresponds to the symbol-level control module of a system that can engage in tasks in a single small domain, and it employs fixed control strategies.",
        "Only some of the experts take charge in understanding user utterances and decide actions.",
        "The basic idea behind RIME is to specify a common interface of experts for coordinating them and to achieve flexible control.",
        "In RIME, several mod-",
        "Discourse and Dialogue, pages 88-91, ion for Computational Linguistics",
        "ules run in parallel for coordinating experts.",
        "They are understander, which is responsible for speech understanding, action selector, which is responsible for selecting actions, and task planner, which is responsible for deciding which expert should work to achieve tasks.",
        "RIME achieves the above mentioned features.",
        "Multi-domain dialogues are possible by selecting an appropriate expert which is specialized to dialogues in a certain domain.",
        "Interruption handling is possible because each expert must have methods to detect interruptions and decide actions to handle interruptions, and coordinating modules can use these methods.",
        "Parallel task execution is possible because experts have methods for providing information to decide which experts can take charge at the same time, and the task planner utilizes that information.",
        "Extensibility is achieved because any kind of expert can be incorporated if it supports the common interface.",
        "This makes it possible for agent developers to build a variety of conversational agents."
      ]
    },
    {
      "heading": "2. Multi-Expert Model",
      "text": [
        "This section explains RIME in detail.",
        "Fig.",
        "1 depicts its module architecture.",
        "Each expert is a kind of object in the object-oriented programming framework.",
        "In this paper, we call tasks performed by one expert primitive tasks.Ex-perts should be prepared for each primitive task type.",
        "For example, if there is an expert for a primitive task type \"telling someone's extension number\", \"telling person A's extension number\" is a primitive task.",
        "By performing a series of primitive tasks, a complicated task can be performed.",
        "For example, a museum guide robot can perform \"explaining object B\" by executing \"moving to B\" and \"giving an explanation on B\".",
        "Among the experts, a small number of experts can perform tasks at one time.",
        "Such experts are called being in charge.",
        "Each expert holds information on the progress of the primitive task.",
        "It includes task-type-independent information, such as which action in this primitive task is being performed and whether the previous robot action finished, and task-type-dependent information such as the user intention understanding",
        "expert selection information",
        "charge /discharge",
        "task planner global context new task understander speech recognition result",
        "input processor expert 1 expert 2 expert 3",
        "information across tasks exec.",
        "report (to the expert that selected the action) action (from experts in charge)",
        "action selector execution report",
        "action executor microphone etc.",
        "agent & speech synthesizer",
        "results and dialogue history.",
        "The contents and the data structure for the task-type-dependent information for each expert can be designed by the system developer.",
        "Experts are classified into system-initiative task experts and user-initiative task experts.",
        "In this paper, the initiative of a task means who can initiate the task.",
        "For example, the task \"understanding a request for weather information\" is a user-initiative task, and the task \"providing weather information\" is a system-initiative task.",
        "In RIME, executing multiple tasks in parallel becomes possible by making multiple experts take charge.",
        "To check whether two experts can take charge simultaneously, we currently use two features verbal and physical.",
        "Two experts having the same feature cannot take charge simultaneously.",
        "The interface of experts consists of methods for accessing its internal state.",
        "Below are some of the task-type-dependent methods, which need to be implemented by system developers.",
        "The understand method updates the internal state based on the user speech recognition results, using domain-dependent sentence patterns for utterance understanding.",
        "This method returns a score which indicates the plausibility the user utterance should be dealt with by the expert.",
        "Domain selection techniques in multi-domain spoken dialogue systems (Komatani et al., 2006) can be applied to obtain the score.",
        "The select-action method outputs one action based on the content of the internal state.",
        "Here, an action is a multimodal command which includes a text to speak and/or a physical action command.",
        "The action can be an empty action, which means doing nothing.",
        "The detect-interruptionmethod returns a Boolean value that indicates whether the previous user utterance is an interruption to the action being performed when this expert is being in charge.",
        "The handle-interruption method returns the action to be performed after an interruption is detected.",
        "For example, an instruction to stop the utterance can be returned.",
        "In the definition of these methods, experts can access a common database called global context to store and utilize information across domains, such as information on humans, information on the environment, and past dialogue topics.",
        "To exploit experts, three processes, namely the un-derstander, the action selector, and the task planner, work in parallel.",
        "The understander receives output of an input processor, which typically performs speech recognition.",
        "Each time the understander receives a user speech recognition result from the input processor, it performs the following process.",
        "First it dispatches the speech recognition result to the experts in charge and the user-initiative experts with their understand methods, which then returns the scores mentioned above.",
        "The expert that returns the highest score is selected as the expert to take charge.",
        "If the selected expert is not in charge, it tells the task planner that the expert is selected as the user-initiative expert to take charge.",
        "If the selected expert is in charge, it calls the detect-interruption method of the expert.",
        "If true is returned, it tells the action selector that an interruption utterance is detected.",
        "The action selector repeats the following process for each expert being in charge in a short cycle.",
        "When an interruption for the expert is detected, it calls the expert's handle-interruption method, and it then sends the returned action to the action executor, which is assumed to execute multimodal actions by controlling agents, speech synthesizers, and other modules.",
        "Otherwise, unless it is not waiting for a user utterance, it calls the expert's select-action methods, and then sends the returned action to the action executor.",
        "The returned action can be an empty action.",
        "Note that it is assumed that the action executor can perform two or more actions in parallel when",
        "Utterances and physical actions Experts in charge and tasks",
        "Human: \"Where is the meeting room?\"",
        "Robot: \"Would you like to know",
        "where the meeting room is?\"",
        "Human: \"yes.\"",
        "Robot: \"Please come this way.\"",
        "(start moving) Human: \"Tell me A's extension",
        "number.\"",
        "Robot: \"A's extension number is ............1234\".................................",
        "Robot: (stop moving) Robot: \"The meeting room is over there.\"",
        "Expert E understand request to show the way",
        "Expert F move to show the",
        "Expert G show the way",
        "Expert C understand request for A's ext.",
        "number Expert D tell A's ext.",
        "number",
        "possible.",
        "The task planner is responsible for deciding which experts take charge and which experts do not.",
        "It sometimes makes an expert take charge by setting a primitive task, and sometimes it discharges an expert to cancel the execution of its primitive task.",
        "To make such decisions, it receives several pieces of information from other modules.",
        "First it receives from the understander information on which expert is selected to understand a new utterance.",
        "It also receives information on the finish of the primitive task from an expert being in charge.",
        "In addition, it receives new tasks from the experts that understand human requests.",
        "The task planner also consults the global context to access the information shared by the experts and the task planner.",
        "In this paper we do not discuss the details of task planning algorithms, but we have implemented a task planner with a simple hierarchical planning mechanism.",
        "There can be other processes whose output is written in the global context.",
        "For example, a robot and human localization process using image processing and other sensor information processing can be used.",
        "ID",
        "task type",
        "initiative",
        "feature",
        "A",
        "understanding weather information requests",
        "user",
        "verbal",
        "B",
        "providing weather information",
        "agent",
        "verbal",
        "C",
        "understanding extension number requests",
        "user",
        "verbal",
        "D",
        "providing extension numbers",
        "agent",
        "verbal",
        "E",
        "understanding requests for guiding to places",
        "user",
        "verbal",
        "F",
        "moving to show the way",
        "agent",
        "physical",
        "G",
        "explaining places",
        "agent",
        "verbal"
      ]
    },
    {
      "heading": "3. Implementation as a Toolkit",
      "text": [
        "The flexibility of designing experts increases the amount of effort for programming in building experts.",
        "We therefore developed RIME-TK (RIME-",
        "ToolKit), which provides libraries that facilitate building systems based on RIME.",
        "It is implemented in Java, and contains an abstract expert class hierarchy.",
        "The system developers can create new experts by extending those abstract classes.",
        "Those abstract classes have frequently used functions such as WFST-based language understanding, template-based language generation, and frame-based dialogue management.",
        "RIME-TK also contains the implementations of the understander and the action selector.",
        "In addition, it specifies the interfaces for the input processor, the action executor, and the task planner.",
        "Example implementations of these modules are also included in RIME-TK.",
        "Using RIME-TK, conversational agents can be built by creating experts, an input processor, an action executor, and a task planner.",
        "As an example, we have built a robotic system, which is supposed to work at a reception, and can perform several small tasks such as providing extension numbers of office members and guiding to several places near the reception such as a meeting room and a restroom.",
        "Some experts in the system are listed in Table 1.",
        "Fig.",
        "2 shows an example interaction between a human and the robotic system that includes parallel task execution and how experts are charged.",
        "The detailed explanation is omitted for the lack of the space.",
        "By developing several other robotic systems and spoken dialogue systems (e.g., Komatani et al.",
        "(2006) , Nakano et al.",
        "(2006), and Nishimura et al.",
        "(2007) ), we have confirmed that RIME and RIME-TK are viable."
      ]
    },
    {
      "heading": "4. Concluding Remarks",
      "text": [
        "This paper presented RIME, a framework for building conversational agents.",
        "It is different from previous frameworks in that it makes it possible to build agents that can handle interruptions and execute multiple tasks in parallel by employing experts which have a common interface.",
        "Although the current implementation is useful for building various kinds of systems, we believe that preparing more kinds of expert templates and improving expert selection for understanding utterances facilitate building a wider variety of systems.",
        "Acknowledgments We would like to thank all people who helped us to build RIME-TK and its applications."
      ]
    }
  ]
}
