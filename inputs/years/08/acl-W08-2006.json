{
  "info": {
    "authors": [
      "Delip Rao",
      "David Yarowsky",
      "Chris Callison-Burch"
    ],
    "book": "Coling 2008: Proceedings of the workshop on Speech Processing for Safety Critical Translation and Pervasive Applications",
    "id": "acl-W08-2006",
    "title": "Affinity Measures Based on the Graph Laplacian",
    "url": "https://aclweb.org/anthology/W08-2006",
    "year": 2008
  },
  "references": [
    "acl-C04-1046",
    "acl-D07-1061",
    "acl-J06-1003",
    "acl-N06-1058",
    "acl-P05-3019",
    "acl-P07-1054",
    "acl-P93-1024"
  ],
  "sections": [
    {
      "text": [
        "Affinity Measures based on the Graph Laplacian",
        "Delip Rao David Yarowsky Chris Callison-Burch",
        "of Computer Science Dept.",
        "of Computer Science Dept.",
        "of Computer Science",
        "Johns Hopkins University Johns Hopkins University Johns Hopkins University",
        "Several language processing tasks can be inherently represented by a weighted graph where the weights are interpreted as a measure of relatedness between two vertices.",
        "Measuring similarity between ar-bitary pairs of vertices is essential in solving several language processing problems on these datasets.",
        "Random walk based measures perform better than other path based measures like shortest-path.",
        "We evaluate several random walk measures and propose a new measure based on commute time.",
        "We use the psuedo inverse of the Laplacian to derive estimates for commute times in graphs.",
        "Further, we show that this pseudo inverse based measure could be improved by discarding the least significant eigenvectors, corresponding to the noise in the graph construction process, using singular value decomposition."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Natural language data lend themselves to a graph based representation.",
        "Words could be linked by explicit relations as in WordNet (Fellbaum, 1989) or documents could be linked to one another via hyperlinks.",
        "Even in the absence of such a straightforward representation it is possible to derive meaningful graphs such as the nearest neighbor graphs as done in certain manifold learning methods (Roweis and Saul, 2000; Belkin and Niyogi,",
        "© 2008.",
        "Some rights reserved.",
        "2001).",
        "All of these graphs share the following properties:",
        "• They are edge-weighted.",
        "• The edge weight encodes some notion of relatedness between the vertices.",
        "• The relation represented by edges is at least weakly transitive.",
        "Examples of such relations include, \"is similar to\", \"is more general than\", and so on.",
        "It is important that the relations selected are transitive for the random walk to make sense.",
        "Such graphs present several possibilities in solving language problems on the data.",
        "One such task is, given two vertices in the graph we would like to know how related the two vertices are.",
        "There is an abundance of literature on this topic, some of which will be reviewed here.",
        "Finding similarity between vertices in a graph could be an end in itself, as in the lexical similarity task, or could be a stage before solving other problems like clustering and classification."
      ]
    },
    {
      "heading": "2. Contributions of this paper",
      "text": [
        "The major contributions of this paper are",
        "• A comprehensive evaluation of various random walk based measures",
        "• Propose a new similarity measure based on commute time.",
        "• An improvement to the above measure by eliminating noisy features via singular value decomposition."
      ]
    },
    {
      "heading": "3. Problem setting",
      "text": [
        "Consider an undirected graph G(V,E, W) with vertices V, edges E, and W = [wij] be the symmetric adjacency weight matrix with as the weight of the edge connecting vertices i and j.",
        "The weight, = 0 for vertices i and j that are not neighbors and when Wij > 0 it is interpreted as an indication of relatedness between i and j.",
        "In our case, we consider uniformly weighted graphs, i.e, = 1 for neighbors but this need not be the case.",
        "Let n = \\V\\ be the order of the graph.",
        "We define a relation Sim : V x V – ► M+ such that S\\m(i, j) is the relatedness between vertices i and j.",
        "There are several ways to define Sim; the ones explored in this paper are:",
        "• simoC*, j) is the reciprocal of the shortest path length between vertices i and j.",
        "Note that this is not a random walk based measure but a useful baseline for comparison purposes.",
        "• sirr)B(i, j) is the probability of a random walk from vertex i to vertex j using all paths of length less than m.",
        "• simp(i, j) is the probability of a random walk from vertex i to vertex j defined via a pager-ank model.",
        "• sirric(i, j) is a function of the commute time between vertex i and vertex j."
      ]
    },
    {
      "heading": "4. Data and Evaluation",
      "text": [
        "We evaluate each of the similarity measure we consider by using a linguistically motivated task of finding lexical similarity.",
        "Deriving lexical relatedness between terms has been a topic of interest with applications in word sense disambiguation (Patwardhan et al., 2005), paraphrasing (Kauchak and Barzilay, 2006), question answering (Prager et al., 2001), and machine translation (Blatz et al., 2004) to name a few.",
        "Lexical relatedness between terms could be derived either from a thesaurus like WordNet or from raw monolingual corpora via distributional similarity (Pereira et al., 1993).",
        "WordNet is an interesting graph-structured thesaurus where the vertices are the words and the edges represent relations between the words.",
        "For the purpose of this work, we only consider relations like hypernymy, hyponymy, and synonymy.",
        "The importance of this problem has generated copious literature in the past - see (Pedersen et al., 2004) or (Budanitsky and Hirst, 2006) for a detailed review of various lexical relatedness measures on WordNet.",
        "Our focus in this paper is not to derive the best similarity measure for WordNet but to use WordNet and the lexical relatedness task as a method to evaluate the various random walk based similarity measures.",
        "Following the tradition in previous literature we evaluate on the Miller and Charles (1991) dataset.",
        "This data consists of 30 word-pairs along with human judgements which is a real value between 1 and 4.",
        "For every measure we consider, we derive similarity scores and compare with the human judgements using the Spearman rank correlation coefficient."
      ]
    },
    {
      "heading": "5. Graph construction",
      "text": [
        "For the purpose of evaluation of the random walk measures, we construct a graph for every pair of words for which similarity has to be computed.",
        "This graph is derived from WordNet as follows:",
        "• For each word w in the pair (wi,u^):",
        "- Add an edge between w and all of its parts of speech.",
        "For example, if the word is coast, add edges between coast and coast#noun and coast#verb.",
        "- For each word#pos combination, add edges to all of its senses (For example, COast#noun#1 through coast#noun#4.",
        "- For each word sense, add edges to all of its hyponyms",
        "- For each word sense, add edges to all of its hypernyms recursively.",
        "In this paper we consider uniform weights on all edges as our main aim is to illustrate the different random walk measures rather than fine tune the graph construction process."
      ]
    },
    {
      "heading": "6. Shortest path based measure",
      "text": [
        "The most obvious measure of distance in a graph is the shortest path between the vertices which is defined as the minimum number of intervening edges between two vertices.",
        "This is also known as the geodesic distance.",
        "To convert this distance measure to a similarity measure, we take the reciprocal of the shortest-path length.",
        "We refer to this as the geodesic similarity.",
        "This is not a random walk measure but will serve as an important baseline for our work.",
        "As can be observed from Table 1, the correlation is rather poor for the shortest path measure."
      ]
    },
    {
      "heading": "7. Why are shortest path distances bad?",
      "text": [
        "While shortest-path distances are useful in many applications, it fails to capture the following observation.",
        "Consider the subgraph of WordNet shown in Figure 1.",
        "The term moon is connected to the terms religious_leader and satellite.",
        "Observe that both religious-leader and satellite are at the same shortest path distance from moon.",
        "However, the connectivity structure of the graph would suggest satellite to be \"more\" similar than religious_leader as there are multiple senses, and hence multiple paths, connecting satellite and moon.",
        "Thus it is desirable to have a measure that captures not only path lengths but also the connectivity structure of the graph.",
        "This notion is elegantly captured using random walks on graphs.",
        "A random walk is a stochastic process that consists of a sequence of discrete steps taken at random defined by a distribution.",
        "Random walks have interesting connections to Brownian motion, heat diffusion and have been used in semi-supervised learning - for example, see (Zhu et al., 2003).",
        "Certain properties of random walks are defined for ergodic processes only.",
        "In our work, we assume these",
        "lrThe religious_leader sense of moon is due to Sun Myung Moon, a US religious leader.",
        "hold true as the graphs we deal with are connected, undirected, and non-bipartite.",
        "As our first random walk measure, we consider the bounded length walk - i.e., all random walks of length less than or equal to a bound m. We derive a probability transition matrix P from the weight matrix W as follows:",
        "where, D is a diagonal matrix with da = YTj = l wij- Observe that:",
        "Hence can be interpreted as the probability of transition from vertex i to vertex j in one step.",
        "It is easy to observe that Pfc gives the transition probability from vertex i to vertex j in k steps.",
        "This leads to the following similarity measure:",
        "Observe that S[i, j] derives the total probability of transition from vertex % to vertex j in at most m steps.",
        "Given S, we can derive several measures of similarity:",
        "2.",
        "Bounded Walk Cosine: dot product of rowvectors S j and Sj.",
        "When we evaluate these measures on the Miller-Charles data the results shown in Table 2. are observed.",
        "For this experiment, we consider all walks that are at most 20 steps long, i.e., m = 20.",
        "Observe that these results are significantly better than the Geodesic similarity based on shortest-paths.",
        "ducible if there exists a path between any two states and it is aperiodic if the GCD of all cycle lengths is one.",
        "Method",
        "Spearman correlation",
        "Geodesic",
        "0.275",
        "Table 2: Similarity using bounded random walks (m = 20).",
        "In the previous experiment, we arbitrarily fixed m = 20.",
        "However, as observed in Figure 2. , beyond a certain value the choice of m does not affect the result as the random walk converges to its stationary distribution.",
        "The choice of m depends on",
        "Figure 2: Effect of m in Bounded walk the amount of computation available.",
        "A reasonably large value of m (m > 10) should be sufficient for most purposes and one could use lower values of m to derive an approximation for this measure.",
        "One could derive an upper bound on the value of m using the mixing time of the underlying Markov chain (Aldous and Fill, 2001).",
        "Pagerank (Page et al., 1998) is the celebrated citation ranking algorithm that has been applied to several natural language problems from summarization (Erkan and Radev, 2004) to opinion mining (Esuli and Sebastiani, 2007) to our task of lexical relatedness (Hughes and Ramage, 2007).",
        "Pagerank is yet another random walk model with a difference that it allows the random walk to \"jump\" to its initial state with a nonzero probability (a).",
        "Given the probability transition matrix P as defined above, a stationary distribution vector for any vertex (say i) could be derived as follows:",
        "1.",
        "Let ej be a vector of all zeros with ti{i) = 1",
        "4.",
        "Assign Vt+\\ as the stationary distribution for vertex i.",
        "Armed with the stationary distribution vectors for vertices i and j, we define pagerank similarity either as the cosine of the stationary distribution vectors or the reciprocal Jensen-Shannon (JS) divergence between them.",
        "Table 3. shows results on the Miller-Charles data.",
        "We use a = 0.1, the best value on this data.",
        "Observe that these results are",
        "Table 3: Similarity via pagerank (a = 0.1).",
        "better than the best bounded walk result.",
        "We further note that our results are different from that of (Hughes and Ramage, 2007) as they use extensive feature engineering and weight tuning during the graph generation process that we have not been able to reproduce.",
        "Hence for simplicity we stuck to a simpler graph generation process.",
        "Nevertheless, the result in Table 3. is still useful as we are interested in the performance of the various spectral similarity measures rather than achieving the best performance on the lexical relatedness task.",
        "The graphs we use in all methods are identical making comparisons across methods possible.",
        "Given a graph with the transition probability matrix P as defined above, the hitting time between vertices i and j, denoted as h(i,j), is defined as the expected number of steps taken by a random walker to first encounter vertex j starting from vertex i.",
        "This can be recursively defined as follows:",
        "Method",
        "Spearman correlation",
        "Bounded Walk Bounded Walk Cosine",
        "0.346 0.365",
        "Method",
        "Spearman correlation",
        "Pagerank JS-Divergence Pagerank Cosine",
        "0.379 0.393",
        "The lower the hitting times of two vertices, the more similar they are.",
        "It can be easily verified that hitting time is not a symmetric relation hence graph theory literature suggests another symmetric measure - the commute time.",
        "The commute time, c(i, j), is the expected number of steps taken to leave vertex i, reach vertex j, and return back to i.",
        "Thus,",
        "Observe that, the commute time is a metric in that it is positive definite, symmetric, and satisifies triangle inequality.",
        "Hence, commute time could be used as a distance measure as well.",
        "We derive a similarity measure from this distance measure using the following lemma.",
        "where I = \\E\\, the number of edges.",
        "Proof.",
        "This can be easily observed by defining a Markov chain on the edges with probability transition matrix Q with 21 states, such that Qeie2 = 1/degree{e\\ n e-i).",
        "Since this matrix is doubly stochastic, the stationary distribution on this chain will be uniform with a probability 1/21.",
        "Now c(i, j) = h(i, j)+h(j, i),is the expected time for a walk to start at i, visit j, and return back to i.",
        "When the stationary probability at each edge is 1/2/, this expected time evaluates to 21.",
        "Hence the commute time can be at most 21.",
        "□",
        "This lemma allows us to define a similarity measure as follows:",
        "Observe that the measure defined in Equation 3 is a metric and further its range is defined in [0,1].",
        "We now only need a way to compute the commute times to use Equation 3.",
        "One could compute the hitting times and hence the commute times from the Equations 1 and 2 using dynamic programming, akin to shortest paths in graphs.",
        "In this paper, we instead choose to derive commute times via the graph Laplacian.",
        "This also allows us to handle \"noise\" in the graph construction process which cannot be taken care by naive dynamic programming.",
        "Chandra et.",
        "al.",
        "(1989) show that the commute time between two vertices is equal to the resistance distance between them.",
        "Resistance distance, as proposed by Klein and Randic (1993), is the effective resistance between two vertices in the electrical network represented by the graph, where the edges have resistance 1/wij.",
        "Xiao and Gut-man (2003), show the relation between resistance distances in graphs to the Laplacian spectrum, thus enabling a way to derive commute times from the graph Laplacian in closed form.",
        "We now introduce graph Laplacians, which are interesting in their own right besides being related to commute time.",
        "The Laplacian of a graph could be viewed as a discrete version of the Laplace -Beltrami operator on Riemannian manifolds.",
        "It is defined as",
        "The graph Laplacian has interesting properties and a wide range of applications, in semi-supervised learning (Zhu et al., 2003), non-linear dimensionality reduction (Roweis and Saul, 2000; Belkin and Niyogi, 2001), and so on.",
        "See (Chung, 1997) for a thorough introduction on Laplacians and their properties.",
        "We depend on the fact that C is:",
        "The pseudo inverse of the Laplacian allows us to compute the following similarity measures.",
        "1.",
        "Since Lt is a kernel, l| - can be interpreted a similarity value of vertices i and j.",
        "2.",
        "Commute time: This is due to (Aldous and Fill, 2001).",
        "The commute time, c(i,j) oc (Lit.",
        "+ Lit.",
        " – 2Lj.).",
        "This allows us to derive similarities using Equation 3.",
        "Evaluating the above measures with the Miller-Charles data yields results shown in Table 4.",
        "Again, these results are better than the other random walk methods compared in the paper.",
        "The graph construction process outlined in Section 5 is not necessarily the best one.",
        "In fact, any method that constructs graphs from existing data incorporates \"noise\" or extraneous features.",
        "These could be spurious edges between vertices, missing edges, or even improper edge weights.",
        "It is however impossible to know any of this a priori and some noise is inevitable.",
        "The derivation of commute times via the pseudo inverse of a noisy Laplacian matrix makes it even worse because the pseudo inverse amplifies the noise in the original matrix.",
        "This is because the largest singular value of the pseudo inverse of a matrix is equal to the inverse of the smallest singular value of the original matrix.",
        "A standard technique in signal processing and information retrieval to eliminate noise or handle missing values is to use singular value decomposition (Deerwester et al., 1990).",
        "We apply SVD to handle noise in the graph construction process.",
        "For a given matrix A, SVD decomposes A into three matrices U, S, and V such that A = USVT, where S is a diagonal matrix of eigenvalues of A, and U and V are orthonormal matrices containing the left and the right eigenvectors respectively.",
        "The top-k eigenvectors and eigenvalues are computed using the iterative method by Lanczos-Arnoldi (using LAPACK) and the product of these matrices represents a \"smoothed\" version of the original Laplacian.",
        "The pseudo inverse is then computed on this smooth Laplacian.",
        "Table 5., shows the improvements obtained by discarding bottom 20% of the eigenvalues.",
        "Table 4: Similarity via inverse Laplacian.",
        "Table 5: Denoising graph Laplacian via SVD",
        "Figure 3. shows the dependence on the number of eigenvalues selected.",
        "As can be observed in both curves there is a reduction in performance by adding the last few eigenvectors and hence may be safely discarded.",
        "This observation is true in other text processing tasks like document clustering or classification using Latent Semantic Indexing."
      ]
    },
    {
      "heading": "1.. symmetric (since D and W are for undirected graphs)",
      "text": [
        "2. positive-semidefinite : since it is symmetric, all of the eigenvalues are real and by the Greshgorin circle theorem, the eigenvalues must also be non-negative and hence C is positive-semidefinite.",
        "Throughout this paper we use normalized Laplacians as defined below:",
        "The normalized Laplacians preserve all properties of the Laplacian by construction.",
        "As noted in Xiao and Gutman (2003), the resistance distances can be derived from the generalized Moore-Penrose pseudo-inverse of the graph Laplacian(L^) - also called the inverse Laplacian.",
        "Like Laplacians, their pseudo inverse counterparts are also symmetric, and positive semi-definite.",
        "Lemma 2. is symmetric Proof.",
        "The Moore-Penrose pseudo-inverse is defined as iJ = (LTL)_1LT.",
        "From this definition, it is clear that (L^)T = (LT)t. By the symmetry property of graph Laplacians, LT = L. Hence, Lemma 3. l} is positive semi-definite Proof.",
        "We make use of the following properties from (Chung, 1997):",
        "• The Laplacian, L, is positive semi-definite (also shown above).",
        "• If the Eigen-decomposition of L is QAQT, then the Eigen-decomposition of the pseudo-inverse Lt is QA\"QT.",
        "If any of the eigenvalues of L is zero then the corresponding eigenvalue for Lt is also zero.",
        "Since L is positive semi-definite, and the eigenvalues of Lt have the same sign as L, the pseudo inverse Lt has to be positive semi-definite.",
        "□ Lemma 4.",
        "The inverse Laplacian is a gram matrix Proof.",
        "To prove this, we use the fact that the Laplacian Matrix is symmetric and positive semi-definite.",
        "Hence by Cholesky decomposition we can write L = UUT.",
        "Therefore V = (UT)tUt = (Ut)T(Ut).",
        "Hence Lt is a matrix of dot-products or a gram-matrix.",
        "□",
        "Thus, from Lemmas 2, 3 and 4, the inverse Laplacian Lt is a valid Kernel."
      ]
    },
    {
      "heading": "8. Related Work",
      "text": [
        "Apart from the related work cited throughout this paper, we would also like to note the paper by Yen et al. (2007) on using sigmoid commute time kernel on a graph for document clustering but our work differs in that our goal was to study various random walk measures rather than a specific task and we provide a new similarity measure (ref.",
        "Eqn 3) based on an upper bound on the commute time (Lemma 1).",
        "Our work also suggests a way to handle noise in the graph construction process.",
        "Method",
        "Original",
        "After SVD",
        "Commute Time {sirric)",
        "0.469 0.520",
        "0.472 0.542",
        "Method",
        "Spearman correlation",
        "Commute Time (sirric)",
        "0.469 0.520"
      ]
    },
    {
      "heading": "9. Conclusions and Future Work",
      "text": [
        "This paper presented an evaluation of random walk based similarity measures on weighted undirected graphs.",
        "We provided an intuitive explanation of why random walk based measures perform better than shortest-path or geodesic measures, and backed it with empirical evidence.",
        "The random walk measures we consider include bounded length walks, pagerank based measures, and a new measure based on the commute times in graphs.",
        "We derived the commute times via pseudo inverse of the graph Laplacian.",
        "This enables a new method of graph similarity using SVD that is robust to the noise in the graph construction process.",
        "Further, the inverse Laplacian is also interesting in that it is a kernel by itself and could be used for other tasks like word clustering, for example."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "The authors would like to thank David Smith and Petros Drineas for useful discussions and to Fan Chung for the wonderful book on Spectral Graph theory."
      ]
    }
  ]
}
