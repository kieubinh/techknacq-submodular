{
  "info": {
    "authors": [
      "David Vickrey",
      "Daphne Koller"
    ],
    "book": "CoNLL 2008: Proceedings of the Twelfth Conference on Computational Natural Language Learning",
    "id": "acl-W08-2140",
    "title": "Applying Sentence Simplification to the CoNLL-2008 Shared Task",
    "url": "https://aclweb.org/anthology/W08-2140",
    "year": 2008
  },
  "references": [
    "acl-J02-3001"
  ],
  "sections": [
    {
      "text": [
        "David Vickrey and Daphne Roller",
        "Stanford University Stanford, CA 94305-9010",
        "Our submission to the CoNLL-2008 shared task (Surdeanu et al., 2008) focused on applying a novel method for semantic role labeling to the shared task.",
        "Our system first simplifies each sentence to be labeled using a set of hand-constructed rules; the weights of the system are trained on semantic role labeling data to generate simplifications which are as useful as possible for semantic role labeling.",
        "Our system is only a semantic role labeling system, and thus did not receive a score for Syntactic Dependencies (or, by extension, a score for the complete problem).",
        "Unlike most systems in the shared task, our system took constituency parses as input.",
        "On the subtask of semantic dependencies, our system obtained an Fl score of 76.17, the highest in the open task.",
        "In this paper we give a high-level overview of the sentence simplification system, and discuss and analyze the modifications to this system required for the CoNLL-2008 shared task."
      ]
    },
    {
      "heading": "1. Sentence Simplification",
      "text": [
        "The main technical interest of our method is a sentence simplification system.",
        "This system is described in depth in (Vickrey and Koller, 2008); for lack of space, we omit many details, including a discussion of related work, from this paper.",
        "Current semantic role labeling systems rely primarily on syntactic features in order to identify and classify roles.",
        "Features derived from a syntactic parse of the sentence have proven particularly useful (Gildea and Jurafsky, 2002).",
        "For example, the syntactic subject of \"eat\" is nearly always the",
        "Â© 2008.",
        "Some rights reserved.",
        "NP VP salad: NP1+VP+T",
        "NP PP a salad with NP croutons",
        "I was not given a chance to eat.",
        "I remove not",
        "I was given a chance to eat.",
        "I depassivize",
        "Someone gave me a chance to eat.",
        "I give -> have",
        "I had a chance to eat.",
        "I chance to X",
        "I ate.",
        "Figure 2: Example simplification",
        "ARG0.",
        "An example sentence with extracted path features is shown in Figure 1.",
        "A major problem with this approach is that the path from a phrase to the verb can be quite complicated.",
        "In the sentence \"He expected to receive a prize for winning,\" the path from \"win\" to its ARG0, \"he\", involves the verbs \"expect\" and \"receive\" and the preposition \"for.\"",
        "The corresponding path through the parse tree likely occurs a small number of times (or not at all) in the training corpus.",
        "If the test set contained exactly the same sentence but with \"expected\" replaced by \"did not expect\" we would extract a different parse path feature; therefore, as far as the classifier is concerned, the syntax of the two sentences is totally unrelated.",
        "The idea of our method is to learn a mapping from full, complicated sentences to simplified sen-",
        "Original",
        "Transformed S-l",
        "tences.",
        "Figure 2 shows an example of a series of simplifications applied to the sentence \"I was not given a chance to eat.\"",
        "Our method combines handwritten syntactic simplification rules with machine learning, which determines which rules to prefer.",
        "We then use the output of the simplification system as input to an SRL system that is trained to label simplified sentences.",
        "There are several reasons to simplify sentences before doing semantic role labeling.",
        "First, labeling simplified sentences is much easier than labeling raw sentences.",
        "Second, by mapping all sentences to a common, canonical form, we can generalize more effectively across sentences with differing syntax.",
        "Third, our model is effective at sharing information across verbs, since most of our simplification rules apply equally well regardless of the target verb.",
        "These latter two benefits are particularly important for verbs with few labeled training instances; using training examples efficiently can lead to considerable gains in performance.",
        "Note that unlike most participants in the CoNLL-2008 Shared Task (Surdeanu et al., 2008), our model took as input constituency parses as generated by the Charniak parser (specifically, we used the parses provided with the CoNLL-2005 shared task distribution).",
        "This was the only labeled data used that was not available in the closed task.",
        "At the center of our sentence simplification system is a handwritten set of transformation rules.",
        "A transformation rule takes as input a parse tree and produces as output a different, changed parse tree.",
        "Since our goal is to produce a simplified version of the sentence, the rules are designed to bring all sentences toward the same common format.",
        "A rule (see left side of Figure 3) consists of two parts.",
        "The first is a \"tree regular expression\", a tree fragment with optional constraints at each node.",
        "The rule assigns numbers to each node which are referred to in the second part of the rule.",
        "Formally, a rule node X matches a parse-tree node A if: (1)",
        "All constraints of node X (e.g., constituent category, head word, etc.)",
        "are satisfied by node A.",
        "(2) For each child node Y of X, there is a child B of A that matches Y; two children of X cannot be matched to the same child B.",
        "There are no other requirements.",
        "A can have other children besides those matched, and leaves of the rule pattern can match to internal nodes of the parse (corresponding to entire phrases in the original sentence).",
        "For example, the same rule is used to simplify both \"I had a chance to eat,\" and \"I had a chance to eat a sandwich,\" (into \"I ate,\" and \"I ate a sandwich,\").",
        "The second part of the rule is a series of simple steps that are applied to the matched nodes.",
        "For example, one type of simple step applied to the pair of nodes (X,Y) removes X from its current parent and adds it as the final child of Y.",
        "Figure 3 shows the depassivizing rule and the result of applying it to the sentence \"I was given a chance.\"",
        "The transformation steps are applied sequentially from top to bottom.",
        "Any nodes not matched are unaffected by the transformation; they remain where they are relative to their parents.",
        "For example, \"chance\" is not matched by the rule, and thus remains as a child of the VP headed by \"give.\"",
        "Altogether, we currently have 154 (mostly unlex-icalized) rules.",
        "Table 1 shows a summary of our rule-set, grouped by type.",
        "Note that each row lists",
        "Replace 3 with 4",
        "Rule Category",
        "#",
        "Original",
        "Simplified",
        "Sentence normalization",
        "24",
        "Thursday, I slept.",
        "I slept Thursday.",
        "Sentence extraction",
        "4",
        "I said he slept.",
        "He slept.",
        "Passive",
        "5",
        "I was hit by a car.",
        "A car hit me.",
        "Mise Collapsing/Rewriting",
        "20",
        "John, a lawyer, ...",
        "John is a lawyer.",
        "Conjunctions",
        "8",
        "I ate and slept.",
        "I ate.",
        "Verb Collapsing/Rewriting",
        "14",
        "I must eat.",
        "I eat.",
        "Verb Raising/Control (basic)",
        "17",
        "I want to eat.",
        "I eat.",
        "Verb RC (AD JP/ AD VP)",
        "6",
        "I am likely to eat.",
        "I eat.",
        "Verb RC (Noun)",
        "7",
        "I have a chance to eat.",
        "I eat.",
        "Modified nouns",
        "8",
        "The food I ate ...",
        "Float(The food) I ate.",
        "Floating nodes",
        "5",
        "Float(The food) I ate.",
        "I ate the food.",
        "Inverted sentences",
        "7",
        "Nor will I eat.",
        "I will eat.",
        "Questions",
        "7",
        "Will I eat?",
        "I will eat.",
        "Possessive",
        "7",
        "John's chance to eat...",
        "John has a chance to eat.",
        "Verb acting as PP/NP",
        "7",
        "Includina tax.",
        "the total...",
        "The total includes tax.",
        "\"Make\" rewrites",
        "8",
        "Salt makes food tasty.",
        "Food is tasty.",
        "only one possible sentence and simplification rule from that category; many of the categories handle a variety of syntax patterns.",
        "Our rule set was developed by analyzing performance and coverage on the PropBank WSJ training set; neither the development set nor (of course) the test set were used during rule creation.",
        "Please refer to (Vickrey and Koller, 2008) for more details about the rule set.",
        "In the context of the CoNLL-2008 Shared Task, the rule set might be viewed as consisting of outside information.",
        "Since we only submitted a system to the open task, this was not an issue.",
        "We now describe how to produce all possible simplified sentences for a given input sentence.",
        "We maintain a set of derived parses S which is initialized to contain only the original, untransformed parse.",
        "One iteration of the algorithm consists of applying every possible matching transformation rule to every parse in S, and adding all resulting parses to S. With carefully designed rules, repeated iterations are guaranteed to converge; that is, we eventually arrive at a set S such that if we apply an iteration of rule application to S, no new parses are added.",
        "Note that we simplify the whole sentence without respect to a particular verb.",
        "We then find all parses in S that have \"eat\" as the main verb.",
        "We call such a parse a valid simple sentence; this is exactly the canonicalized version of the sentence which our simplification rules are designed to produce.",
        "For a particular sentence/target verb pair s,v, the output from the previous section is a set Ssv = {tfv}i of valid simple sentences.",
        "From the training set, we now extract a set of role patterns Gv = {gVj}j for each verb v. For example, a common role pattern for \"give\" is that of \"I gave him a sandwich\".",
        "We represent this pattern as gfve = {ARGO = Subject NP, ARG1 = Postverb NP2, ARG2 = Postverb NP1}.",
        "For each simple sentence tfv e Ssv, we apply all extracted role patterns to tfv, obtaining a set of possible role labelings.",
        "We call a simple sentence/role labeling pair a simple labeling and denote the set of candidate simple labelings",
        "Given a (possibly large) set of candidate simple labelings Csv, we need to select a correct one.",
        "We",
        "Rule = Depassivize",
        "Role = ARGO, Head Word = John",
        "Role = ARG1, Head Word = sandwich",
        "Role = ARGO, Category = NP",
        "Role = ARGO, Position = Subject NP",
        "Role = ARG1, Position = Postverb NP2",
        "Role = ARG2, Position = Postverb NP1",
        "Figure 4: Features for \"John gave me a sandwich.\"",
        "assign a score to each candidate based on its features: which rules were used to obtain the simple sentence, which role pattern was used, and features about the assignment of constituents to roles.",
        "The set of extracted features for the sentence \"I was given a sandwich by John\" with simplification \"John gave me a sandwich\" is shown in Figure 4.",
        "We now define a log-linear model which assigns a probability to each candidate simple labeling based on its score.",
        "Specifically, the probability of a simple labeling with respect to a weight",
        "Unfortunately, we do not have labeled examples of correct simplifications.",
        "To get around this, we treat the correct simplification as a hidden variable.",
        "Thus, we say that the probability of a particular semantic role labeling is J2CS",
        "P(cf).",
        "This leads to our final objective,",
        "We train our model by optimizing the objective using standard methods, specifically BFGS.",
        "Due to the summation over the hidden variable representing the choice of simplification (not observed in the training data), our objective is not convex.",
        "Thus, we are not guaranteed to find a global optimum; in practice we have gotten good results using the initialization of setting all weights to 0."
      ]
    },
    {
      "heading": "2. Baseline Model",
      "text": [
        "In addition to our simplification system, we also built a high-performing logistic regression model for semantic role labeling, which we refer to as Baseline.",
        "This model uses a slightly modified version of the features used in (Pradhan et al., 2005).",
        "This model was also trained on the PropBank training set, using Charniak constituency parses.",
        "Both our simplification model and Baseline produce labeled constituencies.",
        "Since we were required to produce semantic dependency relations, we simply labeled the head word of each constituent with the role chosen by the model."
      ]
    },
    {
      "heading": "3. Labeling Nouns",
      "text": [
        "The 2008 shared task requires systems to label the arguments of both nouns and verbs.",
        "However, our sentence simplification system was built to handle only verbs.",
        "While in principle the model can naturally be extended to label nouns by the addition of further syntactic simplification rules, we were not able to complete this extension in time for the contest deadline.",
        "Instead, we trained our Baseline model to label the arguments of nouns as well as verbs.",
        "The features of this model are the same as those used to label verbs, and were not extended to handle special features of nouns."
      ]
    },
    {
      "heading": "4. Identifying Predicates",
      "text": [
        "Another important subtask was to identify the predicates to be labeled.",
        "In the labeled training corpus, nouns with no labeled arguments are generally skipped (i.e., not labeled as predicates at all).",
        "Thus, we made a strong simplifying assumption: if a predicate (either noun or verb) is labeled by our system as having no arguments, we should not label it as being a predicate.",
        "On the development set, out of a total of 6390 labeled predicates, only 23 had no labeled arguments; thus, this assumption appears to be quite reasonable.",
        "Our system architecture was as follows.",
        "First, we modified the training (and test) set by marking as a potential predicate every word that was either: a) a verb that wasn't \"do\", \"be\", or \"have\" or b) a noun found in the nombank index.",
        "Then, we trained our system on all potential predicates (not just predicates that were actually labeled).",
        "Finally, after applying our classifier to the test data, we removed any predicate with no labeled arguments."
      ]
    },
    {
      "heading": "5. Sense-Tagging Predicates",
      "text": [
        "We tried three simple heuristics for sense-labeling the predicates.",
        "All of them were applied at the end of our pipeline, and thus did not interact with the argument labeling decisions.",
        "The simplest heuristic labeled every predicate as sense 1.",
        "A slightly more intelligent heuristic labeled every predicate with its most common sense in the training set.",
        "Finally, we extended this heuristic to label each verb with its most common sense for the subcategorization (i.e., set of roles) actually produced by the labeling system.",
        "Thus, if one sense was intransitive while the other was transitive, we would be able to distinguish between them (assuming that our labeling system produced the correct set of arguments).",
        "For this third heuristic, we ignored all but the core arguments (ARGO -ARG5).",
        "The final heuristic was the most effective, as discussed in the results section."
      ]
    },
    {
      "heading": "6. Results",
      "text": [
        "The first stage of Baseline, which tries to filter out constituents which are obviously not arguments, took about three hours and approximately 4Gb of memory to train.",
        "The second stage, which performs the final classification of arguments, took about four hours and 3Gb of memory to train.",
        "The sentence simplification system, which we will refer to as Simplification, works in two steps.",
        "First, it generates the set of all possible simplifications for each sentence.",
        "This step took a relatively small amount of memory, under 1Gb, but took around 24 hours to complete.",
        "The set of simplifications is stored in a compact form; the total storage required for all simplifications of all sentences was roughly 4 times the (compressed) size of the Charniak input parses.",
        "The second step, which trains the model using the possible simplifications, took around 12 hours and 3Gb of memory.",
        "We only submitted results for the semantic dependencies portion of the competition.",
        "The system we used was the Combined system described in (Vickrey and Roller, 2008), which combines the simplification procedure with the Baseline model.",
        "The Combined model was augmented with the modifications described above.",
        "Our system achieved an official Fl score on the SRL subtask of 76.17, the highest in the open task.",
        "Our results are not strictly comparable to those in the closed task, due to the use of the Charniak parser trained on Penn Treebank constituency parses.",
        "However, a comparison still provides insight into the relative strength of our system; our score would place us tied for fourth in the closed challenge for semantic dependencies.",
        "We will now discuss the relative contributions of various components of our system.",
        "All results in this section are for TestWSJ + TestBrown.",
        "Our Combined model provides the same benefit over Baseline as described in (Vickrey and",
        "!A11 runs were done on a dual core 2.66Mhz Xeon machine with 4Gb of RAM",
        "Koller, 2008) for labeling the arguments of verbs.",
        "When applied to just verb predicates, the Combined model provides a statistically significant improvement of 1.2 points of Fl score over Baseline.",
        "However, since the CoNLL-2008 shared task adds both labeling of noun dependencies and predicate identification and sense tagging, the gain due to better labeling arguments of verbs is reduced.",
        "The Baseline model achieves an Fl score of 75.31 on the semantic dependencies task, .86 Fl points lower than the Combined system.",
        "Note that while most of this gain is directly due to better verb argument labeling, better verb argument labeling also indirectly slightly improves predicate identification and sense-tagging since we use the predicted arguments for both of of these sub tasks.",
        "We do in fact see a small increase for labeling and sense-tagging predicates, from 80.72 Fl for the Baseline to 80.81 Fl for Combined.",
        "As mentioned, we use Baseline to label the arguments of nouns.",
        "Noun argument labeling appears to be more difficult than verb argument labeling, or at least requires some modification of the features.",
        "Baseline obtains an Fl score of 75.64 for verbs, but only 68.19 Fl for nouns.",
        "On the subtask of predicate identification, Combined achieved an Fl of 90.65.",
        "It performed better on verbs than nouns.",
        "For predicates with part of speech VB* it scored 95.43 Fl; for predicates with part of speech NN*, it scored 85.97 Fl.",
        "Verbs without arguments are often labeled in the gold data, so the verb score could perhaps be improved by retaining verb predicates without arguments.",
        "As described above, we tried three heuristics for sense-labeling predicates.",
        "Our final system used the third heuristic, which chose the most common sense for the set of labeled arguments produced by the system.",
        "Combined obtained an Fl score of 80.81 on the combined predicate identification/classification task, with a score of 82.58 for verbs and 79.28 for nouns.",
        "The decrease in performance by adding classification is much larger for verbs than nouns; verb sense classification is apparently significantly more difficult than noun sense classification (at least for verbal nouns).",
        "Table 2: Relative performance of sense-labeling heuristics from the simplest heuristic to the third heuristic gained 1.52 points of Fl score on the subtask of predicate identification/classification, and an improvement of .48 Fl score for the overall semantic dependency score.",
        "Another interesting thing to note is that all of improvement for noun predicates came from choosing the most common sense instead of always choosing sense 1.",
        "On the other hand, using subcategorization information is quite important for sense-tagging verbs."
      ]
    },
    {
      "heading": "7. Discussion and Future Work",
      "text": [
        "The CoNLL-08 task introduces two new subtasks for labeling semantic dependencies: predicate identification and predicate classification.",
        "Our experimental results show that both are non-trivial and suggest that there is room for additional improvement on these subtasks.",
        "We are particularly interested in two extensions to our simplification model related to the 2008 shared task.",
        "The first is extending our simplification model to handle the arguments of nouns.",
        "As discussed above, there is a large amount of room for improvement for argument labeling of nouns.",
        "The second is incorporating uncertainty from the parser into our model.",
        "Specifically, we would like to extract a complete parse forest from the Char-niak parser and use it as input to our model.",
        "This would allow our simplification model to jointly reason about the correct parse, possible simplifications of those parses, and semantic role labelings of the resulting simplified sentences.",
        "Overall",
        "Predicate ID/Class",
        "Heuristic",
        "Score",
        "All",
        "Verbs",
        "Nouns",
        "Always 1",
        "75.69",
        "79.29",
        "81.26",
        "77.58",
        "Most common",
        "76.02",
        "80.33",
        "81.73",
        "79.21",
        "Best for subcat",
        "76.17",
        "80.81",
        "82.58",
        "79.28"
      ]
    }
  ]
}
