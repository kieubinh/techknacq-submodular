{
  "info": {
    "authors": [
      "Markus Dreyer",
      "Jason M. Eisner"
    ],
    "book": "EMNLP",
    "id": "acl-D09-1011",
    "title": "Graphical Models over Multiple Strings",
    "url": "https://aclweb.org/anthology/D09-1011",
    "year": 2009
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Graphical Models over Multiple Strings*",
        "Markus Dreyer and Jason Eisner",
        "We study graphical modeling in the case of string-valued random variables.",
        "Whereas a weighted finite-state transducer can model the probabilistic relationship between two strings, we are interested in building up joint models of three or more strings.",
        "This is needed for inflectional paradigms in morphology, cognate modeling or language reconstruction, and multiple-string alignment.",
        "We propose a Markov Random Field in which each factor (potential function) is a weighted finite-state machine, typically a transducer that evaluates the relationship between just two of the strings.",
        "The full joint distribution is then a product of these factors.",
        "Though decoding is actually undecidable in general, we can still do efficient joint inference using approximate belief propagation; the necessary computations and messages are all finite-state.",
        "We demonstrate the methods by jointly predicting morphological forms."
      ]
    },
    {
      "heading": "1. Overview",
      "text": [
        "This paper considers what happens if a graphical model's variables can range over strings of unbounded length, rather than over the typical finite domains such as booleans, words, or tags.",
        "Variables that are connected in the graphical model are related by some weighted finite-state transduction.",
        "Graphical models have become popular in machine learning as a principled way to work with collections of interrelated random variables.",
        "Most often they are used as follows:",
        "1.",
        "Build: Manually specify the n variables of interest; their domains; and the possible direct interactions among them.",
        "2.",
        "Train: Train this model's parameters 9 to obtain a specific joint probability distribution p(Vi,..., Vn) over the n variables."
      ]
    },
    {
      "heading": "3.. Infer: Use this joint distribution to predict",
      "text": [
        "the values of various unobserved variables from observed ones.",
        "'Supported by the Human Language Technology Center of Excellence at Johns Hopkins University, and by National Science Foundation grant No.",
        "0347822 to the second author.",
        "Note that 1. requires intuitions about the domain;"
      ]
    },
    {
      "heading": "2.. requires some choice of training procedure; and",
      "text": [
        "3. requires a choice of exact or approximate inference algorithm.",
        "Our graphical models over strings are natural objects to investigate.",
        "We motivate them with some natural applications in computational linguistics (section 2).",
        "We then give our formalism: a Markov Random Field whose potential functions are rational weighted languages and relations (section 3).",
        "Next, we point out that inference is in general undecidable, and explain how to do approximate inference using message-passing algorithms such as belief propagation (section 4).",
        "The messages are represented as weighted finite-state machines.",
        "Finally, we report on some initial experiments using these methods (section 7).",
        "We use incomplete data to train a joint model of morphological paradigms, then use the trained model to complete the data by predicting unseen forms."
      ]
    },
    {
      "heading": "2. Motivation",
      "text": [
        "The problem of mapping between different forms and representations of strings is ubiquitous in natural language processing and computational linguistics.",
        "This is typically done between string pairs, where a pronunciation is mapped to its spelling, an inflected form to its lemma, a spelling variant to its canonical spelling, or a name is transliterated from one alphabet into another.",
        "However, many problems involve more than just two strings:",
        "• in morphology, the inflected forms of a (possibly irregular) verb are naturally considered together as a whole morphological paradigm in which different forms reinforce one another;",
        "• mapping an English word to its foreign transliteration may be easier when one considers the orthographic and phonological forms of both words;",
        "• similar cognates in multiple languages are naturally described together, in orthographic or phonological representations, or both;",
        "Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 101-110, Singapore, 6-7 August 2009.",
        "©2009 ACL and AFNLP",
        "• modem and ancestral word forms form a phylogenetic tree in historical linguistics;",
        "• in bioinformatics and in system combination, multiple sequences need to be aligned in order to identify regions of similarity.",
        "We propose a unified model for multiple strings that is suitable for all the problems mentioned above.",
        "It is robust and configurable and can make use of task-specific overlapping features.",
        "It learns from observed and unobserved, or latent, information, making it useful in supervised, semi-supervised, and unsupervised settings."
      ]
    },
    {
      "heading": "3. Formal Modeling Approach",
      "text": [
        "A Markov Random Field (MRF) is a joint model of a set of random variables, V = {V\\,... ,Vn}.",
        "We assume that all variables are string-valued, i.e. the value of V% may be any string G X*, where Si is some finite alphabet.",
        "We may use meaningful names for the integers i, such as Vzsa for the 2nd singular past form of a verb.",
        "The assumption that all variables are string-valued is not crucial; it merely simplifies our presentation.",
        "It is, however, sufficient for many practical purposes, since most other discrete objects can be easily encoded as strings.",
        "For example, if V\\ is a part of speech tag, it may be encoded as a length-1 string over the finite alphabet Si = {Noun, Verb,...}.",
        "A Markov Random Field defines a probability for each assignment A of values to the variables in V:",
        "This distribution over assignments is specified by the collection of factors F3: : A i-> M>o- Each factor (or potential function) is a function that depends on only a subset of A.",
        "Fig.",
        "1 displays an undirected factor graph, in which each factor is connected to the variables that it depends on.",
        "F\\,Fs, F$ in this example are unary factors because each one scores the value of a single variable, while F2, F4, Fe are binary factors.",
        "Figure 1 : Example of a factor graph.",
        "Black boxes represent factors, circles represent variables (infinitive, 2nd past, and 3rd present-tense forms of the same verb; different samples from the MRF correspond to different verbs).",
        "Binary factors evaluate how well one string can be transduced into another, summing over all transducer paths (i.e., alignments, which are not observed in training).",
        "In our setting, we will assume that each unary factor is specified by a weighted finite-state automaton (WFSA) whose weights fall in the semiring (R>o, +, x).",
        "Thus the score F3(..., V2sa = x,...) is the total weight of all paths in the Fs's WFSA that accept the string x G ^sa- Each path's weight is the product of its component arcs' weights, which are non-negative.",
        "Similarly, we assume that each binary factor is specified by a weighted finite-state transducer (WFST).",
        "Such a model is essentially a generalization of stochastic edit distance (Ristad and Yian-ilos, 1996) in which the edit probabilities can be made sensitive to a finite summary of context.",
        "Formally, a WFST is an automaton that resembles a weighted FSA, but it nondeterministically reads two strings x,yin parallel from left to right.",
        "The score of (x, y) is given by the total weight of all accepting paths in the WFST that map x toy.",
        "For example, different paths may consider various monotonie alignments of x with y, and we sum over these mutually exclusive possibilities.",
        "A factor might depend on k > 2 variables.",
        "This requires a fc-tape weighted finite-state machine (WFSM), an obvious generalization where each path reads k strings in some alignment.",
        "To ensure that Z is finite in equation (1), we can require each factor to be a \"proper\" WFSM, i.e., its accepting paths have finite total weight (even if the WFSM is cyclic, with infinitely many paths).",
        "'Each string is said to be on a different \"tape,\" which has its own \"read head,\" allowing the WFSM to maintain a separate position in each string.",
        "Thus, a path in a WFST may consume any number of characters from x before consuming the next character from y.",
        "Our probability model has trainable parameters: a vector of feature weights Each arc in each",
        "WFSM has a real-valued weight that depends on 6.",
        "Thus, tuning 6 during training will change the arc weights, hence the path weights, the factor functions, and the whole probability distribution p(A).",
        "Designing the probability model includes specifying the topology and weights of each WFSM.",
        "Eisner (2002) explains how to specify and train such parameterized WFSMs.",
        "Typically, the weight of an arc is a simple sum like 6u + #55 + 672, where 612 is included on all arcs that share feature 12.",
        "However, more interesting parameter-izations arise if the WFSM is constructed by operations such as transducer composition, or from a weighted regular expression.",
        "Factored finite-state string models (1) were originally suggested by the second author, in Kempe et al.",
        "(2004).",
        "That paper showed that even in the unweighted case, such models could be used to encode relations that could not be recognized by any fc-tape FSM.",
        "We offer a more linguistic example as a small puzzle.",
        "We invite the reader to specify a factored model (consisting of three FSTs as in Fig. 1) that assigns positive probability to just those triples of character strings (x, y, z) that have the form (red-ball, ball-red, red), (whiteJiouse, house-white, white), etc.",
        "This uses the auxiliary variable Z to help encode a relation between X and Y that swaps words of unbounded length.",
        "By contrast, no FSM can accomplish such unbounded swapping, even with 3 or more tapes.",
        "Such extra power might be linguistically useful.",
        "Troublingly, however, Kempe et al.",
        "(2004) also observed that the framework is powerful enough to express computationally undecidable problems.This implies that to work with arbitrary models, we will need approximate methods.",
        "Fortunately, the graphical models community has already de-",
        "Figure 2: Illustration of messages being passed from variable to factor and factor to variable.",
        "Each message is represented by a finite-state acceptor.",
        "veloped many such methods, to deal with the computational intractability (if not undecidability) of exact inference."
      ]
    },
    {
      "heading": "4. Approximate Inference",
      "text": [
        "In this paper, we focus on how belief propagation (BP) – a simple well-known method for approximate inference in MRFs (Bishop, 2006) – can be used in our setting.",
        "BP in its general form has not yet been widely used in the NLP community.However, it is just a generalization to arbitrary factor graphs of the familiar forward-backward algorithm (which operates only on chain-structured factor graphs).",
        "The algorithm becomes approximate (and may not even converge) when the factor graphs have cycles.",
        "(In that case it is more properly called \"loopy belief propagation.\")",
        "We first sketch how BP works in general.",
        "Each variable V in the graphical model maintains a belief about its value, in the form of a marginal distribution pv over the possible values of V. The final beliefs are the output of the algorithm.",
        "Beliefs arise from messages that are sent between the variables and factors along the edges of the factor graph.",
        "Variable V sends factor F a message ßv^f, which is an (unnormalized) probability distribution over V's values v, computed by where N is the set of neighbors of V in the graphical model.",
        "This message represents a consensus of V's other neighboring factors concerning V's value.",
        "It is how V tells F what its belief pv would be if F were absent.",
        "Informally, it communicates to F: Here is what my value would be if it were up to my other neighboring factors F' to determine.",
        "The factor F can then collect such incoming messages from neighboring variables and send its own message on to another neighbor U.",
        "Such a message ßF^u suggests good values for U, in the form of an (unnormalized) distribution over IF s values u, computed by where A is an assignment to all variables, and A[U] is the value of variable U in that assignment.",
        "This message represents F's prediction of IFs value based on its other neighboring variables U'.",
        "Informally, via this message, F tells U : Here is what I would like your value to be, based on the messages that my other neighboring variables have sent me about their values, and how I would prefer you to relate to them.",
        "Thus, each edge of the factor graph maintains two messages ßv^F, ßF^v- All messages are updated repeatedly, in some order, using the two equations above, until some stopping criterion is reached.",
        "The beliefs are then computed:",
        "If variable V is observed, then the right-hand sides of equations (2) and (4) are modified to tell V that it must have the observed value v. This is done by multiplying in an extra message ßdbs^v that puts probability 1 on v and 0 on other values.",
        "That affects other messages and beliefs.",
        "The final belief at each variable estimates its posterior marginal under the MRF (1), given all observations.",
        "Both ßv^F and ßf^v are unnormalized distributions over the possible values of V – in our case, strings.",
        "A distribution over strings is naturally represented by a WFSA.",
        "Thus, belief propagation translates to our setting as follows:",
        "• Each message is a WFSA.",
        "• Messages are typically initialized to a one-state WFSA that accepts all strings in £*, each with",
        "weight l.",
        "• Taking a pointwise product of messages to V in equation (2) corresponds to WFSA intersection.",
        "• If F in equation (3) is binary, then there is only one U'.",
        "Then the outgoing message ßF^u, a WFSA, is computed as domain(F o ßu/_>p).",
        "Here o composes the factor WFST with the incoming message WFSA, yielding a WFST that gives a joint distribution over (U,Ur).",
        "The domain operator projects this WFST onto the U side to obtain a WFSA, which corresponds to marginalizing to obtain a distribution over U.",
        "• In general, F is a fc-tape WFSM.",
        "Equation (3) \"composes\" k – 1 of its tapes with k – 1 incoming messages ßu>^F, to construct a joint distribution over the k variables in Af(F), then projects onto the kth tape to marginalize over the k – lU' variables and get a distribution over U.",
        "All this can be accomplished by the WFSM generalized composition operator M (Kempe et al., 2004).",
        "After projecting, it is desirable to determinize the WFSA.",
        "Otherwise, the summation in (3) is only implicit – the summands remain as distinct paths in the WFSA – and thus the WFSAs would get larger and larger as BP proceeds.",
        "Unfortunately, determinizing a WFSA still does not guarantee a small result.",
        "In fact it can lead to exponential blowup, or even infinite blowup.",
        "Thus, in practice we recommend against determinizing the messages, which may be inherently complex.",
        "To shrink a message, it is safer to approximate it with a small deterministic WFSA, as discussed in the next section.",
        "In our domain, it is possible for the finite-state messages to grow unboundedly in size as they flow around a cycle.",
        "After all, our messages are not just multinomial distributions over a fixed finite",
        "nIf there is no deterministic equivalent (Mohri, 1997).",
        "set.",
        "They are distributions over the infinite set E*.",
        "A WFSA represents this in finite space, but more complex distributions require bigger WFSAs, with more distinct states and arc weights.",
        "Facing the same problem for distributions over the infinite set R, Sudderth et al.",
        "(2002) simplified each message ßv^F, approximating a complex Gaussian mixture by using fewer components.",
        "We could act similarly, variationally approximating a large WFSA P with a smaller one Q.",
        "Choose a family of message approximations (such as bigram models) by specifying the topology for a (small) deterministic WFSA Q.",
        "Then choose Q's edge weights to minimize the KL divergence KL(P II Q).",
        "This can be done in closed form.",
        "Another possible procedure – used in the experiments of this paper – approximates ßv^F by pruning it back to a finite set of most plausible strings.",
        "Equation (2) requests an intersection of several WFSAs, e.g., ßF^v n ßF2^v n • • •.",
        "List all strings that appear on any of the 1000-best paths in any of these WFSAs, removing duplicates.",
        "Let Q be a uniform distribution over this combined list of plausible strings, represented as a determinized, minimized, acyclic WFSA.",
        "Now approximate the intersection of equation (2) as ((Q n ßF!->v) n ßF2^v) n • • •.",
        "This is efficient to compute and has the same topology as Q."
      ]
    },
    {
      "heading": "5. Training the Model Parameters",
      "text": [
        "Any standard training method for MRFs will transfer naturally to our setting.",
        "In all cases we draw on Eisner (2002), who showed how to train the parameters 6 of a single WFST, F, to (locally) maximize the joint or conditional probability of fully or partially observed training data.",
        "This involves computing the gradient of that likelihood function with respect to 6.",
        "We remark that if a factor F were specified by a synchronous grammar rather than a WFSM, then its outgoing messages would be weighted context-free languages.",
        "Exact intersection of these is undecidable, but they too can be approximated variationally by WFSAs, with the same methods.",
        "We must generalize this to train a product of WFSMs.",
        "Typically, training data for an MRF (1) consists of some fully or partially observed IID samples of the joint distribution p(V\\,... Vn).",
        "It is well-known how to tune an MRF's parameters 6 by stochastic gradient descent to locally maximize the probability of this training set, even though both the probability and its gradient are in general intractable to compute in an MRF.",
        "The gradient is a sum of quantities, one for each factor Fj.",
        "While the summand for Fj cannot be computed exactly, it can be estimated using the BP messages to Fj.",
        "Roughly speaking, the gradient for Fj is computed much as in supervised training (see above), but treating any message ßv^Fj as an uncertain observation of Vi – a form of noisy supervision.",
        "Our concerns about training are the same as for any MRF.",
        "First of all, BP is approximate.",
        "Kulesza and Pereira (2008) warn that its estimates of the gradient can be misleading.",
        "Second, semi-supervised training (which we will attempt below) is always difficult and prone to local optima.",
        "As in EM, a small number of supervised examples for some variable may be drowned out by many noisily reconstructed examples.",
        "Faster and potentially more stable approaches include the piecewise training methods of Sutton and McCallum (2008), which train the factors independently or in small groups.",
        "In the semi-supervised case, each factor can be trained on only the supervised forms available for it.",
        "It might be useful to reweight the trained factors (cf. Smith et al.",
        "(2005)), or train the factors consecutively (cf. Fahlman and Lebiere (1990)), in a way that minimizes the loss of BP decoding on held-out data."
      ]
    },
    {
      "heading": "6. Comparison With Other Approaches",
      "text": [
        "In principle, one could use a 100-tape WFSM to jointly model the 100 distinct forms of a typical Polish verb.",
        "In other words, the WFSM would describe the distribution of a random variable V = (Vi,..., Vioo), where each V, is a string.",
        "One would train the parameters of the WFSM on a sample of V, each sample being a fully or partially observed paradigm for some Polish verb.",
        "The resulting distribution could be used to infer missing forms for these or other verbs.",
        "path through the WFST may be ambiguous and unobserved.",
        "As a simple example, either a morphological generator or a morphological analyzer might need the probability that krzyczatoby is the neuter third-person singular conditional imperfective of krzy-czec, despite never having observed it in training.",
        "The model determines this probability based on other observed and hypothesized forms of krzy-czec, using its knowledge of how neuter third-person singular conditional imperfectives are related to these other forms in other verbs.",
        "Unfortunately, such a 100-tape WFSM would be huge, with an astronomical number of arcs (each representing a possible 100-way edit operation).",
        "Our approach is to factor the problem into a number of (e.g.) pairwise relationships among the verb forms.",
        "Using a factored distribution has several benefits over the fc-tape WFSM: (1) a smaller representation in memory, (2) a small number of parameters to learn, (3) efficient approximate computation that takes advantage of the factored structure, (4) the ability to reuse WFSAs and WF-STs previously developed for smaller problems, (5) additional modeling power.",
        "Some previous researchers have used factored joint models of several strings.",
        "To our knowledge, they have all chosen acyclic, directed graphical models.",
        "The acyclicity meant that exact inference was at least possible for them, if not necessarily efficient.",
        "The factors in these past models have been WFSTs (though typically simpler than the ones we will use).",
        "Many papers have used cascades of probabilistic finite-state transducers.",
        "Such a cascade may be regarded as a directed graphical model with a linear-chain structure.",
        "Pereira and Riley (1997) built a speech recognizer in this way, relating acoustic to phonetic to lexical strings.",
        "Similarly, Knight and Graehl (1997) presented a generative cascade using 4 variables and 5 factors: p(w, e, j, k, 6) = p(w)-p(e \\ w)-p(j | e)-p(k \\ j) ■p(o I k) where e is an English word sequence, w its pronunciation, j a Japanese version of the pronunciation, k a katakana rendering of the Japanese pronunciation, and o an OCR-corrupted version of the katakana.",
        "Knight and Graehl used finite-state operations to perform inference at test time, observing o and recovering the most likely w, while marginalizing out e, j, and k.",
        "Bouchard-Côté et al.",
        "(2009) reconstructed ancient word forms given modern equivalents.",
        "They used a directed graphical model, whose tree structure reflected the evolutionary development of the modern languages, and which included latent variables for historical intermediate forms that were never observed in training data.",
        "They used Gibbs sampling rather than an exact solution (possible on trees) or a variational approximation (like our BP).",
        "Our work seeks to be general in terms of the graphical model structures used, as well as efficient through the use of BP with approximate messages.",
        "We also seek to avoid local normalization, using a globally normalized model.",
        "We distinguish our work from \"dynamic\" graphical models such as Dynamic Bayesian Networks and Conditional Random Fields, where the string brechen would be represented by creating 7 letter-valued variables.",
        "Those methods can represent strings (or paths) of any length – but the length for each training or test string must be specified in advance, not inferred.",
        "Furthermore, it is awkward and costly to model unknown alignments, since the variables are position-specific, and any position in brechen could in principle align with any position in brichst.",
        "WFSTs are a much more natural and flexible model of string pairs.",
        "We also distinguish our work from current non-parametric Bayesian models, which sometimes generate unbounded strings, trees, or grammars.",
        "If they generate two unbounded objects, they model their relationship by a single synchronous generation process (akin to Section 6.1), rather than by a globally normalized product of overlapping factors."
      ]
    },
    {
      "heading": "7. Experiments",
      "text": [
        "To study our approach, we conducted initial experiments that reconstruct missing word forms in morphological paradigms.",
        "In inflectional morphology, each uninflected verb form (lemma) is associated with a vector of forms that are inflected for tense, person, number, etc.",
        "Some inflected forms may be observed frequently in natural text, others rarely.",
        "Two variables that are usually predictable from each other may or may not keep this relationship in the case of an irregular verb.",
        "(b) # finite forms per paradigm 9 (d) # paradigms with some finite form(s) observed 2,176",
        "implemented and manipulated all WFSMs using the OpenFST library (Allauzen et al., 2007).",
        "We trained 6 on the incompletely observed paradigms.",
        "As suggested in section 5, we used a variant of piecewise pseudolikelihood training (Sutton and McCallum, 2008).",
        "Suppose there is a binary factor F attached to forms U and V. For any value of 9, we can define puv{U \\ V) from the tiny MRF consisting only of U, V, and F.",
        "We can therefore compute the goodness Puv = \\ogpuv{ui I Vi) + \\ogvu(vi I Ui), summed over all observed (U, V) pairs in training data.",
        "We attempted to tune 6 to maximize the total Puv over all U, V pairs, regularized by subtracting ||#||.",
        "Note that different factors thus enjoyed different amounts of observed training data, but training was fully supervised (except for the unobserved alignments between u% and vi).",
        "At test time, we are given each lemma (e.g. brechen) and all its observed (frequent) inflected forms (e.g., brachen, bricht,... ), and are asked to predict the remaining (rarer) forms (e.g., breche, brichst, ...).",
        "We run approximate joint inference using belief propagation.",
        "We extract our output from the final beliefs: for each unseen variable V, we pre-",
        "seemed to hurt in our current training setup.",
        "We followed Dreyer et al.",
        "(2008) in slightly pruning the space of possible alignments.",
        "We compensated by replacing their WFST, F, with the union F U 10\"(0.999E x £)*.",
        "This ensured that the factor could still map any string to any other string (though perhaps with very low weight), guaranteeing that the intersection at the end of section 4.3 would be non-empty.",
        "Our task is to reconstruct {generate) specific unobserved morphological forms in a paradigm by learning from observed ones.",
        "This is a particularly interesting semisupervised scenario, because different subsets of the variables are observed on different examples.",
        "We used orthographic rather than phonological forms.",
        "We extracted morphological paradigms for all 9393 German verbs in the CELEX morphological database.",
        "Each paradigm lists 5 present-tense and 4 past-tense indicative forms, as well as the verb's lemma, for a total of 10 string-valued variables.",
        "In each paradigm, we removed, or hid, verb forms that occur only rarely in natural text, i.e, verb forms with a small frequency figure provided by CELEX.",
        "All paradigms other than sein ('to be') were now incompletely observed.",
        "Table 1 gives some statistics.",
        "Our current MRF uses only binary factors.",
        "Each factor is a WFST that is trained to relate 2 of the 10 variables (morphological forms).",
        "Each WFST can score an aligned pair using a log-linear model that counts features in a sliding 3-character window.",
        "To score an unaligned pair, it sums over all possible alignments.",
        "Specifically, our WFST topology and parameterization follow the state-of-the-art approach to supervised morphology in Dreyer et al.",
        "(2008), although we dropped some of their features to speed up these early experiments.",
        "We",
        "Occasionally a form is listed as unknown.",
        "We neither train nor evaluate on such forms, although the model will still predict them.",
        "diet its value to be argmaxî)py(v).",
        "This prediction considers the values of all other unseen variables but sums over their possibilities.",
        "This is the Bayes-optimal decoder for our scoring function, since that function reports the fraction of individual forms that were predicted perfectly.",
        "It is hard to know a priori what the causal relationships might be in a morphological paradigm.",
        "In principle, one would like to automatically choose which factors to have in the MRF.",
        "Or one could start with many factors, but use methods such as those suggested in section 5 to learn that certain less useful factors should be left weak to avoid confusing loopy BR",
        "For our present experiments, we simply compared several fixed model topologies (Fig.",
        "3).",
        "These were variously unconnected (U), chain graphs (Cl,..., C4), trees (Tl, T2), or loopy graphs (LI,..., L4).",
        "We used several factor graphs that differ only by one or two added factors and compared the results.",
        "The graphs were designed by hand; they connect some forms with similar morphological properties more or less densely.",
        "We trained different models using the observed forms in the 9393 paradigms as training data.",
        "The first 100 paradigms were then used as development data for model selection: we were given the answers to their hidden forms, enabling us to compare the models.",
        "The best model was then evaluated on the 9293 remaining paradigms.",
        "The models are compared on development data in Table 2.",
        "Among the factor graphs we evaluated, we find that L4 (see Fig. 3) performs best overall (whole-word accuracy 82.1).",
        "Note that the unconnected graph U does not perform very well (69.0), but using factor graphs with more connecting factors generally helps overall accuracy (see C1-C3).",
        "Note, however, that in some cases the additional structure hurts: The chain model C4 and the loopy model LI perform relatively badly.",
        "The",
        "Pres Past Pres Past Pres Past Pres Past Pres Past",
        "Figure 3: The graphs that we evaluate on development data.",
        "The nodes represent morphological forms, e.g. the first node in the left of each graph represents the first person singular present.",
        "Each variable is also connected to the lemma (not shown).",
        "See results in Table 2.",
        "reason for such a performance degradation is that undertrained factors were used: The factors relating second-person to second-person forms, for example, are trained from only 8 available examples.",
        "Non-loopy models always converge (exactly) in one iteration (see footnote 22).",
        "But even our loopy models appeared to converge in accuracy within two iterations.",
        "Only L3 and L4 required the second iteration, which made tiny improvements.",
        "Based on the development results, we selected model L4 and tested on the remaining 9293 paradigms.",
        "We regard the unconnected model U as a baseline to improve upon.",
        "We also tried a rather different baseline as in (Dreyer et al., 2008).",
        "We trained the machine translation toolkit Moses (Koehn et al., 2007) to translate groups of letters rather than groups of words (\"phrases\").",
        "For each form / to be predicted, we trained a Moses model on all supervised form pairs (I, /) available in the data, to learn a prediction for the form given the lemma I.",
        "The M,3 condition restricted Moses use \"phrases\" no longer than 3 letters, comparable to our own trigram-based factors (see section 7.2).",
        "M,15 could use up to 15 letters.",
        "Again, our novel L4 model far outperformed the others overall.",
        "Breaking the results down by form, we find that this advantage mainly comes from the 3 forms with the fewest observed training examples (Table 3, first 3 rows).",
        "The M and U models are barely able to predict these forms at all from the lemma, but L4 can predict them bet-",
        "Table 2: Whole-word accuracies of the different models in reconstructing the missing forms in morphological paradigms, here on 100 verbs (development data).",
        "The names refer to the graphs in Fig. 3.",
        "We selected L4 as final model (Table 3).",
        "Table 4: Accuracy on test data, reported separately for paradigms in which 1-3, 4 – 6, or 7-9 forms are missing.",
        "Missing words have CELEX frequency count < 10; these are the ones to predict.",
        "(The numbers in col. 2 add up to 9256, not 9293, since some paradigms are incomplete in CELEX to begin with, with no forms to be removed or evaluated.)",
        "rected graphical model with string-valued variables and whose factors (potential functions) are defined by weighted finite-state transducers.",
        "Each factor evaluates some subset of the strings.",
        "Approximate inference can be done by loopy belief propagation.",
        "The messages take the form of weighted finite-state acceptors, and are constructed by standard operations.",
        "We explained why the messages might become large, and gave methods for approximating them with smaller messages.",
        "We also discussed training methods.",
        "We presented some pilot experiments on the task of jointly predicting multiple missing verb forms in morphological paradigms.",
        "The factors were simplified versions of statistical finite-state models for supervised morphology.",
        "Our MRF for this task might be used not only to conjugate verbs (e.g., in MT), but to guide further learning of morphology – either active learning from a human or semi-supervised learning from the distributional properties of a raw text corpus.",
        "Our modeling approach is potentially applicable to a wide range of other tasks, including transliteration, phonology, cognate modeling, multiple-sequence alignment and system combination.",
        "Our work ties into a broader vision of using algorithms like belief propagation to coordinate the work of several NLP models and algorithms.",
        "Each individual factor considers some portion of a joint problem, using classical statistical NLP methods (weighted grammars, transducers, dynamic programming).",
        "The factors coordinate their work by passing marginal probabilities.",
        "Smith and Eisner (2008) reported complementary work in this vein.",
        "Table 3: Whole-word accuracies on the missing forms from 9293 test paradigms.",
        "The Moses baselines and our unconnected model (U) predict each form separately from the lemma, which is always observed.",
        "L4 uses all observations jointly, running belief propagation for decoding.",
        "Moses, 15 memorizes phrases of length up to 15, all other models use max length 3.",
        "The table is sorted by the column \"# obs.",
        "\", which reports the numbers of observations for a given form.",
        "ter by exploiting other observed or latent forms.",
        "By contrast, well-trained forms were already easy enough for the M and U models that L4 had little new to offer and in fact suffered from its approximate training and/or inference.",
        "Leaving aside the comparisons, it was useful to confirm that loopy BP could be used in this setting at all.",
        "8014 of the 9293 test paradigms had < 2 observed forms (in addition to the lemma) but > 7 missing forms.",
        "One might have expected that loopy BP would have failed to converge, or converged to the wrong thing.",
        "Nonetheless, it achieved quite respectable success at exactly predicting various inflected forms.",
        "For the curious, Table 4 shows accuracies grouped by different categories of paradigms, where the category is determined by the number of missing forms to predict.",
        "Most paradigms fall in the category where 7 to 9 forms are missing, so the accuracies in that line are similar to the overall accuracies in Table 3."
      ]
    },
    {
      "heading": "8. Conclusions",
      "text": [
        "We have proposed that one can jointly model several multiple strings by using Markov Random Fields.",
        "We described this formally as an undi-",
        "Unconn.",
        "Chains",
        "Trees",
        "Loops",
        "U",
        "Cl",
        "C2",
        "C3",
        "C4",
        "Tl",
        "T2",
        "LI",
        "L2",
        "L3",
        "L4",
        "69.0",
        "72.9",
        "73.4",
        "74.8",
        "65.2",
        "78.1",
        "78.7",
        "62.3",
        "79.6",
        "78.9",
        "82.1",
        "Form",
        "#obs.",
        "M,3",
        "M,15",
        "U",
        "L4",
        "2,Sg.Pa.",
        "4",
        "0.0",
        "0.2",
        "0.8",
        "69.7",
        "2,Pl.Pa.",
        "9",
        "0.9",
        "1.1",
        "1.4",
        "45.6",
        "2,Sg.Pr.",
        "166",
        "49.4",
        "62.6",
        "74.7",
        "90.5",
        "l.Sg.Pr.",
        "285",
        "99.6",
        "98.8",
        "99.3",
        "97.2",
        "l,3.Pl.Pa.",
        "673",
        "46.5",
        "78.3",
        "75.0",
        "75.6",
        "l,3.Sg.Pa.",
        "1124",
        "65.0",
        "88.8",
        "84.0",
        "74.8",
        "2,Pl.Pr.",
        "1274",
        "98.3",
        "99.2",
        "99.0",
        "96.4",
        "3,Sg.Pr.",
        "1410",
        "91.0",
        "95.9",
        "95.2",
        "88.2",
        "l,3.Pl.Pr.",
        "1688",
        "99.8",
        "98.9",
        "99.8",
        "98.0",
        "All",
        "6633",
        "59.2",
        "67.3",
        "68.0",
        "81.2"
      ]
    }
  ]
}
