{
  "info": {
    "authors": [
      "Alessandro Moschitti"
    ],
    "book": "EACL",
    "id": "acl-E09-1066",
    "title": "Syntactic and Semantic Kernels for Short Text Pair Categorization",
    "url": "https://aclweb.org/anthology/E09-1066",
    "year": 2009
  },
  "references": [
    "acl-A00-2008",
    "acl-C02-1042",
    "acl-D07-1002",
    "acl-E06-1015",
    "acl-H05-1018",
    "acl-N06-1037",
    "acl-P02-1034",
    "acl-P03-1004",
    "acl-P04-1054",
    "acl-P05-1024",
    "acl-P06-1051",
    "acl-P06-1117",
    "acl-P06-1136",
    "acl-P07-1098",
    "acl-P08-1082",
    "acl-P08-2003",
    "acl-P08-2029",
    "acl-W03-1012",
    "acl-W04-3222",
    "acl-W06-2909",
    "acl-W07-1401"
  ],
  "sections": [
    {
      "text": [
        "Automatic detection of general relations between short texts is a complex task that cannot be carried out only relying on language models and bag-of-words.",
        "Therefore, learning methods to exploit syntax and semantics are required.",
        "In this paper, we present a new kernel for the representation of shallow semantic information along with a comprehensive study on kernel methods for the exploitation of syntactic/semantic structures for short text pair categorization.",
        "Our experiments with Support Vector Machines on question/answer classification show that our kernels can be used to greatly improve system accuracy."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Previous work on Text Categorization (TC) has shown that advanced linguistic processing for document representation is often ineffective for this task, e.g. (Lewis, 1992; Furnkranz et al., 1998; Allan, 2000; Moschitti and Basili, 2004).",
        "In contrast, work in question answering suggests that syntactic and semantic structures help in solving TC (Voorhees, 2004; Hickl et al., 2006).",
        "From these studies, it emerges that when the categorization task is linguistically complex, syntax and semantics may play a relevant role.",
        "In this perspective, the study of the automatic detection of relationships between short texts is particularly interesting.",
        "Typical examples of such relations are given in (Giampiccolo et al., 2007) or those holding between question and answer, e.g. (Hovy et al., 2002; Punyakanok et al., 2004; Lin and Katz, 2003), i.e. if a text fragment correctly responds to a question.",
        "In Question Answering, the latter problem is mostly tackled by using different heuristics and classifiers, which aim at extracting the best answers (Chen et al., 2006; Collins-Thompson et al., 2004).",
        "However, for definitional questions, a more effective approach would be to test if a correct relationship between the answer and the query holds.",
        "This, in turns, depends on the structure of the two text fragments.",
        "Designing language models to capture such relation is too complex since probabilistic models suffer from (i) computational complexity issues, e.g. for the processing of large bayesian networks, (ii) problems in effectively estimating and smoothing probabilities and (iii) high sensitiveness to irrelevant features and processing errors.",
        "In contrast, discriminative models such as Support Vector Machines (SVMs) have theoretically been shown to be robust to noise and irrelevant features (Vapnik, 1995).",
        "Thus, partially correct linguistic structures may still provide a relevant contribution since only the relevant information would be taken into account.",
        "Moreover, such a learning approach supports the use of kernel methods which allow for an efficient and effective representation of structured data.",
        "SVMs and Kernel Methods have recently been applied to natural language tasks with promising results, e.g. (Collins and Duffy, 2002; Kudo and et al., 2003; Moschitti and Bejan, 2004; Culotta and Sorensen, 2004; Kudo et al., 2005; Toutanova et al., 2004; Kazama and Torisawa, 2005; Zhang et al., 2006; Moschitti et al., 2006).",
        "In particular, in question classification, tree kernels, e.g. (Zhang and Lee, 2003), have shown accuracy comparable to the best models, e.g. (Li and Roth, 2005).",
        "2008) have shown that shallow semantic information in the form of Predicate Argument Structures (PASs) (Jackendoff, 1990; Johnson and Fillmore, 2000) improves the automatic detection of correct answers to a target question.",
        "In particular, in (Moschitti et al., 2007) kernels for the processing of PASs (in PropBank format (Kingsbury and Palmer, 2002)) extracted from question/answer pairs were proposed.",
        "However, the relatively high kernel computational complexity and the limited improvement on bag-of-words (BOW) produced by this approach do not make the use of such technique practical for real world applications.",
        "In this paper, we carry out a complete study on the use of syntactic/semantic structures for relational learning from questions and answers.",
        "We designed sequence kernels for words and Part of Speech Tags which capture basic lexical semantics and basic syntactic information.",
        "Then, we design a novel shallow semantic kernel which is far more efficient and also more accurate than the one proposed in (Moschitti et al., 2007).",
        "The extensive experiments carried out on two different corpora of questions and answers, derived from Web documents and the TREC corpus, show that:",
        "• Kernels based on PAS, POS-tag sequences and syntactic parse trees improve the BOW approach on both datasets.",
        "On the TREC data the improvement is interestingly high, e.g. about 61%, making its application worthwhile.",
        "• The new kernel for processing PASs is more efficient and effective than previous models so that it can be practically used in systems for short text pair categorization, e.g. question/answer classification.",
        "In the remainder of this paper, Section 2 presents well-known kernel functions for structural information whereas Section 3 describes our new shallow semantic kernel.",
        "Section 4 reports on our experiments with the above models and, finally, a conclusion is drawn in Section 5."
      ]
    },
    {
      "heading": "2. String and Tree Kernels",
      "text": [
        "Feature design, especially for modeling syntactic and semantic structures, is one of the most difficult aspects in defining a learning system as it requires efficient feature extraction from learning objects.",
        "Kernel methods are an interesting representation approach as they allow for the use of all object substructures as features.",
        "In this perspective, String Kernel (SK) proposed in (Shawe-Taylor and Cristianini, 2004) and the Syntactic",
        "Tree Kernel (STK) (Collins and Duffy, 2002) allow for modeling structured data in high dimensional spaces.",
        "The String Kernels that we consider count the number of substrings containing gaps shared by two sequences, i.e. some of the symbols of the original string are skipped.",
        "Gaps modify the weight associated with the target substrings as shown in the following.",
        "Let X be a finite alphabet, X* = U£L0 S\" is the set of all strings.",
        "Given a string s G £*, |s| denotes the length of the strings and s its compounding symbols, i.e s = si..S|s|, whereas s[i : j] selects the substring sisi+1..sj_1sj from the i-th to the j-th character.",
        "u is a subsequence of s if there is a sequence of indexes / = (ii, ), with 1 < i1 < ... < < |s|, such that u = sil ..si|u|or u = s[T] for short.",
        "d(I) is the distance between the first and last character of the subsequence u in s, i.e. d(T) = – i1 + 1.",
        "Finally, given s1, s2G X*, s1s2 indicates their concatenation.",
        "The set of all substrings of a text corpus forms a feature space denoted by F = {u1 ,u2,..} C £*.",
        "To map a string s in R°° space, we can use the following functions: cf>u(s) = >~2f.u=s[j] Ad(l) for some A < 1.",
        "These functions count the number of occurrences of u in the string s and assign them a weight Ad(/) proportional to their lengths.",
        "Hence, the inner product of the feature vectors for two strings s1 and s2 returns the sum of all common subsequences weighted according to their frequency of occurrences and lengths, i.e.",
        "'www.cis.upenn.edu/\"ace",
        "where d(.)",
        "counts the number of characters in the substrings as well as the gaps that were skipped in the original string.",
        "Tree kernels compute the number of common substructures between two trees T1 and T2 without explicitly considering the whole fragment space.",
        "Let F = {/1,/2be the set of tree",
        "Fi gure 1: A tree for the sentence \"Anxiety is a disease\" with some of its syntactic tree fragments.",
        "fragments and Xi(n) be an indicator function, equal to 1 if the target f is rooted at node n and equal to 0 otherwise.",
        "A tree kernel function over T and T2 is defined as TK(Ti,T2) =",
        "E„ieWT^n2€WT2 A(ni,n2^ where NTi and",
        "Nt2 are the sets of nodes in Ti and T2, respectively and A(ni,n2) = £i=i Xi(ni)Xi(n2).",
        "A function counts the number of subtrees rooted in ni and n2 and can be evaluated as follows (Collins and Duffy, 2002):",
        "1. if the productions at ni and n2 are different then A(ni,n2 ) = 0; 2. if the productions at ni and n2 are the same, and ni and n2 have only leaf children (i.e. they are pre-terminal symbols) then A(m ,«2) = A; 3. if the productions at ni and n2 are the same, and ni and n2 are not pre-terminals then A(ni ,«2) = Anj=1)(1 + ^((j),c„2(j))), where l(ni) is the number of children of ni, cn(j) is the j-th child of node n and A is a decay factor penalizing larger structures.",
        "Figure 1 shows some fragments of the subtree on the left part.",
        "These satisfy the constraint that grammatical rules cannot be broken.",
        "For example, [VP [VBZ NP]] is a valid fragment which has two non-terminal symbols, VBZ and NP, as leaves whereas [VP [VBZ]] is not a valid feature."
      ]
    },
    {
      "heading": "3. Shallow Semantic Kernels",
      "text": [
        "The extraction of semantic representations from text is a very complex task.",
        "For it, traditionally used models are based on lexical similarity and tends to neglect lexical dependencies.",
        "Recently, work such as (Shen and Lapata, 2007; Sur-deanu et al., 2008; Moschitti et al., 2007; Mos-chitti and Quarteroni, 2008; Chali and Joty, 2008), uses PAS to consider such dependencies but only the latter three researches attempt to completely exploit PAS with Shallow Semantic Tree Kernels (SSTKs).",
        "Unfortunately, these kernels result computational expensive for real world applications.",
        "In the remainder of this section, we present our new kernel for PASs and compare it with the previous SSTK.",
        "I I I I I I",
        "Figure 2: Predicate Argument Structure trees associated with the sentence: \"Panic disorder is characterized by unexpected and intense fear that causes anxiety.",
        "\".",
        "Figure 3: Some of the tree substructures useful to capture shallow semantic properties.",
        "Shallow approaches to semantic processing are making large strides in the direction of efficiently and effectively deriving tacit semantic information from text.",
        "Large data resources annotated with levels of semantic information, such as in the FrameNet (Johnson and Fillmore, 2000) and Prop-Bank (PB) (Kingsbury and Palmer, 2002) projects, make it possible to design systems for the automatic extraction of predicate argument structures (PASs) (Carreras and Marquez, 2005).",
        "PB-based systems produce sentence annotations like: [a1 Panic disorder] is [rei characterized] [A0 by unexpected and intense fear] [r-ao that] [rejcauses] [a1 anxiety].",
        "A tree representation of the above semantic information is given by the two PAS trees in Figure 2, where the argument words are replaced by the head word to reduce data sparseness.",
        "Hence, the semantic similarity between sentences can be measured in terms of the number of substructures between the two trees.",
        "The required substructures violate the STK constraint (about breaking production rules), i.e. since we need any set of nodes linked by edges of the initial tree.",
        "For example, interesting semantic fragments of Figure 2.a are shown in Figure 3.",
        "Unfortunately, STK applied to PAS trees cannot generate such fragments.",
        "To overcome this problem, a Shallow Semantic Tree Kernel (SSTK) was designed in (Moschitti et al., 2007).",
        "SSTK is obtained by applying two different steps: first, the PAS tree is transformed by adding a layer of SLOT nodes as many as the number of possible argument types, where each slot is assigned to an argument following a fixed ordering (e.g. rel, AO, A1, A2, ...).",
        "For example, if an A1 is found in the sentence annotation it will be always positioned under the third slot.",
        "This is needed to \"artificially\" allow SSTK to generate structures containing subsets of arguments.",
        "For example, the tree in Figure 2.a is transformed into the first tree of Fig. 4, where \"null\" just states that there is no corresponding argument type.",
        "Second, to discard fragments only containing slot nodes, in the STK algorithm, a new step 0 is added and the step 3 is modified (see Sec. 2.2): 0. if m (or n) is a pre-terminal node and its child label is null, A(m,n2) = 0; 3.",
        "A(ni,n2) = nj(=i) (1 + A(cni (j),cn2 (j))) - 1.",
        "For example, Fig. 4 shows the fragments generated by SSTK.",
        "The comparison with the ideal fragments in Fig. 3 shows that SSTK well approximates the semantic features needed for the PAS representation.",
        "The computational complexity of SSTK is O(n), where n is the number of the PAS nodes (leaves excluded).",
        "Considering that the tree including all the PB arguments contains 52 slot nodes, the computation becomes very expensive.",
        "To overcome this drawback, in the next section, we propose a new kernel to efficiently process PAS trees with no addition of slot nodes.",
        "The idea of SRK is to produce all child subsequences of a PAS tree, which correspond to sequences of predicate arguments.",
        "For this purpose, we can use a string kernel (SK) (see Section 2.1) for which efficient algorithms have been developed.",
        "Once a sequence of arguments is output by SK, for each argument, we account for the potential matches of its children, i.e. the head of the argument (or more in general the argument word sequence).",
        "More formally, given two sequences of argument nodes, s\\ and s2, in two PAS trees and considering the string kernel in Sec 2.1, the SRK(si,s2) is defined as:",
        "s and o(s1[I1i],s2[I2i ]) is 1 if the heads of the arguments are identical, otherwise is 0.",
        "Proposition 1 SRK computes the number of all possible tree substructures shared by the two evaluating PAS trees, where the considered substructures of a tree T are constituted by any set of nodes (at least two) linked by edges of T.",
        "Proof The PAS trees only contain three node levels and, according to the proposition's thesis, substructures contain at least two nodes.",
        "The number of substructures shared by two trees, T and T2, constituted by the root node (PAS) and the subsequences of argument nodes is evaluated by",
        "Ef \\f i t \\f \\ Ad(f (when A =1).",
        "Given a node in a shared subsequence u, its child (i.e. the head word) can be both in Ti and T2, originating two different shared structures (with or without such head node).",
        "The matches on the heads (for each shared node of u) are combined together generating different substructures.",
        "Thus the number of substructures originating from u is the product, ni=i..|„|(1+<r(si[fi1],S2[ï2i])).",
        "This number multiplied by all shared subsequences leads to Eq.",
        "1.",
        "□ We can efficiently compute SRK by following a similar approach to the string kernel evaluation in (Shawe-Taylor and Cristianini, 2004) by defining the following dynamic matrix:",
        "where 7p(s1,s2) counts the number of shared substructures of exactly p argument nodes between si and s2 and again, s[1 : i] indicates the sequence portion from argument 1 to i.",
        "The above matrix is then used to evaluate 7p(s1a, s2b) = where u is any subsequence of argument nodes, Ii is the index of the l-th argument node, s[/i] is the corresponding argument node in the sequence",
        "To obtain the final kernel, we need to consider all possible subsequence lengths.",
        "Let m be the minimum between |s1| and |s21,",
        "SRK(si,s2 ) = E Yp(si ,s2).",
        "I 0 otherwise.",
        "where s1a and s2b indicate the concatenation of the sequences s and t with the argument nodes, a and b, respectively and a(h(a),h(b)) is 1 if the children of a and b are identical (e.g. same head).",
        "The interesting property is that: Dp(k,l)= Yp-i(si[1 : k],s2 [1 : l]) + XDp(k,l - 1)",
        "+ XDp(k - - XDp(k - 1,l - 1).",
        "Regarding the processing time, if p is the maximum number of arguments in a predicate structure, the worst case computational complexity of SRKis O(p).",
        "A comparison between SSTK and SRK suggests the following points: first, although the computational complexity of SRK is larger than the one of SSTK, we will show in the experiment section that the running time (for both training and testing) is much lower.",
        "The worse case is not really informative since as shown in (Moschitti, 2006), we can design fast algorithm with a linear average running time (we use such algorithm for SSTK).",
        "Second, although SRK uses trees with only three levels, in Eq.1, the function a (defined to give i or 0 if the heads match or not) can be substituted by any kernel function.",
        "Thus, a can recursively be an SRK (and evaluate Nested PASs (Moschitti et al., 2007)) or any other potential kernel (over the arguments).",
        "The very interesting aspect is that the efficient algorithm that we provide (Eqs 2, 3 and 4) can be accordingly modified to efficiently evaluate new kernels obtained with the a substitution .",
        "Third, the interesting difference between SRK and SSTK (in addition to efficiency) is that SSTK requires an ordered sequence of arguments to evaluate the number of argument subgroups (arguments are sorted before running the kernel).",
        "This means that the natural order is lost.",
        "SRK instead is based on subsequence kernels so it naturally takes into account the order which is very important: without it, syntactic/semantic properties of predicates cannot be captured, e.g. passive and active forms have the same argument order for SSTK.",
        "Finally, SRK gives a weight to the predicate substructures by considering their length, which also includes gaps, e.g. the sequence (A0, A1) is in turn, the latter produces a heavier match than (A0, A-LOC, A2, A1) (please see Section 2.1).",
        "This is another important property for modeling shallow semantics similarity."
      ]
    },
    {
      "heading": "4. Experiments",
      "text": [
        "Our experiments aim at studying the impact of our kernels applied to syntactic/semantic structures for the detection of relations between short texts.",
        "In particular, we first show that our SRK is far more efficient and effective than SSTK.",
        "Then, we study the impact of the above kernels as well as sequence kernels based on words and Part of Speech Tags and tree kernels for the classification of question/answer text pairs.",
        "The task used to test our kernels is the classification of the correctness of (q, a) pairs, where a is an answer for the query q.",
        "The text pair kernel operates by comparing the content of questions and the content of answers in a separate fashion.",
        "Thus, given two pairs p1 = (q1,a1) and p2 = (q2,a2), a kernel function is defined as K(P1,P2) = Er KT(q1,q2) + Er Kt(a1 ,a2), where t varies across different kernel functions described hereafter.",
        "As a basic kernel machine, we used our SVM-Light-TK toolkit, available at disi.unitn.",
        "it/moschitti (which is based on SVM-Light (Joachims, 1999) software).",
        "In it, we implemented: the String Kernel (SK), the Syntactic Tree Kernel (STK), the Shallow Semantic Tree Kernel (SSTK) and the Semantic Role Kernel (SRK) described in sections 2 and 3.",
        "Each kernel is associated with the above linguistic objects: (i) the linear kernel is used with the bag-of-words (BOW) or the bag-of-POS-tags (POS) features.",
        "(ii) SK is used with word sequences (i.e. the Word Sequence Kernel, WSK) and POS sequences (i.e. the POS Sequence Kernel, PSK).",
        "(iii) STK is used with syntactic parse trees automatically derived with Char-niak's parser; (iv) SSTK and SRK are applied to two different PAS trees (see Section 3.1), automatically derived with our SRL system.",
        "It is worth noting that, since answers often contain more than one PAS, we applied SRK or SSTK to all pairs P1 x P2 and sum the obtained contribution, where P1 and P2 are the set of PASs of the first and second answer.",
        "Although different kernels can be used for questions and for answers, we used (and summed together) the same kernels except for those based on PASs, which are only used on answers.",
        "To train and test our text QA classifiers, we adopted the two datasets of question/answer pairs available at disi.unitn.it/-silviaq, containing answers to only definitional questions.",
        "The datasets are based on the 138 TREC 2001 test questions labeled as \"description\" in (Li and Roth, 2005).",
        "Each question is paired with all the top 20 answer paragraphs extracted by two basic QA systems: one trained with the web documents and the other trained with the AQUAINT data used in TREC'07.",
        "The WEB corpus (Moschitti et al., 2007) of QA pairs contains 1,309 sentences, 416 of which are positive answers whereas the TREC corpus contains 2,256 sentences, 261 of which are positive.",
        "The accuracy of the classifiers is provided by the average F1 over 5 different samples using 5-fold cross-validation whereas each plot refers to a single fold.",
        "We carried out some preliminary experiments of the basic kernels on a validation set and we noted that the F1 was maximized by using the default cost parameters (option c of SVM-Light), A = 0.04 (see Section 2).",
        "The trade-off parameter varied according to different kernels on WEB data (so it needed an ad-hoc estimation) whereas a value of 10 was optimal for any kernel on the TREC corpus.",
        "Section 2 has illustrated that SRK is applied to more compact PAS trees than SSTK, which runs on large structures containing as many slots as the number of possible predicate argument types.",
        "This impacts on the memory occupancy as well as on the kernel computation speed.",
        "To empirically verify our analytical findings (Section 3.3), we divided the training (TREC) data in 9 bins of increasing size (200 instances between two contiguous bins) and we measured the learning and test time for each bin.",
        "Figure 5 shows that in both the classification and learning phases, SRK is much faster than SSTK.",
        "With all training data, SSTK employs 487.15 seconds whereas SRK only uses 12.46 seconds, i.e. it is about 40 times faster, making the experimentation of SVMs with large datasets feasible.",
        "It is worth noting that to implement SSTK we used the fast version of STK and that, although the PAS trees are smaller than syntactic trees, they may still contain more than half million of substructures (when they are formed by seven arguments).",
        "In these experiments, we tested different kernels and some of their most promising combinations, which are simply obtained by adding the different kernel contributions (this yields the joint feature space of the individual kernels).",
        "Table 1 shows the average F1 ± the standard deviation over 5-folds on Web (and TREC) data of SVMs using different kernels.",
        "We note that: (a) BOW achieves very high accuracy, comparable to the one produced by STK, i.e. 65.3 vs 65.1; (b) the BOW+STK combination achieves 66.0, im-",
        "; /",
        "y",
        "y",
        "/ }",
        "y",
        "!",
        "*:",
        "!",
        "...",
        "-•-SRK (training)",
        "-e-SRK (test)",
        "-B-SSTK (test)",
        "-■-SSTK (training)",
        "!",
        "i-•",
        "<",
        "r – ",
        "'-$-^",
        "s – – ",
        "Table 1: F1 ± Std.",
        "Dev.",
        "of the question/answer classifier according to several kernels on the WEB and TREC corpora.",
        "proving both BOW and STK; (c) WSK (65.7) improves BOW and it is enhanced by WSK+STK (66.6), demonstrating that word sequences and STKs are very relevant for this task; and finally, WSK+STK+SSTK is slightly improved by",
        "WSK+STK+SRK, 68.0% vs 68.2% (not significantly) and both improve on WSK+STK.",
        "The above findings are interesting as the syntactic information provided by STK and the semantic information brought by WSK and SRK improve on BOW.",
        "The high accuracy of BOW is surprising if we consider that at classification time, instances of the training models (e.g. support vectors) are compared with different test examples since questions cannot be shared between training and test set.",
        "Therefore the answer words should be different and useless to generalize rules for answer classification.",
        "However, error analysis reveals that although questions are not shared between training and test set, there are common words in the answers due to typical Web page patterns which indicate if a retrieved passage is an incorrect answer, e.g.",
        "Learn more about X.",
        "Although the ability to detect these patterns is beneficial for a QA system as it improves its overall accuracy, it is slightly misleading for the study that we are carrying out.",
        "Thus, we experimented with the TREC corpus which does not contain Web extralinguistic texts and it is more complex from a QA task viewpoint (it is more difficult to find a correct answer).",
        "Table 1 also shows the classification results on the TREC dataset.",
        "A comparative analysis suggests that: (a) the F1 of all models is much lower than for the Web dataset; (b) BOW shows the lowest accuracy (24.2) and also the accuracy of its combination with STK (30.3) is lower than the one of STK alone (33.1); (c) PSK (31.6) improves POS (26.5) information and PSK+STK (36.4) improves on PSK and STK; and (d) PAS adds further information as the best model is PSK+STK+SRK, which improves BOW from 24.2 to 39.1, i.e. 61%.",
        "Finally, it is worth noting that SRK provides a higher improvement (39.1-36.4) than SSTK (37.236.4).",
        "4.4 Precision/Recall Curves To better study the benefit of the proposed linguistic structures, we also plotted the Precision/Recall curves (one fold for each corpus).",
        "Figure 6 shows the curve of some interesting kernels applied to the Web dataset.",
        "As expected, BOW shows the lowest curves, although, its relevant contribution is evident.",
        "STK improves BOW since it provides a better model generalization by exploiting syntactic structures.",
        "Also, WSK can generate a more accurate model than BOW since it uses n-grams (with gaps) and when it is summed to STK, a very accurate model is obtained.",
        "Finally, WSK+STK+SRK improves all the models showing the potentiality of PASs.",
        "Such curves show that there is no superior model.",
        "This is caused by the high contribution of BOW, which de-emphasize all the other mod-els's result.",
        "In this perspective, the results on TREC are more interesting as shown by Figure 7 since the contribution of BOW is very low making the difference in accuracy with the other linguistic models more evident.",
        "PSK+STK+SRK, which encodes the most advanced syntactic and semantic information, shows a very high curve which outperforms all the others.",
        "The analysis of the above results suggests that: first as expected, BOW does not prove very relevant to capture the relations between short texts from examples.",
        "In the QA classification, while BOW is useful to establish the initial ranking by measuring the similarity between question and answer, it is almost irrelevant to capture typical rules suggesting if a description is valid or not.",
        "Indeed, since test questions are not in the training set, their words as well as those of candidate answers will be different, penalizing BOW models.",
        "In these conditions, we need to rely on syntactic structures which at least allow for detecting well formed descriptions.",
        "Second, the results show that STK is important to detect typical description patterns but also POS sequences provide additional information since they are less sparse than tree fragments.",
        "Such patterns improve on the bag of POS-tags by about 6% (see POS vs PSK).",
        "This is a relevant result considering that in standard text classification bigrams or trigrams are usually ineffective.",
        "Third, although PSK+STK generates a very rich feature set, SRK significantly improves the classification F1 by about 3%, suggesting that shallow semantics can be very useful to detect if an answer is well formed and is related to a question.",
        "Error analysis revealed that PAS can provide patterns like:",
        "where X and Y need not necessarily be matched.",
        "Finally, the best model, PSK+STK+SRK, improves on BOW by 61%.",
        "This is strong evidence that complex natural language tasks require advanced linguistic information that should be exploited by powerful algorithms such as SVMs and using effective feature engineering techniques such as kernel methods."
      ]
    },
    {
      "heading": "5. Conclusion",
      "text": [
        "In this paper, we have studied several types of syntactic/semantic information: bag-of-words (BOW), bag-of-POS tags, syntactic parse trees and predicate argument structures (PASs), for the design of short text pair classifiers.",
        "Our learning framework is constituted by Support Vector Machines (SVMs) and kernel methods applied to automatically generated syntactic and semantic structures.",
        "In particular, we designed (i) a new Semantic Role Kernel (SRK) based on a very fast algorithm; (ii) a new sequence kernel over POS tags to encode shallow syntactic information; (iii) many kernel combinations (to our knowledge no previous work uses so many different kernels) which allow for the study of the role of several linguistic levels in a well defined statistical framework.",
        "The results on two different question/answer classification corpora suggest that (a) SRK for processing PASs is more efficient and effective than previous models, (b) kernels based on PAS, POStag sequences and syntactic parse trees improve on BOW on both datasets and (c) on the TREC data the improvement is remarkably high, e.g. about 61%.",
        "Promising future work concerns the definition of a kernel on the entire argument information (e.g. by means of lexical similarity between all the words of two arguments) and the design of a discourse kernel to exploit the relational information gathered from different sentence pairs.",
        "A closer relationship between questions and answers can be exploited with models presented in (Moschitti and Zanzotto, 2007; Zanzotto and Moschitti, 2006).",
        "Also the use of PAS derived from FrameNet and PropBank (Giuglea and Moschitti, 2006) appears to be an interesting research line."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "I would like to thank Silvia Quarteroni for her work on extracting linguistic structures.",
        "This work has been partially supported by the European Commission - LUNA project, contract n. 33549."
      ]
    }
  ]
}
