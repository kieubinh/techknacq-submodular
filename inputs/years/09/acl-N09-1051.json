{
  "info": {
    "authors": [
      "Stanley F. Chen"
    ],
    "book": "HLT-NAACL",
    "id": "acl-N09-1051",
    "title": "Performance Prediction for Exponential Language Models",
    "url": "https://aclweb.org/anthology/N09-1051",
    "year": 2009
  },
  "references": [
    "acl-J92-4003",
    "acl-N04-1039",
    "acl-W03-1018"
  ],
  "sections": [
    {
      "text": [
        "IBM T.J. Watson Research Center P.O.",
        "We investigate the task of performance prediction for language models belonging to the exponential family.",
        "First, we attempt to empirically discover a formula for predicting test set cross-entropy for n-gram language models.",
        "We build models over varying domains, data set sizes, and n-gram orders, and perform linear regression to see whether we can model test set performance as a simple function of training set performance and various model statistics.",
        "Remarkably, we find a simple relationship that predicts test set performance with a correlation of 0.9997.",
        "We analyze why this relationship holds and show that it holds for other exponential language models as well, including class-based models and minimum discrimination information models.",
        "Finally, we discuss how this relationship can be applied to improve language model performance."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "In this paper, we investigate the following question for language models belonging to the exponential family: given some training data and test data drawn from the same distribution, can we accurately predict the test set performance of a model estimated from the training data?",
        "This problem is known as performance prediction and is relevant for model selection, the task of selecting the best model from a set of candidate models given data.",
        "Let us first define some notation.",
        "Events have the form (x, y), where we attempt to predict the current word y given previous words x.",
        "We denote the training data as V = (xi, yi),..., (xD, yD) and define p(x,y) = countD(x,y)/D to be the empirical distribution of the training data.",
        "Similarly, we have a test set V* and an associated empirical distribution p*(x, y).",
        "We take the performance of a conditional language model p(y |x) to be the cross-entropy H(p*,p) between the empirical test distribution p* and the model p(y| x):",
        "This is equivalent to the negative mean log-likelihood per event, as well as to log perplexity.",
        "We only consider models in the exponential family.",
        "An exponential model pA(y|x) is a model with a set of features {f1(x, y),..., fF (x, y)} and equal number of parameters A = {A1;...,AF } where and where Za (x) is a normalization factor.",
        "One of the seminal methods for performance prediction is the Akaike Information Criterion (AIC) (Akaike, 1973).",
        "For a model, let A be the maximum likelihood estimate of A on some training data.",
        "Akaike derived the following estimate for the expected value of the test set cross-entropy H(p*,PA ):",
        "H(p,pa) is the cross-entropy of the training set, F is the number of parameters in the model, and D is the number of events in the training data.",
        "However, maximum likelihood estimates for language models typically yield infinite cross-entropy on test data, and thus AIC behaves poorly for these domains.",
        "In this work, instead of deriving a performance prediction relationship theoretically, we attempt to empirically discover a formula for predicting test performance.",
        "Initially, we consider only n-gram language models, and build models over varying domains, data set sizes, and n-gram orders.",
        "We perform linear regression to discover whether we can model test set cross-entropy as a simple function of training set cross-entropy and other model statistics.",
        "For the 200+ n-gram models we evaluate, we find that the empirical relationship holds with a correlation of 0.9997 where 7 is a constant and where A = {Aj} are regularized parameter estimates; i.e., rather than estimating performance for maximum likelihood models as in AIC, we do this for regularized models.",
        "In other words, test set cross-entropy can be approximated by the sum of the training set cross-entropy and the scaled sum of the magnitudes of the model parameters.",
        "To maximize the correlation achieved by eq.",
        "(4), we find that it is necessary to use the same regularization method and regularization hyperparameters across models and that the optimal value of 7 depends on the values of the hyperparameters.",
        "Consequently, we first evaluate several types of regularization and find which of these (and which hyperparameter values) work best across all domains, and use these values in all subsequent experiments.",
        "While £?",
        "; regularization gives the best performance reported in the literature for n-gram models, we find here that l1 + l| regularization works even better.",
        "The organization of this paper is as follows: In Section 2, we evaluate various regularization techniques for n-gram models and select the method and hyperparameter values that give the best overall performance.",
        "In Section 3, we discuss experiments to find a formula for predicting n-gram model performance, and provide an explanation for why eq.",
        "(4) works so well.",
        "In Section 4, we evaluate how well eq.",
        "(4) holds for several class-based language models and minimum discrimination information models.",
        "Finally, in Sections 5 and 6 we discuss related work and conclusions."
      ]
    },
    {
      "heading": "2. Selecting Regularization Settings",
      "text": [
        "In this section, we address the issue of how to perform regularization in our later experiments.",
        "Following the terminology of Dudik and Schapire (2006), the most widely-used and effective methods for regularizing exponential models are li regularization (Tibshirani, 1994; Kazama and Tsujii, 2003;",
        "Table 1: Statistics of data sets.",
        "RH = Random House dictionary; WSJ = Wall Street Journal; BN = Broadcast News; SWB = Switchboard.",
        "Goodman, 2004) and l2 regularization (Lau, 1994; Chen and Rosenfeld, 2000; Lebanon and Lafferty, 2001).",
        "While not as popular, another regularization scheme that has been shown to be effective is 2-norm inequality regularization (Kazama and Tsujii, 2003) which is an instance of l1 +l| regularization as noted by Dudik and Schapire (2006).",
        "Under l1 +l\\ regularization, the regularized parameter estimates A are chosen to optimize the objective function",
        "Note that l1 regularization can be considered a special case of this (by taking a = to) as can l\\ regularization (by taking a = 0).",
        "Here, we evaluate l1 , l , and l1 + l regularization for exponential n-gram models.",
        "An exponential n-gram model contains a binary feature /w for each n'-gram uj occurring in the training data for n' < n, where /(x,y) = 1 iff xy ends in u.",
        "We would like to find the regularization method and associated hyperparameters that work best across different domains, training set sizes, and n-gram orders.",
        "As it is computationally expensive to evaluate a large number of hyperparameter settings over a large collection of models, we divide this search into two phases.",
        "First, we evaluate a large set of hyperparameters on a limited set of models to come up with a short list of candidate hyperparameters.",
        "We then evaluate these candidates on our full model set to find the best one.",
        "We build n-gram models over data from five different sources and consider three different vocabulary sizes for one source, giving us seven \"domains\" in total.",
        "We refer to these domains by the letters AG; summary statistics for each domain are given in Table 1.",
        "The domains C-G consist of regular word data, while domains A and B consist of letter and part-of-speech (POS) sequences, respectively.",
        "Domains C-E differ only in vocabulary.",
        "data",
        "token",
        "range",
        "training",
        "voc.",
        "source",
        "type",
        "of n",
        "sents.",
        "size",
        "A",
        "RH",
        "letter",
        "2-7",
        "100-75k",
        "27",
        "B",
        "WSJ",
        "POS",
        "2-7",
        "100-30k",
        "45",
        "C",
        "WSJ",
        "word",
        "2-5",
        "100-100k",
        "300",
        "D",
        "WSJ",
        "word",
        "2-5",
        "100-100k",
        "3k",
        "E",
        "WSJ",
        "word",
        "2-5",
        "100-100k",
        "21k",
        "F",
        "BN",
        "word",
        "2-5",
        "100-100k",
        "84k",
        "G",
        "SWB",
        "word",
        "2-5",
        "100-100k",
        "19k",
        "For each domain, we first randomize the order of sentences in that data.",
        "We partition off two development sets and an evaluation set (5000 \"sentences\" each in domain A and 2500 sentences elsewhere) and use the remaining data as training data.",
        "In this way, we assure that our training and test data are drawn from the same distribution as is assumed in our later experiments.",
        "Training set sizes in sentences are 100, 300, 1000, 3000, etc., up to the maximums given in Table 1.",
        "Building models for each training set size and n-gram order in Table 1 gives us a total of 218 models over the seven domains.",
        "In the first phase of hyperparameter search, we choose a subset of these models (57 total) and evaluate many different values for (a, a) with £\\ regularization on each.",
        "We perform a grid search, trying each value a G {0.0,0.1,0.2,..., 1.2} with each value a G {1,1.2,1.5, 2, 2.5, 3, 4, 5, 6, 7, 8,10, to} where a = to corresponds to l\\ regularization and a = 0 corresponds to i, regularization.",
        "We use a variant of iterative scaling for parameter estimation.",
        "For each model and each (a, a), we denote the cross-entropy of the development data as H™afor the mth model, m G {1,..., 57}.",
        "Then, for each m and (a, a), we can compute how much worse the settings (a, a) perform with model m as compared to the best hyperparameter settings for that model:",
        "We would like to select (a, a) for which HH™^ tends to be small; in particular, we choose (a, a) that minimizes the root mean squared (RMS) error",
        "For each of ii, ^2, and i\\ + ^2 regularization, we retain the 6-8 best hyperparameter settings.",
        "To choose the best single hyperparameter setting from within this candidate set, we repeat the same analysis except over the full set of 218 models.",
        "statistic",
        "Dj e i=i m",
        "RMSE coeff.",
        "Table 2: Root mean squared error (RMSE) in nats when predicting difference in development set and training set cross-entropy as linear function of a single statistic.",
        "The last column is the optimal coefficient for that statistic.",
        "On the development sets, the (a, a) value with the lowest squared error is (0.5, 6), and these are the hyperparameter settings we use in all later experiments unless otherwise noted.",
        "The RMS error, mean error, and maximum error for these hyperparameters on the evaluation sets are 0.011, 0.007, and 0.033 nats, respectively.",
        "An error of 0.011 nats corresponds to a 1.1% difference in perplexity which is generally considered insignificant.",
        "Thus, we can achieve good performance across domains, data set sizes, and n-gram orders using a single set ofhyper-parameters as compared to optimizing hyperparameters separately for each model."
      ]
    },
    {
      "heading": "3. N Gram Model Performance Prediction",
      "text": [
        "Now that we have established which regularization method and hyperparameters to use, we attempt to empirically discover a simple formula for predicting the test set cross-entropy of regularized n-gram models.",
        "The basic strategy is as follows: We first build a large number of n-gram models over different domains, training set sizes, and n-gram orders.",
        "Then, we come up with a set of candidate statistics, e.g., training set cross-entropy, number of features, etc., and do linear regression to try to best model test",
        "Figure 1: Graph of optimism on evaluation data vs. D eF=l |Àj| for various n-gram models under ^l + ^ regularization, a = O.5 and a = 6.",
        "The line represents the predicted optimism according to eq.",
        "(9) with",
        "O.93S.",
        "set cross-entropy as a linear function of these statistics.",
        "We assume that training and test data come from the same distribution; otherwise, it would be difficult to predict test performance.",
        "We use the same 218 n-gram models as in Section 2.",
        "For each model, we compute training set cross-entropy H(p,pA) as well as all of the statistics listed on the left in Table 2.",
        "The statistics D, are motivated by AIC, AICc (Hurvich and Tsai, 1989), and the Bayesian Information Criterion (Schwarz, 1978), respectively.",
        "As features / with Aj = 0 have no effect, instead of F we also consider using F=0, the number of features /j with Aj = 0.",
        "The statistics D Ei=1 A and D Ei=1 A are motivated by eq.",
        "(5).",
        "The statistics with fractional exponents are suggested by Figure 2.",
        "The value 1 is present to handle constant offsets.",
        "After some initial investigation, it became clear that training set cross-entropy is a very good (partial) predictor of test set cross-entropy with coefficient 1.",
        "As there is ample theoretical support for this, instead of fitting test set performance directly, we chose to model the difference between test and training performance as a function of the remaining statistics.",
        "This difference is sometimes referred to as the optimism of a model:",
        "First, we attempt to model optimism as a linear function of a single statistic.",
        "For each statistic listed previously, we perform linear regression to minimize root mean squared error when predicting development set optimism.",
        "In Table 2, we display the RMSE and best coefficient for each statistic.",
        "We see that three statistics have by far the lowest error: DEi=1 |Aii D Ej:A,>o ^ and D E»=1 Aj.",
        "In practice, most Aj in n-gram models are positive, so these statistics tend to have similar values.",
        "We choose the best ranked of these, D E»=11Aj |, and show in Section 3.1 why this statistic is more appealing than the others.",
        "Next, we investigate modeling optimism as a linear function of a pair of statistics.",
        "We find that the best RMSE for two variables (0.042) is only slightly lower than that for one (0.043), so it is doubtful that a second variable helps.",
        "Thus, our analysis suggests that among our candidates, the best predictor of optimism is simply optimism « – ^ |À.",
        "where 7 = 0.938, with this value being independent of domain, training set size, and n-gram order.",
        "In other words, the difference between test and training cross-entropy is a linear function of the sum of parameter magnitudes scaled per event.",
        "Substituting into eq.",
        "(8) and rearranging, we get eq.",
        "(4).",
        "To assess the accuracy ofeq.",
        "(4), we compute various statistics on our evaluation sets using the best 7 from our development data, i.e., 7 = 0.938.",
        "In Figure 1, we graph optimism for the evaluation data against D E»=11Aj | for each of our models; we see that the linear correlation is very good.",
        "The correlation between the actual and predicted cross-entropy on the evaluation data is 0.9997; the mean absolute prediction error is 0.030 nats; the RMSE is 0.043 nats; and the maximum absolute error is 0.166 nats.",
        "Thus, on average we can predict test performance to within 3% in perplexity, though in the worst case we may be off by as much as 18%.",
        ".",
        "Figure 2: Smoothed graph of discount versus Ai for all features in ten different models built on domains A and E. Eachsmoothed pointrepresents the average ofatleast 512 raw data points.",
        "If we compute the prediction error of eq.",
        "(4) over the same models except using l1 or l2 regularization (with the best corresponding hyperparameter values found in Section 2), the prediction RMSE is 0.054 and 0.139 nats, respectively.",
        "Thus, we find thatchoosing hyperparameters carefully in Section2 was important in doing well in performance prediction.",
        "While hyperparameters were chosen to optimize test performance rather than prediction accuracy, we find that the chosen hyperparameters are favorable for the latter task as well.",
        "The correlation in Figure 1 is remarkably high, and thus it begs for an explanation.",
        "First, let us express the difference in test and training cross-entropy for a model in terms of its parameters A.",
        "Substituting eq.",
        "(2) into eq.",
        "(1), we get where Ep*[/j] = Ex,yp*(x,y)/j(x,y).",
        "Then, we can express the difference in test and training performance as",
        "H(p*,pa) - H(p,pa) = E,F=i Ai(Ep[/i] - Ep.",
        "be mitigated by simply using larger test sets.",
        "Ignoring the last term on the right, we see that optimism for exponential models is a linear function of the Aj's with coefficients Ep/] – Ep* [/j].",
        "Then, we can ask what – Ep* [/jj values would let us satisfy eq.",
        "(4).",
        "Consider the relationship",
        "If we substitute this into eq.",
        "(11) and ignore the last term on the right again, this gives us exactly eq.",
        "(4).",
        "We refer to the value (Ep/ – Ep* [/j]) x D as the discount of a feature.",
        "It can be thought of as representing how many times less the feature occurs in the test data as opposed to the training data, if the test data were normalized to be the same size as the training data.",
        "Discounts for n-grams have been studied extensively, e.g., (Good, 1953; Church and Gale, 1991; Chen and Goodman, 1998), and tend not to vary much across training set sizes.",
        "We can check how well eq.",
        "(12) holds for actual regularized n-gram models.",
        "We construct a total of ten n-gram models on domains A and E. We build four letter 5-gram models on domain A on training sets ranging in size from 100 words to 30k words, and six models (either trigram or 5-gram) on domain E on training sets ranging from 100 sentences to 30k sentences.",
        "We create large development test sets (45k words for domain A and 70k sentences for domain E) to better estimate Ep*",
        "Because graphs of discounts as a function of Aj are very noisy, we smooth the data before plotting.",
        "We partition data points into buckets containing at least 512 points.",
        "We average all of the points in each bucket to get a \"smoothed\" data point, and plot this single point for each bucket.",
        "In Figure 2, we plot smoothed discounts as a function of Aj over the range Aj G [ – 1,4] for all ten models.",
        "We see that eq.",
        "(12) holds at a very rough level over the Aj range displayed.",
        "If we examine how much different ranges of Aj contribute to the overall value of EF=1 Aj(Ep[/j] – Ep* [/j]), we find that the great majority of the mass (90-95%+) is concentrated in the range Aj G [0, 4] for all ten models under consideration.",
        "Thus, to a first approximation, the reason that eq.",
        "(4) holds with 7 = 0.938 is because on average, feature expectations have a discount of about this value for Aj in this range.",
        "-",
        "0-.. -",
        "-",
        "- •",
        "-",
        ".",
        "Figure 3: Graph of optimism on evaluation data vs. D eF=1 |Ài| for various models.",
        "The '+' marks correspond to models S, M, and L over different training set sizes, n-gram orders, and numbers of classes.",
        "The ' x ' marks correspond to MDI models over different n-gram orders and in-domain training set sizes.",
        "The line and small points are taken from Figure 1.",
        "Due to space considerations, we only summarize our other findings; a longer discussion is provided in (Chen, 2008).",
        "We find that the absolute error in cross-entropy tends to be quite small across models for several reasons.",
        "For non-sparse models, there is significant variation in average discounts, but because dD zli=i IM is low, the overall error is low.",
        "In contrast, sparse models are dominated by single-count n-grams with features whose average discount is quite close to 7 = 0.938.",
        "Finally, the last term on the right in eq.",
        "(11) also plays a small but significant role in keeping the prediction error low."
      ]
    },
    {
      "heading": "4. Other Exponential Language Models",
      "text": [
        "In (Chen, 2009), we show how eq.",
        "(4) can be used to motivate a novel class-based language model and a regularized version of minimum discrimination information (MDI) models (Della Pietra et al., 1992).",
        "In this section, we analyze whether in addition to word n-gram models, eq.",
        "(4) holds for these other exponential language models as well.",
        "won't hold.",
        "For example, if a feature function fi is doubled, its expectations and discount will also double.",
        "Thus, eq.",
        "(4) won't hold in general for models with continuous feature values, as average discounts may vary widely.",
        "We assume a word w is always mapped to the same class c(w).",
        "For a sentence w1 • • • wj, we have where c, = c(wj) and where c1+1 is an end-of-sentence token.",
        "We use the notation png(y|w) to denote an exponential n-gram model as defined in Section 2, where we have features for each suffix of each wy occurring in the training set.",
        "We use the notation png(y|w1, w2) to denote a model containing all features in the models png(y|w1) and png(y|w2).",
        "We consider three class models, models S, M, and L, defined as",
        "Model S is an exponential version ofthe class-based n-gram model from (Brown et al., 1992); model M is a novel model introduced in (Chen, 2009); and model L is an exponential version of the model ind-expredict from (Goodman, 2001).",
        "To evaluate whether eq.",
        "(4) can accurately predict test performance for these class-based models, we use the WSJ data and vocabulary from domain E and consider training set sizes of 1k, 10k, 100k, and 900k sentences.",
        "We create three different word classings containing 50, 150, and 500 classes using the algorithm of Brown et al.",
        "(1992) on the largest training set.",
        "For each training set and number of classes, we build both 3-gram and 4-gram versions of each of our three class models.",
        "In Figure 3, we plot optimism (i.e., test minus training cross-entropy) versus 7 Ei=1 l Aj| for these models (66 in total) on our WSJ evaluation set.",
        "The '+' marks correspond to our class n-gram models, while the small points replicate the points for word n-gram models from Figure 1.",
        "Remarkably, eq.",
        "(4) appears to accurately predict performance for our class n-gram models using the same 7 = 0.938 value found for word n-gram models.",
        "The mean absolute prediction error is 0.029 nats, comparable to that found for word n-gram models.",
        "It is interesting that eq.",
        "(4) works for class-based models despite their being composed of two submodels, one for word prediction and one for class prediction.",
        "However, taking the log of eq.",
        "(13), we note that the cross-entropy of text can be expressed as the sum of the cross-entropy of its word tokens and the cross-entropy of its class tokens.",
        "It would not be surprising if eq.",
        "(4) holds separately for the class prediction model predicting class data and the word prediction model predicting word data, since all of these component models are basically n-gram models.",
        "Summing, this explains why eq.",
        "(4) holds for the whole class model.",
        "Minimum discrimination information models (Della Pietra et al., 1992) are exponential models with a prior distribution q(y|x):",
        "The central issue in performance prediction for MDI models is whether q(y|x) needs to be accounted for.",
        "That is, if we assume q is an exponential model, should its parameters Aq be included in the sum in eq.",
        "(4)?",
        "From eq.",
        "(11), we note that if Ep/] – Ep* =0 for a feature /j, then the feature does not affect the difference between test and training cross-entropy (ignoring its impact on the last term).",
        "By assumption, the training and test set for p come from the same distribution while q is derived from an independent data set.",
        "It follows that we expect Ep[/j] – Ep* [/?]",
        "to be zero for features in q, and we should ignore q when applying eq.",
        "(4).",
        "To evaluate whether eq.",
        "(4) holds for MDI models, we use the same WSJ training and evaluation sets from domain E as in Section 4.1.",
        "We consider three different training set sizes: 1k, 10k, and 100k sentences.",
        "To train q, we use the 100k sentence BN training set from domain F. We build both trigram and 4-gram versions of each model.",
        "In Figure 3, we plot test minus training cross-entropy versus D zl»=1 | Aj | for these models on our WSJ evaluation set; the 'x' marks correspond to the MDI models.",
        "As expected, eq.",
        "(4) appears to work quite well for MDI models using the same 7 = 0.938 value as before; the mean absolute prediction error is 0.077 nats."
      ]
    },
    {
      "heading": "5. Related Work",
      "text": [
        "We group existing performance prediction methods into two categories: non-data-splitting methods and data-splitting methods.",
        "In non-data-splitting methods, test performance is directly estimated from training set performance and/or other statistics of a model.",
        "Data-splitting methods involve partitioning training data into a truncated training set and a surrogate test set and using surrogate test set performance to estimate true performance.",
        "The most popular non-data-splitting methods for predicting test set cross-entropy (or likelihood) are AIC and variants such as AICc, quasi-AIC (QAIC), and QAICc (Akaike, 1973; Hurvich and Tsai, 1989; Lebreton et al., 1992).",
        "In Section 3, we considered performance prediction formulae with the same form as AIC and AICc (except using regularized parameter estimates), and neither performed as well as eq.",
        "(4); e.g., see Table 2.",
        "There are many techniques for bounding test set classification error including the Occam's Razor bound (Blumer et al., 1987; McAllester, 1999), PAC-Bayes bound (McAllester, 1999), and the sample compression bound (Littlestone and Warmuth, 1986; Floyd and Warmuth, 1995).",
        "These methods derive theoretical guarantees that the true error rate of a classifier will be below (or above) some value with a certain probability.",
        "Langford (2005) evaluates these techniques over many data sets; while the bounds can sometimes be fairly tight, in many data sets the bounds are quite loose.",
        "When learning an element from a set of target classifiers, the Vapnik-Chervonenkis (VC) dimension of the set can be used to bound the true error rate relative to the training error rate with some probability (Vapnik, 1998); this technique has been used to compute error bounds for many types of classifiers.",
        "For example, Bartlett (1998) shows that for a neural network with small weights and small training set squared error, the true error depends on the size of its weights rather than the number of weights; this finding is similar in spirit to eq.",
        "(4).",
        "In practice, the most accurate methods for performance prediction in many contexts are data-splitting methods (Guyon et al., 2006).",
        "These techniques include the holdout method; leave-one-out and k-fold cross-validation; and bootstrapping (Allen, 1974; Stone, 1974; Geisser, 1975; Craven and Wahba, 1979; Efron, 1983).",
        "However, unlike non-data-splitting methods, these methods do not lend themselves well to providing insight into model design as discussed in Section 6."
      ]
    },
    {
      "heading": "6. Discussion",
      "text": [
        "We show that for several types of exponential language models, it is possible to accurately predict the cross-entropy of test data using the simple relationship given in eq.",
        "(4).",
        "When using ^1 + i?, regularization with (a = 0.5, a = 6), the value 7 = 0.938 works well across varying model types, domains, vocabulary sizes, training set sizes, and n-gram orders, yielding a mean absolute error of about 0.03 nats (3% in perplexity).",
        "We evaluate ~300 language models in total, including word and class n-gram models and n-gram models with prior distributions.",
        "While there has been a great deal of work in performance prediction, the vast majority of work on non-data-splitting methods has focused on finding theoretically-motivated approximations or probabilistic bounds on test performance.",
        "In contrast, we developed eq.",
        "(4) on a purely empirical basis, and there has been little, if any, existing work that has shown comparable performance prediction accuracy over such a large number of models and data sets.",
        "In addition, there has been little, if any, previous work on performance prediction for language modeling.",
        "While eq.",
        "(4) performs well as compared to other non-data-splitting methods for performance prediction, the prediction error can be several percent in perplexity, which means we cannot reliably rank models that are close in quality.",
        "In addition, in speech recognition and many other applications, an external test set is typically provided, which means we can measure test set performance directly.",
        "Thus, in practice, eq.",
        "(4) is not terribly useful for the task of model selection; instead, what eq.",
        "(4) gives us is insight into model design.",
        "That is, instead of selecting between candidate models once they have been built as in model selection, it is desirable to be able to select between models at the model design stage.",
        "Being able to intelligently compare models (without implementation) requires that we know which aspects of a model impact test performance, and this is exactly what eq.",
        "(4) tells us.",
        "Intuitively, simpler models should perform better on test data given equivalent training performance, and model structure (as opposed to parameter values) is an important aspect of the complexity of a model.",
        "Accordingly, there have been many methods for model selection that measure the size of a model in terms of the number of features or parameters in the model, e.g., (Akaike, 1973; Rissanen, 1978; Schwarz, 1978).",
        "Surprisingly, for exponential language models, the number of model parameters seems to matter not at all; all that matters are the magnitudes of the parameter values.",
        "Consequently, one can improve such models by adding features (or a prior model) that reduce parameter values while maintaining training performance.",
        "In (Chen, 2009), we show how these ideas can be used to motivate heuristics for improving the performance of existing language models, and use these heuristics to develop a novel class-based model and a regularized version of MDI models that outperform comparable methods in both perplexity and speech recognition word-error rate on WSJ data.",
        "In addition, we show how the tradeoff between training set performance and model size impacts aspects of language modeling as diverse as backoff n-gram features, class-based models, and domain adaptation.",
        "In sum, eq.",
        "(4) provides a new and valuable framework for characterizing, analyzing, and designing statistical models."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "We thank Bhuvana Ramabhadran and the anonymous reviewers for their comments on this and earlier versions ofthe paper."
      ]
    }
  ]
}
