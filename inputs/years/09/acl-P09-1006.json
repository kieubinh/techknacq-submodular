{
  "info": {
    "authors": [
      "Zhengyu Niu",
      "Haifeng Wang",
      "Hua Wu"
    ],
    "book": "ACL-IJCNLP",
    "id": "acl-P09-1006",
    "title": "Exploiting Heterogeneous Treebanks for Parsing",
    "url": "https://aclweb.org/anthology/P09-1006",
    "year": 2009
  },
  "references": [
    "acl-A00-2018",
    "acl-C02-1126",
    "acl-D08-1092",
    "acl-H01-1014",
    "acl-I05-1007",
    "acl-J93-2004",
    "acl-N03-1027",
    "acl-N06-1020",
    "acl-N07-1051",
    "acl-P03-1056",
    "acl-P05-1022",
    "acl-P06-1043",
    "acl-P06-1054",
    "acl-P07-1078",
    "acl-P94-1034",
    "acl-P99-1065",
    "acl-W00-1201",
    "acl-W01-0904"
  ],
  "sections": [
    {
      "text": [
        "Zheng-Yu Niu, Haifeng Wang, Hua Wu",
        "Toshiba (China) Research and Development Center 5/F., Tower W2, Oriental Plaza, Beijing, 100738, China",
        "{niuzhengyu,wanghaifeng,wuhua}@rdc.toshiba.com.cn",
        "We address the issue of using heterogeneous treebanks for parsing by breaking it down into two sub-problems, converting grammar formalisms of the treebanks to the same one, and parsing on these homogeneous treebanks.",
        "First we propose to employ an iteratively trained target grammar parser to perform grammar formalism conversion, eliminating predefined heuristic rules as required in previous methods.",
        "Then we provide two strategies to refine conversion results, and adopt a corpus weighting technique for parsing on homogeneous treebanks.",
        "Results on the Penn Treebank show that our conversion method achieves 42% error reduction over the previous best result.",
        "Evaluation on the Penn Chinese Treebank indicates that a converted dependency treebank helps constituency parsing and the use of unlabeled data by self-training further increases parsing f-score to 85.2%, resulting in 6% error reduction over the previous best result."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "The last few decades have seen the emergence of multiple treebanks annotated with different grammar formalisms, motivated by the diversity of languages and linguistic theories, which is crucial to the success of statistical parsing (Abeille et al., 2000; Brants et al., 1999; Bohmova et al., 2003;",
        "Marcus et al., 1993; Moreno et al., 2003; Xue et al., 2005).",
        "Availability of multiple treebanks creates a scenario where we have a treebank annotated with one grammar formalism, and another treebank annotated with another grammar formalism that we are interested in.",
        "We call the first a source treebank, and the second a target treebank.",
        "We thus encounter a problem of how to use these heterogeneous treebanks for target grammar parsing.",
        "Here heterogeneous treebanks refer to two or more treebanks with different grammar formalisms, e.g., one treebank annotated with dependency structure (DS) and the other annotated with phrase structure (PS).",
        "It is important to acquire additional labeled data for the target grammar parsing through exploitation of existing source treebanks since there is often a shortage of labeled data.",
        "However, to our knowledge, there is no previous study on this issue.",
        "Recently there have been some works on using multiple treebanks for domain adaptation of parsers, where these treebanks have the same grammar formalism (McClosky et al., 2006b; Roark and Bacchiani, 2003).",
        "Other related works focus on converting one grammar formalism of a treebank to another and then conducting studies on the converted treebank (Collins et al., 1999; Forst, 2003; Wang et al., 1994; Watkinson and Manand-har, 2001).",
        "These works were done either on multiple treebanks with the same grammar formalism or on only one converted treebank.",
        "We see that their scenarios are different from ours as we work with multiple heterogeneous treebanks.",
        "For the use of heterogeneous treebanks, we propose a two-step solution: (1) converting the grammar formalism of the source treebank to the target one, (2) refining converted trees and using them as additional training data to build a target grammar parser.",
        "For grammar formalism conversion, we choose the DS to PS direction for the convenience of the comparison with existing works (Xia and Palmer, 2001; Xia et al., 2008).",
        "Specifically, we assume that the source grammar formalism is dependency grammar, and the target grammar formalism is phrase structure grammar.",
        "Previous methods for DS to PS conversion",
        "Palmer, 2001; Xia et al., 2008) often rely on predefined heuristic rules to eliminate converison ambiguity, e.g., minimal projection for dependents, lowest attachment position for dependents, and the selection of conversion rules that add fewer number of nodes to the converted tree.",
        "In addition, the validity of these heuristic rules often depends on their target grammars.",
        "To eliminate the heuristic rules as required in previous methods, we propose to use an existing target grammar parser (trained on the target treebank) to generate N-best parses for each sentence in the source treebank as conversion candidates, and then select the parse consistent with the structure of the source tree as the converted tree.",
        "Furthermore, we attempt to use converted trees as additional training data to retrain the parser for better conversion candidates.",
        "The procedure of tree conversion and parser retraining will be run iteratively until a stopping condition is satisfied.",
        "Since some converted trees might be imperfect from the perspective of the target grammar, we provide two strategies to refine conversion results: (1) pruning low-quality trees from the converted treebank, (2) interpolating the scores from the source grammar and the target grammar to select better converted trees.",
        "Finally we adopt a corpus weighting technique to get an optimal combination of the converted treebank and the existing target treebank for parser training.",
        "We have evaluated our conversion algorithm on a dependency structure treebank (produced from the Penn Treebank) for comparison with previous work (Xia et al., 2008).",
        "We also have investigated our two-step solution on two existing treebanks, the Penn Chinese Treebank (CTB) (Xue et al., 2005) and the Chinese Dependency Treebank (CDT) (Liu et al., 2006).",
        "Evaluation on WSJ data demonstrates that it is feasible to use a parser for grammar formalism conversion and the conversion benefits from converted trees used for parser retraining.",
        "Our conversion method achieves 93.8% f-score on dependency trees produced from WSJ section 22, resulting in 42% error reduction over the previous best result for DS to PS conversion.",
        "Results on CTB show that score interpolation is more effective than instance pruning for the use of converted treebanks for parsing and converted CDT helps parsing on CTB.",
        "When coupled with self-training technique, a reranking parser with CTB and converted CDT as labeled data achieves improvement (6% error reduction) over the previous best result for Chinese parsing.",
        "The rest of this paper is organized as follows.",
        "In Section 2, we first describe a parser based method for DS to PS conversion, and then we discuss possible strategies to refine conversion results, and finally we adopt the corpus weighting technique for parsing on homogeneous treebanks.",
        "Section 3 provides experimental results of grammar formalism conversion on a dependency treebank produced from the Penn Treebank.",
        "In Section 4, we evaluate our two-step solution on two existing heterogeneous Chinese treebanks.",
        "Section 5 reviews related work and Section 6 concludes this work."
      ]
    },
    {
      "heading": "2. Our Two-Step Solution",
      "text": [
        "Previous DS to PS conversion methods built a converted tree by iteratively attaching nodes and edges to the tree with the help of conversion rules and heuristic rules, based on current head-dependent pair from a source dependency tree and the structure of the built tree (Collins et al., 1999; Covington, 1994; Xia and Palmer, 2001; Xia et al., 2008).",
        "Some observations can be made on these methods: (1) for each head-dependent pair, only one locally optimal conversion was kept during tree-building process, at the risk of pruning globally optimal conversions, (2) heuristic rules are required to deal with the problem that one head-dependent pair might have multiple conversion candidates, and these heuristic rules are usually hand-crafted to reflect the structural preference in their target grammars.",
        "To overcome these limitations, we propose to employ a parser to generate N-best parses as conversion candidates and then use the structural information of source trees to select the best parse as a converted tree.",
        "We formulate our conversion method as follows.",
        "Let CDS be a source treebank annotated with DS and CPS be a target treebank annotated with PS.",
        "Our goal is to convert the grammar formalism of CDS to that of CPS.",
        "We first train a constituency parser on CPS Input: CPS, CPS, Q, and a constituency parser Output: Converted trees CpS"
      ]
    },
    {
      "heading": "1.. Initialize:",
      "text": [
        " – Split CPS into training set CPSttrain and development set CPSydev; – Train the parser on CPS}train and denote it by Pq-1;"
      ]
    },
    {
      "heading": "2.. Repeat:",
      "text": [
        " – Use Pq-i to generate N-best PS parses for each sentence in CPS, and convert PS to DS for each parse; – For each sentence in CPS Do o i=argmaxtScore(xi}t), and select the t-th parse as a converted tree for this sentence; – Let CpDSS'q represent these converted trees, and let Ctrain=CpS,train\\J CppSS'q; – Train the parser on Ctrain, and denote the updated parser by Pq; – Let DevScoreq be the f-score of Pq on CPS}dev; – If DevScoreq > DevScore Then DevScore=DevScoreq, and CpSS=ClpS'q; – Else break; (90% trees in CPS as training set CPS,train, and other trees as development set CPSydev) and then let the parser generate N-best parses for each sentence in CpS.",
        "Let n be the number of sentences (or trees) in CpS and ni be the number of N-best parses generated by the parser for the i-th (1 < i < n) sentence in CPS.",
        "Let xi,t be the t-th (1 < t < ni) parse for the i-th sentence.",
        "Let yi be the tree of the i-th (1 < i < n) sentence in CpS.",
        "To evaluate the quality of xi,t as a conversion candidate for yi, we convert xi, t to a dependency tree (denoted as xptS) and then use unlabeled dependency f-score to measure the similarity between xptS and yi.",
        "Let Score(xitt) denote the unlabeled dependency f-score of xiptS against yi.",
        "Then we determine the converted tree for yi by maximizing Score(xi,t) over the N-best parses.",
        "The conversion from PS to DS works as follows:",
        "Step 1.",
        "Use a head percolation table to find the head of each constituent in xi t.",
        "Step 2.",
        "Make the head of each non-head child depend on the head of the head child for each constituent.",
        "Unlabeled dependency f-score is a harmonic mean of unlabeled dependency precision and unla-beled dependency recall.",
        "Precision measures how many head-dependent word pairs found in xiptSare correct and recall is the percentage of head-dependent word pairs defined in the gold-standard tree that are found in xptS.",
        "Here we do not take dependency tags into consideration for evaluation since they cannot be obtained without more sophisticated rules.",
        "To improve the quality of N-best parses, we attempt to use the converted trees as additional training data to retrain the parser.",
        "The procedure of tree conversion and parser retraining can be run iteratively until a termination condition is satisfied.",
        "Here we use the parser's f-score on CPSddev as a termination criterion.",
        "If the update of training data hurts the performance on CPSddev, then we stop the iteration.",
        "Table 1 shows this DS to PS conversion algorithm.",
        "Q is an upper limit of the number of loops, and Q > 0.",
        "Through grammar formalism conversion, we have successfully turned the problem of using heterogeneous treebanks for parsing into the problem of parsing on homogeneous treebanks.",
        "Before using converted source treebank for parsing, we present two strategies to refine conversion results.",
        "Instance Pruning For some sentences in CpS, the parser might fail to generate high quality N-best parses, resulting in inferior converted trees.",
        "To clean the converted treebank, we can remove the converted trees with low unlabeled dependency f-scores (defined in Section 2.1) before using the converted treebank for parser training",
        "Figure 1: A parse tree in CTB for a sentence of \" ti± #<world> #<every> Hl<country> A K<people> ^<all> ffi<with> g ^<eyes> S ^<cast> # $l<Hong Kong>\" with \"People from all over the world are casting their eyes on Hong Kong\" as its English translation.",
        "because these trees are \"misleading\" training instances.",
        "The number of removed trees will be determined by cross validation on development set.",
        "Score Interpolation Unlabeled dependency f-scores usedinSection 2.1 measurethequalityof converted trees from the perspective of the source grammar only.",
        "In extreme cases, the top best parses in the N-best list are good conversion candidates but we might select a parse ranked quite low in the N-best list since there might be conflicts of syntactic structure definition between the source grammar and the target grammar.",
        "Figure 1 shows an example for illustration of a conflict between the grammar of CDT and that of CTB.",
        "According to Chinese head percolation tables used in the PS to DS conversion tool",
        "\"Penn2Malt\" and Charniak's parser, the head of VP-2 is the word \" iJE \" (a preposition, with",
        "\"BA\" as its POS tag in CTB), and the head of IP-OBJ is S |rI \" .",
        "Therefore the word \" S IrJ \" depends on the word \" iJE \" .",
        "But according to the annotation scheme in CDT (Liu et al., 2006), the word \" ;JE \" is a dependent of the word \" S IrJ \" .",
        "The conflicts between the two grammars may lead to the problem that the selected parses based on the information of the source grammar might not be preferred from the perspective of the target grammar.",
        "Therefore we modified the selection metric in Section 2.1 by interpolating two scores, the probability of a conversion candidate from the parser and its unlabeled dependency f-score, shown as follows:",
        "Score(xi,t)",
        "The intuition behind this equation is that converted trees should be preferred from the perspective of both the source grammar and the target grammar.",
        "Here 0 < X < 1.",
        "Prob(xi11) is a probability produced by the parser for xi11 (0 < Prob(xi11) < 1).",
        "The value of X will be tuned by cross validation on development set.",
        "After grammar formalism conversion, the problem now we face has been limited to how to build parsing models on multiple homogeneous treebank.",
        "A possible solution is to simply concatenate the two treebanks as training data.",
        "However this method may lead to a problem that if the size of CPS is significantly less than that of converted CpS, converted CpS may weaken the effect CPS might have.",
        "One possible solution is to reduce the weight of examples from converted CpS in parser training.",
        "Corpus weighting is exactly such an approach, with the weight tuned on development set, that will be used for parsing on homogeneous treebanks in this paper."
      ]
    },
    {
      "heading": "3. Experiments of Grammar Formalism",
      "text": [
        "Conversion",
        "Xia et al.",
        "(2008) used WSJ section 19 from the Penn Treebank to extract DS to PS conversion rules and then produced dependency trees from WSJ section 22 for evaluation of their DS to PS conversion algorithm.",
        "They showed that their conversion algorithm outperformed existing methods on the WSJ data.",
        "For comparison with their work, we conducted experiments in the same setting as theirs: using WSJ section 19 (1844 sentences) as CPS, producing dependency trees from WSJ section 22 (1700 sentences) as CPS, and using labeled bracketing f-scores from the tool \"EVALB\" on WSJ section 22 for performance evaluation.",
        "(2008) on WSJ section 22.",
        "We employed Charniak's maximum entropy inspired parser (Charniak, 2000) to generate N-best (N=200) parses.",
        "Xia et al.",
        "(2008) used POS tag information, dependency structures and dependency tags in test set for conversion.",
        "Similarly, we used POS tag information in the test set to restrict search space of the parser for generation of better N-best parses.",
        "We evaluated two variants of our DS to PS conversion algorithm:",
        "Q-0-method: We set the value of Q as 0 for a baseline method.",
        "Q-10-method: We set the value of Q as 10 to see whether it is helpful for conversion to retrain the parser on converted trees.",
        "Table 2 shows the results of our conversion algorithm on WSJ section 22.",
        "In the experiment of Q-10-method, DevScore reached the highest value of 88.0% when q was 1.",
        "Then we used CPS' as the conversion result.",
        "Finally Q-10-method achieved an f-score of 93.8% on WSJ section 22, an absolute 4.4% improvement (42% error reduction) over the best result of Xia et al.",
        "(2008).",
        "Moreover, Q-10-method outperformed Q-0-method on the same test set.",
        "These results indicate that it is feasible to use a parser for DS to PS conversion and the conversion benefits from the use of converted trees for parser retraining.",
        "In this experiment we evaluated our conversion algorithm on a larger test set, WSJ section 2-18 and 20 – 22 (totally 39688 sentences).",
        "Here we also used WSJ section 19 as CPS.",
        "Other settings for",
        "Table 4: Results of the generative parser on the development set, when trained with various weighting of CTB training set and CDTPS.",
        "this experiment are as same as that in Section 3.1, except that here we used a larger test set.",
        "With Q-10-method, DevScore reached the highest value of 91.6% when q was 1.",
        "Finally Q-10-method achieved an f-score of 93.6% on WSJ section 2 – 18 and 20 – 22, better than that of Q-0-method and comparable with that of Q-10-method in Section 3.1.",
        "It confirms our previous finding that the conversion benefits from the use of converted trees for parser retraining."
      ]
    },
    {
      "heading": "4. Experiments of Parsing",
      "text": [
        "We investigated our two-step solution on two existing treebanks, CDT and CTB, and we used CDT as the source treebank and CTB as the target treebank.",
        "CDT consists of 60k Chinese sentences, annotated with POS tag information and dependency structure information (including 28 POS tags, and 24 dependency tags) (Liu et al., 2006).",
        "We did not use POS tag information as inputs to the parser in our conversion method due to the difficulty of conversion from CDT POS tags to CTB POS tags.",
        "We used a standard split of CTB for performance evaluation, articles 1-270 and 400-1151 as training set, articles 301-325 as development set, and articles 271-300 as test set.",
        "We used Charniak's maximum entropy inspired parser and their reranker (Charniak and Johnson, 2005) for target grammar parsing, called a generative parser (GP) and a reranking parser (RP) respectively.",
        "We reported ParseVal measures from the EVALB tool.",
        "All the sentences",
        "DevScore",
        "LR",
        "LP",
        "F",
        "Models",
        "(%)",
        "(%)",
        "(%)",
        "The best result of",
        "Xia et al.",
        "(2008)",
        "-",
        "90.7",
        "88.1",
        "89.4",
        "Q-0-method",
        "86.8",
        "92.2",
        "92.8",
        "92.5",
        "Q-10-method",
        "88.0",
        "93.4",
        "94.1",
        "93.8",
        "All the sentences",
        "LR",
        "LP",
        "F",
        "Training data",
        "(%)",
        "(%)",
        "(%)",
        "1 x CTB + CDTPS",
        "84.7",
        "85.1",
        "84.9",
        "2 x CTB + CDTPS",
        "85.1",
        "85.6",
        "85.3",
        "5 x CTB + CDTPS",
        "85.0",
        "85.5",
        "85.3",
        "10 x CTB + CDTPS",
        "85.3",
        "85.8",
        "85.6",
        "20 x CTB + CDTPS",
        "85.1",
        "85.3",
        "85.2",
        "50 x CTB + CDTPS",
        "84.9",
        "85.3",
        "85.1",
        "Models",
        "DevScore",
        "(%)",
        "All the sentences",
        "LR",
        "(%)",
        "LP",
        "(%)",
        "F (%)",
        "Q-0-method Q-10-method",
        "91.0 91.6",
        "91.6 93.1",
        "92.5 94.1",
        "92.1 93.6",
        "Table 5: Results of the generative parser (GP) and the reranking parser (RP) on the test set, when trained on only CTB training set or an optimal combination of CTB training set and CDTPS.",
        "We used our conversion algorithm to convert the grammar formalism of CDT to that of CTB.",
        "Let CDTPS denote the converted CDT by our method.",
        "The average unlabeled dependency f-score of trees in CDTPS was 74.4%, and their average index in 200-bestlist was 48.",
        "We tried the corpus weighting method when combining CDTPS with CTB training set (abbreviated as CTB for simplicity) as training data, by gradually increasing the weight (including 1, 2, 5, 10, 20, 50) of CTB to optimize parsing performance on the development set.",
        "Table 4 presents the results of the generative parser with various weights of CTB on the development set.",
        "Considering the performance on the development set, we decided to give CTB a relative weight of 10.",
        "Finally we evaluated two parsing models, the generative parser and the reranking parser, on the test set, with results shown in Table 5.",
        "When trained on CTB only, the generative parser and the reranking parser achieved f-scores of 81.0% and 83.3%.",
        "The use of CDTPS as additional training data increased f-scores of the two models to 81.5% and 83.8%.",
        "We used unlabeled dependency f-score of each converted tree as the criterion to rank trees in CDTPS and then kept only the top M trees with high f-scores as training data for parsing, resulting in a corpus CDT^f.",
        "M varied from 100%x|CDTPS| to 10%x|CDTPS| with 10%x|CDTPS| as the interval.",
        "|cDTps|",
        "Cps,dev .",
        "Table 6: Results of the generative parser and the reranking parser on the test set, when trained on an optimal combination of CTB training set and converted CDT.",
        "is the number of trees in CDTPS.",
        "Then we tuned the value of M by optimizing the parser's performance on the development set with 10xCTB+CDTp/ as training data.",
        "Finally the optimal value of M was 100%x|CDT|.",
        "It indicates that even removing very few converted trees hurts the parsing performance.",
        "A possible reason is that most of non-perfect parses can provide useful syntactic structure information for building parsing models.",
        "We used Score(xi}t) to replace Score(xi}t) in our conversion algorithm and then ran the updated algorithm on CDT.",
        "Let CDTps denote the converted CDT by this updated conversion algorithm.",
        "The values of X (varying from 0.0 to 1.0 with 0.1 as the interval) and the CTB weight (including 1, 2, 5, 10, 20, 50) were simultaneously tuned on the development set.",
        "Finally we decided that the optimal value of X was 0.4 and the optimal weight of CTB was 1, which brought the best performance on the development set (an f-score of 86.1%).",
        "In comparison with the results in Section 4.1, the average index of converted trees in 200-best list increased to 2, and their average unlabeled dependency f-score dropped to 65.4%.",
        "It indicates that structures of converted trees become more consistent with the target grammar, as indicated by the increase of average index of converted trees, further away from the source grammar.",
        "Table 6 provides f-scores of the generative parser and the reranker on the test set, when trained on CTB and CDTps.",
        "We see that the performance of the reranking parser increased to",
        "All the sentences",
        "LR",
        "LP",
        "F",
        "Models",
        "Training data",
        "(%)",
        "(%)",
        "(%)",
        "GP",
        "CTB",
        "79.9",
        "82.2",
        "81.0",
        "RP",
        "CTB",
        "82.0",
        "84.6",
        "83.3",
        "GP",
        "10 x CTB + CDTPS",
        "80.4",
        "82.7",
        "81.5",
        "RP",
        "10 x CTB + CDTPS",
        "82.8",
        "84.7",
        "83.8",
        "Models",
        "Training data",
        "All the sentences",
        "LR",
        "(%)",
        "LP",
        "(%)",
        "F",
        "(%)",
        "GP RP",
        "CTB + CDTpSCTB + CDTpS",
        "81.4 83.0",
        "82.8 85.4",
        "82.1 84.2",
        "Table 7: Results of the self-trained generative parser and updated reranking parser on the test set.",
        "10xT+10xD+P stands for 10xCTB+10xCDTps+PDC.",
        "84.2% f-score, better than the result of the reranking parser with CTB and CDTPS as training data (shown in Table 5).",
        "It indicates that the use of probability information from the parser for tree conversion helps target grammar parsing.",
        "Recent studies on parsing indicate that the use of unlabeled data by self-training can help parsing on the WSJ data, even when labeled data is relatively large (McClosky et al., 2006a; Reichart and Rappoport, 2007).",
        "It motivates us to employ self-training technique for Chinese parsing.",
        "We used the POS tagged People Daily corpus(Jan. 1998-Jun.",
        "1998, and Jan. 2000-Dec. 2000) (PDC) as unlabeled data for parsing.",
        "First we removed the sentences with less than 3 words or more than 40 words from PDC to ease parsing, resulting in 820k sentences.",
        "Then we ran the reranking parser in Section 4.2.2 on PDC and used the parses on PDC as additional training data for the generative parser.",
        "Here we tried the corpus weighting technique for an optimal combination of CTB, CDTps and parsed PDC, and chose the relative weight of both CTB and CDTPS as 10 by cross validation on the development set.",
        "Finally we retrained the generative parser on CTB, CDTPS and parsed PDC.",
        "Furthermore, we used this self-trained generative parser as a base parser to retrain the reranker on CTB and CDTPS.",
        "Table 7 shows the performance of self-trained generative parser and updated reranker on the test set, with CTB and CDTps as labeled data.",
        "We see that the use of unlabeled data by self-training further increased the reranking parser's performance from 84.2% to 85.2%.",
        "Our results on Chinese data confirm previous findings on English data shown in (McClosky et al., 2006a; Reichart and Rappoport, 2007).",
        "Table 8 and 9 present the results of previous studies on CTB.",
        "All the works in Table 8 used CTB articles 1-270 as labeled data.",
        "In Table 9, Petrov and Klein (2007) trained their model on CTB articles 1-270 and 400-1151, and Burkett and Klein (2008) used the same CTB articles and parse trees of their English translation (from the English Chinese Translation Treebank) as training data.",
        "Comparing our result in Table 6 with that of Petrov and Klein (2007), we see that CDTps helps parsing on CTB, which brought 0.9% f-score improvement.",
        "Moreover, the use of unlabeled data further boosted the parsing performance to 85.2%, an absolute 1.0% improvement over the previous best result presented in Burkett and Klein (2008)."
      ]
    },
    {
      "heading": "5. Related Work",
      "text": [
        "Recently there have been some studies addressing how to use treebanks with same grammar formalism for domain adaptation of parsers.",
        "Roark and Bachiani (2003) presented count merging and model interpolation techniques for domain adaptation of parsers.",
        "They showed that their system with count merging achieved a higher performance when in-domain data was weighted more heavily than out-of-domain data.",
        "McClosky et al.",
        "(2006b) used self-training and corpus weighting to adapt their parser trained on WSJ corpus to Brown corpus.",
        "Their results indicated that both unla-beled in-domain data and labeled out-of-domain data can help domain adaptation.",
        "In comparison with these works, we conduct our study in a different setting where we work with multiple heterogeneous treebanks.",
        "Grammar formalism conversion makes it possible to reuse existing source treebanks for the study of target grammar parsing.",
        "Wang et al.",
        "(1994) employed a parser to help conversion of a treebank from a simple phrase structure to a more informative phrase structure and then used this converted treebank to train their parser.",
        "Collins et al.",
        "(1999) performed statistical constituency parsing of Czech on a treebank that was converted from the Prague Dependency Treebank under the guidance of conversion rules and heuristic rules, e.g., one level of projection for any category, minimal projection for any dependents, and fixed position of attachment.",
        "Xia and Palmer (2001) adopted better heuristic rules to build converted trees, which reflected the structural preference in their target grammar.",
        "For acquisition of better conversion rules, Xia et al.",
        "(2008) proposed to automatically extract conversion rules from a target treebank.",
        "Moreover, they presented two strategies to solve the problem that there might be multiple conversion rules matching the same input dependency tree pattern: (1) choosing the most frequent rules, (2) preferring rules that add fewer number of nodes and attach the subtree lower.",
        "All the sentences",
        "LR",
        "LP",
        "F",
        "Models",
        "Training data",
        "(%)",
        "(%)",
        "(%)",
        "Self-trained GP",
        "10xT+10xD+P",
        "83.0",
        "84.5",
        "83.7",
        "Updated RP",
        "CTB+CDTpS",
        "84.3",
        "86.1",
        "85.2",
        "In comparison with the works of Wang et al.",
        "(1994) and Collins et al.",
        "(1999), we went further by combining the converted treebank with the existing target treebank for parsing.",
        "In comparison with previous conversion methods (Collins et al., 1999; Covington, 1994; Xia and Palmer, 2001; Xia et al., 2008) in which for each head-dependent pair, only one locally optimal conversion was kept during tree-building process, we employed a parser to generate globally optimal syntactic structures, eliminating heuristic rules for conversion.",
        "In addition, we used converted trees to retrain the parser for better conversion candidates, while Wang et al.",
        "(1994) did not exploit the use of converted trees for parser retraining."
      ]
    },
    {
      "heading": "6. Conclusion",
      "text": [
        "We have proposed a two-step solution to deal with the issue of using heterogeneous treebanks for parsing.",
        "First we present a parser based method to convert grammar formalisms of the treebanks to the same one, without applying predefined heuristic rules, thus turning the original problem into the problem of parsing on homogeneous treebanks.",
        "Then we present two strategies, instance pruning and score interpolation, to refine conversion results.",
        "Finally we adopt the corpus weighting technique to combine the converted source treebank with the existing target treebank for parser training.",
        "The study on the WSJ data shows the benefits of our parser based approach for grammar formalism conversion.",
        "Moreover, experimental results on the Penn Chinese Treebank indicate that a converted dependency treebank helps constituency parsing, and it is better to exploit probability information produced by the parser through score interpolation than to prune low quality trees for the use of the converted treebank.",
        "Future work includes further investigation of our conversion method for other pairs of grammar formalisms, e.g., from the grammar formalism of the Penn Treebank to more deep linguistic formalism like CCG, HPSG, or LFG.",
        "<",
        "40 words",
        "All the sentences",
        "LR",
        "LP",
        "F",
        "LR",
        "LP",
        "F",
        "Models",
        "(%)",
        "(%)",
        "(%)",
        "Bikel & Chiang (2000)",
        "76.8",
        "77.8",
        "77.3",
        "-",
        "-",
        "-",
        "Chiang & Bikel (2002)",
        "78.8",
        "81.1",
        "79.9",
        "-",
        "-",
        "-",
        "Levy & Manning (2003)",
        "79.2",
        "78.4",
        "78.8",
        "-",
        "-",
        "-",
        "Bikel's thesis (2004)",
        "78.0",
        "81.2",
        "79.6",
        "-",
        "-",
        "-",
        "Xiong et.",
        "al.",
        "(2005)",
        "78.7",
        "80.1",
        "79.4",
        "-",
        "-",
        "-",
        "Chen et.",
        "al.",
        "(2005)",
        "81.0",
        "81.7",
        "81.2",
        "76.3",
        "79.2",
        "77.7",
        "Wang et.",
        "al.",
        "(2006)",
        "79.2",
        "81.1",
        "80.1",
        "76.2",
        "78.0",
        "77.1",
        "Models",
        "< 40 words",
        "All the sentences",
        "LR",
        "(%)",
        "LP",
        "F",
        "LR",
        "(%)",
        "LP",
        "F (%)",
        "Petrov & Klein (2007) Burkett & Klein (2008)",
        "85.7",
        "86.9",
        "86.3",
        "81.9",
        "84.8",
        "83.3 84.2"
      ]
    }
  ]
}
