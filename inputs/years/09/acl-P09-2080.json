{
  "info": {
    "authors": [
      "Qiong Wu",
      "Songbo Tan",
      "Xueqi Cheng"
    ],
    "book": "ACL-IJCNLP: Short Papers",
    "id": "acl-P09-2080",
    "title": "Graph Ranking for Sentiment Transfer",
    "url": "https://aclweb.org/anthology/P09-2080",
    "year": 2009
  },
  "references": [
    "acl-P07-1056",
    "acl-P08-1034",
    "acl-W02-1011"
  ],
  "sections": [
    {
      "text": [
        "Qiong Wu', Songbo Tan and Xueqi Cheng",
        "institute of Computing Technology, Chinese Academy of Sciences, China Graduate University of Chinese Academy of Sciences, China {wuqiong,tansongbo]@software.ict.ac.cn, cxq@ict.ac.cn",
        "With the aim to deal with sentiment-transfer problem, we proposed a novel approach, which integrates the sentiment orientations of documents into the graph-ranking algorithm.",
        "We apply the graph-ranking algorithm using the accurate labels of old-domain documents as well as the \"pseudo\" labels of new-domain documents.",
        "Experimental results show that proposed algorithm could improve the performance of baseline methods dramatically for sentiment transfer."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "With the rapid growth of reviewing pages, sentiment classification is drawing more and more attention (Bai et al., 2005; Pang and Lee, 2008).",
        "Generally speaking, sentiment classification can be considered as a special kind of traditional text classification (Tan et al., 2005; Tan, 2006).",
        "In most cases, supervised learning methods can perform well (Pang et al., 2002).",
        "But when training data and test data are drawn from different domains, supervised learning methods always produce disappointing results.",
        "This is so-called cross-domain sentiment classification problem (or sentiment-transfer problem).",
        "Sentiment transfer is a new study field.",
        "In recent years, only a few works are conducted on this field.",
        "They are generally divided into two categories.",
        "The first one needs a small amount of labeled training data for the new domain (Aue and Gamon, 2005).",
        "The second one needs no labeled data for the new domain (Blitzer et al., 2007; Tan et al., 2007; Andreevskaia and Bergler, 2008; Tan et al., 2008; Tan et al., 2009).",
        "In this paper, we concentrate on the second category which proves to be used more widely.",
        "Graph-ranking algorithm has been successfully used in many fields (Wan et al., 2006; Esuli and Sebastiani, 2007), whose idea is to give a node high score if it is strongly linked with other high-score nodes.",
        "In this work, we extend the graph-ranking algorithm for sentiment transfer by integrating the sentiment orientations of the documents, which could be considered as a sentiment-transfer version of the graph-ranking algorithm.",
        "In this algorithm, we assign a score for every unlabelled document to denote its extent to \"negative\" or \"positive\", then we iteratively calculate the score by making use of the accurate labels of old-domain data as well as the \"pseudo\" labels of new-domain data, and the final score for sentiment classification is achieved when the algorithm converges, so we can label the new-domain data based on these scores."
      ]
    },
    {
      "heading": "2. The Proposed Approach 2.1 Overview",
      "text": [
        "In this paper, we have two document sets: the test data DU = {dh...,dn} where di is the term vector of the ith text document and each die DU(i = 1,...,n) is unlabeled; the training data D = {dn+1,...dn+m} where dj represents the term vector of the jth text document and each dj e D(j = n+1,.. .,n+m) should have a label from a category set C = {negative, positive}.",
        "We assume the training dataset D is from the related but different domain with the test dataset DU.",
        "Our objective is to maximize the accuracy of assigning a label in C to di eDU (i = 1,...,n) utilizing the training data D in another domain.",
        "The proposed algorithm is based on the following presumptions:",
        "(1) Let W denote the word space of old domain, W denote the word space of new domain.",
        "Wn wU^o.",
        "(2) The labels of documents appear both in the training data and the test data should be the same.",
        "Based on graph-ranking algorithm, it is thought that if a document is strongly linked with positive (negative) documents, it is probably positive (negative).",
        "And this is the basic idea of learning from a document's neighbors.",
        "Our algorithm integrates the sentiment orientations of the documents into the graph-ranking algorithm.",
        "In our algorithm, we build a graph whose nodes denote documents and edges denote the content similarities between documents.",
        "We initialize every document a score (\"1\" denotes positive, and \"-1\" denotes negative) to represent its degree of sentiment orientation, and we call it sentiment score.",
        "The proposed algorithm calculates the sentiment score of every unlabelled document by learning from its neighbors in both old domain and new domain, and then iteratively calculates the scores with a unified formula.",
        "Finally, the algorithm converges and each document gets its sentiment score.",
        "When its sentiment score falls in the range [0, 1] (or [-1, 0]], the document should be classified as \"positive (or negative)\".",
        "The closer its sentiment score is near 1 (or -1), the higher the \"positive (or negative)\" degree is.",
        "Score Documents Using New-domain Information",
        "We build a graph whose nodes denote documents in both D and DU and edges denote the content similarities between documents.",
        "If the content similarity between two documents is 0, there is no edge between the two nodes.",
        "Otherwise, there is an edge between the two nodes whose weight is the content similarity.",
        "The content similarity between two documents is computed with the cosine measure.",
        "We use an adjacency matrix U to denote the similarity matrix between DU and DL.",
        "U=[Uij]nxm is defined as follows:",
        "IldJI x \\d.",
        "The weight associated with term t is computed with tftidft where f is the frequency of term t in the document and idft is the inverse document frequency of term t, i.e. 1+log(N7nt), where N is the total number of documents and nt is the number of documents containing term t in a data set.",
        "In consideration of convergence, we normalize U to U by making the sum of each row equal 0, otherw se",
        "In order to find the neighbors (in another word, the nearest documents) of a document, we sort every row of Û to Û in descending order.",
        "That is: Û ij> Ûik (i = 1,...«; j,k = k^j).",
        "to denote the neighbors of DU in old domain, with Nij corresponding to the jth nearest neighbor of di.",
        "At last, we can calculate sentiment score si (i = 1,.. .,n) using the scores of the d/s neighbors as follows:",
        "j<=-Ni.",
        "where i • means the ith row of a matrix and s(k) denotes the si at the kth iteration.",
        "Similarly, a graph is built, in which each node corresponds to a document in DU and the weight of the edge between any different documents is computed by the cosine measure.",
        "We use an adjacency matrix V=[Vij]nxn to describe the similarity matrix.",
        "And V is similarly normalized to V to make the sum of each row equal to 1.",
        "Then we sort every row of V to V in descending order, thus we can get K neighbors of di G DU (i = 1,...,n) from V ij (j = 1,...K), and we use a matrix M = [Mij ]nxK to denote the neighbors of DU in the new domain.",
        "Finally, we can calculate si using the sentiment scores of the d/s neighbors as follows:",
        "Initialization",
        "Firstly, we classify the test data DU to get their initial labels using a traditional classifier.",
        "For simplicity, we use prototype classification algorithm (Tan et al., 2005) in this work.",
        "Then, we give to s/0) if d/s label is \"negative\", and \"1\" if \"positive\".",
        "So we obtain the initial sentiment score vector S(0) for both domain data.",
        "At last, s/0) (i = 1,.. .,n) is normalized as follows to make the sum of positive scores of DUequal to 1, and the sum of negative scores of DUequal to -1:",
        "its K neighbors.",
        "We use a matrix N = [N where DU and DU denote the negative and positive document set of DU respectively.",
        "The same as (5), Sj(0 (j =n+1,...,n+m) is normalized.",
        "Algorithm Introduction",
        "In our algorithm, we label DU by making use of information of both old domain and new domain.",
        "We fuse equations (3) and (4), and get the iterative equation as follows:",
        "where a + J = 1, and a and J show the relative importance of old domain and new domain to the final sentiment scores.",
        "In consideration of the convergence, S(k) (S at the kth iteration) is normalized after each iteration.",
        "Here is the complete algorithm:",
        "1.",
        "2.",
        "Classify D with a traditional classifier.",
        "Initialize the sentiment score si of diGDUUD (i = 1,...n+m) and normalize it.",
        "Iteratively calculate the S(k of DU and normalize it until it achieves the convergence:",
        "3.",
        "According to s, G S (i = assign each diGDU(i = 1,...«) a label.",
        "If si is between 1 and 0, assign di the label \"negative\"; if si is between 0 and 1, assign di the label \"positive\"."
      ]
    },
    {
      "heading": "3. EXPERIMENTS 3.1 Data Preparation",
      "text": [
        "We prepare three Chinese domain-specific data sets from on-line reviews, which are: Electronics Reviews (Elec, from http://detail.zol.com.cn/), Stock Reviews (Stock, from http://blog.sohu.com /stock/) and Hotel Reviews (Hotel, from http://www.ctrip.com/).",
        "And then we manually label the reviews as \"negative\" or \"positive\".",
        "The detailed composition of the data sets are shown in Table 1, which shows the name of the data set (DataSet), the number of negative reviews (Neg), the number of positive reviews (Pos), the average length of reviews (Length), the number of different words (Vocabulary) in this data set.",
        "We make some preprocessing on the datasets.",
        "First, we use ICTCLAS (http:77ictclas.org7), a Chinese text POS tool, to segment these Chinese reviews.",
        "Second, the documents are represented by vector space model.",
        "In our experiment, we use prototype classification algorithm (Tan et al., 2005) and Support Vector Machine experimenting on the three data sets as our baselines separately.",
        "The Support Vector Machine is a state-of-the-art supervised learning algorithm.",
        "In our experiment, we use LibSVM (www.csie.ntu.edu.tw/~cilin/libsvm/) with a linear kernel and set all options by default.",
        "We also compare our algorithm to Structural Correspondence Learning (SCL) (Blitzer et al., 2007).",
        "SCL is a state-of-the-art sentiment-transfer algorithm which automatically induces correspondences among features from different domains.",
        "It identifies correspondences among features from different domains by modeling their correlations with pivot features, which are features that behave in the same way for discriminative learning in both domains.",
        "In our experiment, we use 100 pivot features.",
        "In this section, we conduct two groups of experiments where we separately initialize the sentiment scores in our algorithm by prototype classifier and Support Vector Machine.",
        "There are two parameters in our algorithm, K and a (/?",
        "can be calculated by 1-a).",
        "We set the parameters K and a with 150 and 0.7 respectively, which indicates we use 150 neighbors and the contribution from old domain is a little more important than that from new domain.",
        "It is thought that the algorithm achieves the convergence when the changing between the sentiment score si computed at two successive iterations for any die DU (i = 1,. n) falls below a given threshold, and we set the threshold 0.00001 in this work.",
        "Table 2 shows the accuracy of Prototype, LibSVM, SCL and our algorithm when training data and test data belong to different domains.",
        "DataSet",
        "Neg",
        "Pos",
        "Length",
        "Vocabulary",
        "Elec",
        "554",
        "1,054",
        "121",
        "6,200",
        "Stock",
        "68S",
        "S64",
        "460",
        "13,012",
        "Hotel",
        "2,000",
        "2,000",
        "181",
        "11,336",
        "Our algorithm is separately initialized by Prototype and LibSVM.",
        "As we can observe from Table 2, our algorithm can dramatically increase the accuracy of sentiment-transfer.",
        "Seen from the 2nd column and the 5th column, every accuracy of the proposed algorithm is increased comparing to Prototype.",
        "The average increase of accuracy over all the 6 problems is 10.8%.",
        "Similarly, the accuracy of our algorithm is higher than LibSVM in every problem and the average increase of accuracy is 11.9%.",
        "The great improvement comparing with the baselines indicates that the proposed algorithm performs very effectively and robustly.",
        "Seen from Table 2, our result about SCL is in accord with that in (Blitzer et al., 2007) on the whole.",
        "The average accuracy of SCL is higher than both baselines, which convinces that SCL is effective for sentiment-transfer.",
        "However, our approach outperforms SCL: the average accuracy of our algorithm is about 3.5 % higher than SCL.",
        "This is caused by two reasons.",
        "First, SCL is essentially based on co-occurrence of words (the window size is the whole document), so it is easily affected by low frequency words and the size of data set.",
        "Second, the pivot features of SCL are totally dependent on experts in the field, so the quality of pivot features will seriously affect the performance of SCL.",
        "This improvement convinces us of the effectiveness of our algorithm."
      ]
    },
    {
      "heading": "4. Conclusion and Future Work",
      "text": [
        "In this paper, we propose a novel sentiment-transfer algorithm.",
        "It integrates the sentiment orientations of the documents into the graphranking based method for sentiment-transfer problem.",
        "The algorithm assigns a score for every document being predicted, and it iteratively calculates the score making use of the accurate labels of old-domain data, as well as the \"pseudo\" labels of new-domain data, finally it labels the new-domain data as \"negative\" or \"positive\" basing on this score.",
        "The experiment results show that the proposed approach can dramatically improve the accuracy when transferred to a new domain.",
        "In this study, we find the neighbors of a given document using cosine similarity.",
        "This is too general, and perhaps not so proper for sentiment classification.",
        "In the next step, we will try other methods to calculate the similarity.",
        "Also, our approach can be applied to multi-task learning."
      ]
    },
    {
      "heading": "5. Acknowledgments",
      "text": [
        "This work was mainly supported by two funds, i.e., 0704021000 and 60803085, and one another project, i.e., 2004CB318109.",
        "Baseline",
        "SCL",
        "Proposed Algorithm",
        "Prototype",
        "LibSVM",
        "Prototype+ OurApproach",
        "LibSVM+ OurApproach",
        "Elec->Stock",
        "0.6652",
        "0.6478",
        "0.7507",
        "0.7326",
        "0.7304",
        "Elec->Hotel",
        "0.7304",
        "0.7522",
        "0.7750",
        "0.7543",
        "0.7543",
        "Stock->Hotel",
        "0.6848",
        "0.6957",
        "0.7683",
        "0.7435",
        "0.7457",
        "Stock->Elec",
        "0.7043",
        "0.6696",
        "0.8340",
        "0.8457",
        "0.8435",
        "Hotel->Stock",
        "0.6196",
        "0.5978",
        "0.6571",
        "0.7848",
        "0.7848",
        "Hotel->Elec",
        "0.6674",
        "0.6413",
        "0.7270",
        "0.8609",
        "0.8609",
        "Average",
        "0.6786",
        "0.6674",
        "0.7520",
        "0.7870",
        "0.7866"
      ]
    }
  ]
}
