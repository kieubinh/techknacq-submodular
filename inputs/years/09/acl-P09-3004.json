{
  "info": {
    "authors": [
      "Prodromos Malakasiotis"
    ],
    "book": "ACL-IJCNLP: Student Research Workshop papers",
    "id": "acl-P09-3004",
    "title": "Paraphrase Recognition Using Machine Learning to Combine Similarity Measures",
    "url": "https://aclweb.org/anthology/P09-3004",
    "year": 2009
  },
  "references": [
    "acl-C04-1051",
    "acl-D07-1017",
    "acl-I05-5003",
    "acl-N03-1003",
    "acl-N03-1024",
    "acl-N03-2029",
    "acl-P01-1008",
    "acl-P02-1040",
    "acl-P06-1114",
    "acl-W02-1022",
    "acl-W03-1608",
    "acl-W03-1609",
    "acl-W04-3206",
    "acl-W06-1603",
    "acl-W07-1401",
    "acl-W07-1407"
  ],
  "sections": [
    {
      "text": [
        "Paraphrase Recognition Using Machine Learning to Combine Similarity",
        "Measures",
        "This paper presents three methods that can be used to recognize paraphrases.",
        "They all employ string similarity measures applied to shallow abstractions of the input sentences, and a Maximum Entropy classifier to learn how to combine the resulting features.",
        "Two of the methods also exploit WordNet to detect synonyms and one of them also exploits a dependency parser.",
        "We experiment on two datasets, the msr paraphrasing corpus and a dataset that we automatically created from the mtc corpus.",
        "Our system achieves state of the art or better results."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Recognizing or generating semantically equivalent phrases is of significant importance in many natural language applications.",
        "In question answering, for example, a question may be phrased differently than in a document collection (e.g., \"Who is the author of War and Peace?\"",
        "vs. \"Leo Tolstoy is the writer of War and Peace.",
        "\"), and taking such variations into account can improve system performance significantly (Harabagiu et al., 2003; Harabagiu and Hickl, 2006).",
        "A paraphrase generator, meaning a module that produces new phrases or patterns that are semantically equivalent (or almost equivalant) to a given input phrase or pattern (e.g., \"X is the writer of Y\" <^ \"X wrote Y\" <^ \"Y was written by X\" <^ \"X is the author of Y\", or \"X produces Y\" <^ \"X manufactures Y\" <^ \"X is the manufacturer of Y\") can be used to produce alternative phrasings of the question, before matching it against a document collection.",
        "Unlike paraphrase generators, paraphrase recognizers decide whether or not two given phrases (or patterns) are paraphrases, possibly by generalizing over many different training pairs of phrases.",
        "Paraphrase recognizers can be embedded in paraphrase generators to filter out erroneous generated paraphrases; but they are also useful on their own.",
        "In question answering, for example, they can be used to check if a pattern extracted from the question (possibly by replacing named entities by their semantic categories and turning the question into a statement) matches any patterns extracted from candidate answers.",
        "As a further example, in text summarization, especially multi-document summarization, a paraphrase recognizer can be used to check if a sentence is a paraphrase of any other sentence already present in a partially constructed summary.",
        "Note that, although \"paraphrasing\" and \"textual entailment\" are sometimes used as synonyms, we use the former to refer to methods that generate or recognize semantically equivalent (or almost equivalent) phrases or patterns, whereas in textual entailment (Dagan et al., 2006; Bar-Haim et al., 2006; Giampiccolo et al., 2007) the expressions or patterns are not necessarily semantically equivalent; it suffices if one entails the other, even if the reverse direction does not hold.",
        "For example, \"Y was written by X\" textually entails \"Y is the work of X\", but the reverse direction does not necessarily hold (e.g., if Y is a statue); hence, the two sentences are not paraphrases.",
        "In this paper, we focus on paraphrase recognition.",
        "We propose three methods that employ string similarity measures, which are applied to several abstractions of a pair of input phrases (e.g., the phrases themselves, their stems, pos tags).",
        "The scores returned by the similarity measures are used as features in a Maximum Entropy (me) classifier (laynes, 1957; Good, 1963), which learns to separate true paraphrase pairs from false ones.",
        "Two of our methods also exploit WordNet to detect synonyms, and one of them uses additional features to measure similarities of grammatical relations obtained by a dependency parser.",
        "Our experiments were conducted on two datasets: the publicly available Microsoft Research Paraphrasing corpus (Dolan et al., 2004) and a dataset that we constructed from the MTC corpus.",
        "The experimental results show that our methods perform very well.",
        "Even the simplest one manages to achieve state of the art results, even though it uses fewer linguistic resources than other reported systems.",
        "The other two, more elaborate methods perform even better.",
        "Section 2 presents the three methods, and section 3 our experiments.",
        "Section 4 covers related work.",
        "Section 5 concludes and proposes further work."
      ]
    },
    {
      "heading": "2. The three methods",
      "text": [
        "The main idea underlying our methods is that by capturing similarities at various shallow abstractions of the input (e.g., the original sentences, the stems of their words, their POS tags), we can recognize paraphrases and textual entailment reasonably well, provided that we learn to assign appropriate weights to the resulting features.",
        "Further improvements are possible by recognizing synonyms and by employing similarity measures that operate on the output of dependency grammar parsers.",
        "During training, the first method, called INIT, is given a set {(5*1,1,5*1,2, yi), • • •, (Sn,i, Sn,2,yn)}, where S^i and are sentences (more generally, phrases), iji = 1 (positive class) if the two sentences are paraphrases, and iji = – 1 (negative class) otherwise.",
        "Each pair of sentences (<Si,i, 5^2) is converted to a feature vector ifi, whose values are scores returned by similarity measures that indicate how similar S^i and Sit2 are at various levels of abstraction.",
        "The vectors and the corresponding categories {(vuVi) Un)} are given as input to the",
        "ME classifier, which learns how to classify new vectors v, corresponding to unseen pairs of sentences (Si, 6*2).",
        "We use nine string similarity measures: Leven-shtein distance (edit distance), Jaro-Winkler distance, Manhattan distance, Euclidean distance, co-",
        "!We use Stanford University's me classifier and parser; see http://nip.Stanford.edu/.",
        "sine similarity, n-gram distance (with n = 3), matching coefficient, Dice coefficient, and Jac-card coefficient.",
        "To save space, we do not repeat the definitions of the similarity measures here, since they are readily available in the literature and they are also summarized in our previous work (Malakasiotis and Androutsopoulos, 2007).",
        "For each pair of input strings (Si, S2), we form ten new pairs of strings (s\\, s^),..., (s{°, s^) corresponding to ten different levels of abstraction of S*i and S2, and we apply the nine similarity measures to the ten new pairs, resulting in a total of 90 measurements.",
        "These measurements are then included as features in the vector v that corresponds to (Si, 6*2).",
        "The (s\\, s%2) pairs are:",
        "(si,S2) : two strings consisting of the original tokens of Si and S2, respectively, with the original order of the tokens maintained;",
        "(sl,s\\) : as in the previous case, but now the tokens are replaced by their stems;",
        "(si,sl) : as in the previous case, but now the tokens are replaced by their part-of-speech (pos) tags;",
        "(sl,s|) : as in the previous case, but now the tokens are replaced by their soundex codes;",
        "(si, S2) : two strings consisting of only the verbs of Si and S2, as identified by a pos-tagger, with the original order of the verbs maintained;",
        "(si, si) : as in the previous case, but now with verbs replaced by their stems;",
        "(si, si) '■ as in the previous case, but now with nouns replaced by their soundex codes;",
        "(s{°, si) : as in the previous case, but now with verbs replaced by their soundex codes.",
        "Note that the similarities are measured in terms of tokens, not characters.",
        "For instance, the edit distance of Si and S2 is the minimum number of operations needed to transform Si to S2, where an operation is an insertion, deletion or substitution of a single token.",
        "Moreover, we use high-level",
        "POS tags only, i.e., we do not consider the number of nouns, the voice of verbs etc.",
        "; this increases the similarity of positive (sf, s|) pairs.",
        "A common problem is that the string similarity measures may be misled by differences in the lengths of Si and 5*2.",
        "This is illustrated in the following examples, where the underlined part of Si is much more similar to 5*2 than the entire Si.",
        "Si: While Bolton apparently fell and was immobilized, Selenski used the mattress to scale a 10-foot, razor-wire fence, Fischi said.",
        "S2: After the other inmate fell, Selenski used the mattress to scale a 10-foot, razor-wire fence, Fischi said.",
        "To address this problem, when we consider a pair of strings (si, S2), if Si is longer than S2, we obtain all of the substrings s[ of si that have the same length as S2.",
        "Then, for each s[, we compute the nine values fj(s'1, S2), where fj (1 < j < 9) are the string similarity measures.",
        "Finally, we locate the s'i with the best average similarity (over all similarity measures) to S2, namely s'^:",
        "and we keep the nine fj(s'i, S2) values and their average as ten additional measurements.",
        "Similarly, if S2 is longer than si, we keep the nine fj(si, s2*) values and their average.",
        "This process is applied to pairs (s^s^), (s^Sg), where large length differences are more likely to appear, adding 40 more measurements (features) to the vector v of each (Si, S2) pair of input strings.",
        "The measurements discussed above provide 130 numeric features.",
        "To those, we add two Boolean features indicating the existence or absence of negation in S'i or S2, respectively; negation is detected by looking for words like \"not\", \"won't\" etc.",
        "Finally, we add a length ratio feature, de-",
        "nned as ZS',iff)> where LSi and Ls2 are the lengths, in tokens, of S'i and S2.",
        "Hence, there is a total of 133 available features in init.",
        "Paraphrasing may involve using synonyms which cannot be detected by the features we have considered so far.",
        "In the following pair of sentences, for example, \"dispatched\" is used as a synonym of \"sent\"; treating the two verbs as the same token during the calculation of the string similarity measures would yield a higher similarity.",
        "The second method, called init+wn, treats words from Si and S2 that are synonyms as identical; otherwise the method is the same as init.",
        "Si: Fewer than a dozen FBI agents were dispatched to secure and analyze evidence.",
        "S2: Fewer than a dozen FBI agents will be sent to Iraq to secure and analyze evidence of the bombing.",
        "The features of the previous two methods operate at the lexical level.",
        "The third method, called init+wn+dep, adds features that operate on the grammatical relations (dependencies) a dependency grammar parser returns for Si and S2.",
        "We use three measures to calculate similarity at the level of grammatical relations, namely Si dependency recall (Ri), S2 dependency recall (R2) and their F-measure (Fr1}r2), defined below:",
        "■n _ \\common dependencies\\"
      ]
    },
    {
      "heading": "1. I S'i dependencies I",
      "text": [
        "^ |S2 dependencies]",
        "The following two examples illustrate the usefulness of dependency similarity measures in detecting paraphrases.",
        "In the first example Si and S2 are not paraphrases and the scores are low, while in the second example where Si and S2 have almost identical meanings, the scores are much higher.",
        "Figures 1 and 2 lists the grammatical relations (dependencies) of the two sentences with the common ones shown in bold.",
        "Example 1:",
        "S'i: Gyorgy Heizler, head of the local disaster unit, said the coach was carrying 38 passengers.",
        "S2 '■ The head of the local disaster unit, Gyorgy Heizler, said the coach driver had failed to heed red stop lights.",
        "Example 2:",
        "Si: Amrozi accused his brother, whom he called \"the witness\", of deliberately distorting his evidence.",
        "S2 '■ Referring to him as only \"the witness\", Amrozi accused his brother of deliberately distorting his evidence.",
        "Grammatical relations of S]",
        "Grammatical relations of S2",
        "Figure 1 : Grammatical relations of example 1.",
        "Grammatical relations of S}",
        "As with pos-tags, we use only the highest level of the tags of the grammatical relations, which increases the similarity of positive pairs of Si and 5*2.",
        "For the same reason, we ignore the directionality of the dependency arcs which we have found to improve the results.",
        "init+wn+dep employs a total of 136 features.",
        "Larger feature sets do not necessarily lead to improved classification performance.",
        "Despite seeming useful, some features may in fact be too noisy or irrelevant, increasing the risk of overfitting the training data.",
        "Some features may also be redundant, given other features; thus, feature selection methods that consider the value of each feature on its own (e.g., information gain) may lead to suboptimal feature sets.",
        "Finding the best subset of a set of available features is a search space problem for which several methods have been proposed (Guyon et al., 2006).",
        "We have experimented with a wrapper approach, whereby each feature subset is evaluated according to the predictive power of a classifier (treated as a black box) that uses the subset; in our experiments, the predictive power was measured as F-measure (defined below, not to be confused with Fr1,r2).",
        "More precisely, during feature selection, for each feature subset we performed 10-fold cross validation on the training data to evaluate its predictive power.",
        "After feature selection, the classifier was trained on all the training data, and it was evaluated on separate test data.",
        "With large feature sets, an exhaustive search over all subsets is intractable.",
        "Instead, we experimented with forward hill-climbing and beam search (Guyon et al., 2006).",
        "Forward hill-climbing starts with an empty feature set, to which it adds features, one at a time, by preferring to add at each step the feature that leads to the highest predictive power.",
        "Forward beam search is similar, except that the search frontier contains the k best examined states (feature subsets) at each time; we used k = 10.",
        "For k = 1, beam search reduces to hill-climbing."
      ]
    },
    {
      "heading": "3. Experiments",
      "text": [
        "We now present our experiments, starting from a description of the datasets used.",
        "We mainly used the Microsoft Research (msr) Paraphrasing Corpus (Dolan et al., 2004), which consists of 5,801 pairs of sentences.",
        "Each pair is manually annotated by two human judges as a true or false paraphrase; a third judge resolved disagreements.",
        "The data are split into 4,076 training pairs and 1,725 testing pairs.",
        "We have experimented with a dataset we created from the mtc corpus.",
        "mtc is a corpus containing news articles in Mandarin Chinese; for each article 11 English translations (by different translators) are also provided.",
        "We considered the translations of the same Chinese sentence as paraphrases.",
        "We obtained all the possible paraphrase pairs and we added an equal number of randomly selected non paraphrase pairs, which contained sentences that were not translations of the same sentence.",
        "In this way, we constructed a dataset containing 82,260 pairs of sentences.",
        "The dataset was then split in training (70%) and test (30%) parts, with an equal number of positive and negative pairs in each part.",
        "We used four evaluation measures, namely accuracy (correctly classified pairs over all pairs), precision (P, pairs correctly classified in the positive class over all pairs classified in the positive class), recall (R, pairs correctly classified in the positive class over all true positive pairs), and F-measure (with equal weight on precision and recall, defined as p^'|?0.",
        "These measures are not to be confused with the Ri, R2, and Fr1}r2 of section 2.3 which are used as features.",
        "A reasonable baseline method (base) is to use just the edit distance similarity measure and a threshold in order to decide whether two phrases are paraphrases or not.",
        "The threshold is chosen using a grid search utility and 10-fold cross validation on the training data.",
        "More precisely, in a first step we search the range [-1, 1] with a step of 0.1.",
        "In each step, we perform 10-fold cross validation and the value that achieves the best F-measure is our initial threshold, th, for the second step.",
        "In the second step, we perform the same procedure in the range [th - 0.1, th + 0.1] and with a step of 0.001.",
        "With both datasets, we experimented with a Maximum Entropy (me) classifier.",
        "However, preliminary results (see table 1) showed that our mtc dataset is very easy, base achieves approximately 95% in accuracy and F-measure, and an approximate performance of 99.5% in all measures (accuracy, precision, recall, F-measure) is achieved by using me and only some of the features of init (we use 36 features corresponding to pairs (s},4), (sj,sl), (s\\,sl), (s\\,s$) plus the two negation features).",
        "Therefore, we did not experiment with the mtc dataset any further.",
        "Table 2 (upper part) lists the results of our experiments on the msr corpus.",
        "We optionally performed feature selection with both forward hill-climbing (fhc) and forward beam search (fbs).",
        "All of our methods clearly perform better than base.",
        "As one might expect, there is a lot of redundancy in the complete feature set.",
        "Hence, the two feature selection methods (fhc and fb s) lead to competitive results with much fewer features (7 and 10, respectively, instead of 136).",
        "However, feature selection deteriorates performance, especially accuracy, i.e., the full feature set is better, despite its redundancy.",
        "Table 2 also includes all other reported results for the msr corpus that we are aware of; we are not aware of the exact number of features used by the other researchers.",
        "It is noteworthy that init achieves state of the art performance, even though the other approaches use many more linguistic resources.",
        "For example, Wan et al.",
        "'s approach (Wan et al., 2006), which achieved the best previously reported results, is similar to ours, in that it also trains a classifier with similarity measures; but some of Wan et al.",
        "'s measures require a dependency grammar parser, unlike init.",
        "More precisely, for each pair of sentences, Wan et al.",
        "construct a feature vector with values that measure lexical and dependency similarities.",
        "The measures are: word overlap, length difference (in words), bleu (Papineni et al., 2002), dependency relation overlap (i.e., R\\ and R2 but not Fri,r2)' and dependency tree edit distance.",
        "The measures are also applied on sequences containing the lemmatized words of the original sentences, similarly to one of our levels of abstraction.",
        "Interestingly, init achieves the same (and slightly better) accuracy as Wan et al.",
        "'s system, without employing any parsing.",
        "Our more enhanced methods, init+wn and init+wn+dep, achieve even better results.",
        "Zhang and Patrick (2005) use a dependency grammar parser to convert passive voice phrases to active voice ones.",
        "They also use a preprocessing stage to generalize the pairs of sentences.",
        "The preprocessing replaces dates, times, percentages, etc.",
        "with generic tags, something that we have also done in the msr corpus, but it also replaces words and phrases indicating future actions (e.g., \"plans to\", \"be expected to\") with the word \"will\"; the latter is an example of further preprocessing that could be added to our system.",
        "After the preprocessing, Zhang and Patrick create for each sentence pair a feature vector whose values measure the lexical similarity between the two sentences; they appear to be using the maximum number of consecutive common words, the number of common words, edit distance (in words), and modified n-gram precision, a measure similar to bleu.",
        "The produced vectors are then used to train a decision tree classifier.",
        "Hence, Zhang and Patrick's approach is similar to ours, but we use more and different similarity measures and several levels of abstraction of the two sentences.",
        "We also use me, along with a wrapper approach to feature selection, rather than decision tree induction and its embedded information gain-based feature selection.",
        "Furthermore, all of our methods, even init which employs no parsing at all, achieve better results compared to Zhang and Patrick's.",
        "Qiu et al.",
        "(2006) first convert the sentences into tuples using parsing and semantic role labeling.",
        "They then match similar tuples across the two sentences, and use an s vm (Vapnik, 1998) classifier to decide whether or not the tuples that have not been matched are important or not.",
        "If not, the sentences are paraphrases.",
        "Despite using a parser and a semantic role identifier, Qiu et al.",
        "'s system performs worse than our methods.",
        "Finally, Finch et al.",
        "'s system (2005) achieved the second best overall results by employing pos tagging, synonymy resolution, and an svm.",
        "Interestingly, the features of the svm correspond to machine translation evaluation metrics, rather than string similarity measures, unlike our system.",
        "We plan to examine further how the features of Finch et al.",
        "and other ideas from machine translation can be embedded in our system, although init+wn+dep outperforms Finch et al.",
        "'s system.",
        "Interestingly, even when not using more resources than Finch et al.",
        "as in methods init and init+wn we achieve similar or better accuracy results.",
        "4 Related work",
        "We have already made the distinction between paraphrase (and textual entailment) generators vs. recognizers, and we have pointed out that recognizers can be embedded in generators as filters.",
        "The latter is particularly useful in bootstrapping paraphrase generation approaches (Riloff and Jones, 1999; Barzilay and McKeown, 2001; Ravichandran and Hovy, 2001; Ravichandran et al., 2003; Duclaye et al., 2003; Szpektor et al., 2004), which are typically given seed pairs of named entities for which a particular relation holds; the system locates in a document collection (or the entire Web) contexts were the seeds cooccur, and uses the contexts as patterns that can express the relation; the patterns are then used to locate new named entities that satisfy the relation, and a new iteration begins.",
        "A paraphrase recognizer could be used to filter out erroneous generated paraphrases between iterations.",
        "Another well known paraphrase generator is Lin and Pantel's (2001) dirt, which produces slotted semantically equivalent patterns (e.g., \"X is the writer of Y\" <^ \"X wrote Y\" <^ \"Y was written by X\" <^ \"X is the author of Y\"), based on the assumption that different paths of dependency trees (obtained from a corpus) that occur frequently with the same words (slot fillers) at their ends are often paraphrases.",
        "An extension of dirt, named ledir, has also been proposed (Bha-gat et al., 2007) to recognize directional textual entailment rules (e.g., \"Y was written by X\" =>",
        "\"Y is the work of X\").",
        "Ibrahim et al.",
        "'s (2003) method is similar to dirt, but it uses only dependency grammar paths from aligned sentences (from a parallel corpus) that share compatible anchors (e.g., identical strings, or entity names of the same semantic category).",
        "Shinyama and Sekine (2003) adopt a very similar approach.",
        "In another generation approach, Barzilay and Lee (2002; 2003) look for pairs of slotted word lattices that share many common slot fillers; the lattices are generated by applying a multiple-sequence alignment algorithm to a corpus of multiple news articles about the same events.",
        "Finally, Pang et al.",
        "(2003) create finite state automata by merging parse trees of aligned sentences from a parallel corpus; in each automaton, different paths represent paraphrases.",
        "Again, a paraphrase recognizer could be embedded in all of these methods, to filter out erroneous generated patterns."
      ]
    },
    {
      "heading": "5. Conclusions and further work",
      "text": [
        "We have presented three methods (init, init+wn, init+wn+dep) that recognize paraphrases given pairs of sentences.",
        "These methods employ nine string similarity measures applied to ten shallow abstractions of the input sentences.",
        "Moreover, init+wn and init+wn+dep exploit WordNet for synonymy resolution, and init+wn+dep uses additional features that measure grammatical relation similarity.",
        "Supervised machine learning is used to learn how to combine the resulting features.",
        "We experimented with a Maximum Entropy classifier on two datasets; the publicly available msr corpus and one that we constructed from the",
        "method",
        "features",
        "accuracy",
        "precision",
        "recall",
        "F-measure",
        "base",
        "-",
        "95.30",
        "98.16",
        "92.32",
        "95.15",
        "init'",
        "38",
        "99.62",
        "99.50",
        "99.75",
        "99.62",
        "method",
        "features",
        "accuracy",
        "precision",
        "recall",
        "F-measure",
        "base",
        "1",
        "69.04",
        "72.42",
        "86.31",
        "78.76",
        "init",
        "133",
        "75.19",
        "78.51",
        "86.31",
        "82.23",
        "init+wn",
        "133",
        "75.48",
        "78.91",
        "86.14",
        "82.37",
        "init+wn+dep",
        "136",
        "76.17",
        "79.35",
        "86.75",
        "82.88",
        "init+wn+dep + fhc",
        "7",
        "73.86",
        "75.14",
        "90.67",
        "82.18",
        "init+wn+dep + fbs",
        "10",
        "73.68",
        "73.68",
        "93.98",
        "82.61",
        "Finch et al.",
        "-",
        "74.96",
        "76.58",
        "89.80",
        "82.66",
        "Qiu et al.",
        "-",
        "72.00",
        "72.50",
        "93.40",
        "81.60",
        "Wan et al.",
        "-",
        "75.00",
        "77.00",
        "90.00",
        "83.00",
        "Zhang & Patrick",
        "-",
        "71.90",
        "74.30",
        "88.20",
        "80.70",
        "mtc corpus.",
        "However, the latter was found to be very easy, and consequently we mainly focused on the msr corpus.",
        "On the msr corpus, all of our methods achieved similar or better performance than the sate of the art, even in it, despite the fact that it uses fewer linguistic resources.",
        "Hence, init may have practical advantages in less spoken languages, which have limited resources.",
        "The most elaborate of our methods, init+wn+dep, achieved the best results, but it requires WordNet and a reliable dependency grammar parser.",
        "Feature selection experiments indicate that there is significant redundancy in our feature set, though the full feature set leads to better performance than the subsets produced by feature selection.",
        "Further improvements may be possible by including in our system additional features, such as bleu scores or features for word alignment.",
        "Our long-term goal is to embed our recognizer in a bootstrapping paraphrase generator, to filter out erroneous paraphrases between bootstrapping iterations.",
        "We hope that our recognizer will be adequate for this purpose, possibly in combination with a human in the loop, who will inspect paraphrases the recognizer is uncertain of."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "This work was funded by the Greek pened 2003 programme, which is co-funded by the European Union (80%), and the Greek General Secretariat for Research and Technology (20%)."
      ]
    }
  ]
}
