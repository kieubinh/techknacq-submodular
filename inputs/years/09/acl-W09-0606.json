{
  "info": {
    "authors": [
      "Monique Rolbert",
      "Pascal Préa"
    ],
    "book": "Proceedings of the 12th European Workshop on Natural Language Generation (ENLG 2009)",
    "id": "acl-W09-0606",
    "title": "Distinguishable Entities: Definitions and Properties",
    "url": "https://aclweb.org/anthology/W09-0606",
    "year": 2009
  },
  "references": [
    "acl-E03-1017",
    "acl-E91-1028",
    "acl-J02-1003",
    "acl-J03-1003",
    "acl-P02-1013",
    "acl-P06-2033",
    "acl-P89-1009",
    "acl-W06-1410"
  ],
  "sections": [
    {
      "text": [
        "Distinguishable Entities: Definition and Properties",
        "Monique Rolbert Pascal Prea",
        "Laboratoire d'Informatique Laboratoire d'Informatique",
        "Fondamentale de Marseille, Fondamentale de Marseille,",
        "LIF, CNRS UMR 6166, LIF, CNRS UMR 6166,",
        "Aix-Marseille Universite, École Centrale Marseille,",
        "Marseille, France Marseille, France",
        "monique.rolbert@lif.univ-mrs.fr pprea@ec-marseille.fr",
        "Many studies in natural language processing are concerned with how to generate definite descriptions that evoke a discourse entity already introduced in the context.",
        "A solution to this problem has been initially proposed by Dale (1989) in terms of distinguishing descriptions and distinguishable entities.",
        "In this paper, we give a formal definition of the terms \"distinguishable entity\" in non trivial cases and we show that its properties lead us to the definition of a distance between entities.",
        "Then, we give a polynomial algorithm to compute distinguishing descriptions."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Many studies in natural language processing are concerned with how to generate definite descriptions that evoke a discourse entity already introduced in the context (Dale, 1989; Dale and Haddock, 1991; Dale and Reiter, 1995; van Deemter, 2002; Krahmer et al., 2002; Gardent, 2002; Ho-racek, 2003), and more recently (Viethen and Dale, 2006; Gatt and van Deemter, 2006; Croitoru and van Deemter, 2007).",
        "Following Dale (1989), these definite descriptions are named \"distinguishing descriptions\".",
        "Informally, a distinguishing description is a definite description which designates one and only one entity among others in a context set.",
        "Conversely, this entity is named \"distinguishable entity\".",
        "Things are simple if all the properties of the entities are unary relations.",
        "Let's give a set of entities E = (ei, e2} with the following properties: eii red, bird ; e2: red, bird, eat ;",
        "ei is not a distinguishable entity because there exists no distinguishing description that could designate ei and not e2.",
        "e2 is a distinguishable",
        "entity and could be designated by the distinguishing description \"the red bird that is eating\".",
        "Many of the works cited above are concerned with how to generate the best distinguishing description with the best algorithm, essentially in the unary case, that is if entities properties are unary ones.",
        "They focus on the length or the relevance of the generated expressions, or on the efficiency of the algorithm.",
        "But none of them give a formal definition of these \"distinguishable entities\".",
        "They all use an intuitive definition, more or less issued from the unary case and that could be resumed as follow: an entity e is a distinguishable entity in E if and only if there exists a set of properties of e that are true ofe and ofno other entity in E.",
        "Unfortunately, this intuitive definition does not apply as it is in non-unary cases.",
        "The main problem comes with the notion of \"set of properties of e\": what is the set of properties of an entity if non-unary relations occur?",
        "Let us see this problem on an example.",
        "Suppose that we have an entity b\\ that is a bowl and that is on an entity ii which is a table.",
        "The set of entities is E = {b1, t1} with: bi: bowl ; ii: table ; on(bi, ii)",
        "What is the set of properties of bi?",
        "Dale and Haddock (1991) and, more or less, Gardent (2002), suggest that the property set for an entity includes all the relations in which it is involved (even non unary ones), and no others.",
        "Following this definition, the set of properties of bi should be {bowl(bi), on(bi,ii)}.",
        "Now, what if there is another bowl (b2), which is on a table (i2)?",
        "The set of properties of b2 is {bowl(b2), on(b2, i2)}, which is different from that",
        "is a distinguishing description for ei.",
        "But we do not make the Closed World Assumption (\"every thing that is not said is false\").",
        "So, negative properties have to appear explicitly, like positive one, in entities description; their treatment causes no particular problem in our model Natural Language Generation, pages 34 – 41, Association for Computational Linguistics",
        "of bi.",
        "But does it follow that bi is distinguishable from b2?",
        "If the \"intuitive definition\" is used, the answer is yes: the set of properties of bi (and the formula (Axbowl(x) A on(x,ii))) is true for bi and for no other entity in E = {bi; b2, ii, i2}.",
        "But, one can immediately see that the \"right\" answer should depend on what we know about ii and i2.",
        "If the only thing we know is that ii and i2 are tables, then there is no definite description that designates bi and not b2, and thus bi is not distinguishable from b2.",
        "So, even if the formula on(-, ii ) is formally different from the formula on(-, i2) and bi satisfies the first one and not the second one, that does not imply that bi is distinguishable from b2.",
        "So, the fact is that to determine if bi is distinguishable from b2, knowing that the set of properties of bi is true for bi and not for b2 is not sufficient: we have to determine if ii is distinguishable from i2.",
        "That clearly leads to a non-trivial recursive definition and non-trivial recursive processes.",
        "Two recent works describe algorithms that deal with this problem (Krahmer et al., 2003; Croitoru and van Deemter, 2007).",
        "Their works are both based on graph theory and their algorithms deal well with the non-unary case, but their computations need exponential time.",
        "In this paper, our main goal is to give a definition of a distinguishable entity which corresponds to the intuitive sense and which works well even in non-trivial cases.",
        "Then we study its properties, which leads us to an interesting notion of distance between entities.",
        "Finally, we give a polynomial algorithm able to produce a distinguishing description whenever it is possible and which is based on this definition."
      ]
    },
    {
      "heading": "2. A definition of \"distinguishable entity\"",
      "text": [
        "Intuitively, an entity ei is distinguishable from an entity e2 in two cases:",
        "• ei involves properties that are not involved by e2 (we will say that ei is 0-distinguishable from e2)",
        "• otherwise, ei and e2 are in relations (we will precisely see how below) with at least two distinguishable entities ei and e'2.",
        "In this case, we will say that ei is",
        "(k + 1)-distinguishable from e2 if ei is Ik-distinguishable from e'2.",
        "Basically, a property is an nary relation, together with a rank (the argument's position).",
        "For instance, with the fact ei eats e2, ei has the property eat with rank 1 (noted eati ) and e2 has the property eat2.",
        "So, ei and e2 do not have the same set of properties.",
        "Conversely, if ei eats X and e2 eats Y, ei and e2 involve the same property (eati).",
        "For an entity e, we denote P(e) the set of its properties.",
        "We will say that a tuple i = (xi,...,xp) matches a property pq with e if p(x i,..., Xq – i, e, Xq,..., Xp) is true.",
        "Definition 1 (k-distinguishability Dk): An entity ei is 0-distinguishable from an entity e2(we denote it ei Do e2) if P(ei) is not included in P (e2).",
        "An entity ei is k-distinguishable (k > 0)from an entity e2 (we denote it ei Dk e2) if there exists a relation Rq in P(ei) and a tuple (xi;..., Xp) such that:",
        "• (xi;..., Xp) matches Rq with ei.",
        "• For every ..., yp) that matches Rq with e2, there exists some Xi and some k' < k such that Xi is k'-distinguishable from yi.",
        "We remark that if ei Dk e2, then ei Dj e2, for every j > k. So, we can define the more general notion of distinguishability (without a rank).",
        "Definition 2 (distinguishability D): We say that an entity ei is distinguishable from an entity e2 (we denote it ei D e2) if it is k-distinguishable from e2, for some k > 0.",
        "We say that e is distinguishable in a set ofentities E if for every entity e' = e, e is distinguishable from e'.",
        "Distinguishable entities are the only one that can be designated by a definite description.",
        "Definition 1 seems rather complicated (due to the universal quantifier in the second part) and thus needs some justification.",
        "Let us see some examples:",
        "An entity e which is a cat is 0-distinguishable from an entity e' which is a dog because P(e)={cati} is not included in P(e')={dogi}.",
        "An entity e which is a cat and which eats b (a bird) is 1-distinguishable from an entity e' which is a cat and which eats m (a mouse).",
        "Actually, P(e) = {cati; eati} is included in P(e') =",
        "(cati,eati}, but there exists an entity (b) with which e is in relation (via eati ) and which is distinguishable from m, which is the only entity with which e' is in relation via eati.",
        "So, the situation can be resumed as in figure 1:",
        "e eats (b)",
        "0-distinguishable",
        "e' eats (m",
        "figure 1: e is 1-distinguishable from e'",
        "If we add the information that e' also eats f (a fish), the conclusion remains true, as we can see on figure 2.",
        "figure 2: e is 1-distinguishable from e'",
        "But if we add the information that e' also eats b', a bird not distinguishable from b, then the conclusion is no longer true (see fig. 3).",
        "tinguishable figure 3: e is not distinguishable from e'",
        "e is not distinguishable from e', no definite description can designate e and not e'.",
        "So, we see that, in order for e to be distinguishable from e', b has to be distinguishable from all the entities which are in relation with e' via eati .",
        "That illustrates the necessity of the universal quantifier in definition 1.",
        "Let us see a more complicated example, where tuples are involved.",
        "Xi, zi: ball - yi : cake X2,2/2: blond, child - Z2: child e gives x1 to x2 (e gives a ball to a blond child) e' gives yi to y2 (e' gives a cake to a blond child) e' gives zi to z2 (e' gives a ball to a child) The question is: Is e distinguishable from e'?",
        "The answer is clearly yes, \"the man who gives a ball to",
        "a blond child\" is a definite description that designates e and not e'.",
        "First, e is not 0-distinguishable from e'(P(e) = {mani; givei} is included in P(e') = {mani, givei}).",
        "So, e is 1-distinguishable from e' if we find a relation R in P(e) and a tuple T that matches R with e and such that for each tuple T' that matches R with e', T' contains an entity e'i from which the entity ei in T is 0-distinguishable.",
        "Let us check if this is true for givei and (x1, x2).",
        "Ti = (x1 , x2) matches give1 with e (give(e, y1, z1) is true).",
        "There are two tuples T2 = (y1,y2) and T3 = z2) that match give1 with e'.",
        "x1 is 0-distinguishable from y1.",
        "So it is right for",
        "T2.",
        "x2 is 0-distinguishable from z2.",
        "So it is right for",
        "T3.",
        "The situation can be resumed by the schema in figure 4:",
        "e gives to X2",
        "distinguishable \\",
        "e' gives (yi) to y2 e' gives zi to",
        "figure 4: e is 1-distinguishable from e'",
        "Let us add \"e' gives z1 to y2\" to the above example:",
        "T4 = (z1,y2) matches give1 with e'.",
        "But x1 is not distinguishable from z1 and x2 is not distinguishable from / 2.",
        "This new information prevents e being distinguishable from e'.",
        "This case is represented on figure 5:",
        "e gives^p) to e' gives zi to y2",
        "iio^distinguishability''",
        "figure 5: e is not distinguishable from e'",
        "Again, we see that it is not sufficient to check the existence of a tuple and a relation in P(e') that introduce the distinguishability to e via give1.",
        "We have to check this for each tuple that matches givei with e'.",
        "Moreover, one can also notice in the above example that the entity which \"leads to\" the k'-distinguishability is not unique.",
        "It may be different upon each tuple (x1 for T2 and x2 for T3).",
        "This is quiet different from the often used shortcut: ei is k-distinguishable from e2 if it is in relation with one entity e'i which is k'-distinguishable from an entity e'2 which is related to e2.",
        "So, although our definition may seem complicated, it cannot be simplified if we want it to seize the notion of distinguishability.",
        "We will now study some of its properties."
      ]
    },
    {
      "heading": "3. Some properties",
      "text": [
        "This definition of the k-distinguishability of an entity leads to two interesting ideas:",
        "• A set of entities can be organised in subsets or classes via a related notion, confusability.",
        "Confusability is a transitive relation and thus it defines a partial order on subsets of E.",
        "• A notion of distance can be defined from k-distinguishability.",
        "Actually, the greatest k is, the less distinguishable the related entities are.",
        "The inverse of this k defines a distance between entities.",
        "Definition 3 (Confusability C): We say that e1 is k-confusable with e2 (we denote it e1 Ck e2) when not e1 Dk e2.",
        "We say that an entity ei is confusable with another entity e2 if e1 Ck e2 for every k (we denote it e1 C e2).",
        "It is equivalent to say that an entity e1is confusable with an entity e2 ifei is not distinguishable from e2.",
        "For example, e1 is 1-confusable with e2 if e1 is not 1-distinguishable (nor 0-distinguishable) from e2.",
        "But, in the same time, ei can be 2-distinguishable from e2 and thus, not confusable with e2.",
        "We remark that if e1 Ck e2, then e1 Cj e2, for every j < k.",
        "Intuitively, one would like C to be transitive (if an entity ei is confusable with an entity e2 which is confusable with an entity e3, then ei should be confusable with e3).",
        "Theorem 1 C is transitive.",
        "Proof: We shall prove by induction on k that if e1 C e2 and e2 C e3, then e1 Ck e3, for every k > 0.",
        "If ei Ce2 and e2 Ce3, then P(ei) C P(e2) C P(e3), and so, ei Co e3.",
        "Let us suppose that, for every ei , e2 and e3, if e1 C e2 and e2 C e3, then e1 Ck e3, and that there exist three entities f , g, and h such that:",
        "/Cg, gCh and/Dfc+i h. By the induction hypothesis, /Ck h, and so P(/) C P(h).",
        "Thus, as /Dk+1 h, there exist (x1 ,..., xn) and a relation R such that:",
        "Vi < n, yi C zi Thus, for every i < n :",
        "Xi C yi and yi C zi By the induction hypothesis, for every i < n, xi Ck zi, which is in contradiction with (a).",
        "□",
        "We remark that C is reflexive and not symmetric.",
        "But, since C is a transitive relation, the relation E defined by ei E e2 if ei C e2 and e2 C ei is an equivalence relation (with this relation, we put in the same class entities which are confusable) and C, when restricted to the quotient set (the set of the equivalence classes) E/E, is a partial order that we denote <C.",
        "Since <C is an (partial) order relation on E/E, which is a finite set, it has maximal and minimal elements.",
        "The maximal elements can be seen as very well defined entities (they are confusable with no other entity in other subsets) and the minimal elements as the conceptual entities (no entities in other subsets are confusable with them, but they are confusable with many other entities).",
        "We remark that two minimal entities (as two maximal ones) are not confusable, since the set of the minimal elements of an ordered set is an antichain (as the set of the maximal elements).",
        "Thus, for example, a set of entities can be organised as in figure 6:",
        "rectangular black tables in wood black tables in wood tables in wood",
        "rectangular tables",
        "Figure 6: sets of entities ordered by <C",
        "Now, let us see that the notion of k-distinguishability leads to a notion of distance between entities.",
        "By now, if we take the smallest k such that ei is k-distinguishable from e2 (we note it «(e1, e2) (if e1 C e2, «(e1, e2) = 00)) the smaller «(e1, e2) is, the further e1 is from e2.",
        "For example, if ei is 0-distinguishable from e2, ei is very different from e2 (a cat and a dog, for instance).",
        "But if ei is not 0-distinguishable from e2 but is 1-distinguishable from it, then ei is nearer from e2 (two cats, one that eats a bird and the other that eats a mouse, for instance).",
        "So, one could expect that k is like the inverse of a distance.",
        "Let us see that point.",
        "Definition 4 Let E be a set of entities.",
        "We define on E/E:",
        "0(ei,e2) = max{(K(ei,e2) + 1) – 1, (K(e2,ei ) + – 1} if ei = e2.",
        "Theorem 2 6 is a distance on E/E.",
        "We recall that a distance on a set X is an application d : X x X – IR+ such that:",
        "Vx, y, z, d(x, y) < d(x, z) + d(z, y).",
        "Theorem 2 follows immediately from the following:",
        "Lemma 1 If e1 Dk e2, then, for every e3: ei Dfc e3 or e3 Dfc e2.",
        "Proof of Lemma 1: The proof is by induction on k.",
        "If k = 0, then P(ei) C P(e2).",
        "Thus, if P(ei) C P(e3) (i.e. ei Co e3), then P(e3) C P(e2), and so e3 Do e2.",
        "Actually, this lemma shows much more than theorem 2.",
        "It says that the entity set is structured by distinguishability in such a way that whatever the couple of entities we take, there is no other entity between them.",
        "This lemma induces a stronger property for 6:",
        "Let d be a distance on a set X.",
        "If we have:",
        "Vx,y, z, max{d(x,y), d(x, z)} > d(z,y) (which is equivalent to say that for any triple, the two greatest distances are equal), then the distance is ultrametric.",
        "Theorem 3 6 is an ultrametric distance on E/E.",
        "Ultrametric distances have a lot of properties (See (Barthelemy and Guenoche, 1991)).",
        "In particular, they are equivalent to a hierarchical classification of the underlying set (like the phylogenetic classification of natural species).",
        "More precisely, given a set X with an ultra-metric distance d, the sets Cx,y = {z/d(x, z) <",
        "d(x,y)} form a hierarchical classification of X. Conversely, given a finite set X with a hierarchical classification, if, for x = y, we define d(x, y) as the cardinality of the smallest class containing x and y, and d(x, x) = 0 for all x in X, then d is an ultrametric distance.",
        "In addition, given a set X with an ultrametric distance d, there exists a tree (called ultrametric tree) with labels on its internal nodes, its leaves indexed by the elements of X and such that:",
        "• for any two leaves x and y, the label of their lowest common ancestor is d(x, y).",
        "• for any leaf x, the labels on the path from the root to x form a decreasing sequence.",
        "For instance, with the example shown on figure 5, we obtain the tree on E/E which is shown on figure 7 (for this example, since there is no pairwise confusable entities, E/E = E):",
        "Figure 7: a tree on E/E",
        "On this tree, given a couple of entities, one can see the difficulty to distinguish them.",
        "This information has been construct in a global way (by using all the relations between entities) and it is rather different (and more accurate) from what one would say at a first glance.",
        "For instance, we can see that x1 and y1 are more difficult to distinguish than x2 and z2 or than e and e' (the label of their lowest common ancestor is 1/3 instead of 1/2)."
      ]
    },
    {
      "heading": "4. An algorithm for searching distinguishable entities",
      "text": [
        "The algorithm is based on dynamic programming (Aho et al., 1974).",
        "This is a standard technique which is used, for instance, to calculate distances in graphs.",
        "We work on a set E = {ei, .",
        ".",
        ".",
        "en} of entities.",
        "The main structure is a n x n matrix M. At each step k, the algorithm determines the couples (ei, ej) of entities such that K(ei, ej) = k and loads k into M[i, j].",
        "• At step 0, we check for each couple (ei, ej) whether P(ei) C P(ej) or not.",
        "If P(ei) C P(ej), we load 0 into M [i, j].",
        "• At step k > 0, for every couple (ei, ej) such that M[i, j] is not yet calculated, we determine if K(ei,ej) = k or not, using already calculated values in M to check conditions of definition 1.",
        "If it is the case, we load k into M[i,j ].",
        "If no value of M is updated, then the algorithm stops (if there are no e, e' in E such that e Dk e', then there exist no /, /' in E such that /Dk+i /')",
        "At the end of the algorithm, if ei D ej, M[i, j] contains K(ei, ej).",
        "We also compute an auxiliary matrix A in which we put the relations that have been used to calculate K(ei,ej).",
        "The matrix A will be used to build referring expressions.",
        "The algorithm runs in O(n • K • N • T), where K = max{K(e, e'), eD e'}, N is the greatest property arity, and T is the cardinality of the greatest set T(ei) of all couples (p, i), where p is a property and i a tuple that matches p with ei.",
        "N, T and K are rather small and can be assimilated to constants; so, if we are only concerned with the number of entities, our algorithm is in O(n).",
        "Let us see how it works on an example from (Croitoru and van Deemter, 2007):",
        "bowl |cup £l",
        "Croitoru and van Deemter (2007) represent the scene of figure 8 by an entity set E = {v0,...v7} with the following properties:",
        "v4: floor vo is in v1Vi is on V2 v3 is on v4V2 is on V4 V5 is on V4 v6 is on v4v7 is in v6",
        "Our algorithm produces the following matrix M (due to lack of space, we do not show the matrix A: its breadth would exceed the sheet):",
        "With this matrix M, one can easily determine which entities are distinguishable: they are the one with no +to on their line.",
        "Here, we can see that v5 is not distinguishable: it is distinghishable from all entities but v6",
        "It is also easy to construct sets of distinguishing properties, using matrix A.",
        "For instance, if we want to distinguish vo from v7, we use the following elements of A:",
        "A[v2,v4] = {iable1, ison1}.",
        "Since v2 is 0-distinguishable from v4, we get the following distinguishing formula:",
        "Ax Ay Az isin(x, y) A ison(y, z) A iable(z)from which one can easily obtain the following expression which distinguishes vo from v7: \"the entity which is in an entity which is on an entity which is a table\".",
        "Using this method, we obtain minimal expressions to distinguish one entity e from another entity e'.",
        "A referring expression (which distinguishes one entity e from all the others) can be obtained by computing the conjunction of all these minimal expressions.",
        "This conjunction contains many redundancies, and it can be reduced in O(n log n).",
        "Actually, by this way, one generally obtains an expression which is very close to the expression which distinguishishes e from the nearest other entity (i.e. the entity e' for which K(e, e') is maximal).",
        "For instance, in the example above, the expression which distinguishes vo from v7 is a referring one for vo: there is no other entity \"in something on a table\".",
        "So, we get sets of distinguishing properties for all the distinguishable entities of a scene in polynomial time (and more precisely in O(n log n)).",
        "This is much better than the methods of Kramer and al.",
        "(2003) and of Croitoru and van Deemter (2007), which both rely on subgraph isomorphisms (which is a NP-complete problem)."
      ]
    },
    {
      "heading": "5. Conclusion",
      "text": [
        "The two main results of this paper are:",
        "• An efficient algorithm to compute distinguishing descriptions.",
        "Our algorithm is efficient enough to be applied on complex scenes.",
        "• An ultrametric distance which captures the difficulty to distinguish two entities and provides a phylogenic classification of the entities.",
        "These two results follow from our definition of k-distinguishability.",
        "More precisely, they are due to the incremental nature of the k-distinguishability, which thus reveals to be a pivot for the Generation of Referring Expressions (GRE)."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "P. Prea is supported in part by ANR grant BLAN06-1-138894 (projet OPTICOMB)",
        "vo",
        "vi",
        "v2",
        "v3 v4",
        "v5",
        "v6",
        "v7",
        "/",
        "/",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "2 \\",
        "Vi",
        "0",
        "/",
        "0",
        "0",
        "0",
        "1",
        "1",
        "0",
        "V2",
        "0",
        "0",
        "/",
        "0",
        "0",
        "0",
        "0",
        "0",
        "V3",
        "0",
        "0",
        "0",
        "/",
        "0",
        "0",
        "0",
        "0",
        "V4",
        "0",
        "0",
        "0",
        "0",
        "/",
        "0",
        "0",
        "0",
        "V5",
        "0",
        "1",
        "0",
        "0",
        "0",
        "/",
        "to",
        "0",
        "V6",
        "0",
        "1",
        "0",
        "0",
        "0",
        "0",
        "/",
        "0",
        "V7",
        "V",
        "2",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "/"
      ]
    }
  ]
}
