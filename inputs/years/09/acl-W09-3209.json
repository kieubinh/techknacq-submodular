{
  "info": {
    "authors": [
      "Delip Rao",
      "David Yarowsky"
    ],
    "book": "Proceedings of the 2009 Workshop on Graph-based Methods for Natural Language Processing (TextGraphs-4)",
    "id": "acl-W09-3209",
    "title": "Ranking and Semi-supervised Classification on Large Scale Graphs Using Map-Reduce",
    "url": "https://aclweb.org/anthology/W09-3209",
    "year": 2009
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Delip Rao David Yarowsky",
        "of Computer Science Dept.",
        "of Computer Science",
        "Johns Hopkins University Johns Hopkins University",
        "Label Propagation, a standard algorithm for semi-supervised classification, suffers from scalability issues involving memory and computation when used with large-scale graphs from real-world datasets.",
        "In this paper we approach Label Propagation as solution to a system of linear equations which can be implemented as a scalable parallel algorithm using the map-reduce framework.",
        "In addition to semi-supervised classification, this approach to Label Propagation allows us to adapt the algorithm to make it usable for ranking on graphs and derive the theoretical connection between Label Propagation and PageRank.",
        "We provide empirical evidence to that effect using two natural language tasks - lexical relatedness and polarity induction.",
        "The version of the Label Propagation algorithm presented here scales linearly in the size of the data with a constant main memory requirement, in contrast to the quadratic cost of both in traditional approaches."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Natural language data often lend themselves to a graph-based representation.",
        "Words can be linked by explicit relations as in WordNet (Fellbaum, 1989), and documents can be linked to one another via hyperlinks.",
        "Even in the absence of such a straightforward representation it is possible to derive meaningful graphs such as the nearest neighbor graphs, as done in certain manifold learning methods, e.g. Roweis and Saul (2000); Belkin and Niyogi (2001).",
        "Typically, these graphs share the following properties:",
        "• They are edge-weighted.",
        "• The edge weight encodes some notion of relatedness between the vertices.",
        "• The relation represented by edges is at least weakly transitive.",
        "Examples of such relations include, \"is similar to\", \"is more general than\", and so on.",
        "It is important that the relations selected are transitive for the graph-based learning methods using random walks.",
        "Such graphs present several possibilities for solving natural language problems involving ranking, classification, and clustering.",
        "Graphs have been successfully employed in machine learning in a variety of supervised, unsupervised, and semi-supervised tasks.",
        "Graph based algorithms perform better than their counterparts as they capture the latent structure of the problem.",
        "Further, their elegant mathematical framework allows simpler analysis to gain a deeper understanding of the problem.",
        "Despite these advantages, implementations of most graph-based learning algorithms do not scale well on large datasets from real world problems in natural language processing.",
        "With large amounts of unlabeled data available, the graphs can easily grow to millions of nodes and most existing non-parallel methods either fail to work due to resource constraints or find the computation intractable.",
        "In this paper we describe a scalable implementation of Label Propagation, a popular random walk based semi-supervised classification method.",
        "We show that our framework can also be used for ranking on graphs.",
        "Our parallel formulation shows a theoretical connection between Label Propagation and PageRank.",
        "We also confirm this empirically using the lexical relatedness task.",
        "The proposed Parallel Label Propagation scales up linearly in the data and the number of processing elements available.",
        "Also, the main memory required by the method does not grow with the size of the graph.",
        "The outline of this paper is as follows: Section 2 introduces the manifold assumption and explains why graph-based learning algorithms perform better than their counterparts.",
        "Section 3 motivates the random walk based approach for learning on graphs.",
        "Section 4 introduces the Label Propagation method by Zhu et al.",
        "(2003).",
        "In Section 5 we describe a method to scale up Label Propagation using Map-Reduce.",
        "Section 6 shows how Label Propagation could be used for ranking on graphs and derives the relation between Label Propagation and PageRank.",
        "Parallel Label Propagation is evaluated on ranking and semi-supervised classification problems in natural language processing in Section 8.",
        "We study scalability of this algorithm in Section 9 and describe related work in the area of parallel algorithms and machine learning in Section 10."
      ]
    },
    {
      "heading": "2. Manifold Assumption",
      "text": [
        "The training data V can be considered as a collection of tuples V = (X, y) where y are the labels and X are the features, and the learned model M is a surrogate for an underlying physical process which generates the data V. The data V can be considered as a sampling from a smooth surface or a manifold which represents the physical process.",
        "This is known as the manifold assumption (Belkin et al., 2005).",
        "Observe that even in the simple case of Euclidean data (X = {x : x e M.d}) as shown in Figure 1, points that lie close in the Euclidean space might actually be far off on the manifold.",
        "A graph, as shown in Figure lc, approximates the structure of the manifold which was lost in vectorized algorithms operating in the Euclidean space.",
        "This explains the better performance of graph algorithms for learning as seen in the literature."
      ]
    },
    {
      "heading": "3. Distance measures on graphs",
      "text": [
        "Most learning tasks on graphs require some notion of distance or similarity to be defined between the vertices of a graph.",
        "The most obvious measure of distance in a graph is the shortest path between the vertices, which is defined as the minimum number of intervening edges between two vertices.",
        "This is also known as the geodesic distance.",
        "To convert this distance measure to a similarity measure, we take the reciprocal of the shortest-path length.",
        "We refer to this as the geodesic similarity.",
        "While shortest-path distances are useful in many applications, it fails to capture the following observation.",
        "Consider the subgraph of WordNet shown in Figure 2.",
        "The term moon is connected to the terms religious-leader and satellite.",
        "Observe that both religious_leader and satellite are at the same shortest path distance from moon.",
        "However, the connectivity structure of the graph would suggest satellite to be more similar than religious_leader as there are multiple senses, and hence multiple paths, connecting satellite and moon.",
        "Thus it is desirable to have a measure that captures not only path lengths but also the connectivity structure of the graph.",
        "This notion is elegantly captured using random walks on graphs."
      ]
    },
    {
      "heading": "4. Label Propagation: Random Walk on Manifold Graphs",
      "text": [
        "An efficient way to combine labeled and unlabeled data involves construction of a graph from the data and performing a Markov random walk on the graph.",
        "This has been utilized in Szummer and Jaakkola (2001), Zhu et.",
        "al.",
        "(2003), and Azran (2007).",
        "The general idea of Label Propagation involves defining a probability distribution F over the labels for each node in the graph.",
        "For labeled nodes, this distribution reflects the true labels and the aim is to recover this distribution for the unlabeled nodes in the graph.",
        "Consider a graph G(V, E, W) with vertices V, edges E, and annxn edge weight matrix W =",
        "lrThe religious_leader sense of moon is due to Sun Myung Moon, a US religious leader.",
        "Figure 1: Manifold Assumption [Belkin et al., 2005]: Data lies on a manifold (a) and points along the manifold are locally similar (b).",
        "[wij], where n = \\V\\.",
        "The Label Propagation algorithm minimizes a quadratic energy function",
        "The general recipe for using random walks for classification involves constructing the graph Laplacian and using the pseudo-inverse of the Laplacian as a kernel (Xiao and Gutman, 2003).",
        "Given a weighted undirected graph, G(V, E, W), the Laplacian is defined as follows:",
        "{ di ifi = j – w^ if i is adjacent to j (2) 0 otherwise",
        "where di = £ wv-",
        "It has been shown that the pseudo-inverse of the Laplacian L is a kernel (Xiao and Gutman, 2003), i.e., it satisfies the Mercer conditions.",
        "However, there is a practical limitation to this approach.",
        "For very large graphs, even if the graph Laplacians are sparse, their pseudo-inverses are dense matrices requiring 0{n) space.",
        "This can be prohibitive in most computing environments."
      ]
    },
    {
      "heading": "5. Parallel Label Propagation",
      "text": [
        "In developing a parallel algorithm for Label Propagation we instead take an alternate approach and completely avoid the use of inverse Laplacians for the reasons stated above.",
        "Our approach follows from the observation made from Zhu et al.",
        "'s (2003) Label Propagation algorithm:",
        "Observation: In a weighted graph G(V, E, W) with n = \\V\\ vertices, minimization of Equation (1) is equivalent to solving the following system of linear equations.",
        "£ Ft(c) = l Vi,jeV.",
        "c G classes(i)",
        "We use this observation to derive an iterative Label Propagation algorithm that we will later parallelize.",
        "Consider a weighted undirected graph G(V, E,W) with the vertex set partitioned into Vl and Vu (i.e., V = Vl U Vu) such that all vertices in Vl are labeled and all vertices in Vu are unlabeled.",
        "Typically only a small set of vertices are labeled, i.e., \\Vu\\ » \\Vl\\- Let Fu denote the probability distribution over the labels associated with vertex u G V. For v G Vl, Fv is known, and we also add a \"dummy vertex\" v' to the graph G such that wvvi = 1 and Fvi = Fv.",
        "This is equivalent to the \"clamping\" done in (Zhu et al., 2003).",
        "Let Vd be the set of dummy vertices.",
        "Algorithm 1: Iterative Label Propogation forall v G (V U VD) do",
        "(v,u)eE Row normalize Fv.",
        "end until convergence or maxlterations",
        "Observe that every iteration of Algorithm 1 performs certain operations on each vertex of the graph.",
        "Further, these operations only rely on local information (from neighboring vertices of the graph).",
        "This leads to the parallel algorithm (Algorithm 2) implemented using the map-reduce model.",
        "Map-Reduce (Dean and Ghemawat, 2004) is a paradigm for implementing distributed algorithms with two user supplied functions \"map\" and \"reduce\".",
        "The map function processes the input key/value pairs with the key being a unique identifier for a node in the graph and the value corresponds to the data associated with the node.",
        "The mappers run on different machines operating on different parts of the data and the reduce function aggregates results from various mappers.",
        "Algorithm 2: Parallel Label Propagation map(key, value): begin neighbors = getNeighbors(value); foreach n G neighbors do",
        "d += w * n.getDistributionO;",
        "normalize(d); value.setDistribution(d);",
        "Emit(key, value); end reduce(key, values): Identity Reducer",
        "Algorithm 2 represents one iteration of Algorithm 1.",
        "This is run repeatedly until convergence or for a specified number of iterations.",
        "The algorithm is considered to have converged if the label distributions associated with each node do not change significantly, i.e., | |F(i+1) – F(j) 11 < e for a fixed e > 0."
      ]
    },
    {
      "heading": "6. Label Propagation for Ranking",
      "text": [
        "Graph ranking is applicable in a variety of problems in natural language processing and information retrieval.",
        "Given a graph, we would like to rank the vertices of a graph with respect to a node, called the pivot node or query node.",
        "Label Propagation and its variants (Szummer and Jaakkola, 2001; Zhu et al., 2003; Azran, 2007) have been traditionally used for semi-supervised classification.",
        "Our view of Label Propagation (via Algorithm 1) suggests a way to perform ranking on graphs.",
        "Ranking on graphs can be performed in the Parallel Label Propagation framework by associating a single point distribution with all vertices.",
        "The pivot node has a mass fixed to the value 1 at all iterations.",
        "In addition, the normalization step in Algorithm 2 is omitted.",
        "At the end of the algorithm, the mass associated with each node determines its rank.",
        "It is interesting to note that Algorithm 1 brings out a connection between Label Propagation and",
        "PageRank (Page et al., 1998).",
        "PageRank is a random walk model that allows the random walk to \"jump\" to its initial state with a nonzero probability (a).",
        "Given the probability transition matrix P = [Prs], where Prs is the probability of jumping from node r to node s, the weight update for any vertex (say v) is derived as follows",
        "Notice that when a = 0.5, PageRank is reduced to Algorithm 1, by a constant factor, with the additional (1 – a)vo term corresponding to the contribution from the \"dummy vertices\" Vd in Algorithm 1.",
        "We can in fact show that Algorithm 1 reduces to PageRank as follows:",
        "„ (1 – a) ,e.",
        "where (3 = (-1~\"->.",
        "Thus by setting the edge weights to the dummy vertices to [3, i.e., V(z, z') G E and z G Vo, wzzi = [3, Algorithm 1, and hence Algorithm 2, reduces to PageRank.",
        "Observe that when (3 = 1 we get the original Algorithm 1.",
        "We'll refer to this as the \"/3-correction\"."
      ]
    },
    {
      "heading": "7. Graph Representation",
      "text": [
        "Since Parallel Label Propagation algorithm uses only local information, we use the adjacency list representation (which is same as the sparse adjacency matrix representation) for the graph.",
        "This representation is important for the algorithm to have a constant main memory requirement as no further lookups need to be done while computing the label distribution at a node.",
        "The interface definition for the graph is listed in Appendix A.",
        "Often graph data is available in an edge format, as <source, destination, weight> triples.",
        "We use another map-reduce step (Algorithm 3) to convert that data to the form shown in Appendix A."
      ]
    },
    {
      "heading": "8. Evaluation",
      "text": [
        "We evaluate the Parallel Label Propagation algorithm for both ranking and semi-supervised classification.",
        "In ranking our goal is to rank the vertices of a graph with respect to a given node called the pivot/query node.",
        "In semi-supervised classification, we are given a graph with some vertices",
        "Algorithm 3: Graph Construction map(key, value): begin edgeEntry = value;",
        "Node n(edgeEntry); reduce(key, values): begin",
        "Emit(key, serialize(values)); end labeled and would like to predict labels for the remaining vertices.",
        "To evaluate ranking, we consider the problem of deriving lexical relatedness between terms.",
        "This has been a topic of interest with applications in word sense disambiguation (Patwardhan et al., 2005), paraphrasing (Kauchak and Barzilay, 2006), question answering (Prager et al., 2001), and machine translation (Blatz et al., 2004), to name a few.",
        "Following the tradition in previous literature we evaluate on the Miller and Charles (1991) dataset.",
        "We compare our rankings with the human judegments using the Spearman rank correlation coefficient.",
        "The graph for this task is derived from WordNet, an electronic lexical database.",
        "We compare Algorithm 2 with results from using geodesic similarity as a baseline.",
        "As observed in Table 1, the parallel implementation in Algorithm 2 performs better than ranking using geodesic similarity derived from shortest path lengths.",
        "This reinforces the motivation of using random walks as described in Section 3.",
        "We now empirically verify the equivalence of the /3-corrected Parallel Label Propagation and PageRank established in Equation 4.",
        "To do this, we use a = 0.1 in the PageRank algorithm and set (3 = (-1~\"-> = 9 in the /3-corrected Parallel Label Propagation algorithm.",
        "The results are seen in Table 2.",
        "Table 2: Lexical-relatedness results: Comparision of PageRank and /3-corrected Parallel Label Propagation",
        "Label Propagation was originally developed as a semi-supervised classification method.",
        "Hence Algorithm 2 can be applied without modification.",
        "After execution of Algorithm 2, every node v in the graph will have a distribution over the labels Fv.",
        "The predicted label is set to arg max Fv(c).",
        "c€classes(i>)",
        "To evaluate semi-supervised classification we consider the problem of learning sentiment polarity lexicons.",
        "We consider the polarity of a word to be either positive or negative.",
        "For example, words such as good, beautiful, and wonderful are considered as positive sentiment words; whereas words such as bad, ugly, and sad are considered negative sentiment words.",
        "Learning such lexicons has applications in sentiment detection and opinion mining.",
        "We treat sentiment polarity detection as a semi-supervised Label Propagation problem in a graph.",
        "In the graph, each node represents a word whose polarity is to be determined.",
        "Each weighted edge encodes a relation that exists between two words.",
        "Each node (word) can have two labels: positive or negative.",
        "It is important to note that Label Propagation, and hence Algorithms 1&2, support multi-class classification but for the purpose of this task we have two labels.",
        "The graph for the task is derived from WordNet.",
        "We use the General Inquirer (GI) data for evaluation.",
        "General Inquirer is lexicon of English words hand-labeled with categorical information along several dimensions.",
        "One such dimension is called valence, with 1915 words labeled \"Positiv\" (sic) and 2291 words labeled \"Negativ\" for words with positive and negative sentiments respectively.",
        "We used a random 20% of the data as our seed labels and the rest as our unlabeled data.",
        "We compare our results (F-scores) with another scalable previous work by Kim and Hovy (Kim and Hovy, 2006) in Table 2 for the same seed set.",
        "Their approach starts with a few seeds of positive and negative terms and bootstraps the list by considering all synonyms of positive word as positive and antonyms of positive words as negative.",
        "This procedure is repeated mutatis mutandis for negative words in the seed list until there are no more words to add.",
        "Method",
        "Spearman Correlation",
        "PageRank (a = 0.1) Parallel Label Propagation (ß = 9)",
        "0.39 0.39",
        "Method",
        "Spearman Correlation",
        "Geodesic (baseline) Parallel Label Propagation",
        "0.28 0.36",
        "The performance gains seen in Table 3 should be attributed to the Label Propagation in general as the previous work (Kim and Hovy, 2006) did not utilize a graph based method."
      ]
    },
    {
      "heading": "9. Scalability experiments",
      "text": [
        "We present some experiments to study the scalability of the algorithm presented.",
        "All our experiments were performed on an experimental cluster of four machines to test the concept.",
        "The machines were Intel Xeon 2.4 GHz with 1Gb main memory.",
        "All performance measures were averaged over 20 runs.",
        "Figure 3a shows scaleup of the algorithm which measures how well the algorithm handles increasing data sizes.",
        "For this experiment, we used all nodes in the cluster.",
        "As observed, the increase in time is at most linear in the size of the data.",
        "Figure 3b shows speedup of the algorithm.",
        "Speedup shows how well the algorithm performs with increase in resources for a fixed input size.",
        "In",
        "Number of processing elements (PE) in the cluster",
        "this case, we progressively increase the number of nodes in the cluster.",
        "Again, the speedup achieved is linear in the number of processing elements (CPUs).",
        "An appealing factor of Algorithm 2 is that the memory used by each mapper process is fixed regardless of the size of the graph.",
        "This makes the algorithm feasible for use with large-scale graphs."
      ]
    },
    {
      "heading": "10. Related Work",
      "text": [
        "Historically, there is an abundance of work in parallel and distributed algorithms for graphs.",
        "See Grama et al.",
        "(2003) for survey chapters on the topic.",
        "In addition, the emergence of open-source implementations of Google's map-reduce (Dean and Ghemawat, 2004) such as Hadoop has made parallel implementations more accessible.",
        "Recent literature shows tremendous interest in application of distributed computing to scale up machine learning algorithms.",
        "Chu et al.",
        "(2006) describe a family of learning algorithms that fit the Statistical Query Model (Kearns, 1993).",
        "These algorithms can be written in a special summation form that is amenable to parallel speed-up.",
        "Examples of such algorithms include Naive Bayes, Logistic Regression, backpropagation in Neural Networks, Expectation Maximization (EM), Principal Component Analysis, and Support Vector Machines to name a few.",
        "The summation form can be easily decomposed so that the mapper can compute the partial sums that are then aggregated by a reducer.",
        "Wolfe et al.",
        "(2008) describe an approach to estimate parameters via the EM algorithm in a setup aimed to minimize communication latency.",
        "The k-means clustering algorithm has been an archetype of the map-reduce framework with several implementations available on the web.",
        "In addition, the Netflix Million Dollar Challengegenerated sufficient interest in large scale clustering algorithms.",
        "(McCallum et al., 2000), describe algorithmic improvements to the k-means algorithm, called canopy clustering, to enable efficient parallel clustering of data.",
        "Method",
        "Nouns",
        "Verbs",
        "Adjectives",
        "Kim & Hovy Parallel Label Propagation",
        "34.80 58.53",
        "53.36 83.40",
        "47.28 72.95",
        "While there is earlier work on scalable map-reduce implementations of PageRank (E.g., Gle-ich and Zhukov (2005)) there is no existing literature on parallel algorithms for graph-based semi-supervised learning or the relationship between PageRank and Label Propagation."
      ]
    },
    {
      "heading": "11. Conclusion",
      "text": [
        "In this paper, we have described a parallel algorithm for graph ranking and semi-supervised classification.",
        "We derived this by first observing that the Label Propagation algorithm can be expressed as a solution to a set of linear equations.",
        "This is easily expressed as an iterative algorithm that can be cast into the map-reduce framework.",
        "This algorithm uses fixed main memory regardless of the size of the graph.",
        "Further, our scalability study reveals that the algorithm scales linearly in the size of the data and the number of processing elements in the cluster.",
        "We also showed how Label Propagation can be used for ranking on graphs and the conditions under which it reduces to PageRank.",
        "We evaluated our implementation on two learning tasks - ranking and semi-supervised classification - using examples from natural language processing including lexical-relatedness and sentiment polarity lexicon induction with a substantial gain in performance.",
        "A Appendix A: Interface definition for Undirected Graphs",
        "In order to guarantee the constant main memory requirement of Algorithm 2, the graph representation should encode for each node, the complete information about it's neighbors.",
        "We represent our undirected graphs in the Google's Protocol Buffer format.",
        "Protocol Buffers allow a compact, portable on-disk representation that is easily extensible.",
        "This definition can be compiled into efficient Java/C++ classes.",
        "The interface definition for undirected graphs is listed below:",
        "implementation available at",
        "package graph; message NodeNeighbor { required string id = 1; required double edgeWeight = 2; repeated double labelDistribution = 3;",
        "message UndirectedGraphNode { required string id = 1; repeated NodeNeighbor neighbors = 2; repeated double labelDistribution = 3; message UndirectedGraph { repeated UndirectedGraphNode nodes = 1;"
      ]
    }
  ]
}
