{
  "info": {
    "authors": [
      "Manoj Kumar Chinnakotla",
      "Om P. Damani"
    ],
    "book": "Proceedings of the 2009 Named Entities Workshop: Shared Task on Transliteration (NEWS 2009)",
    "id": "acl-W09-3508",
    "title": "Experiences with English-Hindi, English-Tamil and English-Kannada Transliteration Tasks at NEWS 2009",
    "url": "https://aclweb.org/anthology/W09-3508",
    "year": 2009
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Manoj Kumar Chinnakotla and Om P. Damani",
        "We use a Phrase-Based Statistical Machine Translation approach to Transliteration where the words are replaced by characters and sentences by words.",
        "We employ the standard SMT tools like GIZA++ for learning alignments and Moses for learning the phrase tables and decoding.",
        "Besides tuning the standard SMT parameters, we focus on tuning the Character Sequence Model (CSM) related parameters like order of the CSM, weight assigned to CSM during decoding and corpus used for CSM estimation.",
        "Our results show that paying sufficient attention to CSM pays off in terms of increased transliteration accuracies."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Transliteration of Named-Entities (NEs) is an important problem that affects the accuracy of many NLP applications like Cross Lingual Search and Machine Translation.",
        "Transliteration is defined as the process of automatically mapping a given grapheme sequence in the source language to a grapheme sequence in the target language such that it preserves the pronunciation of the original source word.",
        "A Grapheme refers to the unit of written language which expresses a phoneme in the language.",
        "Multiple alphabets could be used to express a grapheme.",
        "For example, sh is considered a single grapheme expressing the phoneme /SH/.",
        "For phonetic orthography like De-vanagari, each grapheme corresponds to a unique phoneme.",
        "However, for English, a grapheme like c may map to multiple phonemes /S/,/K/.",
        "An example of transliteration is mapping the Devanagari grapheme sequence fy frt\" to its phonetically equivalent grapheme sequence Prince Harry in English.",
        "This paper discusses our transliteration approach taken for the NEWS 2009 Machine Transliteration Shared Task [Li et al.2009b, Li et al.2009a].",
        "We model the transliteration problem as a Phrased-Based Machine Translation problem.",
        "Later, using the development set, we tune the various parameters of the system like order of the Character Sequence Model (CSM), typically called language model, weight assigned to CSM during decoding and corpus used to estimate the CSM.",
        "Our results show that paying sufficient attention to the CSM pays off in terms of improved accuracies."
      ]
    },
    {
      "heading": "2. Phrase-Based SMT Approach to Transliteration",
      "text": [
        "In the Phrase-Based SMT Approach to Transliteration [Sherif and Kondrak2007, Huang2005], the words are replaced by characters and sentences are replaced by words.",
        "The corresponding noisy channel model formulation where a given english word e is to be transliterated into a foreign word h, is given as:",
        "In Equation 1, Pr(e\\h) is known as the translation model which gives the probability that the character sequence h could be transliterated to e and Pr(h) is known as the character sequence model typically called language model which gives the probability that the character sequence h forms a valid word in the target language.",
        "Given the parallel training data pairs, we preprocessed the source (English) and target (Hindi, Tamil and Kannada) strings into character sequences.",
        "We then ran the GIZA++ [Och and Ney2003] aligner with default options to obtain the character-level alignments.",
        "For alignment, except for Hindi, we used single character-level units without any segmentation.",
        "In case of Hindi, we did a simple segmentation where we added the halant character (U094D) to the previous Hindi character.",
        "Moses Toolkit [Hoang et al.2007] was then used to learn the phrase-tables for English-Hindi, English-Tamil and English-Kannada.",
        "We also learnt the character sequence models on the target language training words using the SRILM toolkit [Stolcke2002].",
        "Given a new English word, we split the word into sequence of characters and run the Moses decoder with the phrase-table of target language obtained above to get the transliterated word.",
        "We ran Moses with the DISTINCT option to obtain the top k distinct transliterated options.",
        "The Moses decoder computes the cost of each translation as a product of probability costs of four models: a) translation model b) language model c) distortion model and d) word penalty as shown in Equation 2.",
        "The distortion model controls the cost of reordering phrases (transliteration units) in a given sentence (word) and the word penalty model controls the length of the final translation.",
        "The parameters AT, ACSM , AD and AW control the relative importance given to each of the above models.",
        "Since no reordering of phrases is required during translation task, we assign a zero weight to AD.",
        "Similarly, we varied the word penalty factor AWbetween { – 1, 0, +1} and found that it achieves maximum accuracy at 0.",
        "All the above tuning was done with a trigram CSM and default weight (0.5) in Moses for AT.",
        "Task",
        "Run",
        "Optimal Parameter Set",
        "Accuracy in top-1",
        "Mean F-score",
        "MRR",
        "MAPref",
        "MAP10",
        "MAPsys",
        "English-Hindi",
        "Standard",
        "LM Order: 5, LM Weight: 0.6",
        "Ü.47",
        "Ü.86",
        "Ü.58",
        "Ü.47",
        "Ü.18",
        "Ü.2Ü",
        "English-Hindi",
        "Nonstandard",
        "LM Order: 5, LM Weight:",
        "0.6",
        "Ü.52",
        "Ü.87",
        "Ü.62",
        "Ü.52",
        "Ü.19",
        "Ü.21",
        "English-Tamil",
        "Standard",
        "LM Order: 5,",
        "LM Weight:",
        "0.3",
        "Ü.45",
        "Ü.88",
        "Ü.56",
        "Ü.45",
        "Ü.18",
        "Ü.18",
        "English-Kannada",
        "Standard",
        "LM Order: 5, LM Weight: 0.3",
        "Ü.44",
        "Ü.87",
        "Ü.55",
        "Ü.44",
        "Ü.17",
        "Ü.18",
        "Task",
        "Run",
        "Accuracy in",
        "top-1",
        "Mean F-score",
        "MRR",
        "MAPref",
        "MAP10",
        "MAPsys",
        "English-Hindi",
        "Standard",
        "0.42",
        "0.86",
        "0.54",
        "0.42",
        "0.18",
        "0.20",
        "English-Hindi",
        "Non-standard",
        "0.49",
        "0.87",
        "0.59",
        "0.48",
        "0.20",
        "0.23",
        "English-Tamil",
        "Standard",
        "0.41",
        "0.89",
        "0.54",
        "0.40",
        "0.18",
        "0.18",
        "English-Kannada",
        "Standard",
        "0.36",
        "0.86",
        "0.48",
        "0.35",
        "0.16",
        "0.16",
        "Task",
        "Run",
        "Baseline Model (LM Order N=3)",
        "Best Run",
        "%",
        "Improvement",
        "English-Hindi",
        "Standard",
        "0.4",
        "0.42",
        "5.00",
        "English-Hindi",
        "Non-standard",
        "0.37",
        "0.49",
        "32.43",
        "English-Tamil",
        "Standard",
        "0.39",
        "0.45",
        "15.38",
        "English-Kannada",
        "Standard",
        "0.36",
        "0.36",
        "0.00",
        "In addition to the above mentioned parameters, we varied the order of the CSM and the monolingual corpus used to estimate the CSM.",
        "For each task, we started with a trigram CSM as mentioned above and tuned both the order of the CSM and ACSM on the development set.",
        "The optimal set of parameters and the development set results are shown in Figure 1.",
        "In addition, we use a monolingual Hindi corpus of around 0.4 million documents called Guruji corpus.",
        "We extracted the 2.6 million unique words from the above corpus and trained a CSM on that.",
        "This CSM which was learnt on the monolingual Hindi corpus was used for the non-standard Hindi run.",
        "We repeat the above procedure of tuning the order of CSM and ACSM and find the optimal set of parameters for the non-standard run on the development set."
      ]
    },
    {
      "heading": "3. Results and Discussion",
      "text": [
        "The details of the NEWS 2009 dataset for Hindi, Kannada and Tamil are given in [Li et al.2009a, Kumaran and Kellner2007].",
        "The final results of our system on the test set are shown in Figure 2.",
        "Figure 3 shows the improvements obtained on test set by tuning the CSM parameters.",
        "The trigram CSM model used along with the optimal Moses parameter set tuned on development set was taken as baseline for the above experiments.",
        "The results show that a major improvement (32.43%) was obtained in the non-standard run where the monolingual Hindi corpus was used to learn the CSM.",
        "Because of the use of monolingual Hindi corpus in the non-standard run, the transliteration accuracy improved by 22.5% when compared to the standard run.",
        "The improvements (15.38%) obtained in Tamil are also significant.",
        "However, the improvement in Hindi standard run was not significant.",
        "In Kannada, there was no improvement due to tuning of LM parameters.",
        "This needs further investigation.",
        "The above results clearly highlight the importance of improving CSM accuracy since it helps in improving the transliteration accuracy.",
        "Moreover, improving the CSM accuracy only requires monolingual language resources which are easy to obtain when compared to parallel transliteration training data."
      ]
    },
    {
      "heading": "4. Conclusion",
      "text": [
        "We presented the transliteration system which we used for our participation in the NEWS 2009 Machine Transliteration Shared Task on Transliteration.",
        "We took a Phrase-Based SMT approach to transliteration where words are replaced by characters and sentences by words.",
        "In addition to the standard SMT parameters, we tuned the CSM related parameters like order of the CSM, weight assigned to CSM and corpus used to estimate the CSM.",
        "Our results show that improving the accuracy of CSM pays off in terms of improved transliteration accuracies."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "We would like to thank the Indian search-engine company Guruji (http://www.guruji.com) for providing us the Hindi web content which was used to train the language model for our nonstandard Hindi runs."
      ]
    }
  ]
}
