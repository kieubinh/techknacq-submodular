{
  "info": {
    "authors": [
      "Mitesh M. Khapra",
      "Pushpak Bhattacharyya"
    ],
    "book": "Proceedings of the 2009 Named Entities Workshop: Shared Task on Transliteration (NEWS 2009)",
    "id": "acl-W09-3518",
    "title": "Improving Transliteration Accuracy Using Word-Origin Detection and Lexicon Lookup",
    "url": "https://aclweb.org/anthology/W09-3518",
    "year": 2009
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Improving transliteration accuracy using word-origin detection and",
        "lexicon lookup",
        "Mitesh M. Khapra Pushpak Bhattacharyya",
        "IIT Bombay IIT Bombay",
        "miteshk@cse.iitb.ac.in pb@cse.iitb.ac.in",
        "We propose a framework for transliteration which uses (i) a word-origin detection engine (pre-processing) (ii) a CRF based transliteration engine and (iii) a re-ranking model based on lexicon-lookup (post-processing).",
        "The results obtained for English-Hindi and English-Kannada transliteration show that the preprocessing and post-processing modules improve the top-1 accuracy by 7.1%."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Machine transliteration is the method of automatically converting Out-Of-Vocabulary (OOV) words in one language to their phonetic equivalents in another language.",
        "An attempt is made to retain the original pronunciation of the source word to as great an extent as allowed by the orthographic and phonological rules ofthe target language.",
        "This is not a great challenge for language pairs like Hindi-Marathi which have very similar alphabetic and phonetic sets.",
        "However, the problem becomes non-trivial for language pairs like English-Hindi and English-Kannada which have reasonably different alphabet sets and sound systems.",
        "Machine transliteration find its application in Cross-Lingual Information Retrieval (CLIR) and Machine Translation (MT).",
        "In CLIR, machine transliteration can help in translating the OOV terms like proper names and technical terms which frequently appear in the source language queries (e.g. Jaipur in \"Jaipur palace\").",
        "Similarly it can help improve the performance of MT by translating proper names and technical terms which are not present in the translation dictionary.",
        "Current models for transliteration can be classified as grapheme-based models, phoneme-based models and hybrid models.",
        "Grapheme-based models like source channel model (Lee and Choi, 1998), Maximum Entropy Model (Goto et al., 2003), Conditional Random Fields (Veeravalli et al., 2008) and Decision Trees (Kang and Choi, 2000) treat transliteration as an orthographic process and try to map the source graphemes directly to the target graphemes.",
        "Phoneme based models like the ones based on Weighted Finite State Transducers (WFST) (Knight and Graehl, 1997) and extended Markov window (Jung et al., 2000) treat transliteration as a phonetic process rather than an orthographic process.",
        "Under this framework, transliteration is treated as a conversion from source grapheme to source phoneme followed by a conversion from source phoneme to target grapheme.",
        "Hybrid models either use a combination of a grapheme based model and a phoneme based model (Stalls and Knight, 1998) or capture the correspondence between source graphemes and source phonemes to produce target language graphemes (Oh and Choi, 2002).",
        "Combining any of the above transliteration engines with preprocessing modules like word-origin detection (Oh and Choi, 2002) and/or post-processing modules like re-ranking using clues from monolingual resources (Al-Onaizan and Knight, 2002) can enhance the performance of the system.",
        "We propose such a framework which uses (i) language model based word-origin detection (ii) CRF based transliteration engine and (iii) a re-ranking model based on lexicon lookup on the target language (Hindi and Kannada in our case).",
        "The roadmap of the paper is as follows.",
        "In section 2 we describe the 3 components of the proposed framework.",
        "In section 3 we present the results for English-Hindi and English-Kannada transliteration on the datasets (Kumaran and Kellner, 2007) released for NEWS 2009 Machine Transliteration Shared Task(Haizhou et al., 2009).",
        "Section 4 concludes the paper."
      ]
    },
    {
      "heading": "2. Proposed framework for Transliteration",
      "text": [
        "To emphasize the importance of Word Origin Detection we consider the example of letter 'd'.",
        "When'd' appears in a name of Western origin (e.g. Daniel, Durban) and is not followed by the letter 'h' , it invariably gets transliterated as Hindi letter T, whereas, if it appears in a name of Indic origin (e.g. Indore, Jharkhand) then it is equally likely to be transliterated as 3\" or T. This shows that the decision is influenced by the origin of the word.",
        "The Indic dataset (Hindi, Kannada, and Tamil) for the Shared Task consisted of a mix of Indic and Western names.",
        "We therefore felt the need of training separate models for words of Indic origin and words of Western origin.",
        "For this we needed to separate the words in the training data based on their origin.",
        "We first manually classified 3000 words from the training set into words of Indic origin and Western origin.",
        "These words were used as seed input for the bootstrapping algorithm described below:",
        "1.",
        "Build two n-gram language models: one for the already classified names of Indic origin and another for the names of Western origin.",
        "Here, by n-gram we mean n-character obtained by splitting the words into a sequence of characters.",
        "2.",
        "Split each of the remaining words into a sequence of characters and find the probability of this sequence using the two language models constructed in step 1.",
        "3.",
        "If the probability of a word (i.e. a sequence of characters) is higher in the Indic language model than in the Western language model then classify it as Indic word else classify it as Western word.",
        "4.",
        "Repeat steps 1-3 till all words have been classified.",
        "Thus, we classified the entire training set into words of Indic origin and words of Western origin.",
        "The two language models (one for words of Indic origin and another for words of Western origin) thus obtained were then used to classify the test data using steps 2 and 3 of the above algorithm.",
        "Manual verification showed that this method was able to determine the origin of the words in the test data with an accuracy of 97%.",
        "Conditional Random Fields (Lafferty et al., 2001) are undirected graphical models used for labeling sequential data.",
        "Under this model, the conditional probability distribution of the target word given the source word is given by, X = source word (English) Y = target word (Hindi, Kannada) T = length of source word (English) K = number of features Afc = feature weight Z(X) = normalization constant",
        "CRF++ which is an open source implementation of CRF was used for training and decoding.",
        "GIZA++ (Och and Ney, 2000), which is a freely available implementation of the IBM alignment models (Brown et al., 1993) was used to get character level alignments for English-Hindi word pairs in the training data.",
        "Under this alignment, each character in the English word is aligned to zero or more characters in the corresponding Hindi word.",
        "The following features are then generated using this character-aligned data (here ei and hiare the characters at position i of the source word and target word respectively):",
        "• hi and source character bigrams ( |ei_i, ei} or {ei, ei+i})",
        "Language model",
        "CRF based",
        "Re-ranking using",
        "based word-origin",
        "->",
        "transliteration",
        "dictionary",
        "detection",
        "engine",
        "look-up",
        "• hi, hi_i and source character bigrams",
        "• hi, hi_i and source character trigrams",
        "Two separate models were trained: one for the words of Indic origin and another for the words of Western origin.",
        "At the time of testing, the words were first classified as Indic origin words and Western origin words using the classifier described in section 2.1.",
        "The top-10 transliterations for each word were then generated using the correct CRF model depending on the origin of the word.",
        "Since the dataset for the Shared Task contains words of Indic origin there is a possibility that the correct transliteration of some of these words may be found in a Hindi lexicon.",
        "Such a lexicon containing 90677 unique words was constructed by extracting words from the Hindi Wordnet .",
        "If a candidate transliteration generated by the CRF engine is found in this lexicon then its rank is increased and it is moved towards the top of the list.",
        "Ifmultiple outputs are found in the lexicon then all such outputs are moved towards the top of the list and the relative ranking of these outputs remains the same as that assigned by the CRF engine.",
        "For example, if the 4th and 6th candidate generated by the CRF engine are found in the lexicon then these two candidates will be moved to positions 1 and 2 respectively.",
        "We admit that this way of moving candidates to the top of the list is adhoc.",
        "Ideally, if the lexicon also stored the frequency of each word then the candidates could be re-ranked using these frequencies.",
        "But unfortunately the lexicon does not store such frequency counts."
      ]
    },
    {
      "heading": "3. Results",
      "text": [
        "The system was tested for English-Hindi and English-Kannada transliteration using the dataset (Kumaran and Kellner, 2007) released for NEWS 2009 Machine Transliteration Shared Task.",
        "We submitted one standard run and one non-standard run for the English-Hindi task and one standard run for the English-Kannada task.",
        "The re-ranking module was used only for the non-standard run as it uses resources (lexicon) other than those provided for the task.",
        "We did not have a lexicon for Kannada so were not able to apply the re-ranking module for English-Kannada task.",
        "The performance of the system was evaluated using 6 measures, viz., Word Accuracy in Top-1 (ACC), Fuzziness in Top-1 (Mean F-score), Mean Reciprocal Rank (MRR), MAPre/, MAPi0and MAPsys.",
        "Please refer to the white paper of NEWS 2009 Machine Transliteration Shared Task (Haizhou et al., 2009) for more details of these measures.",
        "Table 1 and Table 2 report the results for English-Hindi and English-Kannada transliteration respectively.",
        "For English-Hindi we report 3 results: (i) without any preprocessing (word-origin detection) or post-processing (re-ranking) (ii) with preprocessing but no post-processing and (iii) with both preprocessing and post-processing.",
        "The results clearly show that the addition of these modules boosts the performance.",
        "The use of word-origin detection boosts the top-1 accuracy by around 0.9% and the use of lexicon lookup based re-ranking boosts the accuracy by another 6.2%.",
        "Thus, together these two modules give an increment of 7.1% in the accuracy.",
        "Corresponding improvements are also seen in the other 5 metrics."
      ]
    },
    {
      "heading": "4. Conclusion",
      "text": [
        "We presented a framework for transliteration which uses (i) a word-origin detection engine (pre-processing) (ii) a CRF based transliteration engine and (iii) a re-ranking model based on lexicon-lookup (post-processing).",
        "The results show that this kind of preprocessing and postprocessing helps to boost the performance of the transliteration engine.",
        "The re-ranking using lexicon lookup is slightly adhoc as ideally the re-ranking should take into account the frequency of the words in the lexicon.",
        "Since such frequency counts are not available it would be useful to find the web counts for each transliteration candidate using a search engine and use these web counts to re-rank the candidates.",
        "Method",
        "ACC",
        "Mean F-score",
        "MRR",
        "MAPre/",
        "MAPio",
        "CRF Engine",
        "(no word origin detection, no re-ranking)",
        "0.408",
        "0.878",
        "0.534",
        "0.403",
        "0.188",
        "0.188",
        "CRF Engine + Word-Origin detection (no re-ranking) Standard run",
        "0.417",
        "0.877",
        "0.546",
        "0.409",
        "0.192",
        "0.192",
        "CRF Engine + Word-Origin detection + Re-ranking Non-Standard run",
        "0.479",
        "0.884",
        "0.588",
        "0.475",
        "0.208",
        "0.208",
        "Table 1: Results for English-Kannada transliteration.",
        "Method",
        "Accuracy (topi)",
        "Mean F-score",
        "MRR",
        "MAPre/",
        "MAPio",
        "CRF Engine + Word-Origin detection (no re-ranking) Standard run",
        "0.335",
        "0.859",
        "0.453",
        "0.327",
        "0.154",
        "0.154"
      ]
    }
  ]
}
