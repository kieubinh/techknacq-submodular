{
  "info": {
    "authors": [
      "Pierre Boullier",
      "Alexis Nasr",
      "Benoît Sagot"
    ],
    "book": "Proceedings of the 11th International Conference on Parsing Technologies (IWPT’09)",
    "id": "acl-W09-3818",
    "title": "Constructing parse forests that include exactly the n-best PCFG trees",
    "url": "https://aclweb.org/anthology/W09-3818",
    "year": 2009
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Pierre Boullier, Alexis Nasr and Benoît Sagot1.",
        "Alpage, INRIA Paris-Rocquencourt & Université Paris 7 Domaine de Voluceau – Rocquencourt, BP 105 – 78153 Le Chesnay Cedex, France",
        "{Pierre.Boullier,Benoit.Sagot}@inria.fr 2.",
        "LIF, Univ.",
        "de la Mediterrannee 163, avenue de Luminy - Case 901 – 13288 Marseille Cedex 9, France Alexis.Nasr@lif.univ-mrs.fr",
        "This paper describes and compares two algorithms that take as input a shared PCFG parse forest and produce shared forests that contain exactly the n most likely trees of the initial forest.",
        "Such forests are suitable for subsequent processing, such as (some types of) reranking or LFG f-structure computation, that can be performed ontop of a shared forest, but that may have a high (e.g., exponential) complexity w.r.t.",
        "the number of trees contained in the forest.",
        "We evaluate the performances of both algorithms on real-scale NLP forests generated with a PCFG extracted from the Penn Treebank."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "The output of a CFG parser based on dynamic programming, such as an Earley parser (Earley, 1970), is a compact representation of all syntactic parses of the parsed sentence, called a shared parse forest (Lang, 1974; Lang, 1994).",
        "It can represent an exponential number of parses (with respect to the length of the sentence) in a cubic size structure.",
        "This forest can be used for further processing, as reranking (Huang, 2008) or machine translation (Mi et al., 2008).",
        "When a CFG is associated with probabilistic information, as in a Probabilistic CFG (PCFG), it can be interesting to process only the n most likely trees of the forest.",
        "Standard state-of-the-art algorithms that extract the n best parses (Huang and Chiang, 2005) produce a collection of trees, losing the factorization that has been achieved by the parser, and reproduce some identical sub-trees in several parses.",
        "This situation is not satisfactory since post-parsing processes, such as reranking algorithms or attribute computation, cannot take advantage of this lost factorization and may reproduce some identical work on common sub-trees, with a computational cost that can be exponentally high.",
        "One way to solve the problem is to prune the forest by eliminating sub-forests that do not contribute to any of the n most likely trees.",
        "But this over-generates: the pruned forest contains more than the n most likely trees.",
        "This is particularly costly for post-parsing processes that may require in the worst cases an exponential execution time w.r.t.",
        "the number of trees in the forest, such as LFG f-structures construction or some advanced reranking techniques.",
        "The experiments detailed in the last part of this paper show that the overgeneration factor of pruned sub-forest is more or less constant (see 6): after pruning the forest so as to keep the n best trees, the resulting forest contains approximately 10n trees.",
        "At least for some post-parsing processes, this overhead is highly problematic.",
        "For example, although LFG parsing can be achieved by computing LFG f-structures on top of a c-structure parse forest with a reasonable efficiency (Boullier and Sagot, 2005), it is clear that a 10 factor drastically affects the overall speed of the LFG parser.",
        "Therefore, simply pruning the forest is not an adequate solution.",
        "However, it will prove useful for comparison purposes.",
        "The new direction that we explore in this paper is the production of shared forests that contain exactly the n most likely trees, avoiding both the explicit construction of n different trees and the over-generation of pruning techniques.",
        "This can be seen as a transduction which is applied on a forest and produces another forest.",
        "The trans-duction applies some local transformations on the structure of the forest, developing some parts of the forest when necessary.",
        "The structure of this paper is the following.",
        "Section 2 defines the basic objects we will be dealing with.",
        "Section 3 describes how to prune a shared forest, and introduces two approaches for building shared forests that contain exactly the n most likely parses.",
        "Section 4 describes experiments that were carried out on the Penn Treebank and section 5 concludes the paper."
      ]
    },
    {
      "heading": "2. Preliminaries",
      "text": [
        "Let G = (N, T, P, S) be a context-free grammar (CFG), defined in the usual way (Aho and Ullman, 1972).",
        "Throughout this paper, we suppose that we manipulate only non-cyclic CFGs, but they may (and usually do) include e-productions.",
        "Given a production p e P, we note lhs(p) its left-hand side, rhs(p) its right-hand side and |p| the length of rhs(p).",
        "Moreover, we note rhsk(p), with 1 < k < |p|, the kth symbol of rhs(p).",
        "We call A-production any production p eP of G such that lhs(p) = A.",
        "A complete derivation of a sentence w = ii... (Vi < | w|, tj eT) w.r.t.",
        "G is of the form S == aA// == aXX ... Xr// == w. By definition, A – XX ... Xr is a production of G. Each of A, X, X, ..., Xr spans a unique occurrence of a substring ti+1... tj of w, that can be identified by the corresponding range, noted .",
        "A complete derivation represents a parse tree whose yield is w, in which each symbol X of range roots a subtree whose yield is ti+1... tj (i.e., a derivation of the form X => ti+1... tj).",
        "Let us define the w-instantiation operation (or instantiation).",
        "It can be applied to symbols and productions of G, and to G itself, w.r.t.",
        "a string w. It corresponds to the well-known intersection of G with the linear automaton that corresponds to the string w. We shall go into further detail for terminology, notation and illustration purposes.",
        "An instantiated non terminal symbol is a triple noted Aj..j where A eN and 0 < i < j < |w|.",
        "Similarly, an instantiated terminal symbol is a triple noted Tj j where T e T and 0 < i < j = i + 1 < |w|.",
        "An instantiated symbol, terminal or non terminal, is noted Xj..j.",
        "For any instantiated symbol Xj..j, i (resp.",
        "j) is called its lower bound (resp.",
        "upper bound), and can be extracted by the operator lb() (resp.",
        "ub()).",
        "An instantiated production (or instantiated rule) is a context-free production Aj..j – X,, X, jo... Xj\" , whose left-hand side is an instantiated non terminal symbol and whose right-hand side is a (possibly empty) sequence of instantiated (terminal or non terminal) symbols, provided the followings conditions hold:",
        "2. the corresponding non-instantiated production A – XX ... Xr is a production of",
        "G.",
        "the range can be replaced by the instantiated symbols X, j.",
        "For example, the axiom S can be replaced by the instantiated axiom S0..|w| in the head of the derivation.",
        "If applied to the whole derivation, this operation creates an instantiated derivation, whose rewriting operations define a particular set of instantiated productions.",
        "Given G and w, the set ofall instantiated productions involved in at least one complete derivation of w is unique, and noted Pw.",
        "An instantiated derivation represents an instantiated parse tree, i.e., a parse tree whose node labels are instantiated symbols.",
        "In an instantiated parse tree, each node label is unique, and therefore we shall not distinguish between a node in an instantiated parse tree and its label (i.e., an instantiated symbol).",
        "Then, the w-instantiated grammar Gw for G and w is a CFG (Nw, TW, Pw, S0 |w|) such that:"
      ]
    },
    {
      "heading": "1.. P w is defined as explained above;",
      "text": []
    },
    {
      "heading": "2.. N w is a set of instantiated non terminal symbols;",
      "text": [
        "3.",
        "TW is a set of instantiated terminal symbols.",
        "It follows from the definition of Pw that (instantiated) symbols of Gw have the following properties: Aj..j e Nw <^ A == ti+1... tj, and",
        "Tj..j e 7W T – tj.",
        "The w-instantiated CFG Gw represents all parse trees for w in a shared (factorized) way.",
        "It is the grammar representation of the parse forest of w w.r.t.",
        "G. In fact, L(GW) = {w} and the set of parses of w with respect to Gw is isomorphic to the set of parses of w with respect to G, the isomorphism being the w-instantiation operation.",
        "The size of a forest is defined as the size of the grammar that represents it, i.e., as the number of symbol occurrences in this grammar, which is defined as the number of productions plus the sum of the lengths of all right-hand sides.",
        "Example 1: First running example.",
        "Let us illustrate these definitions by an example.",
        "Given the sentence w = the boy saw a man with a telescope and the grammar G (that the reader has in mind), the instantiated productions of Gw are:",
        "They represent the parse forest ofw according to G. This parse forest contains two trees, since there is one ambiguity: VP2.. 8 can be rewritten in two different ways.",
        "The instantiated grammar Gw can be represented as an hypergraph (as in (Klein and Manning, 2001) or (Huang and Chiang, 2005)) where the instantiated symbols of Gw correspond to the vertices ofthe hypergraph and the instantiated productions to the hyperarcs.",
        "We define the extension of an instantiated symbol Xj„j, noted E (X^ j), as the set of instantiated parse trees that have X^ j as a root.",
        "The set of all parse trees of w w.r.t.",
        "G is therefore E(£0„|w|).",
        "In the same way, we define the extension of an instantiated production X,.. j – a to be the subset of E(X,..j) that corresponds to derivations of the form Xj„j => a == tj+1... tj (i.e., trees rooted in Xj„j and where the daughters of the node X^ j are the symbols of a).",
        "Let us suppose that we deal with non-cyclic forests, i.e., we only consider forests that are represented by a non-recursive instantiated CFG.",
        "In this case, we can define two different kinds of forest traversals.",
        "A bottom-up traversal of a forest is a traversal with the following constraint: an A^ j production is visited if and only if all its instantiated right-hand side symbols have already been visited; the instantiated symbol A^ j is visited once all A^ j productions have been visited.",
        "The bottom-up visit starts by visiting all instantiated productions with right-hand sides that are empty or contain only (instantiated) terminal symbols.",
        "A top-down traversal of a forest is a traversal with the following constraint: a node A,.. j is visited if and only if all the instantiated productions in which it occurs in right-hand side have already been visited; once an instantiated production A,.. j has been visited, all its A,..j-productions are visited as well.",
        "Of course the top-down visit starts by the visit of the axiom S0„|w|.",
        "When an instantiated grammar Gw – (Nw, To, Pw, £0„|w|) is built on a PCFG, every parse tree in E(£0„|w|) has a probability that is computed in the usual way (Booth, 1969).",
        "We might be interested in extracting the kth most likely tree of the forest represented by Gw , without unfolding the forest, i.e., without enumerating trees.",
        "In order to do so, we need to add some extra structure to the instantiated grammar.",
        "The augmented instantiated grammar will be called a ranked instantiated grammar.",
        "This extra structure takes the form of n-best tables that are associated with each instantiated non terminal symbol (Huang and Chiang, 2005), thus leading to ranked instantiated non terminal symbols, or simply instantiated symbols when the context is non ambiguous.",
        "A ranked instantiated non terminal symbol is written (A^ j, T(A^ j)), where T( A,..j) is the n-best table associated with the instantiated symbol A,..j.",
        "T(A,..j) is a table of at most n entries.",
        "The k-th entry of the table, noted e, describes how to build the k-th most likely tree of E (A^ j).",
        "This tree will be called the k-th extention ofA,..j, noted Ek(Aj„j).",
        "More precisely, e indicates the instantiated Aj„j production p such that Ek (A^ j) e E (p).",
        "It indicates furthermore which trees of the extensions of p's right-hand side symbols must be combined together in order to build Ek(A%..j).",
        "Deto..1",
        " – the0.. 1",
        "N1.. 2 – ",
        "boy1.. 2",
        "NP0..2 ~",
        " – Det0.. 1 N1.. 2",
        "V2.. 3 – ",
        "saw2.. 3",
        "Det3..4",
        " – a3.. 4",
        "N4.. – ",
        "man4..",
        "NP3..5 -",
        " – Det3.. 4 N4..",
        "Prep .. 6",
        " – with .. 6",
        "Det6..7",
        " – a6.. 7",
        "N7.. 8 – ",
        "telescope7.. 8",
        "NP6..8 \"",
        " – Det6.. 7 N7.. 8",
        "PP .. 8 – ",
        "Prep .. 6 NP6.. 8",
        "NP3..8 \"",
        " – NP3.. PP .. 8",
        "VP2.. 8 – ",
        "V2.. 3 NP3.. 8",
        "VP2..",
        " – V2.. 3 NP3..",
        "VP2.. 8",
        "VP2.. PP .. 8",
        "S0.. 8 – ",
        "NP0.. 2 VP2.. 8",
        "We also define the m, n-extension of Ai,,j as follows: £m,n(Ai..j) = Um<k<n£k(Ai..j).",
        "Example 2: n-best tables for the first running example.",
        "Let us illustrate this idea on our first running example.",
        "Recall that in Example 1, the symbol VP2..s can be rewritten using the two following productions :",
        "This table indicates that the most likely tree associated with VP2.. 8 (line one) has probability P1 and is built using the production VP2^8 – V2.. 3 NP3.. 8 by combining the most likely tree of E (V2..3) (indicated by the first 1 in (1,1)) with the most likely tree of E(NP3.8) (indicated by the second 1 in (1,1)).",
        "It also indicates that the most likely tree of E(VP2.8) is the most likely tree of E(VP2..8 – V2..3 NP3^8) (indicated by the presence of 1 in the last column of entry 1) and the second most likely tree of E(VP2.8) is the most likely tree of E(VP2..8 – VP2..5 PP5..8).",
        "This last integer is called the local rank ofthe entry.",
        "More formally, the entry T(Ai^j)[k] is defined as a 4-tuple (Pk,pk,v%,lk) where k is the rank of the entry, Pk is the probability of the tree Ek(A%..j), pk is the instantiated production such that Ek(Ai..j) G E(pk), vk is a tuple of |rhs(pk)| integers and lk is the local rank.",
        "The tree Ek(Ai.j) is rooted by Ai^j, and its daughters root N = |rhs(pk )| subtrees that are",
        "Evk[i](rhsi (Pk)),■■ ■, Ev-k[n](rhsN(Pk)).",
        "Given an instantiated symbol Ai^j and an instantiated production p G P(Ai.j), we define the n-best table of P to be the table composed of the entries (Pk ,pk ,vk, lk) of T (Ai^j) such that",
        "Pk = P.",
        "Example 3: Second running example.",
        "The following is a standard PCFG (probabilities are shown next to the corresponding clauses).",
        "The instantiation of the underlying (non-probabilistic) CFG grammar by the input text w = ab is the following.",
        "B2.. 3 – B12.. 3 B12.. 3 – b2.. 3 B2.. 3 – B22.. 3 B22.. 3 – b2.. 3 This grammar represents a parse forest that contains four different trees, since on the one handone can reach (parse) the instantiated terminal symbol a1..2 through A1 or A2, and on the other hand one can reach (parse) the instantiated terminal symbol b1,,2 through B1 or B2.",
        "Therefore, when discussing this example in the remainder ofthe paper, each of these four trees will be named accordingly: the tree obtained by reaching a through Ai and b through Bj (i and j are 1 or 2) shall be called",
        "The corresponding n-best tables are trivial (only one line) for all instantiated symbols but A1..2, B2 3 and Si„3.",
        "That of A\\^2 is the following 2-line table.",
        "The n-best table for B2.. 3 is similar.",
        "The n-best table for Si „3 is:",
        "Thanks to the algorithm sketched in section 2.4, these tables allow to compute the following obvious result: the best tree is T1}1, the second-best tree is T1}2, the third-best tree is T2)1 and the worst tree is T2)2.",
        "If n = 3, the pruned forest over-generates: all instantiated productions take part in at least one ofthe three best trees, and therefore the pruned forest is the full forest itself, which contains four trees.",
        "We shall use this example later on so as to illustrate both methods we introduce for building forests that contain exactly the n best trees, without overgenerating.",
        "An efficient algorithm for the extraction of the n-best trees is introduced in (Huang and Chiang, 2005), namely the authors' algorithm 3, which is a reformulation of a procedure originally proposed by (Jimenez and Marzal, 2000).",
        "Contrarily to (Huang and Chiang, 2005), we shall sketch this algorithm with the terminology introduced above (whereas the authors use the notion of hypergraph).",
        "The algorithm relies on the n-best tables described above: extracting the kth-best tree consists in extending the n-best tables as much as necessary by computing all lines in each n-best table up to those that concern the kth-best tree.",
        "1",
        "Pi",
        "VP2..8 V2..3NP3..8",
        "(1,1)",
        "1",
        "2",
        "P2",
        "VP2..8 KP2..5 PP5..8",
        "(1,1)",
        "1",
        "1",
        "0.7",
        "A -",
        "+ A1",
        "(1)",
        "1",
        "2",
        "0.3",
        "A -",
        "^A2",
        "(1)",
        "1",
        "1",
        "0.42",
        "Si..3 – >Ai..2 52..3",
        "(1,1)",
        "1",
        "2",
        "0.28",
        "Si..3 – *-^4i..2 P>2..3",
        "(1,2)",
        "2",
        "3",
        "0.18",
        "Si..3 – *-^4l..2 P>2..3",
        "(2,1)",
        "3",
        "4",
        "0.12",
        "Si..3 – *-^4l..2 P>2..3",
        "(2,2)",
        "4",
        "The algorithm can be divided in two sub-algorithms: (1) a bottom-up traversal of the forest for extracting the best tree; (2) a top-down traversal for extracting the kth-best tree provided the (k – 1)th-best has been already extracted.",
        "The extraction of the best tree can be seen as a bottom-up traversal that initializes the n-best tables: when visiting a node Ai j, the best probability of each Ai j-production is computed by using the tables associated with each of their right-hand side symbols.",
        "The best ofthese probabilities gives the first line of the n-best table for Ai^j (the result for other productions are stored for possible later use).",
        "Once the traversal is completed (the instantiated axiom has been reached), the best tree can be easily output by following recursively where the first line of the axiom's n-best table leads to.",
        "Let us now assume we have extracted all k'-best trees, 1 < k' < k, for a given k < n. We want to extract the kth-best tree.",
        "We achieve this recursively by a top-down traversal of the forest.",
        "In order to start the construction of the kth-best tree, we need to know the following:",
        "• which instantiated production p must be used for rewriting the instantiated axiom,",
        "• for each of p's right-hand side symbols Ai^j, which subtree rooted in Ai.. j must be used; this subtree is identified by its local rank",
        "j, i.e., the rank of its probability among all subtrees rooted in Ai..j.",
        "This information is given by the kth line of the n-best table associated with the instantiated axiom.",
        "If this kth line has not been filled yet, it is computed recursively.",
        "Once the kth line of the n-best table is known, i.e., p and all kAi j's are known, the rank k is added top's so-called rankset, noted p(p).",
        "Then, the top-down traversal extracts recursively for each Ai.. j the appropriate subtree as defined by kAi j.",
        "After having extracted the nth best tree, we know that a given production p is included in the kth-best tree, 1 < k < n, if and only if k G p(p)."
      ]
    },
    {
      "heading": "3. Computing sub-forests that only contain the n best trees",
      "text": [
        "Given a ranked instantiated grammar Gw, we are interested in building a new instantiated grammar which contains exactly the n most likely trees of E(Gw).",
        "In this section, we introduce two algorithms that compute such a grammar (or forest).",
        "Both methods rely on the construction of new symbols, obtained by decorating instantiated symbols of Gw.",
        "An empirical comparison of the two methods is described in section 4.",
        "In order to evaluate the size of the new constructed grammars (forests), we consider as a lower bound the so-called pruned forest, which is the smallest sub-grammar of the initial instantiated grammar that includes the n best trees.",
        "It is built simply by pruning productions with an empty rankset: no new symbols are created, original instantiated symbols are kept.",
        "Therefore, it is a lower bound in terms of size.",
        "However, the pruned forest usually overgenerates, as illustrated by Example 3.",
        "The algorithm described in this section builds an instantiated grammar GW by decorating the symbols of Gw.",
        "The new (decorated) symbols have the form Ap j where p is a set of integers called a rankset.",
        "An integer r is a rank iff we have 1 < r < n.",
        "The starting point of this algorithm is set of n-best tables, built as explained in section 2.4, without explicitely unfolding the forest.",
        "computed as follows: while constructing the k/th-best trees for each k/ between 1 and k – 1, we have identified many possible rewritings of the instantiated axiom, i.e., many (production, right-hand side local ranks) pairs; we know the probability of all these rewritings, although only some of them con-situte a line of the instantiated axiom's n-best table; we now identify new rewritings, starting from known rewritings and incrementing only one of their local ranks; we compute (recursively) the probability of these newly identified rewritings; the rewriting that has the best probability among all those that are not yet a line of the n-best table is then added: it is its kthline.",
        "A preliminary top-down step uses these n-best tables for building a parse forest whose nonterminal symbols (apart from the axiom) have the form A j where p is a singleton {r}: the subforest rooted in Ai j contains only one tree, that of local rank r. Only the axiom is not decorated, and remains unique.",
        "Terminal symbols are not affected either.",
        "At this point, the purpose of the algorithm is to merge productions with identical right-hand sides, whenever possible.",
        "This is achieved in a bottom-up fashion as follows.",
        "Consider two symbols A-and AP2j, which differ only by their underlying ranksets.",
        "These symbols correspond to two different production sets, namely the set of all Aj productions (resp.",
        "A ■-productions).",
        "Each of these production sets define a set of right-hand sides.",
        "If these two right-hand side sets are identical we say that Aj and A ■ are equivalent.",
        "In that case introduce the rankset p = p1 U p2 and create a new non-terminal symbol Aj.",
        "We now simply replace all occurrences of Aj and A ■ in left-and right-hand sides by A j.",
        "Of course (newly) identical productions are erased.",
        "After such a transformation, the newly created symbol may appear in the right-hand side of productions that now only differ by their left-hand sides; the factorization spreads to this symbol in a bottom-up way.",
        "Therefore, we perform this transformation until no new pair of equivalent symbols is found, starting from terminal leaves and percolating bottom-up as far as possible.",
        "Example 4: Applying the ranksets method to the second running example.",
        "Let us come back to the grammar ofExample 3, and the same input text w = a b as before.",
        "As in Example 3, we consider the case when we are interested in the n = 3 best trees.",
        "Starting from the instantiated grammar and the n-best tables given in Example 3, the preliminary top-down step builds the following forest (for clarity, ranksets have not been shown on symbols that root sub-forests containing only one tree):",
        "In this example, the bottom-up step doesn t factorize out any other symbols, and this is therefore the final output of the ranksets method.",
        "It contains 2 more productions and 3 more symbols than the pruned forest (which is the same as the original forest), but it contains exactly the 3 best trees, contrarily to the pruned forest.",
        "In this section only, we assume that the grammar G is binary (and therefore the forest, i.e., the grammar Gw, is binary).",
        "Standard binarization algorithms can be found in the litterature (Aho and Ull-man, 1972).",
        "The algorithm described in this section performs, as the preceding one, a decoration of the symbols of Gw.",
        "The new (decorated) symbols have the form Ax'y, where x and y denote ranks such that 1 < x < y < n. The semantics of the decoration is closely related to the x, y extention of Ai^j, introduced in 2.3:",
        "It corresponds to ranksets (in the sense of the other words, the sub-forest rooted with 'j contains exactly the trees of the initial forest, rooted with Ai j, which rank range from x to y",
        "The algorithm performs a top-down traversal of the initial instantiated grammar Gw.",
        "This traversal also takes as input two parameters x and y.",
        "It starts with the symbol S0 \"\\w\\ and parameters 1 and n. At the end of the traversal, a new decorated forest is built which contains exactly n most likely the parses.",
        "During the traversal, every instantiated symbol Ai.. j will give birth to decorated instantiated symbols of the form A^j where x and y are determined during the traversal.",
        "Two different actions are performed depending on whether we are previous section) that are intervalent to the previous section's A visiting an instantiated symbol or an instantiated production.",
        "When visiting an instantiated symbol Ai,,j with parameters x and y, a new decorated instantiated symbol Ax'j is created and the traversal continues on the instantiated productions of P(Ai,,j) with parameters that have to be computed.",
        "These parameters depend on how the elements of Exy(Ai,,j) are \"distributed\" among the sets E(p) with p G P(Ai,,j).",
        "In other words, we need to determine xk's and yk's such that:",
        "The idea can be easily illustrated on an example.",
        "Suppose we are visiting the instantiated symbol Ai,,j with parameters 5 and 10.",
        "Suppose also that Ai,,j can be rewritten using the two instantiated productions p\\ and p2.",
        "Suppose finally that the 5 to 10 entries of T(Ai,,j) are as follows:",
        "This table says that E5(Ai,,j) = E4(pi) i.e. the 5th most likely analysis of E(Ai,,j) is the 4th most likely analysis of E(pi) and E6(Ai,,j) = E2(p2) and so on.",
        "From this table we can deduce that:",
        "The traversal therefore continues on pi and p2with parameters 4, 6 and 2, 4.",
        "3.2.2 Visiting an instantiated production When visiting an instantiated production p of the form Ai,,j – Bi,,i Ct.j with parameters x and y, a collection of q instantiated productions prof the are built, where the parameters xr , xr, yr , yr and q have to be computed.",
        "Once the parameters q and x\\,x,yr,y with 1 < < q, have been computed, the traversal continues independently on Bi j with parameters xr and x\" and on Ci„j with parameters and y;?.",
        "The computation of the parameters x\\,x, and y for 1 < r < q, is the most complex part of the algorithm, it relies on the three notions of rectangles, q-partitions and n-best matrices, which are defined below.",
        "Given a 4-tuple of parameters x\\^x,y^,y, a rectangle is simply a pairing of the form ((x^,x), (y^y\")).",
        "A rectangle can be interpreted as a couple of rank ranges : (x^y^: ) and (x ,y ).",
        "It denotes the cartesian product \\x\\ ,x^\\ x [y^y\"].",
        "Let ((x I,x ),(y I,y i)),((xq ,x), (ylq,y1)) be a collection of q rectangles.",
        "It will be called a q-partition of the instantiated production p iff the following is true:",
        "U e{Ax:y - Bff Cff )",
        "To put it differently, this definition means that partition of p if any tree of E (B^r^r) combined with any tree of E(C^r^r) is a tree of Exj(p) and, conversely, any tree of Exj (p) is the combination of a tree of E (B,ff) and a tree of E (cffr).",
        "The n-best matrix associated with an instantiated production p, introduced in (Huang and Chiang, 2005), is merely a two dimensional representation of the n-best table of p. Such a matrix, represents how the n most likely trees of E(p) are built.",
        "An example of an n-best matrix is represented in figure 1.",
        "This matrix says that the first most likely tree of p is built by combining the tree E (Bi i) with the tree E (Ci j) (there is a 1 in the cell of coordinate (1,1)).",
        "The second most likely tree is built by combining the tree E (Bi i) and E2(Cl\"j) (there is a 2 in the cell of coordinate ( 1 , 2 ) ) and so on.",
        "An n-best matrix M has, by construction, the remarkable following properties:",
        "5",
        "Pi",
        "4",
        "6",
        "P2",
        "2",
        "7",
        "P2",
        "3",
        "8",
        "Pi",
        "5",
        "9",
        "P2",
        "4",
        "10",
        "Pi",
        "6",
        "1",
        "2",
        "G",
        "8",
        "14",
        "15",
        "3",
        "5",
        "11",
        "13",
        "18",
        "29",
        "4",
        "9",
        "12",
        "17",
        "24",
        "30",
        "r",
        "10",
        "20",
        "21",
        "2G",
        "33",
        "1G",
        "19",
        "22",
        "25",
        "27",
        "35",
        "23",
        "28",
        "31",
        "32",
        "34",
        "3G",
        "Given an n-best matrix M of dimensions d = X • Y and two integers x and y such that 1 < x < y < d, M can be decomposed into three regions:",
        "• the lower region, composed of the cells which contain ranks i with 1 < i < x",
        "• the intermediate region, composed of the cells which contain ranks i with x < i < y",
        "• the upper region, composed of the cells which contain ranks i such that y < i < d.",
        "The three regions of the matrix of figure 1, for x = 4 and y = 27 have been delimited with bold lines in figure 2.",
        "Figure 2: Decomposition of an n-best matrix into a lower, an intermediate and an upper region with parameters 4 and 27.",
        "It can be seen that a rectangle, as introduced earlier, defines a sub-matrix of the n-best matrix.",
        "For example the rectangle ((2, 5), (2, 5)) defines the sub-matrix which north west corner is M(2, 2) and south east corner is M(5, 5), as represented in figure 3.",
        "When visiting an instantiated production p, having M as an n-best matrix, with the two parameters x and y, the intermediate region of M, with respect to x and y, contains, by definition, all the ranks that we are interested in (the ranks ranging from x to y).",
        "This region can be partitioned into a collection of disjoint rectangular regions.",
        "Each such partition therefore defines a collection of rectangles or a q-partition.",
        "The computation of the parameters x^y}, x\"and yr for an instantiated production p therefore boils down to the computation of a partition of the intermediate region of the n-best matrix of p.",
        "We have represented schematically, in figure 4, two 4-partitions and a 3-partition of the intermediate region of the matrix of figure 2.",
        "The leftmost (resp.",
        "rightmost) partition will be called the vertical (resp.",
        "horizontal) partition.",
        "The middle partition will be called an optimal partition, it decomposes the intermediate region into a minimal number of sub-matrices.",
        "The three partitions of figure 4 will give birth to the following instantiated productions:",
        "Vertical partition• Optimal partition",
        "Horizontal partition",
        "Vertical and horizontal partition of the intermediate region of a n-best matrix can easily be computed.",
        "We are not aware of an efficient method that computes an optimal partition.",
        "In the implementation used for experiments described in section 4, a simple heuristic has been used which computes horizontal and vertical partitions and keeps the partition with the lower number of parts.",
        "5",
        "11",
        "13",
        "18",
        "9",
        "12",
        "17",
        "24",
        "10",
        "20",
        "21",
        "2G",
        "19",
        "22",
        "25",
        "27",
        "1",
        "2",
        "G",
        "8",
        "14",
        "15",
        "3",
        "5",
        "11",
        "13",
        "18",
        "29",
        "4",
        "9",
        "12",
        "17",
        "24",
        "30",
        "7",
        "10",
        "20",
        "21",
        "2G",
        "33",
        "1G",
        "19",
        "22",
        "25",
        "27",
        "35",
        "23",
        "28",
        "31",
        "32",
        "34",
        "3G",
        "The size of the new forest is clearly linked to the partitions that are computed: a partition with a lower number of parts will give birth to a lower number of decorated instantiated productions and therefore a smaller forest.",
        "But this optimization is local, it does not take into account the fact that an instantiated symbol may be shared in the initial forest.",
        "During the computation of the new forest, an instantiated production p can therefore be visited several times, with different parameters.",
        "Several partitions of p will therefore be computed.",
        "If a rectangle is shared by several partitions, this will tend to decrease the size of the new forest.",
        "The global optimal must therefore take into account all the partitions of an instantiated production that are computed during the construction of the new forest.",
        "Example 5: Applying the rectangles method to the second running example.",
        "We now illustrate more concretely the rectangles method on our second running example introduced in Example 3.",
        "Let us recall that we are interested in the n = 3 best trees, the original forest containing 4 trees.",
        "As said above, this method starts on the instantiated axiom S ..3.",
        "Since it is the left-hand side ofonly one production, this production is visited with parameters 1, 3.",
        "Moreover, its n-best table is the same as that ofS\\„3, given in Example 3.",
        "We show here the corresponding n-best matrix, with the empty lower region, the intermediate region (cells corresponding to ranks 1 to 3) and the upper region:",
        "As can be seen on that matrix, there are two optimal 2-partitions, namely the horizontal and the vertical partitions, illustrated as follows:",
        "Let us arbitrarily chose the vertical partition.",
        "It gives birth to two S 1.33-productions, namely:",
        "Since this is the only non-trivial step while applying the rectangles algorithm to this example, we can now give its final result, in which the axiom's (unnecessary) decorations have been removed:",
        "Compared to the forest built by the ranksets algorithm, this forest has one less production and one less non-terminal symbol.",
        "It has only one more production than the over-generating pruned for est."
      ]
    },
    {
      "heading": "4. Experiments on the Penn Treebank",
      "text": [
        "The methods described in section 3 have been tested on a PCFG G extracted from the Penn Treebank (Marcus et al., 1993).",
        "G has been extracted naively: the trees have been decomposed into binary context free rules, and the probability of every rule has been estimated by its relative frequency (number of occurrences of the rule divided by the number of occurrences of its left hand side).",
        "Rules occurring less than 3 times and rules with probabilities lower than 3 x 10-4 have been eliminated.",
        "The grammar produced contains 932 non terminals and 3, 439 rules.",
        "The parsing has been realized using the Syntax system which implements, and optimizes, the Earley algorithm (Boullier, 2003).",
        "The evaluation has been conducted on the 1,845j sentences of section 1, which constitute our test set.",
        "For every sentence and for increasing values of n, an n-best sub-forest has been built using the rankset and the rectangles method.",
        "The performances of the algorithms have been measured by the average compression rate they achieve for different values of n. The compression rate is obtained by dividing the size of the n-best sub-forest of a sentence, as defined in section 2, by the size of the (unfolded) n-best forest.",
        "The latter is the sum of the sizes of all trees in the forest, where every tree is seen as an instantiated grammar, its size is therefore the size of the corresponding instantiated grammar.",
        "The size of the n-best forest constitutes a natural upper bound for the representation of the n-best trees.",
        "Unfortunately, we have no natural lower bound for the size of such an object.",
        "Nevertheless, we have computed the compression rates of the pruned n-best forest and used it as an imperfect lower bound.",
        "As already mentioned, its imperfection comes from the fact that a pruned n-best forest contains more trees than the n best ones.",
        "This overgeneration appears clearly in Figure 5 which shows, for increasing values of n, the average number of trees in the n-best pruned forest for all sentences in our test set.",
        "Figure 6 shows the average compression rates achieved by the three methods (forest pruning, rectangles and ranksets) on the test set for increasing values of n. As predicted, the performances lie between 1 (no compression) and the compression of the n-best pruned forest.",
        "The rectangle method outperforms the ranksets algorithm for every value of n.",
        "The time needed to build an 100-best forest with the rectangle and the ranksets algorithms is shown in Figure 7.",
        "This figure shows the average parsing time for sentences of a given length, as well as the average time necessary for building the 100-best forest using the two aforementioned algorithms.",
        "This time includes the parsing time i.e. it is the time necessary for parsing a sentence and building the 100-best forest.",
        "As shown by the figure, the time complexities of the two methods are very close.",
        "/",
        " – – ",
        "pruned forest – rectangles – ranksets --"
      ]
    },
    {
      "heading": "5. Conclusion and perspectives",
      "text": [
        "This work presented two methods to build n-best sub-forests.",
        "The so called rectangle methods showed to be the most promising, for it allows to build efficient sub-forests with little time overhead.",
        "Future work will focus on computing optimized partitions of the n-best matrices, a crucial part of the rectangle method, and adapting the method to arbitrary (non binary) CFG.",
        "Another line of research will concentrate on performing re-ranking of the n-best trees directly on the sub-forest."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "This research is supported by the French National Research Agency (ANR) in the context of the SEQUOIA project (ANR-08-EMER-013).",
        "parsing",
        "ranksets ----------",
        "rectangles -----------",
        "/",
        "H",
        "r",
        "\"f...............",
        "' ./",
        "/"
      ]
    }
  ]
}
