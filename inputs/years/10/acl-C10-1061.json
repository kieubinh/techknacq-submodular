{
  "info": {
    "authors": [
      "Laura Kallmeyer",
      "Wolfgang Maier"
    ],
    "book": "COLING",
    "id": "acl-C10-1061",
    "title": "Data-Driven Parsing with Probabilistic Linear Context-Free Rewriting Systems",
    "url": "https://aclweb.org/anthology/C10-1061",
    "year": 2010
  },
  "references": [
    "acl-A97-1014",
    "acl-E09-1055",
    "acl-H94-1020",
    "acl-J03-1006",
    "acl-J98-2004",
    "acl-N03-1016",
    "acl-N07-1051",
    "acl-N09-1061",
    "acl-P02-1018",
    "acl-P03-1013",
    "acl-P04-1042",
    "acl-P87-1015",
    "acl-W06-1508",
    "acl-W07-1506",
    "acl-W08-1006"
  ],
  "sections": [
    {
      "text": [
        "Data-Driven Parsing with Probabilistic Linear Context-Free Rewriting",
        "Systems",
        "Laura Kallmeyer and Wolfgang Maier",
        "SFB 833, University of Tübingen {lk,wmaier}@sfs.uni-tuebingen.de",
        "This paper presents a first efficient implementation of a weighted deductive CYK parser for Probabilistic Linear Context-Free Rewriting Systems (PLCFRS), together with context-sümmary estimates for parse items üsed to speed üp parsing.",
        "LCFRS, an extension of CFG, can describe discontinüities both in constitüency and dependency strüctüres in a straightforward way and is therefore a natüral candidate to be üsed for data-driven parsing.",
        "We evalüate oür parser with a grammar extracted from the German NeGra treebank.",
        "Oür experiments show that data-driven LCFRS parsing is feasible with a reasonable speed and yields oütpüt of competitive qüality."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Data-driven parsing has largely been dominated by Probabilistic Context-Free Grammar (PCFG).",
        "The üse of PCFG is tied to the annotation principles of popülar treebanks, süch as the Penn Treebank (PTB) (Marcus et al., 1994), which are used as a data soürce for grammar extraction.",
        "Their annotation generally relies on the use of trees without crossing branches, augmented with a mechanism that accounts for non-local dependencies.",
        "In the PTB, e.g., labeling conventions and trace nodes are used which establish additional implicit edges in the tree beyond the overt phrase structure.",
        "In contrast, some other treebanks, such as the German NeGra and TIGER treebanks allow annotation with crossing branches (Skut et al., 1997).",
        "Non-local dependencies can then be expressed directly by grouping all dependent elements under a single node.",
        "However, given the expressivity restrictions of PCFG, work on data-driven parsing has mostly excluded non-local dependencies.",
        "When using treebanks with PTB-like annotation, labeling conventions and trace nodes are often discarded, while in NeGra, resp.",
        "TIGER, tree transformations are applied which resolve the crossing branches (Kübler, 2005; Boyd, 2007, e.g.).",
        "Especially for these treebanks, such a transformation is questionable, since it is non-reversible and implies information loss.",
        "Some research has gone into incorporating nonlocal information into data-driven parsing.",
        "Levy and Manning (2004) distinguish three approaches: 1.",
        "Non-local information can be incorporated directly into the PCFG model (Collins, 1999), or can be reconstructed in a post-processing step after PCFG parsing (Johnson, 2002; Levy and Manning, 2004).",
        "2.",
        "Non-local information can be incorporated into complex labels (Hockenmaier, 2003).",
        "3.",
        "A formalism can be used which accommodates the direct encoding ofnon-local information (Plaehn, 2004).",
        "This paper pursues the third approach.",
        "Our work is motivated by the following recent developments: Linear Context-Free Rewriting Systems (LCFRS) (Vijay-Shanker et al., 1987) have been established as a candidate for modeling both discontinuous constituents and non-projective dependency trees as they occur in treebanks (Kuhlmann and Satta, 2009; Maier and",
        "Lichte, 2009).",
        "LCFRS extend CFG such that non-terminals can span tuples of possibly non-",
        "Figure 1 : Different domains of locality adjacent strings (see Fig. 1).",
        "PCFG techniques, such as Best-First Parsing (Charniak and Cara-ballo, 1998), Weighted Deductive Parsing (Neder-hof, 2003) and A* parsing (Klein and Manning, 2003a), can be transferred to LCFRS.",
        "Finally, German has attracted the interest of the parsing community due to the challenges arising from its frequent discontinuous constituents (Kiibler and",
        "Penn, 2008).",
        "We bring together these developments by presenting a parser for probabilistic LCFRS.",
        "While parsers for subclasses of PLCFRS have been presented before (Kato et al., 2006), to our knowledge, our parser is the first for the entire class of PLCFRS.",
        "We have already presented an application of the parser on constituency and dependency treebanks together with an extensive evaluation article is mainly dedicated to the presentation of several methods for context summary estimation of parse items, and to an experimental evaluation of their usefulness.",
        "The estimates either act as figures-of-merit in a best-first parsing context or as estimates for A* parsing.",
        "Our evaluation shows that while our parser achieves a reasonable speed already without estimates, the estimates lead to a great reduction of the number of produced items, all while preserving the output quality.",
        "Sect.",
        "2 and 3 of the paper introduce probabilistic LCFRS and the parsing algorithm.",
        "Sect.",
        "4 presents different context summary estimates.",
        "In Sect.",
        "5, the implementation and evaluation of the work is discussed."
      ]
    },
    {
      "heading": "2. Probabilistic LCFRS",
      "text": [
        "LCFRS are an extension of CFG where the nonterminals can span not only single strings but, instead, tuples of strings.",
        "We will notate LCFRS with the syntax of simple Range Concatenation Grammars (SRCG) (Boullier, 1998), a formalism that is equivalent to LCFRS.",
        "A LCFRS (Vijay-Shanker et al., 1987) is a tuple (N, T, V, P, S) where a) N is a finite set of non-terminals with a function dim: N – N that determines the fanout of each A G N ; b) T and V are disjoint finite sets of terminals and variables; c) S G N is the start symbol with dim(S) = 1; d) P is a finite set of rules",
        "for m > 0 where A,A1,...,Am G N, X<(i) G V for 1 < i < m, 1 < j < dim(Ai) and ai G (T U V)* for 1 < i < dim(A).",
        "For all r G P, it holds that every variable X occurring in r occurs exactly once in the left-hand side (LHS) and exactly once in the right-hand side (RHS).",
        "A rewriting rule describes how the yield of the LHS non-terminal can be computed from the yields of the RHS non-terminals.",
        "The rules A(ab, cd) – e and A(aXb, cYd) – A(X, Y) for instance specify that 1.",
        "(ab, cd) is in the yield of A and 2. one can compute a new tuple in the yield of A from an already existing one by wrapping a and b around the first component and c and d around the second.",
        "For every A G N in a LCFRS G, we define the yield of A, yield(A) as follows:",
        "b) For every rule and all fi G yield(Ai) for 1 < i < m, (f (ai),..., f (adim(A) )) G yield(A) where f is defined as follows: (i) f (t) = t for all t G T, (ii) f (Xf>) = for all 1 < i < m, 1 < j < dim(Ai) and (iii) f (xy) = f (x)f (y) for all x,y G (TU V)+.",
        "f is the composition function of the rule.",
        "c) Nothing else is in yield(A).",
        "The language is then {w | (w) G yield(S)}.",
        "The fanout of an LCFRS G is the maximal fanout of all non-terminals in G. Furthermore, the RHS length of a rewriting rules r G P is called the rank of r and the maximal rank of all rules in P is called the rank of G. We call a LCFRS ordered if for every r G P and every RHS non-terminal A in r and each pair X1, X2 of arguments of A in the RHS of r, Xi precedes X2 in the RHS iff Xi precedes X2 in the LHS.",
        "We use a probabilistic version of the CYK parser from (Seki et al., 1991), applying techniques of weighted deductive parsing (Nederhof, 2003).",
        "LCFRS can be binarized (Gomez-Rodriguez et al., 2009) and e-components in the LHS of rules can be removed (Boullier, 1998).",
        "We can therefore assume that all rules are of rank 2 and do not contain e components in their LHS.",
        "Furthermore, we assume POS tagging to be done before parsing.",
        "POS tags are non-terminals of fanout 1.",
        "The rules are then either of the form A(a) – e with A a POS tag and a G T or of the form A(a ) – B(x) or A(a) – B(x)C(y) where a G (V+)dim(A), i.e., only the rules for POS tags contain terminals in their LHSs.",
        "For every w G T *, where w = w1 .. .wn with wi G T for 1 < i < n, we define: Pos(w) := {0,...,n}.",
        "A pair (l,r) G Pos(w) x Pos(w) with l < r is a range in w. Its yield (l, r)(w) is the string w1+1.. .wr.",
        "The yield p(w) of a vector of ranges p is the vector of the yields of the single ranges.",
        "For two ranges p1 = (l1,r1),p2 = (l2,r2): if ri = h, then pi • p2 = (li,r2); otherwise p1 • p2 is undefined.",
        "B (XiXdim(B))C (YiXdim(C)) we now extend the composition function f to ranges, given an input w: for all range vectors ppB and pC of dimensions dim (B) and dim (C) respectif fr (pB ,pC) = (9(ai ),...,g(adim(A))) is defined as follows: g(Xi) = pB(i) for all 1 < i < dim(B), g(Yi) = pC(i) for all 1 < i < dim(C) and g(xy) = g(x) • g(y) for all x,y G V+.",
        "p : A(fr(pB, pC)) – B(pB)C(pic) is then called an instantiated rule.",
        "For a given input w, our items have the form [A, pp] where A G N, pp G (Pos(w) x Pos(w))dim(A.",
        "The vector p characterizes the span of A.",
        "We specify the set of weighted parse",
        "Binarv.",
        "iriB : [B,pB\\,inc : [C,pc] inB + inc + log{jp) : [A, pa] where p : A(pA) B(p~B)C(p~c) is an instantiated rule.",
        "add SCAN results to A while A = 0 remove best item x : I from A if I goal item then stop and output true",
        "for all y : I' deduced from x : I and items in C: if there is no z with z : I ' eCUA then add y : I' to A else if z : I' e A for some z then update weight of I' in A to max (y, z)",
        "Figure 3 : Weighted deductive parsing items via the deduction rules in Fig. 2.",
        "Our parser performs a weighted deductive parsing (Nederhof, 2003), based on this deduction system.",
        "We use a chart C and an agenda A, both initially empty, and we proceed as in Fig. 3."
      ]
    },
    {
      "heading": "4. Outside Estimates",
      "text": [
        "In order to speed up parsing, we add an estimate of the log of the outside probabilities of the items to their weights in the agenda.",
        "All our outside estimates are admissible (Klein and Manning, 2003a) which means that they never underestimate the actual outside probability of an item.",
        "However, most of them are not monotonic.",
        "In other words, it can happen that we deduce an item I2 from an item Iiwhere the weight of I2 is greater than the weight of Ii .",
        "The parser can therefore end up in a local maximum that is not the global maximum we are searching for.",
        "In other words, our outside weights are only figures of merit (FOM).",
        "Only for the full SX estimate, the monotonicity is guaranteed and we can do true A* parsing as described in (Klein and Manning, 2003a) that always finds the best parse.",
        "All outside estimates are computed for a certain maximal sentence length lenmax.",
        "POS tags:",
        "A a POS tag = T,jeB(i)lB (j) + EjSC(i)lc (j).",
        "The full SX estimate, for a given sentence length n, is supposed to give the minimal costs (maximal probability) of completing a category X with a span p into an S with span ((0, n)).",
        "For the computation, we need an estimate of the inside probability of a category C with a span p, regardless of the actual terminals in our input.",
        "This inside estimate is computed as shown in Fig. 4.",
        "Here, we do not need to consider the number of terminals outside the span of C (to the left or right or in the gaps), they are not relevant for the inside probability.",
        "Therefore the items have the form [A, ..., ldim(A))], where A is a non-terminal and li gives the length of its ith component.",
        "It holds that Zi<i<dim(A)li < lenmax - dim(A) + 1.",
        "A straightforward extension of the CFG algorithm from (Klein and Manning, 2003a) for computing the SX estimate is given in Fig. 5.",
        "For a given range vector p = ((h,n),(lk, rk )) and a sentence length n, we define its inside length vector lin(p) as (ri – li,...,rk – lk) and its",
        "This algorithm has two major problems: Since it proceeds top-down, in the Binary rules, we must compute all splits of the antecedent X span into the spans of A and B which is very expensive.",
        "Furthermore, for a category A with a certain number of terminals in the components and the gaps, we compute the lower part of the outside estimate several times, namely for every combination of number of terminals to the left and to the right (first and last element in the outside length vec-",
        "Binary-right:",
        "1 < len < lenmax lout(pA),lA = lin (pA), Ib = lout(pB,TB = lin(pB.",
        "tor).",
        "In order to avoid these problems, we now abstract away from the lengths of the part to the left and the right, modifying our items such as to allow a bottom-up strategy.",
        "The idea is to compute the weights ofitems representing the derivations from a certain lower C up to some A (C is a kind of \"gap\" in the yield of A) while summing up the inside costs of off-spine nodes and the log of the probabilities of the corresponding rules.",
        "We use items [A, C, pA ,pc, shift] where A, C G N and pA, pC are range vectors, both with a first component starting at position 0.",
        "The integer shift < lenmax tells us how many positions to the right the C span is shifted, compared to the starting position of the A. pA and pc represent the spans of C and A while disregarding the number of terminals to the left the right.",
        "I.e., only the lengths of the components and of the gaps are encoded.",
        "This means in particular that the length n of the sentence does not play a role here.",
        "The right boundary of the last range in the vectors is limited to lenmax.",
        "For any i, 0 < i < lenmax, and any range vector p, we define shift(p, i) as the range vector one obtains from adding i to all range boundaries in p and shift(p, – i) as the range vector one obtains from subtracting i from all boundaries in p.",
        "The weight of [A, C, pA, pC, i] estimates the costs for completing a C tree with yield pC into an A tree with yield pA such that, if the span of A starts at position j, the span of C starts at position i + j.",
        "Fig.",
        "6 gives the computation.",
        "The value of in (A, l) is the inside estimate of [A, l].",
        "The SX-estimate for some predicate C with outside length vector lout(p) as (li,ri ri,...,lk – rk-i,rk – lk ,n – rk ).",
        "POS tags:",
        "A a POS tag C a POS tag",
        "span p where i is the left boundary of the first component of p and with sentence length n is then given by the maximal weight of [S,C, (0,n), shift( – i,p),i].",
        "Among our estimates, the full SX estimate is the only one that is monotonic and that allows for true A* parsing.",
        "A problem of the previous estimate is that with a large number of non-terminals the computation of the estimate requires too much space.",
        "Our experiments have shown that for treebank parsing where we have, after binarization and markoviza-tion, appr.",
        "12,000 non-terminals, its computation is not feasible.",
        "We therefore turn to simpler estimates with only a single non-terminal per item.",
        "We now estimate the outside probability of a nonterminal A with a span of a length length (the sum of the lengths of all the components of the span), with left terminals to the left of the first component, right terminals to the right of the last component and gaps terminals in between the components of the A span, i.e., filling the gaps.",
        "Our items have the form [X, len, left, right, gaps] with X g N, len + left + right + gaps < lenmax, len > dim(X), gaps > dim(X) – 1.",
        "Let us assume that, in the rule X(ap) – A(apA)B(apB), when looking at the vector ap, we have leftA variables for A-components preceding the first variable of a B component, right a variables for A-components following the last vari-",
        "w : [X, len, I, r, g] w + in(B, len – lenA) + log(p) : [A, lenA, lA,rA,gA] where, for both rules, p : X(a) – A(eTA)B(eTB) e P.",
        "Unary: Binary:",
        "inB + inc + logijp) : [A, lB + lc] where either p : A(eTA) – B(eTB)C(etc) e P or p : A(eTA) – C(eTc)B(etB) e P.",
        "able of a B component and rightB variables for B-components following the last variable of a A component.",
        "(In our grammars, the first LHS argument always starts with the first variable from A.)",
        "Furthermore, gaps a = dim(A) – leftA – right a , gapsB = dim(B) – rightB.",
        "Fig.",
        "7 gives the computation of the estimate.",
        "The following side conditions must hold: For Binary-right to apply, the following constraints must be satisfied: a) len + l + r + g = lenB + Ib + rB + gB, b) Ib > l + left a, c)if right a > 0, then rB > r+rightA, else (righta = 0), rB = r, d) gB > gapsA.",
        "Similarly, for Binary-left to apply, the following constraints must be satisfied: a) len +1 + r + g = len a + Ia + rA + g A, b) Ia = l, c) if rightB > 0, then rA > r + rightB, else (rightB = 0), rA = r d) g a > gapsB.",
        "The value in(X, l) for a non-terminal X and a length l, 0 < l < lenmax is an estimate of the probability of an X category with a span oflength l. Its computation is specified in Fig. 8.",
        "The SX-estimate for a sentence length n and for some predicate C with a range characterized",
        "(ri – li) and r",
        "is then given by the maximal weight of the item [C, len, li,r,n – len – li – r].",
        "Binary-right:",
        "Unary W [X' len'lr'S] where p : X(e) – A(e) e P.",
        "w : [X, len, lr, g] w + in(B, len – lenA) + log(p) : [A, lenA, lrA,gA] where, for both rules, p : X(e) – A(eTA)B(eTB) e P.",
        "In order to further decrease the space complexity, we can simplify the previous estimate by subsuming the two lengths left and right in a single length lr.",
        "I.e., the items now have the form [X, len, lr, gaps] with X G N, len + lr + gaps < lenmax, len > dim(X), gaps > dim(X) – 1.",
        "The computation is given in Fig. 9.",
        "Again, we define le ft a, gaps a, right a and gapsB, right bfor a rule X(ap) – A(apa)B(apb) as above.",
        "The side conditions are as follows: For Binary-right to apply, the following constraints must be satisfied: a) len + lr + g = lenb + lrb + gB, b) lr < lr b, and c) gB > gaps a.",
        "For Binary-left to apply, the following must hold: a) len + lr + g = len a + lr a + g a, b) if right b = 0 then lr = lr a, else lr < lr a and c) g a > gapsB.",
        "The SX-estimate for a sentence length n and for some predicate C with a span pp = Zd=m(C)(n – and r = n – tdm(c) is then the maximal weight of [C, len,li + r,n – len – li – r]."
      ]
    },
    {
      "heading": "5. Evaluation",
      "text": [
        "The goal of our evaluation of our parser is to show that, firstly, reasonable parser speed can be achieved and, secondly, the parser output is of promising quality.",
        "Our data source is the German NeGra treebank (Skut et al., 1997).",
        "In a preprocessing step, following common practice (Kübler and Penn, 2008), we attach punctuation (not included in the NeGra annotation) as follows: In a first pass, using heuristics, we attach punctuation as high as possible while avoiding to introduce new crossing branches.",
        "In a second pass, parentheses and quotation marks preferably attach to the same node.",
        "Grammatical function labels on the edges are discarded.",
        "We create data sets of different sizes in order to see how the size of the training set relates to the gain using context summary estimates and to the output quality of the parser.",
        "The first set uses the first 4000 sentences and the second one all sentences of NeGra.",
        "Due to memory limitations, in both sets, we limit ourselves to sentences of a maximal length of 25 words.",
        "We use the first 90% of both sets as training set and the remaining 10% as test set.",
        "Tab.",
        "1 shows the resulting sizes.",
        "PrOAV vMfIN VVpP VA NIF",
        "darüber muß nachgedacht werden about it must thought be \"It must be thought about it\"",
        "As already mentioned, in NeGra, discontinuous phrases are annotated with crossing branches (see Fig. 10 for an example with two discontinuous VPs).",
        "Such discontinuities can be straightforwardly modelled with LCFRS.",
        "We use the algorithm from Maier and Sogaard (2008) to extract LCFRS rules from NeGra and TIGER.",
        "It first creates rules of the form P (a) – e for each pre-terminal P dominating some terminal a.",
        "Then for all other nonterminals Ao with the children Ai • • • Am, a clause A0 – Ai • • • Am is created.",
        "The arguments of the Ai • • • Am are single variables where the number of arguments is the number of discontinuous parts in the yield of a predicate.",
        "The arguments of A0 are concatenations of these variables that describe how the discontinuous parts of the yield of Aq are obtained from the yields of its daughters.",
        "Different occurrences of the same non-terminal, only with different fan-outs, are distinguished by corresponding subscripts.",
        "Note that this extraction algorithm yields only monotone LCFRS (equivalent to ordered simple RCG).",
        "See Maier and Sogaard (2008) for further details.",
        "For Fig. 10, we obtain for instance the rules in Fig. 11.",
        "NeGra-small training test",
        "NeGra training test",
        "size",
        "2839 316",
        "14858 1651",
        "Before parsing, we binarize the extracted LCFRS.",
        "For this we first apply Collins-style head rules, based on the rules the Stanford parser (Klein and Manning, 2003b) uses for NeGra, to mark the resp.",
        "head daughters of all non-terminal nodes.",
        "Then, we reorder the RHSs such that the sequence Y of elements to the right of the head daughter is reversed and moved to the beginning of the RHS.",
        "We then perform a binarization that proceeds from left to right.",
        "The binarization works like the transformation into Chomsky Normal Form for CFGs in the sense that for RHSs longer than 2, we introduce a new non-terminal that covers the RHS without the first element.",
        "The rightmost new rule, which covers the head daughter, is binarized to unary.",
        "We do not use a unique new non-terminal for every new rule.",
        "Instead, to the new symbols introduced during the binarization (VPbin in the example), a variable number of symbols from the vertical and horizontal context of the original rule is added in order to achieve markovization.",
        "Following the literature, we call the respective quantities v and h. For reasons of space we restrict ourselves here to the example in Fig. 12.",
        "Refer to Maier and Kallmeyer (2010) for a detailed presentation of the binarization and markovization.",
        "The probabilities are then computed based on the rule frequencies in the transformed treebank, using a Maximum Likelihood estimator.",
        "pDs vmfin",
        "that must one \"One has to do that now \"",
        "Tree after binarization:",
        ".",
        "Sbin – .",
        "pIs aDv VVInf",
        "jetzt machen",
        "PDS VMFIN PIS ADV VVINF Figure 12: Sample binarization",
        "In order to assess the quality of the output of our parser, we choose an EVALB-style metric, i.e., we compare phrase boundaries.",
        "In the context of LCFRS, we compare sets of items [A, p\\ that characterize the span of a non-terminal A in a derivation tree.",
        "One set is obtained from the parser output, and one from the corresponding treebank trees.",
        "Using these item sets, we compute labeled and unlabeled recall (LR/UR), precision (LP/UP), and the F\\ measure (LF1/UF1).",
        "Note that if k = 1, our metric is identical to its PCFG equivalent.We are aware of the recent discussion about the shortcomings of EVALB.",
        "A discussion of this issue is presented in Maier (2010).",
        "In all experiments, we provide the parser with gold part-of-speech tags.",
        "For the experiments with NeGra-small, the parser is given the markovization settings v = 1 and h = 1 .",
        "We compare the parser performance without estimates (OFF) with its performance with the estimates described in 4.2 (SIMPLE) and 4.3 (LR).",
        "Tab.",
        "2 shows the results.",
        "Fig.",
        "13 shows the number of items produced by the parser, indicating that the estimates have the desired effect ofpreventing unnecessary items from being produced.",
        "Note that it is even the case that the parser produces less items for the big set with LR than for the small set without estimate.",
        "We can see that the estimates lead to a slightly",
        "das muß m",
        "-z.",
        "OFF (NeGra) LR (NeGra) OFF (NeGra-small) SIMPLE (NeGra-small) LR (NeGra-small)",
        "Sentence length",
        "lower F-score.",
        "However, while the losses in terms of Fi are small, the gains in parsing time are substantial, as Fig. 13 shows.",
        "Tab.",
        "3 shows the results of experiments with NeGra, with the markovization settings v = 2 and h = 1 which have proven to be successful for PCFG parsing of NeGra (Rafferty and Manning, 2008).",
        "Unfortunately, due to memory restrictions, we were not able to compute SIMPLE for the large data set.",
        "Resp.",
        "LR, the findings are comparable to the ones for NeGra-short.",
        "The speedup is paid with a lower F1.",
        "Our results are not directly comparable with PCFG parsing results, since LCFRS parsing is a harder task.",
        "However, since the EVALB metric coincides for constituents without crossing branches, in order to place our results in the context of previous work on parsing NeGra, we cite some of the results from the literature which were obtained using PCFG parsers: Kubler (2005) (Tab.",
        "1, plain PCFG) obtains 69.4, Dubey and 71.12, Rafferty and Manning (2008) (Tab.",
        "2, Stanford parser with markovization v = 2 and h = 1 ) 77.2, and Petrov and Klein (2007) (Tab.",
        "1, Berkeley parser) 80.1.",
        "Plaehn (2004) obtains 73.16 Labeled F1 using Probabilistic Discontinuous Phrase Structure Grammar (DPSG), albeit only on sentences with a length of up to 15 words.",
        "On those sentences, we obtain 81.27.",
        "The comparison shows that our system delivers competitive results.",
        "Additionally, when comparing this to PCFG parsing results, one has to keep in mind that LCFRS parse trees contain non-context-free information about discontinuities.",
        "Therefore, a correct parse with our grammar is actually better than a correct CFG parse, evaluated with respect to a transformation of Ne-Gra into a context-free treebank where precisely this information gets lost."
      ]
    },
    {
      "heading": "6. Conclusion",
      "text": [
        "We have presented the first parser for unrestricted Probabilistic Linear Context-Free Rewriting Systems (PLCFRS), implemented as a CYK parser with weighted deductive parsing.",
        "To speed up parsing, we use context summary estimates for parse items.",
        "An evaluation on the NeGra treebank, both in terms of output quality and speed, shows that data-driven parsing using PLCFRS is feasible.",
        "Already in this first attempt with a straightforward binarization, we obtain results that are comparable to state-of-the-art PCFG results in terms of F1 , while yielding parse trees that are richer than context-free trees since they describe discontinuities.",
        "Therefore, our approach demonstrates convincingly that PLCFRS is a natural and tractable alternative for data-driven parsing which takes non-local dependencies into consideration.",
        "OFF",
        "SIMPLE",
        "LR",
        "UP/UR",
        "72.29/72.40",
        "70.49/71.81",
        "72.10/72.60",
        "UFi",
        "72.35",
        "71.14",
        "72.35",
        "LP/LR",
        "68.31/68.41",
        "64.93/66.14",
        "67.35/66.14",
        "LFi",
        "68.36",
        "65.53",
        "65.53",
        "Parsed",
        "313 (99.05%)",
        "313 (99.05%)",
        "313 (99.05%)",
        "OFF",
        "LR",
        "UP/UR",
        "76.89/77.35",
        "75.22/75.99",
        "UFl",
        "77.12",
        "75.60",
        "LP/LR",
        "73.03/73.46",
        "70.98/71.70",
        "LFi",
        "73.25",
        "71.33",
        "Parsed",
        "1642 (99.45%)",
        "1642 (99.45%)"
      ]
    }
  ]
}
