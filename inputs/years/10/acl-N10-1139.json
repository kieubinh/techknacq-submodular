{
  "info": {
    "authors": [
      "Cyril Allauzen",
      "Shankar Kumar",
      "Wolfgang Macherey",
      "Mehryar Mohri",
      "Michael D. Riley"
    ],
    "book": "Human Language Technologies: the 2010 Annual Conference of the North American Chapter of the Association for Computational Linguistics",
    "id": "acl-N10-1139",
    "title": "Expected Sequence Similarity Maximization",
    "url": "https://aclweb.org/anthology/N10-1139",
    "year": 2010
  },
  "references": [
    "acl-D08-1065",
    "acl-J04-4002",
    "acl-J94-3001",
    "acl-N04-1022",
    "acl-P09-1019",
    "acl-P09-1064",
    "acl-P09-1067",
    "acl-P96-1031",
    "acl-W04-3250"
  ],
  "sections": [
    {
      "text": [
        "Cyril Allauzen, Shankar Kumar, Wolfgang Macherey, Mehryar Mohri and Michael Riley",
        "Google Research, 76 Ninth Avenue, New York, NY 10011 Courant Institute of Mathematical Sciences, 251 Mercer Street, New York, NY 10012",
        "This paper presents efficient algorithms for expected similarity maximization, which coincides with minimum Bayes decoding for a similarity-based loss function.",
        "Our algorithms are designed for similarity functions that are sequence kernels in a general class of positive definite symmetric kernels.",
        "We discuss both a general algorithm and a more efficient algorithm applicable in a common unambiguous scenario.",
        "We also describe the application of our algorithms to machine translation and report the results of experiments with several translation data sets which demonstrate a substantial speed-up.",
        "In particular, our results show a speed-up by two orders of magnitude with respect to the original method of Tromble et al.",
        "(2008) and by a factor of 3 or more even with respect to an approximate algorithm specifically designed for that task.",
        "These results open the path for the exploration of more appropriate or optimal kernels for the specific tasks considered."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "The output of many complex natural language processing systems such as information extraction, speech recognition, or machine translation systems is a probabilistic automaton.",
        "Exploiting the full information provided by this probabilistic automaton can lead to more accurate results than just using the one-best sequence.",
        "Different techniques have been explored in the past to take advantage ofthe full lattice, some based on the use of a more complex model applied to the automaton as in rescoring, others using additional data or information for reranking the hypotheses represented by the automaton.",
        "One method for using these probabilistic automata that has been successful in large-vocabulary speech recognition (Goel and Byrne, 2000) and machine translation (Kumar and Byrne, 2004; Tromble et al., 2008) applications and that requires no additional data or other complex models is the minimum Bayes risk (MBR) decoding technique.",
        "This returns that sequence of the automaton having the minimum expected loss with respect to all sequences accepted by the automaton (Bickel and Doksum, 2001).",
        "Often, minimizing the loss function L can be equivalently viewed as maximizing a similarity function K between sequences, which corresponds to a kernel function when it is positive definite symmetric (Berg et al., 1984).",
        "The technique can then be thought of as an expected sequence similarity maximization.",
        "This paper considers this expected similarity maximization view.",
        "Since different similarity functions can be used within this framework, one may wish to select the one that is the most appropriate or relevant to the task considered.",
        "However, a crucial requirement for this choice to be realistic is to ensure that for the family of similarity functions considered the expected similarity maximization is efficiently computable.",
        "Thus, we primarily focus on this algorithmic problem in this paper, leaving it to future work to study the question of determining how to select the similarity function and report on the benefits of this choice.",
        "A general family of sequence kernels including the sequence kernels used in computational biology, text categorization, spoken-dialog classification, and many other tasks is that of rational kernels (Cortes et al., 2004).",
        "We show how the expected similarity maximization can be efficiently computed for these kernels.",
        "In section 3, we describe more specifically the framework of expected similarity maximization in the case of rational kernels and the corresponding algorithmic problem.",
        "In Section 4, we describe both a general method for the computation ofthe expected similarity maximization, and a more efficient method that can be used with a broad subfamily of rational kernels that verify a condition of non-ambiguity.",
        "This latter family includes the class of n-gram kernels which have been previously used to apply MBR to machine translation (Tromble et al., 2008) .",
        "We examine in more detail the use and application of our algorithms to machine translation in Section 5.",
        "Section 6 reports the results of experiments applying our algorithms in several large data sets in machine translation.",
        "These experiments demonstrate the efficiency of our algorithm which is shown empirically to be two orders of magnitude faster than Tromble et al.",
        "(2008) and more than 3 times faster than even an approximation algorithm specifically designed for this problem (Kumar et al., 2009) .",
        "We start with some preliminary definitions and algorithms related to weighted automata and transducers, following the definitions and terminology of Cortes etal.",
        "(2004)."
      ]
    },
    {
      "heading": "2. Preliminaries",
      "text": [
        "Weighted transducers are finite-state transducers in which each transition carries some weight in addition to the input and output labels.",
        "The weight set has the structure of a semiring.",
        "A semiring (K, ©, ®, 0,1) verifies all the axioms of a ring except from the existence of a negative element x for each x G K, which it may verify or not.",
        "Thus, roughly speaking, a semiring is a ring that may lack negation.",
        "It is specified by a set of values K, two binary operations © and ®, and two designated values 0 and 1.",
        "When <g> is commutative, the semiring is said to be commutative.",
        "The real semiring (R+, +, x, 0,1) is used when the weights represent probabilities.",
        "The log semiring (R U { – oo, +oo}, ©log, +, oo, 0) is isomorphic to the real semiring via the negativelog mapping and is often used in practice for numerical stability.",
        "The tropical semiring (RU, { – oo, +oo}, min, +, oo, 0) is derived from the log semiring via the Viterbi approximation and is often used in shortest-path applications.",
        "Figure 1(a) shows an example of a weighted finite-state transducer over the real semiring (R+, +, x, 0,1).",
        "In this figure, the input and output labels of a transition are separated by a colon delimiter and the weight is indicated after the slash separator.",
        "A weighted transducer has a set of initial states represented in the figure by a bold circle and a set of final states, represented by double circles.",
        "A path from an initial state to a final state is an accepting path.",
        "The weight of an accepting path is obtained by first ^-multiplying the weights of its constituent",
        "Figure 1 : (a) Example of weighted transducer T over the real semiring (R+, +, x, 0,1).",
        "(b) Example of weighted automaton A.",
        "A can be obtained from T by projection on the output and T(aab, bba) = A(bba) = 1 x 2 x 6 x 8 + 2 x 4 x 5 x 8.",
        "transitions and ^-multiplying this product on the left by the weight of the initial state of the path (which equals 1 in our work) and on the right by the weight of the final state of the path (displayed after the slash in the figure).",
        "The weight associated by a weighted transducer T to a pair of strings (x, y) G S* x S* is denoted by T (x, y) and is obtained by ©-summing the weights of all accepting paths with input label x and output label y.",
        "For any transducer T, T-denotes its inverse, that is the transducer obtained from T by swapping the input and output labels of each transition.",
        "For all x,y G S*, we have T-1(x,y) = T(y, x).",
        "The composition of two weighted transducers T1 and T2 with matching input and output alphabets S, is a weighted transducer denoted by T1 o T2 when the semiring is commutative and the sum:",
        "Soittola, 1978).",
        "Weighted automata can be defined as weighted transducers A with identical input and output labels, for any transition.",
        "Since only pairs of the form (x, x) can have a non-zero weight associated to them by A, we denote the weight associated by A to (x, x) by A( x) and call it the weight associated by A to x.",
        "Similarly, in the graph representation ofweighted automata, the output (or input) label is omitted.",
        "Figure 1(b) shows an example of a weighted automaton.",
        "When A and B are weighted automata, A o B is called the intersection of A and B. Omitting the input labels of a weighted transducer T results in a weighted automaton which is said to be the output projection of T."
      ]
    },
    {
      "heading": "3. General Framework",
      "text": [
        "Let X be a probabilistic automaton representing the output of a complex model for a specific query input.",
        "The model may be for example a speech recognition system, an information extraction system, or a machine translation system (which originally motivated our study).",
        "For machine translation, the sequences accepted by X are the potential translations of the input sentence, each with some probability given by",
        "X.",
        "Let S be the alphabet for the task considered, e.g., words of the target language in machine translation, and let L : S* x S* – R denote a loss function defined over the sequences on that alphabet.",
        "Given a reference or hypothesis set H Ç S*, minimum Bayes risk (MBR) decoding consists of selecting a hypothesis x G H with minimum expected loss with respect to the probability distribution X (Bickel and",
        "Here, we shall consider the case, frequent in practice, where minimizing the loss L is equivalent to maximizing a similarity measure K : S* x S* – R. When K is a sequence kernel that can be represented by weighted transducers, it is a rational kernel (Cortes et al., 2004).",
        "The problem is then equivalent to the following expected similarity maximization:",
        "When K is a positive definite symmetric rational kernel, it can often be rewritten as K(x, y) = (T o T-1)(x,y), where T is a weighted transducer over the semiring (R+ U{+oo}, +, x, 0,1).",
        "Equation (3) can then be rewritten as where we denote by A(x) an automaton accepting (only) the string x and by || • || the sum of the weights of all accepted paths of a transducer."
      ]
    },
    {
      "heading": "4. Algorithms",
      "text": [
        "Equation (5) could suggest computing A(x) o T o To X for each possible x G H. Instead, we can compute a composition based on an automaton accepting all sequences in H, A(H).",
        "This leads to a straightforward method for determining the sequence maximizing the expected similarity having the following steps:",
        "1. compute the composition X o T, project on the output and optimize (epsilon-remove, de-terminize, minimize (Mohri, 2009)) and let Y2be the result; 2. compute the composition Y1 = A(H) o T;",
        "3. compute Y1 o Y2 and project on the input, let Z be the result;"
      ]
    },
    {
      "heading": "4.. determinize Z;",
      "text": [
        "5. find the maximum weight path with the label of that path giving xx.",
        "While this method can be efficient in various scenarios, in some instances the weighted determinization yielding Z can be both space-and time-consuming, even though the input is acyclic.",
        "The next two sections describe more efficient algorithms.",
        "Note that in practice, for numerical stability, all of these computations are done in the log semiring which is isomorphic to (R+ U{+oo}, +, x, 0,1).",
        "In particular, the maximum weight path in the last step is then obtained by using a standard single-source shortest-path algorithm.",
        "A common family of rational kernels is the family of n-gram kernels.",
        "These kernels are widely use as a similarity measure in natural language processing and computational biology applications, see (Leslie et al., 2002; Lodhi et al., 2002) for instance.",
        "The n-gram kernel Kn of order n is defined as where cx(z) is the number of occurrences of z in x. Kn is a positive definite symmetric rational kernel since it corresponds to the weighted transducer Tn o T-1 where the transducer Tn is defined such that Tn(x, z) = cx(z) for all x, z G S* with |z| = n.",
        "Equivalent to computing T-1 o X and projecting on the input.",
        "Figure 2: Efficient method for bigram kernel: (a) Counting transducer T2 for S = {a, b} (over the real semiring).",
        "(b) Probabilistic automatonX (overthe real semiring).",
        "(c) The hypothesis automaton A(H) (unweighted).",
        "(d) Automaton Y2 representing the expected bigram counts in X (over the real semiring).",
        "(e) Automaton Y1 : the context dependency model derived from Y2 (over the tropical semiring).",
        "(f) The composition A(H) o Y1 (over the tropical semiring).",
        "The transducer T2 for S = {a, b} is shown in Figure 2(a).",
        "Taking advantage of the special structure of n-gram kernels and of the fact that A(H) is an unweighted automaton, we can devise a new and significantly more efficient method for computing X based on the following steps.",
        "1.",
        "Compute the expected n-gram counts in X: We compute the composition X oT, project on output and optimize (epsilon-remove, determinize, minimize) and let Y2 be the result.",
        "Observe that the weighted automaton Y2 is a compact representation of the expected n-gram counts in X, i.e. for an n-gram w (i.e. |w| = n):",
        "xes* (7) = E [Cx(w)] = cx(w).",
        "2.",
        "Construct a context-dependency model: We compute the weighted automaton Y1 over the tropical semiring as follow: the set of states is Q = {w G S*| |w| < n and w occurs in X}, the initial state being e and every state being final; the set of transitions E contains all 4-tuple (origin, label, weight, destination) of the form:",
        "where a, b G S and w G S*.",
        "Observe that w G Q when wa G Q and that aw,wb G Q when Y2(awb) = 0.",
        "Given a string x, we have",
        "Observe that Y1 is a deterministic automaton, hence Y1(x) can be computed in O(|x|) time.",
        "3.",
        "Compute xx: We compute the composition A(H) o Y1.",
        "X is then the label of the accepting path with the largest weight in this transducer and can be obtained by applying a shortest-path algorithm to – A(H) o Y1 in the tropical semiring.",
        "The main computational advantage ofthis method is that it avoids the determinization of Z in the",
        "Figure 3: Illustration of the construction of Y1 in the unambiguous case.",
        "(a) Weighted automaton Y2 (over the real semiring).",
        "(b) Deterministic tree automaton Y2' accepting {aa, ab} (over the tropical semiring).",
        "(c) Result of deter-minization of S* Y2' (over the tropical semiring).",
        "(d) Weighted automaton Y1 (over the tropical semiring).",
        "(+ , x ) semiring, which can sometimes be costly.",
        "The method has also been shown empirically to be significantly faster than the one described in the previous section.",
        "The algorithm is illustrated in Figure 2.",
        "The alphabet is S = {a, b} and the counting transducer corresponding to the bigram kernel is given in Figure 2(a).",
        "The evidence probabilistic automaton X is given in Figure 2(b) and we use as hypothesis set the set of strings that were assigned a non-zero probability by X; this set is represented by the deterministic finite automaton A(H) given in Figure 2(c).",
        "The result of step 1 of the algorithm is the weighted automaton Y2 over the real semiring given in Figure 2(d).",
        "The result of step 2 is the weighted automaton Y1 over the tropical semiring is given in Figure 2(e).",
        "Finally, the result of the composition A(H) o Y1 (step 3) is the weighted automaton over the tropical semiring given in Figure 2(f).",
        "The result of the expected similarity maximization is the string xx = ababa, which is obtained by applying a shortest-path algorithm to – A(H) o Y1.",
        "Observe that the string x with the largest probability in X is x = bbaba and is hence different from x = ababa in this example.",
        "The algorithm presented in the previous section for n-gram kernels can be generalized to handle a wide variety of rational kernels.",
        "Let K be an arbitrary rational kernel defined by a weighted transducer T. Let XT denote the regular language of the strings output by T. We shall assume that XT is a finite language, though the results of this section generalize to the infinite case.",
        "Let S denote a new alphabet defined by S = {#x : x G XT} and consider the simple grammar G of contextdependent batch rules:",
        "Each such rule inserts the symbol #x immediately after an occurrence x in the input string.",
        "For batch context-dependent rules, the context of the application for all rules is determined at once before their application (Kaplan and Kay, 1994).",
        "Assume that this grammar is unambiguous for a parallel application of the rules.",
        "This condition means that there is a unique way of parsing an input string using the strings of XT.",
        "The assumption holds for n-gram sequences, for example, since the rules applicable are uniquely determined by the n-grams (making the previous section a special case).",
        "Given an acyclic weighted automaton Y2 over the tropical semiring accepting a subset of XT, we can construct a deterministic weighted automaton Y1 for S*L(Y2) when this grammar is unambiguous.",
        "The weight assigned by Y1 to an input string is then the sum of the weights of the substrings accepted by Y2.",
        "This can be achieved using weighted determiniza-tion.",
        "This suggests a new method for generalizing Step 2 of the algorithm described in the previous section as follows (see illustration in Figure 3):",
        "(i) use Y2 to construct a deterministic weighted tree Y2' defined on the tropical semiring accepting the same strings as Y2 with the same weights, with the final weights equal to the total weight given by Y to the string ending at that leaf;",
        "(ii) let Y1 be the weighted automaton obtained by first adding self-loops labeled with all elements of S at the initial state of Y2' and then deter-minizing it, and then inserting new transitions leaving final states as described in (Mohri and",
        "Sproat, 1996).",
        "Step (ii) consists of computing a deterministic weighted automaton for S*Y2'.",
        "This step corresponds to the Aho-Corasick construction (Aho and Corasick, 1975) and can be done in time linear in the size of Y2'.",
        "This approach assumes that the grammar G of batch context-dependent rules inferred by XT is unambiguous.",
        "This can be tested by constructing the finite automaton corresponding to all rules in G. The grammar G is unambiguous iffthe resulting automaton is unambiguous (which can be tested using a classical algorithm).",
        "An alternative and more efficient test consists of checking the presence of a failure or default transition to a final state during the Aho-Corasick construction, which occurs if and only if there is ambiguity."
      ]
    },
    {
      "heading": "5. Application to Machine Translation",
      "text": [
        "In machine translation, the BLEU score (Papineni et al., 2001) is typically used as an evaluation metric.",
        "In (Tromble et al., 2008), a Minimum Bayes-Risk decoding approach for MT lattices was introduced.The loss function used in that approach was an approximation of the log-BLEU score by a linear function of n-gram matches and candidate length.",
        "This loss function corresponds to the following similarity measure:",
        "where 1x(w) is 1 if w occurs in x and 0 otherwise.",
        "(Tromble et al., 2008) implements the MBR decoder using weighted automata operations.",
        "First, the set of n-grams is extracted from the lattice.",
        "Next, the posterior probability p(w|X) of each n-gram is computed.",
        "Starting with the unweighted lattice A(H), the contribution of each n-gram w to (10) is applied by iteratively composing with the weighted automaton corresponding to w(w/(0|w|p(w|X))w)* where w = S* \\ (S*wS*).",
        "Finally, the MBR hypothesis is extracted as the best path in the automaton.",
        "The above steps are carried out one n-gram at a time.",
        "For a moderately large lattice, there can be several thousands of n-grams and the procedure becomes expensive.",
        "This leads us to investigate methods that do not require processing the n-grams one at a time in order to achieve greater efficiency.",
        "The first idea is to approximate the KLB similarity measure using a weighted sum of n-gram kernels.",
        "This corresponds to approximating 1x (w) by cx' (w) in (10).",
        "This leads us to the following similarity measure:",
        "Intuitively, the larger the length of w the less likely it is that cx (w) = 1x(w), which suggests computing the contribution to KLB(x,x;) of lower-order n-grams (|w| < k) exactly, but using the approximation by n-gram kernels for the higher-order n-grams (|w| > k).",
        "This gives the following similarity measure:",
        "Observe that K",
        "Klb .",
        "All these similarity measures can still be computed using the framework described in Section 4.",
        "Indeed, there exists a transducer Tn over the real semiring such that Tn(x, z) = 1x(z) for all x G S* and z G Sn.",
        "The transducer T1 for S = {a, b} is given by Figure 4.",
        "Let us define the similarity measure Kn as:",
        "Kn(x,x') = (TnoT-1)(x,x') = £ Cx(w)1x'(w).",
        "Observe that the framework described in Section 4 can still be applied even though Kn is not symmetric.",
        "The similarity measures KLB, KNG and K^G can then be expressed as the relevant linear combination of K and Kj."
      ]
    },
    {
      "heading": "6. Experimental Results",
      "text": [
        "Lattices were generated using a phrase-based MT system similar to the alignment template system described in (Och and Ney, 2004).",
        "Given a source sentence, the system produces a word lattice A that is a compact representation of a very large N-best list of translation hypotheses for that source sentence and their likelihoods.",
        "The lattice A is converted into a lattice X that represents a probability distribution (i.e. the posterior probability distribution given the source sentence) following:",
        "where the scaling factor a G [0, oo) flattens the distribution when a < 1 and sharpens it when a > 1.",
        "We then applied the methods described in Section 5 to the lattice X using as hypothesis set H the unweighted lattice obtained from X.",
        "The following parameters for the n-gram factors were used:",
        "Experiments were conducted on two language pairs Arabic-English (aren) and Chinese-English (zhen) and for a variety of datasets from the NIST Open Machine Translation (OpenMT) Evaluation.The values of a, p and r used for each pair are given in Table 3.",
        "We used the IBM implementation ofthe BLEU score (Papineni et al., 2001).",
        "We implemented the following methods using the OpenFst library (Allauzen et al., 2007):",
        "• exact: uses the similarity measure KLB based on the linearized log-BLEU, implemented as described in (Tromble et al., 2008);",
        "• approx: uses the approximation to KLB from (Kumar et al., 2009) and described in the appendix;",
        "• ngram: uses the similarity measure KNG implemented using the algorithm of Section 4.2;",
        "• ngram1: uses the similarity measure KNgalso implemented using the algorithm of Section 4.2.",
        "The results from Tables 1-2 show that ngram1 performs as well as exact on all datasets while being two orders of magnitude faster than exact and overall more than 3 times faster than approx."
      ]
    },
    {
      "heading": "7. Conclusion",
      "text": [
        "We showed that for broad families of transducers T and thus rational kernels, the expected similarity maximization problem can be solved efficiently.",
        "This opens up the option of seeking the most appropriate rational kernel or transducer T for the specific task considered.",
        "In particular, the kernel K used in our machine translation applications might not be optimal.",
        "One may well imagine for example that some n-grams should be further emphasized and others de-emphasized in the definition of the similarity.",
        "This can be easily accommodated in the framework of rational kernels by modifying the transition weights of T. But, ideally, one would wish to select those weights in an optimal fashion.",
        "As mentioned earlier, we leave this question to future work.",
        "However, we can offer a brief look at how one could tackle this question.",
        "One method for determining an optimal kernel for the expected similarity maximization problem consists of solving a problem similar to that of learning kernels in classification or regression.",
        "Let X1,..., Xm be m lattices with Ref (X1),..., Ref (Xm) the associated references and let x(K, Xj) be the solution of the expected similarity maximization for lattice Xj when using kernel K. Then, the kernel learning optimization problem can be formulated as follows:",
        "1 zhen",
        "1 aren",
        "nist02",
        "nist04",
        "nist05",
        "nist06",
        "nist08",
        "nist02",
        "nist04",
        "nist05",
        "nist06",
        "nist08",
        "no mbr",
        "38.7",
        "39.2",
        "38.3",
        "33.5",
        "26.5",
        "64.0",
        "51.8",
        "57.3",
        "45.5",
        "43.8",
        "exact",
        "37.0",
        "39.2",
        "38.6",
        "34.3",
        "27.5",
        "65.2",
        "51.4",
        "58.1",
        "45.2",
        "45.0",
        "approx",
        "39.0",
        "39.9",
        "38.6",
        "34.4",
        "27.4",
        "65.2",
        "52.5",
        "58.1",
        "46.2",
        "45.0",
        "ngram",
        "36.6",
        "39.1",
        "38.1",
        "34.4",
        "27.7",
        "64.3",
        "50.1",
        "56.7",
        "44.1",
        "42.8",
        "ngram1",
        "37.1",
        "39.2",
        "38.5",
        "34.4",
        "27.5",
        "65.2",
        "51.4",
        "58.0",
        "45.2",
        "44.8",
        "1 zhen",
        "1 aren",
        "nist02",
        "nist04",
        "nist05",
        "nist06",
        "nist08",
        "nist02",
        "nist04",
        "nist05",
        "nist06",
        "nist08",
        "exact",
        "3560",
        "7863",
        "5553",
        "6313",
        "5738",
        "12341",
        "23266",
        "11152",
        "11417",
        "11405",
        "approx",
        "168",
        "422",
        "279",
        "335",
        "328",
        "504",
        "1296",
        "528",
        "619",
        "808",
        "ngram",
        "28",
        "72",
        "34",
        "70",
        "43",
        "85",
        "368",
        "105",
        "63",
        "66",
        "ngram1",
        "58",
        "175",
        "96",
        "99",
        "89",
        "368",
        "943",
        "308",
        "167",
        "191",
        "a p r",
        "aren zhen",
        "0.2 0.85 0.72 0.1 0.80 0.62",
        "where K is a convex family of rational kernels and Tr[K] denotes the trace of the kernel matrix.",
        "In particular, we could choose K as a family of linear combinations of base rational kernels.",
        "Techniques and ideas similar to those discussed by Cortes et al.",
        "(2008) for learning sequence kernels could be directly relevant to this problem.",
        "1:",
        "Sort the lattice states topologically.",
        "2:",
        "Compute backward probabilities ofeach state.",
        "3:",
        "Compute posterior prob.",
        "of each n-gram:",
        "4:",
        "for each transition e do",
        "5:",
        "Compute transition posterior probability P(e|X).",
        "6:",
        "Compute n-gram posterior probs.",
        "P(w|X):",
        "7:",
        "for each n-gram w introduced by e do",
        "8:",
        "Propagate n – 1 gram suffix to he.",
        "9:",
        "if p(e|X) > Score(w,T(e)) then",
        "10:",
        "Update posterior probs.",
        "and scores:",
        "p(w|X ) += p(e|X ) – Score(w,T (e)).",
        "Score(w,he) = p(e|X ).",
        "11:",
        "else",
        "12:",
        "Score(w,he) = Score(w,T (e)).",
        "13:",
        "end if",
        "14:",
        "end for",
        "15:",
        "end for",
        "16:",
        "Assign scores to transitions (given by Equation 17).",
        "17:",
        "Find best path in the lattice (Equation 17).",
        "We describe here the approximation of the KLBsimilarity measure from Kumar et al.",
        "(2009).",
        "We assume in this section that the lattice X is deterministic in order to simplify the notations.",
        "The posterior probability of n-gram w in the lattice X can be formulated as:",
        "where s denotes the source sentence.",
        "When using the similarity measure KLB defined Equation (10),",
        "Equation (3) can then be reformulated as:",
        "The key idea behind this new approximation algorithm is to rewrite the n-gram posterior probability (Equation 16) as follows:",
        "xes* eeEx",
        "where EX is the set of transitions of X, nx is the unique accepting path labeled by x in X and f (e, w, n) is a score assigned to transition e on path n containing n-gram w:",
        "In other words, for each path n, we count the transition that contributes n-gram w and has the highest transition posterior probability relative to its predecessors on the path n; there is exactly one such transition on each lattice path n.",
        "We note that f (e, w, n) relies on the full path n which means that it cannot be computed based on local statistics.",
        "We therefore approximate the quantity f (e, w, n) with f * (e, w, X) that counts the transition e with n-gram w that has the highest arc posterior probability relative to predecessors in the entire lattice X. f *(e, w, X) can be computed locally, and the n-gram posterior probability based on f* can be determined as follows:",
        "where P(e|X) is the posterior probability of a lattice transition e G EX.",
        "The algorithm to perform Lattice MBR is given in Algorithm 1.",
        "For each state t in the lattice, we maintain a quantity Score(w,t) for each n-gram w that lies on a path from the initial state to t. Score(w, t) is the highest posterior probability among all transitions on the paths that terminate on t and contain n-gram w. The forward pass requires computing the n-grams introduced by each transition; to do this, we propagate n-grams (up to maximum order – 1) terminating on each state.",
        "otherwise.",
        "Algorithm 1 MBR Decoding on Lattices"
      ]
    }
  ]
}
