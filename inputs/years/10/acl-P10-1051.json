{
  "info": {
    "authors": [
      "Sujith Ravi",
      "Jason Baldridge",
      "Kevin Knight"
    ],
    "book": "ACL",
    "id": "acl-P10-1051",
    "title": "Minimized Models and Grammar-Informed Initialization for Supertagging with Highly Ambiguous Lexicons",
    "url": "https://aclweb.org/anthology/P10-1051",
    "year": 2010
  },
  "references": [
    "acl-C04-1080",
    "acl-C08-1008",
    "acl-D09-1123",
    "acl-J07-3004",
    "acl-J07-4004",
    "acl-J93-2004",
    "acl-J94-2001",
    "acl-N06-1019",
    "acl-P08-1085",
    "acl-P09-1057",
    "acl-W02-0603"
  ],
  "sections": [
    {
      "text": [
        "Minimized models and grammar-informed initialization for supertagging with highly ambiguous lexicons",
        "Sujith Ravi Jason Baldridge Kevin Knight",
        "Information Sciences Institute Marina del Rey, California 90292",
        "We combine two complementary ideas for learning supertaggers from highly ambiguous lexicons: grammar-informed tag transitions and models minimized via integer programming.",
        "Each strategy on its own greatly improves performance over basic expectation-maximization training with a bitag Hidden Markov Model, which we show on the CCGbank and CCG-TUT corpora.",
        "The strategies provide further error reductions when combined.",
        "We describe a new two-stage integer programming strategy that efficiently deals with the high degree of ambiguity on these datasets while obtaining the full effect of model minimization."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Creating accurate part-of-speech (POS) taggers using a tag dictionary and unlabeled data is an interesting task with practical applications.",
        "It has been explored at length in the literature since Merialdo (1994), though the task setting as usually defined in such experiments is somewhat artificial since the tag dictionaries are derived from tagged corpora.",
        "Nonetheless, the methods proposed apply to realistic scenarios in which one has an electronic part-of-speech tag dictionary or a hand-crafted grammar with limited coverage.",
        "Most work has focused on POS-tagging for English using the Penn Treebank (Marcus et al., 1993), such as (Banko and Moore, 2004; Gold-water and Griffiths, 2007; Toutanova and Johnson, 2008; Goldberg et al., 2008; Ravi and Knight, 2009).",
        "This generally involves working with the standard set of 45 POS-tags employed in the Penn Treebank.",
        "The most ambiguous word has 7 different POS tags associated with it.",
        "Most methods have employed some variant of Expectation Maximization (EM) to learn parameters for a bigram",
        "or trigram Hidden Markov Model (HMM).",
        "Ravi and Knight (2009) achieved the best results thus far (92.3% word token accuracy) via a Minimum Description Length approach using an integer program (IP) that finds a minimal bigram grammar that obeys the tag dictionary constraints and covers the observed data.",
        "A more challenging task is learning supertaggers for lexicalized grammar formalisms such as Combinatory Categorial Grammar (CCG) (Steed-man, 2000).",
        "For example, CCGbank (Hocken-maier and Steedman, 2007) contains 1241 distinct supertags (lexical categories) and the most ambiguous word has 126 supertags.",
        "This provides a much more challenging starting point for the semi-supervised methods typically applied to the task.",
        "Yet, this is an important task since creating grammars and resources for CCG parsers for new domains and languages is highly labor- and knowledge-intensive.",
        "Baldridge (2008) uses grammar-informed initialization for HMM tag transitions based on the universal combinatory rules of the CCG formalism to obtain 56.1% accuracy on ambiguous word tokens, a large improvement over the 33.0% accuracy obtained with uniform initialization for tag transitions.",
        "The strategies employed in Ravi and Knight (2009) and Baldridge (2008) are complementary.",
        "The former reduces the model size globally given a data set, while the latter biases bitag transitions toward those which are more likely based on a universal grammar without reference to any data.",
        "In this paper, we show how these strategies may be combined straightforwardly to produce improvements on the task of learning supertaggers from lexicons that have not been filtered in any way.We demonstrate their cross-lingual effectiveness on CCGbank (English) and the Italian CCG-TUT corpus (Bos et al., 2009).",
        "We find a consistent improved performance by using each of the methods compared to basic EM, and further improvements by using them in combination.",
        "Applying the approach of Ravi and Knight (2009) naively to CCG supertagging is intractable due to the high level of ambiguity.",
        "We deal with this by defining a new two-stage integer programming formulation that identifies minimal grammars eficiently and effectively.",
        "CCGbank.",
        "CCGbank was created by semi-automatically converting the Penn Treebank to CCG derivations (Hockenmaier and Steedman, 2007).",
        "We use the standard splits of the data used in semi-supervised tagging experiments (e.g. Banko and Moore (2004)): sections 0-18 for training, 19-21 for development, and 22-24 for test.",
        "CCG-TUT.",
        "CCG-TUT was created by semi-automatically converting dependencies in the Italian Turin University Treebank to CCG derivations (Bos et al., 2009).",
        "It is much smaller than CCGbank, with only 1837 sentences.",
        "It is split into three sections: newspaper texts (NPAPER), civil code texts (CIVIL), and European law texts from the JRC-Acquis Multilingual Parallel Corpus (JRC).",
        "For test sets, we use the irst 400 sentences of NPAPER, the first 400 of CIVIL, and all of JRC.",
        "This leaves 409 and 498 sentences from NPAPER and CIVIL, respectively, for training (to acquire a lexicon and run EM).",
        "For evaluation, we use two different settings of train/test splits:",
        "TEST 1 Evaluate on the NPAPER section of test using a lexicon extracted only from NPAPER section of train.",
        "TEST 2 Evaluate on the entire test using lexicons extracted from (a) NPAPER + CIVIL, (b) NPAPER, and (c) CIVIL.",
        "Table 1 shows statistics for supertag ambiguity in CCGbank and CCG-TUT.",
        "As a comparison, the POS word token ambiguity in CCGbank is 2.2: the corresponding value of 18.71 for supertags is indicative of the (challenging) fact that supertag ambiguity is greatest for the most frequent words."
      ]
    },
    {
      "heading": "3. Grammar informed initialization for supertagging",
      "text": [
        "Part-of-speech tags are atomic labels that in and of themselves encode no internal structure.",
        "In con-",
        "Table 1: Statistics for the training data used to extract lexicons for CCGbank and CCG-TUT.",
        "Distinct: # of distinct lexical categories; Max: # of categories for the most ambiguous word; Type ambig: per word type category ambiguity; Tok ambig: per word token category ambiguity.",
        "trast, supertags are detailed, structured labels; a universal set of grammatical rules deines how categories may combine with one another to project syntactic structure.",
        "Because of this, properties of the CCG formalism itself can be used to constrain learning – prior to considering any particular language, grammar or data set.",
        "Baldridge (2008) uses this observation to create grammar-informed tag transitions for a bitag HMM supertagger based on two main properties.",
        "First, categories differ in their complexity and less complex categories tend to be used more frequently.",
        "For example, two categories for buy in CCGbank are (S[dcl]\\NP)/NP and ((((S[b]\\NP)/PP)/PP)/(S[adj]\\NP))/NP; the former occurs 33 times, the latter once.",
        "Second, categories indicate the form of categories found adjacent to them; for example, the category for sentential complement verbs ((S\\NP)/S) expects an NP to its left and an S to its right.",
        "Categories combine via rules such as application and composition (see Steedman (2000) for details).",
        "Given a lexicon containing the categories for each word, these allow derivations like:",
        "Ed might see a cat",
        "Other derivations are possible.",
        "In fact, every pair of adjacent words above may be combined directly.",
        "For example, see and a may combine through forward composition to produce the category (S\\NP)/N, and Ed's category may type-raise to S/(S\\NP) and compose with might's category.",
        "Baldridge uses these properties to deine tag transition distributions that have higher likelihood for simpler categories that are able to combine.",
        "For example, for the distribution p(ti\\ti-i=NP), (S\\NP)\\NP is more likely than ((S\\NP)/(N/N))\\NP because both categories may combine with a preceding NP but the former is simpler.",
        "In turn, the latter is more likely than NP: it is more complex but can combine with the preceding NP.",
        "Finally, NP is more likely than (S/NP)/NP since neither can combine, but NP is simpler.",
        "Data",
        "Distinct",
        "Max",
        "Type ambig",
        "Tok ambig",
        "CCGbank",
        "1241",
        "126",
        "1.69",
        "18.71",
        "CCG-TUT",
        "NPAPER+CIVIL",
        "849",
        "64",
        "1.48",
        "11.76",
        "NPAPER",
        "644",
        "48",
        "1.42",
        "12.17",
        "CIVIL",
        "486",
        "39",
        "1.52",
        "11.33",
        "By starting EM with these tag transition distributions and an uniltered lexicon (word-to-supertag dictionary), Baldridge obtains a tagging accuracy of 56.1% on ambiguous words – a large improvement over the accuracy of 33.0% obtained by starting with uniform transition distributions.",
        "We refer to a model learned from basic EM (uniformly initialized) as EM, and to a model with grammar-informed initialization as EMgi ."
      ]
    },
    {
      "heading": "4. Minimized models for supertagging",
      "text": [
        "The idea of searching for minimized models is related to classic Minimum Description Length (MDL) (Barron et al., 1998), which seeks to select a small model that captures the most regularity in the observed data.",
        "This modeling strategy has been shown to produce good results for many natural language tasks (Goldsmith, 2001; Creutz and Lagus, 2002; Ravi and Knight, 2009).",
        "For tagging, the idea has been implemented using Bayesian models with priors that indirectly induce sparsity in the learned models (Goldwater and Grifiths, 2007); however, Ravi and Knight (2009) show a better approach is to directly minimize the model using an integer programming (IP) formulation.",
        "Here, we build on this idea for supertagging.",
        "There are many challenges involved in using IP minimization for supertagging.",
        "The 1241 distinct supertags in the tagset result in 1.5 million tag bigram entries in the model and the dictionary contains almost 3.5 million word/tag pairs that are relevant to the test data.",
        "The set of 45 POS tags for the same data yields 2025 tag bigrams and 8910 dictionary entries.",
        "We also wish to scale our methods to larger data settings than the 24k word tokens in the test data used in the POS tagging task.",
        "Our objective is to ind the smallest supertag grammar (of tag bigram types) that explains the entire text while obeying the lexicon's constraints.",
        "However, the original IP method of Ravi and Knight (2009) is intractable for supertagging, so we propose a new two-stage method that scales to the larger tagsets and data involved.",
        "Our goal for supertagging is to build a minimized model with the following objective:",
        "IP original : Find the smallest supertag grammar (i.e., tag bigrams) that can explain the entire text (the test word token sequence).",
        "Using the full grammar and lexicon to perform model minimization results in a very large, difi-cult to solve integer program involving billions of variables and constraints.",
        "This renders the minimization objective IPoriginal intractable.",
        "One way of combating this is to use a reduced grammar and lexicon as input to the integer program.",
        "We do this without further supervision by using the HMM model trained using basic EM: entries are pruned based on the tag sequence it predicts on the test data.",
        "This produces an observed grammar of distinct tag bigrams (Gobs) and lexicon of observed lexical assignments (Lobs).",
        "For CCGbank, Gobs and Lobs have 12,363 and 18,869 entries, respectively – far less than the millions of entries in the full grammar and lexicon.",
        "Even though EM minimizes the model somewhat, many bad entries remain in the grammar.",
        "We prune further by supplying Gobs and Lobs as input (G,L) to the IP-minimization procedure.",
        "However, even with the EM-reduced grammar and lexicon, the IP-minimization is still very hard to solve.",
        "We thus split it into two stages.",
        "The irst stage (Minimization 1) inds the smallest grammar Gmin1 C G that explains the set of word bigram types observed in the data rather than the word sequence itself, and the second (Minimization 2) finds the smallest augmentation of Gmin1 that explains the full word sequence.",
        "Minimization 1 (Min1).",
        "We begin with a simpler minimization problem than the original one (IPoriginal), with the following objective:",
        "IPmin l : Find the smallest set of tag bigrams Gmin1 C G, such that there is at least one tagging assignment possible for every word bigram type observed in the data.",
        "We formulate this as an integer program, creating binary variables gvari for every tag bigram gi = tjtk in G. Binary link variables connect tag bigrams with word bigrams; these are restricted",
        "Minimize: Sv9- ea 9var'i Subject to constraints:",
        "1.",
        "For every word bigram wiwm, there exists at least one tagging that respects the lexicon L.",
        "where L(wl) and L(wm) represent the set of tags seen in the lexicon for words wl and wm respectively.",
        "2.",
        "The link variable assignments are constrained to respect the grammar variables chosen by the integer program.",
        "linkjkim < gvan where gvari is the binary variable corresponding to tag bigram tjtk in the grammar G.",
        "to the set of links that respect the lexicon L provided as input, i.e., there exists a link variable linkjklm connecting tag bigram tjtk with word bigram wlwm only if the word/tag pairs (wl,tj) and (wm, tk) are present in L. The entire integer programming formulation is shown Figure 2.",
        "The IP solver solves the above integer program and we extract the set of tag big rams Gminl based on the activated grammar variables.",
        "For the CCG-bank test data, MIN1 yields 2530 tag bigrams.",
        "However, a second stage is needed since there is no guarantee that Gminl can explain the test data: it contains tags for all word bigram types, but it cannot necessarily tag the full word sequence.",
        "Figure 1 illustrates this.",
        "Using only tag bigrams from MIN1 (shown in blue), there is no fully-linked tag path through the network.",
        "There are missing links between words w2 and w3 and between words w3and w4 in the word sequence.",
        "The next stage fills in these missing links.",
        "Minimization 2 (MIN2).",
        "This stage uses the original minimization formulation for the su-pertagging problem IP original, again using an integer programming method similar to that proposed by Ravi and Knight (2009).",
        "If applied to the observed grammar Gobs, the resulting integer program is hard to solve.",
        "However, by using the partial solution Gminl obtained in MIN1 the IP optimization speeds up considerably.",
        "We implement this by ixing the values of all binary grammar variables present in Gminl to 1 before optimization.",
        "This reduces the search space signiicantly, and CPLEX inishes in just a few hours.",
        "The details of this method are described below.",
        "We instantiate binary variables gvari and lvarifor every tag bigram (in G) and lexicon entry (in L).",
        "We then create a network of possible taggings for the word token sequence w1w2----wn in the corpus and assign a binary variable to each link in the network.",
        "We name these variables linkcjk, where c indicates the column of the link's source in the network, and j and k represent the link's source and destination (i.e., linkcjk corresponds to tag bigram tjtk in column c).",
        "Next, we formulate the integer program given in Figure 3.",
        "Minimize: ~ï2Vg-eG gvariSubject to constraints:",
        "1.",
        "Chosen link variables form a left-to-right path through the tagging network.",
        "Vc=i..n-2Vfc J2j linkcjk =J2j link(c+i)kj",
        "2.",
        "Link variable assignments should respect the chosen grammar variables.",
        "for every link: linkcjk < gvari where gvari corresponds to tag bigram tj tk 3.",
        "Link variable assignments should respect the chosen lexicon variables.",
        "for every link: linkcjk < lvarWctj for every link: linkcjk < lvarWc+ltk where wc is the cth word in the word sequence w1...wn, and lvarWctj is the binary variable corresponding to the word/tag pair wc/tj in the lexicon L.",
        "4.",
        "The final solution should produce at least one complete tagging path through the network.",
        "Evjjfc linkijk >",
        "5.",
        "Provide minimized grammar from MIN1as partial solution to the integer program.",
        "VgiEGmin1 gvari = 1 tional tag bigrams (shown in red) to form a complete tag path through the network.",
        "The minimized grammar set in the final solution Gmin2 contains only 2810 entries, significantly fewer than the original grammar Gobs's 12,363 tag bigrams.",
        "We note that the two-stage minimization procedure proposed here is not guaranteed to yield the optimal solution to our original objective IPoriginal.",
        "On the simpler task of unsupervised POS tagging with a dictionary, we compared our method versus directly solving IPoriginal and found that the minimization (in terms of grammar size) achieved by our method is close to the optimal solution for the original objective and yields the same tagging accuracy far more eficiently.",
        "Fitting the minimized model.",
        "The IPminimization procedure gives us a minimal grammar, but does not it the model to the data.",
        "In order to estimate probabilities for the HMM model for supertagging, we use the EM algorithm but with certain restrictions.",
        "We build the transition model using only entries from the minimized grammar set Gmin2, and instantiate an emission model using the word/tag pairs seen in L (provided as input to the minimization procedure).",
        "All the parameters in the HMM model are initialized with uniform probabilities, and we run EM for 40 iterations.",
        "The trained model is used to ind the Viterbi tag sequence for the corpus.",
        "We refer to this model (where the EM output (Gobs, Lobs) was provided to the IP-minimization as initial input) as EM+IP.",
        "Bootstrapped minimization.",
        "The quality of the observed grammar and lexicon improves considerably at the end of a single EM+IP run.",
        "Ravi and Knight (2009) exploited this to iteratively improve their POS tag model: since the irst minimization procedure is seeded with a noisy grammar and tag dictionary, iterating the IP procedure with progressively better grammars further improves the model.",
        "We do likewise, bootstrapping a new EM+IP run using as input, the observed grammar Gobs and lexicon Lobs from the last tagging output of the previous iteration.",
        "We run this until the chosen grammar set Gmin2 does not change.",
        "There are two complementary ways to use grammar-informed initialization with the IP-minimization approach: (1) using EMG1 output as the starting grammar/lexicon and (2) using the tag transitions directly in the IP objective function.",
        "The irst takes advantage of the earlier observation that the quality of the grammar and lexicon provided as initial input to the minimization procedure can affect the quality of the inal supertagging output.",
        "For the second, we modify the objective function used in the two IP-minimization steps to",
        "Minimize: wi • gvari (1) where, G is the set of tag bigrams provided as input to IP, gvari is a binary variable in the integer program corresponding to tag bigram (ti-1 ,ti) G G, and wi is negative logarithm of pgii(ti\\ti-1) as given by Baldridge (2008).",
        "All other parts of the integer program including the constraints remain unchanged, and, we acquire a inal tagger in the same manner as described in the previous section.",
        "In this way, we combine the minimization and GI strategies into a single objective function that inds a minimal grammar set while keeping the more likely tag bigrams in the chosen solution.",
        "EMci+IPa is used to refer to the method that uses GI information in both ways: EMGi output as the starting grammar/lexicon and GI weights in the IP-minimization objective."
      ]
    },
    {
      "heading": "5. Experiments",
      "text": [
        "We compare the four strategies described in Sections 3 and 4, summarized below:",
        "EM HMM uniformly initialized, EM training.",
        "EM+IP IP minimization using initial grammar provided by EM.",
        "EMgi HMM with grammar-informed initialization, EM training.",
        "EMgi+IPgi IP minimization using initial grammar/lexicon provided by EMGi and additional grammar-informed IP objective.",
        "For EM+IP and EMgi+IPgi , the minimization and EM training processes are iterated until the resulting grammar and lexicon remain unchanged.",
        "Forty EM iterations are used for all cases.",
        "We also include a baseline which randomly chooses a tag from those associated with each word in the lexicon, averaged over three runs.",
        "Accuracy on ambiguous word tokens.",
        "We evaluate the performance in terms oftagging accuracy with respect to gold tags for ambiguous words in held-out test sets for English and Italian.",
        "We consider results with and without punctuation.",
        "Recall that unlike much previous work, we do not collect the lexicon (tag dictionary) from the test set: this means the model must handle unknown words and the possibility ofhaving missing lexical entries for covering the test set.",
        "Precision and recall of grammar and lexicon.",
        "In addition to accuracy, we measure precision and",
        "able/combinable bigrams.",
        "Table 2: Supertagging accuracy for CCGbank sections 22-24.",
        "Accuracies are reported for four settings – (1) ambiguous word tokens in the test corpus, (2) ambiguous word tokens, ignoring punctuation, (3) all word tokens, and (4) all word tokens except punctuation.",
        "recall for each model on the observed bitag grammar and observed lexicon on the test set.",
        "We calculate them as follows, for an observed grammar or lexicon X:",
        "Precision = \\{X}n{Observedgold}\\",
        "Recall = \\{X} n i°bservedgold}\\\\{Observedgold}\\",
        "This provides a measure of model performance on bitag types for the grammar and lexical entry types for the lexicon, rather than tokens.",
        "Accuracy on ambiguous tokens.",
        "Table 2 gives performance on the CCGbank test sections.",
        "All models are well above the random baseline, and both of the strategies individually boost performance over basic EM by a large margin.",
        "For the models using GI, accuracy ignoring punctuation is higher than for all almost entirely due to the fact that \".\"",
        "has the supertags \".\"",
        "and S, and the GI gives a preference to S since it can in fact combine with other categories, unlike \".",
        "\" – the effect is that nearly every sentence-final period (~5.5k tokens) is tagged S rather than \".",
        "\".",
        "EMgi is more effective than EM+IP; however, it should be kept in mind that IP-minimization is a general technique that can be applied to any sequence prediction task, whereas grammar-informed initialization may be used only with tasks in which the interactions of adjacent labels may be derived from the labels themselves.",
        "Interestingly, the gap between the two approaches is greater when punctuation is ignored (51.0 vs. 59.4) – this is unsurprising because, as noted already, punctuation supertags are not actual cate-",
        "Model",
        "ambig",
        "ambig",
        "all",
        "all",
        "-punc",
        "-punc",
        "Random",
        "17.9",
        "16.2",
        "27.4",
        "21.9",
        "EM",
        "38.7",
        "35.6",
        "45.6",
        "39.8",
        "EM+IP",
        "52.1",
        "51.0",
        "57.3",
        "53.9",
        "EMgi",
        "56.3",
        "59.4",
        "61.0",
        "61.7",
        "EMgi+IPgi",
        "59.6",
        "62.3",
        "63.8",
        "64.3",
        "Table 3: Comparison of grammar/lexicon observed in the model tagging vs. gold tagging in terms of precision and recall measures for su-pertagging on CCGbank data.",
        "gories, so EMGi is unable to model their distribution.",
        "Most importantly, the complementary effects of the two approaches can be seen in the improved results for EMGi+IPGi, which obtains about 3% better accuracy than EMGi.",
        "Accuracy on all tokens.",
        "Table 2 also gives performance when taking all tokens into account.",
        "The HMM when using full supervision obtains 87.6% accuracy (Baldridge, 2008), so the accuracy of 63.8% achieved by EMGi+IPGi nearly halves the gap between the supervised model and the 45.6% obtained by basic EM semi-supervised model.",
        "Effect of GI information in EM and/or IPminimization stages.",
        "We can also consider the effect of GI information in either EM training or IP-minimization to see whether it can be effectively exploited in both.",
        "The latter, EM+IPGi, obtains 53.2/51.1 for all/no-punc – a small gain compared to EM+IP's 52.1/51.0.",
        "The former, EMGi+IP, obtains 58.9/61.6 – a much larger gain.",
        "Thus, the better starting point provided by EMGi has more impact than the integer program that includes GI in its objective function.",
        "However, we note that it should be possible to exploit the GI information more effectively in the integer program than we have here.",
        "Also, our best model, EMGi+IPGi, uses GI information in both stages to obtain our best accuracy of 59.6/62.3.",
        "P/R for grammars and lexicons.",
        "We can obtain a more-ine grained understanding of how the models differ by considering the precision and recall values for the grammars and lexicons of the different models, given in Table 3.",
        "The basic EM model has very low precision for the grammar, indicating it proposes many unnecessary bitags; it achieves better recall because of the sheer number of bitags it proposes (12,363).",
        "EM+IP prunes that set of bitags considerably, leading to better precision at the cost of recall.",
        "EMGi s higher recall and precision indicate the tag transition distributions do capture general patterns of linkage between adjacent CCG categories, while EM ensures that the data ilters out combinable, but unnecessary, bitags.",
        "With EMGi+IPGi, we again see that IP-minimization prunes even more entries, improving precision at the loss of some recall.",
        "Similar trends are seen for precision and recall on the lexicon.",
        "IP-minimization s pruning ofinap-propriate taggings means more common words are not assigned highly infrequent supertags (boosting precision) while unknown words are generally assigned more sensible supertags (boosting recall).",
        "EMGi again focuses taggings on combinable contexts, boosting precision and recall similarly to EM+IP, but in greater measure.",
        "EMGi+IPGi then prunes some of the spurious entries, boosting precision at some loss of recall.",
        "Tag frequencies predicted on the test set.",
        "Table 4 compares gold tags to tags generated by all four methods for the frequent and highly ambiguous words the and in.",
        "Basic EM wanders far away from the gold assignments; it has little guidance in the very large search space available to it.",
        "IP-minimization identiies a smaller set of tags that better matches the gold tags; this emerges because other determiners and prepositions evoke similar, but not identical, supertags, and the grammar minimization pushes (but does not force) them to rely on the same supertags wherever possible.",
        "However, the proportions are incorrect; for example, the tag assigned most frequently to is more frequent in the test set.",
        "EMGi s tags correct that balance and ind better proportions, but also some less common categories, such as (((N/N)\\(N/N))\\((N/N)\\(N/N)))/N, sneak in because they combine with frequent categories like N/N and N. Bringing the two strategies together with EMGi+IPGi ilters out the unwanted categories while getting better overall proportions.",
        "To demonstrate that both methods and their combination are language independent, we apply them to the Italian CCG-TUT corpus.",
        "We wanted to evaluate performance out-of-the-box because",
        "EM",
        "EM+IP",
        "EMgi",
        "EMgi +IPgi",
        "Grammar",
        "Precision",
        "7.5",
        "32.9",
        "52.6",
        "68.1",
        "Recall",
        "26.9",
        "13.2",
        "34.0",
        "19.8",
        "Lexicon",
        "Precision",
        "58.4",
        "63.0",
        "78.0",
        "80.6",
        "Recall",
        "50.9",
        "56.0",
        "71.5",
        "67.6",
        "Table 6: Comparison of grammar/lexicon observed in the model tagging vs. gold tagging in terms of precision and recall measures for su-pertagging on CCG-TUT.",
        "Table 4: Comparison of tag assignments from the gold tags versus model tags obtained on the test set.",
        "The table shows tag assignments (and their counts for each method) for the and in in the CCGbank test sections.",
        "The number of distinct tags assigned by each method is given in parentheses.",
        "Ltrain is the lexicon obtained from sections 0-18 of CCGbank that is used as the basis for EM training.",
        "Table 5: Comparison of supertagging results for CCG-TUT.",
        "Accuracies are for ambiguous word tokens in the test corpus, ignoring punctuation.",
        "bootstrapping a supertagger for a new language is one of the main use scenarios we envision: in such a scenario, there is no development data for changing settings and parameters.",
        "Thus, we determined a train/test split beforehand and ran the methods exactly as we had for CCGbank.",
        "The results, given in Table 5, demonstrate the same trends as for English: basic EM is far more accurate than random, EM+IP adds another 8-10% absolute accuracy, and EMGi adds an additional 810% again.",
        "The combination of the methods generally improves over EMGi, except when the lexicon is extracted from NPAPER+CIVIL.",
        "Table 6 gives precision and recall for the grammars and lexicons for CCG-TUT – the values are lower than for CCGbank (in line with the lower baseline), but exhibit the same trends."
      ]
    },
    {
      "heading": "6. Conclusion",
      "text": [
        "We have shown how two complementary strategies – grammar-informed tag transitions and IP-minimization – for learning of supertaggers from highly ambiguous lexicons can be straightforwardly integrated.",
        "We verify the beneits of both cross-lingually, on English and Italian data.",
        "We also provide a new two-stage integer programming setup that allows model minimization to be tractable for supertagging without sacriicing the quality of the search for minimal bitag grammars.",
        "The experiments in this paper use large lexicons, but the methodology will be particularly useful in the context of bootstrapping from smaller ones.",
        "This brings further challenges; in particular, it will be necessary to identify novel entries consisting of seen word and seen category and to predict unseen, but valid, categories which are needed to explain the data.",
        "For this, it will be necessary to forgo the assumption that the provided lexicon is always obeyed.",
        "The methods we introduce here should help maintain good accuracy while opening up these degrees of freedom.",
        "Because the lexicon is the grammar in CCG, learning new word-category associations is grammar generalization and is of interest for grammar acquisition.",
        "Lexicon",
        "Gold",
        "EM",
        "EM+IP",
        "EMgi",
        "EMgi+IPgi",
        "the – (41 distinct tags in Ltrain)",
        "(14 tags)",
        "(18 tags)",
        "(9 tags)",
        "(25 tags)",
        "(12 tags)",
        "NP[nb]/N",
        "5742",
        "0",
        "4544",
        "4176",
        "4666",
        "((S\\NP)\\(S\\NP))/N",
        "14",
        "5",
        "642",
        "122",
        "107",
        "(((N/N)\\(N/N))\\((N/N)\\(N/N)))/N",
        "0",
        "0",
        "0",
        "698",
        "0",
        "((S/S)/S[dcl])/(S[adj]\\NP)",
        "0",
        "733",
        "0",
        "0",
        "0",
        "PP/N",
        "0",
        "1755",
        "0",
        "3",
        "1",
        "in – (76 distinct tags in Ltrain)",
        "(35 tags)",
        "(20 tags)",
        "(17 tags)",
        "(37 tags)",
        "(14 tags)",
        "(NP\\NP)/NP",
        "883",
        "0",
        "649",
        "708",
        "904",
        "((S\\NP)\\(S\\NP))/NP",
        "793",
        "0",
        "911",
        "320",
        "424",
        "PP/NP",
        "177",
        "1",
        "33",
        "12",
        "82",
        "((S[adj] \\NP)/(S[adj] \\NP))/NP",
        "0",
        "215",
        "0",
        "0",
        "0",
        "Model",
        "TEST 1",
        "TEST 2 (using lexicon from:)",
        "NPAPER+CIVIL",
        "NPAPER",
        "CIVIL",
        "Random",
        "9.6",
        "9.7",
        "8.4",
        "9.6",
        "EM",
        "26.4",
        "26.8",
        "27.2",
        "29.3",
        "EM+IP",
        "34.8",
        "32.4",
        "34.8",
        "34.6",
        "EMgi",
        "43.1",
        "43.9",
        "44.0",
        "40.3",
        "EMgi+IPgi",
        "45.8",
        "43.6",
        "47.5",
        "40.9",
        "EM",
        "EM+IP",
        "EMgi",
        "EMgi+IPgi",
        "Grammar",
        "Precision",
        "23.1",
        "26.4",
        "44.9",
        "46.7",
        "Recall",
        "18.4",
        "15.9",
        "24.9",
        "22.7",
        "Lexicon",
        "Precision",
        "51.2",
        "52.0",
        "54.8",
        "55.1",
        "Recall",
        "43.6",
        "42.8",
        "46.0",
        "44.9",
        "Finally, such lexicon reinement and generalization is directly relevant for using CCG in syntax-based machine translation models (Hassan et al., 2009).",
        "Such models are currently limited to languages for which corpora annotated with CCG derivations are available.",
        "Clark and Curran (2006) show that CCG parsers can be learned from sentences labeled with just supertags – without full derivations – with little loss in accuracy.",
        "The improvements we show here for learning supertaggers from lexicons without labeled data may be able to help create annotated resources more ef-iciently, or enable CCG parsers to be learned with less human-coded knowledge."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "The authors would like to thank Johan Bos, Joey Frazee, Taesun Moon, the members of the UT-NLL reading group, and the anonymous reviewers.",
        "Ravi and Knight acknowledge the support of the NSF (grant IIS-0904684) for this work.",
        "Baldridge acknowledges the support of a grant from the Morris Memorial Trust Fund of the New York Community Trust."
      ]
    }
  ]
}
