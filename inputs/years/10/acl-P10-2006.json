{
  "info": {
    "authors": [
      "Graeme Blackwood",
      "Adrià Gispert",
      "de",
      "William Byrne"
    ],
    "book": "Proceedings of the ACL 2010 Conference Short Papers",
    "id": "acl-P10-2006",
    "title": "Efficient Path Counting Transducers for Minimum Bayes-Risk Decoding of Statistical Machine Translation Lattices",
    "url": "https://aclweb.org/anthology/P10-2006",
    "year": 2010
  },
  "references": [
    "acl-D07-1090",
    "acl-D08-1065",
    "acl-N04-1022",
    "acl-N09-1049",
    "acl-N09-4005",
    "acl-P02-1001",
    "acl-P03-1006",
    "acl-P09-1019"
  ],
  "sections": [
    {
      "text": [
        "Graeme Blackwood, Adria de Gispert, William Byrne",
        "This paper presents an efficient implementation of linearised lattice minimum Bayes-risk decoding using weighted finite state transducers.",
        "We introduce transducers to efficiently count lattice paths containing n-grams and use these to gather the required statistics.",
        "We show that these procedures can be implemented exactly through simple transformations of word sequences to sequences of n-grams.",
        "This yields a novel implementation of lattice minimum Bayes-risk decoding which is fast and exact even for very large lattices."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "This paper focuses on an exact implementation of the linearised form of lattice minimum Bayes-risk (LMBR) decoding using general purpose weighted finite state transducer (WFST) operations.",
        "The LMBR decision rule in Tromble et al.",
        "(2008) has the form where E is a lattice of translation hypotheses, N is the set of all n-grams in the lattice (typically, n = 1... 4), and the parameters 9 are constants estimated on held-out data.",
        "The quantity p(u\\E) we refer to as the path posterior probability of the n-gram u.",
        "This particular posterior is defined as where Eu = {E G E : #u(E) > 0} is the subset of lattice paths containing the n-gram u at least",
        "'We omit an introduction to WFSTs for space reasons.",
        "See Mohri et al.",
        "(2008) for details of the general purpose WFST operations used in this paper.",
        "once.",
        "It is the efficient computation of these path posterior n-gram probabilities that is the primary focus of this paper.",
        "We will show how general purpose WFST algorithms can be employed to efficiently compute p(u\\E) for all u G N.",
        "Tromble et al.",
        "(2008) use Equation (1) as an approximation to the general form of statistical machine translation MBR decoder (Kumar and Byrne, 2004):",
        "The approximation replaces the sum over all paths in the lattice by a sum over lattice n-grams.",
        "Even though a lattice may have many n-grams, it is possible to extract and enumerate them exactly whereas this is often impossible for individual paths.",
        "Therefore, while the Tromble et al.",
        "(2008) linearisation of the gain function in the decision rule is an approximation, Equation (1) can be computed exactly even over very large lattices.",
        "The challenge is to do so efficiently.",
        "If the quantity p(u\\E) had the form of a conditional expected count it could be computed efficiently using counting transducers (Allauzen et al., 2003).",
        "The statistic c(u\\E) counts the number of times an n-gram occurs on each path, accumulating the weighted count over all paths.",
        "By contrast, what is needed by the approximation in Equation (1) is to identify all paths containing an n-gram and accumulate their probabilities.",
        "The accumulation of probabilities at the path level, rather than the n-gram level, makes the exact computation of p(u\\E) hard.",
        "Tromble et al.",
        "(2008) approach this problem by building a separate word sequence acceptor for each n-gram in N and intersecting this acceptor with the lattice to discard all paths that do not contain the n-gram; they then sum the probabilities of all paths in the filtered lattice.",
        "We refer to this as the sequential method, since p(u\\E) is calculated separately for each u in sequence.",
        "Allauzen et al.",
        "(2010) introduce a transducer for simultaneous calculation of p(u\\E) for all un-igrams u G Ni in a lattice.",
        "This transducer is effective for finding path posterior probabilities of unigrams because there are relatively few unique unigrams in the lattice.",
        "As we will show, however, it is less efficient for higher-order n-grams.",
        "Allauzen et al.",
        "(2010) use exact statistics for the unigram path posterior probabilities in Equation (1), but use the conditional expected counts of Equation (4) for higher-order n-grams.",
        "Their hybrid MBR decoder has the form argmax e> es where k determines the range of n-gram orders at which the path posterior probabilities p(u\\E) of Equation (2) and conditional expected counts c(u\\E) of Equation (4) are used to compute the expected gain.",
        "For k < 4, Equation (5) is thus an approximation to the approximation.",
        "In many cases it will be perfectly fine, depending on how closely p(u\\E) and c(u\\E) agree for higher-order n-grams.",
        "Experimentally, Allauzen et al.",
        "(2010) find this approximation works well at k = 1 for MBR decoding of statistical machine translation lattices.",
        "However, there may be scenarios in which p(u\\E) and c(u\\E) differ so that Equation (5) is no longer useful in place of the original Tromble et al.",
        "(2008) approximation.",
        "In the following sections, we present an efficient method for simultaneous calculation of p(u\\E) for n-grams of a fixed order.",
        "While other fast MBR approximations are possible (Kumar et al., 2009), we show how the exact path posterior probabilities can be calculated and applied in the implementation of Equation (1) for efficient MBR decoding over lattices."
      ]
    },
    {
      "heading": "2. N gram Mapping Transducer",
      "text": [
        "We make use of a trick to count higher-order n-grams.",
        "We build transducer $n to map word sequences to n-gram sequences of order n. $n has a similar form to the WFST implementation of an n-gram language model (Allauzen et al., 2003).",
        "$nincludes for each n-gram u = wn arcs of the form:",
        "The n-gram lattice of order n is called En and is found by composing E o $n, projecting on the output, removing e-arcs, determinizing, and minimising.",
        "The construction of En is fast even for large lattices and is memory efficient.",
        "En itself may have more states than E due to the association of distinct n-gram histories with states.",
        "However, the counting transducer for unigrams is simpler than the corresponding counting transducer for higherorder n-grams.",
        "As a result, counting unigrams in En is easier than counting n-grams in E."
      ]
    },
    {
      "heading": "3. Efficient Path Counting",
      "text": [
        "Associated with each En we have a transducer ^nwhich can be used to calculate the path posterior probabilities p(u\\E) for all u G Nn.",
        "In Figures 1 and 2 we give two possible forms of \\I>n that can be used to compute path posterior probabilities over n-grams u1)2 G Nn for some n. No modification to the p-arc matching mechanism is required even in counting higher-order n-grams since all n-grams are represented as individual symbols after application of the mapping transducer $n.",
        "Transducer ^ is used by Allauzen et al.",
        "(2010) to compute the exact unigram contribution to the conditional expected gain in Equation (5).",
        "For example, in counting paths that contain u1, ^ retains the first occurrence of u1 and maps every other symbol to e. This ensures that in any path containing a given u, only the first u is counted, avoiding multiple counting of paths.",
        "We introduce an alternative path counting transducer that effectively deletes all symbols except the last occurrence of u on any path by ensuring that any paths in composition which count earlier instances of u do not end in a final state.",
        "Multiple counting is avoided by counting only the last occurrence of each symbol u on a path.",
        "We note that initial e:e arcs in ^ effectively create \\Nn\\ copies of En in composition while searching for the first occurrence of each u. Com-",
        "Figure 1 : Path counting transducer ^ matching first (left-most) occurrence of each u G Nn.",
        "posing with creates a single copy of En while searching for the last occurrence of u; we find this to be much more efficient for large Nn.",
        "Path posterior probabilities are calculated over each En by composing with ^n in the log semiring, projecting on the output, removing e-arcs, de-terminizing, minimising, and pushing weights to the initial state (Allauzen et al., 2010).",
        "Using either ^L or the resulting counts acceptor is Xn.",
        "It has a compact form with one arc from the start state for each u G Nn:",
        "Although Xn has a convenient and elegant form, it can be difficult to build for large Nn because the composition £n o ^>n results in millions of states and arcs.",
        "The log semiring e-removal and determinization required to sum the probabilities of paths labelled with each u can be slow.",
        "However, if we use the proposed then each path in En o ^R has only one none output label u and all paths leading to a given final state share the same u.",
        "A modified forward algorithm can be used to calculate p(u\\E) without the costly e-removal and determinization.",
        "The modification simply requires keeping track of which symbol u is encountered along each path to a final state.",
        "More than one final state may gather probabilities for the same u; to compute p(u\\E) these probabilities are added.",
        "The forward algorithm requires that En be topologically sorted; although sorting can be slow, it is still quicker than log semiring e-removal and determinization.",
        "The statistics gathered by the forward algorithm could also be gathered under the expectation semiring (Eisner, 2002) with suitably defined features.",
        "We take the view that the full complexity of that approach is not needed here, since only one symbol is introduced per path and per exit state.",
        "Unlike En o ^R, the composition En o ^ does not segregate paths by u such that there is a direct association between final states and symbols.",
        "The forward algorithm does not readily yield the per-symbol probabilities, although an arc weight vector indexed by symbols could be used to correctly aggregate the required statistics (Riley et al., 2009).",
        "For large Nn this would be memory intensive.",
        "The association between final states and symbols could also be found by label pushing, but we find this slow for large En o ^n."
      ]
    },
    {
      "heading": "4. Efficient Decoder Implementation",
      "text": [
        "In contrast to Equation (5), we use the exact values of p(u\\E) for all u G Nn at orders n = 1... 4 to compute = argmin where gn(E, E') = £ueNn 9u#u(E')p(u\\E) using the exact path posterior probabilities at each order.",
        "We make acceptors Qn such that E o Qnassigns order n partial gain gn(E, E') to all paths E G E. Qn is derived from $n directly by assigning arc weight 9u xp(u\\E) to arcs with output label u and then projecting on the input labels.",
        "For each n-gram u = wn in Nn arcs of Qn have the form:",
        "To apply 9o we make a copy of E, called Eo, with fixed weight 90 on all arcs.",
        "The decoder is formed as the composition E0 o Q1 o Q2 o Q3 o Q4and E is extracted as the maximum cost string."
      ]
    },
    {
      "heading": "5. Lattice Generation for LMBR",
      "text": [
        "Lattice MBR decoding performance and efficiency is evaluated in the context of the NIST",
        "Table 1: BLEU scores for Arabic^English maximum likelihood translation (ML), MBR decoding using the hybrid decision rule of Equation (5) at 0 < k < 3, and regular linearised lattice MBR (LMBR).",
        "Table 2: Time in seconds required for path posterior n-gram probability calculation and LMBR decoding using sequential method and leftmost or rightmost ) counting transducer implementations.",
        "Arabic ^English machine translation task.",
        "The development set mt0205tune is formed from the odd numbered sentences of the NIST MT02-MT05 testsets; the even numbered sentences form the validation set mt0205test.",
        "Performance on NIST MT08 newswire (mt08nw) and newsgroup (mt08ng) data is also reported.",
        "First-pass translation is performed using HiFST (Iglesias et al., 2009), a hierarchical phrase-based decoder.",
        "Word alignments are generated using MTTK (Deng and Byrne, 2008) over 150M words of parallel text for the constrained NIST MT08 Arabic ^English track.",
        "In decoding, a Shallow-1 grammar with a single level of rule nesting is used and no pruning is performed in generating first-pass lattices (Iglesias et al., 2009).",
        "The first-pass language model is a modified Kneser-Ney (Kneser and Ney, 1995) 4-gram estimated over the English parallel text and an 881M word subset of the GigaWord Third Edition (Graff et al., 2007).",
        "Prior to LMBR, the lattices are rescored with large stupid-backoff 5-gram language models (Brants et al., 2007) estimated over more than 6 billion words of English text.",
        "The n-gram factors 90,..., 64 are set according to Tromble et al.",
        "(2008) using unigram precision p = 0.85 and average recall ratio r = 0.74.",
        "Our translation decoder and MBR procedures are implemented using OpenFst (Allauzen et al., 2007)."
      ]
    },
    {
      "heading": "6. LMBR Speed and Performance",
      "text": [
        "Lattice MBR decoding performance is shown in Table 1.",
        "Compared to the maximum likelihood translation hypotheses (row ML), LMBR gives gains of+0.8 to +1.0 BLEU for newswire data and +0.5 BLEU for newsgroup data (row LMBR).",
        "The other rows of Table 1 show the performance of LMBR decoding using the hybrid decision rule of Equation (5) for 0 < k < 3.",
        "When the conditional expected counts c(u\\£) are used at all orders (i.e. k = 0), the hybrid decoder BLEU scores are considerably lower than even the ML scores.",
        "This poor performance is because there are many un-igrams u for which c(u\\E) is much greater than p(u\\E).",
        "The consensus translation maximising the conditional expected gain is then dominated by unigram matches, significantly degrading LMBR decoding performance.",
        "Table 1 shows that for these lattices the hybrid decision rule is an accurate approximation to Equation (1) only when k > 2 and the exact contribution to the gain function is computed using the path posterior probabilities at orders n = 1 and n = 2.",
        "mt0205tune",
        "mt0205test",
        "mt08nw",
        "mt08ng",
        "ML",
        "54.2",
        "53.8",
        "51.4",
        "36.3",
        "0",
        "52.6",
        "52.3",
        "49.8",
        "34.5",
        "h",
        "1",
        "54.8",
        "54.4",
        "52.2",
        "36.6",
        "2",
        "54.9",
        "54.5",
        "52.4",
        "36.8",
        "3",
        "54.9",
        "54.5",
        "52.4",
        "36.8",
        "LMBR",
        "55.0",
        "54.6",
        "52.4",
        "36.8",
        "mt0205tune",
        "mt0205test",
        "mt08nw",
        "mt08ng",
        "sequential",
        "3160",
        "3306",
        "2090",
        "3791",
        "Posteriors",
        "n",
        "6880",
        "7387",
        "4201",
        "8796",
        "* n",
        "1746",
        "1789",
        "1182",
        "2787",
        "Decoding",
        "sequential",
        "4340 284",
        "4530 319",
        "2225 118",
        "4104 197",
        "sequential",
        "7711",
        "8065",
        "4437",
        "8085",
        "Total",
        "* n",
        "7458",
        "8075",
        "4495",
        "9199",
        "* n",
        "2321",
        "2348",
        "1468",
        "3149",
        "We now analyse the efficiency of lattice MBR decoding using the exact path posterior probabilities of Equation (2) at all orders.",
        "We note that the sequential method and both simultaneous implementations using path counting transducers ^ and yield the same hypotheses (allowing for numerical accuracy); they differ only in speed and memory usage.",
        "Posteriors Efficiency Computation times for the steps in LMBR are given in Table 2.",
        "In calculating path posterior n-gram probabilities p(u\\E), we find that the use of ^ is more than twice as slow as the sequential method.",
        "This is due to the difficulty of counting higher-order n-grams in large lattices.",
        "^ is effective for counting uni-grams, however, since there are far fewer of them.",
        "Using is almost twice as fast as the sequential method.",
        "This speed difference is due to the simple forward algorithm.",
        "We also observe that for higher-order n, the composition En ◦ ^R requires less memory and produces a smaller machine than En ◦ It is easier to count paths by the final occurrence of a symbol than by the first.",
        "Decoding Efficiency Decoding times are significantly faster using Qra than the sequential method; average decoding time is around 0.1 seconds per sentence.",
        "The total time required for lattice MBR is dominated by the calculation of the path posterior n-gram probabilities, and this is a function of the number of n-grams in the lattice \\N\\.",
        "For each sentence in mt0205tune, Figure 3 plots the total LMBR time for the sequential method (marked 'o') and for probabilities computed using (marked '+').",
        "This compares the two techniques on a sentence-by-sentence basis.",
        "As \\N\\ grows, the simultaneous path counting transducer is found to be much more efficient."
      ]
    },
    {
      "heading": "7. Conclusion",
      "text": [
        "We have described an efficient and exact implementation of the linear approximation to LMBR using general WFST operations.",
        "A simple transducer was used to map words to sequences of n-grams in order to simplify the extraction ofhigher-order statistics.",
        "We presented a counting transducer that extracts the statistics required for all n-grams of order n in a single composition and allows path posterior probabilities to be computed efficiently using a modified forward procedure.",
        "We take the view that even approximate search",
        "lattice n-grams",
        "criteria should be implemented exactly where possible, so that it is clear exactly what the system is doing.",
        "For machine translation lattices, conflating the values of p(u\\E) and c(u\\E) for higherorder n-grams might not be a serious problem, but in other scenarios - especially where symbol sequences are repeated multiple times on the same path - it may be a poor approximation.",
        "We note that since much of the time in calculation is spent dealing with e-arcs that are ultimately removed, an optimised composition algorithm that skips over such redundant structure may lead to further improvements in time efficiency."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "This work was supported in part under the GALE program of the Defense Advanced Research Projects Agency, Contract No.",
        "HR001106-C-0022.",
        "o -",
        "sequential simultaneous IfR",
        "Zz",
        "0 \"",
        "z",
        "c",
        "' ° S",
        "o -",
        "- o°c o o o",
        "0°",
        "o",
        "+ + _",
        "-1- -1-",
        "++ +"
      ]
    }
  ]
}
