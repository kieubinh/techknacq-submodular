{
  "info": {
    "authors": [
      "Pucktada Treeratpituk",
      "Pradeep Teregowda",
      "Jian Huang",
      "C. Lee Giles"
    ],
    "book": "Workshop on Semantic Evaluations (SemEval)",
    "id": "acl-S10-1039",
    "title": "SEERLAB: A System for Extracting Keyphrases from Scholarly Documents",
    "url": "https://aclweb.org/anthology/S10-1039",
    "year": 2010
  },
  "references": [
    "acl-W09-2902"
  ],
  "sections": [
    {
      "text": [
        "SEERLAB: A System for Extracting Key phrases from Scholarly",
        "Documents",
        "Pucktada Treeratpituk Pradeep Teregowda Jian Huang C. Lee Giles",
        "Information Sciences and Technology Computer Science and Engineering Pennsylvania State University, University Park, PA, USA",
        "We describe the SEERLAB system that participated in the SemEval 2010's Keyphrase Extraction Task.",
        "SEERLAB utilizes the DBLP corpus for generating a set of candidate keyphrases from a document.",
        "Random Forest, a supervised ensemble classifier, is then used to select the top keyphrases from the candidate set.",
        "SEERLAB achieved a 0.24 F-score in generating the top 15 keyphrases, which places it sixth among 19 participating systems.",
        "Additionally, SEERLAB performed particularly well in generating the top 5 keyphrases with an F-score that ranked third."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Keyphrases are phrases that represent the important topics of a document.",
        "There are two types of keyphrases associated with scholarly publications: author-assigned ones and reader-assigned ones.",
        "In the Keyphrase Extraction Task (Kim et al., 2010), each system receives two set of scientific papers from the ACM digital library; a training set and a testing set.",
        "The author-assigned keyphrases and reader-assigned keyphrases are given for each paper in the training set.",
        "The objective is to produce the keyphrases for each article in the testing set.",
        "This paper is organized as followed.",
        "First, We describe our keyphrase extraction system, SEERLAB.",
        "We then discuss its performance in SemEval 2010.",
        "Lastly, we analyze the effectiveness of each feature used by SEERLAB, and provide a summary of our findings."
      ]
    },
    {
      "heading": "2. System Description",
      "text": [
        "SEERLAB consists of three main components: a section parser, a candidate keyphrase extractor, and a keyphrase ranker.",
        "To generate keyphrases for a paper, the section parser first segments the document into predefined generic section types.",
        "Secondly, the candidate keyphrase extractor generates a list of candidate phrases based on the document content.",
        "Then, the keyphrase ranker ranks each candidate according to the likelihood that it is a keyphrase.",
        "The top candidates are selected as keyphrases of the paper.",
        "The goal of the section parser is to parse each document into the same set of predefined sections.",
        "However, segmenting a scientific article into predefined section types is not trivial.",
        "While scholarly publications generally contains similar sections (such as Abstract and Conclusion), a section's exact header description and the order in which it appears can vary from document to document.",
        "For example, the \"Related Work\" section is sometimes referred to as \"Previous Research\" or \"Previous Work.\"",
        "Also, while the \"Related Work\" section often appears right after the introduction, it could also appear near the end of a paper.",
        "(Nguyen and Kan, 2007) had success in using a maximum entropy (ME) classifier to classify sections into 14 generic section types including those such as Motivation, Acknowledgement, References.",
        "However, their approach requires annotated training data, which is not always available.",
        "Instead, SEERLAB uses regular expressions to parse each document into 6 generic section types: Title, Abstract, Introduction, Related Work, Methodology + Experiments, and Conclusion + Future Work.",
        "We decided to go with the smaller number of section types (only 6), unlike previous work in (Nguyen and Kan, 2007), because we believed that many sections, such as Acknowledgement, are irrelevant to the task.",
        "182",
        "In this section, we describe how SEERLAB derives a set of candidate keyphrases for a given document.",
        "The goal of the candidate extractor is to include as many actual keyphrases in the candidate set as possible, while keeping the number of candidates small.",
        "The performance of the candidate extractor determines the maximum achievable Recall of the whole system.",
        "The more correct candidates extracted at this step, the higher the possible Recall.",
        "But a bigger candidate set potentially could lower Precision.",
        "In our implementation, we decided to ignore the Methodology + Experiments sections to limit the size of candidate sets.",
        "First, SEERLAB extracts a list of bigrams, tri-grams and quadgrams that appear at least 3 times in titles of papers in DBLP, ignoring those that contain stopwords.",
        "Prepositions such as \"of\", \"for\", \"to\" are allowed to be present in the ngrams.",
        "From 2,144,390 titles in DBLP, there are 376,577 of such ngrams.",
        "It then constructs a trie (a prefix-tree) of all ngrams so that it can later perform the longest-prefix matching lookup efficiently.",
        "To generate candidates from a body of text, we start the cursor at the beginning of the text.",
        "The DBLP trie is then used to find the longest-prefix match.",
        "If no match is found, the cursor is moved to the next word in the text.",
        "If a match is found, the matched phrase is extracted and added to the candidate set, while the cursor is moved to the end of the matched phrase.",
        "The process is repeated until the cursor reaches the end of the text.",
        "However, the trie constructed as described above can only produce non-unigram candidates that appear in the DBLP corpus.",
        "For example, it is incapable of generating candidates such as \"preference elicitation problem,\" which does not appear in DBLP, and \"bet,\" which is an unigram.",
        "To remedy such limitations, for each document we also include its top 30 most frequent unigrams, its top 30 non-unigram ngrams and the acronyms found in the document as candidates.",
        "Our method of extracting candidate keyphrases differs from most previous work.",
        "Previous work (Kim and Kan, 2009; Nguyen and Kan, 2007) uses hand-crafted regular expressions for candidate extractions.",
        "Many of these rules also require POS (part of speech) inputs.",
        "In contrast, our method is corpus-driven and requires no additional input from the POS tagger.",
        "Additionally, our approach allows us to effectively include phrases that appear only once in the document as candidates, as long as they appear more than twice in the DBLP data.",
        "We train a supervised Random Forest (RF) classifier to identify keyphrases from a candidate set.",
        "A Random Forest is a collection of decision trees, where its prediction is simply the aggregated votes of each tree.",
        "Thus, for each candidate phrase, the number of votes that it receives is used as its fitness score.",
        "Candidates with the top fitness scores are then chosen as keyphrases.",
        "The detail of the Random Forest algorithm and the features used in the model are given below.",
        "We represent each candidate as a vector of features.",
        "There are the total of 11 features.",
        "N: The length of the keyphrase.",
        "ACRO: A binary feature indicating whether the keyphrase appears as an acronym in the document.",
        "TF(ioc: The number of times that the keyphrase appears in the document.",
        "DF: The document frequency.",
        "This is computed based on the DBLP data.",
        "For document-specific candidates (unigrams and those not found in DBLP), their DFs are set to 1.",
        "TFIDF: The TFIDF weight of the keyphrase, computed using TF<ioc and DF.",
        "^headers'- The number of occurrences that the keyphrase appears in any section headers and subsection headers.",
        "TFsection*'- The number of occurrences that the keyphrase appears in the sectiorii, where sectiorii e {Title, Abstract, Introduction, Related Work, Conclusion}.",
        "These accounted for the total of 5 features.",
        "Since a random forest (RF) is an ensemble classifier combining multiple decision trees (Breiman, 2001), it makes predictions by aggregating votes of each of the trees.",
        "To built a random forest, multiple bootstrap samples are drawn from the original training data, and an unpruned decision tree is built from each bootstrap sample.",
        "At each node in a tree, when selecting a feature to split, the selection is done not on the full feature set but on a",
        "randomly selected subset of features instead.",
        "The 183",
        "Gini index, which measures the class dispersion within a node, is used to determine the best splits.",
        "RFs have been successfully applied to various classification problems with comparable results to other state-of-the-art classifiers such as SVM (Breiman, 2001; Treeratpituk and Giles, 2009).",
        "It achieves high accuracy by keeping a low bias of decision trees while reducing the variance through the introduction of randomness.",
        "One concern in training Random Forests for identifying keyphrases is the data imbalanced problem.",
        "On average, 130 candidates are extracted per document but only 8 out of 130 are correct keyphrases (positive examples).",
        "Since the training data is highly imbalanced, the resulting RF classifier tends to be biased towards the negative class examples.",
        "There are two methods for dealing with imbalanced data in Random Forests (Chen et al., 2004).",
        "The first approach is to incorporate class weights into the algorithm, giving higher weights to the minority classes, so that misclassifying a minority class is penalized more.",
        "The other approach is to adjust the sampling strategy by down-sampling the majority class so that each tree is grown on a more balanced data.",
        "In SEERLAB, we employ the down-sampling strategy to correct the imbalanced data problem (See Section 3)."
      ]
    },
    {
      "heading": "3. Results",
      "text": [
        "In this section, we discuss the performance and the implementation detail of our system in the Keyphrase Extraction Task.",
        "Each model in the experiment is trained on the training data, containing 144 documents, and is evaluated on a separate data set of 100 documents.",
        "The performance of each model is measured using Precision (P), Recall (R) and F-measure (F) for the top 5, 10 and 15 candidates.",
        "A keyphrase is considered correct if and only if it exactly matches one of the answer keys.",
        "No partial credit is given.",
        "Three baseline systems were provided by the organizer: TFIDF, NB and ME.",
        "All baselines use the simple unigrams, bigrams and trigrams as candidates and TFIDF as features.",
        "TFIDF is an unsupervised method that ranks each candidate based on TFIDF scores.",
        "NB and ME are supervised Naive Bayes and Maximum Entropy respectively.",
        "We use the randomForest package in R for our",
        "M ean DecreaseAccu r MeanDecreaseGin",
        "Figure 1 : Variable importance for each feature keyphrase ranker (Liaw and Wiener, 2002).",
        "All RF models are built with the following parameters: the number of trees = 200 and the number of features considered at each split = 3.",
        "The average training and testing time are around 15s and 5s.",
        "Table 1. compares the performance of three different SEERLAB models against the baselines.",
        "RFo is the basic model, where the training data is imbalanced.",
        "For RF\\:\\, the negative examples are down-sampled to make the data balanced.",
        "For RFi-j, the negative examples are down-sampled to where its ratio with the positive examples is 7 to 1.",
        "All three models significantly outperform the baselines.",
        "The RFi-j model has the highest performance, while the RF\\:\\ model performs slightly worse than the basic model -RFo.",
        "This shows that while the sampling strategy helps, overdoing it can hurt the performance.",
        "The optimal sampling ratio (RFi-j) is chosen according to a 10-fold cross-validation on the training data.",
        "For the top 15 candidates, RFi-j's F-score (C) ranks sixth among the 19 participants with a 24.34% F-score approximately 1% lower than the third place team.",
        "We also observed that SEERLAB performs quite well for the top 5 candidates with 39% Precision (C).",
        "Its F-scores at the top 5, 19.84% (C) and 18.19% (R), place SEERLAB third and second respectively among other participants.",
        "Figure 1. shows two variable importance indicators for each feature: mean decrease accuracy (MDA) and mean decrease Gini (MDG).",
        "Both indicators measure each feature's contribution in identifying whether a candidate phrase is a keyphrase.",
        "The MDA of a feature is computed by randomly permuting the value of that feature in the training data and then measuring the decrease",
        "in prediction accuracy.",
        "If the permuted feature is 184",
        "n",
        "tfidf",
        "df",
        ".....o-",
        "df",
        "...0...",
        "tfidf",
        "...0..",
        "tf.doc",
        ".....o - - - -",
        "tf.title",
        "..0...",
        "tf.",
        "intra",
        ".....o----",
        "aero",
        "■ • -o.....",
        "n",
        "■ ■ ■ ■ o.....",
        "tf.doc",
        "0...",
        "tf.conclusion",
        "...Q.",
        "..",
        "tf.",
        "intra",
        "tf.abs",
        "tf.abs",
        "o",
        "tf.",
        "headers",
        "..0...",
        "tf.",
        "related_work",
        "■ o",
        "tf.",
        "related_work",
        "tf.conclusion",
        "o",
        "tf.title",
        "■o--",
        "tf.",
        "headers",
        "3....",
        "aero",
        "o--",
        "I",
        "0.02",
        "1 1 0.06",
        "1 1 1 1 1 1",
        "0 10 25",
        "Table 1 : Performance (%) comparison for the Keyphrase Extraction Task.",
        "R (Reader) indicates that the reader-assigned keyword is used as the gold-standard and C (Combined) means that both author-assigned and reader-assigned keyword sets are used.",
        "a very good predictor, then the prediction accuracy should decrease substantially from the original model.",
        "The MDG of a feature implies that average Gini decreases for the nodes in the forest that use that feature as the splitting criteria.",
        "TFIDF and DF are good indicators of performance according to both MDA and MDG.",
        "Both are very effective when used as splitting criteria, and the prediction accuracy is very sensitive to them.",
        "Surprisingly, the length of the phrase (AO also has high importance.",
        "Also, TFutie and ACRO have high MDA but low MDG.",
        "They have high MDA because if a candidate phrase is an acronym or appears in the title, it is highly likely that it is a keyphrase.",
        "However, most keyphrases are not acronyms and do not appear in titles.",
        "Thus, on average as splitting criteria, they do not decrease Gini index by much, resulting in a low MDG.",
        "Also, TFrdated_wark and TFheaders have lower MDA and MDG than TF of other sections (TFintro, TFabs, and TFconclusion).",
        "This might suggest that the occurrences in the \"Related Work\" section or section headers are not strong indicators of being a keyphrase as the occurrences in the sections \"Introduction,\" \"Abstract\" and \"Conclusion.\""
      ]
    },
    {
      "heading": "4. Conclusion",
      "text": [
        "We have described our SEERLAB system that participated in the Keyphrase Extraction Task.",
        "SEERLAB combines unsupervised corpus-based approach with Random Forests to identify keyphrases.",
        "The experimental results show that our system performs well in the Keyphrase Extraction Task, especially on the top 5 key phrase candidates.",
        "We also show that the down-sampling strategy can be used to enhance our performance.",
        "System",
        "by",
        "top 5 candidates P R F",
        "top 10 candidates P R F",
        "top 15 candidates P R F",
        "TF.IDF",
        "R",
        "C",
        "17.80 7.39 10.44 22.00 7.50 11.19",
        "13.90 11.54 12.61 17.70 12.07 14.35",
        "11.60 14.45 12.87 14.93 15.28 15.10",
        "NB",
        "R",
        "C",
        "16.80 6.98 9.86 21.40 7.30 10.89",
        "13.30 11.05 12.07 17.30 11.80 14.03",
        "11.40 14.20 12.65 14.53 14.87 14.70",
        "ME",
        "R",
        "C",
        "16.80 6.98 9.86 21.40 7.30 10.89",
        "13.30 11.05 12.07 17.30 11.80 14.03",
        "11.40 14.20 12.65 14.53 14.87 14.70",
        "SEERLAB (RFq)",
        "R",
        "C",
        "29.00 12.04 17.02 36.00 12.28 18.31",
        "22.50 18.69 20.42 28.20 19.24 22.87",
        "18.20 22.67 20.19 22.53 23.06 22.79",
        "SEERLAB (RF1:1)",
        "R",
        "C",
        "26.00 10.80 15.26 32.00 10.91 16.27",
        "20.80 17.28 18.88 26.00 17.74 21.09",
        "17.40 21.68 19.31 21.93 22.44 22.18",
        "SEERLAB (RFi:7)",
        "R",
        "C",
        "31.00 12.87 18.19 39.00 13.30 19.84",
        "24.10 20.02 21.87 29.70 20.26 24.09",
        "19.33 24.09 21.45 24.07 24.62 24.34"
      ]
    }
  ]
}
