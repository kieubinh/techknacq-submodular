{
  "info": {
    "authors": [
      "Dominick Ng",
      "James W. D. Constable",
      "Matthew Honnibal",
      "James R. Curran"
    ],
    "book": "Workshop on Semantic Evaluations (SemEval)",
    "id": "acl-S10-1069",
    "title": "SCHWA: PETE Using CCG Dependencies with the C&C Parser",
    "url": "https://aclweb.org/anthology/S10-1069",
    "year": 2010
  },
  "references": [
    "acl-D09-1085",
    "acl-J07-3004",
    "acl-J07-4004",
    "acl-J93-2004",
    "acl-P03-1046",
    "acl-P04-1014",
    "acl-P07-1032",
    "acl-P09-2014",
    "acl-W09-3306"
  ],
  "sections": [
    {
      "text": [
        "schwa: pete using ccg Dependencies with the c&c Parser",
        "Dominick Ng, James W. D. Constable, Matthew Honnibal and James R. Curran",
        "9-lab, School of Information Technologies University of Sydney NSW 2006, Australia {dong7223,jcon6353,mhonn,james}@it.usyd.edu.au",
        "This paper describes the schwa system entered by the University of Sydney in Se-mEval 2010 Task 12 - Parser Evaluation using Textual Entailments (Yuret et al., 2010).",
        "Our system achieved an overall accuracy of 70% in the task evaluation.",
        "We used the c&c parser to build ccg dependency parses of the truth and hypothesis sentences.",
        "We then used partial match heuristics to determine whether the system should predict entailment.",
        "Heuristics were used because the dependencies generated by the parser are construction specific, making full compatibility unlikely.",
        "We also manually annotated the development set with ccg analyses, establishing an upper bound for our entailment system of 87%."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "The SemEval 2010 Parser Evaluation using Textual Entailments (pete) task attempts to address the long-standing problems in parser evaluation caused by the diversity of syntactic formalisms and analyses in use.",
        "The task investigates the feasibility of a minimalist extrinsic evaluation that of detecting textual entailment between a truth sentence and a hypothesis sentence.",
        "It is extrinsic in the sense that it evaluates parsers on a task, rather than a direct comparison of their output against some gold standard.",
        "However, it requires only minimal task-specific logic, and the proposed entailments are designed to be inferrable based on syntactic information alone.",
        "Our system used the c&c parser (Clark and Curran, 2007a), which uses the Combinatory Cat-egorial Grammar formalism (ccg, Steedman, 2000).",
        "We used the CCGbank-style dependency output of the parser (Hockenmaier and Steedman, 2007), which is a directed graph of head-child relations labelled with the head's lexical category and the argument slot filled by the child.",
        "We divided the dependency graphs of the truth and hypothesis sentences into predicates that consisted of a head word and its immediate children.",
        "For instance, the parser's analysis of the sentence Totals include only vehicle sales reported in period might produce predicates like include(Totals, sales), only (include), and reported(sales).",
        "If at least one such predicate matches in the two parses, we predict entailment.",
        "We consider a single predicate match sufficient for entailment because the lexical categories and slots that constitute our dependency labels are often different in the hypothesis sentence due to the generation process used in the task.",
        "The single predicate heuristic gives us an overall accuracy of 70% on the test set.",
        "Our precision and recall over the test set was 68% and 80% respectively giving an F-score of 74%.",
        "To investigate how many of the errors were due to parse failures, and how many were failures of our entailment recognition process, we manually annotated the 66 development truth sentences with gold standard ccg derivations.",
        "This established an upper bound of 87% F-score for our approach.",
        "This upper bound suggests that there is still work to be done before the system allows transparent evaluation of the parser.",
        "However, cross-framework parser evaluation is a difficult problem: previous attempts to evaluate the c&c parser on grammatical relations (Clark and Curran, 2007b) and Penn Treebank-trees (Clark and Curran, 2009) have also produced upper bounds between 80 and 90% F-score.",
        "Our pete system was much easier to produce than either of these previous attempts at cross-framework parser evaluation, suggesting that this may be a promising approach to a difficult problem.",
        "Totals include only vehicle sales reported in period.",
        "Figure 1: An example ccg derivation, showing how the categories assigned to words are combined to form a sentence.",
        "The arrows indicate the direction of application."
      ]
    },
    {
      "heading": "2. Background",
      "text": [
        "Combinatory Categorial Grammar (ccg, Steedman, 2000) is a lexicalised grammar formalism based on combinatory logic.",
        "The grammar is directly encoded in the lexicon in the form of combinatory categories that govern how each word combines with its neighbours.",
        "The parsing process determines the most likely assignment of categories to words, and finds a sequence of combinators that allows them to form a sentence.",
        "A sample ccg derivation for a sentence from the test set is shown in Figure 1.",
        "The category for each word is indicated beneath it.",
        "It can be seen that some categories take other categories as arguments; each argument slot in a category is numbered based on the order of application, from latest to earliest.",
        "For example:",
        "Figure 2 shows how the argument slots are mapped to dependencies.",
        "The first two columns list the predicate words and their categories, while the second two show how each argument slot is filled.",
        "For example, in the first row, only has the category (S\\NP)\\(S\\NP), with argument slot 1 filled by include).",
        "It is these dependencies that form the basis for our predicates in this task.",
        "Recent work has seen the development of high-performance parsers built on the ccg formalism.",
        "Clark and Curran (2007a) demonstrate the use of techniques like adaptive supertagging, parallelisation and a dynamic-programming chart parsing algorithm to implement the c&c parser, a highly efficient ccg parser that performs well against parsers built on different formalisms (Rimell et al., 2009).",
        "We use this parser for the pete task.",
        "The performance of statistical parsers is largely a function of the quality of the corpora they are trained on.",
        "For this task, we used models derived from the CCGbank corpus - a transformation of the Penn Treebank (Marcus et al., 1993) including ccg derivations and dependencies (Hockenmaier, 2003a).",
        "It was created to further ccg research by providing a large corpus of appropriately annotated data, and has been shown to be suitable for the training of high-performance parsers (Hockenmaier, 2003b; Clark and Curran, 2004)."
      ]
    },
    {
      "heading": "3. Method",
      "text": [
        "Our system used the c&c parser to parse the truth and hypothesis sentences.",
        "We took the dependencies generated by the parser and processed these to generate predicates encoding the canonical form of the head word, its required arguments, and their order.",
        "We then attempted to unify the predicates from the hypothesis sentence with the predicates in the truth sentence.",
        "A successful unification of predicates a and b occurs when the head words of a and b are identical and their argument slots are also identical.",
        "If any predicate from the hypothesis sentence unified with a predicate from the truth sentence, our system returned yes, otherwise the system returned no.",
        "We used the 66 sentence development set to tune our approach.",
        "While analysing the hypothesis sentences, we noticed that many examples re-",
        "only",
        "(S\\NP)\\(S\\NP)",
        "1",
        "include",
        "vehicle",
        "N/N",
        "1",
        "sales",
        "in",
        "((S\\NP)\\(S\\NP))/NP",
        "2",
        "period",
        "in",
        "((S\\NP)\\(S\\NP))/NP",
        "1",
        "reported",
        "reported",
        "S\\NP",
        "1",
        "sales",
        "include",
        "(S\\NP)/NP",
        "2",
        "sales",
        "include",
        "(S\\NP)/NP",
        "1",
        "Totals",
        "Table 1 : Final results over the test set placed nouns from the truth sentence with indefinite pronouns such as someone or something (e.g.",
        "Someone bought something).",
        "In most of these cases the indefinite would not be present in the truth sentence at all, so to deal with this we converted indefinite pronouns into wildcard markers that could be matched to any argument.",
        "We also incorporated sensitivity to passive sentences by adjusting the argument numbers of dependents.",
        "In its most naive form our system is heavily biased towards excellent recall but poor precision.",
        "We evaluated a number of heuristics to prune the predicate space and selected those which improved the performance over the development set.",
        "Our final system used the part-of-speech tags generated by the parser to remove predicates headed by determiners, prepositions and adjectives.",
        "We note that even after predicate pruning our system is still likely to return better recall performance than precision, but this discrepancy was masked in part by the nature of the development set: most hypotheses are short and so the potential number of predicates after pruning is likely to be small.",
        "The final predicates generated by the system for the example derivation given in Figure 1 after heuristic pruning are:",
        "only(include) reported(sales) include(totals, sales)"
      ]
    },
    {
      "heading": "4. Results",
      "text": [
        "We report results over the 301 sentence test set in Table 1.",
        "Our overall accuracy was 70%, and performance over yes entailments was roughly 20% higher than accuracy over no entailments.",
        "This bias towards yes entailments is a reflection of our single match heuristic that only required one predicate match before answering yes.",
        "Our system performed nearly 20% better than the baseline system (all YES responses) and placed second overall in the task evaluation.",
        "Table 2 shows our results over the development corpus.",
        "The 17% drop in accuracy and 8% drop in F-score between the development data and the test data suggests that our heuristics may have over-fitted to the limited development data.",
        "More sophisticated heuristics over a larger corpus would be useful for further fine-tuning our system.",
        "Our entailment system's errors could be broadly divided into two classes: those due to incorrect parses, and those due to incorrect comparison of the parses.",
        "To investigate the relative contributions of these two classes of errors, we manually annotated the 66 development sentences with ccg derivations.",
        "This allowed us to evaluate our system using gold standard parses.",
        "Only one annotator was available, so we were unable to calculate inter-annotator agreement scores to examine the quality of our annotations.",
        "The annotation was prepared with the annotation tool used by Honnibal et al.",
        "(2009).",
        "The tool presents the user with a ccg derivation produced by the c&c parser.",
        "The user can then correct the lexical categories, or add bracket constraints to the parser using the algorithm described by Djordjevic and Curran (2006), and reparse the sentence until the derivation desired is produced.",
        "Our results with gold standard dependencies are shown in Table 2.",
        "The accuracy is 87%, establishing a fairly low upper bound for our approach to the task.",
        "Manual inspection of the remaining errors showed that some were due to incorrect parses for the hypothesis sentence, and some were due to entailments which the parser's dependency analyses could not resolve, such as They ate whole steamed grains => The grains were steamed.",
        "The largest source of errors was our matching heuristics, suggesting that our approach to the task must be improved before it can be considered a transparent evaluation of the parser.",
        "System",
        "yes entailment correct incorrect A (%)",
        "no entailment correct incorrect",
        "A(%)",
        "Overall accuracy (%)",
        "F-score",
        "schwa",
        "125",
        "31",
        "80",
        "87",
        "58",
        "60",
        "70",
        "74",
        "median",
        "71",
        "85",
        "46",
        "88",
        "57",
        "61",
        "53",
        "50",
        "baseline",
        "156",
        "0",
        "100",
        "0",
        "145",
        "0",
        "52",
        "68",
        "low",
        "68",
        "88",
        "44",
        "76",
        "69",
        "52",
        "48",
        "46",
        "yes entailment",
        "no entailment",
        "Overall",
        "System",
        "correct incorrect A (%)",
        "correct incorrect A (%)",
        "accuracy (%)",
        "F-score",
        "Gold deps",
        "34 6 85",
        "22 4 90",
        "87",
        "87",
        "Parsed deps",
        "32 8 80",
        "20 6 77",
        "79",
        "82"
      ]
    },
    {
      "heading": "5. Conclusion",
      "text": [
        "We constructed a system to evaluate the c&c parser using textual entailments.",
        "We converted the parser output into a set of predicate structures and used these to establish the presence of entailment.",
        "Our system achieved an overall accuracy of 79% on the development set and 70% over the test set.",
        "The gap between our development and test accuracies suggests our heuristics may have been over-fitted to the development data.",
        "Our investigation using gold-standard dependencies established an upper bound of 87% on the development set for our approach to the task.",
        "While this is not ideal, we note that previous efforts at cross-parser evaluation have shown that it is a difficult problem (Clark and Curran (2007b) and Clark and Curran (2009)).",
        "We conclue that the concept of a minimal extrinsic evaluation put forward in this task is a promising avenue for formalism-independent parser comparison."
      ]
    }
  ]
}
