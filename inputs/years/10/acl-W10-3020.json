{
  "info": {
    "authors": [
      "Nobuyuki Shimizu",
      "Hiroshi Nakagawa"
    ],
    "book": "Proceedings of the Fourteenth Conference on Computational Natural Language Learning",
    "id": "acl-W10-3020",
    "title": "Features for Detecting Hedge Cues",
    "url": "https://aclweb.org/anthology/W10-3020",
    "year": 2010
  },
  "references": [
    "acl-I08-1072",
    "acl-N03-1028",
    "acl-N06-1021",
    "acl-W02-1001",
    "acl-W09-1304"
  ],
  "sections": [
    {
      "text": [
        "Nobuyuki Shimizu Hiroshi Nakagawa",
        "We present a sequential labeling approach to hedge cue detection submitted to the biological portion of task 1 for the CoNLL-2010 shared task.",
        "Our main approach is as follows.",
        "We make use of partial syntactic information together with features obtained from the unlabeled corpus, and convert the task into one of sequential BIO-tagging.",
        "If a cue is found, a sentence is classified as uncertain and certain otherwise.",
        "To examine a large number of feature combinations, we employ a genetic algorithm.",
        "While some features obtained by this method are difficult to interpret, they were shown to improve the performance of the final system."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Research on automatically extracting factual information from biomedical texts has become popular in recent years.",
        "Since these texts are abundant with hypotheses postulated by researchers, one hurdle that an information extraction system must overcome is to be able to determine whether or not the information is part of a hypothesis or a factual statement.",
        "Thus, detecting hedge cues that indicate the uncertainty of the statement is an important subtask of information extraction (IE).",
        "Hedge cues include words such as \"may\", \"might\", \"appear\", \"suggest\", \"putative\" and \"or\".",
        "They also includes phrases such as \".. .raising an intriguing question that...\" As these expressions are sparsely scattered throughout the texts, it is not easy to generalize results of machine learning from a training set to a test set.",
        "Furthermore, simply finding the expressions listed above does not guarantee that a sentence contains a hedge.",
        "Their function as a hedge cue depends on the surrounding context.",
        "The primary objective of the CoNLL-2010 shared task (Farkas et al., 2010) is to detect hedge cues and their scopes as are present in biomedical texts.",
        "In this paper, we focus on the biological portion of task 1, and present a sequential labeling approach to hedge cue detection.",
        "The following summarizes the steps we took to achieve this goal.",
        "Similarly to previous work in hedge cue detection (Morante and Daelemans, 2009), we first convert the task into a sequential labeling task based on the BIO scheme, where each word in a hedge cue is labeled as B-CUE, I-CUE, or O, indicating respectively the labeled word is at the beginning of a cue, inside of a cue, or outside of a hedge cue; this is similar to the tagging scheme from the CoNLL-2001 shared task.",
        "We then prepared features, and fed the training data to a sequential labeling system, a discriminative Markov model much like Conditional Random Fields (CRF), with the difference being that the model parameters are tuned using Bayes Point Machines (BPM), and then compared our model against an equivalent CRF model.",
        "To convert the result of sequential labeling to sentence classification, we simply used the presence of a hedge cue, i.e. if a cue is found, a sentence is classified as uncertain and certain otherwise.",
        "To prepare features, we ran the GENIA tagger to add partial syntactic parse and named entity information.",
        "We also applied Porter's stemmer (Jones and Willet, 1997) to each word in the corpus.",
        "For each stem, we acquired the distribution of surrounding words from the unlabeled corpus, and calculated the similarity between these distributions and the distribution of hedge cues in the training corpus.",
        "Given a stem and its similarities to different hedge cues, we took the maximum similarity and discretized it.",
        "All these features are passed on to a sequential labeling system.",
        "Using these base features, we then evaluated the effects of feature combinations by repeatedly training the system and selecting feature combinations that increased the performance on a heldout set.",
        "To automate this process, we employed a genetic algorithm.",
        "The contribution of this paper is two-fold.",
        "First, we describe our system, outlined above, that we submitted to the CoNLL-2010 shared task in more detail.",
        "Second, we analyze the effects of particular choices we made when building our system, especially the feature combinations and learning methods.",
        "The rest of this paper is organized as follows.",
        "In Section 2, we detail how the task of sequential labeling is formalized in terms of linear classification, and explain the Viterbi algorithm required for prediction.",
        "We next present several algorithms for optimizing the weight vector in a linear classifier in Section 3.",
        "We then detail the complete list of feature templates we used for the task of hedge cue detection in Section 4.",
        "In order to evaluate the effects of feature templates, in Section 5, we remove each feature template and find that several feature templates overfit the training set.",
        "We finally conclude with Section 6."
      ]
    },
    {
      "heading": "2. Sequential Labeling",
      "text": [
        "We discriminatively train a Markov model using Bayes Point Machines (BPM).",
        "We will first explain linear classification, and then apply a Markov assumption to the classification formalism.",
        "Then we will move on to BPM.",
        "Note that we assume all features are binary in this and upcoming sections as it is sufficient for the task at hand.",
        "In the setting of sequential labeling, given the input sequence x = (x1,x2,x3, ...xn), a system is asked to produce the output sequence y = (Vi, V2, V3, ■■■Vn).",
        "Considering that y is a class, sequential labeling is simply a classification with a very large number of classes.",
        "Assuming that the problem is one of linear classification, we may create a binary feature vector ff(x) for an input x and have a weight vector wy of the same dimension for each class y.",
        "We choose a class y that has the highest dot product between the input vector and the weight vector for the class y.",
        "For binary classification, this process is very simple: compare two dot product values.",
        "Learning is therefore reduced to specifying the weight vectors.",
        "To follow the standard notations in sequential labeling, let weight vectors wy be stacked into one large vector w, and let ff(x, y) be a binary feature vector such that wTçf(x, y) is equal to",
        "wj0(x).",
        "Classification is to choose y such that y = argmaxy (wTçf(x, y')).",
        "Unfortunately, a large number ofclasses created out of sequences makes the problem intractable, so the Markov assumption factorizes y into a sequence of labels, such that a label yi is affected only by the label before and after it (Vi-i and yi+1respectively) in the sequence.",
        "Each structure, or label y is now associated with a set of the parts parts (y) such that y can be recomposed from the parts.",
        "In the case of sequential labeling, parts consist of states yi and transitions yi – yi+1 between neighboring labels.",
        "We assume that the feature vector for an entire structure y decomposes into a sum over feature vectors for individual parts as follows: (f(x, y) = E reparts(y) (f(x, r).",
        "Note that we have overloaded the symbol f to apply to either a structure V or its parts r.",
        "The Markov assumption for factoring labels lets us use the Viterbi algorithm (much like a Hidden Markov Model) in order to find"
      ]
    },
    {
      "heading": "3. Optimization",
      "text": [
        "We now turn to the optimization of the weight parameter w. We compare three approaches - Per-ceptron, Bayes Point Machines and Conditional Random Fields, using our c++ library for structured output prediction .",
        "Perceptron is an online update scheme that leaves the weights unchanged when the predicted output matches the target, and changes them when it does not.",
        "The update is:",
        "wfc := wfc - f(xi, y) + f(xi, yi).",
        "Despite its seemingly simple update scheme, per-ceptron is known for its effectiveness and performance (Collins, 2002).",
        "Conditional Random Fields (CRF) is a conditional model where w is the weight for each feature and Zx is a normalization constant for each x.",
        "for structured output prediction.",
        "To fit the weight vector w using the training set {(xi, yi))n=1, we use a standard gradient-descent method to find the weight vector that maximizes the log likelihood En logP(yi|xi) (Sha and Pereira, 2003).",
        "To avoid overfitting, the log likelihood is often penalized with a spherical Gaussian weight prior: En logP(yi|xi) - .",
        "We also evaluated this penalized version, varying the trade-off parameter C.",
        "Bayes Point Machines (BPM) for structured prediction (Corston-Oliver et al., 2006) is an ensemble learning algorithm that attempts to set the weight w to be the Bayes Point which approximates to Bayesian inference for linear classifiers.",
        "Assuming a uniform prior distribution over w, we revise our belief of w after observing the training data and produce a posterior distribution.",
        "We create the final wbpm for classification using a posterior distribution as follows:",
        "where p(w|D) is the posterior distribution of the weights given the data D and Ep(w|D) is the expectation taken with respect to this distribution.",
        "V (D) is the version space, which is the set of weights wi that classify the training data correctly, and | V(D)| is the size of the version space.",
        "In practice, to explore the version space of weights consistent with the training data, BPM trains a few different perceptrons (Collins, 2002) by shuffling the samples.",
        "The approximation of Bayes Point wbpm is the average of these perceptron weights:",
        "The pseudocode of the algorithm is shown in Algorithm 3.1.",
        "We see that the inner loop is simply a perceptron algorithm."
      ]
    },
    {
      "heading": "4. Features",
      "text": [
        "For each sentence x, we have state features, represented by a binary vector f (x, yj ) and transition features, again a binary vector f (x, yj – yj",
        "For transition features, we do not utilize lexical-ized features.",
        "Thus, each dimension of f (x, yj – Algorithm",
        "Randomly shuffle the sequential order of samples {(xi, yi)}n=1wk := ;",
        "for t := 1 to T # Perceptron iterations for i := 1 to n # Iterate shuffled samples",
        "wbpm := wbpm + Kwk;",
        "return (wbpm) Vj' +1 ) is an indicator function that tests a combination of labels, for example, O – B-CUE, B-CUE – I-CUE or I-CUE – O.",
        "For state features ff(x, yj), the indicator function for each dimension tests a combination of yj and lexical features obtained from x = (x1,x2,x3, ...xn).",
        "We now list the base lexical features that were considered for this experiment.",
        "F a token, which is usually a word.",
        "As a part of preprocessing, words in each input sentence are tokenized using the GENIA tagger .",
        "This tokenization coincides with Penn Treebank style tokenization .",
        "We add a subscript to indicate the position.",
        "Fj is exactly the input token xj.",
        "From xj, we also create other lexical features such as Fj , Fj, Fj, and so on.",
        "F the token in lower case, with digits replaced by the symbol #.",
        "F 1 if the letters in the token are all capitalized, 0 otherwise.",
        "F 1 if the token contains a digit, 0 otherwise.",
        "F 1 if the token contains an uppercase letter, 0 otherwise.",
        "F 1 if the token contains a hyphen, 0 otherwise.",
        "F first letter in the token.",
        "F first two letters in the token.",
        "F first three letters in the token.",
        "F last letter in the token.",
        "F last two letters in the token.",
        "F last three letters in the token.",
        "The features F to F are known to be useful for POS tagging.",
        "We postulated that since most frequent hedge cues tend not to be nouns, these features might help identify them.",
        "The following three features are obtained by running the GENIA tagger.",
        "F a part of speech.",
        "F a CoNLL-2000 style shallow parse.",
        "For example, B-NP or I-NP indicates that the token is a part of a base noun phrase, B-VP or I-VP indicates that it is part of a verb phrase.",
        "F named entity, especially a protein name.",
        "F a word stem by Porter's stemmer .",
        "Porter's stemmer removes common morphological and inflectional endings from words in English.",
        "It is often used as part of an information retrieval system.",
        "Upon later inspection, it seems that Porter's stemmer may be too aggressive in stemming words.",
        "The word putative, for example, after being processed by the stemmer, becomes simply put (which is clearly erroneous).",
        "The last nine types of features utilize the unla-beled corpus for the biological portion of shared task 1, provided by the shared task organizers.",
        "For each stem, we acquire a histogram of surrounding words, with a window size of 3, from the unlabeled corpus.",
        "Each histogram is represented as a vector; the similarity between histograms was then computed.",
        "The similarity metric we used is called the Tanimoto coeficient, also called extended/vector-based Jaccard coefficient.",
        "It is based on the dot product of two vectors and reduces to Jaccard coeficient for binary features.",
        "This metric is known to perform quite well for near-synonym discovery (Hagiwara et al., 2008).",
        "Given a stem and its similarities to different hedge cues, we took the maximum similarity and dis-cretized it.",
        "F 1 if similarity is bigger than 0.9, 0 otherwise.",
        "F 1 if similarity is bigger than 0.6, 0 otherwise.",
        "F 1 if similarity is bigger than 0.1, 0 otherwise.",
        "This concludes the base features we considered.",
        "In order to discover combinations of base features, we implemented a genetic algorithm (Goldberg, 1989).",
        "It is an adaptive heuristic search algorithm based on the evolutionary ideas of natural selection and genetics.",
        "After splitting the training set into three partitions, given the irst partition as the training set, the itness is measured by the score of predicting the second partition.",
        "We removed the feature sets that did not score high, and introduced mutations - new feature sets - as replacements.",
        "After several generations, surviving feature sets performed quite well.",
        "To avoid over it-ting, occasionally feature sets were evaluated on the third partition, and we inally chose the feature set according to this partition.",
        "The features of the submitted system are listed in Table 1.",
        "Note that Table 1 shows the dimensions of the feature vector that evaluate to 1 given x and yj.",
        "The actual feature vector is created by instantiating all the combinations in the table using the training set.",
        "Surprisingly, our genetic algorithm removed features F and F, the last two/three letters in a token.",
        "It also removed the POS information F, but kept the sequence of POS tags Fß^F, Fj1, Fj2, Fj3.",
        "The reason for longer sequences is due to our heuristics for mutations.",
        "Occasionally, we allowed the genetic algorithm to insert a longer sequence of feature combinations at once.",
        "One other notable observation is that shallow parses and NEs are removed.",
        "Between the various thresholds from F to F, it only kept F, discovering 0.6 as a similarity threshold.",
        "y.",
        "In order to examine the effects of learning parameters, we conducted experiments on the test data after it was released to the participants of the shared task.",
        "While BPM has two parameters, K and T, we fixed T = 5 and varied K, the number of percep-trons.",
        "As increasing the number of perceptrons results in more thorough exploration of the version space V(D), we expect that the performance of the classifier would improve as K increases.",
        "Table 2 shows how the number of perceptrons affects the performance.",
        "TP stands for True Positive, FP for False Positive, and FN for False Negative.",
        "The evaluation metrics were precision P (the number of true positives divided by the total number of elements labeled as belonging to the positive class) recall R (the number of true positives divided by the total number of elements that actually belong to the positive class) and their harmonic mean, the F1 score (F1 = 2PR/(P + R)).",
        "All figures in this paper measure hedge cue detection performance at the sentence classification level, not word/phrase classification level.",
        "From the results, once the number of perceptrons hits 20, the performance stabilizes and does not seem to show any improvement.",
        "Next, in order to examine whether or not we have overfitted to the training/heldout set, we removed each row of Table 1 and reevaluated the performance of the system.",
        "Reevaluation was conducted on the labeled test set released by the shared task organizers after our system's output had been initially evaluated.",
        "Thus, these figures are comparable to the sentence classification results reported in Farkas et al.",
        "(2010).",
        "Table 3 shows the effect of removing (1), (2), or both (1) and (2), showing that they overfit the training data.",
        "Removing any other rows in Table 1 resulted in decreased classification performance.",
        "While there are other large combination features such as ones involving F' F' F' Fand F, we find that they do help improving the performance of the classifier.",
        "Since these features seem unintuitive to the authors, it is likely that they would not have been found without the genetic algorithm we employed.",
        "Error analysis shows that inclusion of features involving F affects prediction of \"believe\", \"possible\", \"putative\", \"assumed\", \"seemed\", \"if\", \"presumably\", \"perhaps\", \"suggestion\", \"suppose\" and \"intriguing\".",
        "However, as this feature template is unfolded into a large number of features, we were unable to obtain further linguistic insights.",
        "In the following experiments, we used the currently best performing features, that is, all features except (1) in Table 1, and trained the classifiers using the formalism of Perceptron and Conditional Random Fields besides Bayes Point Machines as we have been using.",
        "The results in Table 4 shows that BPM performs better than Percep-tron or Conditional Random Fields.",
        "As the training time for BPM is better than CRF, our choice of BPM helped us to run the genetic algorithm repeatedly as well.",
        "After several runs of empirical tuning and tweaking, the hyper-parameters of the algorithms were set as follows.",
        "Perceptron was stopped at 40 iterations (T = 40).",
        "For BPM, we fixed T = 5 and K = 20.",
        "For Conditional Random Fields, we compared the penalized version with C = 1 and the unpenalized version (C = 0).",
        "The results in Table 4 is that of the unpenalized version, as it performed better than the penalized version.",
        "K",
        "TP",
        "FP",
        "FN",
        "P (%)",
        "Fi (%)",
        "10",
        "641",
        "80",
        "149",
        "88.90",
        "81.14",
        "84.84",
        "20",
        "644",
        "79",
        "146",
        "89.07",
        "81.52",
        "85.13",
        "30",
        "644",
        "80",
        "146",
        "88.95",
        "81.52",
        "85.07",
        "40",
        "645",
        "81",
        "145",
        "88.84",
        "81.65",
        "85.09",
        "50",
        "645",
        "80",
        "145",
        "88.97",
        "81.65",
        "85.15",
        "Perceptron"
      ]
    },
    {
      "heading": "6. Conclusion",
      "text": [
        "To tackle the hedge cue detection problem posed by the CoNLL-2010 shared task, we utilized a classifier for sequential labeling following previous work (Morante and Daelemans, 2009).",
        "An essential part of this task is to discover the features that allow us to predict unseen hedge expressions.",
        "As hedge cue detection is semantic rather than syntactic in nature, useful features such as word stems tend to be specific to each word and hard to generalize.",
        "However, by using a genetic algorithm to examine a large number of feature combinations, we were able to find many features with a wide context window of up to 5 words.",
        "While some features are found to overfit, our analysis shows that a number of these features are successfully applied to the test data yielding good generalized performance.",
        "Furthermore, we compared different optimization schemes for structured output prediction using our c++ library, freely available for download and use.",
        "We find that Bayes Point Machines have a good trade-off between performance and training speed, justifying our repeated usage of BPM in the genetic algorithm for feature selection."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "The authors would like to thank the reviewers for their comments.",
        "This research was supported by the Information Technology Center through their grant to the first author.",
        "We would also like to thank Mr. Ono, Mr. Yonetsuji and Mr. Yamada for their contributions to the library.",
        "TP FP FN P (%)",
        "F1 (%)",
        "671 128 119 83.98",
        "84.94",
        "84.46",
        "Conditional Random Fields",
        "TP FP FN P (%)",
        "643 78 147 89.18",
        "81.39",
        "85.11",
        "Bayes Point Machines",
        "TP FP FN P (%)",
        "647 79 143 89.12",
        "81.90",
        "85.36"
      ]
    }
  ]
}
