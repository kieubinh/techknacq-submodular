{
  "info": {
    "authors": [
      "Markus Saers",
      "Joakim Nivre",
      "Dekai Wu"
    ],
    "book": "Proceedings of the 4th Workshop on Syntax and Structure in Statistical Translation",
    "id": "acl-W10-3802",
    "title": "A Systematic Comparison between Inversion Transduction Grammar and Linear Transduction Grammar for Word Alignment",
    "url": "https://aclweb.org/anthology/W10-3802",
    "year": 2010
  },
  "references": [
    "acl-C96-2141",
    "acl-J03-1002",
    "acl-J09-4009",
    "acl-J93-2003",
    "acl-J97-3002",
    "acl-N10-1050",
    "acl-P02-1040",
    "acl-P03-1021",
    "acl-P07-2045",
    "acl-P08-1012",
    "acl-P09-1104",
    "acl-W09-2304",
    "acl-W09-3804"
  ],
  "sections": [
    {
      "text": [
        "Markus Saers and Joakim Nivre Dekai Wu",
        "HKUST",
        "of Linguistics & Philology Human Language Technology Center",
        "Uppsala University Dept.",
        "of Computer Science & Engineering",
        "Hong Kong Univ.",
        "of Science & Technology first.last@lingfil.uu.se dekai@cs.ust.hk",
        "We present two contributions to grammar driven translation.",
        "First, since both Inversion Transduction Grammar and Linear Inversion Transduction Grammars have been shown to produce better alignments then the standard word alignment tool, we investigate how the trade-off between speed and end-to-end translation quality extends to the choice of grammar formalism.",
        "Second, we prove that Linear Transduction Grammars (ltgs) generate the same transduc-tions as Linear Inversion Transduction Grammars, and present a scheme for arriving at ltgs by bilingualizing Linear Grammars.",
        "We also present a method for obtaining Inversion Transduction Grammars from Linear (Inversion) Transduction Grammars, which can speed up grammar induction from parallel corpora dramatically."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "In this paper we introduce Linear Transduction Grammars (ltgs), which are the bilingual case of Linear Grammars (lgs).",
        "We also show that ltgs are equal to Linear Inversion Transduction Grammars (Saers et al., 2010).",
        "To be able to induce transduction grammars directly from parallel corpora an approximate search for parses is needed.",
        "The trade-off between speed and end-to-end translation quality is investigated and compared to Inversion Transduction Grammars (Wu, 1997) and the standard tool for word alignment,",
        "giza++ (Brown et al., 1993; Vogel et al., 1996; Och and Ney, 2003).",
        "A heuristic for converting stochastic bracketing ltgs into stochastic bracketing itgs is presented, and fitted into the speed-quality trade-off.",
        "In section 3 we give an overview of transduction grammars, introduce ltgs and show that they are equal to litgs.",
        "In section 4 we give a short description of the rational for the trans-duction grammar pruning used.",
        "In section 5 we describe a way of seeding a stochastic bracketing itg with the rules and probabilities of a stochastic bracketing ltg.",
        "Section 6 describes the setup, and results are given in section 7.",
        "Finally, some conclusions are offered in section 8"
      ]
    },
    {
      "heading": "2. Background",
      "text": [
        "Any form of automatic translation that relies on generalizations of observed translations needs to align these translations on a sub-sentential level.",
        "The standard way of doing this is by aligning words, which works well for languages that use white space separators between words.",
        "The standard method is a combination of the family of ibm-models (Brown et al., 1993) and Hidden Markov Models (Vogel et al., 1996).",
        "These methods all arrive at a function (A) from language 1 (F) to language 2 (E).",
        "By running the process in both directions, two functions can be estimated and then combined to form an alignment.",
        "The simplest of these combinations are intersection and union, but usually, the intersection is heuristically extended.",
        "Transduction grammars on the other hand, impose a shared structure on the sentence pairs, thus forcing a consistent alignment in both directions.",
        "This method has proved successful in the settings it has been",
        "Haghighi et al., 2009; Saers et al., 2009; Saers et al., 2010).",
        "Most efforts focus on cutting down time complexity so that larger data sets than toy-examples can be processed."
      ]
    },
    {
      "heading": "3. Transduction Grammars",
      "text": [
        "Transduction grammars were first introduced in Lewis and Stearns (1968), and further developed in Aho and Ullman (1972).",
        "The original notation called for regular CFG-rules in language F with rephrased E productions, either in curly brackets, or comma separated.",
        "The bilingual version of cfgs is called Syntax-Directed Transduction Grammars (SDTGs).",
        "To differentiate identical nonterminal symbols, indices were used (the bag of nonterminals for the two productions are equal by definition).",
        "The semantics of the rules is that one nonterminal rewrites into a bag ofnonterminals thatis distributed independently in the two languages, and interspersed with any number of terminal symbols in the respective languages.",
        "As with cfgs, the terminal symbols can be factored out into preterminals with the added twist that they are shared between the two languages, since preter-minals are formally nonterminals.",
        "The above rule can thus be rephrased as",
        "In this way, rules producing nonterminals and rules producing terminals can be separated.",
        "Since only nonterminals are allowed to move, their movement can be represented as the original sequence of nonterminals and a permutation vector as follows:",
        "To keep the reordering as monotone as possible, the terminals a and x can be produced separately, but doing so eliminates any possibility ofparam-eterizing their lexical relationship.",
        "Instead, the individual terminals are pair up with the empty string (e).",
        "Lexical rules involving the empty string are referred to as singletons.",
        "Whenever a preterminal is used to pair up two terminal symbols, we refer to that pair of terminals as a biterminal, which will be written as e/f.",
        "Any SDTG can be rephrased to contain permuted nonterminal productions and biterminal productions only, and we will call this the normal form of sdtgs.",
        "Note that it is not possible to produce a two-normal form for SDTGs, as there are some rules that are not binarizable important point to make, since efficient parsing for CFGs is based on either restricting parsing to only handle binary grammars (Cocke, 1969; Kasami, 1965; Younger, 1967), or rely on on-the-fly binarization (Earley, 1970).",
        "When translating with a grammar, parsing only has to be done in F, which is binarizable (since it is a cfg), and can therefor be computed in polynomial time (O(n)).",
        "Once there is a parse tree for F, the corresponding tree for E can be easily constructed.",
        "When inducing a grammar from examples, however, biparsing (finding an analysis that is consistent across a sentence pair) is needed.",
        "The time complexity for biparsing with SDTGs is O(n2n+), which is clearly intractable.",
        "Inversion Transduction Grammars or iTGs (Wu, 1997) are transduction grammars that have a two-normal form, thus guaranteeing binariz-ability.",
        "Defining the rank of a rule as the number of nonterminals in the production, and the rank of a grammar as the highest ranking rule in the rule set, ITGs are a) any SDTG of rank two, b) any SDTG of rank three or c) any SDTG where no rule has a permutation vector other than identity permutation or inversion permutation.",
        "It follows from this definition that ITGs have a two-normal form, which is usually expressed as SDTG rules, with brackets around the production to distinguish the different kinds of rules from each other.",
        "By guaranteeing binarizability, biparsing time complexity becomes O(n ).",
        "There is an even more restricted version of sdtgs called Simple Transduction Grammar (STG), where no permutation at all is allowed, which can also biparse a sentence pair in O(n) time.",
        "A Linear Transduction Grammar (ltg) is a bilingual version of a Linear Grammar (lg).",
        "Definition 1.",
        "An lg in normal form is a tuple",
        "Where N is a finite set of nonterminal symbols, S is a finite set of terminal symbols, R is a finite set of rules and S G N is the designated start symbol.",
        "The rule set is constrained so that",
        "Where e is the empty string.",
        "To bilingualize a linear grammar, we will take the same approach as taken when a finite-state automaton is bilingualized into a finite-state transducer.",
        "That is: to replace all terminal symbols with biterminal symbols.",
        "Definition 2.",
        "An ltg in normal form is a tuple",
        "Where N is a finite set of nonterminal symbols, S is a finite set of terminal symbols in language E, A is a finite set of terminal symbols in language F, R is a finite set of linear transduction rules and S G N is the designated start symbol.",
        "The rule set is constrained so that",
        "Where * = S U {e} x A U {e} and e is the empty string.",
        "Graphically, we will represent ltg rules as production rules with biterminals:",
        "Like stgs, ltgs do not allow any reordering, and are monotone, but because they are linear, this has no impact on expressiveness, as we shall see later.",
        "Linear Inversion Transduction Grammars (litgs) were introduced in Saers et al.",
        "(2010), and represent itgs that are allowed to have at most one nonterminal symbol in each production.",
        "These are attractive because they can bi-parse a sentence pair in O(n) time, which can be further reduced to linear time by severely pruning the search space.",
        "This makes them tractable for large parallel corpora, and a viable way to induce transduction grammars from large parallel corpora.",
        "Definition 3.",
        "An litg in normal form is a tuple",
        "Where N is a finite set of nonterminal symbols, S is a finite set of terminal symbols from language E, A is a finite set of terminal symbols from language F, R is a set of rules and S G N is the designated start symbol.",
        "The rule set is constrained so that",
        "Where [] represents identity permutation and () represents inversion permutation, * = S U{e}x A U { e } is a possibly empty biterminal, and e is the empty string.",
        "Graphically, a rule will be represented as an itg rule:",
        "As with itgs, productions with only biterminals will be represented without their permutation, as any such rule can be trivially rewritten into inverted or identity form.",
        "Definition 4.",
        "An e-free LITG is an LITG where no rule may rewrite one nonterminal into another nonterminal only.",
        "Formally, the rule set is constrained so that",
        "The LITG presented in Saers et al.",
        "(2010) is thus an e-free LITG in normal form, since it has the following thirteen rule forms (of which 8 are meaningful, 1 is only used to terminate generation and 4 are redundant):",
        "All the singleton rules can be expressed either in straight or inverted form, but the result of applying the two rules are the same.",
        "Lemma 1.",
        "Any LITG in normal form can be expressed as an LT G in normal form.",
        "Proof.",
        "The above litg can be rewritten in ltg form as follows:",
        "To account for all litgs in normal form, the following two non-e-free rules also needs to be accounted for:",
        "Proof.",
        "An LTG in normal form has two rules, which can be rewritten in LITG form, either as straight or inverted rules as follows Theorem 1.",
        "LTGs in normal form and LlTGs in normal form express the same class oftransduc-tions.",
        "Proof.",
        "Follows from lemmas 1 and 2.",
        "By theorem 1 everything concerning LTGs is also applicable to litgs, and an ltg can be expressed in LITG form when convenient, and vice versa."
      ]
    },
    {
      "heading": "4. Pruning the Alignment Space",
      "text": [
        "The alignment space for a transduction grammar is the combinations of the parse spaces of the sentence pair.",
        "Let e be the E sentence, and f be the F sentence.",
        "The parse spaces would be O(|e|) and O(|f |) respectively, and the combination of these spaces would be O(|e| x|f | ), or O(n) if we assume n to be proportional to the sentence lengths.",
        "In the case of ltgs, this space is searched linearly, giving time complexity O(n), and in the case of itgs there is branching within both parse spaces, adding an order of magnitude each, giving a total time complexity of O(n).",
        "There is, in other words, a tight connection between the alignment space and the time complexity of the biparsing algorithm.",
        "Furthermore, most of this alignment space is clearly useless.",
        "Consider the case where the entire F sentence is deleted, and the entire E sentence is simply inserted.",
        "Although it is possible that it is allowed by the grammar, it should have a negligible probability (since it is clearly a translation strategy that generalize poorly), and could, for all practical reasons, be ignored.",
        "Table 1 : Size of training data.",
        "Saers et al.",
        "(2009) present a scheme for pruning away most of the points in the alignment space.",
        "Parse items are binned according to coverage (the total number of words covered), and each bin is restricted to carry a maximum of b items.",
        "Any items that do not fit in the bins are excluded from further analysis.",
        "To decide which items to keep, inside probability is used.",
        "This pruning scheme effectively linearizes the alignment space, as is will be of size O(nb), regardless of what type grammar is used.",
        "An itg can thus be biparsed in cubic time, and an ltg in linear time."
      ]
    },
    {
      "heading": "5. Seeding an IT G with an LTG",
      "text": [
        "Since ltgs are a subclass of itgs, it would be possible to convert an ltg to a itg.",
        "This could save a lot of time, since ltgs are much faster to induce from corpora than itgs.",
        "Converting a bltg to a bitg is fairly straight forward.",
        "Consider the bltg rule",
        "To convert it to bitg in two-normal form, the biterminal has to be factored out.",
        "Replacing the biterminal with a temporary symbol X, and introducing a rule that rewrites this temporary symbol to the replaced biterminal produces two rules:",
        "This is no longer a bracketing grammar since there are two nonterminals, but equating X to X restores this property.",
        "An analogous procedure can be applied in the case where the nonterminal comes before the biterminal, as well as for the inverting cases.",
        "When converting stochastic ltgs, the probability mass of the sltg rule has to be distributed to two sitg rules.",
        "The fact that the ltg rule X – e/e lacks correspondence in itgs has to be weighted in as well.",
        "In this paper we took the maximum entropy approach and distributed the probability mass uniformly.",
        "This means defining the probability mass function p for the new sbitg from the probability mass function p of the original sbltg such that:"
      ]
    },
    {
      "heading": "6. Setup",
      "text": [
        "The aim of this paper is to compare the alignments from sbitg and sbltg to those from giza++, and to study the impact of pruning on efficiency and translation quality.",
        "Initial grammars will be estimated by counting cooccurrences in the training corpus, after which expectation-maximization (em) will be used to refine the initial estimate.",
        "At the last iteration, the one-best parse of each sentence will be considered as the word alignment of that sentence.",
        "In order to keep the experiments comparable, relatively small corpora will be used.",
        "If larger corpora were used, it would not be possible to get any results for unpruned sbitgs because of the prohibitive time complexity.",
        "The Europarl corpus (Koehn, 2005) was used as a starting point, and then all sentence pairs where one of the sentences were longer than 10 tokens were filtered",
        "Language pair",
        "Bisentences",
        "Tokens",
        "Spanish-English",
        "108,073",
        "1,466,132",
        "French-English",
        "95,990",
        "1,340,718",
        "German-English",
        "115,323",
        "1,602,781",
        "French-English",
        "German-English",
        "Spanish-Eng I is h",
        "Figure 1: Trade-offs between translation quality (as measured by bleu) and biparsing time (in seconds plotted on a logarithmic scale) for sbltgs, sbitgs and the combination.",
        "out (see table 1).",
        "The giza++ system was built according to the instructions for creating a baseline system for the Fifth Workshop on Statistical Machine Translation (wmt'10), but the above corpora were used instead of those supplied by the workshop.",
        "This includes word alignment with giza++, a 5-gram language model built with srilm (Stolcke, 2002) and parameter tuning with mert (Och, 2003).",
        "To carry out the actual translations, Moses (Koehn et al., 2007) was used.",
        "The sbitg and sbltg systems were built in exactly the same way, except that the alignments from giza++ were replaced by those from the respective grammars.",
        "In addition to trying out exhaustive biparsing for sbitgs and sbltgs on three different translation tasks, several different levels of pruning were tried (1, 10, 25, 50, 75 and 100).",
        "We also used the grammar induced from sbltgs with a beam size of 25 to seed sbitgs (see section 5), which were then run for an additional iteration of em, also with beam size 25.",
        "All systems are evaluated with bleu (Pap-ineni et al., 2002) and nist (Doddington, 2002)."
      ]
    },
    {
      "heading": "7. Results",
      "text": [
        "The results for the three different translation tasks are presented in Tables 2, 3 and 4.",
        "It is interesting to note that the trend they portray is quite similar.",
        "When the beam is very narrow, giza++ is better, but already at beam size 10, both transduction grammars are superior.",
        "Consistent with Saers et al.",
        "(2009), sbitg has a sharp rise in quality going from beam size 1 to 10, and then a gentle slope up to beam size 25, after which it levels out.",
        "sbltg, on the other hand start out at a respectable level, and goes up a gentle slope from beam size 1 to 10, after which is level out.",
        "This is an interesting observation, as it suggests that sbltg reaches its optimum with a lower beam size (although that optimum is lower than that of sbitg).",
        "The trade-off between quality and time can now be extended beyond beam size to include grammar choice.",
        "In Figure 1, run times are plotted against bleu scores to illustrate this trade-off.",
        "It is clear that sbltgs are indeed much faster than sbitgs, the only exception is when sbitgs are run with b = 1, but then the bleu score is so low that is is not worth considering.",
        "Beam size",
        "System",
        "1",
        "10",
        "25",
        "50",
        "75",
        "100",
        "oo",
        "bleu",
        "sbitg",
        "0.1234",
        "0.2608",
        "0.2655",
        "0.2653",
        "0.2661",
        "0.2671",
        "0.2663",
        "sbltg",
        "0.2574",
        "0.2645",
        "0.2631",
        "0.2624",
        "0.2625",
        "0.2633",
        "0.2628",
        "giza++",
        "0.2597",
        "0.2597",
        "0.2597",
        "0.2597",
        "0.2597",
        "0.2597",
        "0.2597",
        "nist",
        "sbitg",
        "3.9705",
        "6.6439",
        "6.7312",
        "6.7101",
        "6.7329",
        "6.7445",
        "6.6793",
        "sbltg",
        "6.6023",
        "6.6800",
        "6.6657",
        "6.6637",
        "6.6714",
        "6.6863",
        "6.6765",
        "giza++",
        "6.6464",
        "6.6464",
        "6.6464",
        "6.6464",
        "6.6464",
        "6.6464",
        "6.6464",
        "Training times",
        "sbitg",
        "03:10",
        "17:00",
        "38:00",
        "1:20:00",
        "2:00:00",
        "2:40:00",
        "3:20:00",
        "sbltg",
        "35",
        "1:49",
        "3:40",
        "7:33",
        "9:44",
        "12:13",
        "11:59",
        "The time may seem inconsistent between b = 100 and b = oo for sbltg, but the extra time for the tighter beam is because of beam management, which the exhaustive search doesn't bother with.",
        "In table 5 we compare the pure approaches to one where an ltg was trained during 10 iterations of em and then used to seed (see sec-",
        "Beam size",
        "System",
        "1",
        "10",
        "25",
        "50",
        "75",
        "100",
        "oo",
        "bleu",
        "sbitg",
        "0.1268",
        "0.2632",
        "0.2654",
        "0.2669",
        "0.2668",
        "0.2655",
        "0.2663",
        "sbltg",
        "0.2600",
        "0.2638",
        "0.2651",
        "0.2668",
        "0.2672",
        "0.2662",
        "0.2649",
        "giza++",
        "0.2603",
        "0.2603",
        "0.2603",
        "0.2603",
        "0.2603",
        "0.2603",
        "0.2603",
        "nist",
        "sbitg",
        "4.0849",
        "6.7136",
        "6.7913",
        "6.8065",
        "6.8068",
        "6.8088",
        "6.8151",
        "sbltg",
        "6.6814",
        "6.7608",
        "6.7656",
        "6.7992",
        "6.8020",
        "6.7925",
        "6.7784",
        "giza++",
        "6.6907",
        "6.6907",
        "6.6907",
        "6.6907",
        "6.6907",
        "6.6907",
        "6.6907",
        "Training times",
        "sbitg",
        "03:25",
        "17:00",
        "42:00",
        "1:25:00",
        "2:10:00",
        "2:45:00",
        "3:10:00",
        "sbltg",
        "31",
        "1:41",
        "3:25",
        "7:06",
        "9:35",
        "13:56",
        "10:52",
        "Beam size",
        "System",
        "1",
        "10",
        "25",
        "50",
        "75",
        "100",
        "oo",
        "bleu",
        "sbitg",
        "0.0926",
        "0.2050",
        "0.2091",
        "0.2090",
        "0.2091",
        "0.2094",
        "0.2113",
        "sbltg",
        "0.2015",
        "0.2067",
        "0.2066",
        "0.2073",
        "0.2080",
        "0.2066",
        "0.2088",
        "giza++",
        "0.2059",
        "0.2059",
        "0.2059",
        "0.2059",
        "0.2059",
        "0.2059",
        "0.2059",
        "nist",
        "sbitg",
        "3.4297",
        "5.8743",
        "5.9292",
        "5.8947",
        "5.8955",
        "5.9086",
        "5.9380",
        "sbltg",
        "5.7799",
        "5.8819",
        "5.8882",
        "5.8963",
        "5.9252",
        "5.8757",
        "5.9311",
        "giza++",
        "5.8668",
        "5.8668",
        "5.8668",
        "5.8668",
        "5.8668",
        "5.8668",
        "5.8668",
        "Training times",
        "sbitg",
        "03:20",
        "17:00",
        "41:00",
        "1:25:00",
        "2:10:00",
        "2:45:00",
        "3:40:00",
        "sbltg",
        "38",
        "1:58",
        "4:52",
        "8:08",
        "11:42",
        "16:05",
        "13:32",
        "Table 5: Results for seeding an sbitg with an sbltg (Both) compared to the pure approach.",
        "Total time refers to 10 iterations of em training for sbitg and sbltg respectively, and 10 iterations of sbltg and one iteration of sbitg training for the combined system.",
        "tion 5) an sbitg, which was then trained for one iteration of em.",
        "Although the differences are fairly small, German-English and Spanish-English seem to reach the level of sbitg, whereas French-English is actually hurt.",
        "The big difference is in time, since the combined system needs about a fifth of the time the sbitg-based system needs.",
        "This phenomenon needs to be more thoroughly examined.",
        "It is also worth noting that giza++ was beaten by an aligner that used less than 20 minutes (less than 2 minutes per iteration and at most 10 iterations) to align the corpus."
      ]
    },
    {
      "heading": "8. Conclusions",
      "text": [
        "In this paper we have introduced the bilingual version of linear grammar: Linear Transduction Grammars, and found that they generate the same class of transductions as Linear Inversion Transduction Grammars.",
        "We have also compared Stochastic Bracketing versions of itgs and ltgs to giza++ on three word alignment tasks.",
        "The efficiency issues with transduction grammars have been addressed by pruning, and the conclusion is that there is a trade-off between run time and translation quality.",
        "A part of the trade-off is choosing which grammar framework to use, as ltgs are faster but not as good as itgs.",
        "It also seems possible to take a short-cut in this trade-off by starting out with an ltg and converting it to an itg.",
        "We have also showed that it is possible to beat the translation quality of giza++ with a quite fast transduction grammar."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "This work was funded by the Swedish National Graduate School of Language Technology (gslt), the Defense Advanced Research Projects Agency (darpa) under gale Contracts No.",
        "HR0011-06-C-0022 andNo.",
        "HR0011-06-C-0023, and the Hong Kong Research Grants Council (rgc) under research grants GRF621008, DAG03/04.EG09, RGC6256/00E, and RGC6083/99E.",
        "Any opinions, findings and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views ofthe Defense Advanced Research Projects Agency.",
        "The computations were performed on uppmax resources under project p2007020.",
        "Translation task",
        "System",
        "bleu",
        "nist",
        "Total time",
        "Spanish-English",
        "sbltg",
        "0.2631",
        "6.6657",
        "36:40",
        "sbitg",
        "0.2655",
        "6.7312",
        "6:20:00",
        "Both",
        "0.2660",
        "6.7124",
        "1:14:40",
        "French-English",
        "sbltg",
        "0.2651",
        "6.7656",
        "34:10",
        "sbitg",
        "0.2654",
        "6.7913",
        "7:00:00",
        "Both",
        "0.2625",
        "6.7609",
        "1:16:10",
        "German-English",
        "sbltg",
        "0.2066",
        "5.8882",
        "48:52",
        "sbitg",
        "0.2091",
        "5.9292",
        "6:50:00",
        "Both",
        "0.2095",
        "5.9224",
        "1:29:40"
      ]
    }
  ]
}
