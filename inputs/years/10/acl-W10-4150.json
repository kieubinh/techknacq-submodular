{
  "info": {
    "authors": [
      "Wenzhi Xu",
      "Chaobo Sun",
      "Caixia Yuan"
    ],
    "book": "Proceedings of the Joint Conference on Chinese Language Processing",
    "id": "acl-W10-4150",
    "title": "A Chinese LPCFG Parser with Hybrid Character Information",
    "url": "https://aclweb.org/anthology/W10-4150",
    "year": 2010
  },
  "references": [
    "acl-A00-2018",
    "acl-E09-1100",
    "acl-J96-1002",
    "acl-J98-4004",
    "acl-P03-1054",
    "acl-P03-1056",
    "acl-P05-1022",
    "acl-P06-1054",
    "acl-P06-1055",
    "acl-P08-1067",
    "acl-W00-1201",
    "acl-W03-1025"
  ],
  "sections": [
    {
      "text": [
        "Wenzhi Xu, Chaobo Sun and Caixia Yuan",
        "{ earl808, sunchaobo}@gmail.com yuancx@bupt.edu.cn",
        "We present a new probabilistic model based on the lexical PCFG model, which can easily utilize the Chinese character information to solve the lexical information sparseness in lexical PCFG model.",
        "We discuss in particular some important features that can improve the parsing performance, and describe the strategy of modifying original label structure to reduce the label ambiguities.",
        "Final experiment demonstrates that the character information and label modification improve the parsing performance."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Parsing is an important and fundamental task in natural language processing.",
        "The challenge of Chinese parser has been the focus of attention in recent years, and many different kinds of Chinese parsing models are investigated.",
        "(Bikel, 2000) adopts Head-Driven model to parse Chinese.",
        "(Levy, 2003) analyzes the difficulties of Chinese parsing through comparing the differences between Chinese and English.",
        "(Wang, 2006) utilizes shift-reduce approach, dramatically improved the decoding speed of parsing.",
        "All these research adopted the same models which are also used in English parser - the models based on the words.",
        "However, there is a big difference between English and Chinese: the expressing unit in English is word, while character is the smallest unit in Chinese.",
        "Due to difficulties of word segmentation, especially for different segmenting criteria, many researchers explored parsing Chinese based on characters.",
        "The parser of (Luo, 2003) received sentence as input and conducted word segmentation and syntactic parsing at the same time, but they did not utilize the character information in generating subtree; (Zhao, 2009)'s dependency parsing tree totally abandoned the word concept, so the dependency relations are the relations between characters.",
        "We combine both word and character information to gain better performance of parsing.",
        "Although the criteria of segmentation are difficult to be unified, different criteria conflict only within the phrases which have little influence on the structure between phrases.",
        "So we still use word as our basic unit of parsing.",
        "Although word has been proved to be effective in head-driven parser (Collins,1999), the data of word dependence is very sparse.",
        "While it is worthy to note that words with similar concept always share the same characters in Chinese.",
        "For instance, \"f4^ ^(scientist)\", \"jjj; jfe^JlC(historian)\", etc., share the same character \"JiC(expert)\", since they belong to the same concept \"expert in a certain field\".",
        "So the problem of word sparseness can be solved by combining the character information to some extent.",
        "Throughout this paper, we use TCT Treebank (Zhou, 2004) as experimental data.",
        "TCT mainly consists of binary trees, with a few of multi-branch and single-branch trees.",
        "Thus, we first transfer all trees to binary trees.",
        "Then we use Lexical-PCFG model to exploit the word and character information, and Maximum Entropy Model to calculate the probability of induced trees as (Charinak, 2000).",
        "Finally we use CKY-based decoder.",
        "In the following section, we will introduce how to utilize character information in our parsing model and the other features in detail.",
        "Section 3 gives experiment results and analysis, which show improvement of our parsing approach.",
        "Section 4 presents the conclusion and future work."
      ]
    },
    {
      "heading": "2. Lexical PCFG model",
      "text": [
        "Starting from the Lexical-PCFG model (Model 2 in Collins, 1999), we propose a new generative process which can conveniently exploit the character information and other features.",
        "Assume P is the label of parent, H is the head child of the rule, and L1,Ln and R1,Rn is the left and right modifiers of H. Then the rule of Lexical-PCFG (LPCFG) can be written as:",
        "where (hw,ht) represents the head word and head tag of head child, (1w1, It 1),(Iwn, Itn) and (rwl, rtl),(rwn, rtn) are the head words and head tags of left and right modifiers, and parent node P's head word and tag are the same as that of H.",
        "As mentioned above, our trees are all binary trees.",
        "In this case, the LPCFG can be written as:",
        "Formula 2 and 3 represent that the head child is the left or right child respectively.",
        "The probability of the rule is conditioned on the head words and tags of head and its modified children, which is specified as:",
        "To calculate these probabilities, we rewrite Equation 4 and 5 by three factors in 6 and 7 using the chain rule.",
        "Pr(P, R, H\\hw, ht, rw, rt) = (7) Prd(P - DIR\\hw,ht,rw,rt) * Prh (H\\P,hw,ht) *Prm(R - DIR\\P, H, hw,ht).",
        "in which, DIR=LEFT/RIGHT.",
        "DIR in P-DIR is used to discriminate different positions of head child, DIR in L-DIR and R-DIR are used to represent different positions of modifiers.",
        "The calculation processes of Equation 6 and 7 can be interpreted by following generative process.",
        "Firstly, the head words and tags of children generate the parent and the head position (the first probability in Equation 6 and 7).",
        "We define this probability as the word dependency probability Prd: if two words (or characters in words) always appear together in the training data, this probability will be large (< 1); if two words (or characters in words) do not have any dependence in the training data, this probability will be approximately equal to \\, where \\ Y \\ is the predicted number of the Prd.",
        "The second probability generates the head child label (defined as the head child probability Prh), we hold that the head word and tag of modifier do not provide information to determine the head child label, so we omit them.",
        "The third one produces the modifier label, which is defined as the modifier probability Prm, and evaluates the dependency relation between modifier and the head child.",
        "We also omit the influence of the head word and tag of modifier.",
        "For example, assume there is a tree as shown in Figure 1.",
        "For the rule \"vp - v np\", head child of parent vp and np are the left child v and right child n respectively, so \"disorganize)\" and \"^r JlC(expert)\" are the head word of vp and np.",
        "Thus the LPCFG rule is \"vp(£ii/4,v) – v(£ii/4,v) np(^r J|C,n)\".",
        "The probability can be written as: Prd(vp-LEFT \\ ÉL|R,v,^rJ|C,n) * Prh(v\\vpSR èP\\,v) * Prm(np-RIGHT \\ vp,v, ÜL|R,v).",
        "We use Maximum Entropy (ME) Model to compute probabilities of candidate trees.",
        "ME model estimate parameters that would maximize the entropy over distributions, meanwhile satisfy certain constraints.",
        "These constraints will force the model to reflect characteristic of training data.",
        "With the feature function, Maximum Entropy can exploit kinds of features flexibly, some of which are very important to improve the performance of tasks at hand.",
        "ME model has been applied successfully in many tasks, such as parser (Charniak, 2000; Luo, 2003), POS tagging (Ratnaparkhi,1996), etc.",
        "In our experiment, we use Maxent toolkit de-velopped by Zhang (Zhang, 2004), which uses the LBFGS algorithm for parameter estimation.",
        "Details of the model and toolkit can be seen in (Berger, 1996; Zhang, 2004).",
        "Our features consist of four parts: basic features, character features, context features and overlapping features of character and context.",
        "Basic features are traditional LPCFG features, including head word, head tag and the label.",
        "We extract the first and last characters of a word as the Character features, of course for a single character word the first and last character are the same.",
        "Context features are defined as the previous and following POS tags of the current subtree, and these features utilize the information outside of the subtree very well without increasing the complexity of parsing decoder.",
        "Overlapping features are the combinations of character features and context features.",
        "Take Chinese sentence \"§t ii ^/n É/p 4k",
        "£P/n £l|R/v W^/b #|C/n £lg/v ^^/v (Committee is composed of experts organized by the Ministry of Agriculture)\" for example, the corresponding rule is \"vp(ÜL|R,v) – v(ÜL|R,v) np(^f J|C,n)\", the feature template of the example sentence is shown in Table 1.",
        "When applying the character information, it is worthwhile to note that character is always combined with the POS tag of the word since the sense of single character varies as word's POS tag changes.",
        "For example, the sense of \"ft(love)\" in verb \"ft ^(care and protect)\" and noun \"ft fs(love)\" is different.",
        "Of course the sense discussed here is reflected in the dependency of words: \"ft^(care and protect)\" can be followed by some nouns which are objects, while \"ft fs(love)\" can not.",
        "For the multi-branch tree, (Collins,1999) calculates the probability of the left or right modifier with a feature which represent whether there are modifiers between current modifier and the head child (distance feature).",
        "But in the situation of binary tree, it is obvious that current modifier is unlikely to follow other modifiers.",
        "Since the representation of binary tree conforms to the X-bar theory of Chomsky, we can modify the head child label to get this non-local information in binary tree.",
        "For instance, a multi-branche tree rule \"vp1 – pp d vp2\" corresponding to these two binary tree rules: \"vp3 – pp vp4\" and \"vp4 – d vp5\" (the index numbers of the vb here stand for different vp).",
        "So when we calculate the probability of pp with the multi-branch situations, d lies between pp and vp2.",
        "While in binary tree situation, we cannot catch this information between pp and vp4.",
        "However, we can modify vp4 to vp-LEFT, which means there is a modifier at the left child of vp4, then we get the similar effect in (Collins, 1999).",
        "We call this as the head position labeling.",
        "(Klein, 2003) improves the performance of parser via splitting the POS tag in corpus.",
        "We split the non-terminal label using the same approaches (assuming the POS tag is terminal label).",
        "The need of label splitting is that the corpus does not sufficiently consider different situations and treat them",
        "Prd (vp-LEFT) Prh (v) Prm (np-RIGHT)",
        "Symbol Explanation frc lrc the first and last characters of the head word of the right child pt at previous and following POS tag of current subtree, number indicates the position flc llc the first and last characters of the head word of the left child fhc lhc the first and last characters of the head word",
        "as the same label which results in ambiguity.",
        "Furthermore, in our experiment, the corpus that we adopt is binary tree.",
        "Though the rule set in binary tree is closed, it brings stronger independent assumption (Jonson,1998).",
        "Thus splitting the label can make the node label represent more information from descendants.",
        "Just like the intuition of head position labeling, this is also one method to utilize the non-local information.",
        "We mainly consider these modifying as follows.",
        "First of all, we split the label vp.",
        "There are three kinds of verb phrases: the first one is that there is modifier ahead (such as advp); the second phrase consists of an object; while the third one has the form of two verbs or verb plus an auxiliary word.",
        "The formal two situations can not follow any object any more (some double-object verb phrase may be continued to contain object, but their POS label is different with common verb), the vp in last situation can be followed by object (there maybe actually no object).",
        "If we do not discriminate these situations, it will be easy to result in dividing the object into two objects during parsing test, just as shown in Figure 2.",
        "However, if we modify vp in the third situation into vb, then this difference can be discriminated well.",
        "We take a simple statistics as an example to illustrate the sense.",
        "Assume our object is np, rule \"vp – vp np\" appears for 5,284 times in corpus before modifying, while it present only 166 times after modifying.",
        "Figure 2: Parsing Result Example: (a) is a correct tree, (b) is a wrong one, while the probability may be not small enough, (c) is also wrong, but the probability is very small due to the symbol vb.",
        "Secondly, we also split the np tag.",
        "We notice that a noun phrase, which consists of non-noun (phrase) modifier (such as ADJP, PP) and a noun (phrase), is always the final noun phrase but rarely part of another noun phrase.",
        "So we transform the np, which has the non-noun (phrase) modifier, to nm.",
        "From the statistics of corpus, we find rule \"np – np n\" occurs for 4,502 times, while \"np – nm n\" only appears 826 times.",
        "basic",
        "lw rw",
        "p",
        "vp",
        "ph",
        "vp v",
        "feature",
        "lw lt rw rt",
        "p hw",
        "vp",
        "p h hw",
        "vp vUX",
        "p hw ht",
        "vp li^Rv",
        "p h hw ht",
        "vp v UXv",
        "p ht",
        "vp v",
        "p h ht",
        "vp v v",
        "char.",
        "lw frc rt",
        "p fhc ht",
        "vp liv",
        "p h fhc ht",
        "vp v liv",
        "feature",
        "other combinations",
        "flc lt frc rt",
        "other combinations",
        "p lhc ht",
        "vp ÎRv",
        "p h lhc ht",
        "vp v éXv",
        "context",
        "lw rw pt1 at1",
        "ppt1",
        "vp n",
        "p h pt1",
        "vp v n",
        "feature",
        "lw lt rw rt pt1 at1",
        "p pt1 pt2",
        "vp n p",
        "p h pt1 pt2",
        "vp v n p",
        "p at1",
        "vp v",
        "p h at1",
        "vp v v",
        "p at1 at2",
        "vp v v",
        "p h at1 at2",
        "vp v v v",
        "p pt1 at1",
        "vp n v",
        "p h pt1 at1",
        "vp v n v",
        "p hw pt1 at1",
        "vp UXv n",
        "p h hw pt1 at1",
        "vp vHRv n",
        "overlap",
        "lw frc rt pt1 at1",
        "l@JK^n n v",
        "p fhc ht pt1 at1",
        "vp lüv n v",
        "p h fhc ht pt1 at1",
        "vp v lüv n v",
        "feature",
        "other combinations flc lt frc rt pt1 at1 other combinations",
        "läv n v",
        "p lhc ht pt1 at1",
        "vp éXv n v",
        "p h lhc ht pt1 at1",
        "vp v éXv n v",
        "Finally, we change the head position of preposition phrase.",
        "The head position of preposition phrases in corpus mostly is the phrase behind the preposition, but we found the grammar of preposition phrase is much related to the preposition.",
        "Take the preposition \"yX(by)\" and \"Xt(to)\" as example, these two prepositions occur for 755 and 1,300 times respectively.",
        "In our corpus, 98.7% of preposition phrases with W(by)\" are the modifiers of verb phrases, while only 57.2% of phrases with \"Xt(to)\" appear as the modifiers of verb phrases, and the remaining 42.8% are the modifiers of noun phrases."
      ]
    },
    {
      "heading": "3. Experiment Result and Analysis",
      "text": [
        "Our experiments are conducted on the TCT corpus, which is used as the standard data of the CIPS-SIGHAN Parser 2010 bakeoff.",
        "We omit the sentences with length 1 during training and testing.",
        "Performance on the test corpus is evaluated with the standard measures from (SIGHAN REPORT, 2010).",
        "We submit two results for the parsing bakeoff: one is single model we described in Section 2, another is reranking model, which is an attempt to apply a perceptron algorithm to rerank the 50-best result produced by the ME model.",
        "Table 2 shows the result of our parser compared with the top one in this bakeoff.",
        "Since the parser we built is strictly dependent on the POS tags, the precision of POS tagging has a harsh effect on the overall parsing performance.",
        "The performance of the rerank model is lightly lower than that of the single model.",
        "The most likely reason is that the features we count on are far from enough, and the informative features proved to be useful in (Charniak and Johnson, 2003) are not yet included in our discriminative ranker.",
        "Besides, the rank model we used is a simple perceptron learner, more delicated model, such as ME model used in (Charniak and Johnson,",
        "tRule, RightBranch, Rule, Heads, WProj described in (Char-niak and Johnson, 2003).",
        "2003), might improve the result.",
        "In order to make clear how different features effect the parser performance, we conducted experiments on the TCT data provided by CIPS-ParEval-2009 for Chinese parser bakeoff , since the sentences in CIPSParEval-2009 are given with head words and gold-standard POS tags.",
        "The results of our parser are given in Table 3.",
        "From Table 3 we can see that character features bring the improvement of F score for 1.75 compared with the basic features (line 2 vs line 3), and for 0.8 after adding the context features (line 4 vs line 6).",
        "These results show that character features can improve the model with basic features very well.",
        "After applying the context features, character features can still bring improvement, which states that character features can solve the ambiguities that can not be solved by the context features.",
        "One likely reason why character information is helpful is that the character can partly represent the meaning of word and can partly resolve the sparseness problem of word dependence as been observed in the work of (Kang, 2005).",
        "Kang calculated the statistics for 50,000 double characters words and divided the methods of constructing word into 8 types according to the relations of meaning between word and characters:",
        "A and B stand for the meaning of the two characters which are used to construct the word.",
        "C is a totally new meaning and D represents an additional meaning.",
        "The expression after the first \"=\" is the meaning of the word, and the symbol \"+\" indicates the melding of meaning.",
        "For example, A+B=A+D indicates that the word retains the meaning of character A, and adds new meaning D. The distribution of each type in the dataset is shown in Table 4.",
        "From Table 4 we can see that type 4, i.e., there are no relation between characters and word, occupies only 8.02%.",
        "This data proves that the word inherits the meaning from the characters which are used to construct the word.",
        "However, the relations are really complicated.",
        "For example, some words only inherit the meaning of formal characters and others of the last characters.",
        "This might be the reason why character information does not have very obvious effect as expected.",
        "In our parsing model, context features are really helpful to the parsing accuracy.",
        "Different with the decision method in (Rantnaparkhi, 1999) and which all can utilize the context of current subtree very well (not only the POS tag), the CYK decoding algorithm restricts our context features.",
        "However, we can conveniently exploit the POS tags around the current subtree without increasing the complexity of decoding and thus improve the performance.",
        "Commonly, each subtree has only one head word.",
        "However, we notice that the two head words of two coordinate children are equivalent, as illustrated in Figure 3.",
        "We assume that the parent node of these two children is A and the two head word are all the head words of A.",
        "When A is the child of the parent node B, all the head words in A can be dependent with the other head words of another child C. When A is still the head child of B, the head words of B are also the same as A.",
        "Then we can extract more word dependence data.",
        "For example, A have two head words \"SÄ(construct)\" and \";m#(complete)\", and \"MM S(rule)\" is the head word of C, then we consider that \"lÉAE(construct)\" and \";m#(complete)\" are all dependent with \"MS(rule)\".",
        "Meanwhile, A is also the head child of B, and the head words of B are also \"lÉAE(construct)\" and \";m#(complete)\".",
        "During the decoding, we choose the most probable dependence as the dependence probability of B.",
        "From the result, we can see that this strategy yields 0.17 improvements in the F score.",
        "Label splitting can also improve the performance.",
        "However, modifying the labels need much linguistic knowledge and manual work.",
        "(Petrov, 2006) proposed an automated splitting and merging method.",
        "As an attempt, we tested the effectiveness of it in our parser empirically.",
        "When tested on the TCT data provided by CIPS-ParsEval-2009 for Chinese parser, bakeoff the label spitting improve the F1 measure from 0.864 to 0.869."
      ]
    },
    {
      "heading": "4. Conclusion and Future Work",
      "text": [
        "This paper presents a new lexical PCFG model, which can synthetically exploit the word and character information.",
        "The results of experiment prove the effectiveness of character information.",
        "\"B+C\"-P",
        "\"B+C\"-R",
        "\"B+C\"-F1",
        "\"B+C+H\"-P",
        "\"B+C+H\"-R",
        "\"B+C+H\"-F1",
        "POS-P",
        "Top one",
        "85.42",
        "85.35",
        "85.39",
        "83.69",
        "83.63",
        "83.66",
        "93.96",
        "Single",
        "74.86",
        "76.05",
        "75.45",
        "71.06",
        "72.20",
        "71.63",
        "87.00",
        "Rerank",
        "74.48",
        "75.64",
        "75.05",
        "70.72",
        "71.81",
        "71.26",
        "87.00",
        "Also our model can utilize the context features and some non-local features which can dramatically improve the performance.",
        "In future work, we need improve the decoding algorithm to exploit more complex features.",
        "As the parser we build is greatly dependent on the preprocessing result of word segmentation, POS tagging and head labeling, a critical direction of future work is to do word-segmentation, POS tagging, head detection and parsing in a unified framework.",
        "Besides, as for the K-best rerank-ing, we should take into account more informative features and more powerful reranking model.",
        "Acknowledgment",
        "This research has been partially supported by the National Science Foundation of China (NO.",
        "NSFC90920006).",
        "We also thank Xiaojie Wang, Huixing Jiang, Jiashen Sun and Bichuan Zhang for useful discussion of this work."
      ]
    }
  ]
}
