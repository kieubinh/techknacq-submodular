{
  "info": {
    "authors": [
      "Jiajun Zhang",
      "Feifei Zhai",
      "Chengqing Zong"
    ],
    "book": "EMNLP",
    "id": "acl-D11-1019",
    "title": "Augmenting String-to-Tree Translation Models with Fuzzy Use of Source-side Syntax",
    "url": "https://aclweb.org/anthology/D11-1019",
    "year": 2011
  },
  "references": [
    "acl-D10-1014",
    "acl-D10-1043",
    "acl-D10-1063",
    "acl-J07-2003",
    "acl-N04-1035",
    "acl-N06-1033",
    "acl-N09-1025",
    "acl-P03-1021",
    "acl-P05-1033",
    "acl-P05-1034",
    "acl-P05-1067",
    "acl-P06-1055",
    "acl-P06-1077",
    "acl-P06-1121",
    "acl-P07-1019",
    "acl-P07-2045",
    "acl-P08-1023",
    "acl-P08-1066",
    "acl-P08-1114",
    "acl-P09-1020",
    "acl-P09-1063",
    "acl-P10-1076",
    "acl-P10-1145",
    "acl-P10-1146",
    "acl-W04-3250",
    "acl-W06-1606",
    "acl-W06-1628",
    "acl-W06-3119",
    "acl-W06-3601",
    "acl-W09-0424"
  ],
  "sections": [
    {
      "text": [
        "Due to its explicit modeling of the grammaticality of the output via target-side syntax, the string-to-tree model has been shown to be one of the most successful syntax-based translation models.",
        "However, a major limitation of this model is that it does not utilize any useful syntactic information on the source side.",
        "In this paper, we analyze the difficulties of incorporating source syntax in a string-to-tree model.",
        "We then propose a new way to use the source syntax in a fuzzy manner, both in source syntactic annotation and in rule matching.",
        "We further explore three algorithms in rule matching: 0-1 matching, likelihood matching, and deep similarity matching.",
        "Our method not only guarantees grammatical output with an explicit target tree, but also enables the system to choose the proper translation rules via fuzzy use of the source syntax.",
        "Our extensive experiments have shown significant improvements over the state-of-the-art string-to-tree system."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "In recent years, statistical translation models based upon linguistic syntax have shown promising progress in improving translation quality.",
        "It appears that encoding syntactic annotations on either side or both sides in translation rules can increase the expressiveness of rules and can produce more accurate translations with improved reordering.",
        "One of the most successful syntax-based models is the string-to-tree model (Galley et al., 2006; Marcu et al., 2006; Shen et al., 2008; Chiang et al., 2009).",
        "Since it explicitly models the grammaticality of the output via target-side syntax, the string-to-tree model (Xiao et al., 2010) significantly outperforms both the state-of-the-art phrase-based system Moses (Koehn et al., 2007) and the formal syntax-based system Hiero (Chiang, 2007).",
        "However, there is a major limitation in the string-to-tree model: it does not utilize any useful source-side syntactic information, and thus to some extent lacks the ability to distinguish good translation rules from bad ones.",
        "The source syntax is well-known to be helpful in improving translation accuracy, as shown especially by tree-to-string systems (Quirk et al., 2005; Liu et al., 2006; Huang et al., 2006; Mi et al., systems are simple and efficient, but they also have a major limitation: they cannot guarantee the grammaticality of the translation output because they lack target-side syntactic constraints.",
        "Thus a promising solution is to combine the advantages of the tree-to-string and string-to-tree approaches.",
        "A natural idea is the tree-to-tree model (Ding and Palmer, 2005; Cowan et al., 2006; Liu et al., 2009).",
        "However, as discussed by Chiang (2010), while tree-to-tree translation is indeed promising in theory, in practice it usually ends up over-constrained.",
        "Alternatively, Mi and Liu (2010) proposed to enhance the tree-to-string model with target dependency structures (as a language model).",
        "In this paper, we explore in the other direction: based on the strong string-to-tree model which builds an explicit target syntactic tree during decoding rather than apply only a syntactic language model, we aim to find a useful way to incorporate the source-side syntax.",
        "First, we give a motivating example to show the importance of the source syntax for a string-to-tree model.",
        "Then we discuss the difficulties of integrating the source syntax into the string-to-tree model.",
        "Finally, we propose our solutions.",
        "Figure 1 depicts a standard process that transforms a Chinese string into an English tree using several string-to-tree translation rules.",
        "The tree with solid lines is produced by the baseline string-to-tree system.",
        "Although the yield is grammatical, the translation is not correct since the system mistakenly applies rule r2, thus translating the Chinese preposition (h é ) in the example sentence into the English conjunction and.",
        "As a result, the Chinese prepositional phrase '^P Sffi ÉiLiR 1*3 ' (\"with terrorist networks\") is wrongly translated as a part of the relevant noun phrase (\"[Hussein] and terrorists networks\").",
        "Why does this happen?",
        "We find that r2 occurs 103316 times in our training data, while r3 occurs only 1021 times.",
        "Thus, without source syntactic clues, the Chinese word ^P (h é ) is converted into the conjunction and in most cases.",
        "In general, this conversion is correct when the word ^P(hé) is used as a conjunction.",
        "But ^P(hé) is a preposition in the source sentence.",
        "If we are given this source syntactic clue, rule r3 will be preferred.",
        "This example motivates us to provide a moderate amount of source-side syntactic information so as to obtain the correct English tree with dotted lines (as our proposed system does).",
        "A natural question may arise that is it easy to incorporate source syntax in the string-to-tree model?",
        "To the best of our knowledge, no one has studied this approach before.",
        "In fact, it is not a trivial question if we look into the string-to-tree model.",
        "We find that the difficulties lie in at least three problems: 1) For a string-to-tree rule such as r6 in figure 1, how should we syntactically annotate its source string?",
        "2) Given the source-annotated string-to-tree rules, how should we match these rules according to the test source tree during decoding?",
        "3) How should we binarize the source-annotated string-to-tree rules for efficient decoding?",
        "For the first problem, one may require the source side of a string-to-tree rule to be a constituent.",
        "However, such excessive constraints will exclude many good string-to-tree rules whose source strings are not constituents.",
        "Inspired by Chiang (2010), we adopt a fuzzy way to label every source string with the complex syntactic categories of SAMT (Zollmann and Venugopal, 2006).",
        "This method leads to a one-to-one correspondence between the new rules and the string-to-tree rules.",
        "We will detail our fuzzy labeling method in Section 2.",
        "For the second problem, it appears simple and intuitive to match rules by requiring a rule's source syntactic category to be the same as the category of the test string.",
        "However, this hard constraint will greatly narrow the search space during decoding.",
        "Continuing to pursue the fuzzy methodology, we adopt a fuzzy matching procedure to enable matching of all the rules whose source strings match the test string, and then determine the degree of matching between the test source tree and each rule.",
        "We will discuss three fuzzy matching algorithms, from simple to complex, in Section 3.",
        "The third question is a technical problem, and we will give our solution in Section 4.",
        "Our method not only guarantees the grammaticality of the output via the target tree structure, but also enables the system to choose appropriate translation rules during decoding through source syntactic fuzzy labeling and fuzzy matching.",
        "The main contributions of this paper are as follows:",
        "1) We propose a fuzzy method for both source syntax annotation and rule matching for augmenting string-to-tree models.",
        "2) We design and investigate three fuzzy rule matching algorithms: 0-1 matching, likelihood matching, and deep similarity matching.",
        "We hope that this paper will demonstrate how to effectively incorporate both source and target syntax into a translation model with promising results."
      ]
    },
    {
      "heading": "2. Rule Extraction",
      "text": [
        "Since we annotate the source side of each string-to-tree rule with source parse tree information in a fuzzy way, we will henceforward denote the source-syntax-decorated string-to-tree rule as a fuzzy-tree to exact-tree rule.",
        "We first briefly review issues of string-to-tree rule extraction; then we discuss how to augment the string-to-tree rules to yield fuzzy-tree to exact-tree rules.",
        "Figure 1: Two alternative derivations for a sample string-to-tree translation.",
        "The rules used are listed on the right.",
        "The target yield of the tree with solid lines is Hussein and terrorist networks established relations.",
        "The target yield of the tree with dotted lines is Hussein established relations with terrorist networks.",
        "Galley et al.",
        "(2004) proposed the GHKM algorithm for extracting (minimal) string-to-tree translation rules from a triple f et, a), where f is the source-language sentence, et is a target-language parse tree whose yield e is the translation off and a is the set of word alignments between e and f. The basic idea of GHKM is to obtain the set of minimally-sized translation rules which can explain the mappings between source string and target parse tree.",
        "The minimal string-to-tree rules are extracted in three steps: (1) frontier set computation; (2) fragmentation; and (3) extraction.",
        "The frontier set (FS) is the set of potential points at which to cut the graph G constructed by the triple (f, et, a) into fragments.",
        "A node satisfying the word alignment is a frontier.",
        "Bold italic nodes in the English parse tree in Figure 2 are all frontiers.",
        "Given the frontier set, a well-formed fragmentation of G is generated by restricting each fragment to take only nodes in FS as the root and leaf nodes.",
        "With fragmentation completed, the rules are extracted through a depth-first traversal of et : for each frontier being visited, a rule is extracted.",
        "These extracted rules are called minimal rules (Galley et al., 2004).",
        "For example, rules ra ~ ri in Figure 2 are part of the total of 13 minimal rules.",
        "To improve the rule coverage, SPMT models can be employed to obtain phrasal rules (Marcu et at., 2006).",
        "In addition, the minimal rules which share the adjacent tree fragments can be connected together to form composed rules (Galley et al., 2006).",
        "In Figure 2, rj is a rule composed by combining rc and rg.",
        "Our fuzzy-tree to exact-tree rule extraction works on word-aligned tree-to-tree data (Figure 2 illustrates a Chinese-English tree pair).",
        "Basically, the extraction algorithm includes two parts:",
        "(1) String-to-tree rule extraction (without considering the source parse tree);",
        "(2) Decoration of the source side of the string-to-tree rules with syntactic annotations.",
        "We use the same algorithm introduced in the previous section for extracting the base string-to-tree rules.",
        "The source-side syntactic decoration is much more complicated.",
        "The simplest way to decorate, as mentioned in the Introduction, is to annotate the source-side of a string-to-tree rule with the syntactic tag that exactly covers the source string.",
        "This is what the exact tree-to-tree procedure does (Liu et al., 2009).",
        "However, many useful string-to-tree rules will become invalid if we impose such a tight restriction.",
        "For example, in Figure 2, the English phrase discuss ... them is a VP, but its Chinese counterpart is not a constituent.",
        "Thus we will miss the rule rh although it is a useful reordering rule.",
        "According to the analysis of our training data, the rules with rigid source-side syntactic constraints account for only about 74.5% of the base string-to-tree rules.",
        "In this paper, we desire more general applicability.",
        "String-to-Tree rules:",
        "discuss VB",
        "I I with them",
        "rd: MSI ^NP(them) re: iiîè ->VB(discuss)",
        "Figure 2: A sample Chinese-English tree pair for rule extraction.",
        "The bold italic nodes in the target English tree are frontiers.",
        "Note that string-to-tree rules are extracted without considering source-side syntax (upper-right).",
        "The new fuzzy-tree to exact-tree rules are extracted with both-side parse trees (bottom-right).",
        "Inspired by (Zollmann and Venugopal, 2006; Chiang, 2010), we resort to SAMT-style syntactic categories in the style of categorial grammar (Bar-Hillel, 1953).",
        "The annotation of the source side of string-to-tree rules is processed in three steps: (1) If the source-side string corresponds to a syntactic category C in the source parse tree, we label the source string with C. (2) Otherwise, we check if there exists an extended category of the forms C1*C2, C1/C2 or C2\\Ci, indicating respectively that the source string spans two adjacent syntactic categories, a partial syntactic category C missing a C2 on the right, or a partial C missing a C2 on the left.",
        "(3) If the second step fails, we check if there is an extended category of the forms C1*C2*C3 or C1..C2, showing that the source string spans three adjacent syntactic categories or a partial category with C1 and C2 on each side.",
        "In the worst case, C1..C2 can denote every source string, thus all of the decorations in our training data can be explained within the above three steps.",
        "Using the SAMT-style grammar, each source string can be associated with a syntactic category.",
        "Thus our fuzzy-tree to exact-tree extraction does not lose any rules as compared with string-to-tree extraction.",
        "For example, rule ro in Figure 2 uses the product category PP * VP on the source side.",
        "A problem may arise: How should we handle the situation where several rules are observed which only differ in their source-side syntactic categories?",
        "For example, besides the rule rm in Figure 2, we encountered rules like *{CC} – IN(with) in the training data.",
        "Which source tag should we retain?",
        "We do not make a partial choice in the rule extraction phase.",
        "Instead, we simply make a union of the relevant rules and retain the respective tag counts.",
        "Applying this strategy, the rule takes the form of *{P :6, CC :4}-> IN (with), indicating that the source-side preposition tag appears six times while the conjunction occurs four times.",
        "Note that the final rule format used in translation depends on the specific fuzzy rule matching algorithm adopted."
      ]
    },
    {
      "heading": "3. Fuzzy Rule Matching Algorithms",
      "text": [
        "The extracted rules will ultimately be applied to derive translations during decoding.",
        "One way to apply the fuzzy-tree to exact-tree rules is to narrow the rule search space.",
        "Given a test source sentence with its parse tree, we can according to this strategy choose only the rules whose source syntax matches the test source tree.",
        "However, this restriction will rule out many potentially correct rules.",
        "In this study, we keep the rule search space identical to that of the string-to-tree setting, and postpone the use of source-side syntax until the derivation stage.",
        "During derivation, a fuzzy matching algorithm will be adopted to compute a score to measure the compatibility between the rule and the test source syntax.",
        "The translation model will learn to distinguish good rules from bad ones via the compatibility scores.",
        "In this section, three fuzzy matching algorithms, from simple to complex, are investigated in order.",
        "0-1 matching is a straightforward approach that rewards rules whose source syntactic category exactly matches the syntactic category of the test string and punishes mismatches.",
        "It has mainly been employed in hierarchical phrase-based models for integrating source or both-side syntax (Marton and Resnik, 2008; Chiang et al., 2009; Chiang, 2010).",
        "Since it is verified to be very effective in hierarchical models, we borrow this idea in our source-syntax-augmented string-to-tree translation.",
        "In 0-1 matching, the rule's source side must contain only one syntactic category, but a rule may have been decorated with more than one syntactic category on the source side.",
        "Thus we have to choose the most reliable category and discard the others.",
        "Here, we select the one with the highest frequency.",
        "For example, the tag P in the rule *{P :6, CC :4} – IN (with) appears more frequently, so the final rule used in 0-1 matching will be *{P} – IN (with) .",
        "Accordingly, we design two features:",
        "1. matchcount calculates in a derivation the number of rules whose source-side syntactic category matches the syntactic category of the test string.",
        "2. unmatchcount counts the number of mismatches.",
        "For example, in the derivations of Figure 1, we know the Chinese word *(hé) is a preposition in this sentence (and thus can be written as P(*)), therefore, match count += 1 if the above rule *{P} – IN ( with ) is employed.",
        "These two features are integrated into the loglinear translation model and the corresponding feature weights will be tuned along with other model features to learn which rules are preferred.",
        "It appears intuitively that the 0-1 matching algorithm does not make full use of the source-side syntax because it keeps only the most-frequent syntactic label and discards some potentially useful information.",
        "Therefore, it runs the risk of treating all the discarded source syntactic categories of the rule as equally likely.",
        "For example, there is an extracted rule as follows:",
        "0-1 matching converts it into $}{DEC} – IN(of ).",
        "The use of this rule will be penalized if the syntactic category of the test string ÉftKdë) is parsed as DEG or DEV.",
        "On one hand, the frequency of the tag DEG is just slightly less than that of DEC, but the 0-1 matching punishes the former while rewarding the latter.",
        "On the other hand, the frequency of DEG is much more than that of DEV, but they are penalized equally.",
        "It is obvious that the syntactic categories are not finely distinguished.",
        "Considering this situation, we propose the likelihood matching algorithm.",
        "First, we compute the likelihood of the rule's source syntactic categories.",
        "Since we need to deal with the potential problem that the rule is hit by the test string but the syntactic category of the test string is not in the category set of the rule's source side, we apply the m-estimate of probability (Mitchell, 1997) to calculate a smoothed likelihood in which nc is the count of each syntactic category c in a specific rule, n denotes the total count of the rule, m is a constant called the equivalent sample size, and p is the prior probability of the category c. In our work, we set the constant m=1 and the prior p to 1/12599 where 12599 is the total number of source-side syntactic categories in our training data.",
        "For example, the rule *{P :6, CC :4} – IN(with) after likelihood computation.",
        "Then, if we apply likelihood matching in the derivations in Figure 1 where the test string is * and its syntax is P(*), the matching score with the above rule will be 0.545.",
        "When the test Chinese word is parsed as a category other than P or CC, the matching score with the above rule will be 7.2e-6.",
        "Similar to 0-1 matching, likelihood matching will serve as an additional model feature representing the compatibility between categories and rules.",
        "Considering the two algorithms above, we can see that the purpose of fuzzy matching is in fact to calculate a similarity.",
        "0-1 matching assigns similarity 1 for exact matches and 0 for mismatch, while likelihood matching directly utilizes the likelihood to measure the similarity.",
        "Going one step further, we adopt a measure of deep similarity, computed using latent distributions of syntactic categories.",
        "Huang et al.",
        "(2010) proposed this method to compute the similarity between two syntactic tag sequences, used to impose soft syntactic constraints in hierarchical phrase-based models.",
        "Analogously, we borrow this idea to calculate the similarity between two SAMT-style syntactic categories, and then apply it to calculate the degree of matching between a translation rule and the syntactic category of a test source string for purposes of fuzzy matching.",
        "We call this procedure deep similarity matching.",
        "Instead of directly using the SAMT-style syntactic categories, we represent each category by a real-valued feature vector.",
        "Suppose there is a set of n latent syntactic categories V = (vl,--,vn ) (n=16 in our experiments).",
        "For each SAMT-style syntactic category, we compute its distribution of latent syntactic categoriesPc (V) = (Pc (v1),•■■,Pc (vn)).",
        "the latent syntactic categories v1, v2, v3, v4 are distributed as p(v1)=0.4, p(v2)=0.2, p(v3)=0.3 and p(v4)=0.1 for the SAMT-style syntactic category VP*NP.",
        "Then we further transform the distribution to a normalized feature vector F (c) = Pc (V)/|p (V)|| to represent the SAMT-style syntactic category c.",
        "With the real-valued vector representation for each SAMT-style syntactic category, the degree of similarity between two syntactic categories can be simply computed as a dot-product of their feature vectors:",
        "This computation yields a similarity score ranging from 0 (totally different syntactically) to 1 (totally identical syntactically).",
        "Since we can now compute the similarity of any syntactic category pair, we are currently ready to compute the matching degree between the syntactic category of a test source string and a fuzzy-tree to exact-tree rule.",
        "To do this, we first convert the original fuzzy-tree to exact-tree rule to the rule of likelihood format without any smoothing.",
        "For example, the rule %ü{P : 6, CC :4} – IN (with) becomes then denote the syntax of a rule's source-side RS by weighting all the SAMT-style categories in RS F {RS)=YJ PRS (c )F ( c ) (3) where PRS (c) is the likelihood of the category c.",
        "Finally, the deep similarity between a SAMT-style syntactic category tc of a test source string and a fuzzy-tree to exact-tree rule is computed as follows:",
        "This deep similarity score will serve as a useful feature in the string-to-tree model which will enable the model to learn how to take account of the source-side syntax during translation.",
        "We have ignored the details of latent syntactic category induction in this paper.",
        "In brief, the set of latent syntactic categories is automatically induced from a source-side parsed, word-aligned parallel corpus.",
        "The EM algorithm is employed to induce the parameters.",
        "We simply follow the algorithm of (Huang et al., 2010), except that we replace the tag sequence with SAMT-style syntactic categories."
      ]
    },
    {
      "heading": "4. Rule Binarization",
      "text": [
        "In the baseline string-to-tree model, the rules are not in Chomsky Normal Form.",
        "There are several ways to ensure cubic-time decoding.",
        "One way is to prune the extracted rules using a scope-3 grammar and do SCFG decoding without binarization (Hopkins and Lengmead, 2010).",
        "The other, and most popular way is to binarize the translation rules (Zhang et al., 2006).",
        "We adopt the latter approach for efficient decoding with integrated n-gram language models since this binarization technique has been well studied in string-to-tree translation.",
        "However, when the rules' source string is decorated with syntax (fuzzy-tree to exact-tree rules), how should we binarize these rules?",
        "We use the rule rn in Figure 2 for illustration:",
        "rn : x2 x0 x {PP *VP} – VP (xo : VB x : NP x2 : PP ) .",
        "Without regarding the source-side syntax, we obtain the following two binarized rules:",
        "Since the source-side syntax PP*VP in rule rnonly accounts for the entire source side, it is unclear how to annotate the source side of a partial rule such as the second binary rule B2.",
        "Analyzing the derivation process, we observe that a partial rule such as binary rule B2 never appears in the final derivation unless the rooted binary rule Bl also appears in the derivation.",
        "Based on this observation, we design a heuristicstrategy: we simply attach the syntax PP*VP in the rooted binary rule Bl, and do not decorate other binary rules with source syntax.",
        "Thus rule rn will be binarized as:"
      ]
    },
    {
      "heading": "5. Translation Model and Decoding",
      "text": [
        "The proposed translation system is an augmentation of the string-to-tree model.",
        "In the baseline string-to-tree model, the decoder searches for the optimal derivation d* that parses a source string f into a target tree et from all possible derivations D:",
        "+ À3 |d| + R (d | f ) where the first element is a language model score in which T(d) is the target yield of derivation d ;",
        "the second element is the translation length penalty; the third element is used to control the derivation length; and the last element is a translation score that includes six features:",
        "We call it heuristic because there may be other syntactic annotation strategies for the binarized rules.",
        "It should be noted that our strategy makes the annotated binarized rules equivalent to the original rule.",
        "In equation (6), the first three elements denote the conditional probability of the rule given the root, the source-hand side, and the target-hand side.",
        "The next two elements are bidirectional lexical translation probabilities.",
        "The last element is the preferred binary feature for learning: either the composed rule or the minimal rule.",
        "In our source-syntax-augmented model, the decoder also searches for the best derivation.",
        "With the help of the source syntactic information, the derivation rules in our new model are much more distinguishable than that in the string-to-tree model:",
        "Here, all elements except the last one are the same as in the string-to-tree model.",
        "The last item is:",
        "+ ô (likelihood) Àii log (likelihood (tag,r)) + ô (oi) {à2Ô match) + Xl3ô (unmatch )}",
        "The o-i matching is triggered only when we set ô( oi) = i.",
        "The other two fuzzy matching algorithms are triggered in a similar way.",
        "During decoding, we use a CKY-style parser with beam search and cube-pruning (Huang and Chiang, 2oo7) to decode the new source sentences."
      ]
    },
    {
      "heading": "6. Experiments",
      "text": [
        "The experiments are conducted on Chinese-to-English translation, with training data consisting of about i9 million English words and i7 million Chinese words.",
        "We performed bidirectional word alignment using GIZA++, and employed the grow-diag-final balancing strategy to generate the final symmetric word alignment.",
        "We parsed both sides of the parallel text with the Berkeley parser (Petrov et al., 2oo6) and trained a 5-gram language model with the target part of the bilingual data and the Xinhua portion of the English Gigaword corpus.",
        "For tuning and testing, we use NIST MT evaluation data for Chinese-to-English from 2oo3 to 2oo6 (MTo3 to MTo6).",
        "The development data set comes from MTo6 in which sentences with more than 2o words are removed to speed up MERT (Och, 2oo3).",
        "The test set includes MT)3 to MTo5.",
        "We implemented the baseline string-to-tree system ourselves according to (Galley et al., 2oo6; Marcu et al., 2oo6).",
        "We extracted minimal GHKM rules and the rules of SPMT Model i with source language phrases up to length L=4.",
        "We further extracted composed rules by composing two or three minimal GHKM rules.",
        "We also ran the state-of-the-art hierarchical phrase-based system Joshua (Li et al., 2oo9) for comparison.",
        "In all systems, we set the beam size to 2oo.",
        "The final translation quality is evaluated in terms of case-insensitive BLEU-4 with shortest length penalty.",
        "The statistical significance test is performed using the re-sampling approach (Koehn, 2oo4).",
        "Table i shows the translation results on development and test sets.",
        "First, we investigate the performance of the strong baseline string-to-tree model (s2t for short).",
        "As the table shows, s2t outperforms the hierarchical phrase-based system Joshua by more than i.o BLEU point in all translation tasks.",
        "This result verifies the superiority of the baseline string-to-tree model.",
        "With the s2t system providing a baseline, we further study the effectiveness of our source-syntax-augmented string-to-tree system with fuzzy-tree to exact-tree rules (we use FT2ET to denote our proposed system).",
        "The last three lines in Table i show that, for each fuzzy matching algorithm, our new system TF2ET performs significantly better than the baseline s2t system, with an improvement of more than o.5 absolute BLEU points in all tasks.",
        "This result demonstrates the success of our new method of incorporating source-side syntax in a string-to-tree model.",
        "Table i: Results (in BLEU scores) of different translation models in multiple tasks.",
        "LH=likelihood.",
        "*or**=significantly better than s2t system (p<o.o5 or o.oi respectively).",
        "Specifically, the FT2ET system with deep similarity matching obtains the best translation quality in all tasks and surpasses the baseline s2t system by o.93 BLEU points in development data and by more than i.o BLEU point in test sets.",
        "The 0-l matching algorithm is simple but effective, and it yields quite good performance (line 3).",
        "The contribution of 0-l matching as reflected in our experiments is consistent with the conclusions of contrast, the system with likelihood matching does not perform as well as the other two algorithms, although it also significantly improves the baseline s2t in all tasks.",
        "We are a bit surprised at the large improvement gained by the o-i matching algorithm.",
        "This algorithm has several advantages: it is simple and easy to implement, and enhances the translation model by enabling its rules to take account of the source-side syntax to some degree.",
        "However, a major deficiency of this algorithm is that it does not make full use of the source side syntax, since it retains only the most frequent SAMT-style syntactic category to describe the rule's source syntax.",
        "Thus this algorithm penalizes all the other categories equally, although some may be more frequent than others, as in the case of DEG and DEV in the rule",
        "W {DEC :ii233, DEG :iio73, DEV : 65} – IN (of ) .",
        "To some extent, the likelihood matching algorithm solves the main problem of o-i matching.",
        "System",
        "MTo6 (dev)",
        "MTo3",
        "MTo4",
        "MTo5",
        "Joshua",
        "29.42",
        "28.62",
        "3i.52",
        "3i.39",
        "s2t",
        "3o.84",
        "29.75",
        "32.68",
        "32.4i",
        "0-1",
        "3i.6i**",
        "3o.6o**",
        "33.45**",
        "33.37**",
        "FT2ET LH",
        "3i.35*",
        "3o.34*",
        "33.2i*",
        "33.o5*",
        "DeepSim",
        "3i.77**",
        "3o.82**",
        "33.69**",
        "33.5o**",
        "Very similar F ( c )■ F ( c ') >o.9",
        "Very dissimilar",
        "F (c )■ F ( c ') <o.i",
        "ADJP",
        "JJ; AD\\ADJP",
        "VP; ADVP\\NP",
        "NP",
        "DT*NN; LCP*P*NP",
        "CP; BA*CP",
        "Instead of rewarding or penalizing, this algorithm uses the likelihood of the syntactic category to approximate the degree of matching between the test source syntactic category and the rule.",
        "For a category not in the rule's source syntactic category set, the likelihood algorithm computes a smoothed likelihood.",
        "However, the likelihood algorithm does not in fact lead to very promising improvement.",
        "We conjecture that this disappointing performance is due to the simple smoothing method we employed.",
        "Future work will investigate more fully.",
        "Compared with the above two matching algorithms, the deep similarity matching algorithm based on latent syntactic distribution is much more beautiful in theory.",
        "This algorithm can successfully measure the similarity between any two SAMTstyle syntactic categories (Table 2 gives some examples of similar and dissimilar category pairs).",
        "Then it can accurately compute the degree of matching between a test source syntactic category and a fuzzy-tree to exact-tree rule.",
        "Thus this algorithm obtains the best translation quality.",
        "However, the deep similarity matching algorithm has two practical shortcomings.",
        "First, it is not easy to determine the number of latent categories.",
        "We have to conduct multiple experiments to arrive at a number which can yield a tradeoff between translation quality and model complexity.",
        "In our work, we have tried the numbers n=4, 8, 16, 32, and have found n=16 to give the best tradeoff.",
        "The second shortcoming is that the induction of latent syntactic categories has been very time consuming, since we have applied the EM algorithm to the entire source-parsed parallel corpus.",
        "Even with n=8, it took more than a week to induce the latent syntactic categories on our middle-scale training data when using a Xeon four-core computer (2.5GHzx 2CPU xi6GBmemory).",
        "When the training data contains tens of millions of sentence pairs, the computation time may no longer be tolerable.",
        "Table 3 shows some translation examples for comparison.",
        "In the first example, the Chinese preposition word -fP is mistakenly translated into English conjunction word and in Joshua and baseline string-to-tree system s2t, however, our source-syntax-augmented system FT2ET-DeepSim correctly converts the Chinese word -fP into English preposition with and finally yield the right translation.",
        "In the second example, our proposed system moves the prepositional phrase at an early date after the sibling verb phrase.",
        "It is more reasonable compared with the baseline system s2t.",
        "In the third example, the proposed system FT2ET-DeepSim successfully recognizes the Chinese long prepositional phrase £ 5 #B'MS'':# Û IM^f ffifâ-n ffi and short verb phrase M, and obtains the correct phrase reordering at last."
      ]
    },
    {
      "heading": "7. Related Work",
      "text": [
        "Several studies have tried to incorporate source or target syntax into translation models in a fuzzy manner.",
        "Zollmann and Venugopal (2oo6) augment the hierarchical string-to-string rules (Chiang, 2oo5) with target-side syntax.",
        "They annotate the target side of each string-to-string rule using SAMT-style syntactic categories and aim to generate the output more syntactically.",
        "Zhang et al.",
        "(2oio) base their approach on tree-to-string models, and generate grammatical output more reliably with the help of tree-to-tree sequence rules.",
        "Neither of them builds target syntactic trees using target syntax, however.",
        "Thus they can be viewed as integrating target syntax in a fuzzy manner.",
        "By contrast, we base our approach on a string-to-tree model which does construct target syntactic trees during decoding.",
        "and Huang et al., 2oio) apply fuzzy techniques for integrating source syntax into hierarchical phrase-based systems (Chiang, 2oo5, 2oo7).",
        "The first two studies employ o-i matching and the last tries deep similarity matching between two tag sequences.",
        "By contrast, we incorporate source syntax into a string-to-tree model.",
        "Furthermore, we apply fuzzy syntactic annotation on each rule's source string and design three fuzzy rule matching algorithms.",
        "Chiang (2oio) proposes a method for learning to translate with both source and target syntax in the framework of a hierarchical phrase-based system.",
        "He not only executes o-i matching on both sides of rules, but also designs numerous features such as rootX.X ' which counts the number of rules whose source-side root label is X and target-side root label is X ' .",
        "This fuzzy use of source and target syntax enables the translation system to learn which tree labels are similar enough to be compatible, which ones are harmful to combine, and which ones can be ignored.",
        "The differences between us are twofold: i) his work applies fuzzy syntax in both sides, while ours bases on the string-",
        "Table 3: Some translation examples produced by Joshua, string-to-tree system s2t and source-syntax-augmented string-to-tree system FT2ET with deep similarity matching algorithm to-tree model and applies fuzzy syntax on source side; and 2) we not only adopt the 0-1 fuzzy rule matching algorithm, but also investigate likelihood matching and deep similarity matching algorithms."
      ]
    },
    {
      "heading": "8. Conclusion and Future Work",
      "text": [
        "Next, we plan to further study the likelihood fuzzy matching and deep similarity matching algorithms in order to fully exploit their potential.",
        "For example, we will combine the merits of 0-1 matching and likelihood matching so as to avoid the setting of parameter m in likelihood matching.",
        "We also plan to explore another direction: we will annotate the source side of each string-to-tree rule with subtrees or subtree sequences.",
        "We can then apply tree-kernel methods to compute a degree of matching between a rule and a test source subtree or subtree sequence."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "The research work has been funded by the Natural Science Foundation of China under Grant No.",
        "60975053, 61003160 and 60736014 and supported by the External Cooperation Program of the Chinese Academy of Sciences.",
        "We would also like to thank Mark Seligman and Yu Zhou for revising the early draft, and anonymous reviewers for their valuable suggestions.",
        "In this paper, we have proposed a new method for augmenting string-to-tree translation models with fuzzy use of the source syntax.",
        "We first applied a fuzzy annotation method which labels the source side of each string-to-tree rule with SAMT-style syntactic categories.",
        "Then we designed and explored three fuzzy rule matching algorithms: 0-1 matching, likelihood matching, and deep similarity matching.",
        "The experiments show that our new system significantly outperforms the strong baseline string-to-tree system.",
        "This substantial improvement verifies that our fuzzy use of source syntax is effective and can enhance the ability to choose proper translation rules during decoding while guaranteeing grammatical output with explicit target trees.",
        "We believe that our work may demonstrate effective ways of incorporating both-side syntax in a translation model to yield promising results.",
        "Source sentence",
        "mm & [*n sus mm\\ m& t",
        "1",
        "Reference",
        "hussein also established ties with terrorist networks",
        "Joshua",
        "hussein also and terrorist networks established relations",
        "s2t",
        "hussein also and terrorist networks established relations",
        "FT2ET- DeepSim",
        "hussein also established relations with terrorist networks",
        "Source sentence",
        "... [W ffl] [#B] [^^] [W E ^ W $M.",
        "f%]",
        "Reference",
        ".. to end years of bloody conflict between israel and palestine as soon as possible",
        "2",
        ".. to end at an early date years of bloody conflict between israel and palestine",
        "Joshua",
        "... in the early period to end years of blood conflict between israel and palestine",
        "s2t",
        "... at an early date to end years of blood conflict between israel and palestine",
        "FT2ET- DeepSim",
        "... to end years of blood conflict between israel and palestine at an early date",
        "Source sentence",
        "mm [4 J?",
        "+h &m sifâ Wij m£ b a* pw +] [$] ...",
        "3",
        "Reference",
        "the europen union said in a joint statement issued after its summit meeting with china 's premier wen jiabao ...",
        "in a joint statement released after the summit with chinese premier wen jiabao , the europen union said ...",
        "Joshua",
        "the europen union with chinese premier wen jiabao in a joint statement issued after the summit meeting said ...",
        "s2t",
        "the europen union in a joint statement issued after the summit meeting with chinese premier wen jiabao said ...",
        "FT2ET- DeepSim",
        "the europen union said in a joint statement issued after the summit meeting with chinese premier wen jiabao ..."
      ]
    }
  ]
}
