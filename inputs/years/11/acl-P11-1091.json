{
  "info": {
    "authors": [
      "Zhuowei Bao",
      "Benny Kimelfeld",
      "Yunyao Li"
    ],
    "book": "Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies",
    "id": "acl-P11-1091",
    "title": "A Graph Approach to Spelling Correction in Domain-Centric Search",
    "url": "https://aclweb.org/anthology/P11-1091",
    "year": 2011
  },
  "references": [
    "acl-C90-2036",
    "acl-D07-1019",
    "acl-H05-1120",
    "acl-P06-1129",
    "acl-P10-1014",
    "acl-W04-3238"
  ],
  "sections": [
    {
      "text": [
        "Zhuowei Bao Benny Kimelfeld Yunyao Li",
        "Philadelphia, PA 19104, USA San Jose, CA 95120, USA San Jose, CA 95120, USA",
        "Spelling correction for keyword-search queries is challenging in restricted domains such as personal email (or desktop) search, due to the scarcity of query logs, and due to the specialized nature of the domain.",
        "For that task, this paper presents an algorithm that is based on statistics from the corpus data (rather than the query log).",
        "This algorithm, which employs a simple graph-based approach, can incorporate different types of data sources with different levels of reliability (e.g., email subject vs. email body), and can handle complex spelling errors like splitting and merging of words.",
        "An experimental study shows the superiority of the algorithm over existing alternatives in the email domain."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "An abundance of applications require spelling correction, which (at the high level) is the following task.",
        "The user intends to type a chunk q of text, but types instead the chunk s that contains spelling errors (which we discuss in detail later), due to un-careful typing or lack of knowledge of the exact spelling of q.",
        "The goal is to restore q, when given s. Spelling correction has been extensively studied in the literature, and we refer the reader to comprehensive summaries of prior work (Peterson, 1980; Kukich, 1992; Jurafsky and Martin, 2000; Mitton, 2010).",
        "The focus of this paper is on the special case where is a search query, and where instead of is submitted to a search engine (with the goal of retrieving documents that match the search query Spelling correction for search queries is important, because a significant portion of posed queries may be misspelled (Cucerzan and Brill, 2004).",
        "Effective spelling correction has a major effect on the experience and effort of the user, who is otherwise required to ensure the exact spellings of her queries.",
        "Furthermore, it is critical when the exact spelling is unknown (e.g., person names like Schwarzenegger).",
        "The more common and studied type ofspelling error is word-to-word error: a single word w is misspelled into another single word w'.",
        "The specific spelling errors involved include omission of a character (e.g., atachment), inclusion of a redundant character (e.g., attachement), and replacement of characters (e.g., attachemnt).",
        "The fact that w' is a misspelling of (and should be corrected to) w is denoted by w' – w (e.g., atachment – attachment).",
        "Additional common spelling errors are splitting of a word, and merging two (or more) words:",
        "• attachment – ► attachment",
        "• emailattachment – ► email attachment Part of our experiments, as well as most of our",
        "examples, are from the domain of (personal) email search.",
        "An email from the Enron email collection (Klimt and Yang, 2004) is shown in Figure 1.",
        "Our running example is the following misspelling of a search query, involving multiple types of errors.",
        "sadeep kohli excellatach ment – ► sandeep kohli excel attachment (1)",
        "In this example, correction entails fixing sadeep, splitting excellatach, fixing excell, merging atach ment, and fixing atachment.",
        "Beyond the complexity of errors, this example also illustrates other challenges in spelling correction for search.",
        "We need to identify not only that sadeep is misspelled, but also that kohli is correctly spelled.",
        "Just having kohli in a dictionary is not enough.",
        "Subject: Follow-Up on Captive Generation From: sandeep.kohli@enron.com X-From: Sandeep Kohli X-To: Stinson Gibner@ECT, Vince J Kaminski@ECT_",
        "Vince/Stinson,",
        "Please find below two attachemnts.",
        "The Excell spreadsheet shows some calculations...",
        "The seond attachement (Word) has the wordings that I think we can send in to the press.",
        ".",
        ".",
        "I am availabel on mobile if you have questions o clarifications...",
        "Regards, Sandeep.",
        "For example, in kohli coupons the user may very well mean kohls coupons if Sandeep Kohli has nothing to do with coupons (in contrast to the store chain Kohl's).",
        "A similar example is the word nail, which is a legitimate English word, but in the context of email the query nail box is likely to be a misspelling of mail box (unless nail boxes are indeed relevant to the user's email collection).",
        "Finally, while the word kohli is relevant to some email users (e.g., Kohli's colleagues), it may have no meaning at all to other users.",
        "The common approach to spelling correction utilizes statistical information (Kernighan et al., 1990; Schierle et al., 2007; Mitton, 2010).",
        "As a simple example, if we want to avoid maintaining a manually-crafted dictionary to accommodate the wealth of new terms introduced every day (e.g., ipod and ipad), we may decide that atachment is a misspelling of attachment due to both the (relative) proximity between the words, and the fact that attachment is significantly more popular than atachment.",
        "As another example, the fact that the expression sandeep kohli is frequent in the domain increases our confidence in sadeep kohli – sandeep kohli (rather than, e.g., sadeep kohli – sudeep kohli).",
        "One can further note that, in email search, the fact that Sandeep Kohli sent multiple excel attachments increases our confidence in excell – excel.",
        "A source of statistics widely used in prior work is the query log (Cucerzan and Brill, 2004; Ahmad and Kondrak, 2005; Li et al., 2006a; Chen et al., 2007; Sun et al., 2010).",
        "However, while query logs are abundant in the context of Web search, in many other search applications (e.g. email search, desktop search, and even small-enterprise search) query logs are too scarce to provide statistical information that is sufficient for effective spelling correction.",
        "Even an email provider of a massive scale (such as GMail) may need to rely on the (possibly tiny) query log of the single user at hand, due to privacy or security concerns; moreover, as noted earlier about kohli, the statistics of one user may be relevant to one user, while irrelevant to another.",
        "The focus of this paper is on spelling correction for search applications like the above, where query-log analysis is impossible or undesirable (with email search being a prominent example).",
        "Our approach relies mainly on the corpus data (e.g., the collection of emails of the user at hand) and external, generic dictionaries (e.g., English).",
        "As shown in Figure 1, the corpus data may very well contain misspelled words (like query logs do), and such noise is a part of the challenge.",
        "Relying on the corpus has been shown to be successful in spelling correction for text cleaning (Schierle et al., 2007).",
        "Nevertheless, as we later explain, our approach can still incorporate query-log data as features involved in the correction, as well as means to refine the parameters.",
        "As said above, our goal is to devise spelling correction that relies on the corpus.",
        "The corpus often contains various types of information, with different levels of reliability (e.g., n-grams from email subjects and sender information, vs. those from email bodies).",
        "The major question is how to effectively exploit that information while addressing the various types of spelling errors such as those discussed in Section 1.1.",
        "The key contribution of this work is a novel graph-based algorithm, MaxPaths, that handles the different types oferrors and incorporates the corpus data in a uniform (and simple) fashion.",
        "We describe MaxPaths in Section 2.",
        "We evaluate the effectiveness of our algorithm via an experimental study in Section 3.",
        "Finally, we make concluding remarks and discuss future directions in Section 4."
      ]
    },
    {
      "heading": "2. Spelling-Correction Algorithm",
      "text": [
        "In this section, we describe our algorithm for spelling correction.",
        "Recall that given a search query s of a user who intends to phrase q, the goal is to find q.",
        "Our corpus is essentially a collection D of unstructured or semistructured documents.",
        "For example, in email search such a document is an email with a title, a body, one or more recipients, and so on.",
        "As conventional in spelling correction, we devise a scoring function scoreD(r | s) that estimates our confidence in r being the correction of s (i.e., that r is equal to q).",
        "Eventually, we suggest a sequence r from a set CD (s) of candidates, such that scoreD(r | s) is maximal among all the candidates in Cd(s).",
        "In this section, we describe our graph-based approach to finding CD(s) and to determining scoreD(r | s).",
        "We first give some basic notation.",
        "We fix an alphabet S of characters that does not include any of the conventional whitespace characters.",
        "By X* we denote the set of all the words, namely, finite sequences over X.",
        "A search query s is a sequence wi,... ,wn, where each wi is a word.",
        "For convenience, in our examples we use whites-pace instead of comma (e.g., sandeep kohli instead of sandeep, kohli).",
        "We use the Damerau-Levenshtein edit distance (as implemented by the Jazzy tool) as our primary edit distance between two words r1,r2 € S*, and we denote this distance by ed(ri, r2).",
        "We first handle a restriction of our problem, where the search query is a single word w (rather than a general sequence s of words).",
        "Moreover, we consider only candidate suggestions that are words (rather than sequences of words that account for the case where w is obtained by merging keywords).",
        "Later, we will use the solution for this restricted problem as a basic component in our algorithm for the general problem.",
        "Let UD ç X* be a finite universal lexicon, which (conceptually) consists of all the words in the corpus D. (In practice, one may want add to D words of auxiliary sources, like English dictionary, and to filter out noisy words; we did so in the site-search domain that is discussed in Section 3.)",
        "The set CD(w) of candidates is defined by",
        "Cd(w) = {w} U {w' € Ud I ed(w,w') < 5} .",
        "for some fixed number 5.",
        "Note that CD(w) contains",
        "Basic Features ed(w,w'): weighted Damerau-Levenshtein edit distance ph(w, w'): 1 if w and w' are phonetically equal, 0 otherwise english(w'): 1 is w' is in English, 0 otherwise Corpus-Based Features logfreq(w')) : logarithm of #occurrences of w' in the corpus Domain-Specific Features",
        "w even if w is misspelled; furthermore, CD(w) may contain other misspelled words (with a small edit distance to w) that appear in D.",
        "We now define scoreD (w' | w).",
        "Here, our corpus D is translated into a set WFD of word features, where each feature f € WFD gives a scoring function score/ (w' | w).",
        "The function scoreD (w' | w) is simply a linear combination of the score/ (w' | w):",
        "As a concrete example, the features of WFD we used in the email domain are listed in Table 1; the resulting score/ (w' | w) is in the spirit of the noisy channel model (Kernighan et al., 1990).",
        "Note that additional features could be used, like ones involving the stems of w and w', and even query-log statistics (when available).",
        "Rather than manually tuning the parameters a/, we learned them using the well known Support Vector Machine, abbreviated SVM (Cortes and Vapnik, 1995), as also done by Schaback and Li (2007) for spelling correction.",
        "We further discuss this learning step in Section 3.",
        "We fix a natural number k, and in the sequel we denote by topD(w) a set of k words w' € CD(w) with the highest scoreD(w' | w).",
        "If |CD(w)| < k, then topD (w) is simply CD(w).",
        "We now describe our algorithm, MaxPaths, for spelling correction.",
        "The input is a (possibly misspelled) search query s = s1,... ,sn.",
        "As done in the word-level correction, the algorithm produces a set CD(s) of suggestions and determines the values",
        "Algorithm 1 MaxPaths Input: a search query s Output: a set CD (s) of candidate suggestions r, ranked by scoreD (r | s) 1: Find the strongly plausible tokens 2: Construct the correction graph 3: Find top-k full paths (with the largest weights) 4: Re-rank the paths by word correlation scoreD(r | s), for all r € CD(s), in order to rank CD(s).",
        "A high-level overview of MaxPaths is given in the pseudo-code of Algorithm 1.",
        "In the rest of this section, we will detail each of the four steps in Algorithm 1.",
        "The name MaxPaths will become clear towards the end of this section.",
        "We use the following notation.",
        "For a word w = c1 • • • cm of m characters ci and integers i < j in {1,... ,m + 1}, we denote by w^j) the word ci • • • Cj-1.",
        "For two words w1; w2 € S*, the word w1w2 € S* is obtained by concatenating w1 and w2.",
        "Note that for the search query s = s1}... ,snit holds that s1 • • • sn is a single word (in S*).",
        "We denote the word s1 • • • sn by |_s_|.",
        "For example, if s1 = sadeep and s2 = kohli, then s corresponds to the query sadeep kohli while | s| is the word sadeepkohli; furthermore, LsJ[1)7) = sadeep.",
        "To support merging and splitting, we first identify the possible tokens of the given query s. For example, in excellatach ment we would like to identify excell and atach ment as tokens, since those are indeed the tokens that the user has in mind.",
        "Formally, suppose that | s| = c1 • • • cm.",
        "A token is a word _sJ where 1 < i < j < m + 1.",
        "To simplify the presentation, we make the (often false) assumption that a token _sJ uniquely identifies i and j (that is, _sJ = _sJ [i')jv) if i = i' or j = j'); in reality, we should define a token as a triple ( |_sJ [ij), i, j).",
        "In principle, every token _sJ could be viewed as a possible word that user meant to phrase.",
        "However, such liberty would require our algorithm to process a search space that is too large to manage in reasonable time.",
        "Instead, we restrict to strongly plausible tokens, which we define next.",
        "A token w = | sJ [i,j) is plausible if w is a word of s, or there is a word w' € CD(w) (as defined in Section 2.1) such that scoreD(w' | w) > e for some fixed number e. Intuitively, w is plausible if it is an original token of s, or we have a high confidence in our word-level suggestion to correct w (note that the suggested correction for w can be w itself).",
        "Recall that | sJ = c1 • • • cm.",
        "A tokenization of s is a sequence , such that j1 = 1, ji = m + 1, and ji < for 1 < i < l. The tokenization induces the tokens _sJ [j1)j2),..., _sJ A tok-enization is plausible if each of its induced tokens is plausible.",
        "Observe that a plausible token is not necessarily induced by any plausible tokenization; in that case, the plausible token is useless to us.",
        "Thus, we define a strongly plausible token, abbreviated sp-token, which is a token that is induced by some plausible tokenization.",
        "As a concrete example, for the query excellatach ment, the sp-tokens in our implementation include excellatach, ment, excell, and atachment.",
        "As the first step (line 1 in Algorithm 1), we find the sp-tokens by employing an efficient (and fairly straightforward) dynamic-programming algorithm.",
        "In the next step (line 2 in Algorithm 1), we construct the correction graph, which we denote by GD(s).",
        "The construction is as follows.",
        "We first find the set topD(w) (defined in Section 2.1) for each sp-token w. Table 2 shows the sp-tokens and suggestions thereon in our running example.",
        "This example shows the actual execution of our implementation within email search, where s is the query sadeep kohli excellatach ment; for clarity of presentation, we omitted a few sp-tokens and suggested corrections.",
        "Observe that some of the corrections in the table are actually misspelled words (as those naturally occur in the corpus).",
        "A node of the graph GD(s) is apair (w, w'), where w is an sp-token and w' € topD(w).",
        "Recall our simplifying assumption that a token | sJ [i,j) uniquely identifies the indices i and j.",
        "The graph GD (s) contains a (directed) edge from a node (w1,w/1 ) to a node (w2, w2) if w2 immediately follows w1 in |_qJ ; in other words, GD (s) has an edge from (w1,w/1 ) to ( w2, w2' ) whenever there exist indices i, j and k, suchthat w1 = |_sJ[i;j) and w2 = |_sJ j».",
        "Observe that GD(s) is a directed acyclic graph (DAG).",
        "sandeep kohli (sandeep (jaideep excellent",
        "M excellence attachment )",
        "attached attachement",
        "For example, Figure 2 shows GD(s) for the query sadeep kohli excellatach ment, with the sp-tokens w and the sets topD(w) being those of Table 2.",
        "For now, the reader should ignore the node in the grey box (containing sandeep kohli) and its incident edges.",
        "For simplicity, in this figure we depict each node (w,w') by just mentioning w'; the word w is in the first row of Table 2, above w'.",
        "Let P = (w\\, wl) – • • • – (wk, w'k) be a path in GD(s).",
        "We say that P is full if {w\\,w^) has no incoming edges in GD(s), and (wk, w'k) has no outgoing edges in GD(s).",
        "An easy observation is that, since we consider only strongly plausible tokens, if P is full then wi • • • wk = [sj ; in that case, the sequence wl ,...,wk is a suggestion for spelling correction, and we denote it by crc (P).",
        "As an example, Figure 3 shows two full paths Pi and P2 in the graph GD(s) of Figure 2.",
        "The corrections crc (Pi), for i = 1, 2, are jaideep kohli excellent ment and sandeep kohli excel attachement, respectively.",
        "To obtain corrections crc(P) with high quality, we produce a set of k full paths with the largest weights, for some fixed k; we denote this set by topPathsD(s).",
        "The weight of a path P, denoted weight(P ), is the sum of the weights of all the nodes and edges in P, and we define the weights of nodes and edges next.",
        "To find these paths, we use a well known efficient algorithm (Eppstein, 1994).",
        "Consider a node u = (w,w') of GD(s).",
        "In the construction of GD (s), zero or more merges of (part of) original tokens have been applied to obtain the token w; let #merges(w) be that number.",
        "Consider an edge e of GD(s) from a node ui = (wi,w'i) to u2 = (w2,w2).",
        "In s, either wi and w2 belong to different words (i.e., there is a whitespace between them) or not; in the former case define #splits(e) = 0, and in the latter #splits(e) = 1.",
        "We define:",
        "Note that am and as are negative, as they penalize for merges and splits, respectively.",
        "Again, in our implementations, we learned am and as by means of SVM.",
        "Recall that topPathsD (s) is the set of k full paths (in the graph GD(s)) with the largest weights.",
        "From topPathsD(s) we get the set CD(s) of candidate suggestions:",
        "Cd(s) = {crc(P) I P e topPathsD(s)} .",
        "To compute scoreD(r | s) for r e CD(s), we incorporate correlation among the words of r. Intuitively, we would like to reward a candidate with pairs of words that are likely to coexist in a query.",
        "For that, we assume a (symmetric) numerical function crl (wi, w2 ) that estimates the extent to which the words wi' and w2' are correlated.",
        "As an example, in the email domain we would like crl (kohli, excel) to be high if Kohli sent many emails with excel attachments.",
        "Our implementation of crl (w', w2 ) essentially employs pointwise mutual information that has also been used in (Schierle et al., 2007), and that compares the number of documents (emails) containing w' and w2 separately and jointly.",
        "Let P e topPathsD(s) be a path.",
        "We denote by crl(P ) a function that aggregates the numbers crl (w', w2 ) for nodes (w^wi ) and (w2,w'2 ) of P (where (w^wi) and (w2,w'2) are not necessarily neighbors in P).",
        "Over the email domain, our crl (P) is the minimum of the crl (w', w'2 ).",
        "We define scoreD(P) = weight(P) + crl (P).",
        "To improve the performance, in our implementation we learned again (re-trained) all the parameters involved in scoreD(P).",
        "Finally, as the top suggestions we take crc (P) for full paths P with highest scoreD(P).",
        "Note that crc (P) is not necessarily injective; that is, there can be two full paths P' = P2 satisfying crc(Pi) = crc(P2).",
        "Thus, in effect, scoreD(r | s) is determined by the best evidence of r; that is,",
        "scoreD (r | s) = max{scoreD(P) I crc(P) = rA P e topPathsD(s)} .",
        "Note that our final scoring function essentially views P as a clique rather than a path.",
        "In principle, we could define GD(s) in a way that we would extract the maximal cliques directly without finding topPathsD(s) first.",
        "However, we chose our method (finding top paths first, and then re-ranking) to avoid the inherent computational hardness involved in finding maximal cliques.",
        "We now briefly discuss our handling of frequent n-grams (expressions).",
        "We handle n-grams by introducing new nodes to the graph GD(s); such a new node u is a pair (t, t'), where t is a sequence of n consecutive sp-tokens and t' is a n-gram.",
        "The weight of such a node u is rewarded for constituting a frequent or important n-gram.",
        "An example of such a node is in the grey box of Figure 2, where sandeep kohli is a bigram.",
        "Observe that sandeep kohli may be deemed an important bigram because it occurs as a sender of an email, and not necessarily because it is frequent.",
        "An advantage of our approach is avoidance of over-scoring due to conflicting n-grams.",
        "For example, consider the query textile import expert, and assume that both textile import and import export (with an \"o\" rather than an \"e\") are frequent bigrams.",
        "If the user referred to the bigram textile import, then expert is likely to be correct.",
        "But if she meant for import export, then expert is misspelled.",
        "However, only one of these two options can hold true, and we would like textile import export to be rewarded only once – for the bigram import export.",
        "This is achieved in our approach, since a full path in GD (s) may contain either a node for textile import or a node for import export, but it cannot contain nodes for both of these bigrams.",
        "Finally, we note that our algorithm is in the spirit of that of Cucerzan and Brill (2004), with a few inherent differences.",
        "In essence, a node in the graph they construct corresponds to what we denote here as ( w, w') in the special case where w is an actual word of the query; that is, no re-tokenization is applied.",
        "They can split a word by comparing it to a bigram.",
        "However, it is not clear how they can split into non-bigrams (without a huge index) and to handle simultaneous merging and splitting as in our running example (1).",
        "Furthermore, they translate bigram information into edge weights, which implies that the above problem of over-rewarding due to conflicting bigrams occurs."
      ]
    },
    {
      "heading": "3. Experimental Study",
      "text": [
        "Our experimental study aims to investigate the effectiveness of our approach in various settings, as we explain next.",
        "We first describe our experimental setup, and specifically the datasets and general methodology.",
        "Datasets.",
        "The focus of our experimental study is on personal email search; later on (Section 3.6), we will consider (and give experimental results for) a totally different setting – site search over www.",
        "ibm.com, which is a massive and open domain.",
        "Our dataset (for the email domain) is obtained from the Enron email collection (Bekkerman et al., 2004; Klimt and Yang, 2004).",
        "Specifically, we chose the three users with the largest number of emails.",
        "We refer to the three email collections by the last names of their owners: Farmer, Kaminski and Kitchen.",
        "Each user mailbox is a separate domain, with a separate corpus D, that one can search upon.",
        "Due to the absence of real user queries, we constructed our dataset by conducting a user study, as described next.",
        "sadeep",
        "kohli",
        "excellatach",
        "ment",
        "excell",
        "atachment",
        "sandeep jaideep",
        "kohli",
        "excellent excellence",
        "ment sent meet",
        "excel excell except",
        "attachment",
        "attached attachement",
        "For each user, we randomly sampled 50 emails and divided them into 5 disjoint sets of 10 emails each.",
        "We gave each 10-email set to a unique human subject that was asked to phrase two search queries for each email: one for the entire email content (general query), and the other for the From and X-From fields (sender query).",
        "(Figure 1 shows examples of the From and X-From fields.)",
        "The latter represents queries posed against a specific field (e.g., using \"advanced search\").",
        "The participants were not told about the goal of this study (i.e., spelling correction), and the collected queries have no spelling errors.",
        "For generating spelling errors, we implemented a typo generator.",
        "This generator extends an online typo generator (Seobook, 2010) that produces a variety of spelling errors, including skipped letter, doubled letter, reversed letter, skipped space (merge), missed key and inserted key; in addition, our generator produces inserted space (split).",
        "When applied to a search query, our generator adds random typos to each word, independently, with a specified probability p that is 50% by default.",
        "For each collected query (and for each considered value of p) we generated 5 misspelled queries, and thereby obtained 250 instances of misspelled general queries and 250 instances of misspelled sender queries.",
        "Methodology.",
        "We compared the accuracy of MaxPaths (Section 2) with three alternatives.",
        "The first alternative is the open-source Jazzy, which is a widely used spelling-correction tool based on (weighted) edit distance.",
        "The second alternative is the spelling correction provided by Google.",
        "We provided Jazzy with our unigram index (as a dictionary).",
        "However, we were not able to do so with Google, as we used remote access via its Java API (Google, 2010); hence, the Google tool is unaware of our domain, but is rather based on its own statistics (from the World Wide Web).",
        "The third alternative is what we call WordWise, which applies word-level correction (Section 2.1) to each input query term, independently.",
        "More precisely, WordWise is a simplified version of MaxPaths, where we forbid splitting and merging ofwords (i.e., only the original tokens are considered), and where we do not take correlation into account.",
        "Our emphasis is on correcting misspelled queries, rather than recognizing correctly spelled queries, due to the role of spelling in a search engine: we wish to provide the user with the correct query upon misspelling, but there is no harm in making a suggestion for correctly spelled queries, except for visual discomfort.",
        "Hence, by default accuracy means the number of properly corrected queries (within the top-k suggestions) divided by the number of the misspelled queries.",
        "An exception is in Section 3.5, where we study the accuracy on correct queries.",
        "Since MaxPaths and WordWise involve parameter learning (SVM), the results for them are consistently obtained by performing 5-folder cross validation over each collection of misspelled queries.",
        "Here, we compare MaxPaths to the alternatives when the error probability p is fixed (0.5).",
        "We consider only the Kaminski dataset; the results for the other two datasets are similar.",
        "Figure 4(a) shows the accuracy, for general queries, of top-k suggestions for k = 1, k = 3 and k = 10.",
        "Note that we can get only one (top-1) suggestion from Google.",
        "As can be seen, MaxPaths has the highest accuracy in all cases.",
        "Moreover, the advantage of MaxPaths over the alternatives increases as k increases, which indicates potential for further improving MaxPaths.",
        "Figure 4(b) shows the accuracy of top-k suggestions for sender queries.",
        "Overall, the results are similar to those of Figure 4(a), except that top-1 of both WordWise and MaxPaths has a higher accuracy in sender queries than in general queries.",
        "This is due to the fact that the dictionaries of person names and email addresses extracted from the X-From and From fields, respectively, provide strong features for the scoring function, since a sender query refers to these two fields.",
        "In addition, the accuracy of MaxPaths is further enhanced by exploiting the cor-",
        "D Google a Jazzy S WordWise 0 MaxPaths",
        "- Google - MaxPaths* - MaxPaths",
        "(a) General queries (Kaminski) »Google ES Jazzy H WordWise 0 MaxPaths (b) Sender queries (Kaminski) -WordWise",
        "(a) General queries (Farmer) Google – ■ – Jazzy – * – MaxPaths* – A – MaxPaths",
        "(c) Varying error probability (Kaminski) Figure 4: Accuracy for Kaminski (misspelled queries)",
        "relation between the first and last name of a person.",
        "We now study the impact of the complexity of spelling errors on our algorithm.",
        "For that, we measure the accuracy while the error probability p varies from 10% to 90% (with gaps of 20%).",
        "The results are in Figure 4(c).",
        "Again, we show the results only for Kaminski, since we get similar results for the other two datasets.",
        "As expected, in all examined methods the accuracy decreases as p increases.",
        "Now, not only does MaxPaths outperform the alternatives, its decrease (as well as that of WordWise) is the mildest – 13% as p increases from 10% to 90% (while Google and Jazzy decrease by 23% or more).",
        "We got similar results for the sender queries (and for each of the three users).",
        "Obtaining the labeled data needed for parameter learning entails a nontrivial manual effort.",
        "Ideally, we would like to learn the parameters of MaxPaths in one domain, and use them in similar domains.",
        "(b) Sender queries (Farmer) Figure 5: Accuracy for Farmer (misspelled queries)",
        "More specifically, our desire is to use the parameters learned over one corpus (e.g., the email collection of one user) on a second corpus (e.g., the email collection of another user), rather than learning the parameters again over the second corpus.",
        "In this set of experiments, we examine the feasibility of that approach.",
        "Specifically, we consider the user Farmer and observe the accuracy of our algorithm with two sets of parameters: the first, denoted by MaxPaths in Figures 5(a) and 5(b), is learned within the Farmer dataset, and the second, denoted by MaxPaths*, is learned within the Kaminski dataset.",
        "Figures 5(a) and 5(b) show the accuracy of the top-1 suggestion for general queries and sender queries, respectively, with varying error probabilities.",
        "As can be seen, these results mean good news – the accuracies of MaxPaths* and MaxPaths are extremely close (their curves are barely distinguishable, as in most cases the difference is smaller than 1%).",
        "We repeated this experiment for Kitchen and Kaminski, and got similar results.",
        "Next, we study the accuracy on correct queries, where the task is to recognize the given query as correct by returning it as the top suggestion.",
        "For each of the three users, we considered the 50 + 50 (general + sender) collected queries (having no spelling errors), and measured the accuracy, which is the percentage of queries that are equal to the top sug-",
        "Spelling Error Probability",
        "H Google H Jazzy S WordWise 0 MaxPaths",
        "gestion.",
        "Table 3 shows the results.",
        "Since Jazzy is based on edit distance, it almost always gives the input query as the top suggestion; the misses of Jazzy are for queries that contain a word that is not the corpus.",
        "MaxPaths is fairly close to the upper bound set by Jazzy.",
        "Google (having no access to the domain) also performs well, partly because it returns the input query if no reasonable suggestion is found.",
        "Up to now, our focus has been on email search, which represents a restricted (closed) domain with specialized knowledge (e.g., sender names).",
        "In this part, we examine the effectiveness of our algorithm in a totally different setting – large-scale site search within www.ibm.com, a domain that is popular on a world scale.",
        "There, the accuracy of Google is very high, due to this domain's popularity, scale, and full accessibility on the Web.",
        "We crawled 10 million documents in that domain to obtain the corpus.",
        "We manually collected 1348 misspelled queries from the log of search issued against developerWorks (www.ibm.com/developerworks/) during a week.",
        "To facilitate the manual collection of these queries, we inspected each query with two or fewer search results, after applying a random permutation to those queries.",
        "Figure 6 shows the accuracy of top-k suggestions.",
        "Note that the performance of MaxPaths is very close to that ofGoogle – only 2% lower for top-1.",
        "For k = 3 and k = 10, MaxPaths outperforms Jazzy and the top-1 of Google (from which we cannot obtain top-k for k > 1).",
        "To conclude, our experiments demonstrate various important qualities of MaxPaths.",
        "First, it outperforms its alternatives, in both accuracy (Section 3.2) and robustness to varying error complexities (Section 3.3).",
        "Second, the parameters learned in one domain (e.g., an email user) can be applied to similar domains (e.g., other email users) with essentially no loss in performance (Section 3.4).",
        "Third, it is highly accurate in recognition of correct queries (Section 3.5).",
        "Fourth, even when applied to large (open) domains, it achieves a comparable performance to the state-of-the-art Google spelling correction (Section 3.6).",
        "Finally, the higher performance of MaxPaths on top-3 and top-10 corrections suggests a potential for further improvement of top-1 (which is important since search engines often restrict their interfaces to only one suggestion)."
      ]
    },
    {
      "heading": "4. Conclusions",
      "text": [
        "We presented the algorithm MaxPaths for spelling correction in domain-centric search.",
        "This algorithm relies primarily on corpus statistics and domain knowledge (rather than on query logs).",
        "It can handle a variety of spelling errors, and can incorporate different levels of spelling reliability among different parts of the corpus.",
        "Our experimental study demonstrates the superiority of MaxPaths over existing alternatives in the domain of email search, and indicates its effectiveness beyond that domain.",
        "In future work, we plan to explore how to utilize additional domain knowledge to better estimate the correlation between words.",
        "Particularly, from available auxiliary data (Fagin et al., 2010) and tools like information extraction (Chiticariu et al., 2010), we can infer and utilize type information from the corpus (Li et al., 2006b; Zhu et al., 2007).",
        "For instance, if kohli is of type person, and phone is highly correlated with person instances, then phone is highly correlated with kohli even if the two words do not frequently co-occur.",
        "We also plan to explore aspects of corpus maintenance in dynamic (constantly changing) domains.",
        "Dataset",
        "Google",
        "Jazzy",
        "MaxPaths",
        "Kaminski (general)",
        "90%",
        "98%",
        "94%",
        "Kaminski (sender)",
        "94%",
        "98%",
        "94%",
        "Farmer (general)",
        "96%",
        "98%",
        "96%",
        "Farmer (sender)",
        "96%",
        "96%",
        "92%",
        "Kitchen (general)",
        "86%",
        "i00%",
        "92%",
        "Kitchen (sender)",
        "94%",
        "i00%",
        "98%"
      ]
    }
  ]
}
