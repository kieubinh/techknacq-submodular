{
  "info": {
    "authors": [
      "Denis Filimonov",
      "Mary P. Harper"
    ],
    "book": "Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies",
    "id": "acl-P11-2109",
    "title": "Generalized Interpolation in Decision Tree LM",
    "url": "https://aclweb.org/anthology/P11-2109",
    "year": 2011
  },
  "references": [
    "acl-D09-1087",
    "acl-D09-1116",
    "acl-W04-3242",
    "acl-W99-0617"
  ],
  "sections": [
    {
      "text": [
        "Denis Filimonovji",
        "Mary Harperj",
        "In the face of sparsity, statistical models are often interpolated with lower order (backoff) models, particularly in Language Modeling.",
        "In this paper, we argue that there is a relation between the higher order and the backoff model that must be satisfied in order for the interpolation to be effective.",
        "We show that in n-gram models, the relation is trivially held, but in models that allow arbitrary clustering of context (such as decision tree models), this relation is generally not satisfied.",
        "Based on this insight, we also propose a generalization of linear interpolation which significantly improves the performance of a decision tree language model.",
        "Note the context space for this function, w\\~ is arbitrarily long, necessitating some independence assumption, which usually consists of reducing the relevant context to n – 1 immediately preceding tokens: p(wi\\w\\i) « p(wi\\wi_n+1) These distributions are typically estimated from observed counts of n-grams w|_ra+1 in the training data.",
        "The context space is still far too large; therefore, the models are recursively smoothed using lower order distributions.",
        "For instance, in a widely used n-gram LM, the probabilities are estimated as follows:"
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "A prominent use case for Language Models (LMs) in NLP applications such as Automatic Speech Recognition (ASR) and Machine Translation (MT) is selection of the most fluent word sequence among multiple hypotheses.",
        "Statistical LMs formulate the problem as the computation of the model's probability to generate the word sequence w1w2 ... wm = wm, assuming that higher probability corresponds to more fluent hypotheses.",
        "LMs are often represented in the following generative form:",
        "where p is a discounted probability.",
        "In addition to n-gram models, there are many other ways to estimate probability distributions p(wi\\w|_n+1); in this work, we are particularly interested in models involving decision trees (DTs).",
        "As in n-gram models, DT models also often utilize interpolation with lower order models; however, there are issues concerning the interpolation which arise from the fact that decision trees permit arbitrary clustering of context, and these issues are the main subject of this paper.",
        "In the following discussion, we will refer to the function p(wi \\w1-1) as a language model."
      ]
    },
    {
      "heading": "2. Decision Trees",
      "text": [
        "The vast context space in a language model mandates the use of context clustering in some form.",
        "In n-gram models, the clustering can be represented as a k-ary decision tree of depth n – 1, where k is the size of the vocabulary.",
        "Note that this is a very constrained form of a decision tree, and is probably suboptimal.",
        "Indeed, it is likely that some of the clusters predict very similar distributions of words, and the model would benefit from merging them.",
        "Therefore, it is reasonable to believe that arbitrary (i.e., unconstrained) context clustering such as a decision tree should be able to outperform the n-gram model.",
        "A decision tree provides us with a clustering function $(wi_n+1) – j^,..., $N}, where N is the number of clusters (leaves in the DT), and clusters $k are disjoint subsets of the context space; the probability estimation is approximated as follows:",
        "Methods of DT construction and probability estimation used in this work are based on (Filimonov and Harper, 2009); therefore, we refer the reader to that paper for details.",
        "Another advantage of using decision trees is the ease of adding parameters such as syntactic tags:",
        "In this case, the decision tree would cluster the context space wi_ln+1t^_ln+1 based on information theoretic metrics, without utilizing heuristics for which order the context attributes are to be backed off (cf. Eq.",
        "1).",
        "In subsequent discussion, we will write equations for word models (Eq.",
        "2), but they are equally applicable to joint models (Eq.",
        "3) with trivial transformations."
      ]
    },
    {
      "heading": "3. Backoff Property",
      "text": [
        "Let us rewrite the interpolation Eq.",
        "1 in a more generic way:",
        "where, pn is a discounted distribution, $n is a clustering function of order n, and 7($n(w1-1)) is the backoff weight chosen to normalize the distribution.",
        "BOn_1 is the backoff clustering function of order n – 1 , representing a reduction of context size.",
        "In the case of an n-gram model, $n(w1_) is the set of word sequences where the last n – 1 words are wi_n+1, similarly, BOn_1(w1_) is the set of sequences ending with wi_n+2.",
        "In the case of a decision tree model, the same backoff function is typically used, but the clustering function can be arbitrary.",
        "The intuition behind Eq.",
        "4 is that the backoff context BOn_1(w1_) allows for more robust (but less informed) probability estimation than the context cluster $n(w1_).",
        "More precisely:",
        "that is, every word sequence W that belongs to a context cluster $n(w1_), belongs to the same backoff cluster BOn_1(w1_) (hence has the same backoff distribution).",
        "For n-gram models, Property 5 trivially holds since BOn_1(w1_) and $n(w1_) are defined as sets of sequences ending with wi_,n+2and wi_n+1 with the former clearly being a superset of the latter.",
        "However, when $ can be arbitrary, e.g., a decision tree, that is not necessarily so.",
        "Let us consider what happens when we have two context sequences W and W' that belong to the same cluster $n(W) = $n(W') but different backoff clusters BOn_1 (W ) = BOn_1(W ').",
        "For example: suppose we have $(wi_2wi_1) = ({on}, {may,june}) and two corresponding backoff clusters: BO' = ({may}) and BO\" = ({june}).",
        "Following on, the word may is likely to be a month rather than a modal verb, although the latter is more frequent and will dominate in BO'.",
        "Therefore we have much less faith in p5(wi\\BO') than in p5(wi\\BO\") and would like a much smaller weight 7 assigned to BO', but it is not possible in the backoff scheme in Eq.",
        "4, thus we will have to settle on a compromise value of 7, resulting in suboptimal performance.",
        "We would expect this effect to be more pronounced in higher order models, because violations of Property 5 are less frequent in lower order models.",
        "Indeed, in a 2-gram model, the property is never violated since its backoff, unigram, contains the entire context in one cluster.",
        "The 3-gram example above, $(wi_2wi_1) = ({on}, {may,june}), although illustrative, is not likely to occur because may in wi_1 position will likely be split from june very early on, since it is very informative about the following word.",
        "However, in a 4-gram model, $(wi_3wi_2wi_1) = ({on}, {may,june}, {<unk>}) is quite plausible.",
        "Thus, arbitrary clustering (an advantage of DTs) leads to violation of Property 5, which, we argue, may lead to a degradation of performance if backoff interpolation Eq.",
        "4 is used.",
        "In the next section, we generalize the interpolation scheme which, as we show in Section 6, allows us to find a better solution in the face of the violation of Property 5."
      ]
    },
    {
      "heading": "4. Linear Interpolation",
      "text": [
        "We use linear interpolation as the baseline, represented recursively, which is similar to Jelinek-Mercer smoothing for n-gram models (Jelinek and Mercer, 1980):",
        "where 0n = $n(wii_n+1), and An(0n) G [0,1] are assigned to each cluster and are optimized on a held-out set using EM.",
        "pn(wi\\^n) is the probability distribution at the cluster ( n in the tree of order n. This interpolation method is particularly useful as, unlike count-based discounting methods (e.g., Kneser-Ney), it can be applied to already smooth distributions pn."
      ]
    },
    {
      "heading": "5. Generalized Interpolation",
      "text": [
        "We can unwind the recursion in Eq.",
        "6 and make substitutions:",
        "Note that in this parameterization, the weight assigned to pn_1 (wi\\0n_1) is limited by (1 – An(0n)), i.e., the weight assigned to the higher order model.",
        "Ideally we should be able to assign a different set of interpolation weights for every eligible combination of clusters 0n, 0n_ 1,..., 01.",
        "However, not only is the number of such combinations extremely large, but many of them will not be observed in the training data, making parameter estimation cumbersome.",
        "Therefore, we propose the following parameterization for the interpolation of decision tree models:",
        "Note that this parameterization has the same number of parameters as in Eq.",
        "7 (one per cluster in every tree), but the number of degrees of freedom is larger because the the parameters are not constrained to sum to 1, hence the denominator.",
        "In Eq.",
        "8, there is no explicit distinction between higher order and backoff models.",
        "Indeed, it acknowledges that lower order models are not backoff models when Property 5 is not satisfied.",
        "However, it can be shown that Eq.",
        "8 reduces to Eq.",
        "6 if Property 5 holds.",
        "Therefore, the new parameterization can be thought of as a generalization of linear interpolation.",
        "Indeed, suppose we have the parameterization in Eq.",
        "8 and Property 5.",
        "Let us transform this parameterization into Eq.",
        "7 by induction.",
        "We define:",
        "where, due to space limitation, we redefine Am = i.e., the cluster of model order m, to which the sequence w1_1 belongs.",
        "The lowest order distribution p1 is not interpolated with anything, hence:",
        "Now the induction step.",
        "From Property 5, it follows that 0m C 0m_1, thus, for all sequences in Vwn G",
        "Table 1: Perplexity results on PTB WSJ section 23.",
        "Percentage numbers in parentheses denote the reduction of perplexity relative to the lower order model of the same type.",
        "\"Word-tree\" and \"syntactic\" refer to DT models estimated using words only (Eq.",
        "2) and words and tags jointly (Eq.",
        "3).",
        "<<m, we have the same distribution:",
        "Note that the last transformation is because <<m C <<m_ i ; had it not been the case, pm would depend on the combination of <<m and <m_1 and require multiple parameters to be represented on its entire domain wn G <<m. After n iterations, we have:",
        "Thus, we have constructed pn(wi\\<f>n) using the same recursive representation as in Eq.",
        "6, which proves that the standard linear interpolation is a special case of the new interpolation scheme, which occurs when the backoff Property 5 holds."
      ]
    },
    {
      "heading": "6. Results and Discussion",
      "text": [
        "Models are trained on 35M words of WSJ 94-96 from LDC2008T13.",
        "The text was converted into speech-like form, namely numbers and abbreviations were verbalized, text was downcased, punctuation was removed, and contractions and possessives were joined with the previous word (i.e., they 'll becomes they'll).",
        "For syntactic modeling, we used tags comprised of POS tags of the word and its head, as in (Filimonov and Harper, 2009).",
        "Parsing of the text for tag extraction occurred after verbalization of numbers and abbreviations but before any further processing; we used an appropriately trained latent variable PCFG parser (Huang and Harper, 2009).",
        "For reference, we include n-gram models with Jelinek-Mercer and modified interpolated KN discounting.",
        "All models use the same vocabulary of approximately 50k words.",
        "We implemented four decision tree models: two using the interpolation method of (Eq.",
        "6) and two based on the generalized interpolation (Eq.",
        "8).",
        "Parameters A were estimated using the L-BFGS to minimize the entropy on a heldout set.",
        "In order to eliminate the influence of all factors other than the interpolation, we used the same decision trees.",
        "The perplexity results on WSJ section 23 are presented in Table 1.",
        "As we have predicted, the effect of the new interpolation becomes apparent at the 4-gram order, when Property 5 is most frequently violated.",
        "Note that we observe similar patterns for both word-tree and syntactic models, with syntactic models outperforming their word-tree counterparts.",
        "We believe that (Xu and Jelinek, 2004) also suffers from violation of Property 5, however, since they use a heuristic method to set backoff weights, it is difficult to ascertain the extent."
      ]
    },
    {
      "heading": "7. Conclusion",
      "text": [
        "The main contribution of this paper is the insight that in the standard recursive backoff there is an implied relation between the backoff and the higher order models, which is essential for adequate performance.",
        "When this relation is not satisfied other interpolation methods should be employed; hence, we propose a generalization of linear interpolation that significantly outperforms the standard form in such a scenario.",
        "n-gram",
        "DT: Eq.",
        "6 (baseline)",
        "DT: Eq.",
        "8 (generalized)",
        "order",
        "Jelinek-Mercer",
        "Mod KN",
        "word-tree",
        "syntactic",
        "word-tree",
        "syntactic",
        "2-gram",
        "270.2",
        "261.0",
        "257.8",
        "214.3",
        "258.1",
        "214.6",
        "3-gram",
        "186.5 (31.0%)",
        "174.3 (33.2%)",
        "168.7 (34.6%)",
        "156.8 (26.8%)",
        "168.4 (34.8%)",
        "155.3 (27.6%)",
        "4-gram",
        "177.1 (5.0%)",
        "161.7 (7.2%)",
        "164.0 (2.8%)",
        "156.5 (0.2%)",
        "155.7 (7.5%)",
        "147.1 (5.3%)"
      ]
    }
  ]
}
