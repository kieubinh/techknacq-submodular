{
  "info": {
    "authors": [
      "Chaitanya G. S. K.",
      "Samar Husain",
      "Prashanth Mannem"
    ],
    "book": "Proceedings of the 5th Linguistic Annotation Workshop",
    "id": "acl-W11-0417",
    "title": "Empty Categories in Hindi Dependency Treebank: Analysis and Recovery",
    "url": "https://aclweb.org/anthology/W11-0417",
    "year": 2011
  },
  "references": [
    "acl-C10-2158",
    "acl-E03-1049",
    "acl-H05-1066",
    "acl-I08-2099",
    "acl-J93-2004",
    "acl-P03-1055",
    "acl-P97-1003",
    "acl-W03-1005",
    "acl-W09-3812"
  ],
  "sections": [
    {
      "text": [
        "Chaitanya GSK Samar Husain Prashanth Mannem",
        "Intl Institute of Info.",
        "Technology Intl Institute of Info.",
        "Technology Intl Institute of Info.",
        "Technology",
        "Hyderabad, India Hyderabad, India Hyderabad, India",
        "chaitanya.gsk samar prashanth",
        "0research.iiit.ac.in @research.iiit.ac.in @research.iiit.ac.in",
        "In this paper, we first analyze and classify the empty categories in a Hindi dependency treebank and then identify various discovery procedures to automatically detect the existence of these categories in a sentence.",
        "For this we make use of lexical knowledge along with the parsed output from a constraint based parser.",
        "Through this work we show that it is possible to successfully discover certain types of empty categories while some other types are more difficult to identify.",
        "This work leads to the state-of-the-art system for automatic insertion of empty categories in the Hindi sentence."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Empty categories play a crucial role in the annotation framework of the Hindi dependency treebank(Begum et al., 2008; Bharati et al., 2009b).",
        "They are inserted in a sentence in case the dependency analysis does not lead to a fully connected tree.",
        "In the Hindi treebank, an empty category (denoted by a NULL node) always has at least one child.",
        "These elements have essentially the same properties (e.g. case-marking, agreement, etc.)",
        "as an overtly realized element and they provide valuable information (such as predicate-argument structure, etc.).",
        "A different kind of motivation for postulating empty categories comes from the demands of natural lan- guage processing, in particular parsing.",
        "There are several types of empty categories in the Hindi dependency",
        "!The dependency treebank is part of a Multi Representational and Multi-Layered Treebank for Hindi/Urdu (Palmer et al., 2009).",
        "treebank serving different purposes.",
        "The presence of these elements can be crucial for correct automatic parsing.",
        "Traditional parsing algorithms do not insert empty categories and require them to be part of the input.",
        "The performance of such parser will be severely affected if one removes these elements from the input data.",
        "Statistical parsers like MaltParser (Nivre, 2003), MSTParser (McDonald, 2005), as well as Constraint Based Hybrid Parser (CBHP) (Bharati et al., 2009a) produce incorrect parse trees once the empty categories are removed from the input data.",
        "Hence there is a need for automatic detection and insertion of empty categories in the Hindi data.",
        "Additionally, it is evident that successful detection of such nodes will help the annotation process as well.",
        "There have been many approaches for the recovery of empty categories in the treebanks like Penn treebank, both ML based (Collins, 1997; Johnson, and rule based (R Campbell, 2004).",
        "Some approaches such as Yang and Xue (2010) follow a post processing step of recovering empty categories after parsing the text.",
        "In this paper we make use of lexical knowledge along with the parsed output from a constraint based parser to successfully insert empty category in the input sentence, which may further be given for parsing or other applications.",
        "Throughout this paper, we use the term recovery (of empty categories) for the insertion of different types of empty categories into the input sentence.",
        "The paper is arranged as follows, Section 2 discusses the empty nodes in the treebank and classifies",
        "NULLJNP tokens 69",
        "NULLJVG tokens 68",
        "NULLJCCP tokens 32 Sentences with more than one empty category in them 159 them based on their syntactic type.",
        "In section 3 we provide an algorithm to automatically recover these elements.",
        "Section 4 shows the performance of our system and discusses the results.",
        "We conclude the paper in section 5.",
        "2 An overview of Empty Categories in Hindi dependency Treebank",
        "Begum et al., (2008) proposed a dependency framework in which an empty node is introduced during the annotation process only if its presence is required to build the dependency tree for the sentence (Figures 1, 2, 3) .",
        "Empty categories such as those discussed in Bhatia et al.",
        "(2010) which would be leaf nodes in the dependency tree are not part of the dependency structure and are added during Propbanking.",
        "Consequently, the empty categories in Hindi treebank do not mark displacement as in Penn treebank (Marcus et al., 1993) rather, they represent undisplaced syntactic elements which happen to lack phonological realization.",
        "In the Hindi dependency treebank, an empty category is represented by a 'NULL' word.",
        "Sentences can have a missing VG or NP or CCP .",
        "These are represented by 'NULL' token and are marked with the appropriate Part-of-speech tag along with marking the chunk tag such as NULLJNP, NULLJVGF, NULLJCCP, etc.",
        "in Table 2",
        "From the empty categories recovery point of view, we have divided the empty categories in the treebank into six types (Table 2).",
        "The first type of empty category is Empty Subject (Figure 1), example.1 where a clause 'rava ke kaaran hi manmohan singh rajaneeti me aaye' is dependent on the missing subject of the verb 'hai' (is).",
        "ke kaaran hi manmohan sing 'because' 'only' 'Manmohan' 'singh' raajaniiti me aaye 'politics' 'in' 'came.",
        "'it is noticeable that because of Rao, Manmohan Singh came in politics'",
        "The second type of empty category is due to Backward Gapping (Figure 2), example.2 where the verb is absent in the clause that occurs before a coordinating conjunct.",
        "(2) doosare nambara para misa roosa 'second' 'position' 'on' 'miss' 'Russia' natasha NULL aur tiisare nambara 'Natasha' NULL 'and' 'third' 'position' para misa lebanan sendra rahiim .",
        "'on' 'miss' 'Lebanan' 'Sandra' were' .",
        "Type of empty",
        "Inst-",
        "Chunk tag",
        "categories",
        "ances",
        "(CPOS)",
        "Empty subject",
        "69",
        "NULLJNP",
        "Backward gapping",
        "29",
        "NULLJVG",
        "Forward gapping",
        "21",
        "NULLJVG",
        "Finite verb ellipses",
        "18",
        "NULLJVG",
        "Conjunction ellipses",
        "(verbs)",
        "20",
        "NULLJCCP",
        "Conjunction ellipses",
        "(nouns)",
        "12",
        "NULL_CCP",
        "Total",
        "169",
        "'Miss Russia stood second and Miss Lebanan was third'",
        "The third type of empty category is Forward Gapping (Figure 3), example 3, which is similar to the second type but with the clause with the missing verb occurring after the conjunct rather than before.",
        "The reason for a separate class for forward gapping is explained in the next section.",
        "'Played gamble on Diwali day but was it at home or hotel'",
        "The fourth type of empty category is due to Finite verb ellipses (Figure4), example 4, where the main verb for a sentence is missing.",
        "NULL.",
        "NULL",
        "'Along with this, the same favorite semi-cooked onion'",
        "The fifth type of empty category is Conjunction ellipses (Verbs), example 5 (Figure 5).",
        "'The children have grown big (and) do not listen to anyone'",
        "The sixth type of empty category is the Conjunction ellipses (for nouns), example 6 (Figure 6).",
        "'Because of the storm in the Yamuna river, thousand acres of sugarcane, straw, money, vegetable crops got submerged'"
      ]
    },
    {
      "heading": "3. Empty categories recovery Algorithm",
      "text": [
        "Given the limited amount of data available (only 159 sentences with at least one empty category in them out of 2973 sentences in the Hindi treebank, Table 12 ), we follow a rule based approach rather than using ML to recover the empty catogories discussed in the previous section.",
        "Interestingly, a rule-based approach was followed by R Campbell, (2004) that recovered empty categories in English resulting in better performance than previous empirical approaches.",
        "This work can be extended for ML once more data becomes available.",
        "The techniques that are used for recovering empty categories in the Penn treebank (Collins, 1997; Johnson, 2002;) might not be suitable since the Penn treebank has all the empty categories as leaf nodes in the tree unlike the Hindi dependency treebank where for each sentence in the input data try in Empty Subject try in Forward Gapping",
        "try in Finite Verb ellipses for each tree in CBHP parse output try in Backward Gapping try in Finite Verb ellipses try in Conjunction ellipses (for Verbs) the empty categories are always internal nodes in the dependency trees (Figure 2).",
        "In this section we describe an algorithm which recovers empty categories given an input sentence.",
        "Our method makes use of both the lexical cues as well as the output of the Constraint Based Hybrid Parser (CBHP).",
        "Table 3 presents the recovery algorithm which first runs on the input sentence and then on the output of the CBHP.",
        "Framing rule 1 requires the formation of a set (Cue-Set) based on our analysis discussed in the previous section.",
        "It contains all the linguistic cues (lexical items such as gaurtalab 'noticeable', maloom 'known', etc).",
        "We then scan the input sentence searching for the cue and insert an empty category (NULLJNP) if the cue is found.",
        "Table 4 illustates the process where we search for 'CueSet he ki' or 'CueSet ho ki' phrases.",
        "In Table 4, W+1 represents word next to W, W+2 represents word next to W+1.",
        "To handle backward gapping cases, we take the intermediate parse output from CBHP for the whole data.",
        "The reason behind choosing CBHP lies in its rule based approach.",
        "CBHP fails (or rather gives a visibly different parse) for sentences with missing verbs.",
        "And when it fails to find a verb, CBHP for each word W in the Sentence if W e CueSet if W+1 & W+2 = he or ho & ki Insert NULL with PRP as POS,",
        "NULLJNP as CPOS for each node N in tree T if head of N = 0 insert N in unattached_subtrees[] for each node X in unattached_subtrees[] while POS(X) is not VG traverse in the array of unattached-subtrees if 3 a conjunct, then recovery=1 if recovery = 1 insert NULL, with VM as POS,",
        "NULLJVG as CPOS Head of NULL = 0 gives unattached subtrees (Figure 7, 8, 9 illustrates the unattached subtrees where the parser is unable to find a relation between the heads of each unattached subtree).",
        "Similarly whenever the parser expects a conjunction and the conjunction is absent in the sentence, CBHP again gives the unattached subtrees.",
        "We analyze these unattached sub-trees to see whether there is a possibility for empty category.",
        "The array, in Table 5 represents all the nodes having no heads.",
        "POS represents part of speech and CPOS represents chunk part of speech and 0 represents empty set.",
        "The main reason for handling the forward gapping as a separate case rather than considering it along with backward gapping is the prototypical SOV wordorder of Hindi, i.e. the verb occurs after subject and object in a clause or sentence.",
        "We take the intermediate parse output from the CBHP for the whole data and when ever a verb is absent in a clause occurring immediately after a conjunct, we search for a VG affor each node N in tree T if head of N= 0 insert N in unattached_subtrees[] for each node X in unattached_subtrees[] if !3 a verb between two conjuncts if those conjuncts belongs to conjunct_set insert insert NULL with VM as POS, NULLJVG as CPOS",
        "for each word W in the sentence S if W e CueSet_FG insert NULL with NULLJVG as POS and CPOS if W = Conjunct if POS(W-1) = VG if !3 a VG in SW insert NULL with VM as POS, NULL.VG as CPOS ter the conjunct and insert an empty category if the VG is absent (an example of such cases can be seen in Figure 7).",
        "This procedure is given in Table 6.",
        "In addition, we use the lexical cues (such as ya nahii 'or not', ya 'or') for recovering certain types of empty categories.",
        "CueSet-FG is the set that contains the lexical cues and conjunctset contains lexical cues like (ki and ya).",
        "This procedure is shown in Table 7.",
        "din:NP jua:NN magara:CC gar:NN yaa:CC hotala:NN .",
        ":SYM ROOT divaalii:NP",
        "In the cases where there is no VG at all in the sentence, we insert a NULL VG before the EOS (End-Of-Sentence) in the input sentence.",
        "For this case, finite verb ellipses can be recovered directly from insert NULL with VM as POS,",
        "NULL.VG as CPOS",
        "for each node N in tree T if head of N= 0 insert N in unattached_subtrees[] if !3 a verb in unattached_subtrees[]",
        "if those conjuncts belongs to conjunct_set insert insert NULL with VM as POS, NULL.VG as CPOS",
        "CBHP.",
        "the input sentence using the rule in Table 8 .Also, in a sentence with a VG, we use CBHP to ascertain if this VG is the root of the sentence.",
        "If its not, we insert an additional NULLJVG.",
        "This algorithm will correctly recover VG in the sentence but the position can be different from the gold input at times not because the recovery algorithm is wrong, but there is no strict rule that says the exact position of empty category in this case of finite verb ellipse and annotators might choose to insert an empty category at any position.",
        "For example, in Figure 8, we can insert an empty category either after first NP sub tree or second or the third etc, all these possibilities are accepted syntactically.",
        "For simplicity purposes, we insert the empty category just before the EOS.",
        "This procedure is shown in Table 9.",
        "We again use the intermediate parsed output of CBHP for this type.",
        "Whenever there is a missing conjunction between the two finite clauses, the clausal sub trees are disconnected from each other as shown in Figure 9.",
        "Hence the rule that should be applied is to insert a NULLJCCP between two sub trees with VG heads and insert NULL CCP immediately after the first verb in the input sentence.",
        "Table 10 shows this procedure.",
        "CBHP.",
        "for each node N in tree T if head of N = 0 insert N in unattached_subtrees[] for each node X in unattached_subtrees[] if XandX+1 are VG's",
        "insert insert NULL with CC as POS, NULLJCCP as CPOS"
      ]
    },
    {
      "heading": "4. Results and Discussion",
      "text": [
        "We have presented two sets of results, the overall empty categories detection along with the accuracies of individual types of empty categories in Table 11 and Table 12.",
        "The results in Table 12 show that the precision in recovering many empty categories is close to 90%.",
        "A high precision value of 89.8 for recovery of Empty subject type is due to the strong lexical cues that were found during our analysis.",
        "CBHP parse output proved helpful in most of the remaining types.",
        "Few cases such as backward gapping and conjunction ellipses (for nouns) are very difficult to handle.",
        "We see that although CBHP helps in the recovery process by providing unattached subtrees in many instances, there are cases such as those of backward gapping and nominal conjunction ellipses where it does not help.",
        "It is not difficult to see why this is so.",
        "The presence ofthe 2nd verb in the case ofback-ward gapping fools CBHP into treating it as the main verb of a normal finite clause.",
        "In such a case, the parser ends up producing a fully formed tree (which of course is a wrong analysis) that is of no use for us.",
        "Type of empty",
        "Inst-",
        "Prec-",
        "Recall",
        "categories",
        "ances",
        "ision",
        "Empty subject",
        "69",
        "89.8",
        "89.8",
        "Backward gapping",
        "29",
        "77.7",
        "48.3",
        "Forward gapping",
        "21",
        "88.8",
        "72.7",
        "Finite verb ellipses",
        "18",
        "78.5",
        "61.1",
        "Conjunction ellipses",
        "20",
        "88.2",
        "75",
        "(verbs)",
        "Conjunction ellipses",
        "12",
        "0",
        "0",
        "(nouns)",
        "Total",
        "169",
        "91.4",
        "69.8",
        "Similar problem is faced while handling conjunction ellipses (for nouns).",
        "Here as in the previous case, CBHP is fooled into treating two coordinating nominals as independent nouns.",
        "We note here that both the cases are in fact notoriously difficult to automatically detect because of the presence (or absence) of any robust linguistic pattern.",
        "These results show that our system can be used to supplement the annotators effort during treebanking.",
        "We plan to use our system during the ongoing Hindi treebanking to ascertain it effect.",
        "As mentioned earlier, automatic detection of empty categories/nodes will prove to be indispensable for parsing a sentence.",
        "We also intend to see the effect of our system during the task of parsing."
      ]
    },
    {
      "heading": "5. Conclusion",
      "text": [
        "In this paper we presented an empty category recovery algorithm by analyzing the empty categories in the Hindi treebank.",
        "This, we noticed, uses lexical cues and parsed output of a constraint based parser.",
        "The results show that our system performs considerably high ( 90%) for many types of empty categories.",
        "Few types, on the other hand, such as backward gapping and nominal coordinating conjunctions were very difficult to handle.",
        "Our approach and analysis will be useful in automatic insertion of empty nodes during dependency annotation.",
        "It will also benefit data-driven/statistical approaches either as a post-processing tool or in recovering empty categories by helping in feature selection for various machine learning techniques."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "We would like to thank Prof. Rajeev Sangal for providing valuable inputs throughout the work.",
        "Type of empty",
        "Inst-",
        "Prec-",
        "Recall",
        "categories",
        "ances",
        "ision",
        "NULLJNP tokens",
        "69",
        "89.8",
        "89.8",
        "NULL-VG tokens",
        "68",
        "82",
        "60.2",
        "NULLJCCP tokens",
        "32",
        "88.2",
        "46.8",
        "Total",
        "159",
        "91.4",
        "69.8"
      ]
    }
  ]
}
