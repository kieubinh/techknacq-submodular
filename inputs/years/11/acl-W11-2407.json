{
  "info": {
    "authors": [
      "Tim Fernando"
    ],
    "book": "Proceedings of the TextInfer 2011 Workshop on Textual Entailment",
    "id": "acl-W11-2407",
    "title": "Strings over intervals",
    "url": "https://aclweb.org/anthology/W11-2407",
    "year": 2011
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Computer Science Department Trinity College, Dublin 2 Ireland",
        "Tim.Fernando@tcd.ie",
        "Intervals and the events that occur in them are encoded as strings, elaborating on a conception of events as \"intervals cum description.\"",
        "Notions of satisfaction in interval temporal logics are formulated in terms of strings, and the possibility of computing these via finite-state machines/transducers is investigated.",
        "This opens up temporal semantics to finite-state methods, with entailments that are decidable insofar as these can be reduced to inclusions between regular languages."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "It is well-known that Kripke models for Linear Termporal Logic (LTL) can be formulated as strings (e.g. Emerson, 1990).",
        "For the purposes of natural language semantics, however, it has been argued since at least (Bennett and Partee, 1972) that intervals should replace points.",
        "It is less clear (than in the case of LTL) how to view models as strings for intervals drawn (say) from the real line R, as in one of the more recent interval temporal logics proposed for English, the system TVC of (Pratt-Hartmann, 2005).",
        "But if we follow TVC in restricting our models to finite sets, we can encode satisfaction of a formula p in a set C(ip) of strings str(A, I) representing models A and intervals I (t) A |=/ ip <j=> str(A, I) G C(ip) .",
        "The present paper shows how to devise encodings str(A, I) and C(ip) that establish (t) in a way that opens temporal semantics up to finite-state methods (e.g. Beesley and Karttunen, 2003).",
        "Notice that the entailment from ip to ip' given by is equivalent, under (t), to the inclusion C(ip) Ç C(i ').",
        "This inclusion is decidable provided C(i ) and C(pp') are regular languages.",
        "(The same cannot be said for context-free languages.)",
        "We start with TVC, a model in which is defined, relative to an infinite set E of event-atoms, to be a finite set A of pairs (I, e) of closed, bounded intervals I ç R and event-atoms e G E. (A closed, bounded interval in R has the form for some r1, r2 G R.) The idea is that (I, e) represents \"an occurrence of an event of type e over the interval\" I (Pratt-Hartmann, 2005; page 17).",
        "That is, we can think of A as a finite set of events, conceived as \"intervals cum description\" (van Benthem, 1983; page 113).",
        "Our goal below is to string out this conception beyond event-atoms, and consider relations between intervals other than sub-intervalhood (the focus of TVC).",
        "To get some sense for what is involved, it is useful to pause for examples of the strings we have in mind.",
        "s otherwise",
        "Example A Given event-atoms e and e', let A be the TVC-model x2, x3}, where",
        "X3 d= ([9,100], e') .",
        "Over the alphabet Pow (A) of subsets of A, let us represent A by the string of length 5, each box representing a symbol (i.e. a subset of A) and arranged in chronological order with time increasing from left to right much like a film/cartoon strip (Fernando, 2004).",
        "Precisely how s (A) is constructed from A is explained in section 2.",
        "Lest we think that a box represents an indivisible instant of time, we turn quickly to Example B The 12 months, January to December, in a year are represented by the string of length 365.",
        "These two strings are linked by two functions on strings: a function pmonths that keeps only the months in a box so that",
        "pmonths(sy/m,d)",
        "and block compression bc, which compresses consecutive occurrences of a box into one, mapping",
        "pmonths(sy/m,d) to",
        "bc(|Jan| I Feb",
        "to examples discussed in (Fernando, 2011a) and papers cited therein.",
        "These matters are given short shrift below (due to space and time constraints); I hope to make amends at my talk in the workshop.",
        "That is, bc(pmonths(sy/m,d)) where, as made precise in Table 1, pX \"sees only X\" (equating months with {Jan, Feb, .",
        ".",
        ".",
        "Dec} to make pmonths an instance of pX), while bc discards duplications, in accordance with the view that time passes only if there is change.",
        "Or rather: we observe time passing only if we observe a change in the contents of a box.",
        "The point of this example is that temporal granularity depends on the set X of what are observable – i.e., the boxables (we can put inside a box).",
        "That set X might be a TVC-model A or more generally the set E of events in an event structure (E, O, -<), as defined in (Kamp and Reyle, 1993).",
        "Example C Given a TVC-model A, let O and -< be binary relations on A given by for all (I, e) and (I', e') G A.",
        "Clearly, the triple (A, O, is an event structure – i.e., it satisfies axioms (A1) to (A5) in Table 2.",
        "But for finite A, the temporal structure the real line R confers on A is reduced considerably by the Russell-Wiener-Kamp derivation of time from event structures (RWK).",
        "Indeed, for the particular TVC-model A in Example A above, RWK yields exactly two temporal points, constituting the substring I x1, x2 I x2, x3 I of the string s (A) of length 5.",
        "As an RWK-moment from an event structure (E, O, ^) is required to be a ç maximal set of pairwise O-overlapping events, s (A).",
        "There is, however, a simple fix from (Fernando, 2011) that reconciles RWK not only with s(A) but also with block compression bc: enlarge the set A of events/boxables to include pre-and post-",
        "RWK discards the three boxes events, turning s(A) into",
        "Jan",
        "Feb",
        "Dec"
      ]
    },
    {
      "heading": "2. Strings encoding finite interval models",
      "text": [
        "I x3,post(x1),post(x2) I.",
        "Note that pre(xi) and post(xi) mark the past and future relative to x , injecting, in the terminology of (McTaggart, 1908), A-series ingredients for tense into the B-series relations -< and O (which is just -<-incomparability).",
        "For our present purposes, these additional ingredients allow us to represent all 13 relations between intervals x and x' in (Allen, 1983) by event structures over {x, x',pre(x),post(x')}, including the subinterval relation x during x' at the center of (Pratt-Hartmann, 2005), which strings out to",
        "It will prove useful in our account of TVC-formulas below to internalize the demarcation of x by pre(x) and post(x) when forming str(A, I).",
        "The remainder of the paper is organized as follows.",
        "Section 2 fills in details left out in our presentation of examples above, supplying the ingredient str(A, I) in the equivalence (t) A =/ p <j=> str(A, I) G C(p) .",
        "The equivalence itself is not established before section 3, where every TVC-formula i is mapped to a language C(p) via a translation p+ of p to a minor variant TVC+ of TVC.",
        "That variant is designed to smoothen the step in section 4 from TVC to other interval temporal logics which can be strung out similarly, and can, under natural assumptions, be made amenable to finite-state methods.",
        "This section forms the string str(A, I) in three stages described by the equation",
        "First, we combine A and I into the restriction A/ of A to pairs (J, e) such that J is a strict subset of I",
        "Second, we systematize the construction of the string s(A) in Example A.",
        "And third, we map a string s to a string s* that internalizes the borders externally marked by the pre-and post-events described in Example C. The map A – s (A) is the business of §2.1, and s – s* of §2.2.",
        "With an eye to interval temporal logics other than TVC, we will consider the full set Ivl(R) of (non-empty) intervals and write ] r1 , r2[ for the open interval where we allow r1 = – oo for intervals unbounded to the left and r2 = +oo for intervals unbounded to the right.",
        "The constructs ±oo are convenient for associating endpoints with every interval I, whether or not I is bounded.",
        "For I bounded to the left and to the right, we refer to real numbers r and r' as I's endpoints provided I ç [r, r'] and that I ç [r'', r'''] .",
        "We write Endpoints (I ) for the (non-empty) set consisting of I's endpoints (including possibly ±oo).",
        "Given a finite subset A ç Ivl(R) x E, we collect all endpoints of intervals in A in the finite set Endpoints(I) and construct s(A) in three steps.",
        "X1, pre(x2), pre(x3)",
        "X1,X2, pre(x3)",
        "X2, post(x1), pre(x3)",
        "X2, X3, post(x1)",
        "Step 1 Order Endpoints(A) into an increasing sequence r1 < r2 < • • • < rn.",
        "Step 2 Box the A-events into the sequence of 2n – 1 intervals (partitioning the closed interval [r1, rn]), forming the string s(A) =f bc(a1 ß1a2ß2 • • • an) .",
        "For example, revisiting Example A, where A is we have from Step 1, the 5 endpoints that block-compresses in Step 3 to the 5 boxes s(A)",
        "X1,X2 |X2 |X2,X3 |X3~ .",
        "Notice that if we turned the closed intervals in x1 and x3 to open intervals ]1, 4[ and ]9, 100[ respectively, then Step 2 gives which block-compresses to the 6 boxes",
        "Block compression accounts for part of the RussellWiener-Kamp constuction of moments from an event structure (RWK).",
        "We can neutralize the requirement of ç maximality on RWK moments by adding pre(xi), post(xi), turning, for instance, s(A) for A given by Example A into (which pa maps back to s (a)).",
        "In general, we say a string a1a2 • • • an is A-delimited if for all x g a and integers i from 1 to n,",
        "Clearly, for every string s g Pow(a)*, there is a unique a-delimited string s' such that Pa(s') = s. Let s± be that unique string.",
        "Notice thatpre(x) andpost(x) explicitly mark the borders of x in s±.",
        "For the application at hand to tvc, it is useful to internalize the borders within x so that, for instance in Example A, s(a)± becomes (with pre(xi) shifted to the right as begin-xi and post(xi) to the left as xi-end).",
        "The general idea is that given a string a1a2 • • • an g Pow(a)n and x g a that occurs at some ai, we add begin-x to the first box in which x appears, and x-end to the last box in which x appears.",
        "Or economizing a bit by picking out the first component I in a pair (I, e) g a, we form the demarcation (a1a2 • • • an)* of a1a2 • • • anby adding bgn-I to ai precisely if there is some e such that (I, e) g ai and either",
        "X2",
        "X2",
        "X2",
        "X3",
        "X1",
        "X1, X2",
        "X2",
        "X3",
        "Table 3: TVC+-formulas 9 from extended labels ß",
        "and adding I-end to ai precisely if there is some e such that (I, e) G ai and either i = n or (I, e) G ai+1 .",
        "Returning to Example A, we have which is str( A, I) for any interval I such that [1,100] C I."
      ]
    },
    {
      "heading": "3. TVC satisfaction in terms of strings",
      "text": [
        "This section defines the set C(p) of strings for the equivalence (t) by a translation to a language TVC+ that differs ever so slightly from TVC and its extension TVC+ formulas in TVC+ are closed under the modal operator ( e) , for every event-atom e G E. Essentially, (e)T says at least one e-transition is possible.",
        "In addition, TVC+ has a formula mult(e) stating that multiple (at least two) e-transitions are possible.",
        "That is, mult(e) amounts to the TVC+-formula where the TVC+-formula {e}p can be rephrased as (and T as the tautology -(mult(e) A -mult(e))).",
        "More formally, TVC+-formulas 9 are generated according to Table 3 without any explicit mention of the TVC-constructs {a}, {a}< and {a}>.",
        "Instead, a TVC+-formula i is translated to a TVC+-formula i + so that (t) holds with C(i ) equal to",
        "T(p+), where T(t£>) is a set of strings (defined below) characterizing satisfaction in TVC+.",
        "The translation i + commutes with the connectives common to TVC+ and TVC+ and as minimal-first and minimal-last subintervals are unique (Pratt-Hartmann, 2005, page 18), ({eg}<p)+ = (eg<)p+ for g g{/,1} ({eg}>p)+ =f (eg>)p+ for g g{/,1} .",
        "The alphabet from which we form strings will depend on a choice I, E of a set I ç Ivl(R) of real intervals, and a set E of event-atoms.",
        "Recalling that the demarcation s (A)* of a string s (A) contains occurrences of bgn-I and I-end, for each I G domain(A), let us associate with 1 the set so that a symbol (i.e., element of ) is a set with elements of the form ( I, e) , bgn-I and I-end.",
        "Notice that for any real interval I.",
        "To simplify notation, we will often drop the subscripts 1 and E, restoring them when we have occasion to vary them.",
        "This applies not only to the alphabet £ = £^# but also to the truth sets T(p) = Tie (p) below, with 1 fixed in the case of (t) to the full set of closed, bounded real intervals.",
        "and elsewhere,",
        "T+",
        "d=ef",
        "-(mult(e) A -mult(e))",
        "({e}i )+",
        "d=ef",
        "(e)p+ A -mult(e)",
        "([e]i )+",
        "d=ef",
        "-(e)-p+",
        "({e}<i )+",
        "d=ef",
        "(e<)p+ A -mult(e)",
        "({e}>i )+",
        "d=ef",
        "(e>)p+ A -mult(e)",
        "We start with mult(e), the truth set T(mult(e)) for which consists of strings properly containing at least two e-events.",
        "We first clarify what \"properly contain\" means, before turning to \"e-events.\"",
        "The notion of containment needed combines two ways a string can be part of another.",
        "The first involves deleting some (possibly null) prefix and suffix of a string.",
        "A factor of a string s is a string s' such that s = us'v for some strings u and v, in which case we write s fac s'",
        "A factor of s is proper if it is distinct from s. That is, writing s pfac s' to mean s' is a proper factor of where e is the null string.",
        "The relation pfac between strings corresponds roughly to that of proper inclusion D between intervals.",
        "The second notion of part between strings applies specifically to strings s and s' of sets: we say s subsumes s', and write s > s', if they are of the same length, and 5 holds componentwise between them n = m and a'i ç ai for (Fernando, 2004).",
        "Now, writing R; R' for the composition of binary relations R and R' in which the output of R is fed as input to R' and pfac with > for proper containment □ and summing over intervals I G 1,",
        "Di(e) = U D(e,I) .",
        "Dropping the subscripts on £ and D(e), we put into T(mult(e)) all strings in £* properly containing more than one string in D(e) (3s1,s2 G D(e)) s1 = s2 and s □ s1 and s □ s2.",
        "Moving on, we interpret negation - and conjunction A classically",
        "T((ß)9) =f R(ß)-1T(9) which brings us to the question of R(ß).",
        "Having defined T(mult(e)), we let R(e) be the restriction of proper containment □ to D(e)",
        "As for ef and e, some preliminary notation is useful.",
        "Given a language L, let us collect strings that have at most one factor in L in nmf (L) (for nonmultiple factor) belongs to L} and similarly,",
        "Finally,",
        "A routine induction on TVC+-formulas i establishes that for 1 equal to the set I of all closed, bounded real intervals, Proposition 1.",
        "For all finite A ç I x E and I G I,",
        "A =/ p 44 str(A, I) G Tt,e(p+) for every TVC+ formula p.",
        "When do two pairs A, I and A', I' of finite subsets A, A' of I x E and intervals I, I' G I satisfy the same TVC-formulas?",
        "A sufficient condition suggested by Proposition 1 is that str(A, I) is the same as str( A', I') up to renaming of intervals.",
        "More precisely, recalling that str(A, I) = s(A/)*, let us define A to be congruent with A', A = A', if there is a bijection between the intervals of A and A' that turns s(A) into s(A') where for any string s G Pow(domain(/) x E)*,",
        "I G domain(/) to /(I) .",
        "As a corollary to Proposition 1, we have Proposition 2.",
        "For all finite subsets A and A' of I x E and all I, I' G I, if A/ = A/, then for every TV C+ formula p,",
        "A |=/ p 44 A' =/, p .",
        "The significance of Proposition 2 is that it spells out the role the real line R plays in TVC – nothing apart from its contribution to the strings s(A).",
        "Instead of picking out particular intervals over R, it suffices to work with interval symbols, and to equate the subscript on our alphabet £ and truth relations T(p) to say, the set Z+ of positive integers 1, 2,....",
        "But lest we confuse TVC with Linear Temporal Logic, note that the usual order on Z+ does not shape the accessibility relations in TVC.",
        "We use Z+ here only because it is big enough to include any finite subset A of Ix E.",
        "Turning to entailments, we can reduce entailments to satisfiability as usual p – j,e p' 44 Ti,e(p A -p') = 0 .",
        "The basis of the decidability/complexity results in (Pratt-Hartmann, 2005) is a lemma (number 3 in page 20) that, for any TVC+-formula p, bounds the size of a minimal model of p. That is, as far as the satisfiability of a TVC+-formula p is concerned, we can reduce the subscript on T(p) to a finite set – or in the aforementioned reformulation, to a finite segment {1,2,..., n} of Z+.",
        "We shall consider an even more drastic approach in the next section.",
        "For now, notice that the shift from the real line R towards strings conforms with the so-called temporal semantics of natural language is not primarily to do with time at all.",
        "Instead, the formal devices we need are those related to representation of causality and goal-directed action.",
        "[p ix]",
        "The idea is to move away from some absolute (independently given) notion of time (be they points or intervals) to the changes and forces that make natural language temporal.",
        "/ is a bijection, and"
      ]
    },
    {
      "heading": "4. The regularity of TVC and beyond",
      "text": [
        "Having reformulated TVC in terms of strings, we proceed now to investigate the prospects for a finite-state approach to temporal semantics building on that reformulation.",
        "We start by bringing out the finite-state character of the connectives in TVC before considering some extensions.",
        "It is well-known that the family of regular languages is closed under complementation and intersection – operations interpreting negation and conjunction, respectively.",
        "The point of this subsection is to show that all the TVC+-connectives map regular languages and regular relations to regular languages and regular relations.",
        "A relation is regular if it is computed by a finite-state transducer.",
        "If 1 and E are both finite, then (e) is a regular language and □ is a regular relation.",
        "Writing RL for the relation { ( s, s ') G R s ' G L } , note that and that in general, if R and L are regular, then so is Rl.",
        "Moving on, the set of strings with at least two factors belonging to L is and the set of strings that have a proper factor belonging to L is [L] d=ef £+L£* + £*L£+ .",
        "It follows that we can capture the set of strings that properly contain at least two strings in L as Mult(L) d=ef [twice(L-)] .",
        "Note that",
        "T (mult(e)) = Mult(D(e)) and recalling R(ef ) and R(e') use nmf, nmf(L) = £* – twice(L) .",
        "R(ef ) is minFirst(D(e)-) where and R(ez) is minLast(D(e)-) where and uv = e and s' G L and s'v G nmf(L).",
        "and s R s'' .",
        "Proposition 3.",
        "IfL is a regularlanguage and R is a regularrelation, then",
        "(i) Mult(L), R-1L, and nmf(L) are regular languages",
        "(ii) Rl, minFirst(L), minLast(L), init(R) and fin(R) are regular relations.",
        "As is clear from the relations R(e), TVC makes do with the subinterval relation C and a \"quasi-guarded\" fragment at that (Pratt-Hartmann, 2005, page 5).",
        "To string out the interval temporal logic HS (Halpern and Shoham, 1991), the key is to combine A and I using some r G E to mark I (rather than forming A/) strr(A, I) d=f s(Ar[I])* .",
        "Let us agree that (i) a string a1 • • • an r-marks I if ( I, r) G in=1 ai, and that (ii) a string is r-marked if there is a unique I that it r-marks.",
        "For every r-marked string s, we define two strings: let s \\ r be the factor of s with bgn-I in its first box and I-end in its last, where s r-marks I ; and let s-r be ps (s \\ r).We can devise a finite-state transducer converting r-marked strings s into s-r, which we can then apply to evaluate an event-atom e as an HS-formula s g Tr(e) 44 (3s' G D(e)) s-r > s' .",
        "It is also not difficult to build finite-state transducers for the accessibility relations Rr(B),Rr(E), Rr(B), and Rr (E), showing that, as in TVC, the connectives in HS map regular languages and regular relations to regular languages and regular relations.",
        "The question for both TVC and HS is can we start with regular languages D(e)?",
        "As noted towards the end of section 3, one way is to reduce the set of intervals to a finite set.",
        "We close with an alternative.",
        "An alternative to D(e) = U/e 3 D(e, I) is to ask what it is that makes an e-event an e-event, and encode that answer in D(e).",
        "In and of itself, an interval [3,9] cannot make ([3,9], e) an e-event, because in and of itself, ([3,9],e) is not an e-event.",
        "([3,9],e) is an e-event only in a model A such that A([3, 9], e).",
        "Putting aside, let us suppose, for instance, that e were the event Pat swim a mile.",
        "We can represent the \"internal temporal contour\" of e through a parametrized temporal proposition / (r) with parameter r ranging over the reals in the unit interval [0, 1], and /(r) saying Pat has swum r^(a mile).",
        "Let D(e) where f abbreviates the temporal proposition (3r < 1) /(r) A Previously -/(r) .",
        "for TVC+-formulas p and extended labels ß.",
        "Notice that the temporal propositions /(r) and f are to be interpreted over points (as in LTL); as illustrated in Example B above, however, these points can be split by adding boxables.",
        "Be that as it may, it is straightforward to adjust our definition of a model A and strr (A, I) to accommodate such changes to D(e).",
        "Basing the truth sets T(9) on sets D(e) of e-denotations independent of a model A (Fernando, 2011a) is in line with the proposal of (Steedman, 2005) mentioned at the end of §3.4 above.",
        "/ (0)",
        "+",
        "/ (1)"
      ]
    }
  ]
}
