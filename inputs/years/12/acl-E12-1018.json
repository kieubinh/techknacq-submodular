{
  "info": {
    "authors": [
      "Marco Dinarelli",
      "Sophie Rosset"
    ],
    "book": "EACL",
    "id": "acl-E12-1018",
    "title": "Tree Representations in Probabilistic Models for Extended Named Entities Detection",
    "url": "https://aclweb.org/anthology/E12-1018",
    "year": 2012
  },
  "references": [
    "acl-A00-2018",
    "acl-C96-1079",
    "acl-D11-1031",
    "acl-J07-4004",
    "acl-J96-1002",
    "acl-J98-2004",
    "acl-J98-4004",
    "acl-L08-1368",
    "acl-P08-1109",
    "acl-P10-1052",
    "acl-P97-1003",
    "acl-W04-3223",
    "acl-W11-0411",
    "acl-W98-1115"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In this paper we deal with Named Entity Recognition (NER) on transcriptions of French broadcast data.",
        "Two aspects make the task more difficult with respect to previous NER tasks: i) named entities annotated used in this work have a tree structure, thus the task cannot be tackled as a sequence labelling task; ii) the data used are more noisy than data used for previous NER tasks.",
        "We approach the task in two steps, involving Conditional Random Fields and Probabilistic Context-Free Grammars, integrated in a single parsing algorithm.",
        "We analyse the effect of using several tree representations.",
        "Our system outperforms the best system of the evaluation campaign by a significant margin."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Named Entity Recognition is a traditinal task of the Natural Language Processing domain.",
        "The task aims at mapping words in a text into semantic classes, such like persons, organizations or localizations.",
        "While at first the NER task was quite simple, involving a limited number of classes (Gr-ishman and Sundheim, 1996), along the years the task complexity increased as more complex class taxonomies were defined (Sekine and No-bata, 2004).",
        "The interest in the task is related to its use in complex frameworks for (semantic) content extraction, such like Relation Extraction applications (Doddington et al. 2004).",
        "This work presents research on a Named Entity Recognition task defined with a new set of named entities.",
        "The characteristic of such set is in that named entities have a tree structure.",
        "As conce-quence the task cannot be tackled as a sequence labelling approach.",
        "Additionally, the use of noisy data like transcriptions of French broadcast data, makes the task very challenging for traditional NLP solutions.",
        "To deal with such problems, we adopt a two-steps approach, the first being realized with Conditional Random Fields (CRF) (Lafferty et al. 2001), the second with a Probabilistic Context-Free Grammar (PCFG) (Johnson, 1998).",
        "The motivations behind that are: ?",
        "Since the named entities have a tree structure, it is reasonable to use a solution coming from syntactic parsing.",
        "However preliminary experiments using such approaches gave poor results.",
        "?",
        "Despite the tree-structure of the entities, trees are not as complex as syntactic trees, thus, before designing an ad-hoc solution for the task, which require a remarkable effort and yet it doesn't guarantee better performances, we designed a solution providing good results and which required a limited development effort.",
        "?",
        "Conditional Random Fields are models robust to noisy data, like automatic transcriptions of ASR systems (Hahn et al. 2010), thus it is the best choice to deal with transcriptions of broadcast data.",
        "Once words have been annotated with basic entity constituents, the tree structure of named entities is simple enough to be reconstructed with relatively simple model like PCFG (Johnson, 1998).",
        "The two models are integrated in a single parsing algorithm.",
        "We analyze the effect of the use of",
        "data used in this work several tree representations, which result in different parsing models with different performances.",
        "We provide a detailed evaluation of our models.",
        "Results can be compared with those obtained in the evaluation campaign where the same data were used.",
        "Our system outperforms the best system of the evaluation campaign by a significant margin.",
        "The rest of the paper is structured as follows: in the next section we introduce the extended named entities used in this work, in section 3 we describe our two-steps algorithm for parsing entity trees, in section 4 we detail the second step of our approach based on syntactic parsing approaches, in particular we describe the different tree representations used in this work to encode entity trees in parsing models.",
        "In section 6 we describe and comment experiments, and finally, in section 7, we draw some conclusions."
      ]
    },
    {
      "heading": "2 Extended Named Entities",
      "text": [
        "The most important aspect of the NER task we investigated is provided by the tree structure of named entities.",
        "Examples of such entities are given in figure 1 and 2, where words have been remove for readability issues and are: (?90 persons are still present at Atambua.",
        "It's there that 3 employees of the High Conseil of United Nations for refugees have been killed yesterday morning?",
        "): 90 personnes toujours pre?sentes a` Atambua c?",
        "est la` qu?",
        "hier matin ont e?te?",
        "tue's 3 employe's du haut commissariat des Nations unies aux re?fugie's , le HCR Words realizing entities in figure 2 are in bold, and they correspond to the tree leaves in the picture.",
        "As we see in the figures, entities can have complex structures.",
        "Beyond the use of subtypes, like individual in person (to give pers.ind), or administrative in organization (to give org.adm), entities with more specific content can be constituents of more general entities to form tree structures, like name.first and",
        "tities of a whole sentence.",
        "Tree leaves, corresponding to sentence words have been removed to keep readability"
      ]
    },
    {
      "heading": "Quaero corpus",
      "text": [
        "name.last for pers.ind or val (for value) and object for amount.",
        "These named entities have been annotated on transcriptions of French broadcast news coming from several radio channels.",
        "The transcriptions constitute a corpus that has been split into training, development and evaluation sets.The evaluation set, in particular, is composed of two set of data, Broadcast News (BN in the table) and Broadcast Conversations (BC in the table).",
        "The evaluation of the models presented in this work is performed on the merge of the two data types.",
        "Some statistics of the corpus are reported in table 1 and 2.",
        "This set of named entities has been defined in order to provide more fine semantic information for entities found in the data, e.g. a person is better specified by first and last name, and is fully described in (Grouin, 2011) .",
        "In order to avoid confusion, entities that can be associated directly to words, like name.first, name.last, val and object, are called entity constituents, components or entity pre-terminals (as they are pre-terminals nodes in the trees).",
        "The other entities, like pers.ind or amount, are called entities or non-terminal entities, depending on the context."
      ]
    },
    {
      "heading": "3 Models Cascade for Extended Named Entities",
      "text": [
        "Since the task of Named Entity Recognition presented here cannot be modeled as sequence labelling and, as mentioned previously, an approach",
        "in this work: CRF plus PCFG coming from syntactic parsing to perform named entity annotation in ?one-shot?",
        "is not robust on the data used in this work, we adopt a two-steps.",
        "The first is designed to be robust to noisy data and is used to annotate entity components, while the second is used to parse complete entity trees and is based on a relatively simple model.",
        "Since we are dealing with noisy data, the hardest part of the task is indeed to annotate components on words.",
        "On the other hand, since entity trees are relatively simple, at least much simpler than syntactic trees, once entity components have been annotated in a first step, for the second step, a complex model is not required, which would also make the processing slower.",
        "Taking all these issues into account, the two steps of our system for tree-structured named entity recognition are performed as follows:",
        "1.",
        "A CRF model (Lafferty et al. 2001) is used to annotate components on words.",
        "2.",
        "A PCFG model (Johnson, 1998) is used",
        "to parse complete entity trees upon components, i.e. using components annotated by CRF as starting point.",
        "This processing schema is depicted in figure 3.",
        "Conditional Random Fields are described shortly in the next subsection.",
        "PCFG models, constituting the main part of this work together with the analysis over tree representations, is described more in details in the next sections."
      ]
    },
    {
      "heading": "3.1 Conditional Random Fields",
      "text": [
        "CRFs are particularly suitable for sequence labelling tasks (Lafferty et al. 2001).",
        "Beyond the possibility to include a huge number of features using the same framework as Maximum Entropy models (Berger et al. 1996), CRF models encode global conditional probabilities normalized at sentence level.",
        "Given a sequence of N words WN1 = w1, ..., wN and its corresponding components sequence EN1 = e1, ..., eN , CRF trains the conditional probabilities",
        "n?2) are the feature functions capturing dependencies of entities and words.",
        "Z is the partition function:",
        "which ensures that probabilities sum up to one.",
        "e?n?1 and e?n are components for previous and cur",
        "n?2), i.e. the set of active feature functions at current position in the sequence.",
        "In the last few years different CRF implementations have been realized.",
        "The implementation we refer in this work is the one described in (Lavergne et al. 2010), which optimize the following objective function:",
        "??",
        "?1 and ??",
        "?22 are the l1 and l2 regulariz-ers (Riezler and Vasserman, 2004), and together in a linear combination implement the elastic net regularizer (Zou and Hastie, 2005).",
        "As mentioned in (Lavergne et al. 2010), this kind of regulariz-ers are very effective for feature selection at training time, which is a very good point when dealing with noisy data and big set of features."
      ]
    },
    {
      "heading": "4 Models for Parsing Trees",
      "text": [
        "The models used in this work for parsing entity trees refer to the models described in (Johnson, 1998), in (Charniak, 1997; Caraballo and Charniak, 1997) and (Charniak et al. 1998), and which constitutes the basis of the maximum entropy model for parsing described in (Charniak, 2000).",
        "A similar lexicalized model has been proposed also by Collins (Collins, 1997).",
        "All these models are based on a PCFG trained from data and used in a chart parsing algorithm to find the best parse for the given input.",
        "The PCFG model of (Johnson, 1998) is made of rules of the form:",
        "?",
        "Xi ?",
        "XjXk ?",
        "Xi ?",
        "w",
        "where X are non-terminal entities and w are terminal symbols (words in our case).1 The probability associated to these rules are:",
        "The models described in (Charniak, 1997; Caraballo and Charniak, 1997) encode probabilities involving more information, such as head words.",
        "In order to have a PCFG model made of rules with their associated probabilities, we extract rules from the entity trees of our corpus.",
        "This processing is straightforward, for example from the tree depicted in figure 2, the following rules are extracted: S?",
        "amount loc.adm.town time.dat.rel amount amount?",
        "val object time.date.rel?",
        "name time-modifier object?",
        "func.coll func.coll?",
        "kind org.adm org.adm?",
        "name Using counts of these rules we then compute maximum likelihood probabilities of the Right Hand Side (RHS) of the rule given its Left Hand Side (LHS).",
        "Also binarization of rules, applied to 1These rules are actually in Chomsky Normal Form, i.e. unary or binary rules only.",
        "A PCFG, in general, can have any rule, however, the algorithm we are discussing convert the PCFG rules into Chomsky Normal Form, thus for simplicity we provide directly such formulation.",
        "have all rules in the form of 4 and 5, is straightforward and can be done with simple algorithms not discussed here."
      ]
    },
    {
      "heading": "4.1 Tree Representations for Extended",
      "text": [
        "Named Entities As discussed in (Johnson, 1998), an important point for a parsing algorithm is the representation of trees being parsed.",
        "Changing the tree representation can change significantly the performances of the parser.",
        "Since there is a large difference between entity trees used in this work and syntactic trees, from both meaning and structure point of view, it is worth performing an analysis with the aim of finding the most suitable representation for our task.",
        "In order to perform this analysis, we start from a named entity annotated on the words de notre president , M. Nicolas Sarkozy(of our president, Mr. Nicolas Sarkozy).",
        "The corresponding named entity is shown in figure 4.",
        "As decided in the annotation guidelines, fillers can be part of a named entity.",
        "This can happen for complex named entities involving several words.",
        "The representation shown in figure 4 is the default representation and will be referred to as baseline.",
        "A problem created by this representation is the fact that fillers are present also outside entities.",
        "Fillers of named entities should be, in principle, distinguished from any other filler, since they may be informative to discriminate entities.",
        "Following this intuition, we designed two different representations where entity fillers are con",
        "textualized so that to be distinguished from the other fillers.",
        "In the first representation we give to the filler the same label of the parent node, while in the second representation we use a concatenation of the filler and the label of the parent node.",
        "These two representations are shown in figure 5 and 6, respectively.",
        "The first one will be referred to as filler-parent, while the second will be referred as parent-context.",
        "A problem that may be introduced by the first representation is that some entities that originally were used only for non-terminal entities will appear also as components, i.e. entities annotated on words.",
        "This may introduce some ambiguity.",
        "Another possible contextualization can be to annotate each node with the label of the parent node.",
        "This representation is shown in figure 7 and will be referred to as parent-node.",
        "Intuitively, this representation is effective since entities annotated directly on words provide also the entity of the parent node.",
        "However this representation increases drastically the number of entities, in particular the number of components, which in our case are the set of labels to be learned by the CRF model.",
        "For the same reason this representation produces more rigid models, since label sequences vary widely and thus is not likely to match sequences not seen in the training data.",
        "Finally, another interesting tree representation is a variation of the parent-node tree, where entity fillers are only distinguished from fillers not in an entity, using the label ne-filler, but they are not contextualized with entity information.",
        "This representation is shown in figure 8 and it will be Figure 8: Parent-node-filler tree representations used in the PCFG parsing model referred to as parent-node-filler.",
        "This representation is a good trade-off between contextual information and rigidity, by still representing entities as concatenation of labels, while using a common special label for entity fillers.",
        "This allows to keep lower the number of entities annotated on words, i.e. components.",
        "Using different tree representations affects both the structure and the performance of the parsing model.",
        "The structure is described in the next section, the performance in the evaluation section."
      ]
    },
    {
      "heading": "4.2 Structure of the Model",
      "text": [
        "Lexicalized models for syntactic parsing described in (Charniak, 2000; Charniak et al. 1998) and (Collins, 1997), integrate more information than what is used in equations 4 and 5.",
        "Considering a particular node in the entity tree, not including terminals, the information used is:",
        "?",
        "s: the head word of the node, i.e. the most important word of the chunk covered by the current node ?",
        "h: the head word of the parent node ?",
        "t: the entity tag of the current node ?",
        "l: the entity tag of the parent node",
        "The head word of the parent node is defined percolating head words from children nodes to parent nodes, giving the priority to verbs.",
        "They can be found using automatic approaches based on words and entity tag co-occurrence or mutual information.",
        "Using this information, the model described in (Charniak et al. 1998) is P (s|h, t, l).",
        "This model being conditioned on several pieces of information, it can be affected by data sparsity problems.",
        "Thus, the model is actually approximated as an interpolation of probabilities:",
        "where ?i, i = 1, ..., 4, are parameters of the model to be tuned, and ch is the cluster of head words for a given entity tag t. With such model, when not all pieces of information are available to estimate reliably the probability with more conditioning, the model can still provide a probability with terms conditioned with less information.",
        "The use of head words and their percolation over the tree is called lexicalization.",
        "The goal of tree lexicalization is to add lexical information all over the tree.",
        "This way the probability of all rules can be conditioned also on lexical information, allowing to define the probabilities P (s|h, t, l) and P (s|ch, t, l).",
        "Tree lexicalization reflects the characteristics of syntactic parsing, for which the models described in (Charniak, 2000; Charniak et al. 1998) and (Collins, 1997) were defined.",
        "Head words are very informative since they constitute keywords instantiating labels, regardless if they are syntactic constituents or named entities.",
        "However, for named entity recognition it doesn't make sense to give priority to verbs when percolating head words over the tree, even more because head words of named entities are most of the time nouns.",
        "Moreover, it doesn't make sense to give priority to the head word of a particular entity with respect to the others, all entities in a sentence have the same importance.",
        "Intuitively, lexicalization of entity trees is not straightforward as lexicalization of syntactic trees.",
        "At the same time, using not lexicalized trees doesn't make sense with models like 6, since all the terms involve lexical information.",
        "Instead, we can use the model of (Johnson, 1998), which define the probability of a tree ?",
        "as:",
        "here the RHS of rules has been generalized with ?, representing RHS of both unary and binary rules 4 and 5.",
        "C?",
        "(X ?",
        "?)",
        "is the number of times the rule X ?",
        "?",
        "appears in the tree ?",
        ".",
        "The model 7 is instantiated when using tree representations shown in Fig. 4, 5 and 6.",
        "When using representations given in Fig. 7 and 8, the model is:",
        "where l is the entity label of the parent node.",
        "Although non-lexicalized models like 7 and 8 have shown less effective for syntactic parsing than their lexicalized couter-parts, there are evidences showing that they can be effective in our task.",
        "With reference to figure 4, considering the entity pers.ind instantiated by Nicolas Sarkozy, our algorithm detects first name.first for Nicolas and name.last for Sarkozy using the CRF model.",
        "As mentioned earlier, once the CRF model has detected components, since entity trees have not a complex structure with respect to syntactic trees, even a simple model like the one in equation 7 or 8 is effective for entity tree parsing.",
        "For example, once name.first and name.last have been detected by CRF, pers.ind is the only entity having name.first and name.last as children.",
        "Ambiguities, like for example for kind or qualifier, which can appear in many entities, can affect the model 7, but they are overcome by the model 8, taking the entity tag of the parent node into account.",
        "Moreover, the use of CRF allows to include in the model much more features than the lexicalized model in equation 6.",
        "Using features like word prefixes (P), suffixes (S), capitalization (C), morpho-syntactic features (MS) and other features indicated as F2, the CRF model encodes the conditional probability:",
        "where w is an input word and t is the corresponding component.",
        "The probability of the CRF model, used in the first step to tag input words with components, is combined with the probability of the PCFG model, used to parse entity trees starting from components.",
        "Thus the structure of our model is:",
        "depending if we are using the tree representation given in figure 4, 5 and 6 or in figure 7 and 8, respectively.",
        "A scale factor could be used to combine the two scores, but this is optional as CRFs can provide normalized posterior probabilities.",
        "2The set of features used in the CRF model will be described in more details in the evaluation section."
      ]
    },
    {
      "heading": "5 Related Work",
      "text": [
        "While the models used for named entity detection and the set of named entities defined along the years have been discussed in the introduction and in section 2, since CRFs and models for parsing constitute the main issue in our work, we discuss some important models here.",
        "Beyond the models for parsing discussed in section 4, together with motivations for using or not in our work, another important model for syntactic parsing has been proposed in (Ratnaparkhi, 1999).",
        "Such model is made of four Maximum Entropy models used in cascade for parsing at different stages.",
        "Also this model makes use of head words, like those described in section 4, thus the same considerations hold, moreover it seems quite complex for real applications, as it involves the use of four different models together.",
        "The models described in (Johnson, 1998), (Charniak, 1997; Caraballo and Charniak, 1997), (Charniak et al. 1998), (Charniak, 2000), (Collins, 1997) and (Ratnaparkhi, 1999), constitute the main individual models proposed for constituent-based syntactic parsing.",
        "Later other approaches based on models combination have been proposed, like e.g. the reranking approach described in (Collins and Koo, 2005), among many, and also evolutions or improvements of these models.",
        "More recently, approaches based on log-linear models have been proposed (Clark and Curran, 2007; Finkel et al. 2008) for parsing, called also ?Tree CRF?, using also different training criteria (Auli and Lopez, 2011).",
        "Using such models in our work has basically two problems: one related to scaling issues, since our data present a large number of labels, which makes CRF training problematic, even more when using ?Tree CRF?",
        "; another problem is related to the difference between syntactic parsing and named entity detection tasks, as mentioned in subsection 4.2.",
        "Adapting ?Tree CRF?",
        "to our task is thus a quite complex work, it constitutes an entire work by itself, we leave it as feature work.",
        "Concerning linear-chain CRF models, the one we use is a state-of-the-art implementation (Lavergne et al. 2010), as it implements the most effective optimization algorithms as well as state-of-the-art regularizers (see subsection 3.1).",
        "Some improvement of linear-chain CRF have been proposed, trying to integrate higher order target-side features (Tang et al. 2006).",
        "An integration of the same kind of features has been tried also in the model used in this work, without giving significant improvements, but making model training much harder.",
        "Thus, this direction has not been further investigated."
      ]
    },
    {
      "heading": "6 Evaluation",
      "text": [
        "In this section we describe experiments performed to evaluate our models.",
        "We first describe the settings used for the two models involved in the entity tree parsing, and then describe and comment the results obtained on the test corpus."
      ]
    },
    {
      "heading": "6.1 Settings",
      "text": [
        "The CRF implementation used in this work is described in (Lavergne et al. 2010), named wapiti.3 We didn't optimize parameters ?1 and ?2 of the elastic net (see section 3.1), although this improves significantly the performances and leads to more compact models, default values lead in most cases to very accurate models.",
        "We used a wide set of features in CRF models, in a window of [?2,+2] around the target word: ?",
        "A set of standard features like word prefixes and suffixes of length from 1 to 6, plus some Yes/No features like Does the word start with capital letter?, etc.",
        "?",
        "Morpho-syntactic features extracted from the output of the tool tagger (Allauzen and Bonneau-Maynard, 2008) ?",
        "Features extracted from the output of the semantic analyzer (Rosset et al. (2009)) provided by the tool WMatch (Galibert, 2009).",
        "This analysis morpho-syntactic information as well as semantic information at the same level of named entities.",
        "Using two different sets of morpho-syntactic features results in more effective models, as they create a kind of agreement for a given word in case of match.",
        "Concerning the PCFG model, grammars, tree binarization and the different tree representations are created with our own scripts, while entity tree parsing is performed with the chart parsing algorithm described"
      ]
    },
    {
      "heading": "6.2 Evaluation Metrics",
      "text": [
        "All results are expressed in terms of Slot Error Rate (SER) (Makhoul et al. 1999) which has a similar definition of word error rate for ASR systems, with the difference that substitution errors are split in three types: i) correct entity type with wrong segmentation; ii) wrong entity type with correct segmentation; iii) wrong entity type with wrong segmentation; here, i) and ii) are given half points, while iii), as well as insertion and deletion errors, are given full points.",
        "Moreover, results are given using the well known F1 measure, defined as a function of precision and recall."
      ]
    },
    {
      "heading": "6.3 Results",
      "text": [
        "In this section we provide evaluations of the models described in this work, based on combination of CRF and PCFG and using different tree representations of named entity trees.",
        "As a first evaluation, we describe some statistics computed from the CRF and PCFG models using the tree representations.",
        "Such statistics provide interesting clues of how difficult is learning the task and which performance we can expect from the model.",
        "Statistics for this evaluation are presented in table 3.",
        "Rows corresponds to the different tree representations described in this work, while in the columns we show the number of features and labels for the CRF models (# features and # labels), and the number of rules for PCFG models (# rules).",
        "As we can see from the table, the number of rules is the same for the tree representations baseline, filler-parent and parent-context, and for the representations parent-node and parent-node-filler.",
        "This is the consequence of the contextualization applied by the latter representations, i.e. parent-node and parent-node-filler create several different labels depending from the context, thus the corresponding grammar"
      ]
    },
    {
      "heading": "CRF and PCFG",
      "text": [
        "will have more rules.",
        "For example, the rule pers.ind?",
        "name.first name.last can appear as it is or contextualized with func.ind, like in figure 8.",
        "In contrast the other tree representations modify only fillers, thus the number of rules is not affected.",
        "Concerning CRF models, as shown in table 3, the use of the different tree representations results in an increasing number of labels to be learned by CRF.",
        "This aspect is quite critical in CRF learning, as training time is exponential in the number of labels.",
        "Indeed, the most complex models, obtained with parent-node and parent-node-filler tree representations, took roughly 8 days for training.",
        "Additionally, increasing the number of labels can create data sparseness problems, however this problem doesn't seem to arise in our case since, apart the baseline model which has quite less features, all the others have approximately the same number of features, meaning that there are actually enough data to learn the models, regardless the number of labels.",
        "In this section we evaluate the models in terms of the evaluation metrics described in previous section, Slot Error Rate (SER) and F1 measure.",
        "In order to evaluate PCFG models alone, we performed entity tree parsing using as input reference transcriptions, i.e. manual transcriptions and reference component annotations taken from development and test sets.",
        "This can be considered a kind of oracle evaluations and provides us an upper bound of the performance of the PCFG models.",
        "Results for this evaluation are reported in",
        "more contextualization in the trees results in more accurate models, the simplest model, baseline, has the worst oracle performance, filler-parent and parent-context models, adding similar contextualization information, have very similar oracle performances.",
        "Same line of reasoning applies to models parent-node and parent-node-filler, which also add similar contextualization and have very similar oracle predictions.",
        "These last two models have also the best absolute oracle performances.",
        "However, adding more contextualization in the trees results also in more rigid models, the fact that models are robust on reference transcriptions and based on reference component annotations, doesn't imply a proportional robustness on component sequences generated by CRF models.",
        "This intuition is confirmed from results reported in table 5, where a real evaluation of our models is reported, using this time CRF output components as input to PCFG models, to parse entity trees.",
        "The results reported in table 5 show in particular that models using baseline, filler-parent and parent-context tree representations have similar performances, especially on test set.",
        "Models characterized by parent-node and parent-node-filler tree representations have indeed the best performances, although the gain with respect to the other models is not as much as it could be expected given the difference in the oracle performances discussed above.",
        "In particular the best absolute performance is obtained with the model parent-node-filler.",
        "As we mentioned in subsection 4.1, this model represents the best trade-off between rigidity and accuracy using the same label for all entity fillers, but still distinguishing between fillers found in entity structures and other fillers found in words not instantiating any entity."
      ]
    },
    {
      "heading": "6.3.3 Comparison with Official Results",
      "text": [
        "As a final evaluation of our models, we provide a comparison of official results obtained at the 2011 evaluation campaign of extended named entity recognition (Galibert et al. 2011; 2) Results are reported in table 6, where the other two participants to the campaign are indicated as P1 and P2.",
        "These two participants P1 and P2, used a system based on CRF, and rules for deep syntactic analysis, respectively.",
        "In particular, P2 obtained superior performances in previous evaluation campaign on named entity recognition.",
        "The system we proposed at the evaluation campaign used a parent-context tree representation.",
        "The results obtained at the evaluation campaign are in the first three lines of Table 6.",
        "We compare such results with those obtained with the parent-node and parent-node-filler tree representations, reported in the last two rows of the same table.",
        "As we can see, the new tree representations described in this work allow to achieve the best absolute performances."
      ]
    },
    {
      "heading": "7 Conclusions",
      "text": [
        "In this paper we have presented a Named Entity Recognition system dealing with extended named entities with a tree structure.",
        "Given such representation of named entities, the task cannot be mod-eled as a sequence labelling approach.",
        "We thus proposed a two-steps system based on CRF and PCFG.",
        "CRF annotate entity components directly on words, while PCFG apply parsing techniques to predict the whole entity tree.",
        "We motivated our choice by showing that it is not effective to apply techniques used widely for syntactic parsing, like for example tree lexicalization.",
        "We presented an analysis of different tree representations for PCFG, which affect significantly parsing performances.",
        "We provided and discussed a detailed evaluation of all the models obtained by combining CRF and PCFG with the different tree representation proposed.",
        "Our combined models result in better performances with respect to other models proposed at the official evaluation campaign, as well as our previous model used also at the evaluation campaign."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "This work has been funded by the project Quaero, under the program Oseo, French State agency for innovation."
      ]
    }
  ]
}
