{
  "info": {
    "authors": [
      "Pierre Lison"
    ],
    "book": "Proceedings of the 13th Annual Meeting of the Special Interest Group on Discourse and Dialogue",
    "id": "acl-W12-1625",
    "title": "Probabilistic Dialogue Models with Prior Domain Knowledge",
    "url": "https://aclweb.org/anthology/W12-1625",
    "year": 2012
  },
  "references": [
    "acl-J00-3003",
    "acl-J08-4002",
    "acl-N04-3002",
    "acl-N07-2038",
    "acl-N07-4014",
    "acl-W03-2123",
    "acl-W10-4336",
    "acl-W10-4353"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Probabilistic models such as Bayesian Networks are now in widespread use in spoken dialogue systems, but their scalability to complex interaction domains remains a challenge.",
        "One central limitation is that the state space of such models grows exponentially with the problem size, which makes parameter estimation increasingly difficult, especially for domains where only limited training data is available.",
        "In this paper, we show how to capture the underlying structure of a dialogue domain in terms of probabilistic rules operating on the dialogue state.",
        "The probabilistic rules are associated with a small, compact set of parameters that can be directly estimated from data.",
        "We argue that the introduction of this abstraction mechanism yields probabilistic models that are easier to learn and generalise better than their unstructured counterparts.",
        "We empirically demonstrate the benefits of such an approach learning a dialogue policy for a human-robot interaction domain based on a Wizard-of-Oz data set."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Spoken dialogue systems increasingly rely on probabilistic models at various stages of their pipeline.",
        "Statistical methods have notably been applied to tasks such as disfluency detection (Lease et al., 2006), semantic parsing (Erdogan et al., 2002; He and Young, 2005), dialogue act recognition (Stol-cke et al., 2000; Lan et al., 2008), dialogue management (Frampton and Lemon, 2009; Young et al., 2010), natural language generation (Oh and Rud-nicky, 2002; Lemon, 2011) and speech synthesis (Zen et al., 2009).",
        "There are two compelling reasons for this growing interest in statistical approaches: first, spoken dialogue is pervaded with noise and uncertainty (due to e.g. speech recognition errors, linguistic and pragmatic ambiguities, and unknown user intentions), which must be dealt with at all processing stages.",
        "Second, a decisive advantage of probabilistic models lies in their ability to be automatically optimised from data, enabling statistically-based dialogue systems to exhibit conversational behaviours that are often more robust, flexible and adaptive than hand-crafted systems (Lemon and Pietquin, 2007).",
        "Despite their success, the use of probabilistic models also presents a number of challenges.",
        "The most pressing issue is the paucity of appropriate data sets.",
        "Stochastic models often require large amounts of training data to estimate their parameters ?",
        "either directly (Henderson et al., 2008) or indirectly by way of a user simulator (Schatzmann et al., 2007; Cuaya?huitl et al., 2010).",
        "Unfortunately, real interaction data is scarce, expensive to acquire, and difficult to transfer from one domain to another.",
        "Moreover, many dialogue domains are inherently open-ended, which means they are not limited to the completion of a single task with predefined features but have to represent a varying number of tasks, complex user models and a rich, dynamic environment.",
        "Examples of such domains include human-robot interaction (Kruijff et al., 2010), cognitive assistants and companions (Nguyen, 2005; Cavazza et al., 2010), and tutoring systems (Litman and Silliman, 2004; Eskenazi, 2009).",
        "In such settings, the dialogue system might need to track a large number of variables in the course of the interaction, which quickly leads to a combinatorial explosion of the state space.",
        "There is an extensive body of work in the machine",
        "learning and planning literature that shows how to address this issue by relying on more expressive representations, able to capture relevant aspects of the problem structure in a compact manner.",
        "By taking advantage of hierarchical or relational abstractions, system developers can leverage their domain knowledge to yield probabilistic models that are easier to learn (due to a reduced number of parameters) and more efficient to use (since the structure can be exploited by the inference algorithm).",
        "The contributions of this paper are twofold.",
        "We first present a new framework for encoding prior knowledge in probabilistic dialogue models, based on the concept of probabilistic rules.",
        "The framework is very general and can accommodate a wide spectrum of domains and learning tasks, from fully statistical models with virtually no prior knowledge to manually designed models with only a handful of parameters.",
        "Second, we demonstrate how this framework can be exploited to learn stochastic dialogue policies with limited data sets using a Bayesian learning approach.",
        "The following pages spell out the approach in more detail.",
        "In Section 2, we provide the general background on probabilistic models and their use in spoken dialogue systems.",
        "We describe in Section 3 how to encode such models via probabilistic rules and estimate their parameters from data.",
        "In Section 4, we detail the empirical evaluation of our approach in a human-robot interaction domain, given small amounts of data collected in Wizard-of-Oz experiments.",
        "Finally, we discuss and compare our approach to related work in Section 5."
      ]
    },
    {
      "heading": "2 Background",
      "text": []
    },
    {
      "heading": "2.1 Bayesian Networks",
      "text": [
        "The probabilistic models used in this paper are expressed as directed graphical models, also known as Bayesian Networks.",
        "Let X1...Xn denote a set of random variables.",
        "Each variable Xi is associated with a range of mutually exclusive values.",
        "In dialogue models, this range is often discrete and can be explicitly enumerated: V al(Xi) = {x1i , ..., xmi }.",
        "A Bayesian Network defines the joint probability distribution P (X1...Xn) via conditional dependencies between variables, using a directed graph where each node corresponds to a variable Xi.",
        "Each",
        "The double circles denote a deterministic node.",
        "As an example, the query P (A|D=T) gives the result",
        "edge Xi ?",
        "Xj denotes a conditional dependence between the two nodes, in which case Xi is said to be a parent of Xj .",
        "A conditional probability distribution P (Xi|Par(Xi)) is associated with each node Xi, where Par(Xi) denotes the parents of Xi.",
        "Conditional probability distributions (CPDs) can be defined in various ways, from lookup tables to deterministic distributions (Koller and Friedman, 2009).",
        "Together with the directed graph, the CPDs fully determine the joint probability distribution of the Bayesian Network.",
        "The network can be used for inference by querying the distribution of a subset of variables, often given some additional evidence, as illustrated by the example in Figure 1."
      ]
    },
    {
      "heading": "2.2 Dialogue Models",
      "text": [
        "A dialogue state s is usually decomposed into a set of state variables s = {s1, ...sn} representing relevant features of the interaction.",
        "For instance, the state variables for a human-robot interaction scenario might be composed of tasks to accomplish, the interaction history, past events, as well as objects, spatial locations and agents in the environment.",
        "Given the uncertainty present in spoken dialogue, many variables are only partially observable.",
        "We thus encode our knowledge of the current state in a distribution b(s) = P (s1, ..., sn) called the belief state, which can be conveniently expressed as a Bayesian Network (Thomson and Young, 2010).",
        "This belief state b is regularly updated as new infor",
        "mation becomes available.",
        "As illustrated in Figure 2, the whole system pipeline can be formalised in terms of inference steps over this belief state: 1.",
        "Upon detection of a new utterance, the speech recogniser generates the N-best list of recognition hypotheses u?u = P (uu|o); 2.",
        "Speech understanding then searches for the most likely dialogue act(s) realised in the utterance: a?u = P (au|u?u,b); 3.",
        "The belief state is updated with the new interpreted dialogue act: b?",
        "= P (s?|a?u,b); 4.",
        "Based on the updated belief state, the action selection searches for the optimal system action to perform: a?m = arg maxam Q(am|b); 5.",
        "The system action is then realised in an utterance um, which is again framed as a search for u?m = arg maxum Q(um|b, am); 6.",
        "Finally, the dialogue state is re-updated given",
        "the system action: b?",
        "= P (s?|am,b).",
        "The models defined above use P (x|b) as a notational convenience for?si?V al(s) P (x|s=si)b(si).",
        "The same holds for the estimated values u?u and a?u:"
      ]
    },
    {
      "heading": "3 Approach",
      "text": [
        "The starting point of our approach is the observation that dialogue often exhibits a fair amount of internal structure.",
        "This structure can take several forms.",
        "We can first note that the probability or utility of a given output variable often depends on only a small subset of input variables, although the number and identity of these variables might naturally differ from action to action.",
        "The state variable encoding the physical location of a mobile robot is for instance relevant for answering a user requesting its location, but not for responding to a greeting act.",
        "Moreover, the values of the dependent variables can often be grouped into partitions yielding similar outcomes, thereby reducing the problem dimensionality.",
        "The partitions can generally be expressed via logical conditions on the variable values.",
        "As illustration, consider a dialogue where the user can ask yes/no questions pertaining to the colour of specific objects (e.g. ?Is the ball red??).",
        "The utility of the system action Confirm depends on two variables: the user dialogue act, for instance au= VerifyColour(ball, red), and the object colour, such as ball.colour = blue.",
        "The combination of these two variables can take a wide range of values, but the utility of Confirm only depends on two partitions: (VerifyColour(x, y) ?",
        "x.colour=y), in which case the utility is positive, and (VerifyColour(x, y) ?",
        "x.colour 6=y), in which case it is negative.",
        "We outline below a generic description framework for expressing this internal structure, based on the concept of probabilistic rules.",
        "The rules express the distribution of a dialogue model in terms of structured mappings between input and output variables.",
        "At runtime, the rules are then combined to perform inference on the dialogue state, i.e. to compute the distribution of the output variables given the input variables.",
        "As we shall see, this is done by instantiating the rules and their associated variables to construct an equivalent Bayesian Network used for inference.",
        "The probabilistic rules thus function as high-level templates for a classical probabilistic model.",
        "The major benefit of this approach is that the rule structure is described in exponentially fewer parameters than its plain counterpart, and is thus much easier to learn and to generalise to unseen data."
      ]
    },
    {
      "heading": "3.1 Definitions",
      "text": [
        "A probabilistic rule is defined as a condition-effect mapping, where each condition is mapped to a set of alternative effects, each being assigned a distinct",
        "probability.",
        "The list of conditions is ordered and takes the form of a ?if ... then ... else?",
        "case expressing the distribution of the output variables depending on the inputs.",
        "Formally, a rule r is defined as an ordered list of cases ?c1, ...cn?, where each case ci is associated with a condition ?i and a distribution over stochastic effects {(?1i , p1i ), ..., (?ki , pki )}, where ?ji is a stochastic effect and probability pji = P (?ji |?i), where p1...ki satisfy the usual probability axioms.",
        "The rule reads as such: if (?1) then",
        "A final else case is implicitly added to the bottom of the list, and holds if no other condition applies.",
        "If not overridden, the default effect associated to this last case is void ?",
        "i.e. it causes no changes to the distribution over the output variables.",
        "Conditions The rule conditions are expressed as logical formulae grounded in the input variables.",
        "They can be arbitrarily complex formulae connected by conjunction, disjunction and negation.",
        "The conditions on the input variables can be seen as providing a compact partitioning of the state space to mitigate the dimensionality curse.",
        "Without this partitioning in alternative conditions, a rule ranging over m variables each of size n would need to enumerate nm possible assignments.",
        "The partitioning with conditions reduces this number to p mutually exclusive partitions, where p is usually small."
      ]
    },
    {
      "heading": "Effects",
      "text": [
        "The rule effects are defined similarly: given a condition holding on a set of input variables, the associated effects define specific value assignments for the output variables.",
        "The effects can be limited to a single variable or range over several output variables.",
        "For action selection, effects can also take the form of assignments of utility values for a particular action, i.e. Q(am = x) = y, where y is the scalar value for the utility of action x.",
        "Each effect is assigned a probability, and several alternative stochastic effects can be defined for the same case.",
        "If a unique effect is specified, it is then implicitly assumed to hold with probability 1.0.",
        "The probabilities of stochastic effects and the action utilities are treated as parameters, which can be either hand-coded or estimated from data."
      ]
    },
    {
      "heading": "Example",
      "text": [
        "The rules r1 and r2 below express the utilities of two actions: the physical action ExecuteMov(X) (with X representing the movement type), and the clarification request AskRepeat.",
        "Rule r1 specifies that, if the last user action au is equal to RequestMov(X) (i.e. requesting the robot to execute a particular movement X), the utility associated with ExecuteMov(X) is equal to the parameter ?1r1 .",
        "Similarly, the rule r2 specifies the utility of the clarification request AskRepeat, provided that the last user action au is assigned to a value (i.e. is different than ?).",
        "Two cases are distinguished in r2, depending on whether the previous system action was already AskRepeat.",
        "This partitioning enables us to assign a distinct utility to the clarification request if one follows the other, in order to e.g. penalise for the repeated clarification.",
        "As illustration, assume that ?",
        "(1)r1 = 2.0, ?",
        "(1)r2 = 1.3, ?",
        "(2)r2 = 1.1, and that the belief state contains astate variable au with the following distribution:",
        "The optimal system action in this case is therefore ExecuteMov(LiftBothArms) with utility 1.4, followed by AskRepeat with utility 1.17, and ExecuteMov(LiftLeftArm) with utility 0.4."
      ]
    },
    {
      "heading": "3.2 Inference",
      "text": [
        "Given a belief state b, we perform inference by constructing a Bayesian Network corresponding to the application of the rules.",
        "Algorithm 1 describes the",
        "construction procedure, which operates as follows: 1.",
        "We initialise the Bayesian Network with the variables in the belief state; 2.",
        "For every rule r in the rule set, we create a condition node ?r and include the conditional dependencies with its input variables; 3.",
        "We create an effect node ?r conditioned on ?r, expressing the possible effects of the rule; 4.",
        "Finally, we create the (chance or value) nodes corresponding to the output variables of the",
        "rule, as specified in the effects.",
        "Rule r2 described in the previous section would for instance be translated into a condition node ?r2 with 3 values (corresponding to the specified conditions and a default else condition if none applies) and an effect node ?r2 also containing 3 values (the two specified effects and a void effect associated with the default condition).",
        "Figure 3 illustrates the application of rules r1 and r2.",
        "Once the Bayesian network is constructed, queries can be evaluated using any standard algorithm for exact or approximate inference.",
        "The procedure is an instance of ground inference (Getoor and Taskar, 2007), since the rule structure is grounded in a standard Bayesian Network."
      ]
    },
    {
      "heading": "3.3 Parameter Learning",
      "text": [
        "The estimation of the rule parameters can be performed using a Bayesian approach by adding parameter nodes ?",
        "= ?1...?k to the Bayesian Network,",
        "and updating their distribution given a collection of training data.",
        "Each data sample d is a pair (bd, td), where bd is the belief state for the specific sample, and td the target value.",
        "The target value depends on the model to learn ?",
        "for learning dialogue policies, it corresponds to the selected action am.",
        "Require: b: Current belief state Require: R: Set of probabilistic rules 1: B ?",
        "b 2: for all rule r ?",
        "R do 3: Ir ?",
        "INPUTNODES(r) 4: ?r ?",
        "CONDITIONNODE(r) 5: Add ?r and dependencies Ir ?",
        "?r to B 6: ?r ?",
        "EFFECTNODE(r) 7: Add ?r and dependency ?r ?",
        "?r to B 8: Or ?",
        "OUTPUTNODES(r) 9: for all output variable o ?",
        "Or do 10: Add/modify node o and dep.",
        "?r ?",
        "o to B 11: end for 12: end for 13: return B Algorithm 2 : PARAMETERLEARNING (R,?,D) Require: R: Set of probabilistic rules Require: ?",
        ": Parameters with prior distribution Require: D: Training sample 1: for all data d ?",
        "D do 2: B ?",
        "NETWORKCONSTRUCTION(bd,R) 3: Add parameters nodes ?",
        "to B 4: for all ?i ?",
        "?",
        "do 5: P (?",
        "?i|d) = ?",
        "P (td|bd, ?i) P (?i) 6: end for 7: end for 8: return ?",
        "To estimate the parameters ?, we start from an initial prior distribution.",
        "Then, for each sample d in the training data, we construct the corresponding Bayesian Network from its belief state bd and the rules, including nodes corresponding to the unknown rule parameters.",
        "Then, for each parameter ?i, we compute its posterior distribution given the data",
        "Given the number of parameters in our example domain and their continuous range, we used approximate inference to calculate the posterior efficiently, via direct sampling from a set of parameter values.",
        "The constant ?",
        "serves as a normalisation factor over the sampled parameter values for ?i.",
        "The procedure is repeated for every sample, as shown in Algorithm 2.",
        "The parameter distribution will thus progressively narrow down its spread to the values providing the best fit for the training data."
      ]
    },
    {
      "heading": "4 Evaluation",
      "text": [
        "We evaluated our approach in the context of a dialogue policy learning task for a human-robot interaction scenario.",
        "The main question we decided to address is the following: how much does the rule structure contribute to the parameter estimation of a given probabilistic model, especially for domains with limited amounts of available data?",
        "The objective of the experiment was to learn the rule parameters corresponding to the policy model Q(am|s) from a Wizard-of-Oz data collection.",
        "In this particular case, the parameters correspond to the utilities of the various actions.",
        "The policy model used in the experiment included a total of 14 rules.",
        "We compared our approach with two baselines which are essentially ?flattened?",
        "or rolled-out versions of the rule-based model.",
        "The input and output variables remain identical, but they are directly connected, without the ?",
        "and ?",
        "nodes serving as intermediate structures.",
        "The two baselines are (1) a plain multinomial model and (2) a linear model of the input variables.",
        "We are thus comparing three versions of the Q(am|s) model: two baselines where am is directly dependent on the state variables, and our approach where the dependency is realised indirectly through condition and effect nodes."
      ]
    },
    {
      "heading": "4.1 Experimental Setup",
      "text": [
        "The scenario for the Wizard-of-Oz experiment involved a human user and a Nao robot1 (see Figure 4).",
        "The user was instructed to teach the robot a sequence of basic movements (lift the left arm, step forward, kneel down, etc.)",
        "using spoken commands.",
        "The interaction included various dialogue acts such",
        "as clarification requests, feedbacks, acknowledgements, corrections, etc.",
        "Short examples of recorded dialogues are provided in the appendix.",
        "In addition to the policy model, the dialogue system include a speech recognizer (Vocon 3200 from Nuance) connected to the robot microphones, shallow components for dialogue act recognition and generation, a text-to-speech module, and components for planning the robot movements and controlling its motors in real-time.",
        "All components are connected to the shared belief state, and read/write to it as they process their data flow.",
        "We collected a total of 20 interactions with 7 users and one wizard playing the role of the policy model, for a total of 1020 system turns, summing to around 1h of interaction.",
        "All the interactions were performed in English.",
        "The wizard only had access to the N-best list output from the speech recogniser, and could then select which action to perform from a list of 14 alternatives (such as AskRepeat, DemonstrateMove, UndoMove, AskForConfirmation, etc).",
        "Each selected action was recorded along with the belief state (including the full probability distribution for every state variable) in effect at the time of the selection."
      ]
    },
    {
      "heading": "4.2 Analysis",
      "text": [
        "The data set was split into training (75% of the system turns) and test data (remaining 25%) used to measure the accuracy of our policies.",
        "The accuracy is defined as the percentage of actions corresponding to the gold standard action selected by the wizard.",
        "The parameter distributions are initialised with uniform priors, and are progressively refined as more data points are processed.",
        "We calculated the accuracy by sampling over the parameters, performing inference over the resulting models, and finally averaging over the inference results.",
        "depending on the size of the training sample.",
        "The accuracy results are given for the plain, linear and rule-structured policy models, using linear (left) and logarithmic scales (right).",
        "Table 1 provides the accuracy results.",
        "The differences between our model and the baselines are statistically significant using Bonferroni-corrected paired t-tests, with p-value < 0.0001.",
        "The 17% of actions labelled as incorrect are mainly due to the high degree of noise in the data set, and the sometimes inconsistent or unpredictable behaviour of the wizard (regarding e.g. clarification requests).",
        "It is instructive to analyse the learning curve of the three models, shown in Figure 5.",
        "Given its smaller number of parameters, the rule-structured model is able to converge to near-optimal values after observing only a small fraction of the training set.",
        "As the figure shows, the baseline models do also improve their accuracies over time, but at a much slower rate.",
        "The linear model is comparatively faster than the plain model, but levels off towards the end, possibly due to the non-linearity of some dialogue strategies.",
        "The plain model continues its convergence and would probably reach an accuracy similar to the rule-structured model if given much larger amounts of training data.",
        "Note that since the parameters are initially uniformly distributed, the accuracy is already non-zero before learning, since a random assignment of parameters has a low but non-zero chance of leading to the right action."
      ]
    },
    {
      "heading": "5 Discussion and Related Work",
      "text": [
        "The idea of using structural knowledge in probabilistic models has been explored in many direc",
        "models on a test set, using the full training set.",
        "tions, both in the fields of decision-theoretic planning and of reinforcement learning (Hauskrecht et al., 1998; Pineau, 2004; Lang and Toussaint, 2010; Otterlo, 2012) and in statistical relational learning (Jaeger, 2001; Richardson and Domingos, 2006; Getoor and Taskar, 2007).",
        "The introduced structure may be hierarchical, relational, or both.",
        "As in our approach, most of these frameworks rely on the use of expressive representations as templates for grounded probabilistic models.",
        "In the dialogue management literature, most structural approaches rely on a clear-cut task decomposition into goals and sub-goals (Allen et al., 2000; Steedman and Petrick, 2007; Bohus and Rudnicky, 2009), where the completion of each goal is assumed to be fully observable, discarding any remaining uncertainty.",
        "Information-state approaches to dialogue management (Larsson and Traum, 2000; Bos et al., 2003) also rely on a shared state updated according to a rich repository of rules, but contrary to the approach presented here, these rules are generally deterministic and do not include learnable parameters.",
        "The literature on dialogue policy optimisation with reinforcement learning also contains several approaches dedicated to dimensionality reduction for large state-action spaces, such as function approximation (Henderson et al., 2008), hierarchical reinforcement learning (Cuaya?huitl et al., 2010) and summary POMDPs (Young et al., 2010).",
        "Most of these approaches rely on large but weakly structured state spaces (generally encoded as large lists of features), which are suited for slot-filling dialogue applications but are difficult to transfer to more open-ended or relational domains.",
        "The idea of state space partitioning, implemented here via high-level conditions, has also been explored in recent papers (Williams, 2010; Crook and Lemon, 2010).",
        "Finally, Cuaya?huitl (2011) describes a closely-related approach using logic-based representations of the state-action space for relational MDPs.",
        "His approach is however based on reinforcement learning with a user simulator, while the learning procedure presented here relies on supervised learning from a limited data set.",
        "He also reduced his belief state to fully observable variables, whereas we retain the partial observability associated with each variable.",
        "An important side benefit of structured representations in probabilistic models is their improved readability for human designers, who are able to use these powerful abstractions to encode their prior knowledge of the dialogue domain in the form of pragmatic rules, generic background knowledge, or task-specific constraints.",
        "There has been previous work on integrating expert knowledge into dialogue policy learning, using finite-state policies or ad-hoc constraints to filter a plain statistical model (Williams, 2008; Henderson et al., 2008).",
        "The approach presented in this paper is however more general since it does not rely on an external filtering mechanism but directly incorporates prior domain knowledge into the statistical model."
      ]
    },
    {
      "heading": "6 Conclusions",
      "text": [
        "We showed in this paper how to represent the underlying structure of probabilistic models for dialogue using probabilistic rules.",
        "These rules are defined as structured mappings over variables of the dialogue state, specified using high-level conditions and effects.",
        "These rules can include parameters such as effect probabilities or action utilities.",
        "Probabilistic rules allow the system designer to exploit powerful generalisations in the dialogue domain specification without sacrificing the probabilistic nature of the model.",
        "The framework is very general and can express a wide spectrum of models, from classical models fully estimated from data to ones incorporating rich prior knowledge.",
        "The choice of model within this spectrum is therefore essentially a design decision dependent on the relative availabilities of training data and domain knowledge.",
        "We have also presented algorithms for constructing Bayesian Networks corresponding to the application of the rules and for estimating their parameters from data using Bayesian inference.",
        "The presented approach has been implemented in a spoken dialogue system for human-robot interaction, and validated on a policy learning task based on a Wizard-of-Oz data set.",
        "The empirical results have shown that the rule structure enables the learning algorithm to converge faster and with better generalisation performance.",
        "We are currently working on extending this approach in two directions.",
        "First, we would like to extend our parameter estimation method to Bayesian model-based reinforcement learning.",
        "The current implementation operates in a supervised learning mode, which requires expert data.",
        "Alternatively, one could estimate the model parameters in a fully online fashion, without any supervisory input, by incorporating model uncertainty into the inference and continuously adapting the parameter distribution from (real or simulated) interaction experience, using the same Bayesian approach we have outlined in this paper (Ross et al., 2011).",
        "The second direction is the extension of our work to tasks other than action selection.",
        "The framework we have presented is not confined to dialogue policy learning but can be used to structure any probabilistic model2.",
        "It is therefore possible to use probabilistic rules as a unifying framework for all models defined in a given architecture, and exploit it to perform joint optimisation of dialogue understanding, action selection and generation.",
        "2In fact, the dialogue understanding and generation models used for the evaluation were already structured with probabilistic rules, but with fixed, hand-crafted parameters."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "The author would like to thank Stephan Oepen, Erik Velldal and Amanda Stent for useful comments on an earlier version of this paper."
      ]
    }
  ]
}
