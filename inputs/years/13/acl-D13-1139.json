{
  "info": {
    "authors": [
      "Katsuhiko Hayashi",
      "Katsuhito Sudoh",
      "Hajime Tsukada",
      "Jun Suzuki",
      "Masaaki Nagata"
    ],
    "book": "EMNLP",
    "id": "acl-D13-1139",
    "title": "Shift-Reduce Word Reordering for Machine Translation",
    "url": "https://aclweb.org/anthology/D13-1139",
    "year": 2013
  },
  "references": [
    "acl-D11-1018",
    "acl-J08-1002",
    "acl-J97-3002",
    "acl-N04-1014",
    "acl-N07-1051",
    "acl-P04-1015",
    "acl-P05-1033",
    "acl-P05-1066",
    "acl-P06-1121",
    "acl-P07-2045",
    "acl-P10-1110",
    "acl-P12-2061"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper presents a novel word reordering model that employs a shift-reduce parser for inversion transduction grammars.",
        "Our model uses rich syntax parsing features for word reordering and runs in linear time.",
        "We apply it to postordering of phrase-based machine translation (PBMT) for Japanese-to-English patent tasks.",
        "Our experimental results show that our method achieves a significant improvement of +3.1 BLEU scores against 30.15 BLEU scores of the baseline PBMT system."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Even though phrase-based machine translation (PBMT) (Koehn et al., 2007) and tree-based MT (Graehl and Knight, 2004; Chiang, 2005; Galley et al., 2006) systems have achieved great success, many problems remain for distinct language pairs, including long-distant word reordering.",
        "To improve such word reordering, one promising way is to separate it from the translation process as preordering (Collins et al., 2005; DeNero and Uszkoreit, 2011) or postordering (Sudoh et al., 2011; Goto et al., 2012).",
        "Many studies utilize a rule-based or a probabilistic model to perform a reordering decision at each node of a syntactic parse tree.",
        "This paper presents a parser-based word reordering model that employs a shift-reduce parser for inversion transduction grammars (ITG) (Wu, 1997).",
        "To the best of our knowledge, this is the first study on a shift-reduce parser for word reordering.",
        "The parser-based reordering approach uses rich syntax parsing features for reordering decisions.",
        "Our propoesd method can also easily define such",
        "non-local features as theN gram words of reordered strings.",
        "Even when using these non-local features, the complexity of the shift-reduce parser does not increase at all due to give up achieving an optimal solution.",
        "Therefore, it works much more efficient.",
        "In our experiments, we apply our proposed method to postordering for J-to-E patent tasks because their training data for reordering have little noise and they are ideal for evaluating reordering methods.",
        "Although our used J-to-E setups need a language-dependent scheme and we describe our proposed method as a J-to-E postordering method, the key algorithm is language-independent and it can be applicable to preordering as well as postordering if the training data for reordering are available.",
        "2 Postordering by Parsing As shown in Fig.1, postordering (Sudoh et al., 2011) has two steps; the first is a translation step that translates an input sentence into source-ordered translations.",
        "The second is a reordering step in which the translations are reordered in the target language order.",
        "The key to postordering is the second step.",
        "Goto et al. (2012) modeled the second step by parsing and created training data for a postordering parser using a language-dependent rule called head-finalization.",
        "The rule moves syntactic heads of a lexicalized parse tree of an English sentence to the",
        "is the original English tree, and the right-hand side tree is its head-final English tree.",
        "end of the corresponding syntactic constituents.",
        "As a result, the terminal symbols of the English tree are sorted in a Japanese-like order.",
        "In Fig.2, we show an example of head-finalization and a tree on the right-hand side is a head-finalized English (HFE) tree of an English tree on the left-hand side.",
        "We annotate each parent node of the swapped edge with # symbol.",
        "For example, a nonterminal symbol PP#(with) shows that a noun phrase ?a/an telescope?",
        "and a word ?with?",
        "are inverted.",
        "For better word alignments, Isozaki et al. (2012) also deleted articles ?the?",
        "?a?",
        "?an?",
        "from English because Japanese has no articles, and inserted Japanese particles ?ga?",
        "?wo?",
        "?wa?",
        "into English sentences.",
        "We privilege the nonterminals of a phrase modified by a deleted article to determine which ?the?",
        "?a/an?",
        "or ?no articles?",
        "should be inserted at the front of the phrase.",
        "Note that an original English sentence can be recovered from its HFE tree by using # symbols and annotated articles and deleting Japanese particles.",
        "As well as Goto et al. (2012), we solve postordering by a parser whose model is trained with a set of HFE trees.",
        "The main difference between Goto et al.",
        "(2012)'s model and ours is that while the former simply used the Berkeley parser (Petrov and Klein, 2007), our shift-reduce parsing model can use such non-local task specific features as theN gram words of reordered strings without sacrificing efficiency.",
        "Our method integrates postediting (Knight and Chander, 1994) with reordering and inserts articles into English translations by learning an additional ?insert?",
        "action of the parser.",
        "Goto et al. (2012) solved the article generation problem by using an N gram language model, but this somewhat complicates their approach.",
        "Compared with other parsers, one advantage of the shift-reduce parser is to easily define such additional operations as ?insert?.",
        "HFE trees can be defined as monolingual ITG trees (DeNero and Uszkoreit, 2011).",
        "Our monolingual ITG G is a tuple G = (V, T, P, I, S) where V is a set of nonterminals, T is a set of terminals, P is a set of production rules, I is a set of nonterminals on which ?the?",
        "?a/an?",
        "or ?no articles?",
        "must be determined, and S is the start symbol.",
        "Set P consists of terminal production rules that are responsible for generating word w(?",
        "T ): X ?",
        "w and binary production rules in two forms:",
        "where X, X#, Y and Z are nonterminals.",
        "On the right-hand side, the second rule generates two phrases Y and Z in the reverse order.",
        "In our experiments, we removed all unary production rules."
      ]
    },
    {
      "heading": "3 Shift-Reduce Parsing",
      "text": [
        "Given an input sentence w1 .",
        ".",
        ".",
        "wn, the shift-reduce parser uses a stack of partial derivations, a buffer of input words, and a set of actions to build a parse tree.",
        "The following is the parser's configuration: ?",
        ": ?i, j, S?",
        ": pi where ?",
        "is the step size, S is a stack of elements s0, s1, .",
        ".",
        ".",
        ", i is the leftmost span index of the stack",
        "top element s0, j is an index of the next input word of the buffer, and pi is a set of predictor states1.",
        "Each stack element has at least the following components of its partial derivation tree: s = {H, h, wleft, wright, a} where H is a root nonterminal or a part-of-speech tag of the subtree, h is a head index of H, a is a variable to which ?the?",
        "?a/an?",
        "?no articles?",
        "or null are assigned, and wleft, wright are the leftmost and rightmost words of phrase H. When referring to component ?, we use a s.?",
        "notation.",
        "Our proposed system has 4 actions shift-X, insert-x, reduce-MR-X and reduce-SR-X.",
        "The shift-X action pushes the next input word onto the stack and assigns a part-of-speech tag X to the word.",
        "The deduction step is as follows:",
        "where s0 is {X, j, wj , wj , null}.",
        "The insert-x action determines whether to generate ?the?",
        "?a/an?",
        "or ?no articles?",
        "(= x):",
        "where s?0 is {X, h, wleft, wright, a} and s0 is {X, h, wleft, wright, x} (i ?",
        "h, left, right < j).",
        "The side condition prevents the parser from inserting articles into phrase X more than twice.",
        "During parsing, articles are not explicitly inserted into the input string: they are inserted into it when backtracking to generate a reordered string after parsing.",
        "The reduce-MR-X action has a deduction rule:",
        "and right subnodes of s. l and r are head indices of L and R. q denotes a buffer element.",
        "t is a part-of-speech tag.",
        "where s?0 is {Z, h0, wleft0, wright0, a0} and s?1 is {Y, h1, wleft1, wright1, a1}.",
        "The action generates s0 by combining s?0 and s?1 with binary rule X?Y Z:",
        "New nonterminal X is lexicalized with head word wh0 of right nonterminal Z.",
        "This action expands Y and Z in a straight order.",
        "The leftmost word of phrase X is set to leftmost word wleft1 of Y, and the rightmost word of phrase X is set to rightmost word wright0 of Z.",
        "Variable a is set to a1 of Y.",
        "The difference between reduce-MR-X and reduce-SR-X actions is new stack element s0.",
        "The reduce-SR-X action generates s0 by combining s?0 and s?1 with binary rule X# ?Y Z:",
        "This action expands Y and Z in a reverse order, and the leftmost word of X# is set to wleft0 of Z, and the rightmost word of X# is set to wright1 of Y.",
        "Variable a is set to a0 of Z.",
        "We use a linear model that is discriminatively trained with the averaged perceptron (Collins and Roark, 2004).",
        "Table 1 shows the feature templates used in our experiments and we call the features in the bottom two rows ?non-local?",
        "features.",
        "train dev test9 test10 # of sent.",
        "3,191,228 2,000 2,000 2,300 ave. leng.",
        "(J) 36.4 36.6 37.0 43.1 ave. leng.",
        "(E) 33.3 33.3 33.7 39.6"
      ]
    },
    {
      "heading": "4 Experiments",
      "text": []
    },
    {
      "heading": "4.1 Experimental Setups",
      "text": [
        "We conducted experiments for NTCIR-9 and 10 patent data using a Japanese-English language pair.",
        "Mecab2 was used for the Japanese morphological analysis.",
        "The data are summarized in Table 2.",
        "We used Enju (Miyao and Tsujii, 2008) for parsing the English training data and converted parse trees into HFE trees by a head-finalization scheme.",
        "We extracted grammar rules from all the HFE trees and randomly selected 500,000 HFE trees to train the shift-reduce parser.",
        "We used Moses (Koehn et al., 2007) with lexicalized reordering and a 6-gram language model (LM) trained using SRILM (Stolcke et al., 2011) to translate the Japanese sentences into HFE sentences.",
        "To recover the English sentences, our shift-reduce parser reordered only the 1-best HFE sentence.",
        "Our strategy is much simpler than Goto et al. (2012)'s because they used a linear inteporation of MT cost, parser cost and N gram LM cost to generate the best English sentence from the n-best HFE sentences."
      ]
    },
    {
      "heading": "4.2 Main Results",
      "text": [
        "The main results in Table 3 indicate our method was significantly better and faster than the conventional PBMT system.",
        "Our method also ourperformed Goto et al. (2012)'s reported systems as well as a tree-based (moses-chart) system3.",
        "Our proposed model with ?non-local?",
        "features (w/ nf.)",
        "achieved gains against that without the features (w/o nf.).",
        "Further feature engineering may improve the accuracy more."
      ]
    },
    {
      "heading": "4.3 Analysis",
      "text": [
        "We show N gram precisions of PBMT (dist=6, dist=20) and proposed systems in Table 5.",
        "The results clearly show that improvements of 1-gram pre",
        "notes evaluation scores for translations of the best system (?proposed?)",
        "in Table 3 from which articles are removed.",
        "?HFE w/ art.?",
        "system used HFE data with articles and generated them by MT system and the shift-reduce parser performed only reordering.",
        "?N -gram?",
        "system inserted articles into the translations of ?w/o art.?",
        "by Goto et al",
        "and proposed systems for test9 data.",
        "cisions are the main factors that contribute to better performance of our proposed system than PBMT systems.",
        "It seems that the gains of 1-gram presicions come from postediting (article generation).",
        "In table 4, we show the effectiveness of our joint reordering and postediting approach (?proposed?).",
        "The ?w/o art.?",
        "results clearly show that generating articles has great effects on MT evaluations especially for BLEU metric.",
        "Comparing ?proposed?",
        "and ?HFEw/ art.?",
        "systems, these results show that postediting is much more effective than generating articles by MT.",
        "Our joint approach also outperformed ?N -gram?",
        "postediting system."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "We proposed a shift-reduce word ordering model and applied it to J-to-E postordering.",
        "Our experimental results indicate our method can significantly improve the performance of a PBMT system.",
        "Future work will investigate our method's usefulness on various language datasets.",
        "We plan to study more general methods that use word alignments to embed swap information in trees (Galley et al., 2006)."
      ]
    }
  ]
}
