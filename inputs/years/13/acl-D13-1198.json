{
  "info": {
    "authors": [
      "György Szarvas",
      "Róbert Busa-Fekete",
      "Eyke Hüllermeier"
    ],
    "book": "EMNLP",
    "id": "acl-D13-1198",
    "title": "Learning to Rank Lexical Substitutions",
    "url": "https://aclweb.org/anthology/D13-1198",
    "year": 2013
  },
  "references": [
    "acl-D10-1113",
    "acl-D10-1116",
    "acl-N13-1133",
    "acl-P06-1057",
    "acl-P10-1097",
    "acl-P10-2017",
    "acl-S12-1051",
    "acl-W07-2009",
    "acl-W07-2029",
    "acl-W07-2044",
    "acl-W07-2050",
    "acl-W07-2091"
  ],
  "sections": [
    {
      "text": [
        "Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing, pages 1926?1932, Seattle, Washington, USA, 18-21 October 2013. c?2013 Association for Computational Linguistics Learning to rank lexical substitutions"
      ]
    },
    {
      "heading": "Abstract",
      "text": [
        "The problem to replace a word with a synonym that fits well in its sentential context is known as the lexical substitution task.",
        "In this paper, we tackle this task as a supervised ranking problem.",
        "Given a dataset of target words, their sentential contexts and the potential substitutions for the target words, the goal is to train a model that accurately ranks the candidate substitutions based on their contextual fitness.",
        "As a key contribution, we customize and evaluate several learning-to-rank models to the lexical substitution task, including classification-based and regression-based approaches.",
        "On two datasets widely used for lexical substitution, our best models significantly advance the state-of-the-art."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The task to generate lexical substitutions in context (McCarthy and Navigli, 2007), i.e., to replace words in a sentence without changing its meaning, has become an increasingly popular research topic.",
        "This task is used, e.g. to evaluate semantic models with regard to their accuracy in modeling word meaning in context (Erk and Pado?, 2010).",
        "Moreover, it provides a basis of NLP applications in many fields, including linguistic steganography (Topkara et al., 2006; Chang and Clark, 2010), semantic text similarity (Agirre et al., 2012) and plagiarism detection (Gipp et al., 2011).",
        "While closely related to WSD,",
        "lexical substitution does not rely on explicitly defined sense inventories (Dagan et al., 2006): the possible substitutions reflect all conceivable senses of the word, and the correct sense has to be ascertained to provide an accurate substitution.",
        "While a few lexical sample datasets (McCarthy and Navigli, 2007; Biemann, 2012) with human-provided substitutions exist and can be used to evaluate different lexical paraphrasing approaches, a practically useful system must also be able to rephrase unseen words, i.e., any word for which a list of synonyms is provided.",
        "Correspondingly, unsupervised and knowledge-based approaches that are not directly dependent on any training material, prevailed in the SemEval 2007 shared task on English Lexical Substitution and dominated follow-up work.",
        "The only supervised approach is limited to the combination of several knowledge-based lexical substitution models based on different underlying lexicons (Sinha and Mihalcea, 2009).3 A recent work by Szarvas et al. (2013) describes a tailor-made supervised system based on delexicalized features that ?",
        "unlike earlier supervised approaches, and similar to unsupervised and knowledge-based methods proposed for this task ?",
        "is able to generalize to an open vocabulary.",
        "For each target word to paraphrase, they first compute a set of substitution candidates using WordNet: all synonyms from all of the target word's WordNet synsets, together with the words from synsets in similar to, entailment and also see relation to these synsets are considered as potential substitutions.",
        "Each candidate then constitutes a training (or test) 3Another notable example for supervised lexical substitution is Biemann (2012), but this is a lexical sample system applicable only to the target words of the training datasets.",
        "example, and these instances are characterized using non-lexical features from heterogeneous evidence such as lexical-semantic resources and distributional similarity, n-gram counts and shallow syntactic features computed on large, unannotated background corpora.",
        "The goal is then i) to predict how well a particular candidate fits in the original context, and ii) given these predictions for each of the candidates, to correctly order the elements of the candidate set according to their contextual fitness.",
        "That is, a model is successful if it prioritizes plausible substitutions ahead of less likely synonyms (given the context).",
        "This model is able to generate paraphrases for target words not contained in the training material.",
        "This favorable property is achieved using only such features (e.g. local n-gram frequencies in context) that are meaningfully comparable across the different target words and candidate substitutions they are computed from.",
        "More importantly, their model also provides superior ranking results compared to state of the art unsupervised and knowledge based approaches and therefore it defines the current state of the art for open vocabulary lexical substitution.",
        "Motivated by the findings of Szarvas et al. (2013), we address lexical substitution as a supervised learning problem, and go beyond their approach from a methodological point of view.",
        "Our experiments show that the performance on the lexical substitution task is strongly influenced by the way in which this task is formalized as a machine learning problem (i.e., as binary or multi-class classification or regression) and by the learning method used to solve this problem.",
        "As a result, we are able to report the best performances on this task for two standard datasets."
      ]
    },
    {
      "heading": "2 Related work",
      "text": [
        "Previous approaches to lexical substitution often seek to automatically generate a set of candidate substitutions for each target word first, and to rank the elements of this set of candidates afterward (Has-san et al., 2007; Giuliano et al., 2007; Martinez et al., 2007; Yuret, 2007).",
        "Alternatively, the candidate set can be defined by all human-suggested substitutions for the given target word in all of its contexts; then, the focus is just on the ranking problem (Erk and Pado?, 2010; Thater et al., 2010; Dinu and Lapata, 2010; Thater et al., 2011).",
        "While only the former approach qualifies as a full-fledged substitution system for arbitrary, previously unseen target words, the latter simplifies the comparison of semantic ranking models, as the ranking step is not burdened with the shortcomings of automatically generated substitution candidates.",
        "As mentioned before, Szarvas et al. (2013) recently formalized the lexical substitution problem as a supervised learning task, using delexicalized features.",
        "This non-lexical feature representation makes different target word/substitution pairs in different contexts4 directly comparable.",
        "Thus, it becomes possible to learn an all-words system that is applicable to unseen words, using supervised methods, which provides superior ranking accuracy to unsupervised and knowledge based models.",
        "In this work, we build on the problem formulation and the features proposed by Szarvas et al.",
        "(2013) while largely extending their machine learning methodology.",
        "We customize and experiment with several different learning-to-rank models, which are better tailored for this task.",
        "As our experiments show, this contribution leads to further significant improvements in modeling the semantics of a text and in end-system accuracy."
      ]
    },
    {
      "heading": "3 Datasets and experimental setup",
      "text": [
        "Here we introduce the datasets, experimental setup and evaluation measures used in our experiments.",
        "Since space restrictions prohibit a comprehensive exposition, we only provide the most essential information and refer to Szarvas et al. (2013), whose experimental setup we adopted, for further details.",
        "Datasets.",
        "We use two prominent datasets for lexical substitution.",
        "The LexSub dataset introduced in the Lexical Substitution task at Semeval 2007 (McCarthy and Navigli, 2007)5 contains 2002 sentences for a total of 201 target words (from all parts of speech), and lexical substitutions assigned (to each target word and sentence pair) by 5 native speaker annotators.",
        "The second dataset, TWSI (Biemann, 2012)6, consists of 24,647 sentences for a total of 1,012 target nouns, and lexical substitu-4E.g., bright substituted with intelligent in ?He was bright and independent and proud?",
        "and side for part in ?Find someone who can compose the biblical side?.",
        "tions for each target word in context resulting from a crowdsourced annotation process.",
        "For each sentence in each dataset, the annotators provided as many substitutions for the target word as they found appropriate in the context.",
        "Each substitution is then labeled by the number of annotators who listed that word as a good lexical substitution.",
        "Experimental setup and Evaluation.",
        "On both datasets, we conduct experiments using a 10-fold cross validation process, and evaluate all learning algorithms on the same train/test splits.",
        "The datasets are randomly split into 10 equal-sized folds on the target word level, such that all examples for a particular target word fall into either the training or the test set, but never both.",
        "This way, we make sure to evaluate the models on target words not seen during training, thereby mimicking an open vocabulary paraphrasing system: at testing time, paraphrases are ranked for unseen target words, similarly as the models would rank paraphrases for any words (not necessarily contained in the dataset).",
        "For algorithms with tunable parameters, we further divide the training sets into a training and a validation part to find the best parameter settings.",
        "For evaluation, we use Generalized Average Precision (GAP) (Kishida, 2005) and Precision at 1 (P@1), i.e., the percentage of correct paraphrases at rank 1.",
        "Features.",
        "In all experiments, we used the features described in Szarvas et al. (2013), implemented precisely as proposed by the original work.",
        "Each (sentence, targetword, substitution) triplet represents an instance, and the feature values are computed from the sentence context, the target word and the substitution word.",
        "The features used fall into four major categories.",
        "The most important features describe the syntag-matic coherence of the substitution in context, measured as local n-gram frequencies obtained from web data.",
        "The frequency for a 1-5gram context with the substitution word is computed and normalized with respect to either 1) the frequency of the original context (with the target word) or 2) the sum of frequencies observed for all possible substitutions.",
        "A third feature computes similar frequencies for the substitution and the target word observed in the local context (as part of a conjunctive phrase).",
        "A second group of features describe the (non-positional, i.e. non-local) distributional similarity of the target and its candidate substitution in terms of sentence level co-occurrence statistics collected from newspaper texts: 1) How many words from the sentence appear in the top 1000 salient words listed for the candidate substitution in a distributional thesaurus, 2) how similar the top K salient words lists are for the candidate and the target word, 3) how similar the 2nd order distributional profiles are for candidate and target, etc.",
        "All these features are carefully normalized so that values compare well accross different words and contexts.",
        "Another set of features capture the properties of the target and candidate word in WordNet, such as their 1) number of senses, 2) how frequent senses are synonymous and 3) the lowest common ancestor (and all synsets up) for the candidate and target word in the WordNet hierarchy (represented as a nominal feature, by the ID of these synsets).",
        "Lastly a group of features capture shallow syntactic patterns of the target word and its local context in the form of 1) part of speech patterns (trigrams) in a sliding window around the target word using main POS categories, i.e. only the first letter of the Penn Treebank codes, and 2) the detailed POS code of the candidate word assigned by a POS tagger.",
        "We omit a mathematically precise description of these features for space reasons and refer the reader to Szarvas et al. (2013) for a more formal and detailed description of the feature functions.",
        "Importantly, these delexicalized features are numerically comparable across the different target words and candidate substitutions they are computed from.",
        "This property enables the models to generalize over the words in the datasets and thus enables a supervised, all-words lexical substitution system."
      ]
    },
    {
      "heading": "4 Learning-to-Rank methods",
      "text": [
        "Machine learning methods for ranking are traditionally classified into three categories.",
        "In the point-wise approach, a model is trained that maps instances (in this case candidate substitutions in a context) to scores indicating their relevance or fitness; to this end, one typically applies standard regression techniques, which essentially look at individual instances in isolation (i.e., independent of any other instances in the training or test set).",
        "To predict a ranking of a set of query instances, these are simply sorted by their predicted scores (Li et al., 2007).",
        "The pairwise approach trains models that are able to compare pairs of instances.",
        "By marking such a pair as positive if the first instance is preferred to the second one, and as negative otherwise, the problem can formally be reduced to a binary classification task (Freund et al., 2003).",
        "Finally, in the listwise approach, tailor-made learning methods are used that directly optimize the ranking performance with respect to a global evaluation metric, i.e., a measure that evaluates the ranking of a complete set of query instances (Valizadegan et al., 2009).",
        "Below we give a brief overview of the methods included in our experiments.",
        "We used the implementations provided by the MultiBoost (Benbouzid et al., 2012), RankSVM and RankLib packages.7 For a detailed description, we refer to the original literature."
      ]
    },
    {
      "heading": "4.1 MAXENT",
      "text": [
        "The ranking model proposed by Szarvas et al. (2013) was used as a baseline.",
        "This is a pointwise approach based on a maximum entropy classifier, in which the ranking task is cast as a binary classification problem, namely to discriminate good (label > 0) from bad substitutions.",
        "The actual label values for good substitutions were used for weighting the training examples.",
        "The underlying MaxEnt model was trained until convergence, i.e., there was no hyper-parameter to be tuned.",
        "For a new target/substitution pair, the classifier delivers an estimation of the posterior probability for being a good substitution.",
        "The ranking is then produced by sorting the candidates in decreasing order according to this probability."
      ]
    },
    {
      "heading": "4.2 EXPENS",
      "text": [
        "EXPENS (Busa-Fekete et al., 2013) is a pointwise method with listwise meta-learning step that exploits an ensemble of multi-class classifiers.",
        "It consists of three steps.",
        "First, AD-ABOOST.MH (Schapire and Singer, 1999) classifiers with several different weak learners (Busa-Fekete et al., 2011; Ke?gl and Busa-Fekete, 2009) are trained to predict the level of relevance (quality) of a substitution (i.e., the number of annotators who proposed the candidate for that particular context).",
        "Second, the classifiers are calibrated to obtain",
        "edu/?vdang/ranklib.html.",
        "We extended the implementation of the LAMBDAMART algorithm in this package to compute the gradients of and optimize for the GAP measure.",
        "an accurate posterior distribution; to this end, several calibration techniques, such as Platt scaling (Platt, 2000), are used to obtain a diverse pool of calibrated classifiers.",
        "Note that this step takes advantage of the ordinal structure of the underlying scale of relevance levels, which is an important difference to MAXENT.",
        "Third, the posteriors of these calibrated classifiers are additively combined, with the weight of each model being exponentially proportional to its GAP score (on the validation set).",
        "This method has two hyperparameters: the number of boosting iterations T and the scaling factor in the exponential weighting scheme c. We select T and c from the intervals [100, 2000] and [0, 100], with step sizes 100 and 10, respectively."
      ]
    },
    {
      "heading": "4.3 RANKBOOST",
      "text": [
        "RANKBOOST (Freund et al., 2003) is a pairwise boosting approach.",
        "The objective function is the rank loss (as opposed to ADABOOST, which optimizes the exponential loss).",
        "In each boosting iteration, the weak classifier is chosen by maximizing the weighted rank loss.",
        "For the weak learner, we used the decision stump described in (Freund et al., 2003), which is able to optimize the rank loss in an efficient way.",
        "The only hyperparameter of RANKBOOST to be tuned is the number of iterations that we selected from the interval [1, 1000]."
      ]
    },
    {
      "heading": "4.4 RANKSVM",
      "text": [
        "RANKSVM (Joachims, 2006) is a pairwise method based on support vector machines, which formulates the ranking task as binary classification of pairs of instances.",
        "We used a linear kernel, because the optimization using non-linear kernels cannot be done in a reasonable time.",
        "The tolerance level of the optimization was set to 0.001 and the regularization parameter was validated in the interval [10?6, 104] with a logarithmically increasing step size."
      ]
    },
    {
      "heading": "4.5 LAMBDAMART",
      "text": [
        "LAMBDAMART (Wu et al., 2010) is a listwise method based on the gradient boosted regression trees by Friedman (1999).",
        "The ordinal labels are learned directly by the boosted regression trees whose parameters are tuned by using a gradient-based optimization method.",
        "The gradient of parameters is calculated based on the evaluation metric used (in this case GAP).",
        "We tuned the number of boosting",
        "iterations in the interval [10, 1000] and the number of tree leaves in {8, 16, 32}."
      ]
    },
    {
      "heading": "5 Results and discussion",
      "text": [
        "Our results using the above learning methods are summarized in Table 1.",
        "As can be seen, the two methods that exploit the cardinal structure of the label set (relevance degrees), namely EXPENS and LAMBDAMART, consistently outperform the baseline taken from Szarvas et al. (2013) ?",
        "the only exception is the p@1 score for EXPENS on the Semeval Lexical Substitution dataset and the candidate substitutions extracted from WordNet.",
        "The improvements are significant (using paired t-test, p < 0.01) for 3 out of 4 settings for EXPENS and in all settings for LAMBDAMART.",
        "In particular, the results of LAMBDAMART are so far the best scores that have been reported for the best studied setting, i.e. the LexSub dataset using substitution candidates taken from the gold standard (see Table 2).",
        "We suppose that the relatively good results achieved by the LAMBDAMART and EXPENS methods are due to that, first, it seems crucial to properly model and exploit the ordinal nature of the annotations (number of annotators who suggested a given word as a good paraphrase) provided by the datasets.",
        "Second, the RANKBOOST and RANKSVM are less complex methods than the EXPENS and LAMBDAMART.",
        "The RANKSVM is the least complex method from the pool of learning-to-rank methods we applied, since it is a simple linear model.",
        "The RANKBOOST is a boosted decision stump where, in each boosting iteration, the stump is found by maximizing the weighted exponential rank loss.",
        "On the other hand, both the EXPENS and LAMBDAMART make use of tree learners in the ensemble classifier they produce.",
        "We believe that overfitting is not an issue in a learning task like the LexSub task: most features are relatively weak predictors on their own, and we can learn from a large number of data points (2000 sentences with an average set size of 20, about 40K data points for the smallest dataset and setting).",
        "Rather, as our results show, less complex models tend to underfit the data.",
        "Therefore we believe that more complex models can achieve a better performance, of course with an increased computational cost."
      ]
    },
    {
      "heading": "6 Conclusion and future work",
      "text": [
        "In this paper, we customized and applied some relatively novel algorithms from the field of learning-to-rank for ranking lexical substitutions in context.",
        "In turn, we achieved significant improvements on the two prominent datasets for lexical substitution.",
        "Our results indicate that an exploitation of the ordinal structure of the labels in the datasets can lead to considerable gains in terms of both ranking quality (GAP) and precision at 1 (p@1).",
        "This observation is supported both for the theoretically simpler pointwise learning approach and for the most powerful listwise approach.",
        "On the other hand, the pairwise methods that cannot naturally exploit this property, did not provide a consistent improvement over the baseline.",
        "In the future, we plan to investigate this finding in the context of other, similar ranking problems in Natural Language Processing."
      ]
    },
    {
      "heading": "Acknowledgment",
      "text": [
        "This work was supported by the German Research Foundation (DFG) as part of the Priority Programme 1527."
      ]
    }
  ]
}
