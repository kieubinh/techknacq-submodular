{
  "info": {
    "authors": [
      "Shay B. Cohen",
      "Michael Collins"
    ],
    "book": "ACL",
    "id": "acl-P14-1099",
    "title": "A Provably Correct Learning Algorithm for Latent-Variable PCFGs",
    "url": "https://aclweb.org/anthology/P14-1099",
    "year": 2014
  },
  "references": [
    "acl-D12-1019",
    "acl-J93-2004",
    "acl-N13-1015",
    "acl-P05-1010",
    "acl-P06-1055",
    "acl-P12-1024",
    "acl-W97-0309"
  ],
  "sections": [
    {
      "text": [
        "Abstract",
        "We introduce a provably correct learning algorithm for latent-variable PCFGs.",
        "The algorithm relies on two steps: first, the use of a matrix-decomposition algorithm applied to a co-occurrence matrix estimated from the parse trees in a training sample; second, the use of EM applied to a convex objective derived from the training samples in combination with the output from the matrix decomposition.",
        "Experiments on parsing and a language modeling problem show that the algorithm is efficient and effective in practice."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Latent-variable PCFGs (L-PCFGs) (Matsuzaki et al., 2005; Petrov et al., 2006) give state-of-the-art performance on parsing problems.",
        "The standard approach to parameter estimation in L-PCFGs is the EM algorithm (Dempster et al., 1977), which has the usual problems with local optima.",
        "Recent work (Cohen et al., 2012) has introduced an alternative algorithm, based on spectral methods, which has provable guarantees.",
        "Unfortunately this algorithm does not return parameter estimates for the underlying L-PCFG, instead returning the parameter values up to an (unknown) linear transform.",
        "In practice, this is a limitation.",
        "We describe an algorithm that, like EM, returns estimates of the original parameters of an L-PCFG, but, unlike EM, does not suffer from problems of local optima.",
        "The algorithm relies on two key ideas: 1) A matrix decomposition algorithm (sec- tion 5) which is applicable to matrices Q of the form Q f,g = ?",
        "h p(h)p(f | h)p(g | h) where p(h), p(f | h) and p(g | h) are multinomial distributions.",
        "This matrix form has clear relevance to latent variable models.",
        "We apply the matrix decomposition algorithm to a co-occurrence matrix that can be estimated directly from a training set consisting of parse trees without latent annotations.",
        "The resulting parameter estimates give us significant leverage over the learning problem.",
        "2) Optimization of a convex objective function using EM.",
        "We show that once the matrix decomposition step has been applied, parameter estimation of the L-PCFG can be reduced to a convex optimization problem that is easily solved by EM.",
        "The algorithm provably learns the parameters of an L-PCFG (theorem 1), under an assumption that each latent state has at least one ?pivot?",
        "feature.",
        "This assumption is similar to the ?pivot word?",
        "assumption used by Arora et al. (2013) and Arora et al. (2012) in the context of learning topic models.",
        "We describe experiments on learning of L-PCFGs, and also on learning of the latent-variable language model of Saul and Pereira (1997).",
        "A hybrid method, which uses our algorithm as an initializer for EM, performs at the same accuracy as EM, but requires significantly fewer iterations for convergence: for example in our L-PCFG exper-iments, it typically requires 2 EM iterations for convergence, as opposed to 20-40 EM iterations for initializers used in previous work.",
        "While this paper's focus is on L-PCFGs, the techniques we describe are likely to be applicable to many other latent-variable models used in NLP.",
        "2 Related Work Recently a number of researchers have developed provably correct algorithms for parameter estimation in latent variable models such as hidden Markov models, topic models, directed graphical models with latent variables, and so on (Hsu et al., 2009; Bailly et al., 2010; Siddiqi et al., 2010; Parikh et al., 2011; Balle et al., 2011; Arora et al., 2013; Dhillon et al., 2012; Anandkumar et al., 2012; Arora et al., 2012; Arora et al., 2013).",
        "Many of these algorithms have their roots in spectral methods such as canonical correlation analysis (CCA) (Hotelling, 1936), or higher-order tensor decompositions.",
        "Previous work (Cohen et al., 2012; Cohen et al., 2013) has developed a spectral method for learning of L-PCFGs; this method learns parameters of the model up to an unknown 1052 linear transformation, which cancels in the inside-outside calculations for marginalization over latent states in the L-PCFG.",
        "The lack of direct parameter estimates from this method leads to problems with negative or unnormalized probablities; the method does not give parameters that are in-terpretable, or that can be used in conjunction with other algorithms, for example as an initializer for EM steps that refine the model.",
        "Our work is most directly related to the algorithm for parameter estimation in topic models described by Arora et al. (2013).",
        "This algorithm forms the core of the matrix decomposition algorithm described in section 5.",
        "3 Background This section gives definitions and notation for L-PCFGs, taken from (Cohen et al., 2012).",
        "3.1 L-PCFGs: Basic Definitions An L-PCFG is an 8-tuple (N , I,P,m, n, pi, t, q) where: N is the set of non-terminal symbols in the grammar.",
        "I ?",
        "N is a finite set of in-terminals.",
        "P ?",
        "N is a finite set of pre-terminals.",
        "We assume that N = I ?",
        "P , and I ?",
        "P = ?.",
        "Hence we have partitioned the set of non-terminals into two subsets.",
        "[m] is the set of possible hidden states.",
        "1 [n] is the set of possible words.",
        "For all (a, b, c) ?",
        "I ?",
        "N ?",
        "N , and (h 1 , h 2 , h 3 ) ?",
        "[m] ?",
        "[m] ?",
        "[m], we have a context-free rule a(h 1 ) ?",
        "b(h 2 ) c(h 3 ).",
        "The rule has an associated parameter t(a?",
        "b c, h 2 , h 3 | a, h 1 ).",
        "For all a ?",
        "P , h ?",
        "[m], x ?",
        "[n], we have a context-free rule a(h)?",
        "x.",
        "The rule has an associated parameter q(a ?",
        "x | a, h).",
        "For all a ?",
        "I, h ?",
        "[m], pi(a, h) is a parameter specifying the probability of a(h) being at the root of a tree.",
        "A skeletal tree (s-tree) is a sequence of rules r 1 .",
        ".",
        ".",
        "r N where each r i is either of the form a ?",
        "b c or a ?",
        "x.",
        "The rule sequence forms a top-down, left-most derivation under a CFG with skeletal rules.",
        "A full tree consists of an s-tree r 1 .",
        ".",
        ".",
        "r N , together with values h 1 .",
        ".",
        ".",
        "h N .",
        "Each h i is the value for the hidden variable for the left-hand-side of rule r i .",
        "Each h i can take any value in [m].",
        "For a given skeletal tree r 1 .",
        ".",
        ".",
        "r N , define a i to be the non-terminal on the left-hand-side of rule r i .",
        "For any i ?",
        "[N ] such that r i is of the form a?",
        "b c, define h (2) i and h (3) i as the hidden state 1 For any integer n, we use [n] to denote the set {1, 2, .",
        ".",
        ".",
        "n}.",
        "value of the left and right child respectively.",
        "The model then defines a distribution as p(r 1 .",
        ".",
        ".",
        "r N , h 1 .",
        ".",
        ".",
        "h N ) = pi(a 1 , h 1 ) ?",
        "i:a i ?I t(r i , h (2) i , h (3) i | a i , h i ) ?",
        "i:a i ?P q(r i | a i , h i ) The distribution over skeletal trees is p(r 1 .",
        ".",
        ".",
        "r N ) = ?",
        "h 1 ...h N p(r 1 .",
        ".",
        ".",
        "r N , h 1 .",
        ".",
        ".",
        "h N ).",
        "3.2 Definition of Random Variables Throughout this paper we will make reference to random variables derived from the distribution over full trees from an L-PCFG.",
        "These random variables are defined as follows.",
        "First, we select a random internal node, from a random tree, as follows: 1) Sample a full tree r 1 .",
        ".",
        ".",
        "r N , h 1 .",
        ".",
        ".",
        "h N from the PMF p(r 1 .",
        ".",
        ".",
        "r N , h 1 .",
        ".",
        ".",
        "h N ); 2) Choose a node i uniformly at random from [N ].",
        "We then give the following definition: Definition 1 (Random Variables).",
        "If the rule r i for the node i is of the form a?",
        "b c, we define random variables as follows: R 1 is equal to the rule r i (e.g., NP?",
        "D N).",
        "A,B,C are the labels for node i, the left child of node i, and the right child of node i respectively.",
        "(E.g., A = NP, B = D, C = N.) T 1 is the inside tree rooted at node i. T 2 is the inside tree rooted at the left child of node i, and T 3 is the inside tree rooted at the right child of node i. O is the outside tree at node i. H 1 , H 2 , H 3 are the hidden variables associated with node i, the left child of node i, and the right child of node i respectively.",
        "E is equal to 1 if node i is at the root of the tree (i.e., i = 1), 0 otherwise.",
        "If the rule r i for the selected node i is of the form a ?",
        "x, we have random variables R 1 , T 1 , H 1 , A 1 , O,E as defined above, but H 2 , H 3 , T 2 , T 3 , B, and C are not defined.",
        "4 The Learning Algorithm for L-PCFGs Our goal is to design a learning algorithm for L-PCFGs.",
        "The input to the algorithm will be a training set consisting of skeletal trees, assumed to be sampled from some underlying L-PCFG.",
        "The output of the algorithm will be estimates for the pi, t, and q parameters.",
        "The training set does not include values for the latent variables; this is the main challenge in learning.",
        "This section focuses on an algorithm for recovery of the t parameters.",
        "A description of the algorithms for recovery of the pi and q parameters is deferred until section 6.1 of this paper; these 1053 steps are straightforward once we have derived the method for the t parameters.",
        "We describe an algorithm that correctly recovers the parameters of an L-PCFG as the size of the training set goes to infinity (this statement is made more precise in section 4.2).",
        "The algorithm relies on an assumption'the ?pivot?",
        "assumption'that we now describe.",
        "4.1 Features, and the Pivot Assumption We assume a function ?",
        "from inside trees to a finite set F , and a function ?",
        "that maps outside trees to a finite set G. The function ?",
        "(t) (?",
        "(o)) can be thought of as a function that maps an inside tree t (outside tree o) to an underlying feature.",
        "As one example, the function ?",
        "(t) might return the context-free rule at the root of the inside tree t; in this case the set F would be equal to the set of all context-free rules in the grammar.",
        "As another example, the function ?",
        "(o) might return the context-free rule at the foot of the outside tree o.",
        "In the more general case, we might have K separate functions ?",
        "(k) (t) for k = 1 .",
        ".",
        ".K mapping inside trees to K separate features, and similarly we might have multiple features for outside trees.",
        "Cohen et al. (2013) describe one such feature def-inition, where features track single context-free rules as well as larger fragments such as two or three-level sub-trees.",
        "For simplicity of presentation we describe the case of single features ?",
        "(t) and ?",
        "(o) for the majority of this paper.",
        "The extension to multiple features is straightforward, and is discussed in section 6.2; the flexibility allowed by multiple features is important, and we use multiple features in our experiments.",
        "Given functions ?",
        "and ?, we define additional random variables: F = ?",
        "(T 1 ), F 2 = ?",
        "(T 2 ), F 3 = ?",
        "(T 3 ), and G = ?(O).",
        "We can now give the following assumption: Assumption 1 (The Pivot Assumption).",
        "Under the L-PCFG being learned, there exist values ?",
        "> 0 and ?",
        "> 0 such that for each non-terminal a, for each hidden state h ?",
        "[m], the following statements are true: 1) ?f ?",
        "F such that P (F = f | H 1 = h,A = a) > ?",
        "and for all h ?",
        "6= h, P (F = f | H 1 = h ?",
        ", A = a) = 0; 2) ?g ?",
        "G such that P (G = g | H 1 = h,A = a) > ?",
        "and for all h ?",
        "6= h, P (G = g | H 1 = h ?",
        ", A = a) = 0.",
        "This assumption is very similar to the assumption made by Arora et al. (2012) in the context of learning topic models.",
        "It implies that for each (a, h) pair, there are inside and outside tree features?which following Arora et al. (2012) we refer to as pivot features?that occur only 2 in the presence of latent-state value h. As in (Arora et al., 2012), the pivot features will give us considerable leverage in learning of the model.",
        "4.2 The Learning Algorithm Figure 1 shows the learning algorithm for L-PCFGs.",
        "The algorithm consists of the following steps: Step 0: Calculate estimates p?(a?",
        "b c | a), p?",
        "(g, f 2 , f 3 | a?",
        "b c) and p?",
        "(f, g | a).",
        "These estimates are easily calculated using counts taken from the training examples.",
        "Step 1: Calculate values r?",
        "(f | h, a) and s?",
        "(g | h, a); these are estimates of p(f | h 1 , a) and p(g | h 1 , a) respectively.",
        "This step is achieved using a matrix decomposition algorithm, described in section 5 of this paper, on the matrix ?",
        "Q a with entries [ ?",
        "Q a ] f,g = p?",
        "(f, g | a).",
        "Step 2: Use the EM algorithm to find ?",
        "t values that maximize the objective function in Eq. 1 (see figure 1).",
        "Crucially, this is a convex optimization problem, and the EM algorithm will converge to the global maximum of this likelihood function.",
        "Step 3: Rule estimates are calculated using an application of the laws of probability.",
        "Before giving a theorem concerning correctness of the algorithm we introduce two assumptions: Assumption 2 (Strict Convexity).",
        "If we have the equalities s?",
        "(g | h 1 , a) = P (G = g | H 1 = h 1 , A = a), r?",
        "(f 2 | h 2 , b) = P (F 2 = f 2 | H 2 = h 2 , B = b) and r?",
        "(f 3 | h 3 , c) = P (F 3 = f 3 | H 2 = h 3 , C = c), then the function in Eq. 1 (fig- ure 1) is strictly concave.",
        "The function in Eq. 1 is always concave; this assumption adds the restriction that the function must be strictly concave?that is, it has a unique global maximum -- in the case that the r?",
        "and s?",
        "estimates are exact estimates.",
        "Assumption 3 (Infinite Data).",
        "After running Step 0 of the algorithm we have p?(a?",
        "b c | a) = p(a?",
        "b c | a) p?",
        "(g, f 2 , f 3 | a?",
        "b c) = p(g, f 2 , f 3 | a?",
        "b c) p?",
        "(f, g | a) = p(f, g | a) where p(.",
        ".",
        ".)",
        "is the probability under the underlying L-PCFG.",
        "2 The requirements P (F = f | H 1 = h ?",
        ", A = a) = 0 and P (G = g | H 1 = h ?",
        ", A = a) = 0 are almost certainly overly strict; in theory and practice these probabilities should be able to take small but strictly positive values.",
        "1054 We use the term ?infinite data?",
        "because under standard arguments, p?(.",
        ".",
        ".)",
        "converges to p(.",
        ".",
        ".)",
        "as M goes to?.",
        "The theorem is then as follows: Theorem 1.",
        "Consider the algorithm in figure 1.",
        "Assume that assumptions 1-3 (the pivot, strong convexity, and infinite data assumptions) hold for the underlying L-PCFG.",
        "Then there is some permutation ?",
        ": [m] ?",
        "[m] such that for all a?",
        "b c, h 1 , h 2 , h 3 , ?",
        "t(a?",
        "b c, h 2 , h 3 | a?",
        "b c, h 1 ) = t(a?",
        "b c, ?",
        "(h 2 ), ?",
        "(h 3 ) | a?",
        "b c, ?",
        "(h 1 )) where ?",
        "t are the parameters in the output, and t are the parameters of the underlying L-PCFG.",
        "This theorem states that under assumptions 1- 3, the algorithm correctly learns the t parameters of an L-PCFG, up to a permutation over the latent states defined by ?.",
        "Given the assumptions we have made, it is not possible to do better than recovering the correct parameter values up to a per-mutation, due to symmetries in the model.",
        "Assuming that the pi and q parameters are recovered in addition to the t parameters (see section 6.1), the resulting model will define exactly the same distribution over full trees as the underlying L-PCFG up to this permutation, and will define exactly the same distribution over skeletal trees, so in this sense the permutation is benign.",
        "Proof of theorem 1: Under the assumptions of the theorem, ?",
        "Q a f,g = p(f, g | a) = ?",
        "h p(h | a)p(f | h, a)p(g | h, a).",
        "Under the pivot assump-tion, and theorem 2 of section 5, step 1 (the matrix decomposition step) will therefore recover values r?",
        "and s?",
        "such that r?",
        "(f | h, a) = p(f | ?",
        "(h), a) and s?",
        "(g | h, a) = p(g | ?",
        "(h), a) for some permutation ?",
        ": [m] ?",
        "[m].",
        "For simplicity, assume that ?",
        "(j) = j for all j ?",
        "[m] (the argument for other permutations involves a straightforward extension of the following argument).",
        "Under the assumptions of the theorem, p?",
        "(g, f 2 , f 3 | a?",
        "b c) = p(g, f 2 , f 3 | a?",
        "b c), hence the function being optimized in Eq. 1 is equal to ?",
        "g,f 2 ,f 3 p(g, f 2 , f 3 | a?",
        "b c) log ?",
        "(g, f 2 , f 3 ) where ?",
        "(g, f 2 , f 3 ) = ?",
        "h 1 ,h 2 ,h 3 ( ?",
        "t(h 1 , h 2 , h 3 | a?",
        "b c) ?p(g | h 1 , a)p(f 2 | h 2 , b)p(f 3 | h 3 , c)) Now consider the optimization problem in Eq. 1.",
        "By standard results for cross entropy, the maximum of the function ?",
        "g,f 2 ,f 3 p(g, f 2 , f 3 | a?",
        "b c) log q(g, f 2 , f 3 | a?",
        "b c) with respect to the q values is achieved at q(g, f 2 , f 3 | a?",
        "b c) = p(g, f 2 , f 3 | a?",
        "b c).",
        "In addition, under the assumptions of the L-PCFG, p(g, f 2 , f 3 | a?",
        "b c) = ?",
        "h 1 ,h 2 ,h 3 (p(h 1 , h 2 , h 3 | a?",
        "b c) ?p(g | h 1 , a)p(f 2 | h 2 , b)p(f 3 | h 3 , c)) Hence the maximum of Eq. 1 is achieved at ?",
        "t(h 1 , h 2 , h 3 | a?",
        "b c) = p(h 1 , h 2 , h 3 | a?",
        "b c) (2) because this gives ?",
        "(g, f 2 , f 3 ) = p(g, f 2 , f 3 | a?",
        "b c).",
        "Under the strict convexity assumption the maximum of Eq. 1 is unique, hence the ?",
        "t values must satisfy Eq. 2.",
        "Finally, it follows from Eq. 2, and the equality p?(a?",
        "b c | a) = p(a?",
        "b c | a), that Step 3 of the algorithm gives ?",
        "t(a?",
        "b c, h 2 , h 3 | a, h 1 ) = t(a?",
        "b c, h 2 , h 3 | a, h 1 ).",
        "We can now see how the strict convexity assumption is needed.",
        "Without this assumption, there may be multiple settings for ?",
        "t that achieve ?",
        "(g, f 2 , f 3 ) = p(g, f 2 , f 3 | a?",
        "b c); the values ?",
        "t(h 1 , h 2 , h 3 | a?",
        "b c) = p(h 1 , h 2 , h 3 | a?",
        "b c) will be included in this set of solutions, but other, inconsistent solutions will also be included.",
        "As an extreme example of the failure of the strict convexity assumption, consider a feature-vector definition with |F| = |G| = 1.",
        "In this case the function in Eq. 1 reduces to log ?",
        "h 1 ,h 2 ,h 3 ?",
        "t(h 1 , h 2 , h 3 | a?",
        "b c).",
        "This function has a maximum value of 0, achieved at all values of ?",
        "t. Intuitively, this definition of inside and outside tree features loses all information about the latent states, and does not allow successful learning of the underlying L-PCFG.",
        "More gener-ally, it is clear that the strict convexity assumption will depend directly on the choice of feature functions ?",
        "(t) and ?(o).",
        "Remark: The infinite data assumption, and sample complexity.",
        "The infinite data assumption deserves more discussion.",
        "It is clearly a strong assumption that there is sufficient data for 1055 Input: A set ofM skeletal trees sampled from some underlying L-PCFG.",
        "The count[.",
        ".",
        ".]",
        "function counts the number of times that event .",
        ".",
        ".",
        "occurs in the training sample.",
        "For example, count[A = a] is the number of times random variableA takes value a in the training sample.",
        "Step 0: Calculate the following estimates from the training samples: ?",
        "p?(a?",
        "b c | a) = count[R 1 = a?",
        "b c]/count[A = a] ?",
        "p?",
        "(g, f 2 , f 3 | a?",
        "b c) = count[G = g, F 2 = f 2 , F 3 = f 3 , R 1 = a?",
        "b c]/count[R 1 = a?",
        "b c] ?",
        "p?",
        "(f, g | a) = count[F = f,G = g,A = a]/count[A = a] ?",
        "?a ?",
        "I, define a matrix ?",
        "Q a ?",
        "R d?d ?",
        "where d = |F| and d ?",
        "= |G| as [ ?",
        "Q a ] f,g = p?",
        "(f, g | a).",
        "Step 1: ?a ?",
        "I, use the algorithm in figure 2 with input ?",
        "Q a to derive estimates r?",
        "(f | h, a) and s?",
        "(g | h, a).",
        "Remark: These quantities are estimates of P (F 1 = f | H 1 = h,A = a) and P (G = g | H = h,A = a) respectively.",
        "Note that under the independence assumptions of the L-PCFG, P (F 1 = f | H 1 = h,A = a) = P (F 2 = f | H 2 = h,A 2 = a) = P (F 3 = f | H 3 = h,A 3 = a).",
        "Step 2: For each rule a?",
        "b c, find ?",
        "t(h 1 , h 2 , h 3 | a?",
        "b c) values that maximize ?",
        "g,f 2 ,f 3 p?",
        "(g, f 2 , f 3 | a?",
        "b c) log ?",
        "h 1 ,h 2 ,h 3 ?",
        "t(h 1 , h 2 , h 3 | a?",
        "b c)s?",
        "(g | h 1 , a)r?",
        "(f 2 | h 2 , b)r?",
        "(f 3 | h 3 , c) (1) under the constraints ?",
        "t(h 1 , h 2 , h 3 | a?",
        "b c) ?",
        "0, and ?",
        "h 1 ,h 2 ,h 3 ?",
        "t(h 1 , h 2 , h 3 | a?",
        "b c) = 1.",
        "Remark: the function in Eq. 1 is concave in the values ?",
        "t being optimized over.",
        "We use the EM algorithm, which converges to a global optimum.",
        "Step 3: ?a?",
        "b c, h 1 , h 2 , h 3 , calculate rule parameters as follows: ?",
        "t(a?",
        "b c, h 2 , h 3 | a, h 1 ) = ?",
        "t(a?",
        "b c, h 1 , h 2 , h 3 | a)/ ?",
        "b,c,h 2 ,h 3 ?",
        "t(a?",
        "b c, h 1 , h 2 , h 3 | a) where ?",
        "t(a?",
        "b c, h 1 , h 2 , h 3 | a) = p?(a?",
        "b c | a)?",
        "?",
        "t(h 1 , h 2 , h 3 | a?",
        "b c).",
        "Output: Parameter estimates ?",
        "t(a?",
        "b c, h 2 , h 3 | a, h 1 ) for all rules a?",
        "b c, for all (h 1 , h 2 , h 3 ) ?",
        "[m]?",
        "[m]?",
        "[m].",
        "Figure 1: The learning algorithm for the t(a?",
        "b c, h 1 , h 2 , h 3 | a) parameters of an L-PCFG.",
        "the estimates p?",
        "in assumption 3 to have converged to the correct underlying values.",
        "A more detailed analysis of the algorithm would derive sample complexity results, giving guarantees on the sample size M required to reach a level of accuracy \u000f in the estimates, with probability at least 1 ?",
        "?, as a function of \u000f, ?, and other relevant quantities such as n, d, d ?",
        ",m, ?, ?",
        "and so on.",
        "In spite of the strength of the infinite data as-sumption, we stress the importance of this result as a guarantee for the algorithm.",
        "First, a guarantee of correct parameter values in the limit of infinite data is typically the starting point for a sample complexity result (see for example (Hsu et al., 2009; Anandkumar et al., 2012)).",
        "Sec-ond, our sense is that a sample complexity result can be derived for our algorithm using standard methods: specifically, the analysis in (Arora et al., 2012) gives one set of guarantees; the remaining optimization problems we solve are convex maximum-likelihood problems, which are also relatively easy to analyze.",
        "Note that several pieces of previous work on spectral methods for latent-variable models focus on algorithms that are correct under the infinite data assumption.",
        "5 The Matrix Decomposition Algorithm This section describes the matrix decomposition algorithm used in Step 1 of the learning algorithm.",
        "5.1 Problem Setting Our goal will be to solve the following matrix decomposition problem: Matrix Decomposition Problem (MDP) 1.",
        "Design an algorithm with the following inputs, as-sumptions, and outputs: 1056 Inputs: Integers m, d and d ?",
        ", and a matrix Q ?",
        "R d?d ?",
        "such that Q f,g = ?",
        "m h=1 pi(h)r(f | h)s(g | h) for some unknown parameters pi(h), r(f | h) and s(g | h) satisfying: 1) pi(h) ?",
        "0, ?",
        "m h=1 pi(h) = 1; 2) r(f | h) ?",
        "0, ?",
        "d f=1 r(f | h) = 1; 3) s(g | h) ?",
        "0, ?",
        "d ?",
        "g=1 s(g | h) = 1.",
        "Assumptions: There are values ?",
        "> 0 and ?",
        "> 0 such that the r parameters of the model are ?- separable, and the s parameters of the model are ?-separable.",
        "Outputs: Estimates p?i(h), r?",
        "(f | h) and s?",
        "(g | h) such that there is some permutation ?",
        ": [m]?",
        "[m] such that ?h, p?i(h) = pi(?",
        "(h)), ?f, h, r?",
        "(f | h) = r(f | ?",
        "(h)), and ?g, h, s?",
        "(g | h) = s(g | ?(h)).",
        "The definition of ?-separability is as follows (?- separability for s(g | h) is analogous): Definition 2 (?-separability).",
        "The parameters r(f | h) are ?-separable if for all h ?",
        "[m], there is some j ?",
        "[d] such that: 1) r(j | h) ?",
        "?",
        "; and 2) r(j | h ? )",
        "= 0 for h ?",
        "6= h. This matrix decomposition problem has clear relevance to problems in learning of latent-variable models, and in particular is a core step of the algorithm in figure 1.",
        "When given a matrix ?",
        "Q a with entries ?",
        "Q a f,g = ?",
        "h p(h | a)p(f | h, a)p(g | h, a), where p(.",
        ".",
        ".)",
        "refers to a distribution derived from an underlying L-PCFG which satisfies the pivot assumption, the method will recover the values for p(h | a), p(f | h, a) and p(g | h, a) up to a permutation over the latent states.",
        "5.2 The Algorithm of Arora et al. (2013) This section describes a variant of the algorithm of Arora et al. (2013), which is used as a component of our algorithm for MDP 1.",
        "One of the properties of this algorithm is that it solves the following problem: Matrix Decomposition Problem (MDP) 2.",
        "Design an algorithm with the following inputs, as-sumptions, and outputs: Inputs: Same as matrix decomposition problem 1.",
        "Assumptions: The parameters r(f | h) of the model are ?-separable for some value ?",
        "> 0.",
        "Outputs: Estimates p?i(h) and r?",
        "(f | h) such that ??",
        ": [m] ?",
        "[m] such that ?h, p?i(h) = pi(?",
        "(h)), ?f, h, r?",
        "(f | h) = r(f | ?(h)).",
        "This is identical to Matrix Decomposition Problem 1, but without the requirement that the values s(g | h) are returned by the algorithm.",
        "Thus an algorithm that solves MDP 2 in some sense solves ?one half?",
        "of MDP 1.",
        "For completeness we give a sketch of the algorithm that we use; it is inspired by the algorithm of Arora et al. (2012), but has some important differences.",
        "The algorithm is as follows: Step 1: Derive a function ?",
        ": [d ? ]",
        "?",
        "R l that maps each integer g ?",
        "[d ? ]",
        "to a representation ?",
        "(g) ?",
        "R l .",
        "The integer l is typically much smaller than d ?",
        ", implying that the representation is of low dimension.",
        "Arora et al. (2012) derive ?",
        "as a random projection with a carefully chosen dimension l. In our experiments, we use canonical correlation analysis (CCA) on the matrixQ to give a representation ?",
        "(g) ?",
        "R l where l = m. Step 2: For each f ?",
        "[d], calculate v f = E[?",
        "(g) | f ] = d ?",
        "?",
        "g=1 p(g | f)?",
        "(g) where p(g | f) = Q f,g / ?",
        "g Q f,g .",
        "It follows that v f = d ?",
        "?",
        "g=1 m ?",
        "h=1 p(h | f)p(g | h)?",
        "(g) = m ?",
        "h=1 p(h | f)w h where w h ?",
        "R l is equal to ?",
        "d ?",
        "g=1 p(g | h)?(g).",
        "Hence the v f vectors lie in the convex hull of a set of vectors w 1 .",
        ".",
        ".",
        "w m ?",
        "R l .",
        "Crucially, for any pivot word f for latent state h, we have p(h | f) = 1, hence v f = w h .",
        "Thus by the pivot assump-tion, the set of points v 1 .",
        ".",
        ".",
        "v d includes the vertices of the convex hull.",
        "Each point v j is a convex combination of the vertices w 1 .",
        ".",
        ".",
        "w m , where the weights in this combination are equal to p(h | j).",
        "Step 3: Use the FastAnchorWords algorithm of (Arora et al., 2012) to identify m vectors v s 1 , v s 2 , .",
        ".",
        ".",
        "v s m .",
        "The FastAnchorWords algorithm has the guarantee that there is a permutation ?",
        ": [m]?",
        "[m] such that v s i = w ?",
        "(i) for all i.",
        "This algorithm recovers the vertices of the convex hull described in step 2, using a method that greedily picks points that are as far as possible from the subspace spanned by previously picked points.",
        "Step 4: For each f ?",
        "[d] solve the problem arg min ?",
        "1 ,?",
        "2 ,...,?",
        "m || ?",
        "h ?",
        "h v s h ?",
        "v f || 2 subject to ?",
        "h ?",
        "0 and ?",
        "h ?",
        "h = 1.",
        "We use the algorithm of (Frank and Wolfe, 1956; Clarkson, 2010) for this purpose.",
        "Set q(h | f) = ?",
        "h .",
        "1057 Return the final quantities: p?i(h) = ?",
        "f p(f)q(h|f) r?",
        "(f |h) = p(f)q(h|f) ?",
        "f p(f)q(h|f) where p(f) = ?",
        "g Q f,g .",
        "5.3 An Algorithm for MDP 1 Figure 2 shows an algorithm that solves MDP 1.",
        "In steps 1 and 2 of the algorithm, the algorithm of section 5.2 is used to recover estimates r?",
        "(f | h) and s?",
        "(g | h).",
        "These distributions are equal to p(f | h) and p(g | h) up to permutations ?",
        "and ?",
        "?",
        "of the latent states respectively; unfortunately there is no guarantee that ?",
        "and ?",
        "?",
        "are the same permutation.",
        "Step 3 estimates parameters t(h ?",
        "| h) that effectively map the permutation implied by r?",
        "(f | h) to the permutation implied by s?",
        "(g | h); the latter distribution is recalculated as ?",
        "h ?",
        "?",
        "t(h ?",
        "| h)s?",
        "(g | h ?",
        ").",
        "We now state the following theorem: Theorem 2.",
        "The algorithm in figure 2 solves Matrix Decomposition Problem 1.",
        "Proof: See the supplementary material.",
        "Remark: A natural alternative to the algorithm presented would be to run Step 1 of the original algorithm, but to replace steps 2 and 3 with a step that finds s?",
        "(g | h) values that maximize ?",
        "f,g Q f,g log ?",
        "h r?",
        "(h | f)s?",
        "(g | h) This is again a convex optimization problem.",
        "We may explore this algorithm in future work.",
        "6 Additional Details of the Algorithm 6.1 Recovery of the pi and q Parameters The recovery of the pi and q parameters relies on the following additional (but benign) assumptions on the functions ?",
        "and ?",
        ": 1) For any inside tree t such that t is a unary rule of the form a ?",
        "x, the function ?",
        "is defined as ?",
        "(t) = t. 3 2) The set of outside tree features G contains a special symbol 2, and g(o) = 2 if and only if the outside tree o is derived from a non-terminal node at the root of a skeletal tree.",
        "3 Note that if other features on unary rules are desired, we can use multiple feature functions ?",
        "1 (t) .",
        ".",
        ".",
        "?",
        "K (t), where ?",
        "1 (t) = t for inside trees, and the functions ?",
        "2 (t) .",
        ".",
        ".",
        "?",
        "K (t) define other features.",
        "Inputs: As in Matrix Decomposition Problem 1.",
        "Assumptions: As in Matrix Decomposition Problem 1.",
        "Algorithm: Step 1.",
        "Run the algorithm of section 5.2 on the matrix Q to derive estimates r?",
        "(f | h) and p?i(h).",
        "Note that under the guarantees of the algorithm, there is some permutation ?",
        "such that r?",
        "(f | h) = r(f | ?(h)).",
        "Define r?",
        "(h | f) = r?",
        "(f | h)p?i(h) ?",
        "h r?",
        "(f | h)p?i(h) Step 2.",
        "Run the algorithm of section 5.2 on the matrix Q > to derive estimates s?",
        "(g | h).",
        "Under the guarantees of the algorithm, there is some permutation ?",
        "?",
        "such that s?",
        "(g | h) = s(g | ?",
        "?",
        "(h)).",
        "Note however that it is not necessarily the case that ?",
        "= ?",
        "?",
        ".",
        "Step 3.",
        "Find ?",
        "t(h ?",
        "| h) for all h, h ?",
        "?",
        "[m] that maximize ?",
        "f,g Q f,g log ?",
        "h,h ?",
        "r?",
        "(h | f) ?",
        "t(h ?",
        "| h)s?",
        "(g | h ? )",
        "(3) subject to ?",
        "t(h ?",
        "| h) ?",
        "0, and ?h, ?",
        "h ?",
        "?",
        "t(h ?",
        "| h) = 1.",
        "Remark: the function in Eq. 3 is concave in the ?",
        "t parameters.",
        "We use the EM algorithm to find a global optimum.",
        "Step 4.",
        "Return the following values: ?",
        "p?i(h) for all h, as an estimate of pi(?",
        "(h)) for some permutation ?.",
        "?",
        "r?",
        "(f | h) for all f, h as an estimate of r(f | ?",
        "(h)) for the same permutation ?.",
        "?",
        "?",
        "h ?",
        "?",
        "t(h ?",
        "| h)s?",
        "(g | h ? )",
        "as an estimate of s(f | ?",
        "(h)) for the same permutation ?.",
        "Figure 2: The algorithm for Matrix Decomposition Problem 1 Under these assumptions, the algorithm in figure 1 recovers estimates p?i(a, h) and q?",
        "(a ?",
        "x | a, h).",
        "Simply set q?(a?",
        "x | a, h) = r?",
        "(f | h, a) where f = a?",
        "x and p?i(a, h) = p?",
        "(2, h, a)/ ?",
        "h,a p?",
        "(2, h, a) where p?",
        "(2, h, a) = g?",
        "(2 | h, a)p?",
        "(h | a)p?(a).",
        "Note that p?",
        "(h | a) can be derived from the matrix decomposition step when applied to ?",
        "Q a , and p?",
        "(a) is easily recovered from the training examples.",
        "6.2 Extension to Include Multiple Features We now describe an extension to allowK separate functions ?",
        "(k) (t) for k = 1 .",
        ".",
        ".K mapping inside trees to features, and L feature functions ?",
        "(l) (o) for l = 1 .",
        ".",
        ".",
        "L over outside trees.",
        "The algorithm in figure 1 can be extended as follows.",
        "First, Step 1 of the algorithm (the matrix 1058 decomposition step) can be extended to provide estimates r?",
        "(k) (f (k) | h, a) and s?",
        "(l) (g (l) | h, a).",
        "In brief, this involves running CCA on a matrix E[?",
        "(T )(?",
        "(O)) > | A = a] where ?",
        "and ?",
        "are inside and outside binary feature vectors derived directly from the inside and outside features, using a one-hot representation.",
        "CCA results in a low-dimensional representation that can be used in the steps described in section 5.2; the remainder of the algorithm is the same.",
        "In practice, the addition of multiple features may lead to better CCA representations.",
        "Next, we modify the objective function in Eq. 1 to be the following: ?",
        "i,j,k ?",
        "g i ,f j 2 ,f k 3 p(g i , f j 2 , f k 3 | a?",
        "b c) log ?",
        "i,j,k (g i , f j 2 , f k 3 ) where ?",
        "i,j,k (g i , f j 2 , f k 3 ) = ?",
        "h 1 ,h 2 ,h 3 ( ?",
        "t(h 1 , h 2 , h 3 | a?",
        "b c) ?s?",
        "i (g i | h 1 , a)r?",
        "j (f j 2 | h 2 , b)r?",
        "k (f k 3 | h 3 , c) ) Thus the new objective function consists of a sum ofL?M 2 terms, each corresponding to a different combination of inside and outside features.",
        "The function remains concave.",
        "6.3 Use as an Initializer for EM The learning algorithm for L-PCFGs can be used as an initializer for the EM algorithm for L-PCFGs.",
        "Two-step estimation methods such as these are well known in statistics; there are guarantees for example that if the first estimator is con-sistent, and the second step finds the closest local maxima of the likelihood function, then the resulting estimator is both consistent and efficient (in terms of number of samples required).",
        "See for example page 453 or Theorem 4.3 (page 454) of (Lehmann and Casella, 1998).",
        "7 Experiments on Parsing This section describes parsing experiments using the learning algorithm for L-PCFGs.",
        "We use the Penn WSJ treebank (Marcus et al., 1993) for our experiments.",
        "Sections 2?21 were used as training data, and sections 0 and 22 were used as development data.",
        "Section 23 was used as the test set.",
        "The experimental setup is the same as described by Cohen et al. (2013).",
        "The trees are bina-rized (Petrov et al., 2006) and for the EM algorithm we use the initialization method described sec.",
        "22 sec.",
        "23 m 8 16 24 32 EM 86.69 40 88.32 30 88.35 30 88.56 20 87.76 Spectral 85.60 87.77 88.53 88.82 88.05 Pivot 83.56 86.00 86.87 86.40 85.83 Pivot+EM 86.83 2 88.14 6 88.64 2 88.55 2 88.03 Table 1: Results on the development data (section 22) and test data (section 23) for various learning algorithms for L-PCFGs.",
        "For EM and pivot+EM experiments, the second line denotes the number of iterations required to reach the given optimal performance on development data.",
        "Results for section 23 are used with the best model for section 22 in the corresponding row.",
        "The results for EM and spectral are reported from Cohen et al. (2013).",
        "in Matsuzaki et al. (2005).",
        "For the pivot algorithm we use multiple features ?",
        "1 (t) .",
        ".",
        ".",
        "?",
        "K (t) and ?",
        "1 (o) .",
        ".",
        ".",
        "?",
        "L (o) over inside and outside trees, using the features described by Cohen et al. (2013).",
        "Table 1 gives the F1 accuracy on the development and test sets for the following methods: EM: The EM algorithm as used by Matsuzaki et al. (2005) and Petrov et al. (2006).",
        "Spectral: The spectral algorithm of Cohen et al. (2012) and Cohen et al. (2013).",
        "Pivot: The algorithm described in this paper.",
        "Pivot+EM: The algorithm described in this pa-per, followed by 1 or more iterations of the EM algorithm with parameters initialized by the pivot algorithm.",
        "(See section 6.3.)",
        "For the EM and Pivot+EM algorithms, we give the number of iterations of EM required to reach optimal performance on the development data.",
        "The results show that the EM, Spectral, and Pivot+EM algorithms all perform at a very similar level of accuracy.",
        "The Pivot+EM results show that very few EM iterations?just 2 iterations in most conditions?are required to reach optimal performance when the Pivot model is used as an initializer for EM.",
        "The Pivot results lag behind the Pivot+EM results by around 2-3%, but they are close enough to optimality to require very few EM iterations when used as an initializer.",
        "8 Experiments on the Saul and Pereira (1997) Model for Language Modeling We now describe a second set of experiments, on the Saul and Pereira (1997) model for language modeling.",
        "Define V to be the set of words in the vocabulary.",
        "For any w 1 , w 2 ?",
        "V , the Saul and Pereira (1997) model then defines p(w 2 | w 1 ) = ?",
        "m h=1 r(h | w 1 )s(w 2 | h) where r(h | w 1 ) and 1059 Brown NYT m 2 4 8 16 32 128 256 test 2 4 8 16 32 128 256 test EM 737 14 599 14 488 19 468 12 430 10 388 9 365 8 364 926 36 733 39 562 42 420 33 361 38 284 35 265 32 267 bi-KN +int.",
        "408 415 271 279 tri-KN+int.",
        "386 394 150 158 pivot 852 718 605 559 537 426 597 560 1227 1264 896 717 738 782 886 715 pivot+EM 758 2 582 3 502 2 425 1 374 1 310 1 327 1 357 898 20 754 14 553 13 441 15 394 10 279 19 292 12 281 Table 2: Language model perplexity with the Brown corpus and the Gigaword corpus (New York Times portion) for the second half of the development set, and the test set.",
        "With EM and Pivot+EM, the number of iterations for EM to reach convergence is given below the perplexity.",
        "The best result for each column (for each m value) is in bold.",
        "The ?test?",
        "column gives perplexity results on the test set.",
        "Each perplexity calculation on the test set is done using the best model on the development set.",
        "bi-KN+int and tri-KN+int are bigram and trigram Kneser-Ney interpolated models (Kneser and Ney, 1995), using the SRILM toolkit.",
        "s(w 2 | h) are parameters of the approach.",
        "The conventional approach to estimation of the parameters r(h | w 1 ) and s(w 2 | h) from a corpus is to use the EM algorithm.",
        "In this section we compare the EM algorithm to a pivot-based method.",
        "It is straightforward to represent this model as an L-PCFG, and hence to use our implementation for estimation.",
        "In this special case, the L-PCFG learning algorithm is equivalent to a simple algorithm, with the following steps: 1) define the matrix Q with entries Q w 1 ,w 2 = count(w 1 , w 2 )/N where count(w 1 , w 2 ) is the number of times that bigram (w 1 , w 2 ) is seen in the data, and N = ?",
        "w 1 ,w 2 count(w 1 , w 2 ).",
        "Run the algorithm of section 5.2 on Q to recover estimates s?",
        "(w 2 | h); 2) estimate r?",
        "(h | w 1 ) using the EM algorithm to optimize the function ?",
        "w 1 ,w 2 Q w 1 ,w 2 log ?",
        "h r?",
        "(h | w 1 )s?",
        "(w 2 | h) with respect to the r?",
        "parameters; this function is concave in these parameters.",
        "We performed the language modeling experiments for a number of reasons.",
        "First, because in this case the L-PCFG algorithm reduces to a simple algorithm, it allows us to evaluate the core ideas in the method very directly.",
        "Second, it allows us to test the pivot method on the very large datasets that are available for language modeling.",
        "We use two corpora for our experiments.",
        "The first is the Brown corpus, as used by Bengio et al. (2006) in language modeling experiments.",
        "Following Bengio et al. (2006), we use the first 800K words for training (and replace all words that appear once with an UNK token), the next 200K words for development, and the remaining data (165,171 tokens) as a test set.",
        "The size of the vocabulary is 24,488 words.",
        "The second corpus we use is the New York Times portion of the Gigaword corpus.",
        "Here, the training set consists of 1.31 billion tokens.",
        "We use 159 million tokens for development set and 156 million tokens for test.",
        "All words that appeared less than 20 times in the training set were replaced with the UNK token.",
        "The size of the vocabulary is 235,223 words.",
        "Unknown words in test data are ignored when calculating perplexity (this is the standard set-up in the SRILM toolkit).",
        "In our experiments we use the first half of each development set to optimize the number of iterations of the EM or Pivot+EM algorithms.",
        "As be-fore, Pivot+EM uses 1 or more EM steps with parameter initialization from the Pivot method.",
        "Table 2 gives perplexity results for the different algorithms.",
        "As in the parsing experiments, the Pivot method alone performs worse than EM, but the Pivot+EM method gives results that are competitive with EM.",
        "The Pivot+EM method requires fewer iterations of EM than the EM algorithm.",
        "On the Brown corpus the difference is quite dra-matic, with only 1 or 2 iterations required, as opposed to 10 or more for EM.",
        "For the NYT corpus the Pivot+EM method requires more iterations (around 10 or 20), but still requires significantly fewer iterations than the EM algorithm.",
        "On the Gigaword corpus, with m = 256, EM takes 12h57m (32 iterations at 24m18s per itera-tion) compared to 1h50m for the Pivot method.",
        "On Brown, EM takes 1m47s (8 iterations) compared to 5m44s for the Pivot method.",
        "Both the EM and pivot algorithm implementations were highly op-timized, and written in Matlab.",
        "Results at other values of m are similar.",
        "From these results the Pivot method appears to become more competitive speed-wise as the data size increases (the Gigaword corpus is more than 1,300 times larger than the Brown corpus).",
        "9 Conclusion We have described a new algorithm for parameter estimation in L-PCFGs.",
        "The algorithm is provably correct, and performs well in practice when used in conjunction with EM.",
        "1060 References"
      ]
    }
  ]
}
