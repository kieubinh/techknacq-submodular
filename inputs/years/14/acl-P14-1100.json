{
  "info": {
    "authors": [
      "Ankur P. Parikh",
      "Shay B. Cohen",
      "Eric P. Xing"
    ],
    "book": "ACL",
    "id": "acl-P14-1100",
    "title": "Spectral Unsupervised Parsing with Additive Tree Metrics",
    "url": "https://aclweb.org/anthology/P14-1100",
    "year": 2014
  },
  "references": [
    "acl-D13-1059",
    "acl-D13-1204",
    "acl-J12-3003",
    "acl-J92-4003",
    "acl-J93-2004",
    "acl-N09-1009",
    "acl-N09-1012",
    "acl-N10-1116",
    "acl-N12-1069",
    "acl-P02-1017",
    "acl-P05-1044",
    "acl-P07-1049",
    "acl-P10-1040",
    "acl-P10-2036",
    "acl-P12-1024",
    "acl-P12-2004",
    "acl-P13-1044",
    "acl-P99-1059",
    "acl-W10-2902"
  ],
  "sections": [
    {
      "text": [
        "Abstract",
        "We propose a spectral approach for unsupervised constituent parsing that comes with theoretical guarantees on latent structure recovery.",
        "Our approach is grammar-less ?",
        "we directly learn the bracketing structure of a given sentence without using a grammar model.",
        "The main algorithm is based on lifting the concept of additive tree metrics for structure learning of latent trees in the phylogenetic and machine learning communities to the case where the tree structure varies across examples.",
        "Although finding the ?minimal?",
        "latent tree is NP-hard in general, for the case of projective trees we find that it can be found using bilexical parsing algorithms.",
        "Empir-ically, our algorithm performs favorably compared to the constituent context model of Klein and Manning (2002) without the need for careful initialization."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Solutions to the problem of grammar induction have been long sought after since the early days of computational linguistics and are interesting both from cognitive and engineering perspectives.",
        "Cog-nitively, it is more plausible to assume that children obtain only terminal strings of parse trees and not the actual parse trees.",
        "This means the unsupervised setting is a better model for studying language acquisition.",
        "From the engineering perspec-tive, training data for unsupervised parsing exists in abundance (i.e. sentences and part-of-speech tags), and is much cheaper than the syntactically annotated data required for supervised training.",
        "Most existing solutions treat the problem of unsupervised parsing by assuming a generative process over parse trees e.g. probabilistic context free grammars (Jelinek et al., 1992), and the constituent context model (Klein and Manning, 2002).",
        "Learning then reduces to finding a set of parameters that are estimated by identifying a local maximum of an objective function such as the likelihood (Klein and Manning, 2002) or a variant of it (Smith and Eisner, 2005; Cohen and Smith, 2009; Headden et al., 2009; Spitkovsky et al., 2010b; Gillenwater et al., 2010; Golland et al., 2012).",
        "Un-fortunately, finding the global maximum for these objective functions is usually intractable (Cohen and Smith, 2012) which often leads to severe local optima problems (but see Gormley and Eisner, 2013).",
        "Thus, strong experimental results are often achieved by initialization techniques (Klein and Manning, 2002; Gimpel and Smith, 2012), incremental dataset use (Spitkovsky et al., 2010a) and other specialized techniques to avoid local optima such as count transforms (Spitkovsky et al., 2013).",
        "These approaches, while empirically promising, generally lack theoretical justification.",
        "On the other hand, recently proposed spectral methods approach the problem via restriction of the PCFG model (Hsu et al., 2012) or matrix completion (Bailly et al., 2013).",
        "These novel perspectives offer strong theoretical guarantees but are not designed to achieve competitive empirical results.",
        "In this paper, we suggest a different approach, to provide a first step to bridging this theory-experiment gap.",
        "More specifically, we approach unsupervised constituent parsing from the perspective of structure learning as opposed to parameter learning.",
        "We associate each sentence with an undirected latent tree graphical model, which is a tree consisting of both observed variables (corre- sponding to the words in the sentence) and an additional set of latent variables that are unobserved in the data.",
        "This undirected latent tree is then directed via a direction mapping to give the final constituent parse.",
        "In our framework, parsing reduces to finding the best latent structure for a given sentence.",
        "How-ever, due to the presence of latent variables, structure learning of latent trees is substantially more complicated than in observed models.",
        "As before, one solution would be local search heuristics.",
        "Intuitively, however, latent tree models encode low rank dependencies among the observed variables permitting the development of ?spec- 1062 tral?",
        "methods that can lead to provably correct solutions.",
        "In particular we leverage the concept of additive tree metrics (Buneman, 1971; Buneman, 1974) in phylogenetics and machine learning that can create a special distance metric among the observed variables as a function of the underlying spectral dependencies (Choi et al., 2011; Song et al., 2011; Anandkumar et al., 2011; Ishteva et al., 2012).",
        "Additive tree metrics can be leveraged by ?meta-algorithms?",
        "such as neighbor-joining (Saitou and Nei, 1987) and recursive grouping (Choi et al., 2011) to provide consistent learning algorithms for latent trees.",
        "Moreover, we show that it is desirable to learn the ?minimal?",
        "latent tree based on the tree metric (?minimum evolution?",
        "in phylogenetics).",
        "While this criterion is in general NP-hard (Desper and Gascuel, 2005), for projective trees we find that a bilexical parsing algorithm can be used to find an exact solution efficiently (Eisner and Satta, 1999).",
        "Unlike in phylogenetics and graphical models, where a single latent tree is constructed for all the data, in our case, each part of speech sequence is associated with its own parse tree.",
        "This leads to a severe data sparsity problem even for moderately long sentences.",
        "To handle this issue, we present a strategy that is inspired by ideas from kernel smoothing in the statistics community (Zhou et al., 2010; Kolar et al., 2010b; Kolar et al., 2010a).",
        "This allows principled sharing of samples from different but similar underlying distributions.",
        "We provide theoretical guarantees on the recovery of the correct underlying latent tree and characterize the associated sample complexity under our technique.",
        "Empirically we evaluate our method on data in English, German and Chinese.",
        "Our algorithm performs favorably to Klein and Manning's (2002) constituent-context model (CCM), without the need for careful initialization.",
        "In addition, we also analyze CCM's sensitivity to initialization, and compare our results to Seginer's algorithm (Seginer, 2007).",
        "2 Learning Setting and Model In this section, we detail the learning setting and a conditional tree model we learn the structure for.",
        "2.1 Learning Setting Let w = (w 1 , ..., w ` ) be a vector of words corresponding to a sentence of length `.",
        "Each w i is represented by a vector in R p for p ?",
        "N. The vector is an embedding of the word in some space, cho-VBD DT NNVBD DT NN Figure 2: Candidate constituent parses for x = (VBD, DT, NN) (left-correct, right -incorrect) sen from a fixed dictionary that maps word types to R p .",
        "In addition, let x = (x 1 , ..., x ` ) be the associated vector of part-of-speech (POS) tags (i.e. x i is the POS tag of w i ).",
        "In our learning algorithm, we assume that examples of the form (w (i) ,x (i) ) for i ?",
        "[N ] = {1, .",
        ".",
        ".",
        ", N} are given, and the goal is to predict a bracketing parse tree for each of these examples.",
        "The word embeddings are used during the learning process, but the final decoder that the learning algorithm outputs maps a POS tag sequence x to a parse tree.",
        "While ideally we would want to use the word information in decoding as well, much of the syntax of a sentence is determined by the POS tags, and relatively high level of accuracy can be achieved by learning, for example, a supervised parser from POS tag sequences.",
        "Just like our decoder, our model assumes that the bracketing of a given sentence is a function of its POS tags.",
        "The POS tags are generated from some distribution, followed by a deterministic generation of the bracketing parse tree.",
        "Then, latent states are generated for each bracket, and finally, the latent states at the yield of the bracketing parse tree generate the words of the sentence (in the form of embeddings).",
        "The latent states are represented by vectors z ?",
        "R m where m < p. 2.2 Intuition For intuition, consider the simple tag sequence x = (VBD, DT, NN).",
        "Two candidate constituent parse structures are shown in Figure 2 and the correct one is boxed in green (the other in red).",
        "Recall that our training data contains word phrases that have the tag sequence x e.g. w (1) = (hit, the, ball), w (2) = (ate, an, apple).",
        "Intuitively, the words in the above phrases exhibit dependencies that can reveal the parse structure.",
        "The determiner (w 2 ) and the direct object (w 3 ) are correlated in that the choice of determiner depends on the plurality of w 3 .",
        "However, the choice of verb (w 1 ) is mostly independent of the determiner.",
        "We could thus conclude that w 2 and w 3 should be closer in the parse tree than w 1 1063 The be ar ate the fish ?1 , ?2 , ?3 , ?4 , ?5 , ?1, ?2, ?3 ?",
        "= (??,?",
        "?, ??",
        "?, ??,??)",
        "?(?)",
        "((DT NN) (VBD (DT NN))) w 1 w 2 w 3 z 3 z 1 w 4 w 5 z 2 w 1 w 2 w 3 z 3z 1 w 4 w 5 z 2 Figure 1: Example for the tag sequence (DT, NN, VBD, DT, NN) showing the overview of our approach.",
        "We first learn a undirected latent tree for the sequence (left).",
        "We then apply a direction mapping h dir to direct the latent tree (center).",
        "This can then easily be converted into a bracketing (right).",
        "andw 2 , giving us the correct structure.",
        "Informally, the latent state z corresponding to the (w 2 , w 3 ) bracket would store information about the plurality of z, the key to the dependence betweenw 2 and w 3 .",
        "It would then be reasonable to assume that w 2 and w 3 are independent given z.",
        "2.3 A Conditional Latent Tree Model Following this intuition, we propose to model the distribution over the latent bracketing states and words for each tag sequence x as a latent tree graphical model, which encodes conditional independences among the words given the latent states.",
        "Let V := {w 1 , ..., w ` , z 1 , ..., z H }, with w i representing the word embeddings, and z i representing the latent states of the bracketings.",
        "Then, according to our base model it holds that: p(w, z|x) = H ?",
        "i=1 p(z i |pix(zi), ?",
        "(x)) ?",
        "`(x) ?",
        "i=1 p(w i |pix(wi), ?",
        "(x)) (1) where pix(?)",
        "returns the parent node index of the argument in the latent tree corresponding to tag sequence x.",
        "1 If z is the root, then pix(z) = ?.",
        "All the w i are assumed to be leaves while all the z i are internal (i.e. non-leaf) nodes.",
        "The parameters ?",
        "(x) control the conditional probability tables.",
        "We do not commit to a certain parametric family, but see more about the assumptions we make about ?",
        "in ?3.2.",
        "The parameter space is denoted ?.",
        "The model assumes a factorization according to a latent-variable tree.",
        "The latent variables can incorporate various linguistic properties, such as head information, valence of dependency being generated, and so on.",
        "This information is expected to be learned automatically from data.",
        "Our generative model deterministically maps a POS sequence to a bracketing via an undirected 1 At this point, pi refers to an arbitrary direction of the undirected tree u(x).",
        "latent-variable tree.",
        "The orientation of the tree is determined by a direction mapping h dir (u), which is fixed during learning and decoding.",
        "This means our decoder first identifies (given a POS sequence) an undirected tree, and then orients it by applying h dir on the resulting tree (see below).",
        "Define U to be the set of undirected latent trees where all internal nodes have degree exactly 3 (i.e. they correspond to binary bracketing), and in addition h dir (u) for any u ?",
        "U is projective (explained in the h dir section).",
        "In addition, let T be the set of binary bracketings.",
        "The complete generative model that we follow is then: ?",
        "Generate a tag sequence x = (x 1 , .",
        ".",
        ".",
        ", x ` ) ?",
        "Decide on u(x) ?",
        "U , the undirected latent tree that x maps to.",
        "?",
        "Set t ?",
        "T by computing t = h dir (u).",
        "?",
        "Set ?",
        "?",
        "?",
        "by computing ?",
        "= ?(x).",
        "?",
        "Generate a tuple v = (w 1 , .",
        ".",
        ".",
        ", w ` , z 1 , ..., z H ) where w i ?",
        "R p , z j ?",
        "R m according to Eq. 1.",
        "See Figure 1 (left) for an example.",
        "The Direction Mapping h dir .",
        "Generating a bracketing via an undirected tree enables us to build on existing methods for structure learning of latent-tree graphical models (Choi et al., 2011; Anandkumar et al., 2011).",
        "Our learning algorithm focuses on recovering the undirected tree based for the generative model that was described above.",
        "This undirected tree is converted into a directed tree by applying h dir .",
        "The mapping h dir works in three steps: ?",
        "It first chooses a top bracket ([1, R ?",
        "1], [R, `]) where R is the mid-point of the bracket and ` is the length of the sentence.",
        "?",
        "It marks the edge e i,j that splits the tree according to the top bracket as the ?root edge?",
        "(marked in red in Figure 1(center)) ?",
        "It then creates t from u by directing the tree outward from e i,j as shown in Figure 1(center) 1064 The resulting t is a binary bracketing parse tree.",
        "As implied by the above definition of h dir , selecting which edge is the root can be interpreted as determining the top bracket of the constituent parse.",
        "For example, in Figure 1, the top bracket is ([1, 2], [3, 5]) = ([DT, NN], [VBD, DT, NN]).",
        "Note that the ?root?",
        "edge e z 1 ,z 2 partitions the leaves into precisely this bracketing.",
        "As indicated in the above section, we restrict the set of undirected trees to be those such that after applying h dir the resulting t is projective i.e. there are no crossing brackets.",
        "In ?4.1, we discuss an effective heuristic to find the top bracket without supervision.",
        "3 Spectral Learning Algorithm based on Additive Tree Metrics Our goal is to recover t ?",
        "T for tag sequence x using the data D = [(w (i) ,x (i) )] N i=1 .",
        "To get an intuition about the algorithm, consider a partition of the set of examplesD intoD(x) = {(w (i) ,x (i) ) ?",
        "D|x (i) = x}, i.e. each section in the partition has an identical sequence of part of speech tags.",
        "Assume for this section |D(x)| is large (we address the data sparsity issue in ?3.4).",
        "We can then proceed by learning how to map a POS sequence x to a tree t ?",
        "T (through u ?",
        "U) by focusing only on examples in D(x).",
        "Directly attempting to maximize the likelihood unfortunately results in an intractable optimization problem and greedy heuristics are often employed (Harmeling and Williams, 2011).",
        "Instead we propose a method that is provably consistent and returns a tree that can be mapped to a bracketing using h dir .",
        "If all the variables were observed, then the Chow-Liu algorithm (Chow and Liu, 1968) could be used to find the most likely tree structure u ?",
        "U .",
        "The Chow-Liu algorithm essentially computes the distances among all pairs of variables (the negative of the mutual information) and then finds the minimum cost tree.",
        "However, the fact that the z i are latent variables makes this strategy substantially more complicated.",
        "In particular, it becomes challenging to compute the distances among pairs of latent variables.",
        "What is needed is a ?special?",
        "distance function that allows us to reverse engineer the distances among the latent variables given the distances among the observed variables.",
        "This is the key idea behind additive tree metrics that are the basis of our approach.",
        "In the following sections, we describe the key steps to our method.",
        "?3.1 and ?3.2 largely describe existing background on additive tree metrics and latent tree structure learning, while ?3.3 and ?3.4 discuss novel aspects that are unique to our problem.",
        "3.1 Additive Tree Metrics Let u(x) be the true undirected tree of sentence x and assume the nodes V to be indexed by [M ] = {1, .",
        ".",
        ".",
        ",M} such that M = |V| = H + `.",
        "Fur-thermore, let v ?",
        "V refer to a node in the undirected tree (either observed or latent).",
        "We assume the existence of a distance function that allows us to compute distances between pairs of nodes.",
        "For example, as we see in ?3.2 we will define the distance d(i, j) to be a function of the covariance matrix E[v i v > j |u(x), ?(x)].",
        "Thus if v i and v j are both observed variables, the distance can be directly computed from the data.",
        "Moreover, the metrics we construct are such that they are tree additive, defined below: Definition 1 A function d u(x) : [M ]?",
        "[M ]?",
        "R is an additive tree metric (Erd?os et al., 1999) for the undirected tree u(x) if it is a distance metric, 2 and furthermore, ?i, j ?",
        "[M ] the following relation holds: d u(x)(i, j) = ?",
        "(a,b)?path u(x)(i,j) d u(x)(a, b) (2) where path u(x)(i, j) is the set of all the edges in the (undirected) path from i to j in the tree u(x).",
        "As we describe below, given the tree structure, the additive tree metric property allows us to compute ?backwards?",
        "the distances among the latent variables as a function of the distances among the observed variables.",
        "Define D to be the M ?",
        "M distance matrix among the M variables, i.e. D ij = d u(x)(i, j).",
        "LetD WW , D ZW (equal toD > WZ ), andD ZZ indicate the word-word, latent-word and latent-latent sub-blocks of D respectively.",
        "In addition, since u(x) is assumed to be known from context, we denote d u(x)(i, j) just by d(i, j).",
        "Given the fact that the distance between a pair of nodes is a function of the random variables they represent (according to the true model), only D WW can be empirically estimated from data.",
        "However, if the underlying tree structure is known, then Definition 1 can be leveraged to compute D ZZ and D ZW as we show below.",
        "2 This means that it satisfies d(i, j) = 0 if and only if i = j, the triangle inequality and is also symmetric.",
        "1065 v j v ie i , j (a) v ie i , jv j (b) Figure 3: Two types of edges in general undirected latent trees.",
        "(a) leaf edge, (b) internal edge We first show how to compute d(i, j) for all i, j such that i and j are adjacent to each other in u(x), based only on observed nodes.",
        "It then follows that the other elements of the distance matrix can be computed based on Definition 1.",
        "To show how to compute distances between adjacent nodes, consider the two cases: (1) (i, j) is a leaf edge; (2) (i, j) is an internal edge.",
        "Case 1 (leaf edge, figure 3(a)) Assume without loss of generality that j is the leaf and i is an internal latent node.",
        "Then i must have exactly two other neighbors a ?",
        "[M ] and b ?",
        "[M ].",
        "Let A denote the set of nodes that are closer to a than i and similarly let B denote the set of nodes that are closer to b than i.",
        "Let A ?",
        "and B ?",
        "denote all the leaves (word nodes) in A and B respectively.",
        "Then using path additivity (Definition 1), it can be shown that for any a ?",
        "?",
        "A ?",
        ", b ?",
        "?",
        "B ?",
        "it holds that: d(i, j) = 1 2 (d(j, a ? )",
        "+ d(j, b ?",
        ")?",
        "d(a ?",
        ", b ? ))",
        "(3) Note that the right-hand side only depends on distances between observed random variables.",
        "Case 2 (internal edge, figure 3(b)) Both i and j are internal nodes.",
        "In this case, i has exactly two other neighbors a ?",
        "[M ] and b ?",
        "[M ], and similarly, j has exactly other two neighbors g ?",
        "[M ] and h ?",
        "[M ].",
        "Let A denote the set of nodes closer to a than i, and analogously for B, G, and H .",
        "Let A ?",
        ", B ?",
        ", G ?",
        ", and H ?",
        "refer to the leaves in A,B,G, and H respectively.",
        "Then for any a ?",
        "?",
        "A ?",
        ", b ?",
        "?",
        "B ?",
        ", g ?",
        "?",
        "G ?",
        ", and h ?",
        "?",
        "H ?",
        "it can be shown that: d(i, j) = 1 4 ( d(a ?",
        ", g ? )",
        "+ d(a ?",
        ", h ? )",
        "+ d(b ?",
        ", g ? )",
        "+d(b ?",
        ", h ?",
        ")?",
        "2d(a ?",
        ", b ?",
        ")?",
        "2d(g ?",
        ", h ? )",
        ") (4) Empirically, one can obtain a more robust empirical estimate ?",
        "d(i, j) by averaging over all valid choices of a ?",
        ", b ?",
        "in Eq. 3 and all valid choices of a ?",
        ", b ?",
        ", g ?",
        ", h ?",
        "in Eq. 4 (Desper and Gascuel, 2005).",
        "3.2 Constructing a Spectral Additive Metric In constructing our distance metric, we begin with the following assumption on the distribution in Eq. 1 (analogous to the assumptions made in Anandkumar et al., 2011).",
        "Assumption 1 (Linear, Rank m, Means) E[z i |pix(zi),x] = A (z i |z pix(z i ) ,x)pix(zi) ?i ?",
        "[H] where A (z i |pix(z i ),x) ?",
        "R m?m has rank m. E[w i |pix(wi),x] = C (w i |pix(w i ),x)pix(wi) ?i ?",
        "[`(x)] where C (w i |pix(w i ),x) ?",
        "R p?m has rank m. Also assume that E[z i z > i |x] has rank m ?i ?",
        "[H].",
        "Note that the matrices A and C are a direct function of ?",
        "(x), but we do not specify a model family for ?(x).",
        "The only restriction is in the form of the above assumption.",
        "If w i and z i were dis-crete, represented as binary vectors, the above assumption would correspond to requiring all conditional probability tables in the latent tree to have rankm.",
        "Assumption 1 allows for the w i to be high dimensional features, as long as the expectation requirement above is satisfied.",
        "Similar assumptions are made with spectral parameter learning methods e.g. Hsu et al. (2009), Bailly et al. (2009), Parikh et al. (2011), and Cohen et al. (2012).",
        "Furthermore, Assumption 1 makes it explicit that regardless of the size of p, the relationships among the variables in the latent tree are restricted to be of rank m, and are thus low rank since p > m. To leverage this low rank structure, we propose using the following additive metric, a normalized variant of that in Anandkumar et al. (2011): d spectral (i, j) = ?",
        "log ?",
        "m (?x(i, j)) + 1 2 log ?",
        "m (?x(i, i)) + 1 2 log ?",
        "m (?x(j, j)) (5) where ?",
        "m (A) denotes the product of the top m singular values of A and ?x(i, j) := E[viv > j |x], i.e. the uncentered cross-covariance matrix.",
        "We can then show that this metric is additive: Lemma 1 If Assumption 1 holds then, d spectral is an additive tree metric (Definition 1).",
        "A proof is in the supplementary for completeness.",
        "From here, we use d to denote d spectral , since that is the metric we use for our learning algorithm.",
        "1066 3.3 Recovering the Minimal Projective Latent Tree It has been shown (Rzhetsky and Nei, 1993) that for any additive tree metric, u(x) can be recovered by solving arg min u?U c(u) for c(u): c(u) = ?",
        "(i,j)?E u d(i, j).",
        "(6) where E u is the set of pairs of nodes which are adjacent to each other in u and d(i, j) is computed using Eq. 3 and Eq. 4.",
        "Note that the metric d we use in defining c(u) is based on the expectations from the true distribution.",
        "In practice, the true distribution is un-known, and therefore we use an approximation for the distance metric ?",
        "d. As we discussed in ?3.1 all elements of the distance matrix are functions of observable quantities if the underlying tree u is known.",
        "However, only the word-word sub-block D WW can be directly estimated from the data without knowledge of the tree structure.",
        "This subtlety makes solving the minimization problem in Eq. 6 NP-hard (Desper and Gascuel, 2005) if u is allowed to be an arbitrary undirected tree.",
        "However, if we restrict u to be in U , as we do in the above, then maximizing c?",
        "(u) over U can be solved using the bilexical parsing algorithm from Eisner and Satta (1999).",
        "This is because the computation of the other sub-blocks of the distance matrix only depend on the partitions of the nodes shown in Figure 3 into A, B, G, and H , and not on the entire tree structure.",
        "Therefore, the procedure to find a bracketing for a given POS tag x is to first estimate the distance matrix sub-block ?",
        "D WW from raw text data (see ?3.4), and then solve the optimization problem arg min u?U c?",
        "(u) using a variant of the Eisner-Satta algorithm where c?",
        "(u) is identical to c(u) in Eq. 6, with d replaced with ?",
        "d. Summary.",
        "We first defined a generative model that describes how a sentence, its sequence of POS tags, and its bracketing is generated (?2.3).",
        "First an undirected u ?",
        "U is generated (only as a function of the POS tags), and then u is mapped to a bracketing using a direction mapping h dir .",
        "We then showed that we can define a distance metric between nodes in the undirected tree, such that minimizing it leads to a recovery of u.",
        "This distance metric can be computed based only on the text, without needing to identify the latent information (?3.2).",
        "If the true distance metric is known, Algorithm 1 The learning algorithm for finding the latent structure from a set of examples (w (i) ,x (i) ), i ?",
        "[N ].",
        "Inputs: Set of examples (w (i) ,x (i) ) for i ?",
        "[N ], a kernel K ?",
        "(j, k, j ?",
        ", k ?",
        "|x,x ?",
        "), an integer m Data structures: For each i ?",
        "[N ], j, k ?",
        "`(x (i) ) there is a (uncentered) covariance matrix ?",
        "?x(i)(j, k) ?",
        "R p?p , and a distance ?",
        "d spectral (j, k).",
        "Algorithm: (Covariance estimation) ?i ?",
        "[N ], j, k ?",
        "`(x (i) ) ?",
        "Let C j ?",
        ",k ?",
        "|i ?",
        "= w (i ? )",
        "j ?",
        "(w (i ? )",
        "k ? )",
        "> , k j,k,j ?",
        ",k ?",
        ",i,i ?",
        "= K ?",
        "(j, k, j ?",
        ", k ?",
        "|x (i) ,x (i ? )",
        ") and ` i ?",
        "= `(x (i ? )",
        "), and estimate each p?",
        "p covariance matrix as: ?",
        "?x(j, k) = ?",
        "N i ?",
        "=1 ?",
        "` i ?",
        "j ?",
        "=1 ?",
        "` i ?",
        "k ?",
        "=1 k j,k,j ?",
        ",k ?",
        ",i,i ?",
        "C j ?",
        ",k ?",
        "|i ?",
        "?",
        "N i ?",
        "=1 ?",
        "` i ?",
        "j ?",
        "=1 ?",
        "` i ?",
        "k ?",
        "=1 k j,k,j ?",
        ",k ?",
        ",i,i ?",
        "?",
        "Compute ?",
        "d spectral (j, k) ?j, k ?",
        "`(x (i) ) using Eq. 5.",
        "(Uncover structure) ?i ?",
        "[N ] ?",
        "Find u?",
        "(i) = arg min u?U c?",
        "(u), and for the ith example, return the structure h dir (u?",
        "(i) ).",
        "with respect to the true distribution that generates the words in a sentence, then u can be fully recovered by optimizing the cost function c(u).",
        "How-ever, in practice the distance metric must be estimated from data, as discussed below.",
        "3.4 Estimation of d from Sparse Data We now address the data sparsity problem, in particular that D(x) can be very small, and therefore estimating d for each POS sequence separately can be problematic.",
        "3 In order to estimate d from data, we need to estimate the covariance matrices ?x(i, j) (for i, j ?",
        "{1, .",
        ".",
        ".",
        ", `(x)}) from Eq. 5.",
        "To give some motivation to our solu-tion, consider estimating the covariance matrix ?x(1, 2) for the tag sequence x = (DT 1 , NN 2 , VBD 3 , DT 4 , NN 5 ).",
        "D(x) may be insufficient for an accurate empirical es-3 This data sparsity problem is quite severe ?",
        "for example, the Penn treebank (Marcus et al., 1993) has a total number of 43,498 sentences, with 42,246 unique POS tag sequences, averaging |D(x)| to be 1.04.",
        "1067 timate.",
        "However, consider another sequence x ?",
        "= (RB 1 , DT 2 , NN 3 , VBD 4 , DT 5 , ADJ 6 , NN 7 ).",
        "Although x and x ?",
        "are not identical, it is likely that ?x?",
        "(2, 3) is similar to ?x(1, 2) because the determiner and the noun appear in similar syntactic context.",
        "?x?",
        "(5, 7) also may be somewhat similar, but ?x?",
        "(2, 7) should not be very similar to ?x(1, 2) because the noun and the determiner appear in a different syntactic context.",
        "The observation that the covariance matrices depend on local syntactic context is the main driving force behind our solution.",
        "The local syntactic context acts as an ?anchor,?",
        "which enhances or replaces a word index in a sentence with local syntactic context.",
        "More formally, an anchor is a function G that maps a word index j and a sequence of POS tags x to a local context G(j,x).",
        "The anchor we use is G(j,x) = (j, x j ).",
        "Then, the covariance matrices ?x are estimated using kernel smoothing (Hastie et al., 2009), where the smoother tests similarity between the different anchors G(j,x).",
        "The full learning algorithm is given in Figure 1.",
        "The first step in the algorithm is to estimate the covariance matrix block ?",
        "?x(i)(j, k) for each training example x (i) and each pair of preterminal positions (j, k) in x (i) .",
        "Instead of computing this block by computing the empirical covariance matrix for positions (j, k) in the data D(x), the algorithm uses all of the pairs (j ?",
        ", k ? )",
        "from all of N training examples.",
        "It averages the empirical covariance matrices from these contexts using a kernel weight, which gives a similarity measure for the position (j, k) in x (i) and (j ?",
        ", k ? )",
        "in another example x (i ? )",
        ".",
        "?",
        "is the kernel ?bandwidth?, a user-specified parameter that controls how inclusive the kernel will be with respect to examples in D (see ?",
        "4.1 for a concrete example).",
        "Note that the learning algorithm is such that it ensures that ?",
        "?x(i)(j, k) = ?",
        "?x(i?",
        ")(j ?",
        ", k ? )",
        "if G(j,x (i) ) = G(j ?",
        ",x (i ? )",
        ") and G(k,x (i) ) = G(k ?",
        ",x (i ? )",
        ").",
        "Once the empirical estimates for the covariance matrices are obtained, a variant of the Eisner-Satta algorithm is used, as mentioned in ?3.3.",
        "3.5 Theoretical Guarantees Our main theoretical guarantee is that Algorithm 1 will recover the correct tree u ?",
        "U with high prob-ability, if the given top bracket is correct and if we obtain enough examples (w (i) ,x (i) ) from the model in ?2.",
        "We give the theorem statement below.",
        "The constants lurking in the O-notation and the full proof are in the supplementary.",
        "Denote ?x(j, k) (r) as the r th singular value of ?x(j, k).",
        "Let ?",
        "?",
        "(x) := min j,k?`(x) min ( ?x(j, k) (m) ) .",
        "Theorem 1 Define u?",
        "as the estimated tree for tag sequence x and u(x) as the correct tree.",
        "Let 4(x) := min u ?",
        "?U :u ?",
        "6=u(x) (c(u(x))?",
        "c(u ?",
        "))/(8|`(x)|) Assume that N ?",
        "O ?",
        "?",
        "m 2 log ( p 2 `(x)2 ? )",
        "min(?",
        "?",
        "(x) 2 4(x) 2 , ?",
        "?",
        "(x) 2 )?x(?)",
        "2 ?",
        "?",
        "Then with probability 1?",
        "?, u?",
        "= u(x).",
        "where ?x(?",
        "), defined in the supplementary, is a function of the underlying distribution over the tag sequences x and the kernel bandwidth ?.",
        "Thus, the sample complexity of our approach depends on the dimensionality of the latent and observed states (m and p), the underlying singular values of the cross-covariance matrices (?",
        "?",
        "(x)) and the difference in the cost of the true tree compared to the cost of the incorrect trees (4(x)).",
        "4 Experiments We report results on three different languages: En-glish, German, and Chinese.",
        "For English we use the Penn treebank (Marcus et al., 1993), with sections 2?21 for training and section 23 for final testing.",
        "For German and Chinese we use the Ne-gra treebank and the Chinese treebank respectively and the first 80% of the sentences are used for training and the last 20% for testing.",
        "All punctuation from the data is removed.",
        "4 We primarily compare our method to the constituent-context model (CCM) of Klein and Manning (2002).",
        "We also compare our method to the algorithm of Seginer (2007).",
        "4.1 Experimental Settings Top bracket heuristic Our algorithm requires the top bracket in order to direct the latent tree.",
        "In practice, we employ the following heuristic to find the bracket using the following three steps: ?",
        "If there exists a comma/semicolon/colon at index i that has at least a verb before i and both a noun followed by a verb after i, then return ([0, i ?",
        "1], [i, `(x)]) as the top bracket.",
        "(Pick the rightmost comma/semicolon/colon if multiple satisfy the criterion).",
        "4 We make brief use of punctuation for our top bracket heuristic detailed below before removing it.",
        "1068 Length CCM CCM-U CCM-OB CCM-UB ?",
        "10 72.5 57.1 58.2 62.9 ?",
        "15 54.1 36 24 23.7 ?",
        "20 50 34.7 19.3 19.1 ?",
        "25 47.2 30.7 16.8 16.6 ?",
        "30 44.8 29.6 15.3 15.2 ?",
        "40 26.3 13.5 13.9 13.8 Table 1: Comparison of different CCM variants on English (training).",
        "U stands for universal POS tagset, OB stands for conjoining original POS tags with Brown clusters and UB stands for conjoining universal POS tags with Brown clusters.",
        "The best setting is just the vanilla setting, CCM.",
        "?",
        "Otherwise find the first non-participle verb (say at index j) and return ([0, j ?",
        "1], [j, `(x)]).",
        "?",
        "If no verb exists, return ([0, 1], [1, `(x)]).",
        "Word embeddings As mentioned earlier, each w i can be an arbitrary feature vector.",
        "For all languages we use Brown clustering (Brown et al., 1992) to construct a log(C) + C feature vector where the first log(C) elements indicate which mergable cluster the word belongs to, and the last C elements indicate the cluster identity.",
        "For En-glish, more sophisticated word embeddings are easily obtainable, and we experiment with neural word embeddings Turian et al. (2010) of length 50.",
        "We also explored two types of CCA embed-dings: OSCCA and TSCCA, given in Dhillon et al. (2012).",
        "The OSCCA embeddings behaved bet-ter, so we only report its results.",
        "Choice of kernel For our experiments, we use the kernel K ?",
        "(j, k, j ?",
        ", k ?",
        "|x,x ? )",
        "= max { 0, 1?",
        "?",
        "(j, k, j ?",
        ", k ?",
        "|x,x ? )",
        "? }",
        "where ?",
        "denotes the user-specified bandwidth, and ?",
        "(j, k, j ?",
        ", k ?",
        "|x,x ? )",
        "= |j ?",
        "k| ?",
        "|j ?",
        "?",
        "k ?",
        "| |j ?",
        "k|+ |j ?",
        "?",
        "k ?",
        "| if x(j) = x(j ? )",
        "and x(k ? )",
        "= x(k), and sign(j ?",
        "k) = sign(j ?",
        "?",
        "k ? )",
        "(and?",
        "otherwise).",
        "The kernel is non-zero if and only if the tags at position j and k in x are identical to the ones in position j ?",
        "and k ?",
        "in x ?",
        ", and if the direction between j and k is identical to the one between j ?",
        "and k ?",
        ".",
        "Note that the kernel is not binary, as opposed to the theoretical kernel in the supplementary material.",
        "Our experiments show that using a non-zero value different than 1 that is a function of the distance between j and k compared to the distance between j ?",
        "and k ?",
        "does better in practice.",
        "Choice of data For CCM, we found that if the full dataset (all sentence lengths) is used in train-ing, then performance degrades when evaluating on sentences of length ?",
        "10.",
        "We therefore restrict the data used with CCM to sentences of length ?",
        "`, where ` is the maximal sentence length being evaluated.",
        "This does not happen with our algo-rithm, which manages to leverage lexical information whenever more data is available.",
        "We therefore use the full data for our method for all lengths.",
        "We also experimented with the original POS tags and the universal POS tags of Petrov et al. (2011).",
        "Here, we found out that our method does better with the universal part of speech tags.",
        "For CCM, we also experimented with the original parts of speech, universal tags (CCM-U), the cross-product of the original parts of speech with the Brown clusters (CCM-OB), and the crossproduct of the universal tags with the Brown clusters (CCM-UB).",
        "The results in Table 1 indicate that the vanilla setting is the best for CCM.",
        "Thus, for all results, we use universal tags for our method and the original POS tags for CCM.",
        "We believe that our approach substitutes the need for fine-grained POS tags with the lexical information.",
        "CCM, on the other hand, is fully unlexical-ized.",
        "Parameter Selection Our method requires two parameters, the latent dimension m and the bandwidth ?.",
        "CCM also has two parameters, the number of extra constituent/distituent counts used for smoothing.",
        "For both methods we chose the best parameters for sentences of length ` ?",
        "10 on the English Penn Treebank (training) and used this set for all other experiments.",
        "This resulted in m = 7, ?",
        "= 0.4 for our method and 2, 8 for CCM's extra constituent/distituent counts respectively.",
        "We also tried letting CCM choose different hyperparameters for different sentence lengths based on dev-set likelihood, but this gave worse results than holding them fixed.",
        "4.2 Results Test I: Accuracy Table 2 summarizes our results.",
        "CCM is used with the initializer proposed in Klein and Manning (2002).",
        "5 NN, CC, and BC indicate the performance of our method for neural embeddings, CCA embeddings, and Brown clustering respectively, using the heuristic for h dir de-5 We used the implementation available at http://tinyurl.com/lhwk5n6.",
        "1069 ` English German Chinese NN-O NN CC-O CC BC-O BC CCM BC-O BC CCM BC-O BC CCM t r a i n ?",
        "10 70.9 69.2 70.4 68.7 71.1 69.3 72.5 64.6 59.9 62.6 64.9 57.3 46.1 ?",
        "20 55.1 53.5 53.2 51.6 53.0 51.5 50 52.7 48.7 47.9 51.4 46 22.4 ?",
        "40 46.1 44.5 43.6 41.9 43.3 41.8 26.3 46.7 43.6 19.8 42.6 38.6 15 t e s t ?",
        "10 69.2 66.7 68.3 65.5 68.9 66.1 70.5 66.4 61.6 64.7 58.0 53.2 40.7 ?",
        "15 60.3 58.3 58.6 56.4 58.6 56.5 53.8 57.5 53.5 49.6 54.3 49.4 35.9 ?",
        "20 54.1 52.3 52.3 50.3 51.9 50.2 50.4 52.8 49.2 48.9 49.7 45.5 20.1 ?",
        "25 50.8 49.0 48.6 46.6 48.3 46.6 47.4 50.0 46.8 45.6 46.7 42.7 17.8 ?",
        "30 48.1 46.3 45.6 43.7 45.4 43.8 44.9 48.3 45.4 21.9 44.6 40.7 16.1 ?",
        "40 45.5 43.8 43.0 41.1 42.7 41.1 26.1 46.9 44.1 20.1 42.2 38.6 14.3 Table 2: F 1 bracketing measure for the test sets and train sets in three languages.",
        "NN, CC, and BC indicate the performance of our method for neural embeddings, CCA embeddings, and Brown clustering respectively, using the heuristic for h dir described in ?",
        "4.1.",
        "NN-O, CC-O, and BC-O indicate that the oracle (i.e. true top bracket) was used for h dir .",
        "0 5 1 0 1 5 2 0 2 5 3 0 3 5 2030 3140 4150 5160 6170 7180 Fre que ncy Bracketing F1 CCM Random Restarts (Length <= 10) Figure 4: Histogram showing performance of CCM across 100 random restarts for sentences of length ?",
        "10. scribed in ?",
        "4.1.",
        "NN-O, CC-O, and BC-O indicate that the oracle (i.e. true top bracket) was used for h dir .",
        "For our method, test set results can be obtained by using Algorithm 1 (except the distances are computed using the training data).",
        "For English, while CCM behaves better for short sentences (` ?",
        "10), our algorithm is more robust with longer sentences.",
        "This is especially noticeable for length ?",
        "40, where CCM breaks down and our algorithm is more stable.",
        "We find that the neural embeddings modestly outperform the CCA and Brown cluster embeddings.",
        "The results for German are similar, except CCM breaks down earlier at sentences of ` ?",
        "30.",
        "For Chinese, our method substantially outperforms CCM for all lengths.",
        "Note that CCM performs very poorly, obtaining only around 20% accuracy even for sentences of ` ?",
        "20.",
        "We didn't have neural embeddings for German and Chinese (which worked best for English) and thus only used Brown cluster embeddings.",
        "For English, the disparity between NN-O (ora- cle top bracket) and NN (heuristic top bracket) is rather low suggesting that our top bracket heuristic is rather effective.",
        "However, for German and Chinese note that the ?BC-O?",
        "performs substantially better, suggesting that if we had a better top bracket heuristic our performance would increase.",
        "Test II: Sensitivity to initialization The EM algorithm with the CCM requires very careful ini-tialization, which is described in Klein and Manning (2002).",
        "If, on the other hand, random initialization is used, the variance of the performance of the CCM varies greatly.",
        "Figure 4 shows a histogram of the performance level for sentences of length ?",
        "10 for different random initializers.",
        "As one can see, for some restarts, CCM obtains accuracies lower than 30% due to local optima.",
        "Our method does not suffer from local optima and thus does not require careful initialization.",
        "Test III: Comparison to Seginer's algorithm Our approach is not directly comparable to Seginer's because he uses punctuation, while we use POS tags.",
        "Using Seginer's parser we were able to get results on the training sets.",
        "On English: 75.2% (` ?",
        "10), 64.2% (` ?",
        "20), 56.7% (` ?",
        "40).",
        "On German: 57.8% (` ?",
        "10), 45.0% (` ?",
        "20), and 39.9% (` ?",
        "40).",
        "On Chinese: 56.6% (` ?",
        "10), 45.1% (` ?",
        "20), and 38.9% (` ?",
        "40).",
        "Thus, while Seginer's method performs better on English, our approach performs 2-3 points better on German, and both methods give similar performance on Chinese.",
        "5 Conclusion We described a spectral approach for unsupervised constituent parsing that comes with theoretical guarantees on latent structure recovery.",
        "Empirically, our algorithm performs favorably to the CCM of Klein and Manning (2002) without the need for careful initialization.",
        "Acknowledgements: This work is supported by NSF IIS1218282, NSF IIS1111142, NIH R01GM093156, and the NSF Graduate Research Fellowship Program under Grant No.",
        "0946825 (NSF Fellowship to APP).",
        "1070 References"
      ]
    }
  ]
}
