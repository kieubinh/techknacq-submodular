{
  "info": {
    "authors": [
      "Antonin Delpeuch",
      "Anne Preller"
    ],
    "book": "TTNLS",
    "id": "acl-W14-1407",
    "title": "From Natural Language to RDF Graphs with Pregroups",
    "url": "https://aclweb.org/anthology/W14-1407",
    "year": 2014
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Proceedings of the EACL 2014 Workshop on Type Theory and Natural Language Semantics (TTNLS), pages 55?62, Gothenburg, Sweden, April 26-30 2014. c ?2014 Association for Computational Linguistics From Natural Language to RDF Graphs with Pregroups Antonin Delpeuch ?cole Normale Sup?rieure 45 rue d?Ulm 75005 Paris, France antonin.delpeuch@ens.fr Anne Preller LIRMM 161 rue Ada 34392 Montpellier Cedex 5, France preller@lirmm.fr",
        "Abstract",
        "We define an algorithm translating natural language sentences to the formal syntax of RDF, an existential conjunctive logic widely used on the Semantic Web.",
        "Our translation is based on pregroup grammars, an efficient type-logical grammatical framework with a transparent syntax-semantics interface.",
        "We introduce a restricted notion of side effects in the semantic category of finitely generated free semimodules over {0, 1} to that end.",
        "The translation gives an intensional counterpart to previous extensional models.",
        "We establish a one-to-one correspondence between extensional models and RDF models such that satisfaction is preserved.",
        "Our translation encompasses the expressivity of the target language and supports complex linguistic constructions like relative clauses and unbounded dependencies."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "There is a general agreement that Natural Language Processing has two aspects.",
        "One is syntax, rules how words are put together to form a grammatical string.",
        "The other is semantics, rules how meanings of strings are computed from the meanings of words.",
        "To this we add a third aspect, namely that semantics must include rules of logic how to compute the truth of the whole string from the truth of its parts.",
        "The Resource Description Framework (RDF) (Hayes and McBride, 2004) is an artificial language that takes the intuitive form of knowledge graphs.",
        "Its semantics has the expressive power of the fragment of multisorted first order logic that uses conjunction and existential quantification only.",
        "This restricted expressive power limits the statements of natural language that can be interpreted as RDF graphs.",
        "Typically, statements with negation words are excluded.",
        "We use pregroup grammars as the linguistic and mathematical tool to recognise and interpret natural language strings in RDF.",
        "Pregroup Calculus, also known as Compact Bilinear Logic (Lambek, 1993) (Lambek, 1999), is a simplification of Lambek's Syntactic Calculus, (Lambek, 1958).",
        "Pregroup grammars are based on a lexicon like all categorial grammars.",
        "Syntactical analysis consists in the construction of a proof (derivation) in the calculus.",
        "All semantics proposed so far use functors from the lexical category of (Preller and Lambek, 2007) into some symmetric compact closed category.",
        "They include the compositional distributional vector space models of (Clark et al., 2008), (Kartsaklis et al., 2013) based on context and the functional logical models of (Preller, 2012).",
        "We proceed as follows.",
        "Recalling that words and grammatical strings recognised by the grammar are represented by meaning-morphisms in the lexical cat-egory, we propose a \"syntactic\" functor from the latter into a symmetric monoidal category C S of ?morphisms with side effects?",
        "over the category C of finite dimensional semimodules over the lattice B = {0, 1}.",
        "The elements of the semimodule S identify with RDF graphs.",
        "The value of the syntactic functor at a statement is the RDF graph of the statement.",
        "The extensional models of logic are recast as \"semantic\" functors from the lexical category to C. We associate to any semantic functor an RDF interpretation and show that a statement is true in the semantic functor if and only if the corresponding RDF graph is true in the RDF interpretation.",
        "2 Preliminaries 2.1 RDF graphs RDF is a widely-adopted framework introduced in (Hayes and McBride, 2004) as a standard for linked information representation on the Web.",
        "Informally, an RDF graph is a set of labeled links between objects, which represent statements concerning the linked objects.",
        "Throughout this article we will simply consider that they are represented by strings of characters without spaces, written in a mono-spaced font: the entity John is denoted by the string John.",
        "A link between two objects is a triple, made of one entity (the subject of the predicate), a property (the type of the link, also represented by a string) and a second entity (the object of the predicate).",
        "Graphically, we represent a triple as a directed property from the subject to the object, labeled by the predicate.",
        "RDF allows to use nodes without labels, called blank nodes.",
        "Concretely, this means that we can always pick 55 a fresh node, named blank-n where n is some num-ber, such that this node is not involved in any triple yet.",
        "An example We can represent the sentence John owns a white boat using a fresh blank node for a white boat: John owns blank-1 blank-1 rdf:type boat blank-1 is_white true Here, rdf:type is a special RDF predicate indicating the type of its subject.",
        "The graph representing this set of triples is John blank-1 true boat owns i s w h i t e r d f : t y p e Figure 1: A graph with a blank node Recall that our goal is to translate natural language sentences to graphs.",
        "Graphs can indeed be seen as semantic representations of sentences, in the sense that they can be used to assign a truth value to a sentence, trough the notion of entailment (Hayes and McBride, 2004).",
        "A graph H is an instance of G when H can be obtained from G by assigning labels to some blank nodes (possibly none of them).",
        "A graph G 0 entails another graph G if an instance of G is a subgraph of G 0 .",
        "With these definitions, we can define true RDF graphs as the graphs entailed by some reference graph, storing all the true facts.",
        "2.2 Pregroup grammars A pregroup grammar (Lambek, 1999), consists of the free pregroup C(B) generated by a partially ordered set B and a lexicon D B .",
        "By ?free pregroup?",
        "we mean the free compact closed category C(B) generated by B following the version given in (Preller and Lambek, 2007) 1 .",
        "The lexicon D B introduces the monoidal category L B , freely generated by the inequalities and the lexical morphisms given by the lexicon.",
        "Lexical entries have \"formal meanings\" in the lexical category, the free compact closed category generated by B and the morphisms introduced by the words.",
        "They are analogue to the lambda-terms intervening in categorial grammars, (Steedman, 1996).",
        "The working of pregroup grammars can be described without explicit use of category theory.",
        "The main result of this section however, the decomposition lemma, invokes properties of the graphs proved in (Preller and Lambek, 2007).",
        "1 Semantics requires more than one morphism between objects, whereas the partial preorder of the free pregroup of (Lambek, 1999) confounds all morphisms with identical domain and codomain.",
        "We start with the formal definition of a monoidal category followed by the condition it must satisfy to be compact closed.",
        "Definition 1.",
        "A category C is 1. monoidal if there is a bifunctor ?",
        ": C ?",
        "C ?",
        "C, a distinguished object I , the unit of ?, satisfying (A ?",
        "B) ?",
        "C = A ?",
        "(B ?",
        "C), (f ?",
        "g) ?",
        "h = f ?",
        "(g ?",
        "h) 2 2. compact closed if it is monoidal and there are con-travariant endofunctors ( ) r and ( ) ` , called right adjoint and left adjoint, such that for every object A and every morphism f : A?",
        "B there are morphisms ?",
        "f : I ?",
        "A r ?",
        "A, the name of f , and \u000f f : A?",
        "B r ?",
        "I , the coname of f , satisfying for any g : B ?",
        "C (A?B) r = B r ?A r , (A?B) ` = B ` ?A ` (\u000f f ?",
        "1 C ) ?",
        "(1 A ?",
        "?",
        "g ) = g ?",
        "f (1 A r ?",
        "\u000f g ) ?",
        "(?",
        "f ?",
        "1 C r ) = (f ?",
        "g) r .",
        "3. symmetric if it is monoidal and there is a natural isomorphism ?",
        "AB : A ?",
        "B ?",
        "B ?",
        "A such that ?",
        "?1 AB = ?",
        "BA .",
        "Recall that ?",
        "is a bifunctor if and only if the following equalities are satisfied for all objects A,B and all morphisms f i : A i ?",
        "B i , g i : B i ?",
        "C i , i = 1, 2 1 A ?",
        "1 B = 1 A?B Interchange Law (f 2 ?",
        "f 1 )?",
        "(g 2 ?",
        "g 1 ) = (f 2 ?",
        "g 2 ) ?",
        "(f 1 ?",
        "g 1 ) (1) The morphisms of C(B) and L B identify with graphs, which we now describe without invoking category theory.",
        "The objects of C(B) are called types.",
        "They include the elements of B, called basic types.",
        "For instance, the set B may include the basic types s for statements, d for determiners, n for noun phrases, o for direct objects with corresponding types in relatives clauses r, ?",
        "n and ?",
        "o.",
        "There is only one strict inequality n < o. Assimilating B to a category, we write i ab : a ?",
        "b instead of a ?",
        "b and 1 a for i aa .",
        "A simple type is an iterated left adjoint or right adjoint of a basic type .",
        ".",
        ".",
        ",a `` = a (?2) ,a ` = a (?1) ,a = a (0) ,a r = a (1) ,a rr = a (2) , .",
        ".",
        ".",
        ".",
        "The iterator of t = a (z) is the integer z.",
        "An arbitrary type is a string of simple types separated by the symbol ?.",
        "In particular, the empty string is a type, denoted I .",
        "The lexicon of a pregroup grammar consists of a set of pairs word : T where the type T ?",
        "C(B) captures the different grammatical roles a word may play.",
        "For 2 Strictly speaking, these equalities hold up to natural iso-morphisms, but the coherence theorem of (Mac Lane, 1971) makes it possible to replace the isomorphisms by equalities without loss of generality.",
        "56 instance proper name : n transitive verb : n r ?",
        "s?",
        "o ` transitive verb : ?",
        "n r ?",
        "r ?",
        "o ` transitive verb : n r ?",
        "?",
        "o r ?",
        "r determiner : d adjective : d r ?",
        "d countnoun : d r ?",
        "n relpronoun : n r ?",
        "n?",
        "r ` ?",
        "?",
        "n relpronoun : n r ?",
        "n?",
        "r ` ?",
        "?",
        "o A pregroup grammars analyses a string of words by constructing a graph: choose an entry w i : T i for each word w i and align the types in the order of the words.",
        "Place non-crossing oriented underlinks such that the tail of an underlink is a basic type with an even number of iterations, say t = a (z) , where z = ?2n.",
        "If the head is to the left of the tail then it is the left adjoint b (z)` = b (z?1) , for some basic type b ?",
        "a.",
        "If it is to the right then its a right adjoint b (z)r = b (z+1) .",
        "Complete the graph by repeating the nodes that are not head or tail of an underlink in a line below and adding a vertical link between corresponding nodes.",
        "The string is said to be grammatical if exactly one simple type remains that is not the tail or head of an underlink and if it is a basic type.",
        "The resulting graph is called a reduction and denotes a unique morphism r : T 1 ?",
        ".",
        ".",
        ".",
        "?T n ?",
        "b of C(B).",
        "More generally, graphs standing for morphisms align the domain above and the codomain below.",
        "For instance, the graph below exhibits a reduction to the sentence type s (n)?",
        "(n r ?",
        "s?",
        "o ` )?",
        "(d)?",
        "(d r ?",
        "d)?",
        "(d r ?",
        "n) john owns a white boat ;; s \u000f\u000f gg ;; ;; The following two graphs are reductions to the noun phrase type n. The first graph corresponds to the case where the relative pronoun is the object of the verb in the relative clause whereas it is the subject in the second graph d?",
        "d r ?",
        "n?",
        "n r ?",
        "n?",
        "r ` ?",
        "?",
        "o?",
        "n?",
        "n r ?",
        "?",
        "o r ?",
        "r a cat that bob hates ??",
        "??",
        "n \u000f\u000f bb ::??",
        "d?",
        "d r ?",
        "n?",
        "n r ?",
        "n?",
        "r ` ?",
        "?",
        "n?",
        "?",
        "n r ?",
        "r ?",
        "o ` ?",
        "n a cat that bobhates ??",
        "??",
        "n \u000f\u000f ee ??",
        "cc The meanings of words are also represented by graphs that correspond to morphisms of the lexical category L B .",
        "In fact, every entry w : T in the lexicon gives rise to a meaning morphism w T : I ?",
        "T and a lexical morphism w T represented by the following oriented labelled graphs w b = w \u000f\u000f b = w b T = a r ?",
        "b w T = a r ?",
        "b \"\" w w T = a w \u000f\u000f b T = a r ?",
        "b?",
        "c ` w T = a r ?",
        "b ?",
        "c ` \u000f\u000f w T w T = a ?",
        "c b TTT jjj w T \u000f\u000f T = a r ?",
        "c r ?",
        "b w T = a r ?",
        "c r ?",
        "b w w T = c ?",
        "a b TTT jjj w T \u000f\u000f If T has two factors that are basic types, there is besides the main lexical morphismw T an auxiliary lexical morphism j T .",
        "T = n r ?",
        "n?",
        "r ` ?",
        "d, d = ?",
        "n, ?",
        "o that T = n r ?",
        "n ?",
        "r ` ?",
        "d j d \"\"}} that r n that \u000f\u000f n d j d \u000f\u000f We omit the subscript T if this does not lead to confusion.",
        "The nodes of the meaning graphs are the simple types of T .",
        "They form the lower line of the graph, the upper line is the empty string I .",
        "The corresponding morphism has domain I and codomain T .",
        "An overlink may have several tails but only one head.",
        "The tails of overlinks are right or left adjoints of basic types, the head is a basic type 3 .",
        "The lexical category L B generated by the lexicon D B is the compact closed category freely generated by B, the symmetry morphisms ?",
        "ab and the lexical morphisms introduced by D B .",
        "Strings of words also have meaning(s) in the lexical category.",
        "The lexical meaning of a grammatical string word 1 .",
        ".",
        ".word n recognised by the reduction r : T 1 .",
        ".",
        ".",
        "T n ?",
        "b is, by definition, the composite of the tensor product of the word meanings and the chosen reduction.",
        "r ?",
        "(word 1 T 1 ?",
        ".",
        ".",
        ".?",
        "word n T n ) : I ?",
        "b .",
        "The meaning of a composite morphism g ?",
        "f can be simplified graphically.",
        "Stack the graph of f above the graph of g and walk the paths of the graph starting at a node that is not the head of a link until you arrive at a node that is not the tail of a link.",
        "Compose the labels in the order they are encountered along the path.",
        "Replace the whole path by a single link labelling it by the composite label of the path.",
        "The resulting graph represents the morphism g ?",
        "f , (Selinger, 2011).",
        "For instance, the grammatical strings mentioned 3 \"basic type\" is replaced by simple type with an even iterator in the general case 57 above above simplify to (n)?",
        "(n r ?",
        "s?",
        "o ` )?",
        "(d)?",
        "(d r ?",
        "d)?",
        "(d r ?",
        "n) \u000f\u000f john white boat ;; s \u000f\u000f gg ;; ;; \u000f\u000f own \u000f\u000f a = n ?",
        "o john \u000f\u000f boat?red?a \u000f\u000f s TTT jjj own \u000f\u000f = I s own?(john?",
        "(boat?red?a)) \u000f\u000f T = ?",
        "n r ?",
        "r ?",
        "o ` d?",
        "d r ?",
        "n?",
        "n r ?",
        "n?",
        "r ` ?",
        "?",
        "n?",
        "?",
        "n r ?",
        "r ?",
        "o ` ?",
        "n a cat that bobhate T ??",
        "??",
        "n \u000f\u000f ee ??",
        "ff \u000f\u000f !",
        "!\u0002\u0002 \u000f\u000f \u000f\u000f that ?",
        "hate T ?",
        "((cat ?",
        "a)?",
        "bob)] : I ?",
        "I ?",
        "n T ?",
        "= n r ?",
        "?",
        "o r ?",
        "r d?",
        "d r ?",
        "n?",
        "n r ?",
        "n?",
        "r ` ?",
        "?",
        "o?",
        "n?",
        "n r ?",
        "?",
        "o r ?",
        "r a cat that bob hate T ?",
        "??",
        "??",
        "n \u000f\u000f dd ::??",
        "\u000f\u000f !",
        "!\u0002\u0002 \u000f\u000f = that ?",
        "hate T ?",
        "?",
        "((cat ?",
        "a)?",
        "bob)] : I ?",
        "I ?",
        "n All unlabelled links in the graph above correspond to inequalities of basic types.",
        "Inserting the strict inequalities at the appropriate place and applying the interchange law, we decompose the label into minimal building blocks that correspond one-to-one to the resources occurring in the RDF graph associated to the statement.",
        "For example, own ?",
        "(john?",
        "(boat ?",
        "white ?",
        "a)) = own ?",
        "(1 n ?",
        "in) ?",
        "(1 n ?",
        "boat) ?",
        "(1 n ?",
        "white)) ?(john?",
        "a) .",
        "(2) The expression after the equality symbol above is a composite of tensor products the factors of which are either inequalities between basic objects or lexical morphisms.",
        "Only the rightmost tensor product contains more than one lexical morphism.",
        "In fact, all factors are lexical morphisms with domain I .",
        "The translation of statements to RDF graphs rests on the existence of this decomposition.",
        "Borrowing the terminology of RDF graphs, call any lexical morphism with domain I a node word and any other lexical morphism a property word.",
        "Lemma 1 (Decomposition).",
        "Let word 1 .",
        ".",
        ".word n be a grammatical string with lexical morphisms word 1 , .",
        ".",
        ".",
        ", word n and a reduction r : T 1 .",
        ".",
        ".",
        "T n ?",
        "b. Then there is an enumeration of the node words word i 1 : I ?",
        "b 1 , .",
        ".",
        ".",
        ", word i m : I ?",
        "b m such that the lexical meaning of the string satisfies r ?",
        "(word 1 ?",
        ".",
        ".",
        ".?",
        "word n ) = p 1 ?",
        "?",
        "?",
        "?",
        "?",
        "p m ?",
        "?",
        "(word i 1 ?",
        ".",
        ".",
        ".?",
        "word i m ) , where each p k is either a tensor product of inequalities of basic types or a tensor product of inequalities and one property word word j k .",
        "Moreover, k < k ?",
        "implies j k < j k ?",
        ".",
        "In particular, the meaning of the string belongs to the monoidal category generated by the lexicon This is a straightforward consequence of the characterisation of morphisms as normal graphs in the free category, (Preller and Lambek, 2007) and the interchange law.",
        "We map lexical morphisms to \"unfinished\" RDF triples lexical morphism RDF triple noun : d?",
        "n ?",
        "rdf : type noun adjective : d?",
        "d ?",
        "is-adjective true verb : a?",
        "b?",
        "c ?",
        "verb ?",
        "determiner : I ?",
        "d blank ?",
        "?, ?",
        "?",
        "blank propername : I ?",
        "n propername ?",
        "?, ?",
        "?",
        "propername (3) The question marks designate unoccupied positions in the triple.",
        "Node words occupy either the subject or the object position, unary property words leave only the subject position open, binary property words occupy the centre position leaving subject and object position unoccupied.",
        "Finally, the noun phrases a cat that hates Bob and a cat that Bob hates are respectively translated to the following graphs : blank-1 Bob cat h a t e s r d f : t y p e (a) A cat that hates Bob blank-1 Bob cat h a t e s r d f : t y p e (b) A cat that Bob hates 3 The Translation Let B = ?",
        "{0, 1},+, ??",
        "be the commutative semiring in which the addition, +, is the lattice operator ?",
        "and the multiplication, ?, the lattice operator ?",
        "on {0, 1}.",
        "The semantic category which hosts the RDF graphs and our models of grammatical strings is the category C of finitely generated semimodules over B. It is compact closed satisfying A ` = A = A r for each object A.",
        "Every object A has a?canonical?",
        "basis (e i ) i such that every element v ?",
        "A can be written uniquely as v = ?",
        "i ?",
        "i e i , where ?",
        "i ?",
        "B. We refer to elements ofA as vectors.",
        "Morphisms of C are maps that commute with addition and scalar multiplication.",
        "We interpret RDF graphs as elements of a semimodule S determined by the RDF vocabulary, see below.",
        "58 The translation of grammatical strings is given by a functor from the monoidal category generated by the lexical morphisms into a category of morphisms with side effects mapping the decomposition of a grammatical string to a vector of S. Let L be a set of labels that includes the property words and a ?very large?, but finite number n 0 of labels blank i , for i = 1, .",
        ".",
        ".",
        "n 0 4 .",
        "The other elements of L are node names and property names of an RDF vocabulary.",
        "Define N as the semimodule over the semi-ring B freely generated by L and denote e label the basis vector of N corresponding to label ?",
        "L. We present RDF triples by basis vectors of S = N ?",
        "N ?",
        "N and RDF graphs by sums of basis vectors of S, for instance e bob ?e hate ?e blank +e blank ?e rdf?type ?e cat .",
        "Hence, the vector sum models the union of RDF graphs.",
        "We want to interpret the lexical morphisms such that they construct a triple when applied to an argument and add it to the vector of S already constructed.",
        "Composition of the category C alone is not powerful enough to achieve this.",
        "We define a new category C S in which the entity a white boat will be denoted by the pair (e blank-1 , e blank-1 ?",
        "e rdf:type ?",
        "e boat + e blank-1 ?",
        "e is-white ?",
        "e true ).",
        "Therefore we switch from C to the monoidal category C S below in which arrows have two components.",
        "The first component creates the triple and the second component adds the new triple to the graph as a ?side effect?.",
        "Definition 2 (Category with Side Effects).",
        "Let {a 1 , .",
        ".",
        ".",
        ", a m } and {b 1 , .",
        ".",
        ".",
        ", b n } be the basis 5 of A and B. For any p ?",
        "C(A,S), q ?",
        "C(B,S), define p?",
        "+ q ?",
        "C(A?B,S) as the unique linear map satisfying for an arbitrary basis vector a i ?",
        "b j of A?B (p?",
        "+ q) : a i ?",
        "b j 7?",
        "p(a i ) + q(b j ) .",
        "The category C S of morphisms with side effects in S has: ?",
        "objects as in C ?",
        "morphisms (f, p) : A ?",
        "B where f ?",
        "C(A,B), Ker(f) = {0} and p ?",
        "C(A,S).",
        "?",
        "arrows 1 A = (1 A , 0).",
        "?",
        "an operation ?",
        "defined by (f, p)?",
        "(h, q) = (f ?h, p?",
        "h+ q).",
        "?",
        "an operation ?",
        "on objects defined as in C ?",
        "an operation ?",
        "on arrows defined by (f, p) ?",
        "(h, q) = (f ?",
        "h, p?",
        "+ q).",
        "Examples of morphisms in the first component are the symmetry ?",
        ": N?N ?",
        "N?N , pi 1 , pi 2 : N?N ?",
        "N defined by ?",
        "(a i ?",
        "b j ) = b j ?",
        "a i , pi 1 (a i ?",
        "b j ) = a i and pi 2 (a i ?",
        "b j ) = b j .",
        "The new operation ?",
        "+ introduced above concerns the second component only.",
        "The morphism p ?",
        "+ q 4 it suffices that n 0 exceeds the number of occurrences of determiners in the set of digitalised documents 5 In C, every object has a unique basis: the canonical one.",
        "computes at a i ?",
        "b j the union of the RDF graphs p(a i ) and q(b j ), computed separately by p and q.",
        "As an illustration, consider the following morphisms of C S m john = (e john , 0), m blank i = (e blank i , 0) The arrow of a proper noun consists of the node representing this entity, e.g. e john , paired with the empty graph represented by 0 ?",
        "S. Choosing the empty graph means that nothing is said about this node.",
        "A similar remark holds for determiners.",
        "m white = (1 N , 1 N ?",
        "e is-white ?",
        "e true ), m boat = (1 N , 1 N ?",
        "e rdf-type ?",
        "e boat ) An adjective or a noun is a morphism that maps a node word to itself and to the empty slot in the corresponding triple.",
        "As a side effect, it adds this triple to the second component.",
        "m own = (1 N ?",
        "e own ?",
        "1 N , 1 N ?",
        "e own ?",
        "1 N ) A transitive verb is a morphism that maps an ordered pair of nodes to a triple making the first the subject and the second the object of the triple.",
        "Compose the morphisms m white ?m blank i = (e blank i , t 1 ) t 1 = (e blank i ?",
        "e is-white ?",
        "e true ) m boat ?m white ?m blank i = (e blank i , t 2 + t 1 ) t 2 = (e blank i ?",
        "e rdf-type ?",
        "e boat ) m own ?",
        "(m john ?",
        "(m boat ?m white ?m blank i )) = m own ?",
        "(e john ?",
        "e blank i , 0 + t 2 + t 1 ) = (e john ?",
        "e own ?",
        "e blank i , t 3 + t 2 + t 1 ) t 3 = e john ?",
        "e own ?",
        "e blank i (4) The effect of composition is to create a new triple on the left of the comma and to store it on the right.",
        "Proposition 1.",
        "The category with side effects C S is a monoidal category.",
        "The proof of this proposition is given in appendix A.",
        "Define a monoidal structure preserving functor F from the monoidal category generated by the lexical morphisms to C S thus ?",
        "F(s) = S = N ?N ?N ?",
        "F(a) = N if a 6= s ?",
        "F(1 a ) = F(i ab ) = F(j ab ) = 1 F (a), for all basic types a, b ?",
        "B ?",
        "F(that : r ?",
        "n) = (1, 0) ?",
        "F(name : I ?",
        "d) = (e name , 0) ?",
        "F(determiner : I ?",
        "d) = (e blank i , 0) ?",
        "F(word : d r ?",
        "n) = (1, 1?",
        "e rdf-type ?",
        "e word ) ?",
        "F(word : d r ?",
        "d) = (1, 1?",
        "e is-word ?",
        "e true ) ?",
        "F(word n r ?s?o l) = (1?",
        "e word ?",
        "1, 1?",
        "e word ?",
        "1) F(word ?n r ?r?o l) = (pi 1 , 1?",
        "e word ?",
        "1) F(word n r ?",
        "?o r ?r ) = (pi 2 , (1?",
        "e word ?",
        "1) ?",
        "?).",
        "Note that the morphisms in the example above satisfy m word = F(word).",
        "Computation (4) shows that F maps the lexical meaning of john owns a white boat to the three RDF triples t 1 , t 2 , t 3 .",
        "59 Lemma 2.",
        "Let word 1 .",
        ".",
        ".word n be a statement with corresponding lexical entries word 1 : T 1 .",
        ".",
        ".word n : T n and r : T 1 .",
        ".",
        ".",
        "T n ?",
        "s a reduction to the sentence type.",
        "Then second component of F(r ?",
        "(word 1 ?",
        ".",
        ".",
        ".?",
        "word n )) = (f, t 1 + ?",
        "?",
        "?+ t m ) ?",
        "C S (I, S) is a sum of RDF triples t i ?",
        "S, for k = 1, .",
        ".",
        ".",
        ",m. Moreover, t k has the form (3) determined by the property word word j k such that the unlabelled nodes are filled by node words of the statement.",
        "The proof is given in Appendix B. Definition 3 (RDF Translation).",
        "The RDF graph translating the statement word 1 .",
        ".",
        ".word n with reduction r : T 1 .",
        ".",
        ".",
        "T n ?",
        "s is the second component of F(r ?",
        "(word 1 ?",
        ".",
        ".",
        ".?",
        "word n )).",
        "For instance, the translation of the statement John owns a white boat is e john ?",
        "e own ?",
        "e blank i + e blank i ?",
        "e is-white ?",
        "e true + e blank i ?",
        "e rdf-type ?",
        "e boat , because F(own ?",
        "(john?",
        "(boat ?",
        "white ?",
        "a)) = m own ?",
        "(m john ?",
        "(m boat ?m white ?m blank i )) .",
        "The translation algorithm from text to RDF graphs starts with a parsing algorithm of pregroup grammars that chooses a type for each word of the statement and provides a reduction to the sentence type.",
        "Next it computes the decomposition of the formal meaning in the lexical category by ?yanking?.",
        "Finally it computes the RDF graph by applying the translation functor F to the decomposition.",
        "The parsing algorithm is cubic polynomial in the number of words.",
        "Decomposition is lin-ear, because the number of links is proportional to the number of words.",
        "Finally, translation again is linear, because the sum of the number of property words and of the number of node words in the decomposition is proportional to the number of words.",
        "4 C-Models and RDF Interpretations In this section, we establish the connection between the extensional models of meaning of (Preller, 2012) with the RDF interpretations of (Hayes, 2004) via the translation F from natural language to RDF graphs.",
        "We show that a statement is true in an extensional model if and only if the RDF graph computed by F is true in the RDF interpretation associated to the extensional model.",
        "Choose an object U of C, the ?universe of discourse?",
        "of the fragment of natural language.",
        "The basis vectors of U stand for individuals or concepts.",
        "Properties are represented by maps that test (n-tuples of) entities and let (part of) them pass if the test succeeds.",
        "Let 1 ?",
        "i 1 < ?",
        "?",
        "?",
        "< i m ?",
        "n be a strictly increasing sequence.",
        "A linear map q : U 1 ?",
        ".",
        ".",
        ".",
        "?",
        "U n ?",
        "U i 1 ?",
        ".",
        ".",
        ".",
        "?U i m is said to be a selector if for any basis vector e 1 ?",
        ".",
        ".",
        ".?",
        "e n ?",
        "U 1 ?",
        ".",
        ".",
        ".?",
        "U n q(e 1 ?.",
        ".",
        ".",
        "?e n ) = e i 1 ?.",
        ".",
        ".",
        "?e i m or q(e 1 ?.",
        ".",
        ".",
        "?e n ) = 0 .",
        "We say that q selects the i-th factor ifm = 1 and i = i 1 and that it is a projector if m = n. If the latter is the case then q is an idempotent and self-adjoint en-domorphism, hence a ?property?",
        "in quantum logic, see (Abramsky and Coecke, 2004).",
        "If the domain V and the codomainU i 1 ?.",
        ".",
        ".",
        "?U i m are fixed then the selectors are in a one-to-one correspondence with the ?truth-value?",
        "functions p : A?",
        "{>,?}",
        "on the set A of basis vectors of V related by the condition p(a) = > if and only if q(a) 6= 0 for all a ?",
        "A .",
        "Let v = ?",
        "k l=1 a j l be an arbitrary vector of V .",
        "A selector q : V ?W is said to be true at v if q(a j l ) 6= 0, for l = 1, .",
        ".",
        ".",
        ", k. Lemma 3.",
        "Selectors are closed under composition and the tensor product.",
        "Every identity is a selector.",
        "Let p : V ?",
        "W and q : W ?",
        "X be selectors and v ?",
        "V .",
        "Then q ?",
        "p is true at v if and only if p is true at v and q is true at w = p(v).",
        "Proof.",
        "The first assertion is straight forward.",
        "To show the second, assume that a is a basis vector for which (q ?",
        "p)(a) 6= 0.",
        "Then p(a) 6= 0 because q(0) = 0.",
        "Hence p(a) is a basis vector of W selected by p. The property now follows for an arbitrary vector from the definitions.",
        "Definition 4.",
        "A compact closed structure preserving functorM : L B ?",
        "C is a C-model with universe U if it satisfies ?",
        "M(s) = U ?",
        "U ?",
        "M(a) = U for any basic type a 6= s ?",
        "M(1 a ) = M(i ab ) = M(j ab ) = 1 M (a), for all basic types a, b ?",
        "B ?",
        "M(that) = 1 U ?",
        "M(word a r ?b ) and M(word n r ?s?o l) are projectors ?",
        "M(word ?n?r?o l) = pi 1 ?M(word n r ?s?o l) M(word n r ?",
        "?o r ?r ) = pi 2 ?M(word n r ?s?o l) ?",
        "?",
        "?",
        "M maps determiners and proper names in the singular to basis vectors.",
        "The last condition guarantees that the interpretations of a transitive verb in a statement and in a relative clause are equal if the relative pronoun is the subject of the verb in the relative clause and that they differ only by the symmetry isomorphism if the relative pronoun is the object.",
        "Definition 5.",
        "A statement word 1 .",
        ".",
        ".word n with reduction r : T 1 ?",
        ".",
        ".",
        ".",
        "?",
        "T n ?",
        "b is true in M if M(r ?",
        "(word 1 ?",
        ".",
        ".",
        ".?",
        "word n ) 6= 0.",
        "Truth in a model can be reformulated in terms of selector truth with the help of Lemma 1.",
        "60 Lemma 4.",
        "Let p 1 ??",
        "?",
        "??",
        "p m ?",
        "?",
        "(word i 1 ?",
        ".",
        ".",
        ".",
        "?word i m ) be the decomposition of the formal meaning of the statement word 1 .",
        ".",
        ".word n .",
        "Then M(p l ) is a selector and M(word i k ) a vector in U, for 1 ?",
        "l ?",
        "m ?",
        ", 1 ?",
        "k ?",
        "m. Moreover, the statement is true in M if and only if the selectorM(p l ) is true atM(p l+1 )??",
        "?",
        "?",
        "?M(p m ?",
        ")?",
        "(M(word i 1 )?",
        ".",
        ".",
        ".",
        "?M(word i m )) for 1 ?",
        "l ?",
        "m ?",
        ".",
        "Proof.",
        "M maps the meaning of the string toM(p 1 ) ?",
        "?",
        "?",
        "?",
        "?",
        "M(p m ? )",
        "?",
        "(M(word i 1 ) ?",
        ".",
        ".",
        ".",
        "?M(word i m )).",
        "Note that for k = 1, .",
        ".",
        ".",
        ",m ?",
        "any factor of M(p k ) is the identity of U unless it isM(word j k ) = q k .",
        "Thus M(p k ) is a tensor product of selectors.",
        "Hence both assertions follow from Lemma 3.",
        "Any C-modelM defines an RDF interpretation.",
        "The vocabulary consists of the basis vectors e label ?",
        "N , see previous section.",
        "The set of property symbols is given by P = {e is-adjective : adjective ?",
        "D} ?",
        "{rdf:type} ?",
        "{e verb : verb ?",
        "C} Define an RDF interpretation I M as follows ?",
        "set of properties IP = {M(word) : e word ?",
        "P} ?",
        "{rdf:type} ?",
        "set of resources IR = IP ?",
        "U ?",
        "{true} ?",
        "mapping IS and its extension to blank nodes IS(e word ) =M(word), IS(e blank i ) =M(determiner i ) ?",
        "mapping IEXT from IP into the power set of IR?",
        "IR IEXT(rdf-type) = {?e,M(noun)?",
        ": M(noun) is true at e} IEXT(IS(e is-adjective )) = {?e,true?",
        ": M(adjective) is true at e} IEXT(IS(e verb )) = {?e 1 , e 2 ?",
        ": M(verb) is true at e 1 ?",
        "e 2 } .",
        "Proposition 2.",
        "A statement word 1 .",
        ".",
        ".word n is true in a C-model M if and only if every triple of its RDF translation G is true in the RDF interpretation I M The proof is given in Appendix B. 5 Conclusion The modelling of natural language by RDF graphs remains limited by the expressivity of RDF.",
        "The latter goes way beyond the few examples presented here.",
        "So far, we have only considered the extensional branch of a word.",
        "Future work will take advantage of the distinction between a property and its extension in RDF to introduce the conceptual branch of a plural, which does not refer to an extension, e.g Tom likes books, or capture the difference between Eve and John own a boat and Eve and John are athletes.",
        "Acknowledgments This work was supported by the ?cole Normale Sup?rieure and the LIRMM.",
        "The first author wishes to thank David Naccache, Alain Lecomte, Antoine Amar-illi, Hugo Vanneuville and both authors the members of the TEXTE group at the LIRMM for their interest in the project.",
        "References"
      ]
    }
  ]
}
