{
  "info": {
    "authors": [
      "Tim Fernando"
    ],
    "book": "TTNLS",
    "id": "acl-W14-1408",
    "title": "Incremental semantic scales by strings",
    "url": "https://aclweb.org/anthology/W14-1408",
    "year": 2014
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Proceedings of the EACL 2014 Workshop on Type Theory and Natural Language Semantics (TTNLS), pages 63?71, Gothenburg, Sweden, April 26-30 2014. c ?2014 Association for Computational Linguistics Incremental semantic scales by strings Tim Fernando Computer Science Department Trinity College Dublin Dublin, Ireland Tim.Fernando@tcd.ie",
        "Abstract",
        "Scales for natural language semantics are analyzed as moving targets, perpetually under construction and subject to adjustment.",
        "Projections, factorizations and constraints are described on strings of bounded but refinable granularities, shaping types by the processes that put semantics in flux."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "An important impetus for recent investigations into type theory for natural language semantics is the view of ?semantics in flux,?",
        "correcting ?the im-pression?",
        "from, for example, Montague 1973 ?of natural languages as being regimented with meanings determined once and for all?",
        "(Cooper 2012, page 271).",
        "The present work concerns scales for temporal expressions and gradable predicates.",
        "Two questions that loom large from the perspective of semantics in flux are: how to construct scales and align them against one another (e.g. Klein and Rovatsos 2011).",
        "The formal study carried out below keeps scales as simple as possi-ble, whilst allowing for necessary refinements and adjustments.",
        "The basic picture is that a scale is a moving target finitely approximable as a string over an alphabet which we can expand to refine granularity.",
        "Reducing a scale to a string comes, however, at a price; indivisible points must give way to refinable intervals (embodying underspec-ification).",
        "Arguments for a semantic reorientation around intervals (away from points) are hardly new.",
        "Best known within linguistic semantics perhaps are those in tense and aspect from Bennett and Partee 1972, which seem to have met less resistance than arguments in the degree literature from Kennedy 2001 and Schwarzschild and Wilkinson 2002 (see Solt 2013).",
        "At the center of the present argument for intervals is a notion of finite approximabil-ity, plausibly related to cognition.",
        "What objection might there be to it?",
        "The fact that no finite linear order is dense raises the issue of compatibility between finite approximability and density ?",
        "no small worry, given the popularity of dense linear orders for time (e.g. Kamp and Reyle 1993, Pratt-Hartmann 2005, Klein 2009) as well as measurement (e.g. Fox and Hackl 2006).",
        "Fortunately, finite linear orders can be organized into a system of approximations converging at the limit to a dense linear order.",
        "The present work details ways to form such systems and lim-its, with density reanalyzed as refinability of arbitrary finite approximations.",
        "A familiar example provides some orientation.",
        "Example A (calendar) We can represent a calendar year as the string s mo := Jan Feb Mar ?",
        "?",
        "?",
        "Dec of length 12, or, were we interested also in days d1,d2.",
        ".",
        ".,d31, the string s mo,dy := Jan,d1 Jan,d2 ?",
        "?",
        "?",
        "Jan,d31 Feb,d1 ?",
        "?",
        "?",
        "Dec,d31 of length 365 for a non-leap year (Fernando 2011).",
        "1 In contrast to the points in the real line R, a box can split, as Jan in s mo does (30 times) to Jan,d1 Jan,d2 ?",
        "?",
        "?",
        "Jan,d31 in s mo,dy , on introducing days d1, d2,.",
        ".",
        "., d31 into the picture.",
        "Reversing direction and generalizing from mo := {Jan,Feb,.",
        ".",
        ".Dec} 1 We draw boxes (instead of the usual curly braces { and }) around sets-as-symbols, stringing together ?snapshots?",
        "much like a cartoon/film strip.",
        "63 to any set A, we define the function ?",
        "A on strings (of sets) to componentwise intersect with A ?",
        "A (?",
        "1 ?",
        "?",
        "??",
        "n ) := (?",
        "1 ?A) ?",
        "?",
        "?",
        "(?",
        "n ?A) (throwing out non-A's from each box) so that ?",
        "mo (s mo,dy ) = Jan 31 Feb 28 ?",
        "?",
        "?",
        "Dec 31 .",
        "Next, the block compression bc(s) of a string s compresses all repeating blocks ?",
        "n (for n ?",
        "1) of a box ?",
        "in a string s to ?",
        "for bc(s) := ?",
        "?",
        "?",
        "?",
        "?",
        "?",
        "?",
        "bc('s ? )",
        "if s = ?",
        "'s ?",
        "?",
        "bc('s ? )",
        "if s = ?",
        "'s ?",
        "with ?",
        "6= ?",
        "s otherwise so that if bc(s) = ?",
        "1 ?",
        "?",
        "??",
        "n then ?",
        "i 6= ?",
        "i+1 for i from 1 to n?",
        "1.",
        "In particular, bc( Jan 31 Feb 28 ?",
        "?",
        "?",
        "Dec 31 ) = s mo .",
        "Writing bc A for the function mapping s to bc(?",
        "A (s)), we have bc mo (s mo,dy ) = s mo .",
        "In general, we can refine a string s A of granularity A to one s A ?",
        "of granularity A ?",
        "?",
        "A with bc A (s A ? )",
        "= s A .",
        "Iterating over a chain A ?",
        "A ?",
        "?",
        "A ??",
        "?",
        "?",
        "?",
        "?",
        ", we can glue together strings s A , s A ?",
        ", s A ??",
        ", .",
        ".",
        ".",
        "such that bc X (s X ? )",
        "= s X for X ?",
        "{A,A ?",
        ", A ??",
        ", .",
        ".",
        ".}.",
        "Details in section 2.",
        "We shall refer to the expressions we can put in a box as fluents (short for temporal propositions), and assume they are the elements of a set ?.",
        "While the set ?",
        "of fluents might be infinite, we restrict the boxes that we string together to finite sets of flu-ents.",
        "Writing Fin(?)",
        "for the set of finite subsets of ?",
        "and 2 X for the powerset of X (i.e. the set of X's subsets), we will organize the strings over the infinite alphabet Fin(?)",
        "around finite alphabets 2 A , for A ?",
        "Fin(?)",
        "Fin(?)",
        "?",
        "= ?",
        "A?Fin(?)",
        "(2 A ) ?",
        ".",
        "In addition to projecting Fin(?)",
        "down to 2 A for some A ?",
        "Fin(?",
        "), we can build up, forming the componentwise unions of strings ?",
        "1 ?",
        "?",
        "??",
        "n and ?",
        "1 ?",
        "?",
        "??",
        "n of the same number n of sets for their superposition ?",
        "1 ?",
        "?",
        "??",
        "n & ?",
        "1 ?",
        "?",
        "??",
        "n := (?",
        "1 ?",
        "?",
        "1 ) ?",
        "?",
        "?",
        "(?",
        "n ?",
        "?",
        "n ) and superposing languages L and L ?",
        "over Fin(?)",
        "by superposing strings in L and L ?",
        "of the same length L & L ?",
        ":= {s&s ?",
        "| s ?",
        "L, s ?",
        "?",
        "L ?",
        "and length(s) = length(s ? )}",
        "(Fernando 2004).",
        "For example, s mo,dy = ?",
        "mo (s mo,dy ) & ?",
        "dy (s mo,dy ) where dy := {d1, d2 .",
        ".",
        ".",
        ", d31}.",
        "More generally, writing L A for the image of L under ?",
        "A L A := {?",
        "A (s) | s ?",
        "L}, observe that for L ?",
        "(2 B ) ?",
        "and A ?",
        "B, L is included in the superposition of L A and L B?A L ?",
        "L A & L B?A .",
        "The next step is to identify a language L ?",
        "such that L = (L A & L B?A ) ?",
        "L ?",
        "(1) other than L ?",
        "= L. For a decomposition (1) of L into (generic) contextual constraints L ?",
        "separate from the (specific) components L A and L B?A , it will be useful to sharpen L A , L B?A and &, factoring in bc and variants of bc (not to mention ?).",
        "Measurements ranging from crude comparisons (of order) to quantitative judgments (mul- tiplying unit magnitudes with real numbers) can be expressed through fluents in ?.",
        "We interpret the fluents relative to suitable strings in Fin(?)",
        "?",
        ", presented below in category-theoretic terms connected to type theory (e.g. Mac Lane and Moerdijk 1992).",
        "Central to this presentation is the notion of a presheaf on Fin(?)",
        "?",
        "a functor from the opposite category Fin(?)",
        "op (a morphism in which is a pair (B,A) of finite subsets of ?",
        "such that A ?",
        "B) to the category Set of sets and functions.",
        "The Fin(?",
        ")-indexed family of functions bc A (for A ?",
        "Fin(?))",
        "provides an important example that we generalize in section 2.",
        "An example of linguistic semantic interest to which block compression bc applies is 64 Example B (continuous change) The pair (a), (b) below superposes two events, soup cooling and an hour passing, in different ways (Dowty 1979).",
        "(a) The soup cooled in an hour.",
        "(b) The soup cooled for an hour.",
        "A common intuition is that in an hour requires an event that culminates, while for an hour requires a homogeneous event.",
        "In the case of (a), the culmination may be that some threshold temperature (supplied by context) was reached, while in (b), the homogeneity may be the steady drop in temperature over that hour.",
        "We might track soup cooling by a descending sequence of degrees, d 1 > d 2 > ?",
        "?",
        "?",
        "> d n , with d 1 at the beginning of the hour, and d n at the end.",
        "But no sample of finite size n can be complete.",
        "To overcome this limitation, it is helpful to construe the ith box in a string as a description of an interval I i over the real line R. We call a sequence I 1 ?",
        "?",
        "?",
        "I n of intervals a segmentation if ?",
        "n i=1 I i is an interval and for 1 ?",
        "i < n, I i < I i+1 , where < is full precedence I < I ?",
        "iff (?r ?",
        "I)(?r ?",
        "?",
        "I ? )",
        "r < r ?",
        ".",
        "Now, assuming an assignment of degrees sDg(r) to real numbers r representing temporal instants, the idea is to define satisfaction |= between intervals I and fluents sDg < d according to I |= sDg < d iff (?r ?",
        "I) sDg(r) < d and similarly for d ?",
        "sDg.",
        "We then lift |= to segmentations I 1 ?",
        "?",
        "?",
        "I n and strings ?",
        "1 ?",
        "?",
        "??",
        "n ?",
        "Fin(?)",
        "n of the same length n such that I 1 ?",
        "?",
        "?",
        "I n |= ?",
        "1 ?",
        "?",
        "??",
        "n iff whenever 1 ?",
        "i ?",
        "n and ?",
        "?",
        "I i , I i |= ?",
        "i and analyze (a) above as (c) below, where d is the contextually given threshold required by in an hour, and x is the start of that hour, the end of which is marked by hour(x).",
        "(c) x, d ?",
        "sDg d ?",
        "sDg hour(x), sDg < d All fluents ?",
        "in (c) have the stative property (?)",
        "for all intervals I and I ?",
        "whose union I ?",
        "I ?",
        "is an interval, I ?",
        "I ?",
        "|= ?",
        "iff I |= ?",
        "and I ?",
        "|= ?",
        "(Dowty 1979).",
        "(?)",
        "holds also for the fluents in the string (d) below for (b), where the subinterval relation v is inclusion restricted to intervals, I |= [w]?",
        "iff (?I ?",
        "v I) I ?",
        "|= ?",
        "and sDg ?",
        "is the fluent ?x (sDg < x ?",
        "Prev(x ?",
        "sDg)) saying the degree drops (with I |= Prev(?)",
        "iff I ?",
        "I |= ?",
        "for some I ?",
        "< I such that I ?",
        "I ?",
        "is an interval).",
        "(d) x [w]sDg ?",
        "hour(x), [w]sDg ?",
        "(?)",
        "is intimately related to block compression bc (Fernando 2013b), supporting derivations of (c) and (d) by a modification & bc of & defined in ?2.3 below.",
        "Our third example directly concerns computational processes, which we take up in section 3.",
        "Example C (finite automata) Given a finite alphabet A, a (non-deterministic) finite automaton A over A is a quadruple (Q, ?, F, q 0 ) consisting of a finite set Q of states, a transition relation ?",
        "?",
        "Q ?",
        "A ?",
        "Q, a subset F of Q consisting of final (accepting) states, and an initial state q 0 ?",
        "Q.",
        "A accepts a string a 1 ?",
        "?",
        "?",
        "a n ?",
        "A ?",
        "precisely if there is a string q 1 ?",
        "?",
        "?",
        "q n ?",
        "Q n such that q n ?",
        "F and ?",
        "(q i?1 , a i , q i ) for 1 ?",
        "i ?",
        "n (2) (where q 0 is A's designated initial state).",
        "The accepting runs of A are strings of the form a 1 , q 1 ?",
        "?",
        "?",
        "a n , q n ?",
        "(2 A?Q ) ?",
        "satisfying (2).",
        "While we can formulate such runs as strings over the alphabet A?Q, we opt for the alphabet 2 A?Q (formed from A ?",
        "Q ?",
        "Fin(?))",
        "to link up smoothly with examples where more than one automata may be running, not all necessarily known nor in perfect harmony with others.",
        "Such examples are arguably of linguistic interest, the so-called Imperfective Paradox (Dowty 1979) being a case in point (Fernando 2008).",
        "That said, the attention below is largely on certain category-theoretic preliminaries for type theory.",
        "2 We adopt the following notational conventions.",
        "Given a function f and a set X , we write 2 Only the most rudimentary category-theoretic notions are employed; explanations can be found in any number of introductions to category theory available online (and in print).",
        "65 f \u0016 X for f restricted to X ?",
        "domain(f) - image(f) for {f(x) | x ?",
        "domain(f)} fX for image(f \u0016 X) f ?1 X for {x ?",
        "domain(f) | f(x) ?",
        "X} and if g is a function for which image(f) ?",
        "domain(g), f ; g for f composed (left to right) with g (f ; g)(x) := g(f(x)) for all x ?",
        "domain(f).",
        "We say f is a function on X if domain(f) = X ?",
        "image(f) ?",
        "i.e., f : X ?",
        "X .",
        "The kernel of f , ker(f), is the equivalence relation on domain(f) that holds between s, s ?",
        "such that f(s) = f(s ?",
        ").",
        "Clearly, ker(f) ?",
        "ker(f ; g) when f ; g is defined.",
        "2 Some presheaves on Fin(?)",
        "Given a function f on Fin(?)",
        "?",
        "and A ?",
        "Fin(?",
        "), let us write f A for the function ?",
        "A ; f on Fin(?)",
        "?",
        "f A (s) := f(?",
        "A (s)) (recalling ?",
        "A (?",
        "1 ?",
        "?",
        "??",
        "n ) := (?",
        "1 ?A) ?",
        "?",
        "?",
        "(?",
        "n ?A) and generalizing bc A from Example A).",
        "To extract a presheaf on Fin(?)",
        "from the Fin(?",
        ")-indexed family of functions f A , certain requirements on f are helpful.",
        "Toward that end, let us agree that f preserves a function g with domain Fin(?)",
        "?",
        "if g = f ; g f is idempotent if f preserves itself (i.e., f = f ; f ) the vocabulary voc(s) of s ?",
        "Fin(?)",
        "?",
        "is the set of fluents that occur in s voc(?",
        "1 ?",
        "?",
        "??",
        "n ) := n ?",
        "i=1 ?",
        "i whence s ?",
        "voc(s) ?",
        ".",
        "Note that for idempotent f , image(f) consists of canonical representatives f(s) of ker(f)'s equivalence classes {s ?",
        "?",
        "Fin(?)",
        "?",
        "| f(s ? )",
        "= f(s)}.",
        "2.1 ?-preserving functions A function f on Fin(?)",
        "?",
        "is ?-preserving if f preserves voc and f A , for all A ?",
        "Fin(?).",
        "Note that bc is ?-preserving, as is the identity function id on Fin(?)",
        "?",
        ".",
        "Proposition 1.",
        "If f is ?-preserving then f is idempotent and f B ; f A = f A?B for all A,B ?",
        "Fin(?).",
        "Let P f be the function with domain Fin(?)",
        "?",
        "{(B,A) ?",
        "Fin(?)?Fin(?)",
        "|A ?",
        "B} mapping A ?",
        "Fin(?)",
        "to f(2 A ) ?",
        "P f (A) := {f(s) | s ?",
        "(2 A ) ? }",
        "and a Fin(?)",
        "op -morphism (B,A) to the restriction of f A to P f (B) P f (B,A) := f A \u0016 P f (B).",
        "Corollary 2.",
        "If f is ?-preserving then P f is a presheaf on Fin(?).",
        "Apart from bc, we get a ?-preserving function by stripping off any initial or final empty boxes unpad(s) := ?",
        "?",
        "?",
        "unpad(s ? )",
        "if s = s ?",
        "or else s = s ?",
        "s otherwise so that unpad(s) neither begins nor ends with .",
        "Notice that bc; unpad = unpad; bc.",
        "Proposition 3.",
        "If f and g are ?-preserving and f ; g = g; f , then f ; g is ?-preserving.",
        "2.2 The Grothendieck construction Given a presheaf F on Fin(?",
        "), the category ?",
        "F of elements of F (also known as the Grothendieck construction for F ) has objects (A, s) ?",
        "Fin(?)",
        "?",
        "F (A) (making ?",
        "X?Fin(?)",
        "F (X) the set of objects in ?",
        "F ) morphisms (B, s ?",
        ", A, s) from objects (B, s ? )",
        "to (A, s) when A ?",
        "B and F (B,A)(s ? )",
        "= s (e.g. Mac Lane and Moerdijk 1992).",
        "Let pi f be the left projection pi f (A, s) = A 66 from ?",
        "P f back to Fin(?).",
        "The inverse limit of P f , lim ??",
        "P f , is the set of ( ?",
        "P f )-valued presheaves p on Fin(?)",
        "(i.e. functors p : Fin(?)",
        "op ?",
        "?",
        "P f ) that are inverted by pi f pi f (p(A)) = A for all A ?",
        "Fin(?).",
        "That is, p(A) = (A, s A ) for some s A ?",
        "f(2 A ) ?",
        "such that (?)",
        "s A = f A (s B ) whenever A ?",
        "B ?",
        "Fin(?).",
        "(?)",
        "is the essential restriction that lim ??",
        "P f adds to objects {s X } X?Fin(?)",
        "of the dependent type ?",
        "X?Fin(?)",
        "P f (X).",
        "2.3 Superposition and non-determinism Taking the presheaf P id induced by the identity function id on Fin(?)",
        "?",
        ", observe that in ?",
        "P id , there is a product of (?, ) and ({?",
        "}, ? )",
        "but not of ({?",
        "}, ) and ({?",
        "}, ?",
        ").",
        "The tag A in (A, s) differentiating (?, ) from ({?",
        "}, ) cannot be ignored when forming products in ?",
        "P id .",
        "A necessary and sufficient condition for (A, s) and (B, s ? )",
        "to have a product is ?",
        "B (s) = ?",
        "A (s ? )",
        "presupposed by the pullback of (A, s) ?",
        "(A ?B, ?",
        "B (s)) ?",
        "(B, s ?",
        ").",
        "By comparison, the superposition s&s ?",
        "exists (as a string) if and only if ?",
        "?",
        "(s) = ?",
        "?",
        "(s ? )",
        "for (voc(s), s) ?",
        "(?, ?",
        "?",
        "(s)) ?",
        "(voc(s ?",
        "), s ? )",
        "(or length(s) = length(s ? )",
        "as ?",
        "?",
        "(s) = length(s) ).",
        "Products in ?",
        "P id are superpositions, but superpositions need not be products.",
        "Next, we step from id to other ?-preserving functions f such as bc and bc; unpad.",
        "A pair (A, s) and (B, s ? )",
        "of ?",
        "P f -objects may fail to have a product not because there is no ?",
        "P f -object (A ?B, s ?? )",
        "such that (A, s) ?",
        "(A ?B, s ?? )",
        "?",
        "(B, s ? )",
        "but too many non-isomorphic choices for such s ??",
        ".",
        "Consider the case of bc; unpad, with (?, \u000f) terminal in ?",
        "P bc;unpad (where \u000f is the null string of length 0).",
        "For distinct fluents a and b ?",
        "?, there are 13 strings s ?",
        "P bc;unpad ({a, b}) such that ({a}, a )?",
        "({a, b}, s)?",
        "({b}, b )) corresponding to the 13 interval relations in Allen 1983 (Fernando 2007).",
        "The explosion of solutions s ??",
        "?",
        "P f (A ?",
        "B) to the equations f A (s ?? )",
        "= s and f B (s ?? )",
        "= s ?",
        "given (A, s) ?",
        "(A ?B, f B (s)) ?",
        "(B, s ? )",
        "(i.e., f B (s) = f A (s ? ))",
        "is paralleled by the trans-formation, under f , of a language L to L f := f ?1 fL used to turn the superposition L&L ?",
        "of languages L and L ?",
        "into L & f L ?",
        ":= f(L f & L ?",
        "f ).",
        "For f := bc; unpad, the set a & f b consists of the 13 strings mentioned above.",
        "(We follow the usual practice of conflating a string s with the singleton language {s} whenever convenient.)",
        "Stepping from strings to languages, we lift the presheaf P f to the presheaf Q f mapping A ?",
        "Fin(?)",
        "to Q f (A) := {fL | L ?",
        "(2 A ) ? }",
        "and a Fin(?)",
        "op -morphism (B,A) to the function Q f (B,A) := (?L ?",
        "Q f (B)) f A L sending L ?",
        "Q f (B) to f A L ?",
        "Q f (A).",
        "Then, for non-identity morphisms between ?",
        "Q f -objects (A,L) and (A,L ? )",
        "where L ?",
        "L ?",
        ", we add inclusions from (A,L) to (A,L ? )",
        "to the ?",
        "Q f morphisms for the category C(?, f) with objects the same as those in ?",
        "Q f , and morphisms (B,L ?",
        ", A, L) from objects (B,L ? )",
        "to (A,L) whenever A ?",
        "B and f A L ?",
        "?",
        "L. 67 As is the case with ?",
        "Q f -morphisms, the sources (domains) of C(?, f)-morphisms entail their targets (codomains).",
        "To make these entailments pre-cise, we can identify the space of possible worlds with the inverse limit of P f , and reduce (A,L) to [[A,L]] f := {p ?",
        "lim ??",
        "P f | ('s ?",
        "L) p(A) = (A, s)}.",
        "The inclusion [[B,L ? ]]",
        "f ?",
        "[[A,L]] f can then be pronounced: (B,L ? )",
        "f -entails (A,L).",
        "Proposition 4.",
        "Let f be a ?-preserving function and (A,L) and (B,L ? )",
        "be ?",
        "Q f -objects such that A ?",
        "B. (B,L ? )",
        "f -entails (A,L) iff there is a C(?, f)-morphism from (B,L ? )",
        "to (A,L).",
        "Relaxing the assumption A ?",
        "B, one can also check that for f ?",
        "{bc, unpad, (bc; unpad)}, pull-backs of (A,L)?",
        "(A ?B, (f ?",
        "L) ?",
        "f ?",
        "L ?",
        ")?",
        "(B,L ? )",
        "in C(?, f) are given by (A,L)?",
        "(A ?B,L& f L ?",
        ")?",
        "(B,L ? )",
        "(3) although (3) need not hold for L& f L ?",
        "to be well-defined.",
        "3 Constraints and finite automata We now bring finite automata into the picture, recalling from section 1 Example C's superpositions a 1 ?",
        "?",
        "?",
        "a n & q 1 ?",
        "?",
        "?",
        "q n (4) where a 1 ?",
        "?",
        "?",
        "a n is accepted by a finite automaton A going through the sequence q 1 ?",
        "?",
        "?",
        "q n of (inter- nal) states.",
        "We can assume the tape alphabet A ?",
        "{a 1 , .",
        ".",
        ".",
        ", a n } and the state set Q ?",
        "{q 1 , .",
        ".",
        ".",
        ", q n } are two disjoint subsets of the set ?",
        "of fluents; fluents in A are ?observable?",
        "(on a tape), while fluents in Q are ?hidden?",
        "(inside a black box).",
        "Disjoint though they may be,A andQ are tightly coupled byA's transition table ?",
        "?",
        "Q?A?Q (not to mention the other components of A, its initial and final states).",
        "That coupling can hardly be recreated by superposition & (or some simple modification & f ) without the help of some machinery encoding ?.",
        "But first, there is the small matter of formulating the map a 1 ?",
        "?",
        "?",
        "a n 7?",
        "a 1 ?",
        "?",
        "?",
        "a n implicit in (4) above as a natural transformation.",
        "3.1 Bottom ?",
        "naturally If the function ?",
        "A such that for a 1 ?",
        "?",
        "?",
        "a n ?",
        "A ?",
        ", ?",
        "A (a 1 ?",
        "?",
        "?",
        "a n ) = a 1 ?",
        "?",
        "?",
        "a n is to be the A-th component of a natural transformation ?",
        ": S ?",
        "P id , we need to specify the presheaf S on Fin(?).",
        "To form a function S(B,A) : S(B) ?",
        "S(A) for A ?",
        "B ?",
        "Fin(?)",
        "with B ?",
        "?",
        "S(B) and A ?",
        "?",
        "S(A), it is handy to introduce a bottom ?",
        "for B ?A, adjoining ?",
        "to a finite subset X of ?",
        "for X ?",
        ":= X + {?}",
        "before forming the strings in S(X) := X ?",
        "?",
        ".",
        "We then set S(B,A) : B ?",
        "?",
        "?",
        "A ?",
        "?",
        "S(B,A)(\u000f) := \u000f S(B,A)(?s) := { ?",
        "S(B,A)(s) if ?",
        "?",
        "A ?",
        "?",
        "S(B,A)(s) otherwise (e.g. S({a, b}, {a})(ba?)",
        "= ?a?)",
        "and let ?",
        "A : A ?",
        "?",
        "?",
        "(2 A ) ?",
        "map \u000f to itself, and ?",
        "A (?s) := { ?",
        "A (s) if ?",
        "= ?",
        "?",
        "?",
        "A (s) otherwise (e.g. ?",
        "{a} (?a?)",
        "= a ).",
        "Proposition 5. ?",
        "is a natural transformation from S to P id .",
        "3.2 Another presheaf and category Turning now to finite automata, we recall a fundamental result about languages that are regular (i.e., accepted by finite automata), 3 the B?uchi-Elgot-Trakhtenbrot theorem (e.g. Thomas 1997) for every finite alphabet A 6= ?, a language L ?",
        "A + is regular iff there is a sentence ?",
        "of MSO A such that L = {s ?",
        "A + | s |= A ?}",
        ".",
        "MSO A is Monadic Second Order logic with a unary relation symbol U a for each a ?",
        "A, plus a binary relation symbol S for successors.",
        "The predicate |= A treats a string a 1 a 2 ?",
        "?",
        "?",
        "a n over A as an MSO A -model with universe {1, 2, .",
        ".",
        ".",
        ", n}, U a as its subset {i | a i = a}, and S as {(1, 2), (2, 3), .",
        ".",
        ".",
        ", (n?",
        "1, n)} 3 Whether or not this sense of regular has an interesting connection with regular categories (which are, among other things, finitely complete), I do not know.",
        "68 so that, for instance, a 1 ?",
        "?",
        "?",
        "a n |= A ?x?y S(x, y) iff n ?",
        "2 (5) for all finite A 6= ?.",
        "Notice that no a ?",
        "A is required to interpret ?x?y S(x, y), which after all is an MSO ?",
        "-sentence suited to strings ?",
        "n ?",
        "S(?).",
        "Furthermore, for a 6= b and {a, b} ?",
        "A, no string in A + satisfies ?x U a (x) ?",
        "U b (x) (6) which makes it awkward to extend |= A to formulas with free variables (requiring variable assignments on top of strings in A + ).",
        "A simple way to accommodate variables is to include them in A and interpret MSO A -formulas not over A + but over (2 A ) + , lifting |= A from strings s over A to a predicate |= A on strings over 2 A such that s |= A ?",
        "iff ?",
        "A (s) |= A ?",
        "(7) for every MSO A -sentence ?",
        "(Fernando 2013a).",
        "For all s ?",
        "(2 A ) + , we set s |= A S(x, y) iff ?",
        "{x,y} (s) ?",
        "?",
        "x y ?",
        "(8) for A ?",
        "{x, y}, and s |= A U a (x) iff ?",
        "{a,x} (s) ?",
        "E a a, x E a (9) forA ?",
        "{a, x}, where E a := ( + a ) ?",
        ".",
        "We must be careful to incorporate into the clauses defining s |= A ?",
        "the presupposition that each first-order variable x free in ?",
        "occurs uniquely in s ?",
        "i.e. s |= A x = x where s |= A x = y iff ?",
        "{x,y} (s) ?",
        "?",
        "x, y ?",
        "(10) for x, y ?",
        "A.",
        "In particular, we restrict negation ??",
        "to strings |= A -satisfying x = x, for each first-order variable x free in ?.",
        "We can then put s |= A ?x ?",
        "iff ('s ? )",
        "?",
        "A (s ? )",
        "= ?",
        "A (s) and s ?",
        "|= A?",
        "{x} ?",
        "and similarly for second-order existential quantification.",
        "The equivalence (5) above then becomes s |= A ?x?y S(x, y) iff ?",
        "?",
        "(s) ?",
        "+ (11) and in place of (6), we have s |= A ?x U a (x) ?",
        "U b (x) iff ?",
        "{a,b} (s) ?",
        "(2 {a,b} ) ?",
        "a, b (2 {a,b} ) ?",
        "(12) for a, b ?",
        "A.",
        "Working back from (7) s |= A ?",
        "iff ?",
        "A (s) |= A ?",
        "to the B?uchi-Elgot-Trakhtenbrot theorem, one can check that for every finite A and MSO A -formula ?, the set L A (?)",
        ":= {s ?",
        "(2 A ) + | s |= A ?}",
        "of strings over 2 A that |= A -satisfy ?",
        "is regular, using the fact that for all A ?",
        "?",
        "A, the restriction of ?",
        "A ?",
        "to (2 A ) ?",
        "is computable by a finite state transducer.",
        "But for A ?",
        "?, 4 ?",
        "A ?",
        "\u0016 (2 A ) ?",
        "is just P id (A,A ?",
        ").",
        "In recognition of the role of these functions in |= A , we effectivize the presheaf Q id from ?2.3 as follows.",
        "Let R ?",
        "be the presheaf on Fin(?)",
        "mapping A ?",
        "Fin(?)",
        "to the set of languages over the alphabet 2 A that are regular R ?",
        "(A) := {L ?",
        "Q id (A) | L is regular} and a Fin(?)",
        "op -morphism (B,A) to the restriction of Q id (B,A) to R ?",
        "(B) R ?",
        "(B,A) := (?L ?",
        "R ?",
        "(B)) ?",
        "A L. ?",
        "R ?",
        "-objects are then pairs (A,L) where A ?",
        "Fin(?)",
        "and L is a regular language over the alphabet 2 A , while ?",
        "R ?",
        "-morphisms are quadruples (B,L,A, ?",
        "A L) from (B,L) to (A, ?",
        "A L) for A ?",
        "B ?",
        "Fin(?).",
        "To account for the Boolean operations in MSO (as opposed to the predications (8)?",
        "(10) involving ?",
        "A ), we add inclusions for a category R(?)",
        "with the same objects as ?",
        "R ?",
        "morphisms all of those in C(?, id) between objects in ?",
        "R ?",
        "?",
        "i.e., quadruples (B,L ?",
        ", A, L) such that A ?",
        "B ?",
        "Fin(?",
        "), L ?",
        "?",
        "(2 B ) ?",
        "is regular, L ?",
        "(2 A ) ?",
        "is regular, and ?",
        "A L ?",
        "?",
        "L. Let us agree to write (B,L ? )",
        "; (A,L) 4 Note an MSO A -formula ?",
        "is not strictly a fluent in ?",
        "but is formed in part from fluents.",
        "69 to mean (B,L ?",
        ", A, L) is a R(?)-morphism.",
        "Clearly, for s ?",
        "(2 A ) + , A ?",
        "?",
        "A and L ?",
        "(2 A ? )",
        "+ , ?",
        "A ?",
        "(s) ?",
        "L iff (A, {s}) ; (A ?",
        ", L).",
        "In particular, for x ?",
        "A and s ?",
        "(2 A ) + , s |= A x = x iff (A, {s}) ; ({x}, ?",
        "x ? )",
        "and similarly for x = x replaced by the different MSO A -formulas specified in clauses (8)?",
        "(12) above.",
        "The MSO A -sentence spec(A) := ?x ?",
        "a?A (U a (x) ?",
        "?",
        "b?A?",
        "{a} ?U b (x)) associating a unique a ?",
        "A with each string position (presupposed in |= A but not in |= A ) fits the same pattern s |= A spec(A) iff ?",
        "A (s) ?",
        "{ a | a ?",
        "A} + iff (A ?",
        "voc(s), {s}) ; (A, { a | a ?",
        "A} + ) iff ?",
        "A (s) ?",
        "?",
        "A A + .",
        "Let us define a string s ?",
        "Fin(?)",
        "+ to be A-specified if s |= A spec(A) A-underspecified if ?",
        "A (s) ?",
        "?",
        "A (A ?",
        "+ ?A + ) - A-overspecified if ?",
        "A (s) 6?",
        "image(?",
        "A ) so that for a 6= a ?",
        "and A = {a, a ?",
        "}, a a is A-specified, a is A-underspecified, and a, a ?",
        "a is A-overspecified.",
        "Given a finite automaton A over A with set Q of states, its set AcRun(A) of accepting runs (Example C) is both A-specified and Q-specified, provided A ?",
        "Q = ?",
        "(and otherwise risks being A-overspecified).",
        "The language accepted by A is the ?",
        "?1 A -image of the language ?",
        "A AcRun(A) that is Q-underspecified, in accordance with the intuition that the states are hidden.",
        "From the regularity of AcRun(A), however, it is clear that we can make these states visible, with AcRun(A) as the language accepted by a finite automaton A ?",
        "(over 2 A?Q ) that may (or may not) have the same set Q of states.",
        "The maps ?",
        "A and inclusions ?",
        "underlying the morphisms of R(?)",
        "represent the two ways information may grow from ?",
        "R ?",
        "-objects (A,L) to (B,L ? )",
        "?",
        "expansively with A ?",
        "B and L = ?",
        "A L ?",
        ", and eliminatively with L ?",
        "?",
        "L and A = B. The same notion of f -entailment defined in ?2.3 through the sets [[A,L]] f applies, but we have been careful here to fix f to id, in view of Proposition 6.",
        "For A ?",
        "B ?",
        "Fin(?",
        "), ?",
        "an MSO A -formula and s ?",
        "(2 B ) + , s |= B ?",
        "iff ?",
        "A (s) |= A ?.",
        "Proposition 6 says that s |= B ?",
        "depends only on the part ?",
        "A (s) of s mentioned in ?.",
        "It is a particular instance of the satisfaction condition in in-stitutions, expressing the invariance of truth under change of notation (Goguen and Burstall 1992).",
        "Proposition 6 breaks down if we replace ?",
        "A by bc A or unpad A , as can be seen with A = ?, and ?",
        "= ?x?y S(x, y), for which recall (11).",
        "3.3 Varying grain and span Troublesome as they are, the maps bc A and unpad A have some use.",
        "Just as we can vary temporal grain through bc (Examples A and B in section 1), we can vary temporal span through unpad.",
        "For instance, we can combine runs of automataA 1 over A 1 and A 2 over A 2 in L(A 1 ,A 2 ) := AcRun(A 1 ) & unpad AcRun(A 2 ) with the subscript unpad on & relaxing the requirement thatA 1 andA 2 start and finish together (running in lockstep throughout).",
        "For i ?",
        "{1, 2}, and Q i the state set for A i , AcRun(A i ) = unpad A i ?Q i L(A 1 ,A 2 ) assuming the sets A 1 , A 2 , Q 1 and Q 2 are pairwise disjoint.",
        "The disjointness assumption rules out any communication (or interference) between A 1 and A 2 .",
        "As subsets of one large set ?",
        "of fluents, however, it is perfectly natural for these sets to intersect (and communicate through a common vocabulary), and we might express very partial constraints involving them through, for ex-ample, MSO-formulas.",
        "Recalling the definition L A (?)",
        ":= {s ?",
        "(2 A ) + | s |= A ?",
        "}, we can rewrite the satisfaction condition s |= B ?",
        "iff f A (s) |= A ?",
        "on MSO A -formulas ?, A ?",
        "B ?",
        "Fin(?)",
        "and s ?",
        "(2 B ) + as L B (?)",
        "= {s ?",
        "(2 B ) + | f A (s) ?",
        "L A (?)}.",
        "This equation lifts any regular language L A (?)",
        "to a regular languageL B (?",
        "), provided f is computed by a finite-state transducer (as in the case of bc or unpad).",
        "Inverse images under such relations are a useful addition to the stock of operations constituting MSO-formulas as well as regular expressions.",
        "70 References"
      ]
    }
  ]
}
