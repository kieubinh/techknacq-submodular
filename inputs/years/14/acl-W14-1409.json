{
  "info": {
    "authors": [
      "Robin Cooper",
      "Simon Dobnik",
      "Shalom Lappin",
      "Staffan Larsson"
    ],
    "book": "TTNLS",
    "id": "acl-W14-1409",
    "title": "A Probabilistic Rich Type Theory for Semantic Interpretation",
    "url": "https://aclweb.org/anthology/W14-1409",
    "year": 2014
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Proceedings of the EACL 2014 Workshop on Type Theory and Natural Language Semantics (TTNLS), pages 72?79, Gothenburg, Sweden, April 26-30 2014. c ?2014 Association for Computational Linguistics A Probabilistic Rich Type Theory for Semantic Interpretation Robin Cooper 1 , Simon Dobnik 1 , Shalom Lappin 2 , and Staffan Larsson 1 1 University of Gothenburg, 2 King's College London {cooper,sl}@ling.gu.se, simon.dobnik@gu.se, shalom.lappin@kcl.ac.uk",
        "Abstract",
        "We propose a probabilistic type theory in which a situation s is judged to be of a type T with probability p. In addition to basic and functional types it in-cludes, inter alia, record types and a notion of typing based on them.",
        "The type system is intensional in that types of situations are not reduced to sets of situations.",
        "We specify the fragment of a compositional semantics in which truth conditions are replaced by probability conditions.",
        "The type system is the interface between classifying situations in perception and computing the semantic interpretations of phrases in natural language."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Classical semantic theories (Montague, 1974), as well as dynamic (Kamp and Reyle, 1993) and underspecified (Fox and Lappin, 2010) frameworks use categorical type systems.",
        "A type T identifies a set of possible denotations for expressions in T , and the system specifies combinatorial operations for deriving the denotation of an expression from the values of its constituents.",
        "These theories cannot represent the gradience of semantic properties that is pervasive in speak-ers?",
        "judgements concerning truth, predication, and meaning relations.",
        "In general, predicates do not have determinate extensions (or intensions), and so, in many cases, speakers do not make categorical judgements about the interpretation of an expression.",
        "Attributing gradience effects to performance mechanisms offers no help, unless one can show precisely how these mechanisms produce the observed effects.",
        "Moreover, there is a fair amount of evidence indicating that language acquisition in general crucially relies on probabilistic learning (Clark and Lappin, 2011).",
        "It is not clear how a reasonable account of semantic learning could be constructed on the basis of the categorical type systems that either classical or revised semantic theories assume.",
        "Such systems do not appear to be efficiently learn-able from the primary linguistic data (with weak learning biases), nor is there much psychological data to suggest that they provide biologically determined constraints on semantic learning.",
        "A semantic theory that assigns probability rather than truth conditions to sentences is in a better position to deal with both of these issues.",
        "Gradience is intrinsic to the theory by virtue of the fact that speakers assign values to declarative sentences in the continuum of real numbers [0,1], rather than Boolean values in {0,1}.",
        "In addition, a probabilistic account of semantic learning is facilitated if the target of learning is a probabilistic representation of meaning.",
        "Both semantic representation and learning are instances of reasoning under uncertainty.",
        "Probability theorists working in AI often describe probability judgements as involving distributions over worlds.",
        "In fact, they tend to limit such judgements to a restricted set of outcomes or events, each of which corresponds to a partial world which is, effectively, a type of situation (Halpern, 2003).",
        "A classic example of the reduction of worlds to situation types in probability theory is the estimation of the likelihood of heads vs tails in a series of coin tosses.",
        "Here the world is held constant except along the dimension of a binary choice between a particular set of possible outcomes.",
        "A slightly more complex case is the probability distribution for possible results of throwing a single die, which allows for six possibilities corresponding to each of its numbered faces.",
        "This restricted range of outcomes constitutes the sample space.",
        "We are making explicit the assumption, common to most probability theories used in AI, with clearly defined sample spaces, that probability is distributed over situation types (Barwise and Perry, 1983), rather than over sets of entire worlds.",
        "An Austinian proposition is a judgement that a 72 situation is of a particular type, and we treat it as probabilistic.",
        "In fact, it expresses a subjective probability in that it encodes the belief of an agent concerning the likelihood that a situation is of that type.",
        "The core of an Austinian proposition is a type judgement of the form s : T , which states that a situation s is of type T .",
        "On our account this judgement is expressed probabilistically as p(s : T ) = r, where r ?",
        "[0,1].",
        "1 On the probabilistic type system that we propose situation types are intensional objects over which probability distributions are specified.",
        "This allows us to reason about the likelihood of alternative states of affairs without invoking possible worlds.",
        "Complete worlds are not tractably representable.",
        "Assume that worlds are maximal consistent sets of propositions (Carnap, 1947).",
        "If the logic of propositions is higher-order, then the problem of determining membership in such a set is not complete.",
        "If the logic is classically first-order, then the membership problem is complete, but undecidable.",
        "Alternatively, we could limit ourselves to propositional logic, and try to generate a maximally consistent set of propositions from a single finite proposition P in Conjunctive Normal Form (CNF, a conjunction of disjunctions), by simply adding conjuncts to P .",
        "But it is not clear what (finite) set of rules or procedures we could use to decide which propositions to add in order to generate a full description of a world in a systematic way.",
        "Nor is it obvious at what point the conjunction will constitute a complete description of the world.",
        "Moreover, all the propositions that P entails must be added to it, and all the propositions with which P is inconsistent must be excluded, in order to obtain the maximal consistent set of propositions that describe a world.",
        "But then testing the satisfiability of P is an instance of the ksat prob-lem, which, in the general case, is NP-complete.",
        "2 1 Beltagy et al. (2013) propose an approach on which classical logic-based representations are combined with distributional lexical semantics and a probabilistic Markov logic, in order to select among the set of possible inferences from a sentence.",
        "Our concern here is more foundational.",
        "We seek to replace classical semantic representations with a rich probabilistic type theory as the basis of both lexical and compositional interpretation.",
        "2 The ksat problem is to determine whether a formula in propositional logic has a satisfying set of truth-value assignments.",
        "For the complexity results of different types of ksat problem see Papadimitriou (1995).",
        "By contrast situation types can be as large or as small as we need them to be.",
        "They are not maximal in the way that worlds are, and so the issue of completeness of specification does not arise.",
        "Therefore, they can, in principle, be tractably represented.",
        "2 Rich Type Theory and Probability Central to standard formulations of rich type theories (for example, (Martin-L?of, 1984)) is the notion of a judgement a : T , that object a is of type T .",
        "We represent the probability of this judgement as p(a : T ).",
        "Our system (based on Cooper (2012)) includes the following types.",
        "Basic Types are not constructed out of other objects introduced in the theory.",
        "If T is a basic type, p(a : T ) for any object a is provided by a probability model, an assignment of probabilities to judgements involving basic types.",
        "PTypes are constructed from a predicate and an appropriate sequence of arguments.",
        "An example is the predicate ?man?",
        "with arity ?Ind ,Time?",
        "where the types Ind and Time are the basic type of individuals and of time points respectively.",
        "Thus man(john,18:10) is the type of situation (or eventuality) where John is a man at time 18:10.",
        "A probability model provides probabilities p(e : r(a 1 , .",
        ".",
        ".",
        ", a n )) for ptypes r(a 1 , .",
        ".",
        ".",
        ", a n ).",
        "We take both common nouns and verbs to provide the components out of which PTypes are constructed.",
        "Meets and Joins give, for T 1 and T 2 , the meet, T 1 ?",
        "T 2 and the join T 1 ?",
        "T 2 , respectively.",
        "a : T 1 ?",
        "T 2 just in case a : T 1 and a : T 2 .",
        "a : T 1 ?",
        "T 2 just in case either a : T 1 or a : T 2 (possibly both).",
        "3 The probabilities for meet and joint types are defined by the classical (Kolmogorov, 1950) equations p(a : T 1 ?",
        "T 2 ) = p(a : T 1 )p(a : T 2 | a : T 1 ) (equivalently, p(a : T 1 ?",
        "T 2 ) = p(a : T 1 , a : T 2 )), and p(a : T 1 ?",
        "T 2 ) = p(a : T 1 ) + p(a : T 2 ) ?",
        "p(a : T 1 ?",
        "T 2 ), respectively.",
        "Subtypes A type T 1 is a subtype of type T 2 , T 1 v T 2 , just in case a : T 1 implies a : T 2 no matter what we assign to the basic types.",
        "If T 1 v T 2 then a : T 1 ?T 2 iff a : T 1 and a : T 1 ?T 2 iff a : T 2 .",
        "Similarly, if T 2 v T 1 then a : T 1 ?",
        "T 2 iff a : T 2 and a : T 1 ?",
        "T 2 iff a : T 1 .",
        "If T 2 v T 1 , then p(a : T 1 ?",
        "T 2 ) = p(a : T 2 ), and p(a : T 1 ?",
        "T 2 ) = p(a : T 1 ).",
        "If T 1 v T 2 , 3 This use of intersection and union types is not standard in rich type theories, where product and disjoint union are preferred following the Curry-Howard correspondence for conjunction and disjunction.",
        "73 then p(a : T 1 ) ?",
        "p(a : T 2 ).",
        "These definitions also entail that p(a : T 1 ?",
        "T 2 ) ?",
        "p(a : T 1 ), and p(a : T 1 ) ?",
        "p(a : T 1 ?",
        "T 2 ).",
        "We generalize probabilistic meet and join types to probabilities for unbounded conjunctive and disjunctive type judgements, again using the classical equations.",
        "Let ?",
        "p (a 0 : T 0 , .",
        ".",
        ".",
        ", a n : T n ) be the conjunctive probability of judgements a 0 : T 0 , .",
        ".",
        ".",
        ", a n : T n .",
        "Then ?",
        "p (a 0 : T 0 , .",
        ".",
        ".",
        ", a n : T n ) = ?",
        "p (a 0 : T 0 , .",
        ".",
        ".",
        ", a n?1 : T n?1 )p(a n : T n | a 0 : T 0 , .",
        ".",
        ".",
        ", a n?1 : T n?1 ).",
        "If n = 0, ?",
        "p (a 0 : T 0 , .",
        ".",
        ".",
        ", a n : T n ) = 1.",
        "We interpret universal quantification as an unbounded conjunctive probability, which is true if it is vacuously satisfied (n = 0) (Paris, 2010).",
        "Let ?",
        "p (a 0 : T 0 , a 1 : T 1 , .",
        ".",
        ".)",
        "be the disjunctive probability of judgements a 0 : T 0 , a 1 : T 1 , .",
        ".",
        "..",
        "It is computed by ?",
        "p (a 0 : T 0 , .",
        ".",
        ".",
        ", a n : T n ) = ?",
        "p (a 0 : T 0 , .",
        ".",
        ".",
        ", a n?1 : T n?1 ) + p(a n : T n ) ?",
        "?",
        "p (a 0 : T 0 , .",
        ".",
        ".",
        ", a n?1 : T n?1 )p(a n : T n | a 0 : T 0 , .",
        ".",
        ".",
        ", a n?1 : T n?1 ).",
        "If n = 0, ?",
        "p (a 0 : T 0 , .",
        ".",
        ".",
        ", a n : T n ) = 0.",
        "We take existential quantification to be an unbounded disjunctive probability, which is false if it lacks a single non-nil probability instance (n = 0).",
        "Conditional Conjunctive Probabilities are computed by ?",
        "p (a 0 : T 0 , .",
        ".",
        ".",
        ", a n : T n | a : T ) = ?",
        "p (a 0 : T 0 , .",
        ".",
        ".",
        ", a n?1 : T n?1 | a : T )p(a n : T n | a 0 : T 0 , .",
        ".",
        ".",
        ", a n?1 : T n?1 , a : T )).",
        "If n = 0, ?",
        "p (a 0 : T 0 , .",
        ".",
        ".",
        ", a n : T n | a : T ) = 1.",
        "Function Types give, for any types T 1 and T 2 , the type (T 1 ?",
        "T 2 ).",
        "This is the type of total functions with domain the set of all objects of type T 1 and range included in objects of type T 2 .",
        "The probability that a function f is of type (T 1 ?",
        "T 2 ) is the probability that everything in its domain is of type T 1 and that everything in its range is of type T 2 , and furthermore that everything not in its domain which has some probability of being of type T 1 is not in fact of type T 1 .",
        "p(f : (T 1 ?",
        "T 2 )) = ?",
        "a?dom(f) p (a : T 1 , f(a) : T 2 )(1?",
        "?",
        "a6?dom(f) p (a : T 1 )) Suppose that T 1 is the type of event where there is a flash of lightning and T 2 is the type of event where there is a clap of thunder.",
        "Suppose that f maps lightning events to thunder events, and that it has as its domain all events which have been judged to have probability greater than 0 of being lightning events.",
        "Let us consider that all the putative lightning events were clear examples of lightning (i.e. judged with probability 1 to be of type T 1 ) and are furthermore associated by f with clear events of thunder (i.e. judged with probability 1 to be of type T 2 ).",
        "Suppose there were four such pairs of events.",
        "Then the probability of f being of type (T 1 ?",
        "T 2 ) is (1?",
        "1) 4 , that is, 1.",
        "Suppose, alternatively, that for one of the four events f associates the lightning event with a silent event, that is, one whose probability of being of T 2 is 0.",
        "Then the probability of f being of type (T 1 ?",
        "T 2 ) is (1 ?",
        "1) 3 ?",
        "(1 ?",
        "0) = 0.",
        "One clear counterexample is sufficient to show that the function is definitely not of the type.",
        "In cases where the probabilities of the antecedent and the consequent type judgements are higher than 0, the probability of the entire judgement on the existence of a functional type f will decline in proportion to the size of dom(f).",
        "As-sume, for example that there are k elements a ?",
        "dom(f), where for each such a p(a : T 1 ) = p(f(a) : T 2 ) ?",
        ".5.",
        "Every a i that is added to dom(f) will reduce the value of p(f : (T 1 ?",
        "T 2 )), even if it yields higher values for p(a : T 1 ) and p(f(a) : T 2 ).",
        "This is due to the fact that we are treating the probability of p(f : (T 1 ?",
        "T 2 )) as the likelihood of there being a function that is satisfied by all objects in its domain.",
        "The larger the domain, the less probable that all elements in it fulfill the functional relation.",
        "We are, then, interpreting a functional type judgement of this kind as a universally quantified assertion over the pairing of objects in dom(f) and range(f).",
        "The probability of such an assertion is given by the conjunction of assertions corresponding to the co-occurrence of each element a in f 's domain as an instance of T 1 with f(a) as an instance of T 2 .",
        "This probability is the product of the probabilities of these individual assertions.",
        "This seems reasonable, but it only deals with functions whose domain is all objects which have been judged to have some probability, however low, of being of type T 1 .",
        "Intuitively, functions which leave out some of the objects with lower likelihood of being of type T 1 should also have a probability of being of type (T 1 ?",
        "T 2 ).",
        "This factor in the probability is represented by the second element of the product in the formula.",
        "74 Negation ?T , of type T , is the function type (T ?",
        "?",
        "), where ?",
        "is a necessarily empty type and p(?)",
        "= 0.",
        "It follows from our rules for function types that p(f : ?T ) = 1 if dom(f) = ?, that is T is empty, and 0 otherwise.",
        "We also assign probabilities to judgements concerning the (non-)emptiness of a type, p(T ).",
        "we pass over the details of how we compute the probabilities of such judgements, but we note that our account of negation entails that p(T ?",
        "?T ) = 1, and (ii) p(?",
        "?T ) = p(T ).",
        "Therefore, we sustain classical Boolean negation and disjunction, in contrast to Martin-L?of's (1984) intuitionistic type theory.",
        "Dependent Types are functions from objects to types.",
        "Given appropriate arguments as functions they will return a type.",
        "Therefore, the account of probabilities associated with functions above applies to dependent types.",
        "Record Types A record in a type system associated with a set of labels is a set of ordered pairs (fields) whose first member is a label and whose second member is an object of some type (possibly a record).",
        "Records are required to be functional on labels (each label in a record can only occur once in the record's left projection).",
        "A dependent record type is a set of fields (or- dered pairs) consisting of a label ` followed by T as above.",
        "The set of record types is defined by: 1.",
        "[], that is the empty set or Rec, is a record type.",
        "r : Rec just in case r is a record.",
        "2.",
        "If T 1 is a record type, ` is a label not occurring in T 1 , and T 2 is a type, then T 1 ?",
        "{?`, T 2 ?}",
        "is a record type.",
        "r : T 1 ?",
        "{?`, T 2 ?}",
        "just in case r : T 1 , r.` is defined (` occurs as a label in r) and r.` : T 2 .",
        "3.",
        "If T is a record type, ` is a label not occuring in T , T is a dependent type requiring n arguments, and ?pi 1 , .",
        ".",
        ".",
        ", pi n ?",
        "is an n-place sequence of paths in T , 4 then T ?",
        "{?`, ?T , ?pi 1 , .",
        ".",
        ".",
        ", pi n ???}",
        "is a record type.",
        "r : T ?",
        "{?`, ?T , ?pi 1 , .",
        ".",
        ".",
        ", pi n ???}",
        "just in case r : T , r.` is defined and r.` : T (r.pi 1 , .",
        ".",
        ".",
        ", r.pi n ).",
        "The probability that an object r is of a record type T is given by the following clauses: 1. p(r : Rec) = 1 if r is a record, 0 otherwise 2. p(r : T 1 ?",
        "{?`, T 2 ?})",
        "= ?",
        "p (r : T 1 , r.` : T 2 ) 3.",
        "If T : (T 1 ?",
        "(.",
        ".",
        ".",
        "?",
        "(T n ?",
        "Type) .",
        ".",
        ".",
        ")), then p(r : T ?",
        "{?`, ?T , ?pi 1 , .",
        ".",
        ".",
        ", pi n ???})",
        "= ?",
        "p (r : T, r.` : T (r.pi 1 , .",
        ".",
        ".",
        ", r.pi n ) | r.pi 1 : T 1 , .",
        ".",
        ".",
        ", r.pi n : T n ) 4 In the full version of TTR we also allow absolute paths which point to particular records, but we will not include them here.",
        "3 Compositional Semantics Montague (1974) determines the denotation of a complex expression by applying a function to an intensional argument (as in [[ NP ]]([[ ?",
        "VP ]])).",
        "We employ a variant of this general strategy by applying a probabilistic evaluation function [[ ? ]]",
        "p to a categorical (non-probabilistic) semantic value.",
        "For semantic categories that are interpreted as functions, [[ ? ]]",
        "p yields functions from categorical values to probabilities.",
        "For sentences it produces probability values.",
        "The probabilistic evaluation function [[ ? ]]",
        "p produces a probabilistic interpretation based on a classical compositional semantics.",
        "For sentences it will return the probability that the sentence is true.",
        "For categories that are interpreted as functions it will return functions from (categorical) interpretations to probabilities.",
        "We are not proposing strict compositionality in terms of probabilities.",
        "Probabilities are like truth-values (or rather, truth-values are the limit cases of probabilities).",
        "We would not expect to be able to compute the probability associated with a complex constituent on the basis of the probabilities associated with its immediate constituents, any more than we would expect to be able to compute a categorical interpretation entirely in terms of truth-functions and extensions.",
        "However, the simultaneous computation of categorical and probabilistic interpretations provides us with a compositional semantic system that is closely related to the simultaneous computation of intensions and extensions in classical Montague semantics.",
        "The following definition of [[ ? ]]",
        "p for a fragment of English is specified on the basis of our probabilistic type system and a non-probabilistic interpretation function [[ ?",
        "]], which we do not give in this version of the paper.",
        "(It's definition is given by removing the probability p from the definition below.)",
        "[[ [ S S 1 and S 2 ] ]] p = p( [ e 1 :[[ S 1 ]] e 2 :[[ S 2 ]] ] ) [[ [ S S 1 or S 2 ] ]] p = p( [ e:[[ S 1 ]]?",
        "[[ S 2 ]] ] ) [[ [ S Neg S] ]] p = [[ Neg ]] p ([[ S ]]) [[ [ S NP VP] ]] p = [[ NP ]] p ([[ VP ]]) [[ [ NP Det N] ]] p = [[ Det ]] p ([[ N ]]) [[ [ NP N prop ] ]] p = [[ N prop ]] p [[ [ VP V t NP] ]] p = [[ V t ]] p ([[ NP ]]) [[ [ VP V i ] ]] p = [[ V i ]] p [[ [ Neg ?it's not true that?]",
        "]] p = ?T :RecType(p( [ e:?T ] )) [[ [ Det ?some?]",
        "]] p = ?Q:Ppty(?P :Ppty(p( [ e:some(Q, P ) ] ))) [[ [ Det ?every?]",
        "]] p = ?Q:Ppty(?P :Ppty(p( [ e:every(Q, P ) ] ))) [[ [ Det ?most?]",
        "]] p = ?Q:Ppty(?P :Ppty(p( [ e:most(Q, P ) ] ))) 75 [[ [ N ?boy?]",
        "]] p = ?r: [ x:Ind ] (p( [ e:boy(r.x) ] )) [[ [ N ?girl?]",
        "]] p = ?r: [ x:Ind ] (p( [ e:girl(r.x) ] )) [[ [ Adj ?green?]",
        "]] p = ?P :Ppty(?r: [ x:Ind ] (p(( [ e:green(r.x,P ) ] ))))) [[ [ Adj ?imaginary?]",
        "]] p = ?P :Ppty(?r: [ x:Ind ] (p(( [ e:imaginary(r.x,P ) ] ))))) 5 [[ [ N prop ?Kim?]",
        "]] p = ?P :Ppty(p(P ( [ x=kim ] ))) [[ [ N prop ?Sandy?]",
        "]] p = ?P :Ppty(p(P ( [ x=sandy ] ))) [[ [ V t ?knows?]",
        "]] p = ?P:Quant(?r 1 : [ x:Ind ] (p(P(?r 2 :( [ e:know(r 1 .x,r 2 .x) ] ))))) [[ [ V t ?sees?]",
        "]] p = ?P:Quant(?r 1 : [ x:Ind ] (p(P(?r 2 :( [ e:see(r 1 .x,r 2 .x) ] ))))) [[ [ V i ?smiles?]",
        "]] p = ?r: [ x:Ind ] (p( [ e:smile(r.x) ] )) [[ [ V i ?laughs?]",
        "]] p = ?r: [ x:Ind ] (p( [ e:laugh(r.x) ] )) A probability distribution d for this fragment, based on a set of situations S, is such that: p d (a : Ind) = 1 if a is kim or sandy 6 p d (s : T ) ?",
        "[0, 1] if s ?",
        "S and T is a ptype p d (s : T ) = 0 if s 6?",
        "S and T is a ptype 7 p d (a : [ ?",
        "P ]) = p d (P ( [ x=a ] )) p d (some(P,Q)) = p d ([ ?",
        "P ] ?",
        "[ ?",
        "Q]) p d (every(P,Q)) = p d ([ ?",
        "P ]?",
        "[ ?",
        "Q]) p d (most(P,Q)) = min(1, p d ([ ?",
        "P ]?",
        "[ ?",
        "Q] ?",
        "most p d ([ ?",
        "P ]) ) The probability that an event e is of the type in which the relation some holds of the properties P andQ is the probability that e is of the conjunctive type P ?Q.",
        "The probability that e is of the every type for P and Q is the likelihood that it instantiates the functional type P ?",
        "Q.",
        "As we have defined the probabilities associated with functional types in terms of universal quantification (an unbounded conjunction of the pairings between the elements of the domain P of the function and its range Q), this definition sustains the desired reading of every.",
        "The likelihood that e is of the type most for P and Q is the likelihood that e is of type P ?Q, factored by the product of the contextually determined parameter ?",
        "most and the likelihood that e is of type P , where this fraction is less than 1, and 1 otherwise.",
        "Consider a simple example.",
        "[[ [ S [ NP [ N prop Kim]] [ VP [ V i smiles]]] ]] p = ?P :Ppty(p(P ( [ x=kim ] )))(?r: [ x:Ind ] ( [ e:smile(r.x) ] )) = p(?r: [ x:Ind ] ( [ e:smile(r.x) ] )( [ x=kim ] )) = p( [ e:smile(kim) ] ) 5 Notice that we characterize adjectival modifiers as relations between records of individuals and properties.",
        "We can then invoke subtyping to capture the distinction between intersective and non-intersective modifier relations.",
        "6 This seems an intuitive assumption, though not a necessary one.",
        "7 Again this seems an intuitive, though not a necessary assumption.",
        "Suppose that p d (s 1 :smile(kim)) = .7, p d (s 2 :smile(kim)) = .3, p d (s 3 :smile(kim)) = .4, and there are no other situations s i such that p d (s i :smile(kim)) > 0.",
        "Furthermore, let us assume that these probabilities are independent of each other, that is, p d (s 3 :smile(kim)) = p d (s 3 :smile(kim) | s 1 :smile(kim), s 2 :smile(kim)) and so on.",
        "Then p d (smile(kim))= ?",
        "p d (s 1 : smile(kim), s 2 : smile(kim), s 3 : smile(kim)) = ?",
        "p d (s 1 : smile(kim), s 2 : smile(kim)) + .4 ?",
        ".4 ?",
        "p d (s 1 : smile(kim), s 2 : smile(kim)) = (.7 + .3?",
        ".7?",
        ".3) + .4?",
        ".4(.7 + .3?",
        ".7?",
        ".3) = .874 This means that p d ( [ e:smile(kim) ] ) = .874.",
        "Hence [[ [ S [ NP [ N prop Kim]] [ VP [ V i smiles]]] ]] p d = .874 (where [[ ? ]]",
        "p d is the result of computing [[ ? ]]",
        "p with respect to the probability distribution d).",
        "Just as for categorical semantics, we can construct type theoretic objects corresponding to probabilistic judgements.",
        "We call these probabilistic Austinian propositions.",
        "These are records of type?",
        "?",
        "sit : Sit sit-type : Type prob : [0,1] ?",
        "?",
        "where [0,1] is used to represent the type of real numbers between 0 and 1.",
        "They assert that the probability that a situation s is of type Type is the value of prob.",
        "The definition of [[ ? ]]",
        "p specifies a compositional procedure for generating an Austinian proposition (record) of this type from the meanings of the syntactic constituents of a sentence.",
        "4 An Outline of Semantic Learning We outline a schematic theory of semantic learning on which agents acquire classifiers that form the basis for our probabilistic type system.",
        "For simplicity and ease of presentation we take these to be Naive Bayes classifiers, which an agent acquires from observation.",
        "In future developments of this theory we will seek to extend the approach to Bayesian networks (Pearl, 1990).",
        "We assume that agents keep records of observed situations and their types, modelled as probabilistic Austinian propositions.",
        "For example, an observation of a man running might yield the following Austinian proposition for some a:Ind, s 1 :man(a), s 2 :run(a): 76 ??",
        "?",
        "?",
        "?",
        "?",
        "?",
        "?",
        "?",
        "sit = ?",
        "?",
        "ref = a c man = s 1 c run = s 2 ?",
        "?",
        "sit-type = ?",
        "?",
        "ref : Ind c man : man(ref) c run : run(ref) ?",
        "?",
        "prob = 0.7 ?",
        "?",
        "?",
        "?",
        "?",
        "?",
        "?",
        "?",
        "?",
        "An agent, A, makes judgements based on a finite string of probabilistic Austinian proposi-tions, J, corresponding to prior judgements held in memory.",
        "For a type, T , J T represents that set of Austinian propositions j such that j.sit-type v T .",
        "If T is a type and J a finite string of probabilistic Austinian propositions, then || T || J represents the sum of all probabilities associated with T in J ( ?",
        "j?J T j.prob).",
        "P(J) is the sum of all probabilities in J ( ?",
        "j?J j.prob).",
        "We use prior J (T ) to represent the prior probability that anything is of type T given J, that is ||T || J P(J) if P(J) > 0, and 0 otherwise.",
        "p A,J (s : T ) denotes the probability that agent A assigns with respect to prior judgements J to s being of type T .",
        "Similarly, p A,J (s : T 1 | s : T 2 ) is the probability that agent A assigns with respect to prior judgements J to s being of type T 1 , given that A judges s to be of type T 2 .",
        "When an agent A encounters a new situation s and considers whether it is of type T , he/she uses probabilistic reasoning to determine the value of p A,J (s : T ).",
        "A uses conditional probabilities to calculate this value, where A computes these conditional probabilities with the equation p A,J (s : T 1 | s : T 2 ) = ||T 1 ?T 2 || J ||T 2 || J , if || T 2 || J 6= 0.",
        "Otherwise, p A,J (s : T 1 | s : T 2 ) = 0.",
        "This is our type theoretic variant of the standard Bayesian formula for conditional probabili-ties: p(A | B) = |A&B| |B| .",
        "But instead of counting categorical instances, we sum the probabilities of judgements.",
        "This is because our ?training data?",
        "is not limited to categorical observations.",
        "Instead it consists of probabilistic observational judgements that situations are of particular types.",
        "8 Assume that we have the following types: T man = [ ref : Ind c man : man(ref) ] and T run = [ ref : Ind c run : run(ref) ] 8 As a reviewer observes, by using an observer's previous judgements for the probability of an event being of a particular type, as the prior for the rule that computes the probability of a new event being of that type, we have, in effect, compressed information that properly belongs in a Bayesian network into our specification of a naive Bayesian classifier.",
        "This is a simplification that we adopt here for ease of exposition.",
        "In future work, we will characterise classifier learning through full Bayesian networks.",
        "Assume also that J T man ?T run has three members, corresponding to judgements by A that a man was running in three observed situations s 1 , s 3 , and s 4 , and that these Austinian propositions have the probabilities 0.6, 0.6. and 0.5 respectively.",
        "Take J T man to have five members corresponding to judgements by A that there was a man in s 1 , .",
        ".",
        ".",
        ", s 5 , and that the Austinian propositions assigning T man to s 1 , .",
        ".",
        ".",
        ", s 5 all have probability 0.7.",
        "Given these assumptions, the conditional probability that A will assign on the basis of J to someone runs, given that he is a man is p A,J (r : T run | r : T man ) = ||T man ?T run || J ||T man || J = 0.6+0.6+0.5 0.7+0.7+0.7+0.7+0.7 = .486 We use conditional probabilities to construct a Naive Bayes classifier.",
        "A classifies a new situation s based on the prior judgements J, and whatever evidence A can acquire about s. This evidence has the form p A,J (s : T e 1 ), .",
        ".",
        "., p A,J (s : T e n ), where T e 1 , .",
        ".",
        ".",
        ", T e n are the evidence types.",
        "The Naive Bayes classifier assumes that the evidence is independent, in that the probability of each piece of evidence is independent of every other piece of evidence.",
        "We first formulate Bayes?",
        "rule of conditional probability.",
        "This rule defines the conditional probability of a conclusion r : T c , given evidence r : T e 1 , r : T e 2 , .",
        ".",
        ".",
        ", r : T e n , in terms of conditional probabilities of the form p(s i : T e i | s i : T c ), 1 ?",
        "i ?",
        "n, and priors for conclusion and evidence: p A,J (r : T c | r : T e 1 , .",
        ".",
        ".",
        ", r : T e n ) = prior J (T c ) ||T e 1 ?T c || J ||T c || J ... ||T e n ?T c || J ||T c || J prior J (T e 1 )...prior J (T e n ) The conditional probabilities are computed from observations as indicated above.",
        "The rule of conditional probability allows the combination of several pieces of evidence, without requiring previous observation of a situation involving all the evidence types.",
        "We formulate a Naive Bayes classifier as a function from evidence types T e 1 , T e 2 , .",
        ".",
        ".",
        ", T e n (i.e. from a record of type T e 1 ?",
        "T e 2 ?",
        ".",
        ".",
        ".",
        "?",
        "T e n ) to conclusion types T c 1 , T c 2 , .",
        ".",
        ".",
        ", T c m .",
        "The conclusion is a disjunction of one or more T ?",
        "{T c 1 , T c 2 , .",
        ".",
        ".",
        ", T c m }, where m ranges over all possible non-disjunctive conclusions distinguished by the classifier.",
        "This function is specified as follows.",
        "?",
        ": (T e 1 ?",
        ".",
        ".",
        ".",
        "?T e n )?",
        "(T c 1 ?",
        ".",
        ".",
        ".",
        "?T c m ) such that ?",
        "(r) = ( ?",
        "argmax T?",
        "?T c 1 ,...,T c m ?",
        "p A,J (r : T | r : T e 1 , .",
        ".",
        ".",
        ", r : T e n ) The classifier returns the type T which maximises the conditional probability of r : T given 77 the evidence provided by r. The argmax operator here takes a sequence of arguments and a function and yields a sequence containing the arguments which maximise the function (if there are more than one).",
        "The classifier will output a disjunction in case both possibilities have the same probability.",
        "The ?",
        "operator takes a sequence and returns the disjunction of all elements of the sequence.",
        "In addition to computing the conclusion which receives the highest probability given the evi-dence, we also want the posterior probability of the judgement above, i.e. the probability of the judgement in light of the evidence.",
        "We obtain the non-normalised probabilities (p nn A,J ) of the different possible conclusions by factoring in the probabilities of the evidence: p nn A,J (r : ?",
        "(r)) = ?",
        "T?",
        "?",
        "?1 ?",
        "(r) p A,J (r : T | r : T e 1 , .",
        ".",
        ".",
        ", r : T e n )p A,J (r : T e 1 ) .",
        ".",
        ".",
        "p A,J (r : T e n ) where ?",
        "?1 is the inverse of ?",
        ", i.e. a function that takes a disjunction and returns the set of disjuncts.",
        "We then take the probability of r : ?",
        "(r) and normalise over the sum of the probabilities of all the possible conclusions.",
        "This gives us the normalised probability of the judgement resulting from classification p(r : ?",
        "(r)) = p nn A,J (r:?",
        "(r)) ?",
        "1?i?m p nn A,J (r:T c i ) .",
        "However, since the probabilities of the evidence are identical for all possible conclusions, we can ignore them and instead compute the normalised probability with the following equation (where m ranges over all possible non-disjunctive conclusions distinguished by the classifier, as above).",
        "p A,J (r : ?",
        "(r)) = ?",
        "T?",
        "?",
        "?1 ?",
        "(r) p A,J (r:T |r:T e 1 ,...,r:T e n ) ?",
        "1?i?m p A,J (r:T c i |r:T e 1 ,...,r:T e n ) The result of classification can be represented as an Austinian proposition ?",
        "?",
        "sit = s sit-type = ?",
        "(s) prob = p A,J (s : ?",
        "(s)) ?",
        "?",
        "which A adds to J as a result of observing and classifying s, and is thus made available for subsequent probabilistic reasoning.",
        "5 Conclusions and Future Work We have presented a probabilistic version of a rich type theory with records, relying heavily on classical equations for types formed with meet, join, and negation.",
        "This has permitted us to sustain classical equivalences and Boolean negation for complex types within an intensional type theory.",
        "We have replaced the truth of a type judgement with the probability of it being the case, and we have applied this approach to judgements that a situation if of type T .",
        "Our probabilistic formulation of a rich type theory with records provides the basis for a compositional semantics in which functions apply to categorical semantic objects in order to return either functions from categorical interpretations to probabilistic judgements, or, for sentences, to probabilistic Austinian propositions.",
        "One of the interesting ways in which this framework differs from classical model theoretic semantics is that the basic types and type judgements at the foundation of the type system correspond to perceptual judgements concerning objects and events in the world, rather than to entities in a model and set theoretic constructions defined on them.",
        "We have offered a schematic view of semantic learning.",
        "On this account observations of situations in the world support the acquisition of naive Bayesian classifiers from which the basic probabilistic types of our type theoretical semantics are extracted.",
        "Our type theory is, then, the interface between observation-based learning of classifiers for objects and the situations in which they figure on one hand, and the computation of complex semantic values for the expressions of a natural language from these simple probabilistic types and type judgements on the other.",
        "Therefore our general model of interpretation achieves a highly integrated bottom-up treatment of linguistic meaning and perceptually-based cognition that situates meaning in learning how to make observational judgements concerning the likelihood of situations obtaining in the world.",
        "The types of our semantic theory are inten-sional.",
        "They constitute ways of classifying situ-ations, and they cannot be reduced to set of situations.",
        "The theory achieves fine-grained intension-ality through a rich and articulated type system, where the foundation of this system is anchored in perceptual observation.",
        "The meanings of expressions are acquired on the basis of speakers?",
        "experience in the application of classifiers to objects and events that they encounter.",
        "Meanings are dynamic and updated in light of subsequent experience.",
        "78 Probability is distributed over alternative situation types.",
        "Possible worlds, construed as maximal consistent sets of propositions (ultrafilters in a proof theoretic lattice of propositions) play no role in this framework.",
        "Bayesian reasoning from observation provides the incremental basis for learning and refining predicative types.",
        "These types feed the combinatorial semantic procedures for interpreting the sentences of a natural language.",
        "In future work we will explore implementations of our learning theory in order to study the viability of our probabilistic type theory as an interface between perceptual judgement and compositional semantics.",
        "We hope to show that, in addition to its cognitive and theoretical interest, our proposed framework will yield results in robotic language learning, and dialogue modelling.",
        "Acknowledgments We are grateful to two anonymous reviewers for very helpful comments on an earlier draft of this paper.",
        "We also thank Alex Clark, Jekaterina Denissova, Raquel Fern?andez, Jonathan Ginzburg, Noah Goodman, Dan Lassiter, Michiel van Lam-balgen, Poppy Mankowitz, Aarne Ranta, and Peter Sutton for useful discussion of ideas presented in this paper.",
        "Shalom Lappin's participation in the research reported here was funded by grant ES/J022969/1 from the Economic and Social Research Council of the UK, and a grant from the Wenner-Gren Foundations.",
        "We also gratefully acknowledge the support of Vetenskapsr?adet, project 2009-1569, Semantic analysis of interaction and coordination in dialogue (SAICD); the Department of Philosophy, Linguistics, and Theory of Science; and the Centre for Language Technology at the University of Gothenburg.",
        "References"
      ]
    }
  ]
}
