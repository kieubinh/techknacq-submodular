{
  "info": {
    "authors": [
      "Denis M. Manelski",
      "Gilbert K. Krulee"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C65-1018",
    "title": "A Heuristic Approach to Natural Language Processing",
    "url": "https://aclweb.org/anthology/C65-1018",
    "year": 1965
  },
  "references": [],
  "sections": [
    {
      "text": [
        "\"1965 International Conference on Computational Linguistics\" A Heuristic Approach to Natural Language Processing Denis M. Manelski and Gilbert K. Krulee .Shell Oil Company Northwestern University 50 West 50th Street Technological Institute New York 20, New York Evanston, Illinois"
      ]
    },
    {
      "heading": "ABSTRACT",
      "text": [
        "This paper is concerned with the design of a processor capable of formalizing English language descriptions of problems in the sentential calculus.",
        "The emphasis is on the design of a system with natural language processing capabilities, but the formal languages specified are oriented to the problem context.",
        "A series of automata are specified to carry out the necessary functions.",
        "The automata identify the premises in the problem strings, specify the appropriate logical connectives among the premises and determine which premises are meaning-equivalent.",
        "The syntax of each automaton is defined and examples are used to illustrate their functioning.",
        "The automata accept statements in the language Ll, the set of English statements of problems in the sentential calculus.",
        "The individual premises p C. Ll are recognized by the syntax r, where r is chosen so that the language L2 recognized by it is a subset of Ll.",
        "Furthermore, the strings in L2 are restricted to the declarative sentences.",
        "Once the premises and their logical connectives have been identified, those that are meaning-equivalent are located in two additional steps.",
        "First the L2 description of the string is mapped into a string in L3.",
        "The L3 language consists of a limited set of canonical forms that ease the problem of establishing meaning equivalence of premises.",
        "Finally, the automaton applies heuristically a sequence of problem-oriented and meaning-preserving transformations in order to establish meaning-equivalence.",
        "Two premises are taken to be meaning-equivalent if one can be deduced from the other.",
        "Otherwise, they are taken to be not meaning-equivalent.",
        "Manelski & Krulee 2 A HEURISTIC APPROACH TO NATURAL"
      ]
    },
    {
      "heading": "LANGUAGE PROCESSING' Introduction",
      "text": [
        "The recent evolution of programming languages has tended to improve communication between man and computer.",
        "The use of mnemonics, automatic storage allocation, English-like operators (such as in COBOL) and problem-oriented languages has greatly facilitated the task of the programmer.",
        "Thus, the solution algorithm for a large class of computational problems can be defined with relative ease in languages such as FORTRAN and ALGOL, specifically designed for these classes of problems.",
        "This paper describes an attempt to further simplify the communication between programmer and computer by defining a system which can produce a formal description from its natural (verbal) input.2 In order to study this approach a specific problem area was chosen, the propositional or statement calculus.",
        "It will be evident that the problem area chosen has influenced the design of the system; nonetheless it should be clear that the linguistic capabilities of the system are general rather than specific to the problem context.",
        "In designing this processor, two major abilities are required.",
        "First, the processor must be able to identify each elementary premise and all logical connectives.",
        "It must also determine which premises are to be taken as equivalent.",
        "The processor is composed of three series coupled automata (see Fig. 1).",
        "The first automaton, Al, accepts as its inputs the language Ll, where Ll is the set of all English language statements of problems in the propositional calculus.",
        "This automaton is concerned with the identification of the premises and logical connectives of a problem.",
        "This is achieved by using a syntax r capable of recognizing strings in L2, where L2 is a subset of Ll.",
        "The syntax CI consists of a hierarchy of syntaxes; a phrase structure syntax ridesigned to recognize a subset of English composed of simple declarative sentences and the set of transformations specified byrT.1 The equivalent premises are identified by the automata A2 and A3.",
        "The automaton A2 maps a premise, identified by Al, into a canonical form specified by the syntax C that defines the language L3.",
        "This step is designed to facilitate the distinction of equivalent premises.",
        "Finally.",
        "A3 applies a sequence of meaning preserving transformations from the set TO = 1T1,T2,..., Tmi on the string(Tr,q; e. L3 such that if: TiTj...Tt ((Tr) =G-s with Tk C TO the two strings are considered meaning equivalent.",
        "Should the system be unable to find a deduction satisfying these conditions or under certain other heuristically chosen criteria the strings are assumed to represent different premises.",
        "In order to test the system described in this paper, problems were drawn from Stoll (1961).",
        "Some will be used later to illustrate the capabilities and inadequacies of the present system.",
        "1 Chomsky's discussion of transformations and the inadequacies of various models for natural languages can be found in the monograph \"Syntactic Structures\".",
        "Each of the automata will be discussed in two ways, first in terms of its syntax.",
        "Finally the information flow for its implementation as a computer program will be outlined.",
        "Characteristics of the Natural Language Processor (Al) The automaton Al, as mentioned in the previous section, consists of two completely different syntactic mechanisms.",
        "The system includes a phrase structure syntax designed to recognize an extremely restricted subset of the English language, simple declarative sentences.",
        "The syntax of the processor also includes a limited set of transformations chosen to enhance the power of the language generated, but also specifically chosen for the problem context.",
        "If we consider the syntax of Al.",
        "r , as consisting of C'1 and V'T we have defined a hierarchy of languages: Ll M L2 a 1111 Here Ll consists of all the legal problem statements; L2 consists of the set of strings recognized byr; and 'pi consists of all the strings recognized by the syntaxill.",
        "Thus, the syntax' of the automaton Al is really composed of two disjoint sets of rewriting rules,141 andtT.",
        "The syntax1^1 is a phrase structure grammar designed to generate or recognize a subset of English composed of simple declarative sentences.",
        "The syntaxi\"T contains a set of transformations designed for the purposes of isolating premises and specifying logical connectives.",
        "This hierarchy can be visualized in Figure 2.",
        "Initially, we shall describe the class of sentences recognized by and then characterize the strings recognized by r. From the following discussion it will be made clear that we are building a rtcocnizer rather than a generator.",
        "The automaton Al will not perform syntactic analysis below the level of the alphabet (i.e., words) of the language.",
        "Thus, the processor would recognize: The bridge was high The bridges was high as the same sentence since the differences are at a level below that specified by its syntax.",
        "The processor consists of an alphabet A, where:",
        "Although the task of the assignment of word classes is that of the linguist, in general, if Xi and Xj are sets comprising A we expect Xi n Xj for i J where Of represents the empty set.",
        "The occurrence of an element of the alphabet in more than one word class is known as homography and is common to the natural languages.",
        "For purposes of derivation, we distinguish between the elements of the alphabet, to be known as the \"terminal\" elements, and the symbols from the syntax such as S, NP, ADJ, etc., which will be referred to as the nonterminals.",
        "The word assignments might be as shown in Table 1. man, boy, house,... D= a, the,...",
        "Although the processor is limited in the size of the available dictionary, for purposes of discussion no limitations will be assumed.",
        "In addition it is necessary to specify the syntax of the recognizer, which uses the rewriting rules of the axiomatic system.",
        "rl in Table 2.",
        "Examining the syntax111, we see that it meets all the requirements of a phrase structure grammar.",
        "Also, Ili generates several classes of strings characterized by the verb type.",
        "Since this classification will be fundamental to the design of A2, we shall give some examples in L2 and later show the mapping of A2.",
        "3) NP NP + PRP 4) PRP -s■ PREP + NP 5) N ADJ + N 6) ADJ Ans + ADJ 7) PADJC ADJC + than + 8) NP-o.",
        "NP + NP 9) VP-1.",
        "VEQ + PREDEQ VTR + PREECR VITR + PADV VFAC + PREDFAC 10) VEQ-i•VMEQ 11) VMEQ-0,VAUX + VMEQ 12) PREDEQ-0.",
        "NP ADJ PRP PADJC 13) VITR-s. VMITR 14) VMITR-oVAUX + VMITR 15) PADV -• $5 ADV",
        "sentence, noun phrase, verb phrase determiner, noun pronoun prepositional phrase preposition adjective verb equational, equational predicate verb transitive, transitive predicate verb intransitive, adverbial phrase verb factitive, factitive predicate main verb, equational verb auxiliary",
        "The syntaxtll identifies four verb types, equational verbs, intransitive verbs, transitive verbs, and factitive verbs with their corresponding predicates.",
        "The following examples show some of the possible sentences:",
        "Equational verb: (i) John is home.",
        "(ii) John is tall.",
        "(iii) John is by the house.",
        "(iv) John is taller than Peter.",
        "A derivation of (ii) in the syntaxill is",
        "(i) The Dodgers win.",
        "(ii) The Dodgers win seldom.",
        "(iii) The Dodgers win money.",
        "(iv) The Dodgers win at home.",
        "The derivation of (i) is",
        "(S(LT(D The)(N Dodgers))(VP(VITR win)(PADVO))) Transitive verb: (i) John loves Mary.",
        "(ii) John loves the winnings from the track.",
        "The derivation for (i) is",
        "(S(NP(N John))(VP(VTR(VMTR loves))(PREDTR(NP(N Mary))))) Factitive verb: (i) John called home.",
        "(ii) John called his friend a fool.",
        "The derivation of (i) is (S(NP(N John))(VP(VFAC(VMFAC called))(PREDFAC(NP(N Mary))))) Several types of sentences will not be recognized byrl.",
        "Some of these could be included by additional productions.",
        "Some additional types of sentences will be recognized whenilT is added to the syntax.",
        "Other sentence forms are not considered necessary within the original problem context.",
        "Let us list some of the sentences in Ll that are outside of the capabilities of recognition Imperative sentences: Go home.",
        "Interrogative sentences: Is John coming home?",
        "Passive sentences: Home is where John should be.",
        "Conditional sentences: If John should come home...",
        "Compound sentences: John will go home and Mary will stay.",
        "Complex sentences: John, should he so desire, will go home.",
        "In order to make the processor Al useful in the problem context, it is necessary to increase the class of strings in L2.",
        "In contrast to the syntax Ira., which uses the rewriting rules on the nonterminals in the deduction string, the transformation set PT is designed to operate on the derivations in pi.",
        "Generally, transformations have",
        "been discussed in terms of generators.",
        "Attention has been focused on increasing the class of strings that a formal language can generate (39).",
        "However, our problem is to useVT in order to simplify the class of strings that P 1 will have to recognize.",
        "Thus, our transformation setrT should decompose the string John will go home and Mary will stay.",
        "into the following simpler strings:",
        "(i) John will go home.",
        "(ii) Mary will stay.",
        "Since we are interested in formalizing the natural language inputs as statements in the sentential calculus, the transformations will also give us information as to the appropriate logical connectives for the premise.",
        "Thus, in the previous example our processor could be expected to define a statement of the form: p g In order to explore the powerful linguistic possibilities of transformations, a limited number were chosen.",
        "We shall now define the transformations and show how the linguistic capabilities of Al have been increased.",
        "The transformation setrT presently contains as its axioms: T.iTNOT, TCOM, TCONDli In order to specify a transformation, we must not only define the structural changes it produces but also the class of strings to which it is applicable.",
        "The transformations, as defined inilT were adapted for Al.",
        "Since we are not interested in generating grammatically Manelski & Krulee 13 correct English sentences, but rather mapping the input strings into a form recognizable toill, it is possible to omit the transformations for tenses because they operate at a level lower than that of the terminals.",
        "By implicationr1 will process strings that are not grammatically correct.",
        "Thus, if Al were presented with the sentence: If it were cold tomorrow,.... the transformation TCOND will give as its output: It were cold tomorrow.",
        "This premise would still be processed although it is grammatically incorrect.",
        "Another difference between the transformations as specified by Chomsky, and those used by Al is in the direction of the mapping.",
        "TherT transformations have L2 as their domain and the kernel strings generated by ‘11 as their range.",
        "This is the inverse of the mappings considered by Chomsky (1957).",
        "TNOT: is defined on strings of the form",
        "(iv) ..+NP+VMEQ4-never-i (v) ..+NP+VAUX+not+VMEQ+ • • • (vi)..+NP+VAUX+never+VMEQ+... (vii) ..+NP+VAUX+not+VITR+...",
        "(x) ..+NP+never+VFAC+ Should a string Clcorrespond.",
        "to one of the above patterns TNOT(0-1) becomes:",
        "(xi) ..+NP+VAUX+VTR+ (xii)..+NP+VTR+... (xiii)..+NP+VAUX+VFAC+... (xiv)..+NP+VAUX+VFAC+ (xv)..+NP+VFAC+...",
        "Examples of some of the cases follow: Manelski & Krulee 15",
        "Crl: John will never hit Mary.",
        "TNOT(a1): John will hit Mary.",
        "cr2: Today is not cold.",
        "TNOTP-2): Today is cold.",
        "CT3: Tomorrow will not be cold.",
        "TNOTP-3): Tomorrow will be cold.",
        "John never suffers.",
        "TNOT(q4): John suffers.",
        "TCOM: operates on strings in the following domain only: (iv)..+Si+then+S2f... (vi) Either +Si+or+S2+... (vii) Therefore+,+Either+S1For+S2+..:.",
        "The range of the function is any string with the following format: S1 S2 Here the information between \"Si\" and \"S2\" is used by the processor only to establish the Boolean connectives for the statements.",
        "Some examples will show the effect of TCOM on strings Tin the domain of the transformation.",
        "Either Sally and Bob are the same age or Sally is older than Bob.",
        "TCOM61): Sally and Bob are the same age.",
        "Sally is older than Bob.",
        "02: The races are fixed or the gambling houses are crooked.",
        "TCOM(T-2): The races are fixed.",
        "The gambling houses are crooked.",
        "TCOND: is defined over strings with the following configuration: ...+,then+S2+.... (ii) ...+,+52+.. • • and has as its range the following forms: ..+S2+... As in the other transformations its application defines the logical connectives for Al.",
        "We can see the effect of TCOND on the following strings: CI: If the Dodgers win, then Los Angeles will celebrate.",
        "TCOND(11): The Dodgers win.",
        "Los Angeles will celebrate.",
        "The definitions of the syntactic elements used in establishing the domain ofliT are given by the phrase-structure grammarrl.",
        "Another convention used in the discussion is to allow a series of dots (....) to refer to any syntactic structure.",
        "It is also implied that the transformations may be concatenated as necessary.",
        "To illustrate their use, we utilize the following examples: Cr: If the Dodgers win, then Los Angeles will celebrate, and 1 if the White Sox win, Chicago will celebrate.",
        "TCOND(T1): The Dodgers win.",
        "Los Angeles will celebrate and if the White Sox win, Chicago will celebrate.",
        "Manelski & Krulee 17 TCOM(TCOND(61)): The Dodgers will win.",
        "Los Angeles will celebrate.",
        "If the White Sox win, Chicago will celebrate.",
        "TCOND(TCOM(TCOND(71))): The Dodgers will win.",
        "Los Angeles will celebrate.",
        "The White Sox win.",
        "Chicago will celebrate.",
        "cr2: If I miss my appointment and start to feel downcast, then I should not go home.",
        "TCOND(472): I miss my appointment and start to feel downcast.",
        "I should not go home.",
        "TCOM(TCOND(Q): I miss my appointment.",
        "Start to feel downcast.",
        "I should not go home.",
        "TNOT(TCOM(TCONOT2)): I miss my appointment.",
        "Start to feel downcast.",
        "I should go home.",
        "In this example the resultant strings are not recognizable by Thus, \"start to feel downcast\" has its subject implied by the preceding string, and could be thought of as \"I start to feel downcast\".",
        "Some of the difficulties caused by the transformations can be overcome by Al.",
        "Manelski & Krulee 18 Description of the Natural Language Processor (A1) In order to design a processor of the type described in the previous section it is necessary to specify the relationship between the recognition rules ri of the phrase structure grammar and the rewriting rules VT of the set of transformations.",
        "Clearly ri and' 11T are interdependent since the input cannot always be analyzed in terms of the syntaxr 1 and because the rewriting rules ofT1T are defined in terms of Perhaps an example illustrates this point more effectively.",
        "Consider the input string: If John went to the store then Mary went home.",
        "This is clearly a case in which we should apply TCOND E: T in order to obtain:",
        "However, the processor cannot find S1 and S2 because they are defined in terms of C11 which cannot determine S1 and S2 since it cannot analyze strings such as \"If John went to the store...\".",
        "This vicious circle has been resolved by determining heuristically when the transformations should be applied.",
        "If the strings resulting from the application of the transformations cannot be analyzed by the system attempts to apply the transformations again.",
        "The general hierarchy of the programs can be found in Figure .3- .",
        "The program DO embodies the essential features of the automaton Al.",
        "A brief description of the various subroutines involved will serve to illustrate the workings of the processor and the difficulties that it might encounter.",
        "The automaton Al can be considered as having two quite distinct functions.",
        "Initially, certain key words are marked in the problem input (giving rise to the hypothesized input string) and later the set of transformations are used in conjunction with the marked words to generate possible premises (to be called \"input strings\").",
        "The necessary information can be more fully explained by considering a program DO designed to implement Al (see Figure 3).",
        "The program DO initially calls the subroutine D15 which performs a left-to-right scan on the problem string.",
        "All elements of the set MTO (where",
        "the last two elements are the symbols \", then\" and \",\") are marked.",
        "After marking, the problem string becomes both the input string (i.s.)",
        "and the hypothesized input string (h.i.s.).",
        "The syntactic analysis of an h.i.s.",
        "is attempted by EO.",
        "Failing to find a satisfactory parsing, control is transferred by D2 to Dl; otherwise control goes to D13.",
        "The subroutine D13 searches for an additional h.i.s.",
        "; on finding one, it deletes the successfully parsed string from the i.s.",
        "and the list of h.i.s.",
        "Should no other h.i.s.",
        "be found, the executive calls D14 which halts the program.",
        "After performing the necessary output functions, D1 scans the h.i.s.",
        "currently being processed.",
        "If any marked words are found, control is passed to D3; otherwise the transfer is to D11.",
        "Dli erases the previous h.i.s.",
        "and replaces them (i.e., all of them) with the i.s.",
        "Should Dl find that some of the words are marked, the processor",
        "attempts to apply the transformations TNOT, TCOND, or TCOM by using the test routines D3, D4 or D5 in transferring control to D6, D7 or D8, respectively.",
        "D3 transfers control to D6 when \"not\" or \"never\" (the underlining is used in this section to indicate the symbols as marked) are in the h.i.s.",
        "; D6 deletes the marked symbol from the h.i.s.",
        "The subroutine D5 is only applied when the h.i.s.",
        "begins with \"if\"; it in turn transfers control to D7 which deletes the first of the marked symbols \"then\", \"therefore\", \"2.\"",
        "or \" then\" that it finds in the h.i.s.",
        "While removing the marking from the corresponding symbol in the i.s.",
        "two new h.i.s.",
        "are created by dividing the list at the location of the marked symbol.",
        "D5 and D8 are similar to D4 and D7; however, division of the h.i.s.",
        "is done on \"and\", \"or\" or with the symbol \"either\" being erased from the beginning of the h.i.s.",
        "if it is present.",
        "The routines D6, D7 and D8 transfer control to D9 which is called to test whether the h.i.s., being processed, begins with a verb; if this condition exists HO attempts to precede it with the first noun or pronoun of the previous h.i.s.",
        "Should it not be possible for the processor to carry out this operation, the program prints out the syntactic analysis it has accomplished and halts.",
        "Both D10 and D9 transfer to EO.",
        "Some examples will clarify the logic of DO.",
        "Let the input string(71 be: T. John and Mary went home.",
        "Manelski & Krulee 22 The branching of the problem would be DO: transfers control to D15.",
        "D15: marks the word \"and\": the h.i.s.",
        "is \"John and Mary went home (the underlining indicates the marked word).",
        "EO: parses \"John and Mary\" went home.",
        "D13: there are no additional h.i.s.",
        "D14: stop.",
        "John went home and.",
        "Mary went to the store.",
        "DO: transfers to D15.",
        "D15: the i.s.",
        "and h.i.s.",
        "become John went home and Mary went to the store.",
        "EO: fails to parse the sentence.",
        "D2: transfers to Dl.",
        "Dl: transfers control to D3.",
        "D3: control parses to D4.",
        "D4: transfers control to D5.",
        "D5: transfers control to D8.",
        "D8: the i.s.",
        "becomes",
        "John went home and Mary went to the store.",
        "while the h.i.s.",
        "become John went home.",
        "Mary went to the store.",
        "D9: after testing the h.i.s.",
        "at the top of the pushdown list (John went home) transfers control to EO.",
        "EO: successfully parses the current h.i.s.",
        "D2: transfers control to D13.",
        "D13: locates the next h.i.s.",
        "EO: successfully parses the h.i.s.",
        "at the top of the pushdown list (Mary went to the store).",
        "D2: transfers the processor to D13.",
        "D13: cannot locate any additional h.i.s.",
        "D14: prints the results of the parsing.",
        "3 If John, Peter and Paul were at the game,... DO: calls D15.",
        "D15: marks the problem string as \"If John)... Peter and Paul were at the games,....'' which is copied as the h.i.s.",
        "EO: fails to find a deduction for the h.i.s.",
        "D2: transfers control to Dl.",
        "Dl: transfers control to D3.",
        "D3: transfers control to D4.",
        "D4: transfers control to D7.",
        "D7: the marked words have the structure required for TCOND and changes the i.s.",
        "to \"If John, Peter and Paul were at the game2....\" and the h.i.s.",
        "become \"John\" \"Peter and.",
        "Paul were at the gamei....\" D9: the h.i.s.",
        "does not begin with a verb.",
        "Manelski & Krulee 24 EO: fails to find a parsing.",
        "D2: transfers control to Dl.",
        "Dl: the h.i.s.",
        "\"John\" has no marked words.",
        "D11: the previous i.s.",
        "becomes the h.i.s."
      ]
    },
    {
      "heading": "\"If John, Peter and Paul were at the game..\"",
      "text": [
        "EO: fails to find a parsing.",
        "D2: transfers control to D3.",
        "D3: calls subroutine D4.",
        "D4: finds the marked \"If\" and \"2.\"",
        "calling for TCOND.",
        "D7: the h.i.s.",
        "become \"John, Peter\" \"Paul were at the game.L...\" and the i.s.",
        "is marked as \"If John, Peter and Paul were at the gamer...\" D9: the h.i.s.",
        "does not begin with a verb.",
        "EO: a satisfactory parsing cannot be found.",
        "D2: transfers the processor to Dl.",
        "Dl: there are no marked words in the h.i.s.",
        "D11: the h.i.s.",
        "becomes \"If John, Peter and Paul were at the gamez...\" EO: fails to find a parsing.",
        "D2: transfers control to D3.",
        "D3: calls D4.",
        "D4: finds the \"If\" and \"2\" for TCOND.",
        "Manelski & Krulee 25 D7: the new h.i.s.",
        "is formed \"John, Peter and Paul were at the game\" (the remainder of the sentence is a separate h.i.s.).",
        "the i.s.",
        "is changed to \"If John, Peter and Paul were at the game,...\" D9: transfers the processor to EO.",
        "EO: analyzes the first h.i.s.",
        "The program would then analyze the remainder of the sentence.",
        "As indicated in the above examples the parsing of the i.s.",
        "is attempted by subroutine EO, using the syntax specified in Table 2.",
        "The presently implemented version of EO uses a bottom-to-top search in the sense that the parsing tree always begins by analyzing the input string rather than the set of productions.)",
        "In addition, the subroutine is \"predictive\" in utilizing the productions to and establishing the next syntactic element."
      ]
    },
    {
      "heading": "Syntax of the Predicate Forms (A2)",
      "text": [
        "The automaton A2 has as its domain the strings of L2.",
        "However, its syntax is based on Reichenbach's methods of linguistic analysis.",
        "In this section we will define a convenient formalism, the predicate form, and discuss its syntax.",
        "Later we will discuss how the processor discovers the L3 (predicate function) mapping of an L2 string.",
        "In defining the syntax C of A2, it will be shown thati'l was designed in order to simplify",
        "For a review of current parsing algorithms see Bobrow.",
        "Manelski & Krulee 26 the mapping into a predicate form.",
        "As the patterns that can be specified by a predicate form depend on the verb.",
        "Thus, the forms fall into four basic categories; equational, intransitive, transitive and factitive forms.",
        "Factitive Forms - PRED(ARG,ARG,ARG) There is a man.",
        "John is taller than Peter.",
        "The Dodgers win.",
        "The Dodgers win seldom.",
        "Tall John loves Mary.",
        "John saw Peter at the track.",
        "John elected Peter the chairman.",
        "With one exception the verb types used in the above classification follow conventional definitions.",
        "However, following Sledd, factitive verbs are also included.",
        "Factitive verbs are transitive verbs that take an object complement.",
        "The following predicate functions show the L3 mappings of the examples.",
        "In order to avoid using Church's Lambda notation to bind the variables, the convention of using upper case letters for the nonterminal elements and following them by the variables in lower case letters, is utilized to fully define the predicate function.",
        "Manelski & Krulee 27",
        "(i) PRED is home (ARG John) (ii) FRED is tall (ARG John) (iii) PRED is a man (ARGO (iv) PRED is taller than (ARG John, ARG Peter) (v) PRED win (ARG The Dodgers) (vi) PRED win seldom (ARG The Dodgers) (vii) PRED loves (ARG Tall John, ARG Mary) (viii) PRED saw at the track (ARG John, ARG Peter) (ix) PRED elected (ARG John, ARG Peter, ARG the chairman) One special characteristic of the mapping should be noted.",
        "It is not necessary that elements be contiguous for them to be bound to the same variable.",
        "Thus, the verb \"saw\" and the preposition \"at the track\" are not contiguous in the string yet appear so in the function.",
        "This characteristic of the syntax has influenced the design of the processor, as will be made explicit in a later section.",
        "Using the syntax C shown in Table 3, and the same conventions for Syntax C for Predicate Forms 1) PRED-.",
        "PRED (PREDMOD) 2) PREDMOD-P.PREDMOD, PREDMOD 3) ARG ARG (ARGMOD) 4) ARGMOD-,PARGMOD, ARGMOD",
        "binding the variables, results in the following predicate functions for the previous examples: Manelski & Krulee 28",
        "(i)-(iv) identical (v) PRED win (ARG Dodgers (ARGMOD the) (vi) PRED win (PREDMOD seldom) (ARG Dodgers (ARGMOD The) (vii) PRED loves (ARG John (ARGMOD Tall), Mary) (viii) PRED saw (PREDMOD at the track)(ARG John, ARG Peter) (ix) PRED elected (ARG John, ARG Peter, ARG chairman (ARGMOD the))",
        "The mapping from L2 to L3 has not been formalized by the syntax C. However, this syntax is implicit in the processor and will be described in the same section.",
        "Description of the Canonical Form Processor (A2) The predicate forms have been designed to mechanize efficiently the problems of pattern recognition and of equivalence of strings by providing a limited number of canonical forms or patterns to describe a large number of natural language strings.",
        "The syntax implicit in the processor for canonical reduction is quite simple as is shown in Table 4.",
        "It should be noted that the mapping presupposes a description in L2.",
        "Another implication is the necessity to order the arguments.",
        "The ordering of arguments is not made explicit by the rewriting rules given; however, the ordering is implicit in the processor.",
        "The rule followed in ordering arguments is simply defining each one as it is found in a left to right scan of the L2 description.",
        "2) DIP ARG 3) VMEQ, PRED 4) VMITR --s•PRED 5) VIER-4.",
        "PRED 6) VMEQ + ADJC PRED 7) VFAC--).PRED 8) ADJ-3•ARGMOD 9) THAN (deleted) 10) PREDEQ-4ARG 11) PADV-0.PREDMOD 12) PRP--, PREDMOD",
        "The flow diagram of FO, designed to behave like the automaton A2, is described in Figure 4.",
        "Although the syntax does not give a complete description of how the L2 to L3 mapping should be carried out, it will become clear in the descriptions of the subroutines.",
        "Fl is essentially a hypothesis generator.",
        "It examines the L2 input and decides on an appropriate canonical form.",
        "Should it find the string L2 to have an equational verb, the possible canonical forms are: PRED() PRED(ARG) PRED(ARG,ARG).",
        "Subroutine Fl searches the string and locates the main verb.",
        "The verb class is noted in order to establish the appropriate forms.",
        "When no verb is located, control is transferred to F10, which notifies the programmer of the difficulty and stops.",
        "Once a verb has been located Fll generates a predicate form.",
        "F12 copies the form as the current prediction.",
        "The next subroutine is F2; it binds the words of the problem string to the form.",
        "Thus, the words of each NP are bound to an ARG in accordance with a left-to-right scan of the problem string.",
        "When a one-to-one correspondence is established between the NPs and the ARGs the processor transfers to F14.",
        "F14 leaves all the names of the ARGs on a pushdown list.",
        "The next subroutine is F13 which tests whether the pushdown list string named by the ARG is empty.",
        "Should the list be empty F6 is the next sub-routine; otherwise it is F4.",
        "F4 tests whether there are any variables beside an N or PN in the ARG named on the pushdown list.",
        "If there are not the processor returns to F13.",
        "When additional words are found F5 rewrites the predicate form as",
        "• F15: Pop up no Yes AR('.",
        "name F6: locate verb and bind F5: modify form and.",
        "bind.",
        "and erases the additional variables from the ARG and binds them to the ARGMOD.",
        "Following the execution of F5 the processor returns to F13.",
        "F6 locates the verb.",
        "For transitive, intransitive, and factitive verbs all the words in VTR, VITR and VFAC are bound to the PRED of the form.",
        "For equational verbs, the processor searches to see if it is followed by an ADJC or a PRP; if it is, the ADJC or a PRP becomes part of the PRED.",
        "F7 searches for a PADV or a PRP on the tree of a PREDTR.",
        "The words named by the PADV or PRP are bound to the PREDMOD.",
        "Subroutine F8 then prints the L3 mapping of the problem string and halts the processor.",
        "The following example illustrates the flow of the program: InputTlE L2 = (S(NP(ADJ Big)(N John)) (VP(VEQ(VMEQ is))(PREDEQ (PADJC(ADJC smarter)(THAN than)(NP(N Paul)))))) Fl: locates the main verb \"is\".",
        "The available predicate",
        "Fll: The form PRED() is generated.",
        "F12: PRED() is the current form.",
        "F2: Since NP \"Big John\" is localized this predicate form is not appropriate.",
        "The executive returns to Fll.",
        "Fll: The form PRED(ARG) is generated.",
        "F2: The NPs are in one-to-one correspondence with the ARGs.",
        "The variables are bound as PRED (ARG Big John, ARG Paul) and the executive transfers to F14.",
        "F14: The names of the ARGs are placed in a pushdown list.",
        "F13: Since the pushdown list is not empty control passes to F4.",
        "F4: The first ARG in the pushdown list names \"Paul\".",
        "There",
        "is no ARGMOD so control passes to F15.",
        "F15: Pops up the ARG naming \"Paul\".",
        "F13: There is still an ARG name on the pushdown list.",
        "F4: The ARG names \"Big John\", so the output becomes PRED(ARG Big John (ARG Mod)), ARG Paul) and then the variables are rearranged as PRED(ARG John (ARGMOD Big)), ARG Paul).",
        "F15: Pops up the last ARG name.",
        "F13: Since the pushdown list is empty the executive program calls F6.",
        "F6: Since L2 has a VEQ the PRED is bound as PRED is (ARG John (ARGMOD Big), ARG Paul) and then a further search is made for an ADJC or PRP.",
        "The AEJC naming \"larger\" is found so the predicate function becomes PRED is larger (ARG John (ARGMOD Big), ARG Paul).",
        "FT: Since a PADV cannot be located and the verb is not transitive (so there can be no PREDTR) the processor calls subroutine F8.",
        "F8: The predicate function is printed and the processor halts."
      ]
    },
    {
      "heading": "Recognition of Equivalent Strings (A3)",
      "text": [
        "Meaning equivalence is determined by A3 which attempts to apply a set of heuristically determined transformations in order to eliminate the differences between the strings qii and The set of transformations TO was chosen on the basis that it is found useful in a large class of problems taken from Stoll.",
        "The set TO does not correctly solve all premise equivalence problems.",
        "Some examples will be given where it is inadequate.",
        "The recognition of meaning equivalence is postponed until the mapping to L3 is complete.",
        "L3 was chosen to determine the pattern classes because the language not only orders the structure of L2, but also shows the dependencies between the elements of the language, and permits us to manipulate easily the L3 representations of al andG7j.",
        "The actual recognition of equivalence is determined by the set of transformations TO.",
        "Definition: The stringsal andG-2,e L3 are said to be \"meaning equivalent\" when we can find: (Ti(Ti...(Tm(Cri))) =G-2 where the Ti, Tj,...Tm belong to the set TO.",
        "Where: TO = TPRN, TINT, TTIME, TSYNJ",
        "The domain and the range of TPRN are the ARGs of the predicate forms.",
        "The transformation replaces the current ARG with the corresponding one of the preceding premise.",
        "A necessary condition for the application of TPRN is that the first ARG be a pronoun in its L2 representation.",
        "For example, let: i: John loves music.",
        "G2: He dressed quickly.",
        "The implied transformation, TIMP, has a domain of the predicate functions with a null argument.",
        "The transformation replaces the missing argument with that of the preceding premise.",
        "For: -: The Dodgers won the pennant.",
        "GI: lost the series with a representation of PRED won (ARG Dodgers (ARGMOD the), ARG Pennant(ARGMOD the)) PRED lost (ARG $, ARG series (ARGMOD the)).",
        "TINT tr.2) results in the predicate function PRED lost (ARG Dodgers, ARG series (ARGMOD the)).",
        "The time transformation, TTIME, has as its domain the predicates.",
        "The range is also the predicates.",
        "This transformation eliminates auxiliary verbs and replaces the main verb with its root.",
        "The main verb is determined by the L2 representation of the string.",
        "An example would be:",
        "The synonym transformation, TSYN, has a domain of the words Wie L2.",
        "Its range is also the words Wie L2.",
        "The transformation is defined by replacing any W by its synonym as defined in the dictionary of the processor.",
        "The effect of TSYN can be seen onGle Ll.",
        "which has an L3 representation PRED is happy (ARG John) after TSYN(71) the predicate function might appear as PEED is glad (ARG John) This approach can certainly lead to difficulties.",
        "Some problems in semantics have been avoided.",
        "A word can take on various meanings depending on the context, as in: The bug crawled along the leaf.",
        "The bug in the program was found.",
        "He likes to bug me.",
        "The word bug takes on a different meaning in each sentence.",
        "The mistakes that transformations can lead to should be evident.",
        "In some contexts the TSYN might be appropriate while in others it is not.",
        "Another type of difficulty that has not been considered in the derivation of meaning equivalent strings is the following: One Manelski & Krulee 37 possible transformation contracts a number of arguments in the L3 representation of a string.",
        "Thus,(Fl, L2.",
        "c1: John hits the ball with the bat.",
        "John bats the ball.",
        "would have their respective representations as follows in L3: PRED hits (ARG John) ARG ball (ARGMOD the), ARG bat (ARGMOD the)) PRED bats (ARG John, ARG ball (ARGMOD the))1 By changing the predicate, a 3 ARG function becomes a 2 ARG function with the same meaning.",
        "By working with the set TO, the great majority of problems in Stoll are amenable to solution.",
        "However, the processor is not capable of doing justice to the human abilities of linguistic resolution.",
        "One noticeable characteristic of utilizing TO as a recognition device is its tendency to err by not recognizing equivalent strings rather than by unjustified recognition.",
        "Although this section defines the scope and effect of TO, it is also necessary to specify under what conditions the automaton attempts to apply one of the transformations, and under what conditions the processor will stop trying to match the strings.",
        "The criteria for applying a member of TO, and the decision to halt, will be made explicit in the next section.",
        "Structure of the Equivalence Recognizer (A3) The flow chart (see Figure 5) of GO was intended to implement A3.",
        "Clearly, meaning equivalence, as defined by GO, can only be understood in light of the problem context.",
        "Thus, in the formalization of the sentential calculus, we shall consider and 2 1: John will go home.",
        "2: John went home.",
        "as meaning equivalent, because in this problem context meaning is time invariant.",
        "Obviously this is not true in conversational English.",
        "The program GO initially calls G1 whose function is to test the number of ARGs in the problem strings.",
        "Failing to find the number of ARGs to be the same, control is passed to G3.",
        "G3 is one of a set of sub-routines, including G13, G17, G14 and G15, designed to notify the programmer that the strings were not found to be meaning equivalent and briefly indicate the reason.",
        "Should the problem strings have the same number of ARGs control is passed to G4 which tests for equality of PREDs.",
        "When this requirement is not met G5 is executed by dropping any VAUX and attempting to find the root of the main verb.",
        "If the existing differences are not eliminated by G5 the executive transfers control to G6.",
        "This sub-routine, like G221 G21 and G20, attempts to eliminate the differences between strings by using a dictionary search.",
        "Subroutine G7 tests the PREDMODs for equality.",
        "When any differences in the PRIMMODs are reconciled the executive program calls G8.",
        "It also tests for identity in the sub-strings.",
        "In this case the matching is of the first ARG of each string, the second ARG of each string, etc...until a",
        "difference is found in the strings.",
        "A difference in the strings leads the processor to execute G20, G10, and G16.",
        "As previously mentioned, G20 searches for synonyms.",
        "G10 attempts to reduce differences by finding permutations of the differing ARGMODs.",
        "Finally, G16 keeps track of the number of differences in the strings (based on the order and symbols on each ARGMOD list).",
        "When all differences are eliminated control is passed to a print routine, G12.",
        "Should the number of differences remain constant on successive executions of the G20, G10 and G16 loop, the processor calls subroutine G15.",
        "If the number of differences is decreasing the loop is repeated.",
        "The following example illustrates the logic of the system: C\" 4 1: PRED is (ARG John(ARGMOD Big tall), ARG home) T2: PRED is (ARG John (ARGMOD Tall large), ARG home) GO: Calls Gl.",
        "Gl: Initializes storage.",
        "G2: BothCri and (j2 have two ARGs so the executive calls G4.",
        "G4: Since both the ARGs have the PRED \"is\" control is transferred to G7.",
        "G7: There are no PREDMODs so the processor continues to G8.",
        "G8: ARGs are checked in order, first Cif and G-2are shown to have the same ARG \"John\", then the second ARGs are both identified as \"home\".",
        "Since no difference exists the processor calls G9.",
        "G9: In the first ARGMOD the difference count is 2 since \"Big tall\" and \"Tall large\" are both different symbols.",
        "No second ARGMOD is located for either(–j1 or 12.",
        "The executive program calls G20.",
        "Manelski & Krulee 41 G20: Attempts to locate \"Tall\" as a synonym for \"big\" and \"large\" as a synonym for \"tall\", and fails in both cases.",
        "G10: Notes that the difference count can be decreased by rearranging the ARGMODs as \"Big tall\" and \"Large tall\".",
        "G16: Since the number of differences has decreased from 2 to 1 the executive returns to G20.",
        "G20: This time the synonym \"Large\" is located for \"Big\" (assuming that the synonym is stored in the dictionary DO).",
        "G10: Since no differences are located by G10 it cannot perform any permutations.",
        "G16: The differences between the ARGMODs of Ti and c2 have been eliminated so a transfer is made to G12.",
        "G12: The print out \"PREMS EcUIV\" is followed by the fact that the transformation TGYN was necessary on °Big\" and TPERM on Tall large\".",
        "Manelski & Krulee 42 Summary This completes our description of a processing system for problems in the statement calculus.",
        "The system accepts problems as they are normally written in English and attempts to produce a formalized equivalent as its output.",
        "It makes uses of a series of automata, the first of which attempts to identify the elementary premises and the logical connectives.",
        "Two additional automata are used in order to compare premises and to determine whether or not they should be identified as equivalent.",
        "As a first step, each premise is mapped into a canonical form which simplifies the identification of equivalent premises.",
        "In the second step, pairs of premises are compared.",
        "This automata makes use of a number of meaning-preserving transformations.",
        "In a sense, two premises are equivalent if one can be derived from the other with the aid of these transformations.",
        "Otherwise, the premises ire evaluated as not equivalent.",
        "Although this processor is limited to a particular class of problems, it was designed with two purposes in mind: as an attempt to simplify the problems of communications between programmer and computer and to clarify those processes by means of which meaning is extracted from natural language.",
        "Manelski & Krulee"
      ]
    },
    {
      "heading": "GLOSSARY OF ABBREVIATIONS",
      "text": []
    },
    {
      "heading": "REFERENCES",
      "text": []
    }
  ]
}
