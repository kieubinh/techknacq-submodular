{
  "info": {
    "authors": [
      "Stanley Peters"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C69-4501",
    "title": "The Use of Context-Sensitive Rules in Immediate Constituent Analysis",
    "url": "https://aclweb.org/anthology/C69-4501",
    "year": 1969
  },
  "references": [],
  "sections": [
    {
      "heading": "1. Introduction",
      "text": [
        "When a language is analyzed in accordance with a phrase structure grammar, it is customary to regard a terminal string x as grammatical according to a grammar G if one can start from the initial string of the grammar and apply the rules of G , successively rewriting strings until x is obtained.",
        "With the resulting derivation of a generated string x, a structural description of x is associated consisting of a labeled bracketing which indicates the nonterminal symbol(s) rewritten to obtain substrings of x.",
        "When a phrase structure grammar contains only context-free rules, each generated string can be analyzed and its structural descriptions computed with considerable efficiency.",
        "In the event that some rules are context-sensitive, however, no general analysis procedure of comparable efficiency is known.",
        "In this paper I discuss a means for allowing the use of context-sensitive rules in the description of context-free languages to the end of providing greater economy of description and analysis.",
        "I will show that if phrase structure grammars are allowed to define languages in a different way than is usual, then certain context-free languages can be analyzed more quickly, using less storage than under the standard interpretation, although no noncontext-free languages can be so analyzed.",
        "Furthermore, the new way in which a grammar defines a language seems to be a more adequate reconstruction of the use to which context-sensitive rules were put in immediate constituent analysis.",
        "Assume we are given a phrase structure grammar G and a string x and we ask whether it is possible to analyze x in accordance with the rules of G. The answer is in the affirmative if G assigns some labeled bracketing to x as its structural description.",
        "This suggests that we think of x as being provided with an arbitrary well-formed labeled bracketing cp and check whether each phrase of x determined by a matched pair of labeled brackets in is divided into subphrases in accord with the rules of G. For a phrase to satisfy a rule R of G, the matched pair of brackets determining that phrase must enclose the particular sequence of phrases and members of G's terminal vocabulary that E. says the phrase may imediately contain.",
        "Furthermore, if R is context-sensitive with context et/....cs – 0,... , then immediately to the left",
        "( right) in x of the phrase in question must be a sequence y‘...y ( z .",
        ".",
        ".",
        "z ) of strings such that (a) y =a.",
        "(z = B) if ct (0) is in –1 –i –j –j –j the terminal vocabulary and (b) y (z ) is a phrase of type cc.",
        "(0 ) j– _ _ according to the labeled bracketing cp of x if Ct. (0) is in the nonterminal vocabulary, for 1 < i < m(1 < j < n),.",
        "If some well-3-formed labeled bracketing of x is analyzable by G in this fashion, we can think of it as a structural description assigned to x by G .",
        "If G is context-free, the language associated with it in this rather natural fashion is clearly the same as the language generated by G in the usual fashion and the structural descriptions assigned to strings by G are the same in the two cases.",
        "If G contains rules with nonnull context, however, it is not obvious whether the language associated in the above manner is the same as the language generated.",
        "So that we can investigate this question, let us proceed with precise definitions of the new concepts which have appeared informally."
      ]
    },
    {
      "heading": "2. Definitions",
      "text": [
        "For familiar concepts I will simply refer to definitions in the literature (cf. Peters and Ritchie, 1969b).",
        "Recall that a (context-sensitive) phrase structure grammar is an ordered quadruple , S, R ) such that VT and V are finite, nonempty, disjoint sets (the terminal vocabulary and nonterminal vocabulary, respectively), S is a member of V (the initial symbol) and R is a finite set of rules of the type (1),",
        "(iii) = #w, where $ and w are well-formed labeled bracketings and A E",
        "The language generated by G (written L(G)) and the set of structural descriptions generated by G (written L(G)) are as usual (cf. Peters and Ritchie, 1969b, Definitions in § 2).",
        "A set L of strings is called a context-sensitive language if there is a phrase structure grammar G such that L= L(G).",
        "A phrase structure grammar G is context-free if every rule (1) of G has",
        "(ii) Tr.",
        ".x.",
        ", p E (LUR)*, 1 < i < m, -I. J k",
        "a, if a E VT (i) d(a) = and e, if a E LUR (ii) d(cpS) = D(cp)d(S) for any labeled bracketings cp and S. A labeled bracketing cp is analyzed by G if d(Cp) E VT*, if there is a well-formed labeled bracketing such that cp= L and if every node of q, satisfies some member of R. We say that a string x is parsed by G if there is a labeled bracketing cp such that q is analyzed by G and d(cp) = x.",
        "The set of labeled bracketings analyzed .by G will be written A(G) and the set of strings parsed by G will be written P(G)."
      ]
    },
    {
      "heading": "3. The Languages Parsed by Phrase Structure Grammars",
      "text": [
        "We can think of the labeled bracketings analyzed by a phrase structure grammar G as being strings over a terminal vocabulary which is the union of Us terminal vocabulary and its set of left and right labeled brackets.",
        "We may then ask what type of language A(G) is.",
        "Theorem 1 provides the answer that A(G) is a context-free language and from this Theorem 3.",
        "8 of Peters and Ritchie (1969a) follows immediately as Corollary 1.",
        "We now proceed to state these results.",
        "Theorem 1: If G is a phrase structure grammar, then A(G) -7-is a context-free language.",
        "Proof: Let G = (V , V , S , R) be any phrase structure grammar and let L and R be the corresponding set of left and right labeled brackets.",
        "To prove the theorem, it suffices to describe a pushdown-storage automaton M which accepts A(G) since pushdown-storage automata accept just the context-free languages (Chomsky, 1963, Theorem 6 ).",
        "I will describe the automaton M informally since this will provide more insight into its operation.",
        "Formal construction of M from this description is a straightforward and tedious exercise and is therefore omitted.",
        "where R' is a set of symbols each corresponding to the string resulting from inserting a single \"pointer\" (I) in the left-context portion of a rule (e. g. (3)) or to the string resulting from insertion of a I in any string which is the right-context of a rule of R (e. g. d ...",
        "I ... 13 )-",
        "(3) A – >.• Y (xi • • - a • • • a – Pi • ' '",
        "M contains a finite set of states sufficient to \"remember\" two tables: a rule table and a right-context table.",
        "The rule table plays a dual role; it is used to determine that a node of the input is tentatively indicated as satisfying a rule only if the left-context of that rule is indeed satisfied when the left bracket determining the node is reached in the input and it is used to store an indicator at that point which will allow M to check as the input is read further whether the immediate constituency and the right-context of the node are as required by the rule.",
        "The right-context table is used in checking whether the right-context of a rule tentatively identified as being satisfied by a node does indeed appear immediately to the right of the right bracket determining that node.",
        "For each rule (1) of R., the rule table contains m -4-1 positions and the ith position contains an entry consisting either of the symbol (3) or the symbol (4).",
        "(4) A – > y y I y y – 8 .. $' 1 ,n 1 • -n",
        "- The rule table will be updated as the input is read so that when any position corresponding to any rule (1) of R contains the entry (3), then immediately to the left in the input of the scanned symbol is a string analyzable as a ... a .",
        "Thus if a pointer , appears in the entry of a position immediately to the left of the symbol – (dash), then the left-context of the corresponding -9-rule is satisfied at that point in the input.",
        "it is clear that the rule table can be \"remembered\" in a finite set of states.",
        "For each distinct string hl .",
        "appearing as the right-context of a rule in the right-context table contains n +1 positions the ith one of which can contain either the entry 13 P. • • 13 or 13 ... /3 I.",
        "When",
        "the right bracket determining a node is reached in the input, a position corresponding to the right-context of the rule which was tentatively identified as being satisfied at the node receives a pointer to the left of its leftmost symbol.",
        "As the input is read further, pointers are advanced to the right in this string as each successive portion of the context appears under the scanning head.",
        "This allows M to check whether the tentatively identified rule is indeed satisfied by the node.",
        "\"Remembering\" the right-context table also requires only a finite number of states.",
        "When started in its initial state scanning the leftmost symbol on the input tape with an empty pushdown-store.",
        "M prints S on the store and initializes its tables as follows: for each rule (1) of R a corresponding position of the rule table receives the entry (4) and each position of the right-context table receives an entry with a pointer at its extreme right.",
        "At each successive step of its computation, M performs whichever one of the operations (5).",
        ".. (8) is possible in view of the top symbol on its pushdown-store, the scanned symbol on its input tape and the contents of its tables.",
        "If none of the operations can be performed, M blocks and fails to accept the input.",
        "Since M is nondeterministic, a particular input string is accepted if some computation of M on that input terminates in the accepting state with an empty pushdown-store.",
        "(5) If you see a nonterminal symbol A , on top of the pushdown-store if the scanned input symbol is [A and if some rule table position contains the entry (3) with A to the left of the arrow and a pointer immediately to the left of the dash, then (i) advance the input tape one square, (ii) remove the symbol A from the top of the pushdown-store, (iii) for every rule table entry B – > 81...8 ... IA-v ...v nondeterministically decide whether to - v 1 w - - leave it unchanged or to change it to B – > 8... 8 / j 1 u 1 v v and insert in the pushdown-store the single symbol",
        "right-context table entry 8 • .",
        "I A ... 8 nondeterrninistically 1 .",
        " – k decide whether to leave it unchanged or to change it to 1 .., ' 1,_ I ..t and insert the single symbol 8, ... A I... 8,_ in the pushdown-_t 2'.",
        "` store and (v) insert in the pushdown-store thei+ 2 symbols I 1_1 • - •iln.",
        "IA ■ y , ... .",
        "I (so that y is on top).",
        "_ _ 2 ?-.._ (6) If you see a member aof V on top of the pushdown-store, -11-if the scanned input symbol is a and if every right-context table entry has a pointer either at its extreme right or immediately to the left of an a, then (i) advance the input tape one square, (ii) for every rule table entry (3) change it to A--> y, y Bel .",
        ".",
        "... --8, ... if ; = a or to (4) if al a or•o",
        "in the right-context table change it to 8 ... 8 I and enter 1 k ... a I ... in the appropriate table position and (iv) remove –1 the a from the top of the pushdown-store.",
        "(7) If a right bracket IA is on top of the pushdown-store and if I. is the scanned input symbol, then (1) advance the input tape one",
        "square, (ii) remove the symbol lA from the top of the pushdown-store and (iii) if every right-context table entry has a pointer at its extreme right, then nondeterministically decide whether or not to enter the accepting state.",
        "(8) If you see a member of R' on top of the pushdown-store, then enter it in the appropriate position of the rule table or the right-context table.",
        "Let p be any labeled bracketing in (g).",
        "Since rp is analyzed by G, every node (ill,I�_2, $is) of p satisfies some rule in ± IL, say (1).",
        "By Definition 2, p can be factored into Tr's, a's, I A -12x's.",
        ")A , p's and T's with the appropriate properties.",
        "But",
        "pointer across the entire left-context of (1) since if any a„ is in 1 V, the symbol (3) appears in the pushdown-store just below the"
      ]
    },
    {
      "heading": "N",
      "text": [
        ") determining the node which satisfied this portion of the environ-ai ment and thus will be reentered in the rule table for further advancement of the pointer just after the corresponding )a has been i scanned on the input tape and hence just in time for ai +1 to be spotted, So the pointer in the left-context of (1) will be immediately to the left of the dash when the first symbol of i is scanned.",
        "At – 2 this time the A which can be on top of the pushdown-store can be removed and replaced by y, y 1A 0 • Then as each , is scanned M can proceed ultimately removing the lA from the pushdown-store and entering I in the right-context – 1 – n table.",
        "The pointer can be advanced across thejust as f3.3 across the a.",
        "'s and thus the right-context table will contain no bar to acceptance of q) when the end of the input tape is reached.",
        "For this reason M accepts cp.",
        "For the other direction, let q) be any string which is -13 - accepted by M, it is clear that q) must be well-formed.",
        "Let ($f* ) by a node of 9.",
        "Consider a computation by which –1' 2' # –3 M accepts q) and let (1) be the rule which was utilized by operation (5) when the first symbol of was scanned on the input tape.",
        "From the desceiption of M one can find the it's , at s , [A, 1121 s , ]A es and T1 s of Definition 2 and thus determine that the node satisfies rule (1).",
        "But since (*,, $ ) was any node of q) is analyzed by G, completing the sketch of the proof of the theorem.",
        "Corollaryl: For every phrase structure grammar G, P(G) is a context-free language and conversely.",
        "Proof: Let G be any phrase structure grammar.",
        "By Theorem 1, A(G) is a context-free language.",
        "By Definition 3, P(G) is the image of A(G) under the homomorphism d. The context-free languages are closed under homomorphism (Chomsky, 1963, Theorem 31).",
        "Therefore P(G) is a context-free language.",
        "For the converse, let G by any context-free grammar.",
        "Clearly L(G) QA(G) since any labeled bracketing that can be obtained by rewriting the initial symbol of G is analyzed by G. But A(G) S L(G) also since a top to bottom, left to right derivation of any E A(G) can be obtained by reading off the left labeled brackets of cp.",
        "Thus L(G) = A(G) and",
        "Remark: For any phrase structure grammar G, a pushdown-storage automaton W accepting P(G) can be obtained from the automaton M described in the proof of Theorem 1 by altering operations (5) and (7) so that they apply regardless of what input symbol is scanned and do not move the input tape."
      ]
    },
    {
      "heading": "4. Applications",
      "text": [
        "In a context-free grammar, the only way to express grammatical agreement between phrases which are not immediate constituents of the same phrase is by introducing additional nonterminal symbols and rules into the grammar.",
        "For example, there are good reasons to split an English declarative sentence into a subject noun phrase and a predicate verb phrase.",
        "The noun phrase will contain the subject noun as a constituent and the verb phrase will contain the main verb of the sentence.",
        "Now the noun and verb must agree in number and person and with the constituency described the only way to achieve this effect with context-free rules is by means of rules such as (9).",
        "If we are concerned only with analyzing context-free languages, we can use such rules to parse sentences rather than to generate them.",
        "Straightforward modification of existing context-free analysis -16-computer programs such as that of Earley (1969) will permit them to handle arbitrary phrase structure grammars with the same efficiency they possess for context-free grammars.",
        "Thus for each grammar G, there is a constant k such that Earley's program can G parse an input string of length n in an amount of time no more than k n3.",
        "But depends on the number of rules in G, so using –G– _ \"'IY fewer context-sensitive rules rather than more context-free rules can speed up parsing by a constant factor.",
        "This gain in speed could be of significance in natural language processing situations."
      ]
    }
  ]
}
