{
  "info": {
    "authors": [
      "Aravind K. Joshi"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C69-4701",
    "title": "Properties of Formal Grammars With Mixed Type of Rules and Their Linguistic Relevance",
    "url": "https://aclweb.org/anthology/C69-4701",
    "year": 1969
  },
  "references": [
    "acl-C67-1007"
  ],
  "sections": [
    {
      "heading": "1. Introduction",
      "text": [
        "A study of formal properties of different styles of formal grammars is of great interest because each style (i.e., formal character of rules) is well suited for characterizing certain aspects of natural language structure and is awkward for characterizing certain other aspects.",
        "The awkwardness can be due to either an inherent difficulty in characterizing a certain aspect (e.g., the characterization of the notion of the 'head' of a constituent in a PSG) or an unnecessary complexity in characterizing a certain aspect (e.g., the statements concerning the relational aspects in a PSG) or actually a counterintuitive characterization (e.g., this often happens in a PSG, especially in the context of transformational grammars, because a PSG allows an 'uncontrolled' introduction of new enonterminals').",
        "This naturally suggests a study of formal grammars of mixed types in order to take advantage of different styles.",
        "* Thus we try to see how far we can succeed in setting up a class of grammars which has no more power than necessary and which also can characterize different aspects of natural language structure in a natural way.",
        "The class of grammars studied here and in Joshi (1969) have been motivated by the type of grammar proposed by Harris (1962, 1968).",
        "These grammars also arose out of an attempt to formalize certain aspects of the type of grammar considered by Joshi (1966) where it was used for defining structures for the purpose of defining transformations and ultimately for constructing a transformational decomposition procedure.",
        "First, in Section 2, we will introduce a new style of formal grammars called String Adjunct Grammars (AG).",
        "The only purpose of Section 2 is to state some of the basic concepts and results concerning AG's (including a brief discussion of their linguistic relevance) which are needed for the presentation of the material in Section 3 (for a detailed treatment of AG's, see Joshi, Kosaraju, Yamada (1968)).",
        "In Section 3, we will introduce a class of grammars called Mixed String Adjunct Grammars (MAG) which use two different types of rules - adjunction rules and a special type of rewrite rules.",
        "After studying some properties of MAG's we introduce Generation Schemes Gs = (G, p).",
        "A Gs maps strings in the language, L(G), corresponding to an MAG, G, into strings in the language, L(G'), corresponding to another MAG, G'.",
        "2.",
        "String Adjunct Grammars (AG)",
        "Briefly an AG consists of a finite alphabet, a finite set of strings on this alphabet and a finite set of adjunction rules which state how certain adjunct strings are adjoined to certain host strings.",
        "The corresponding language called a String Adjunct Language (AL) is then defined as the set of all strings derived from a certain specified subset of the given set of finite strings.",
        "The rules in an AG have a considerably different formal character as compared to the 'rewrite rule' in a general phrase structure grammar (PSG).",
        "The language hierarchies of AG's and PSG's cut across in many interesting ways."
      ]
    },
    {
      "heading": "2.1 Local String Adjunct Grammar",
      "text": [
        "We will define a local string adjunct grammar (LAG) as follows.",
        "Let A = [al, a2, ..., am) be a finite alphabet.",
        "Let E be a finite set of finite strings on A and let EcC: E be a distinguished set of strings on A.",
        "We will call E the set of basic strings and Ec the set of basic center strings.",
        "We will define a local left adjunction rule, 4ijk as a 3-tuple (ai, aj, Lk) where al.",
        "e E, a e E and Lk is a point of adjunction in ai.",
        "We will call ai as the (basic) host of Aijk and aj as the (basic) adjunct of Lijk• The point of adjunction Lk of tiik refers to the point of adjunction which is to the left of the kth Bymbol of the host ai where we associate with each string ai e E, ai = ai ai an ; ai e A, and j = 1, 2, ..., ni, 2ni 1 2 i j points of adjunction, one to the left and one to the right of each a .",
        "Note that C, the null string.",
        "A local right adjunction rule riik is similarly defined as a 3-tuple aj, rk), ai e E, Knd rk is the point of adjunction of rijk and refers to the aj point of adjunction to the right of the kth symbol in the host ai.",
        "In general, (ai, oi, gk) will denote a local adjunction rule, ulik• If uijk is a localvleff adjunction rule then k = tk and if uijk is a local right adjunction rule then %.",
        "= rk.",
        "Finally, we have the following Definition 2.1.1 A local string adjunct grammar (LAG), G is a 6 tuple, G = (A, E, Ea, Ey Ea, J) where A is the alphabet, E is the set of basic strings, r is the set of basic center strings, Eh is the set of basic host sErings, Ea is the set of basic adjunct strings, and J is a finite set of local adjunction rules.",
        "Eh = fail(ai, aj, §k) 6 .311 Ea = Cajgai, aj, k) e J1, and E = Eck...1E111.)Es.",
        "Further Ec may contain E but E. Eh.",
        "Given J, Eh and E, are completely specified and E = 7.:aUEhl) Ea.",
        "Further the alphabet need not be explicitly stated.",
        "Hence, unless otherwise necessary we will write G as a pair (Ec, J) instead of a 6-tuple as in the definition above.",
        "Example 2.1.1 Let G = (Ea, J) where= rebel, and J = (ul = (abc, pq, ri), 112 = (pq, pq, /2)].",
        "[We will write uijk as just u.",
        "The indexing of u's in J is arbitrary and is merely for convenience.]",
        "Here Ea = fabc), Eh = fabc, pq), Ea = fpql, E = fabc, pq).",
        "Note that abc is a basic center string but pq is not.",
        "ui is a local right adjunction rule and u2 is a local left adjunction rule.",
        "Here A = fa, b, c, p, q)."
      ]
    },
    {
      "heading": "2.2 Local String Adjunct Language (LAL)",
      "text": [
        "The meaning of an adjunction rule, say, u = (ai, /k) is that from ai we can derive a new string by adjoining aj to the left of the kth symbol in ai.",
        "Thus, for example if u = (abc, t, /2) we can derive a string atbc.",
        "However, in order to define the language L(G) corresponding to a given LAG, G,we must first define.",
        "how the rules of adjunction are extended to derived (i.e. non-basic) host strings and adjunct strings.",
        "Here we will give an example to illustrate the main idea and omit the precise definition (see Joshi, Kosaraju, Yamada (1968)).",
        "Example 2.2.1 Consider the LAG, G,in Example 2.1.1.",
        "E = Cabe, pq), Ec = label, J = = (abc, pq, ri), u2 = (pq, pq, /2)).",
        "From -abc by one application of ul we obtain apqbc.",
        "We regard the points of adjunction of apqbc to be the same as abc, i.e., the positions to the left and right of the symbols a, b and c. This apqbc is a derived host and we can apply ul again, obtaining apqpqbc where the newly adjoined pq is immediately to the right of a.",
        "Again, starting with pq, by one application of u2 we obtain ppqq.",
        "Since pq is both a basic host and a basic adjunct (in the same rule, in this example), ppqq is a derived host as well as a derived adjunct and hence it can be used as a host or as an adjunct or both in the rule u2.",
        "This allows us to derive strings pppqqq, ppqpqq, ppqppqqq, etc.",
        "Since all of these are derived from pq they can be used as adjuncts in ul, allowing us to derive apppqq0c, appqpqqbc, appqppqqqbc, etc.",
        "If we use apqbc as a host in ul, we can also derive apppqqqpqbc, appqpqqpqhc, etc.",
        "Thus we can derive, for example, from'the string abc E Ec the strings apppqqqbc,appqpqqbc, apppqqqpqbc, apqpqbc, apqpqpppqqqbc, etc.",
        "All these strings will be included in the language L(G) corresponding to G. Example 2.2.2 Let G = (Ea, J), = fan), J = Cul (ab, ab, r1)).",
        "This grammar generates the language L(G) .,f w / w is a string on A; \"the number of a's in w\" \"the number of b's in w\" and for any -4-initial proper substring of w, the number of a's is greater than the number of b'sl.",
        "This language is context-free and is known to be non-linear (Schiltzenberger (1961)).",
        "1.",
        "In the generation of a string in L(G) we observe that once a string is adjoined to a host then the adjunct string cannot receive any further adjuncts.",
        "In other words a string which is to become an adjunct string must acquire all its adjuncts prior to its being used as an adjunct string.",
        "2.",
        "Let w be a string in L(G) derived from some string ai e Ec.",
        "The generation of w does not begin, however, with the basic center string unless, of course, w is just a basic center string itself or a center string with adjuncts which themselves do not receive any other adjuncts.",
        "We have to start from the \"innermost\" adjunct (adjuncts) and work our way \"inside out\" and finally use the basic string which is to become the center string of w. 3.",
        "During the generation if a host string receives two (or more) adjuncts then we have the two following situations.",
        "If the two adjuncts are adjoined at distinct points of adjunction of the host, then clearly those adjuncts can be adjoined in any order.",
        "However, if the two adjuncts are adjoined at the same point of adjunction of the host the order is significant.",
        "Let ul = (ai, aj, gk) and u2 = (ai, am, gk) be two rules.",
        "Let gk = Al for example.",
        "If ul is used before u2 then we obtain a.a a.. but if u2 is used before ul then we obtain amajai.",
        "J m",
        "In other words, the adjunct adjoined later in the derivation is closer to the point of adjunction in the host (to-which it was adjoined) than the adjunct adjoined earlier in the derivation."
      ]
    },
    {
      "heading": "2.3 'Tree representation for a derivation in LAG",
      "text": [
        "Let G = (Ec, J) be an LAG.",
        "Let the rules in J be arbitrarily numbered ul, u2, ...,un.",
        "The generation tree is constructed as follows.",
        "1) If ut = (ai, aj, gk) is used in the derivation then",
        "we represent this as in Fig. 2.3.1a.",
        "Here we have two labeled nodes a. and a and a directed branch from a. to a. with the label• urgk.",
        "2) Let a host a. receive more than one adjunct, say, a. , a ,...,",
        "in Fig. 2.3.1b.",
        "Now, in view of Remark 2.2.1-3 we impose a right to left ordering on the points of adjunction of a host and thus in effect define an equivalence relation on the set of derivations of a string",
        "in L(G).",
        "The tree representation of a derivation with the above conventions will be called a right to left (r-A) tree representation.",
        "Note that the tree representation of a derivation of a string in L(G) is a rooted tree and the string labeling the root is in Ec.",
        "Fig.",
        "2.3.2 show an r-L tree representation of a derivation of w. We have numbered the nodes for convenience.",
        "Nodes 1, 3, 5, 6, 7, 8, and 9 are terminal nodes.",
        "Node 10 is the root node.",
        "The derived strings corresponding to the nodes of the tree in Fig. 2.3.2 are as follows: 1. t; 2. ptq; 3. pq; 4. ppqptqq; 5. pq; 6. rs; 7. rs; 8. t; 9. t; 10. w = ttabrsppqptqqrspqc."
      ]
    },
    {
      "heading": "2.4",
      "text": [
        "Theorem 2.4.1 Every LAL is a CFL (context free language).",
        "The class of LAL's is properly contained in the class of CFL's.",
        "(L = faabn, n a 1) is not an LAL."
      ]
    },
    {
      "heading": "2.5 Distributed String Adjunct Grammar (DAG) and Language (DAL)",
      "text": [
        "We will generalize the local adjunction rule as follows.",
        "Definition 2.5.1 A distributed adjunction rule, dijk is a 3 tuple, (ai, (aj), gk) where ai e E; aj e E; (aj) denotes a specified",
        "The meaning of dijk is that from the host ai we can derive a string, say, ap, by adjoining the segments of aj, i.e., a4 , aj2 ajn at the points of adjunction gki, gk2, gk of ai, respectively.",
        "That is, we 'distribute' the specified segments of a over ai at the points of adjunction g.k.1, gk2, ..., and gk ; the jth segmentn is adjoined at gk..",
        "The condition on gk prevents permutation of the segments.",
        ".",
        "j",
        "The language L(G) corresponding to a given DAG, G, can be defined by generalizing the definition in Section 2.2.",
        "The main idea is that when a derived string is segmented each segment contains all the adjuncts (and adjuncts of adjuncts etc.)",
        "of all the symbols in that segment.",
        "The tree representation in Section 2.3 can also be generalized to DAG's.",
        "Example 3.1.1 Let G = (E6, J) be a DAG where En = (abc}, and J = (111 = (abc, (p) (qr), r1 43), u2 = (pqr, (p) (q) (r), /122.13)).",
        "Here E = {abc, pqr}, and A = (a, b, c, p, q, r).",
        "Note that in u1 and u2 we have the same basic adjunct string pqr but the segmentation of pqr in u1 and u2 is not the same.",
        "Then",
        "Theorem 2.5.1* The class of LAL's is properly contained in the class of DAL's.",
        "Every DAL is a CSL (context sensitive language).",
        "The clasp of DAL's is properly contained in the class of CSL's.",
        "Theorem 2.5.1 There are languages which are inherently ambiguous in the class of CFL's but which are unambiguous in the class of DAL's.",
        "(Example: L = (aibickl j, k a 1; i = j or j = k)"
      ]
    },
    {
      "heading": "2.6 String Adjunct Grammars with Null Symbols (AGN) and Language",
      "text": [
        "(ATIV) We will now introduce a somewhat modified form of AG's (LAG's or DAL's) called string adjuncts grammars with null symbols (AGN).",
        "The modification consists of allowing in the alphabet a very special type of \"non terminal\" symbols called \"null symbols\".",
        "The main idea is to use the null symbols to tag the strings in E. The null sym, * It is possible to generalize the local adjunction rule in the following manner also.",
        "This generalization permits one to adjoin to the host a set of local adjuncts simultaneously, Ji.e.",
        "(ai, ajl, ai2, 04 , gu) where ai E, k = 1, 2, ..., n, and gic is the adjunction an 'vector' as before.",
        "We will call these LAG's with simultaneous (Continued on Page 9).",
        "- 8 - bols have no points of adjunction associated with them and they do not receive any adjuncts.",
        "The null symbols are ulitmately erased (i.e., rewritten as a null string E ).",
        "Definition 2.6.1 An LAGN (or DAGN), G, is a 7-tuple (A, N, E, Es, Eh, Ea, J) where A is a finite alphabet, N is a finite set (possibly empty), of null symbols, E is a finite set of basic strings, Es c E is the set of basic center strings, Eh is the set of basic host strings and Ea is the set of basic adjunct strings,",
        "a.",
        "A n N = 0; b.",
        "If a a E then a a (A UN) (A U N)*; There is no rule in J which adjoins adjuncts to the left or right of a null symbol, i.e., null symbols have no points of adjunction.",
        "Thus for a ai e E the adjunction 'vectors' are the same as those that can be defined for the same ai without the null symbols, i.e., as far as adjunctions are concerned we ignore the null symbols.",
        "We will use Greek symbols for the null symbols, and unless otherwise necessary, we will write an LAGN (or DAGN), G, as just the pair (Ec, J).",
        "Theorem 2.6.1 The class of LAL's C. the class of LALN's and the class of DAL's C the class of DALN's.",
        "(We conjecture, however, that we have \"=\" instead of \" C \").",
        "2.7 An adjunction rule u, if applicable, can be applied arbitrarily many times.",
        "In this sense it is repeatable.",
        "We can also consider nonrepeatable rules, (nr-rule), in the sense that if a rule u = (at, aj, gk) is nonrepeatable then for each occurence of the host ai in a derivation, u can be applied no more than once.",
        "Let nr-AG and nr-AL be the corresponding grammars (i.e. AG's which have at least one nr-rule) and languages.",
        "The class of LAL's C the class of LALN's (L = [a in is an nr-LAL but not an LAL).",
        "2.8 We say that a local adjunction rule is uniform if in a rule u the adjunct aj adjoins to the left (or right) of some symbol age A in the host of u, then a adjoins to the left (or right) of agwherever ag occurs in an string in E. An LAG, G, is uniform if all its rules are uniform.",
        "(*Continued from Page 8.)",
        "adjunction rules (LsAG).",
        "It can be shown that the class of LAL's C the class of LsAL's C the class of DAL's.",
        "This observation is due to Leon Levy.",
        "94",
        "AG's with the condition E E are of special interest.",
        "Strings inEc can be considered as elementary sentences (or sentence forms) in L(G).",
        "If E = Ec then every string in L(G) can be decomposed into a set of elementary sentences (or sentence forms).",
        "Note also that if E = Ec then in the r-2 tree representation of the derivation of string in L(G) every node is either a sentence or a derived sentence.",
        "2.10 In an LAG (or DAG) we do not have nonterminals in the sense of the nonterminal alphabet of a PSG.",
        "We have, however, auxiliary symbols used implicitly such as the gk's corresponding to the points of adjunctions.",
        "But these auxiliary symbols are used purely as position markers and do not have the same interpretation as the nonterminals in a PSG (i.e., the auxiliary symbols gk's do not correspond to phrase types).",
        "If we consider the marking symbol,,,, used in making precise the definition in Section 2.2, (see Joshi, Kosaraju, Yamada (1968)), also as an auxiliary symbol then one can possibly consider 4 (ai e A) as a nonterminal which can be interpreted as a phrase type but with the added interpretation that a phrase type ai has ai as the 'head' (or 'center') of the phrase.",
        "Each sentence in L(G) has also a 'center' namely the center string of w. In an LAGN (or DAGN) the null symbols are, however, like the nonterminals in the PSG although highly restricted.",
        "The null symbols are used to tag basic strings and therefore they are not used as position markers; in fact, they have no positional interpretation.",
        "The null symbols as nonterminals are highly restricted because they are never 'rewritten' (in the sense of a PSG) into any other string except the null string, i.e., the only 'rewrite rule' associated with a null symbol, say a, is a E .",
        "LAGN (or DAGN) can be considered as grammars of a mixed style as we use rules of two different styles - adjunction rules and 'rewrite rules' of a special type.",
        "This is a very simple example of a mixed grammar.",
        "In Section 3 we will be considering some more interesting classes of mixed grammars.",
        "2.11 In the linguistic context the alphabet A in an AG, G, will consist of symbols which denote major dictionary classes (lexical classes) such as N (nouns), t (tense, auxiliaries), A (adjectives), ✓ (verbs), P (prepositions), wh (who, which, whom), R (pronouns),",
        "preterminal symbols.",
        "The basic center strings thus correspond to basic (elementary) sentence forms, e.g., N t V (John came), N t V N (Jim bought books), N t V P N (people rely on John) , etc.",
        "(A subcategorization of V's is implied here and is not explicitly shown).",
        "Basic adjunct strings are basic adjunct forms, e.g., P N (from Philadelphia), A (old), wh N t V (whom John saw), wh t V N (who saw Jim), D (quickly), etc.",
        "Each derived string in L(G) is thus a derived sentence form, e.g., (assuming suitable adjunction rules), N P N t V N (a man from Philadelphia bought books), A N t V (an bld man came), N wh N t V t V D (the man whom Bill saw ran quickly), N wh N wh t V N t V t V D (the books (which) the man who met Jim bought will arrive soon) , etc.",
        "(ignoring articles for simplicity).",
        "In an AG, lexical insertion takes place as each basic string",
        "a sentence, each aij can be 'rewritten' as a set, say, aj, of syntactic features and dictionary items can be inserted immediately.",
        "The verification of selectional restrictions that hold within the domain of a basic string can be immediately carried out as any pair of adjacent symbols of ai are contiguous at this stage.",
        "If the basic strings are properly chosen then most selectional restrictions are brought to bear within the domain of some basic string, and indeed it turns out that basic strings (with reasonable linguistic interpretations) can be set up in this way.",
        "There are some restrictions which hold between a host and an adjunct string; e.g., in N wh N t V t V (the man whom John met arrived), wh N t V is an adjunct of N t V and the N in N t V is really the 'object' of V in wh N t V. Some other examples are: Zeroing in conjoined sentences, e.g., everyday, he runs and swims; he played tennis but she didn't, etc.",
        "Restrictions between successive adjuncts at the same point of adjunction of the host (ordering restrictions) as in I am looking for a book with a reen cover which was lying here somewhere.",
        "Restrictions be ween a os and two or more adjuncts at different points of adjunction of the host as in boys who can swim distrust boys who can't.",
        "All these can be easily verified.",
        "• AG's are well suited for formulating the 'endocentric' properties in the sense that this aspect of a constituent can be explicitly brought out in the structural description.",
        "There are, however, constituents which are not 'endocentric'.",
        "These are 'exocentric' in the sense that we cannot replace them by any word of a characterizing category contained in them such that the constituents can be considered as constituent expansions of the characterizing category; e.g., who will represent us at the meeting in who will represent us - at the meeting is unclear, etc.",
        "AG's are not well suited for formulating the exocentric properties.",
        "These properties are better characterized by the use of a 'nonterminal' and 'rewrite rules' in the sense of a PSG (see Section 3).",
        "Sentence adjuncts (e.g., in general, today) can be handled well in an AG; in particular, that these adjuncts can occupy various sentence positions can be easily characterized in an AG.",
        "This is awkward to characterize in a PSG.",
        "However, the property that these adjuncts are adjuncts of a sentence is better characterized by the use of a nonterminal.",
        "Distributed adjunction rules are required to handle cases such as two and three are even and odd numbers respectively which is a case of an intercalated structure.",
        "Such structures are not too frequent.",
        "However, if one tries to construct AG type grammars as base for transformational grammars then the need for intercalated structures is not so marginal.",
        "This is primarily because one tries to relate each adjunct to an elementary sentence (i.e., one tries to constitute the adjunct and host strings in such a way that the underlying elementary sentence(s) could be reconstructed from them).",
        "Some examples are: the man who came ... (double underline indicates the distributed adjuWoofof the theorem, etc.",
        "(see Hii and Joshi (1967), Joshi 9 , 19 9 , or fur er details).",
        "The kinds of intercalated structures possible in a DAG apparently are adequate for this purpose.",
        "If E Ec then each string w e L(G) has a representation in terms of basic 'sentences' (or basic center strings).",
        "In general, adjuncts are not strings in rc and hence E Ec.",
        "But what seems to be true of a natural language is that one can 'almost' construct an AG, G, (actually, a mixed AG, see Section 3) for which E = Ec and define a set of operations (these consist of permutations, deletions, and additions of constants; these operations can be related to transformations in a given language) for each a e E and for strings derived from a such that we can construct a new AG, G', with basic strings E', Ec' where E' E,' and strings in E' are transformationally derived from strings in E. Strings in L(G') except for morphophonemic operations are the strings (sentences) in the language.",
        "In transformational analysis we go in the reverse direction, i.e., from G' to G and reconstruct the set of basic 'sentences' (together with the derivation in G) underlying a given sentence generated by G'.",
        "(See Joshi (1969) for further results and details.)",
        "In AGN's (i.e., AG's with null symbols) in Section 2.6 we use a very special type of null symbols which are ultimately erased.",
        "* The only rewrite rule associated with a null symbol is a £ where a is a null symbol and E is the null string.",
        "The AGN's are thus a class of mixed grammars as rules of more than one style are used.",
        "It is, however, a rather simple class of mixed grammars."
      ]
    },
    {
      "heading": "3.2 Mixed String_Adjunct Grammar (MAG)",
      "text": [
        "We will now consider a more interesting class of mixed grammars.",
        "The main idea is to allow a single 'nonterminal' (in the sense of a PSG) in an AG and a special type of 'rewrite rules' associated with this nonterminal.",
        "We will, however, call them 'replacement rules'.",
        "The reason for adopting this new terminology will become clear later.",
        "More specifically, we will define a Mixed String Adjunct Grammar (with replacement rules) (MAG), G, as follows.",
        "First, in addition to the 'terminal' alphabet A we will have a 'nonterminal' S. The set of basic strings, E, and the set of basic center strings, Ec, will now be strings on (A U (S)).",
        "Thus a string ai e E may now contain one or more S's in it.",
        "A ai e E which does not contain S will be called an elementary basic string and a ai a E which contains one or more S's will be called a complex basic siring.",
        "The adjunction rules (local or distributed) are defined as before and we adopt the same convention as in the case of the null symbols, i.e., in an adjunction rule if the host is a complex basic string we disregard the S symbols in it as far as points of adjunction are concerned.",
        "Thus the points of adjunction of a string, say, ai = aS bS are the points of adjunction which are to the left and right of a and b.",
        "Further, the S symbols have no points of adjunction.",
        "Of course, if an adjunct string, say, ai is a complex basic string and has a specified segmentation, then §ach symbol S in a must be included in some segment of a .",
        "* Actually, it is possible to define the recursive extension of the adjunction rules such that the null symbol associated with any basic string is erased at the time the string is adjoined to some host string.",
        "The null symbol associated with the center string is then erased at the end.",
        "- 13 - We now define a replacement a rule pia -(often written just as p) as a pair < a12j > where a E E, a is a complex basic 1 string, and aj cEc.",
        "The meaning of a replacement rule p = < ai, ai > is that from ai one can derive a new string by replacing some occurence of S in a. by a..",
        "Thus we have the following Definition 3.2.1 An MAG, G, is a 9-tuple, G = (A, S, E, Ec, Eh, 'Ea, Ea, J, R) where A is the alphabet (terminal), S is a 'nonterminal' symbol (S / A), E is the set of basic strings, re is the set of basic center strings, rh is the set of basic host strings, Ea is the set of basic adjunct strings, Er is the set of basic replacer strings, J is a finite set of adjunction rules (local or distributed), and R is a finite set of replacement rules.",
        "Eh = fuj(ai, aj, k) E J)",
        "is the only 'nonterminal' it need not be explicitly stated also.",
        "Hence, we will write an MAG, G, as a triple (re, J, R) instead of a 9-tuple as in the definition above.",
        "Example 3.2.1 Let G = (Ec, J, R) be an MAG where re = (abc, pq, abSc}, J = [u1 = (abSc, (a)(b)(c), L12223), u2 = (abc, (a)(b)(c), Al2223)1, and R = [p1 = < abSc, abSc >, p2 = <abSc, pq >1."
      ]
    },
    {
      "heading": "3.3 Mixed String Adjunct Language (MAL)",
      "text": [
        ".",
        "We now have two different styles of rules in G, namely, the adjunction rules J and the replacement rules R. If R is empty then we have an AG and we know how the generation proceeds in this case.",
        "In particular, we note the 'inside out' characteristic of the generation.",
        "If R is not empty then we have replacement rules associated with the symbol S. The generation still proceeds in an",
        "'inside out' manner.",
        "In order to define the language corresponding to an MAG, we must state how the rules in J and R are extended to derived strings.",
        "Rather than giving a precise definition, we will illustrate the main idea by the following example.",
        "Example 3.3.1 Consider the MAG, G, in Example 3.2.1.",
        "Starting with the complex basic string abSc and using it as a host in ul and the string abc as an adjunct in ul, we obtain aabbScc.",
        "Using this as a derived host in the replacement rule po, we obtain aabbpqcc.",
        "But this is a string derived from abSb and therefore it can be used as a replacer string in ,p,.",
        "Thus we can obtain aabbaabbpqcccc (see Fig. 3.3.1).",
        "The language L(G) = Li is Li= (anbncnin11 U[aibilla2b112•••aklonkpcilek+ilk-l+•••+11 As far as rules in J are concerned we require 'inside out' generation.",
        "In order to define consistently the recursive extension of rules in J and R together it is necessary that once a replacer string replaces an S no further adjunctions or replacements can be made on it.",
        "Thus before a replacer string is used it must be completely built up (i.e., it must have received all its adjuncts and adjuncts of adjuncts etc., and all occurences of S must have received their replacements).",
        "* This was the reason for calling the rules in R as replacement rules rather than rewrite rules.",
        "Thus the generation begins from either (a) the 'innermost' host - adjunct pair(s) or (b) the 'innermost' complex basic host replacer pair(s) where the replacer is an elementary basic center string, or (c) both (a) and (b).",
        "The reader may amuse himself by working out the language (Lo) corresponding to the MAG in Example 3.2.2.",
        "It is rather complichted to write it down in a parametric form.",
        "* It is assumed that for every complex basic string, say, ai, either there is a rule < ai, aj >where aj is an elementary basic sring",
        "BothLI and 12 are CSL's (Context sensitive languages).",
        "They are both DAL's also.",
        "This can be shown by constructing the equi-valent'DAG's.",
        "Let G1 = (Ec, .7) be a DAG where Ec = (abpqc, pq), and J = (u1 = (abpqc, (ab)(c), r2r5), u2 = (abpqc, (a)(b)(c), Al.42A5)).",
        "Then L(Gi) = L1.",
        "Similarly let G2 = (Ec, J) be a DAG where Ec = [acb, cl, and J = (111 = (acb, (a)(cb), rir3),",
        "We will omit the proof here as it is rather long.",
        "An examination of MAG's in Examples 3.2.1 and 3.2.2 and their corresponding DAG's, Ga and G2 above will give the reader some indication of how the proof can be constructed.",
        "This is an interesting result because it shows that as far as weak generative power is concerned, we can eliminate S, the only 'nonterminal' we have used.",
        "It can also be shown (this is easily seen from G1 and G2 above) that if the MAG, G, satisfies the condition that E = Ec, then the equivalent DAG, G; will not necessarily satisfy the corresponding condition E' = In fact, for some MAG there will be no equivalent DAG satisfying this condition (see Section 3.5.6 for linguistic relevance).",
        "Remarks 3.3.1 1.",
        "In an MAG, G, not every basic string is a string on A (e.g., the complex basic strings).",
        "However, in the tree representation of derivation of a string in L(G), the derived strings at each node are strings on A, just as in the case of an AG.",
        "In fact, if this condition is not satisfied the tree will not correspond to a tree for some string in L(G).",
        "2.",
        "The symbols) S in a complex string, say, ai, will be referred to as a contained S. a. will also be called a container string and the replacer string(s) 'or S will be called contained string(s).",
        "Letai = abSc, aj = dSe, ak = gSh, and aA = pq.",
        "Let ul = abSc, dSe, r1) be an adjunction rule and pl = < abSc, gSh >, p2 = < abSc, pq >, p3 = < dSe, pq >, and p4 = < gSh, pq > be some replacement rules.",
        "Consider the following tree representation of a derivation (Fig.",
        "3.3.2: the superscripts on at are used to distinguish the two distinct occurences of the string pq).",
        "Note that al is contained",
        "'depth' 2) with respect to ai and this is so both in the sense of a PSG and an MAG.",
        "Now al is two levels down where the first level is due to an adjunction &nd the second due to containment, but al is two levels down where both levels are due to containment.",
        "Thus in an NAG the depth of embedding of string can be characterized not only by the number of levels involved but also by stating for each level whether it is due to adjunction or containment.",
        "There is also the possibility of characterizing an arbitrary depth of embedding in terms recurrent patterns of adjunction and/or containment levels."
      ]
    },
    {
      "heading": "3.4 Deformations and Generation Scheme",
      "text": [
        "In this section we will be concerned with the construction of an NAG, G, with E = Ec for an MAG, G°, (for which E' Ec', in general) such that G is related to G' by means of certain operations (see Section 2.11 - last paragraph).",
        "Let A = (Si, g2, ,fol be a finite set of deformations (to be defined later).",
        "Definition 1.4.1 A Generation Scheme, Gs is a pair (G, A) where G is an MAG, G = (Ec, J, R), A is a finite set of deformations, and with each rule u e J and each rule p e R, we associate unique subsets of A, say, and Ap respectively.",
        "Let C be a finite set of constants.",
        "We say that a string a' is a deformed a if every symbol of a' is either a constant (i.e., is in C ) or is a symbol of a or both.",
        "That is, a' is obtained from a gy one or more of the operations of permuting, deleting, or repeating symbols of a or adding one or more symbols from Co.",
        "Definition 3.4.2 Let u = (ai, ai, gk) e J and let Au be the associated subset of deformations.",
        "Then a di c Au maps the rule u = (ai, aj, gk) into a 3-tuple (ai', 91, gk') where ai' = ai, aj' is a deformed aj(the specific choice of operations of permuting, deleting, or repeating symbols of odor adding constants is determined by di), and gk' is an adjunction 'vector' of ai not necessarily - 18 - the same as tk.",
        "We write this as Si(u) = u' where u' = (ai', as', gic1).",
        "* Similarly, a die Ap, p = < ai, as >, maps p into a pair < ai', as' >where ai' = ai and as' is a deformed as (di determines the specific deformation as before).",
        "We write this as di(p) = p', where p' = < ai', a.'",
        ">.",
        "Note that Si deforms as and also specifies a new adjunction 'vector'.",
        "Note also that u and p are rules in the NAG, G. u' and p' are not rules in G. However, they will be later interpreted as rules in another NAG, G'.",
        "Each Si can then be extended to the derived hosts and derived adjuncts in u, and to derived hosts and derived replacers in p in the obvious way (i.e., if a symbol of a is permuted it carries with it its adjuncts, and their adjunct etc.",
        "; if a symbol of ai is deleted then we delete its adjuncts, and their adjuncts etc.",
        "; addition of constants is not affected).",
        "More complicated extensions have to defined however for the more complicated (See Section 3.5.5, and for further details, Joshi (1969).",
        "For a given Generation Scheme, Gs = (G, A), we will define the language corresponding to Gs, L(G), as follows.",
        "We will give here only an informal definition.",
        "We carry out the generation in the NAG, G, as described in Section 3.3, with the following modification.",
        "If during the generation we plan to use a rule u then instead of using u we use the rule u' = cr(u) where e Au.",
        "Similarly, if A we plan to use a replacement rule p then instead of using p we use the rule p' =dm(p) where dm E pp.",
        "The choice of cF4 from Au and 4; fram Ap is nondeterministic.",
        "* This definition is not quite precise as stated.",
        "First, note that ,k' is an adjunction 'vector' and hence its components must satisfy certain conditions (see Section 2.5).",
        "Secondly, if has more than one component then di must also specify the appropriate segmentation of as'.",
        "This definition is also weaker than required.",
        "Morecomplicatedcf.",
        "'s can be defined and are required (see Section 3.5-5).",
        "-19-Note that here we use the word 'language' in the usual sense, i.e., a set of strings on A.",
        "Ultimately, however, we are interested in the corresponding strings of lexical items.",
        "The lexical insertion proceeds in G in the same general manner as in Section 2.11 (paragraph 2), (see also Section 3.5).",
        "In this case the choice of a cr from Au and of ci\"m from 4 may depend on the A lexical entries for ai and ai which are, of course, available at this point in the generation.",
        "The 'language' derived in this way is L(Gs).",
        "The derivations are not in G but in Gs.",
        "We could, of course, allow the generation in G to proceed independently but concurrently with the generation in Gs.",
        "In this case, we would derive a pair of 'corresponding' strings, say w and ws where w e L(G) and ws L(Gs).",
        "Note that Gs is not an NAG; however, we have the following Theorem 3.4.1 For every Generation Scheme, Gs = (G, A) there is an equivalent MAG, G', (i.e. L(G') = L(Gs)), and G' can be effectively found.",
        "The proof is rather involved and we will omit it.",
        "At least for the d's in Definition 3.4.2 one can state the main idea as follows.",
        "* Let G = (Ec, J, R) and G' = (Ec', J', R').",
        "Then 1.",
        "Ec° = EC.",
        "2.",
        "J' obviously contains all the u' = d(u) u e J, as adjunction rules.",
        "But J' also contains some additional rules which are needed for the following reason.",
        "Let a, be an adjunct string in G and let some d'deform a. into as'.",
        "N,w, if a. is also a host string in some adjunction rule, say, u in J then we must add a new adjunction rule(s) in G' which in effect allows one to adjoin the adjunct in u (actually, its deformations under all possible J's) to a.",
        "', with the adjunction 'vector(s)' appropriately specified.",
        "3.",
        "R\"consists of all the p' = 41(p), p e R, as replacement rules.",
        "R' also contains some additional rules which are needed for the same reason as in 2 above.",
        "We can impose the condition E = Ec on the MAG, G. But then G' (equivalent to Gs = (G, A)) need not satisfy a similar condition, i.e., E' need not be equal to E,'.",
        "This is because E' contains, besides strings in EC' (= Ec), the deformed adjuncts and deformed replacer strings.",
        "* The proof extends to some of the more complicated Ps (see Section 3.5.5).",
        "- 20 - From Theorems 3.4.1 and 3.3.1 we then have Corollary 3.4.1 For every Gs = (G, A) there is an equivalent DAG, G\", (i.e., L(Gs) L(G\")) which can be effectively found."
      ]
    },
    {
      "heading": "3.5 Linguistic Relevance",
      "text": [
        "In this section, we will briefly discuss the various results in Sections 3.1 - 3.4 in the linguistic context and provide some justifications and interpretations for these.",
        "3.5.1 As is evident from the discussion in Section 2.11, the main motivation for considering MAG's is to provide suitable representations for certain structures (e.g., that he went home surprised me, I told him to go home, that John will come is certain, I tried to read the book, etc.).",
        "The purpose for considering MAG's with",
        "In Section 2.11 we have seen that many restrictions have as their domain a basic string or a basic string and its adjuncts; and these can be easily stated and, at the time of adjunction, easily verified.",
        "These remarks obviously hold for an MAG as far as adjunctions are concerned.",
        "However, in addition to these, in an MAG there are many restrictions which have as their domain a, complex string and its replacer(s) string (i.eI, a container string and the contained string(s)).",
        "These also can be easily stated and, at the time of replacement, easily verified.",
        "Apart from selectional restrictions, some of these restrictions are: (a) Identity of one of the N's in the container string and one of the N's in the contained string (identity of the 'subject' or 'object' noun in the container string and the 'subject' or 'object' noun of the contained string), e.g., I told John to go home, I promised Bill to purchase books, John deserves promotion, He suffered defeat, I forced him to swim, He is uninspiring as a teacher, I saw the boy being beaten by the policeman, etc.",
        "Actually, since we are considering derivations in an MAG with E = Ec, we should have written these somewhat as follows: I told Johe(Joheshould* go Tiidhome), I'promised Bill I'wouldpurchase books), John°deserves hould* promote John , He' suffered N defeated hint), He' is uninspiring (HO% teach N to N), etc.",
        "( • marks the elements with the sane reference; %: untensed (or tenseless) a).",
        "(b) Certain conditions on replacing a noun by a pronoun, e.g., John' hoped (he * perhaps g. - 21 - will win) but not He hoped (Johrfwill win), etc.",
        "(c) Possible correlations between tenses in the container and contained strings (see examples in (a) above).",
        "Later, in the context of generation in Gs = (G, A) we will discuss some additional restrictions.",
        "These do not affect the 'well-fornedness' (with respect to the satisfaction of restrictions) in G. Thus the strings of lexical items corresponding to strings in L(G) are also 'well-formed'.",
        "3.5.3 We now consider the derivations in Gs = (G, A).",
        "Obviously, the purpose of d's is to obtain the corresponding strings in Gs (i.e., also in G'), e.g., I told John to go hone I told John /John should go home), etc.",
        "Note that for each rule u or p in G, the d's are selected from Au or Ap respectively.",
        "Some examples of restrictions on S's are: (a) The choice of a S from Au (or Ap) may be affected by the lexical entries for the container and contained strings, mostly by the verb (including is A and is N) of the container string, e.g., I tried to drive a car, I tried driving a car, but only I stopped driving a car; That he answered the letters is true, His answering the letters is strange, but not His answering the letters is true, etc.",
        "(b) Choice of a particular preposition in a deformation may depend on the lexical entries for the container and contained (?)",
        "strings, e.g., I know of John's coming, I believe in (my) leaving early, etc.",
        "(see Section 3.5.5 and Joshi (1969) for further details).",
        "Let G = (Ec, J, R) be an MAG (with E = EC) where A = t,",
        "• A); Ec =E= fsi =NtV, 02 =NtVN, a3 =NtVS, a4 =",
        "* A subcategorization of N's, V's, and A's is implicit here and is not shown explicitly in the notation.",
        "-22-and R = f< ai, as >I i = 3, 4, 5, 6, 7; j = 1, 2, ..., 7).",
        "Let Gs = (G, A) be a Generation Scheme where A = (Si) is a set of deformations and the S's are defined as follows.",
        "(Set of Constants, Co = {wh, that, to, 's, !no)",
        "We have not shown explicitly the various subsets of A associated with the rules in J and R in G. But, these can be worked out from the specification of the cc's above.",
        "* Actually, we should use here a distributed adjunction rule to account for the definite article to the left of N in the host.",
        "We leave this out in order not to complicate the example.",
        "-23-An MAG, G', equivalent to G, =(G, p) can now be easily constructed (see the discussion under Theorem 3.4.1).",
        "We will not write G' here as it is too long.",
        "It is easily seen that we can derive in Gs =(G, A) and therefore in G' sentences such as, John wants to go home, I prefer walking, The man who came ordered Jim to shut the door, I promised Bill to tell John that he should visit Fred, Bill's forcing John to resign annoyed him, Painting the doors blue was the custom, My asking him to write a paper caused his leaving the job, etc."
      ]
    },
    {
      "heading": "3.5.5 Some Complex Deformations*",
      "text": [
        "Some examples of deformations more complicated than those in Definition 3.4.2 are as follows: a.",
        "A S may be defined such that it requires the adjunct string, aj, in the rule u = (a., a , g ) to be a derived string.",
        "cf. then refers j k to not only ai but string(s) which may be at most a fixed finite depth (counted in terms of adjunction and containment levels) rela-tivetoa – Mostly depth 1 (and occasionally depth 2) is adequate, a e.g., The man who had the keys finally came -.",
        "The man finally came who had the keys: The man who finally came who had the keys ... b.",
        "A cr maybe defined as above but with the possibility of cf referring to not only a. but a string which is at an arbitrary depth relative to a, where the arbitrariness of the depth is so constrained that itdcan be specified in terms certain recurrent patterns of adjunction and containment levels, e.g., The meeting (which) I selected John to represent us at ..., The people we hope that John told to water the plants ..., etc.",
        "[Although slightly out of place, it might be worth mentioning here that the distinction between adjunction and containment levels also helps in stating certain pronouning restrictions to some extent, e.g., the pronoun is in the contained string and not in the container string: John' thought he'will win but not He'thought John will win; but if we have an adjunction level then we have both:.",
        "People who know Bill like hie, and People who know him'like Bill; if we have an adjunction level and a containment level, we again have both: People who know Bill' want to help him'and People who know him want to help Ball and if we have two successive containment levels, we have John'asked Bill to tell Mary to see hinPbut not He'asked Bill to tell Mary to see John; etc.]",
        "* For further details see Joshi (1969).",
        "-24-c. A S may be defined such that it not only deforms the adjunct string aj but also deforms the host string ai.",
        "Since the host ai can also be deformed by such a d', the precise definition of how generation proceeds in the Generation Scheme, Gs, becomes complicated.",
        "Such &'s can be used to obtain from the same* container string contained string pair,two related sentences such as, e.g., That he came surprised me and it surprised me that he came, etc.",
        "d. Sets of related S's to cover certain zeroings which have as their domain the container and the contained strings, e.g., I promised him to come I promised him that.I would come, etc.",
        "One may also include here zeroing of 'appropriate' verbs, Vanp, e.g., I expect him I expect him to Vapp where Vapp = {come, firrive, etc.1; perhaps also I shall go I promise you that I shall go (Harris (1968: 3.5.6 Fram Theorem 3.3.1 we know that for every NAG there is an equivalent DAG which can be effectively found.",
        "This means that we can eliminate the nonterminal S as far as weak generative capacity is concerned.",
        "Of course, we don't choose to eliminate S, but it is interesing to see the implications of this theorem.",
        "If one examines the proof of this theorem, we notice that in effect for every complex basic string, say, ai = abSc and for every elementary basic string, say,pq, which is a replacer for ail*we set up an adjunction rule (in this case a distributed rule) such as (pq, (ab)(c), A1r2).",
        "Thus we will have to consider I know that in I know that John went home as an adjunct of John went home.",
        "Now (in the spirit of the discussion in Section 3.4) adjuncts are obtained by deforming a string in Ec; also adjuncts have a certain degree of mobility within the host.",
        "This is perhaps the reason why in some cases we come close to realizing this, e.g., (1) I hope that John will win: we can obtain a sentence and a semi-sentence, John will win; I hope so or a sentence and sentence adjunct, John, I hope, will win, (2) That John passed the examination surprised me: John passed the examination; it surprised me, John passed the examination, to my surprise, etc.",
        "* This avoids having two distinct strings in G generating strings which are paraphrases of each other.",
        "If, however, we allow this possibility the structure of Gs can be considerably simplified.",
        "We do not follow this approach but the nature of these simplifications is discussed in Joshi (1969).",
        "In a different context and in a different framework, Keenan (1969) has made a similar comment.",
        "*11.- oo,ei < ab S c Se > S c , e twe rtpinte - - uacy,",
        "In Section 3.4, in G = (G, A) we imposed on G the condition that E = Fem.",
        "Then in G' (equivalent to Gs) every adjunct string is obtained by deforming some string in Ec(= E) in G. However, adjuncts such as, e.g., quite in quite forgot, very in very long, some quantifiers (all, some, etc.",
        "), some occurences of articles, some time and manner adverbials, etc.",
        "pose a problem here.",
        "There are a couple of ways around this problem.",
        "One solution is to consider these adjuncts as primitively adjoined in G (i.e., regard them as a sort of primitive adjuncts in G)*.",
        "G, of course, will no longer quite satisfy the condition E = Ec.",
        "Another more attractive solution (certainly, motivated by some current trends in transformational theory) which will maintain the condition that every basic string is also a basic center string is to construct (1) another MAG, G\", by retaining all strings in Es in G, excluding the primitive adjuncts in G, but adding new complex basic center strings (these will now more and more become infra-sentence forms), and also adding new adjunction and replacement rules, and (2) a new Generation Scheme Gs\" = (G\", A\"), where A\" is a new deformation set, and G\" satisfies the condition E\" = E \", such that Gs\" is equivalent to G. (At this point, we may also remove the tenses, auxiliaries, and prepositions.",
        "Basic strings in G\" will then be strings of N's, V's (including is A and is N) and S's).",
        "Thus we have the alternating sequence of MAG's and Generation Schemes**.",
        "G\": Gs\" = (G\", A\") sa G: G (G, A) and",
        "* Note that there are very strong restrictions on the repeatability of these primitive adjuncts.",
        ": In principle, we could consider arbitrarily many intermediate stages, between the first and the last MAG's.",
        "However, there would not be much point in considering such sequences, unless each intermediate stage has some reasonable linguistic interpretation.",
        " – 26 – where G\" underlies G and G underlies G'.",
        "Further development of these ideas in some detail will be reported in Joshi (1969).",
        "Appendix: Fig.",
        "A.summarizes the hierarchy of certain subclasses of AL's and MAL's in relation to the phrase structure hierarchy.",
        "(The replacement rule in an MAG can be generalized in such a way that all occurences of S in a complex basic string are simultaneously replaced by a specified set of replacer strings.",
        "We call such a grammar an VAG with simultaneous replacement rules, MsAG, and the .corresponding language, MsAL.",
        "It can be shown that MALii MsAL CSL.",
        "An MsAL has the property that the lengths of the strings in it (assuming an ordering in terms of increasing lengths) grow no faster than an exponential.",
        "The whole class of MsAG's as such does not appear to be linguistically relevant.)"
      ]
    }
  ]
}
