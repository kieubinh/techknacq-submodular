{
  "info": {
    "authors": [
      "Eberhard Pause"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C73-1005",
    "title": "A Class of Transformational Recognition Grammars",
    "url": "https://aclweb.org/anthology/C73-1005",
    "year": 1973
  },
  "references": [],
  "sections": [
    {
      "heading": "EBERHARD PAUSE A CLASS OF TRANSFORMATIONAL RECOGNITION GRAMMARS",
      "text": [
        "1.",
        "PETIUCK considers transformational grammars (T-grammars) of a special' form which essentially have the properties described by N. CHOMSKY (1965).",
        "a) The base grammar is context-free.",
        "One recursive element S is distinguished.",
        "The base trees in general have the form or in linear notation"
      ]
    },
    {
      "heading": "SO* Si(...S(4*",
      "text": [
        "Consequently each base tree consists of a finite set of subtrees or kernel trees each of the form S(* Si(...)#) where x is a string over",
        "b) Transformational rules (T-rules) are singulary or binary.",
        "The singulary ones operate on a subtree, called constituent tree, whose initial node has the label S, and whose terminal string contains no sentence boundary symbol 4*.",
        "The binary T-rules work on a constituent tree and the kernel tree (called the matrix tree) which dominates it directly.",
        "c) The transformational rules are linearly ordered and are applied cyclically in this order from bottom to top.",
        "That is, a cycle is completed after the singulary and binary rules have been applied to a constituent tree.",
        "(In the process the sentence boundary symbols of this subtree are removed).",
        "Now Petrick defines a class of T-grammars generating recursive languages by first stating the condition of the \"recoverability of deletions \".",
        "That is, only a terminal node or a subtree which is identical with another subtree that remains in the resulting tree after the application of the T-rule can be deleted.",
        "He states further conditions so that there is an upper bound for the depth of embedding of a base tree underlying a sentence of the grammar.",
        "In his case that means, that a base tree that underlies a sentence of length n can have maximally depth n. A recognition grammar for a T-grammar of this class is constructed by Petrick roughly in the following way: Transformational derivations are generated, and starting with the trees that constitute these derivations he determines context-free rules, so-called \"auxiliary rules reflecting the structure of the derived trees.",
        "By means of these auxiliary rules a given string can be attributed as much structure as is necessary for applying the \" inverse \" T-rules.",
        "If the string is a sentence of the given grammar one can obtain the underlying base tree(s) by this procedure.",
        "2.",
        "The following problems arise in connection with the class of transformational grammars defined by Petrick: a) To my knowledge there is no finite procedure to determine whether a given T-grammar has the defining properties of the class or not, which represents a solution to the problem whether there exists 2 V means the entire vocabulary, E the terminal, (13 the nonterminal vocabulary of the base.",
        "A CLASS OF TRANSFORMATIONAL RECOGNITION GRAMMARS47 in principle some recognition procedure for the grammar.",
        "There also remains the question of whether this problem is recursively solvable at all.",
        "b) In general there is no finite number of auxiliary rules implied by the derivations of a T-grammar of this form.",
        "For that reason Petrick can only construct auxiliary rules for finitely many derivations.",
        "These rules can then be used only for the analysis of sentences whose underlying base trees have maximally depth n (for a given n) whose length is therefore smaller than or equal to n. For sentences containing more than n words a new recognition grammar has to be constructed.",
        "There may also be sentences of length smaller than or equal to n which cannot even be analysed because the depth of their underlying base trees exceeds the specified boundary.",
        "c) The set of trees accepted by the auxiliary rules is larger than the one generated by the original grammar.",
        "As a consequence spurious trees result at the end of the analysis process and these must be discarded by an additional synthesis phase.",
        "These problems suggest that it might be reasonable to look at the following requirements when using a grammar for the recognition of sentences.",
        "It should belong to a (nontrivial) class of grammar having the following properties: a) All generated languages are recursive.",
        "b) It is decidable whether a given grammar belongs to the class or not.",
        "c) There should be a general procedure which costructs for each grammar of this type a practicable recognition grammar.",
        "That is, analysis with such a grammar should be as efficient as possible.",
        "I do not wish to claim that these requirements have all been met for the type of grammar that I worked with.",
        "3 But I want to show now what results I obtained with a different approach to the matter and what difficulties one obviously faces when dealing with transformational recognition.",
        "3.",
        "In what follows I will first of all illustrate a general method by which the set of base trees, given by some arbitrary context-free grammar can be decomposed into a finite set of kernel trees.",
        "This construction serves (in section 4) as a basis for the definition of a class of T grammars that generate recursive languages.",
        "A hierarchy of types of 3 For details see my dissertation (E. PAUSE, 1972)."
      ]
    },
    {
      "heading": "48EBERHARD PAUSE",
      "text": [
        "grammar will be characterized, included in this class, such that for each type membership of a given grammar is decidable.",
        "Section 5 deals with recognition grammars.",
        "The whole matter is discussed with respect to T-grammars of a generalized form: a) Every context-free grammar can serve as base grammar.",
        "b) Transformational rules are unordered.",
        "There is no distinction between singulary and binary rules.4 We may assume that a context-free grammar P .",
        "(V, E, R, S) where V-1 0, the sentence symbol S in (I), is reduced and has a standard form.",
        "6 That is, R contains only rules of the form",
        "(I) SX, -> X (II) A >n > 2, A inD, in {S}, if S is in R6 (1)otherwise, (III) Aa, a in E.",
        "There is no loss of generality on considering only context-free grammars of this form since for every context-free grammar an equivalent standard form grammar could effectively be given.",
        "A recursion sequence (of length k) of a standard form context-free grammar P is defined as a sequence of rules from R",
        "where A. in 4130, 1,4, V, in V*,7 Ao= Al, and Ai 0 4 (for i j) otherwise.",
        "Each symbol A. in the sequence is a recursive element in P. Since there are only finitely many elements in (I) every recursion"
      ]
    },
    {
      "heading": "4 In E. PAUSE (1972) I also investigate T-grammars that contain generalized transformations of roughly the same form as discussed by N. CHOMSKY (1957). Concerning the form of the T-rules I refer the reader to the sample grammar in section 4. 6 For details see for instance S. GINSBURG (1966).",
      "text": [
        "A denotes the empty string.",
        "7 V* denotes the free semigroup (generated by V).",
        "A CLASS OF TRANSFORMATIONAL RECOGNITION GRAMMARSi!",
        "49 sequence of P can maximally have length in =8 and since/.",
        "R is a finite set, the number of recursion sequences of P is finite.",
        "Two recursion sequences are equivalent if they could be ideniified by cyclical permutation of the rules.",
        "This leads to the concept oE.",
        "the equivalence class or recursion cycle of a recursion sequence.",
        "Exactly k recursion sequence of length k which could be transformed into one another constitute a recursion cycle.",
        "Therefore each recursion cycle is uniquely determined by specifying one recursion sequence belonging to it.",
        "Now all recursion cycles of a standard form context-free grammar P = (V, E, R, S), where t /0/, could be enumerated in the following way: Let us consider all sequences of rules from R of the form",
        "where ri is in R, A, in 0 and .A1 0 A.",
        "(for j m), then after maximally k < t steps either a) Xi, is in E or b) X is equal to A, for some j smaller than k. In case (b) the sequence of rules rip ..., ri, noted as above, obviously represents some recursion sequence of P. Clearly, there are only finitely many sequences as given above in P and it is easy to see that in all these sequences (which correspond in some sense to all derivations in P of length smaller than or equal to t) there is to be found at least one representative of each recursion cycle of P. Now equivalent recursion sequences are identified until there remains exactly one representative for each cycle.",
        "Furthermore, one arbitrary recursive element of each recursion cycle is chosen.",
        "Let {C'1, ..., Cs} be the set of these symbols each of which is called a base symbol of P together with the sentence symbol S. Then consider all occurences of base symbols on the right hand side of the rules of P as terminal elements which could not further be expanded by some rule.",
        "Construct a /0/ denotes the cardinality of O."
      ]
    },
    {
      "heading": "50EBERHARD PAUSE",
      "text": [
        "derivation trees by taking the set Z..., C51 u {S} as start symbols: you will obtain a finite set of trees B with terminal string either in E*: or in {E u Z}* having the following properties: a) every base tree corresponding to some sentence derivation in P can be uniquely decomposed into elements of B (in the obvious manner).",
        ", b) If elements of B are embedded into one another by identifying each time some initial node with some terminal node having as label the same base symbol the resulting tree is always a subtree of a tree ass6ciated with some sentence derivation in P. Hence the elements of B are kernel trees in almost the same sense as are those occuring in base trees considered by Petrick.",
        "I will not give here a proof of my main statements but will illustrate them by an example.",
        "Let P (V, I , R, S) where E = a, d, f, 1, j, n, v, x, y}, CD{ C, D, E, F, F', H, J, K, M, N, Q}, and =CFEI, F' XY, C MJ, M ---> KH, K DF, H QH, Q )- AF, HNF, A ---> a, D ---> d, F .f, E v, I --> i, Jj, Nn, X > x, Y Taken P as base grammar the base trees in general have the form Now all rule sequences of length smaller than or equal to 12 = (of the form (*+)), starting with the sentence symbol S are",
        "It is easy to see that for instance taking the embedding sequence cc there is a tree associated with some sentence generation in P such that the sequence is a subtree of it.",
        "From the construction equally follows that each base tree can be decomposed into elements of B in the opposite manner as contructing trees using the members of B.",
        "Since there are three kernel trees in cc embedded into one another we speak in exactly the same sense as above of the depth of a tree.",
        "Thus cc has depth 3.",
        "In the following we will also call every tree built up only of kernel trees a complex."
      ]
    },
    {
      "heading": "52EBERHARD PAUSE 4. In this section, I will first deal with some relevant implications of the foregoing construction and introduce the required terminology. Suppose, some T-rule 1. of a T-grammar G is applied to a base tree a:",
      "text": [
        "Let p be the resulting tree.",
        "Then p can also be decomposed into kernel trees, taking as cutting-points again those nodes labeled with base symbols.",
        "Some of the resulting kernel trees will perhaps have been deleted or will have been modified by the application of T. In the lat-.'",
        "ter case we get derived kernel trees.",
        "In any case, each tree that could be generated in G can be decomposed into (base or derived) kernel trees.",
        "I will call the set of all those kernel trees, thus obtained of all trees occuring in the derivations of G, the decomposition set B* of G. Suppose further that there are k terms in the structural description of T which have been related to k nodes of a.",
        "Now the sequence of all and only those kernel trees (from left to right) in which these nodes lie will be called the characteristic domain of T. CC: The complex which is the smallest subtree of a such that it contains exactly the nodes, characterized by T, (see the dashed line) is said to be a minimal complex of c (relative to a).",
        "Obviously only the minimal complex of a T-rule (relative to some tree) is relevant for the observation of the structural change produced by the rule, because all structure beyond it (above and below in the tree) is not directly concerned.",
        "To examine certain properties of trans-.",
        "formational derivations, it could therefore be sufficient to construct derivations consisting of such complexes rather than of the whole trees.",
        "This can be done nearly in the following way:",
        "a) Relative to all T-rules of G, at first all possible minimal complexes of depth 1 are built up of the elements of B.",
        "The set of kernel trees, obtained after the decomposition of the complexes resulting from A CLASS OF TRANSFORMATIONAL RECOGNITION GRAMMARS53 the application of the rules, yields together with set B set B1,1.",
        "This procedure can be repeated for minimal complexes over B of depth 2, 3, ... which gives the sets B2,1, B2,1, ... b) Now continuations of the foregoing derivations (of length 1) could be constructed taking as basis each time the corresponding set B,,,, B,2, ...",
        "According to the resulting derivations of length 2, 3, ... the sets 131,2, B1,3, ..., B2,2, B2,2, ... of kernel trees will be obtained.",
        "By this procedure, which I cannot describe in detail here, the decomposition set B* of G can be enumerated as the union set of the sets Bm (p, q > 1).",
        "For our purposes, it is relevant to consider what happens with some kernel tree y or some node of a tree in the course of a derivation: performing some transformation, y is either deleted or there are some derived kernel trees (at least one) in the resulting tree which are the images of y, either identical or modified by the rule.",
        "Again the associated images of these in the following derived tree (which are also images of y) could be identified, and so on.",
        "This procedure could be carried out along the whole derivation starting with an element of B, called the origin, in the base tree.",
        "The same is valid for a node in a tree.",
        "It is either deleted or copied or only transferred by applying a T-rule, where in the latter cases it has some images (at least one) in the resulting tree (3 called the occurrences of the node in p. Now let us consider some derivation in G. It starts with a base tree a, and we are looking at some kernel tree y that is a subtree of a, and some derived tree (3 occurring in the derivation: a) All occurrences of terminal nodes of y in p, labeled with terminal elements, or occurrences of nodes in (3, inserted in y or an image of it by T-rules introducing new terminals (or morphemes), are called the rest-nodes of y in (3. b) Each terminal node of y labeled with a base symbol is called a base-node, and all occurrences of such nodes of y in (3 are said to be base-nodes of y in (3.",
        "After these remarks we are ready to outline the class of structurally bounded T-grammars.",
        "For a grammar G to be structurally bounded in particular the following conditions must hold: a) The condition of recoverability of deletions.",
        "b) If a rest-node of some kernel tree.",
        "at in the characteristic domain of a T-rule T relative to a tree p is deleted, the number of rest-nodes of a in (3 must be greater than 1. c) If a subtree y is deleted by performing T , then each base-node 54EBERHARD PAUSE occurring in y, and lying in some kernel tree of (3, may be an occurrence or a base-node of the origin of y. d) Let the number of terminal nodes of the origin of a kernel tree occurring in the characteristic domain of T be m. Then this sub tree, following its changes under the rules up to p by considering its \" trace \" along its images in the given derivation, may not have occurred more than m-1 times in the characteristic domain of T. For this class of grammars, say G1, the following theorem can be proved: (A) If G is structurally bounded, then the length of each sentence derived from some base tree oc of depth n cannot be shorter than n,",
        "the member of kernel trees contained in a could maximally be (where k is a constant depending on G).",
        "Suppose G is structurally bounded, and m is the maximum of sub trees which could be deleted on account of their identity by one T rule of G. Let j be the number of T-rules of G, and r the length of the longest terminal string of members in the set B of G, then let j.m.r = k. n 1: If cc is a base tree of depth 1, then every tree p that could be derived from cc may contain a rest-node of cc.",
        "Thus the length of the terminal string of p is greater than or equal to n 1, and the number of kernel trees in cc is 1k\".",
        "c=i Now suppose (A) is true for all trees of depth h smaller than n greater than 1).",
        "Let cc be a base tree of depth n. Without loss of generality, we may assume that GC has the form, where a is some kernel:tree, y ys subtrees maximally of depth n-1, and let us further assume that s does not exceed k. Then k-1 of these subtrees could be deleted maximally.",
        "Some rest node of a in a tree p derived from cc must also survive.",
        "From this and by induction it A CLASS OF TRANSFORMATIONAL RECOGNITION GRAMMARS55 follows that the length of the terminal string of p must be greater or equal to n-1 1 = n. Hence the number of kernel trees in cc has as",
        "maximum value k k\") 1 = 2 el.",
        "Obviously a decision procedure for the language generated by some grammar of G, could be given.",
        "However, it can be proved that there is no recursive solution to the problem whether in general a given grammar belongs to G1 or not.",
        "In the sequel I shall go on to sketch some properties of grammars in G, for which this problem is decidable.",
        "In considering the construction of the decomposition set B* of a given T-grammar G and of the corresponding derivations of complexes (seepage 52 and 53), there might exist some point where the following requirements are fulfilled: Suppose that all derivations starting with complexes up to a certain depth p have been constructed, that the length of these derivations has as yet reached some q, and that they are \"structurally bounded \".",
        "Suppose further that by continuing the construction for some p' greater than p no new derivation (beginning with complexes over B) could be started.",
        "Then G is structurally bounded and is said to be in class Gm , if the given derivations become periodical.",
        "That is, if they have the same continuations in the q 1-th step as in the q n + 1-th step (for some n), in the q + 2-th step as in the q n 2-th step, ..., in step q n as in step q, and so on.",
        "This in particular means, that at those points in the derivations always the same minimal complexes appear periodically, and that therefore the decomposition set B* of G is finite.",
        "Since there are grammars for which these properties hold for arbitrary p and q, there exists an infinite hierarchy G, of types of grammars Gpq (p, q >1) in G1.",
        "For each p and q obviously membership of a given grammar in Gm could be determined in a finite number of steps.",
        "The following example should help in understanding these brief remarks: Let G be a T-grammar with base given by the above-mentioned context-free grammar P. and let G contain the following obligatory T-rules: \" There is great evidence in the assumption that every kernel sentence of a sentence of a natural language can undergo only a finite number of transformations."
      ]
    },
    {
      "heading": "56EBERHARD PAUSE",
      "text": [
        "Now the following derivations could be constructed:"
      ]
    },
    {
      "heading": "58EBERHARD PAUSE",
      "text": [
        "Since there are only finitely many different derived (minimal) complexes in the derivations of a grammar G of Gp,q, one obtains a grammar G' (called reversible) containing a finite set of expanded T-rules.",
        "G' is by construction equivalent to G. A recognition grammar G is obtained from G' by computing the corresponding inverse T rules.",
        "Then analysis will be performed by intermixed parsing ', that is, by alternating the application of base rules and T-rules.13 In order to prevent the expanded T-rules being applicable at some point in a derivation, where the original rules could not have been applied, auxiliary symbols are inserted in the rules to control their correct application.",
        "To illustrate these remarks, let us look at the expanded inverse T-rules of our sample grammar G: :v) 1, 2y, 2 + 1 T-21- :j d3,1, i, V) 1, 2, 3, 41, x, 3, 4 : (K, j, 41, i, H,...,6-- 1, 0, 0, 0, 5, 2 + d31 +4+6 (d, j, 41, i,j, d,,,, (d, j, (16,j,i, m)1'7 --> 1' 13' -/- 5 d7 T;1: (m, j, i, n, j, i, Af) 1, 2, 3, 4, 51, d5,1 + 2, 4 + 42 -I+5+3, 0,f '7;1: (M, j, Q, j, d7,1, H, m) 1, ..., 71, d,,i+ 2, 4 + 42 -I+",
        "The construction should be clear in considering the original rules and the derivations given above.",
        "The symbols d,, denote auxiliary symbols.",
        "For the rules T4 and T7 two expanded rules have been constructed because T4 and T7 precede the application of either the rule T5 or T6 The recognition procedure will be illustrated by the analysis of the sample sentence \" dj i nji v .",
        "Let Ii T, Tz.",
        "denote the application of the rule T, or of the inverse base rules respectively.",
        "Notice that the inverse T-rules are not true inverse rules, since they apply to sequences of trees, so-called \" terminal rest-trees \".",
        "13 It can be shown that the set of context-sensitive languages is properly included in the set of languages generated by grammars of G1.",
        "Furthermore, for each context-sensitive grammar a reversible T-grammar can effectively be given.",
        "T;ii: (AI, a, j, d5,1, i, jf d592) if M)"
      ]
    },
    {
      "heading": "60EBERHARD PAUSE",
      "text": [
        "In addition the following condition is important: the final derived tree of the input string (with respect to the generation process) could be reconstructed in the course of the analysis process.",
        "It must then be checked if some obligatory T-rule of G' is applicable to this tree.",
        "If this is not the case, the input string is a sentence of the grammar.",
        "The problems which arise out of the foregoing construction are the following: a) There are cases in which no reversible grammar G' for a given grammar G could be constructed, because, for instance, some auxiliary symbol could not be removed in the course of a sentence derivation.",
        "b) Another source of not obtaining a reversible grammar is, that there could occur subtrees of arbitrary depth which have to be considered for the expansion of some term in a structural description.",
        "In this case a partially reversible grammar could be constructed.",
        "The recognition grammar then works with base rules, T-rules, and so-called \"predictions\" associated to the T-rules.14 Analysis with these grammars will without doubt be much less efficient.",
        "The advantage in using reversible grammars appears to be a) that there is no additional synthesis phase necessary when the analysis step has been carried out, b) that the different possible paths which must be pursued in parsing a sentence could be reduced to a minimum, in using auxiliary symbols whenever it is possible, c) and that the recognition graxnmar could effectively be given for the whole set of generated sentences.I-5 14 See my dissertation (E. PAUSE, 1972).",
        "14 At page 54, Theorem (A), the number k must correctly be taken as the maximum number of base symbols occurring in a kernel tree of the set B."
      ]
    },
    {
      "heading": "REFERENCES",
      "text": []
    }
  ]
}
