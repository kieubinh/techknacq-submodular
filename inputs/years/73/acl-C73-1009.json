{
  "info": {
    "authors": [
      "Serge Boisvert",
      "Andre Dugas",
      "Denise Belanger"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C73-1009",
    "title": "OBLING: A Tester for Transformational Grammars",
    "url": "https://aclweb.org/anthology/C73-1009",
    "year": 1973
  },
  "references": [],
  "sections": [
    {
      "heading": "OBLING: A TESTER FOR TRANSFORMATIONAL GRAMMARS 1. INTRODUCTION",
      "text": [
        "Transformational grammars have developed with recent research in linguistics.",
        "They appear to be a powerful and explicit device for characterizing the description of sentences; they also meet conditions of adequacy that can be applied to check that a sentence, or a set of rules, is well-formed.",
        "A transformational grammar tester is part of a strategy for the selection of a well-formed grammar matching the data base.",
        "To put it more explicitly, a tester of this sort should provide the linguist a class of the possible grammars which concerns precisely the linguistic theory.",
        "These grammars have the form given by CHOMSKY in Aspects (see bibliography)."
      ]
    },
    {
      "heading": "2. GENERAL DESCRIPTION OF THE SYSTEM",
      "text": [
        "OBLING is a program for dealing with the structures of the French language: it performs the verification of phrase structure rules, the derivation of sentences according to the transformational component and the graphic illustration of the intermediate or final structures.",
        "In the program, LING is the routine that controls all the subroutines and the matching of the input structures with those allowed by the phrase structure rules.",
        "If the matching is impossible, a comment is"
      ]
    },
    {
      "heading": "Acknowledgments. This work was supported in part by Canada Council of Arts grants #69-0404 and #71-0819.",
      "text": [
        "We are also indebted to the staff of the Computer Center of the Universite du Quebec a Montreal for providing computing facilities, and giving this project high priority.",
        "David Sankoff, of the Universite de Montreal, is also responsible for the first version of the tree editing program.",
        "Finally, Josselyne Gerard helped debugging linguistic rules.",
        "made.",
        "Otherwise, the output gives the graphic illustration of the tree for this sentence, or the input structures are immediately processed using transformational rules.",
        "For example, General transformational rules are operated by a number of subroutines of which the main are explained hereafter."
      ]
    },
    {
      "heading": "3. GENERAL CAPACITIES OF THE SYSTEM",
      "text": [
        "The system OBLING is divided into four parts: a main program LING, the service subroutines, the phrase structure grammar tester and the transformational grammar testers.",
        "LING and the service subroutines are stored in the central memory while the two grammars testers operate on disks.",
        "The main program invokes the various linguistic rules and controls the application of these rules to the data base structure(s) or the derived structure(s).",
        "The service subroutines are called by the routines concerning the application of the transformational rules and work in parallel with LING during the processing."
      ]
    },
    {
      "heading": "4. SPECIFIC CAPABILITIES OF THE PROGRAM LING",
      "text": [
        "The program LING will first initialize the working areas.",
        "Then, it loads and operates the program VERIFICATEUR which, after the reading and the verification of the input data, returns control to LING.",
        "small control programs CYCLI Ql, CYCLI Q2, ..., CYCLI Qi.",
        "Each of these handles, in conjunction with LING, the mapping on the input structure of a fixed number of transformation rules.",
        "In the current version of the program, CYCLI Q1 deals with the linguistic transformational rules T1 to T5 included, CYCLI Q2 the rules T, to T10 included, etc.",
        "The total number of these control programs CYCLI Q depends on the memory space allowed; processing is most efficient if the number of these control programs is as small as possible."
      ]
    },
    {
      "heading": "5. INFORMATION PATTERN BETWEEN LING AND VERIFICATEUR",
      "text": [
        "When VERIFICATEUR (the phrase structure grammar tester) is in memory, the structure to be analysed is read from the standard input unit (punched cards) and is processed by the subroutine CKARBRE to",
        "be validated.",
        "This subroutine first checks if the phrase structure is consistent, then calls up OW which tests the names of the constituents describing the structure; fmally, it compares this structure with those allowed by the phrase structure rules.",
        "When errors are discovered during the processing, various sorts of comments are printed and followed if possible by a partial or full tree of the sentence.",
        "When updating is done, the tree is printed and the program VERIFACATEUR passes control to LING.",
        "The following illustrations concern first, the program VERIFICATEUR and second, an example of an updated tree and structure."
      ]
    },
    {
      "heading": "6. INFORMATION PATTERN BETWEEN LING AND THE TRANSFORMATIONAL GRAMMAR TESTERS",
      "text": [
        "Each time LING receives the control from VERIFICATEUR, that is, when no further errors have been detected, it loops in order to call successively the monitors CYCLI Q1, ..., CYCLI Q9 which contain up 45 different rules; we suppose that we are working now with a specific version of a grammar.",
        "The first of these monitors has the following structure.",
        "to the already processed structures occur, or if new errors are discovered, control returns to LING.",
        "After all the cyclic rules have been applied, the post-cyclic rules are processed in a similar manner: CYCLI QA comprises the first five post-cyclic rules CYCLI QB, the five following, and so on.",
        "This chart illustrates the general interaction between the programs for the processing of cyclic or post-cyclic rules."
      ]
    },
    {
      "heading": "7. SERVICE SUBROUTINES",
      "text": [
        "They are implemented within the main monitor LING.",
        "All but a few of these subroutines are called during the execution of the routines corresponding to the 88 rules, that is during the phrase structure analysis or the mapping of n structures.",
        "A short description of the main subroutines follows: ARBRE (tree).",
        "This subroutine is responsible for printing the tree.",
        "At the input, we find a vector D of ND elements which represents the tree.",
        "The horizontal distance for printing is calculated along with the total number and the relative position of these nodes; the vertical one is fixed."
      ]
    },
    {
      "heading": "7.1. OTE (Remove).",
      "text": [
        "This subroutine is needed when nodes are erased; another subroutine, NEWTREE will erase the nodes.",
        "In the example below, on sets D(6), D(7), D(13) to zero, and NEWTREE erases nodes numbered 6, 7 and 13.",
        "If node 12 was also erased, on and NEWTREE would have erased node 28 automatically.",
        "The same holds for the node 32, where all the nodes between 6 and 13 would have been erased."
      ]
    },
    {
      "heading": "7.2. DFER, DFERX, GFER, GFERX.",
      "text": [
        "Except for a few details, these four subroutines do the same work.",
        "For example, DFERX [I, J] is applied to a structure J that has to be moved to the right under a dominating node I.",
        "As illustrated below, DFERX [31, 30] moves the structure headed by 30 to the right under the node",
        "In Z ,I3 4.1 = 2 V N 0 •-.",
        "..../ Fl Z .../ W Z",
        "• M Z C.) In tO O.",
        "4- LI • MZ-.11.02 • as N 0 O.",
        "1.1. la",
        "• .",
        ".",
        ".",
        "DFER makes node J the next younger brother of node I DFERX makes node J the youngest son of node I GFER makes node J the next older brother of node I GFERX makes node J the oldest son in node I The general technique for these four subroutines is the following.",
        "Before modification, the tree is copied in another area of memory.",
        "All the terminal nodes identified with the structure J take the place of the terminal nodes identified with the structure I.",
        "Then, the terminal nodes of I are requested in the copied structure and parsed with their dominating non terminal nodes at the right place.",
        "GFER Termits the new numbering of the sequence and, if necessary, prunes the tree.",
        "In the example illustrated below (Fig.",
        "9a and 9b), GFER [14, 13] is applied and node CPL (13) has been attached to node 16, the father of node 14.",
        "If GFERX [14, 13] had been specified, node CPL would have been attached directly to node 14, rather than the father of node 14."
      ]
    },
    {
      "heading": "7.3. INTERV.",
      "text": [
        "This subroutine is used for the permutation of 2 structures.",
        "For example, INTERV J] where I 24 and J 28 gives rise to the structural change illustrated below."
      ]
    },
    {
      "heading": "7.4. INSERT.",
      "text": [
        "This subroutine is used for the insertion of a new terminal node; for example, INSERT [4, 1HE, 1HT, 1HR, 9] introduces node with name ETR which becomes a new son of node 9."
      ]
    },
    {
      "heading": "7.5. Other subroutines.",
      "text": [
        "There is a number of other subroutines concerning conditions specified within a rule, such as the presence or absence of a node or of a feature in the whole structure, the logical restrictions of loose equality or strict equality.",
        "• DET .",
        ".",
        "U"
      ]
    },
    {
      "heading": "8. CONCLUSIONS",
      "text": [
        "OBLING is a system which has been implemented in low-level FORTRAN IV for the CDC 6400.",
        "It occupies 55,0008 60-bit words of memory.",
        "It has about 7000 lines of comments and instructions."
      ]
    },
    {
      "heading": "REFERENCES",
      "text": []
    }
  ]
}
