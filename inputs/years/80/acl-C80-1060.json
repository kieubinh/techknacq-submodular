{
  "info": {
    "authors": [
      "Werner Dilger"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C80-1060",
    "title": "Automatic Translation With Attribute Grammars",
    "url": "https://aclweb.org/anthology/C80-1060",
    "year": 1980
  },
  "references": [],
  "sections": [
    {
      "heading": "Summary",
      "text": [
        "Starting from an ATN-grammar and translation rules assigning expressions of a predicate calculus language to the symbols of the grammar one can produce an attribute grammar for the translation of natural language sentences (here German) into expressions of the predicate calculus language.",
        "The paper illustrates that this can be done in a straightforward way and outlines further improvements of the resulting attribute grammar."
      ]
    },
    {
      "heading": "Introduction",
      "text": [
        "An important component of the natural language information system PLIDIS, developped by my colleagues and myself at the Institut fuer deutsche Sprache in Mannheim (cf. [BW 78], [KL 79]), is the translation algorithm, which transduces natural language sentences into expressions of an augmented first order predicate calculus, called KS (cf. [DZ 78],[Zi 77]).",
        "Special features of KS going beyond ordinary predicate calculus are many-sorted domain of objects, A-abstraction, and complex term-building facilities.",
        "The examples contained in this paper will illustrate these features.",
        "Input for the translation algorithm are the parsed sentence and a set of translation rules (in the following: TR-rules) (cf. [Wu 79]), which are defined for labels of the parse tree nodes, mainly for the labels of the terminal nodes, i. e. for the words of the input sentence.",
        "Working bottom up the parse tree the translation algorithm assigns a translation to each of the nodes of the tree by interpreting the TR-rules defined for the labels of the nodes.",
        "If a translation has been successfully assigned to the root of the tree, which is labelled by S, this translation is the translation of the whole sentence.",
        "The advantage of the translation algorithm, the most important part of which is the interpretation of the TR-rules, is its rather simple structure, which facilitated implementation.",
        "But it also has several disadvantages.",
        "First of all the algorithm is not very efficient since it runs separately from parsing, i. e. it does not start before parsing has finished.",
        "The TR-rules must take care of the structure of the parse tree, that means, during their interpretation we must check which steps were made in parsing some relevant part of the tree.",
        "Next, the TR-rule for the label of a node must be completely evaluated, though it depends on the position of the node in the tree, which parts of the rule apply to the node or whether the rule applies as a whole.",
        "Finally it is difficult to detect circularities in the translation process on the basis of the TR-rules.",
        "To avoid these disadvantages we can use attribute grammars for the translation.",
        "The content of the TR-rules must then be represented by attributes and semantic functions.",
        "But for this purpose we need a context free grammar as a basis of the parsing.",
        "In PLIDIS, however, we have no such grammar, parsing is done by means of an ATN-grammar (cf. [Wo 70], [Wo 73], [Ba 78], [KL 79]), adapted for German.",
        "Though the networks of the ATN-grammar are not context free productions, we can produce such productions out of them.",
        "At first glance, by doing so, the context-sensitivity of the networks - which is their main advantage - is lost.",
        "But we can regain it by providing the productions with appropriate attributes and semantic functions.",
        "If we take a simpler version of the ATN-grammar, namely the RTN-grammar (\"recursive transition networks\") (cf. [Wo 70]), then an ATN-grammar is nothing else but an attributed RTN-grammar; so we could read the letters \"ATN\" as \"attributed transition networks\" instead of \"augmented transition net-works\".",
        "In the remainder of the paper we omit the attributes needed to express context conditions, we only deal with those needed for translation.",
        "To summarize, we have to show how to obtain context free productions from the networks and attributes and semantic functions from the TR-rules.",
        "We will demonstrate by examples that the method is straightforward, and we will outline how the resulting attribute grammar can be improved.",
        "ATN-grammars and TR-rules We want to parse the following questions asking for facts of the PLIDIS mini-world, e. the control of water pollution: Enthielt eine Probe im Jahr 1979 in Stuttgart Arsen?",
        "Did a sample in 1979 in Stuttgart contain arsenic?",
        "Welche Betriebe in Stuttgart hat Zimpel im Jahr 1979 gepridft?",
        "Which plants in Stuttgart Zimpel has inspected in 1979?",
        "Welche Betriebe hat Zimpel im Jahr 1979 in Stuttgart gepraft?",
        "Which plants Zimpel has inspected in 1979 in Stuttgart?",
        "Welche Betriebe der Firma Lauxmann in Stuttgart hat Zimpel geprilft?",
        "Which plants of the firm Lauxmann in Stuttgart Zimpel has inspected?",
        "Welcher Probenehmer hat bei der Firma Lauxmann im Jahr 1979 Proben gezegen?",
        "Which sampler has taken a sample from the firm Lauxmann in 1979?",
        "We will give a small section of the ATN-grammar used within PLIDIS, reduced to an RTN-grammar, which allows the parsing of these questions.",
        "The networks and word classes of fig. 1 are needed for this purpose.",
        "We obtain by means of this grammar for the question Welche Betriebe in Stuttgart hat Zimpel im Jahr 1979 geprilft?",
        "Which plants in Stuttgart Zimpel has inspected in 1979?",
        "the parse tree of fig. 2.",
        "We will now give TR-rules for the labels of some of the nodes occurring in fig. 2, using small diagrams which represent sections of possible parse trees.",
        "The triangles in these diagrams denote arbitrary (perhaps empty) subtrees.",
        "Because the TR-rules are defined for single symbols of the grammar regardless of their occurrences in parse trees, all possible natural language occurrences of the symbols must be described and dealt with in the TR-rules.",
        "Therefore in the following TR-rules not all conditions will be immediately clear.",
        "But that doesn't matter since we are not interested in the details of the TR-rules, rather we will show below how the TR-rules can be transformed into expressions containing attributes and semantic functions.",
        "The else-part here is assumed to be substituted by the general rule prescribing that whenever a TR-rule does not apply, the translation of the node will be the translation of one of its daughter nodes, e.g. here we could write: else translat(N) = translat(Z) From the TR-rule for PNG we will only give some part:",
        "YE {N,NPR} and sort(translat • in",
        "if PNG and cat(translat(N)) KONST PRAEP N then if PNG and YE {DET,QDET,WDET,NEGand DET,ZAHL} cat(translat(Y)) =QUANT • y",
        "As with the rule for N the else-part is omitted here too.",
        "Applying these TR-rules to the section of the parse tree of fig. 2 represented in fig. 3, we get as translation of this section:"
      ]
    },
    {
      "heading": "[LAMBDA X.BETR [BETRIEB X.INDUSTRIE [LAMBDA X.ORT[IN STUTTGART X.ORT]]",
      "text": [
        "Transformation of the networks into context free productions The first step is to produce sets of productions by means of the inscriptions of the nodes and edges, the right hand sides of which consist of at most two symbols.",
        "HSVK/VK 4 In the next step the sets of productions are combined for each network to a single production the right hand side of which consists of a regular expression.",
        "The set for PNG is duplicated, omitting PRAEP, to get a separate production for NG.",
        "S 4 (VERB1c)(NGIPNG) (AUXH(NG1PNG) HSVK ?",
        "I ?)",
        "PNG 4 PRAEP((DETIWDETIE)(NINPR)IDATUMSZAHL) NG 4 (DET WDET c)(N1NPR)IDATUMSZAHL HSVK 4 VERBIe Now these productions are transformed step by step into \"disjunctive normal form\", where sequencing (represented by juxtaposition) corresponds to the logical \"and\", 1 corresponds to the logical \"or\".",
        "The parsing of our question example by means of these productions yields the parse tree of fig. 4.",
        "The section of this tree corresponding to that of fig. 3 is represented in fig. 5.",
        "Providing the productions with attributes We will now give a list of attributes and semantic functions for the productions and augment the productions by them such that the evaluation of the semantic functions yields the translation of the sentence.",
        "We will do this only for those productions needed for the section of fig. 5.",
        "domain n-tuple of KS-expressions (translations), in general n = 1 sets of triples, consisting of the position of a symbol in the parse tree, the symbol itself, and the value of the symbol inherited inherited Semantic functions argument yields the KS-syntactic category of t yields the sort of t yields from +tree the symbol of the node with position p yields the last integer of p yields from +tree the value of the node with position p replaces in +tree the value of the node with position p by w tval is the most important attribute, for it contains the translation of a node.",
        "The other attributes are auxiliary attributes.",
        "+tree contains in each node a relevant section of the parse tree with all necessary informations about the nodes of that section, namely their labels and their values.",
        "Already Knuth ([Kn 68]) has given a technique for representing the attribute values of all other nodes at each node of the tree.",
        "We adopt this technique here in a slightly modified way since it offers an elegant way to rewrite the conditions of the TR-rules as expressions containing semantic functions and attributes for appropriate productions.",
        "We will illustrate how this technique works, using the structure of fig. 5.",
        "The only information we are interested in for this example are the labels of the nodes.",
        "Let xo 4 X1 X2 ... Xn (n 0) be a production, where the X.",
        "(i = 1,...,n) are terminal or nonterminal symbo's.",
        "If n=0, X is terminal.",
        "Then: 0",
        "same as with +tree finite sequences of positive integers, separated by dots",
        "We can easily obtain the •pas-value for each node of fig. 5 beginning with the NG/PNG-node which is dominated by the S-node and for which we assume: +pos(NG/PNG) = k. The +pos-values are given in fig. 6.",
        "Using these values, we obtain e.g.",
        "In order to obtain the values of attributes defined for the productions it is often necessary to determine a new position starting from a given one.",
        "For this purpose some of the integers at the end of the position must be omitted or others must be appended.",
        "If the last integer of the position belonging to symbol X shall be omitted we write",
        "etc.",
        "If an integer, say k, shall be appended j times, we write +pos(X)•0 Now we are ready to give the productions needed for the structure of fig. 5, provided with attributes and semantic functions.",
        "N Betrieb",
        "if symb(1-pos(N)-1)E{NG,PNG} A symb((+pos(N)-2)•2.1)=NG A ((symb(+pos(N)•1)E(Monat,Jahr)} A 3j>0: cat(value ( (+pos (N) -2) •2•1 •j) )=KONST A sort(value((+pos(N)-2)•2•1•j))=INT)v",
        "The first part of the expression needed to determine the value of tval(N) comes from the TR-rule for N, the second part from the TR-rule for Betrieb (plant).",
        "For the symbol NG there is a TR-rule too.",
        "We omit it here, because it does not apply to our example.",
        "Therefore we deal with the production NG N in such a way, as if there were no TR-rule for NG.",
        "With these productions we obtain immediately the value of the +tree-attribute for each node of the structure of fig. 5 or 6, when we postpone the evaluation of the tval-attribute.",
        "The value is {(k,NG/PNG,tval(NG/PNG)),(k.1,NG,tval(NG)), (k•1,1,N,tval(N)),(k•1•1.1,Betriebe,w),(k•2, NG/PNG,tval(NG/PNG)),(k.201,PNG,tval(PNG)), (k•2•1•1,PRAEP,tval(PRAEP)),(k•2.1.1•1,in,w), (k•2.1•2,NPR,tval(NPR)),(k•2•102•1,Stuttgart,u)) The production NPR Stuttgart yields +val(NPR) = STUTTGART We can substitute this value in +tree or regard \"+val(NPR)\" as a pointer to this value.",
        "Now we try to determine +val(PRAEP) from the production PRAEP in.",
        "First we have symb(+pos(PRAEP)-1) = symb(k•2.1•1 - 11 = symb(k•2•1) = PNG That is, the first condition holds.",
        "Next nth(+pos(PRAEP)) = 1 therefore j>1.",
        "Assume j=2.",
        "Then",
        "Further sort(value((+pos(PRAEP)-1).2)) = sort(value(k•2•1•2)) = sort(STUTTGART) = ORT The second condition holds too, thus we get tval(PRAEP) = [LAMBDA X.ORT[IN STUTTGART X.ORT]] Within the production PNG PRAEP NPR the first condition needed to determine tval(PNG) does not hold, so we get tval(PNG) = tval(PRAEP) If we assume these values to be substituted in +tree, we now have the intermediate result Ok,NG/PNG,Tval(NG/PNG)),(k•1,NG,tval(NG)), (k•1•1,N,Tval(N)),(k•1•1•1,Betriebe,m), (k•2,NG/PNG,tval(NG/PNG)),(k•2.1,PNG, [LAMBDA X.ORT[IN STUTTGART X.ORT]]),(k•2•1•1, PRAEP,[LAMBDA X.ORT[IN STUTTGART X.ORT]]), (k.2•1•1•1,in,w),(k.2.1•2,NPR,w),(k•2•1•2•1, Stuttgart,w)} It is left to the raeder to compute the final result applying the remainding productions.",
        "Conclusion We have illustrated how an attribute grammar can be produced from the networks and TR-rules used within PLIDIS, which has the same expressive power as the underlying networks and rules.",
        "The advantages of the ATN-grammars for the parsing of natural language sentences are well known.",
        "Above all they are an elegant tool to write grammars especially suited for linguists.",
        "The'TR rules have advantages similar to these.",
        "Surely they are easier to write than the somewhat cumbersome expressions for determining attribute values, particularly those for the +val-attribute.",
        "In the TR-rules, however, attempt is made to describe and deal with all possible occurrences of a symbol.",
        "With the attributed productions this is not necessary, since for a single production some of the cases which stem from the possible occurrences of one or more symbols can be omitted a priori.",
        "For example, in the production PNG PRAEP NPR the whole first part for determining tval(PNG) can be omitted, because the first condition does not hold for this production.",
        "In a similar way we can omit some part in the production N Betrieb.",
        "Further improvements can be made by changing the productions themselves, e. g. by partly eliminating those symbols which denote word classes.",
        "Performing all possible improvements certainly leads to an attribute grammar which yields translations of sentences in a rather efficient way.",
        "On the basis of this grammar we can detect circularities which can occur in the translation process by means of well defined algorithms (cf. [Bo 76])."
      ]
    }
  ]
}
