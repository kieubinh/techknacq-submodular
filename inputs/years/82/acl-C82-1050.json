{
  "info": {
    "authors": [
      "Martin Platek"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C82-1050",
    "title": "Composition of Translation Schemes With D-Trees",
    "url": "https://aclweb.org/anthology/C82-1050",
    "year": 1982
  },
  "references": [],
  "sections": [
    {
      "text": [
        "Czechoslovakia Generative systems (GS) are defined in this paper as a composition of simple translation schemes with depen - dency trees.",
        "The following issues are discussed: (a) explicative power of GS, (b) the time complexity for the analysis and synthesis for GS."
      ]
    },
    {
      "heading": "INTRODUCTION",
      "text": [
        "A generative system for Czech was presented in Sgall W The concept of a generative system was studied by Pldtek [4] and Pldtek and Sgall .",
        "In this paper we use a similar approach as that presented by HajiCova, Pldtek and Sgall in [3] .",
        "We define generative systems as a fundamental device for construction of grammars of natural languages.",
        "We give here some mathema - tical results to illustrate the usefulness of the new concept.",
        "We try first to formulate the necessary requirements on a grammar G of a natural language L. The grammar G must determine: a) The set of all correct sentences of the language L. The set will be denoted by LC.",
        "b. she set of the correct structural descriptions (SD) of the anguage L. SD represents all meanings of all sentences of LC.",
        "c) The relation SH between LC and SD.",
        "The relation SH describes the ambiguity and the synonymy of L."
      ]
    },
    {
      "heading": "By a structural description we understand a dependency tree (D-tree).",
      "text": [
        "The concept of a simple translation scheme from [1] is a generalisation of context-tree grammar.",
        "We introduce here a similar concept of a translation scheme, in this case as a generalisation of dependency grammar (see [2] , [5]).",
        "A generative system (GS) is defined as a sequence of translation schemes with a special asymmetric property.",
        "We show that the explicative power of GS increases with the length of GS.",
        "We present results concerning on algorithm for the analysis and synthesis of GS and show that its time complexity is independent on the length of GS.",
        "o(u)=A.",
        "We say that A is the value of node u.",
        "Let S=(U,LR,o), Sl.",
        "(U1,LR101), S2=(U2,LR2,o2) be the stri and u E U.",
        "We say that S2 is produced from S by replacing u by Sl, when the string 81 is placed between the predecesor and the succesor of node u and otherwise S2 does not differ from S. We denote as V\"- the set of all nonempty strings over V. Def.",
        "Let Sl = (U1,LR1,o1), S2 (U2,LR2,o2) be strings.",
        "Let Ul =1\" °uln and U2 = {u2u2n3 and ul n be in the ordering LR1, and u21,...,u2n in the ordering LR2 and ol(uli)= o2(u2i) for all i between 1 and n. Then we say that S1 and 82 are equivalent.",
        "We shall not distinguish between equivalent strings.",
        "Def.",
        "A quintuple SR.(U,LR,B,r,o) is called a D-tree over V,when S(d4 7.",
        "(U,LR,o) is a string and o:U---)V, B(SR)=(U,B.r) is a tree with the root r and when the following condition holds: The nodes of every path in B(SR), which begins with a leaf, are nodes of a substring of S(SR).",
        "We say that S(SR) is a projection of SR. Def.",
        "Let SR1=(U1,LR1,B1,r1,01) and SR2=(U2,LR2,B2,r2,o2) be D-trees.",
        "Let strings S(SR1) and S(SR2) be equivalent.",
        "Let f be a one-to-one mapping from Ul on U2, which preserves the ordering LR1 to the ordering LR2.",
        "Let f(rl)=r2 and let it hold that [utv] 6 B1 iff [f(u), f(v)J e B2.",
        "Then we say that SRi and SR2 are equivalent.",
        "We shall not distinguish between equivalent D-trees.",
        "Def.",
        "Let D=(U,LR,B,r,o), D1=(U1,LR1,B1,r1,o1) and D2.71T7,LR2,B2,r2,o2) be D-trees and u E. U.",
        "We say, that D2 is produced from D by replacing u by D1, when S(D2) is produced from Z(D) by replacing u by S(D1) and the neighbours of rl in B(D2) are the same as neighbours of u in B(D).",
        "Otherwise D2 does not differ from D. Def.",
        "A translation scheme of type string - D-trees (TS [S,LJ ) is a quadruple T.--(7N,VT,S,P), where VN is a the vocabulary of nonterminals, VT the vocabulary of terminals,VNn VT46, S E VN and P is a set of rules of the following type: LS.--A--,-RS, where A E VN (the middle of the rule) LS (the lefthand side) is a string over VN Li VT, RS(the righthand side) is a D-tree over VN ki VT and the following condition holds: When all nodes with terminals are erased from S(RS) and LS, then we get two equal strings.",
        "Let p=LS-*--A – RS.",
        "We write ELS1,RS17 p===;›[LS2,RS23 , when (i):the leftmost nonterminal node of LS1 is some u with the value A, (ii):the leftmost nonterminal node of RS1 is some v with the value A and (iii):LS2 is produced from LS1 by replacing u by LS and RS2 is produced from RS1 by replacing v by RS.",
        "p==> is denoted as › and >is the transitive closure of==>.",
        "P e P We denote as TR(T)= frLs,RA ; [Sts] >LLS,RSIJ , LS,S (RS)E VT43 ."
      ]
    },
    {
      "heading": "COMPOSITION OF TRANSLATION SCHEMES WITH D-TREES 315",
      "text": [
        "Remark.",
        "Analogically as a translation scheme of the type string - 1=TEF5-was defined, also definitions of the type string - string (TS CS,S ) or of the type D-tree - D-tree (TS LD,D] ) can be given.",
        "By TS [S,51 the lefthand side,and righthand side of a rule is always a string.",
        "By TS ID,D1 both sides of a rule are always D-trees.",
        "As TS we denote the set of all translation schemes of all the three types.",
        "Def.",
        "Let T1,...,Tn be a sequence of TS.",
        "We denote as TR(3I7...,Tn)=TR(T1).TR(T2)...TR(Tn).",
        "The main definition of this paper is the following: Def.",
        "A generative system (GS) is a sequence T1,...,Tn of TS, where TR(TI ...,Tn) is a relation between strings and D-trees and for every [11,d2I 6 TR(Tn) there exists a sl,so,such that sl,d2 ]E TR (Tl,...Tn).",
        "The set AN (Tl,...,Tn;v)= “v,dI E iTn)) is called the analysis of v. The set ST(T1,...,Th;d)= = its,d] E TR(T1,...,Tn)2 is called the full synthesis of D-tree d. Remark.",
        "Let GS1=T1,...,Tn be a GS.",
        "Then Range(TR(T1)) a Dom (TR(T2))...Range(TR(121.1)) D Dom(TR(Tn)).",
        "We call this property of GS1 an asymetric property of GS.",
        "Def, Let GS1 be a GS.",
        "We say that the function MS is a function of IS minimal synthesis of GS1, if the following conditions are fulfiled:",
        "Def.",
        "D-grammar (DG) is a T E. TS ES,DJ, where T=(VN,VT,S,P) and for every P,p=LS.4--A --=,RS there holds, that LS=S(RS).",
        "Def.",
        "We denote DR0=TR(T);T E DGiand DR.= fTR(T1,...,Tj); T1,...,Tj E GSJ for jE N. For j E N 1.01 we write - J 1DR, (FE DR.' F is a functioni .",
        "- Note.",
        "We need also one more concept.",
        "It is the concept of an 1711-ii.phic generative system for another one.",
        ".",
        "Def.",
        "Let V1,V2 be two alphabets and h:V1--*V2.",
        "Let 51=TUT,LR1,o1), S2=(U2,LR2,o2) be two strings, where ol:U1-4V1, o2:U2-->V2.",
        "We say that a tuple (f,h) is an h-morphism from S1 to S2, when f:U1-->U2 is a one-to-one mapping which preserves the ordering on nodes and for every u E Ul there holds that h(ol(u))=o2(f(u)).",
        "We say that S1 is h-morphic for S2, if there exists an hmorphism from S1 to 52.",
        "Def.",
        "Let D1=(U1,LR1,B1,r1,o1) and D2=(U2,LR2,B2,r2,o2) be D-trees.",
        "Let-7,h) be an h-morphism S(D1) to S(D2).",
        "Let there hold that ru,v7 E Bl iff [t(u), t(v)1 E B2 and t(r1)=r2.",
        "We say that (t,h) is a h-morphism from Dl to D2.",
        "We say that D1 is h-morphic to D2, when there exists an h-morphism from Dl for D2.",
        "Def.",
        "Let T1=(VN1,VT1,S1,P1) and T2=(VN2,VT2,S2,P2) be TS.",
        "Let-E7VN1LeVT1-->VN2ti VT2, where h(VN1)=VN2, h(VT1)=VT2.",
        "Let there exist a one-to-one mapping MP from P1 on P2 such, that if LS1.4 – Al 4 RS1 and 111)(p)taLS24 – A2--3 RS2, then L51 is hsmorphic to LS2, RS1 is h-morphic to RS2 and h(Al)=A2.",
        "We then say, that Ti is h-morphic for T2.",
        "Def.",
        "Let GS1=T11,...,TIA and GS2=T21,...,T2n both be GS.",
        "Let T11 be hl-morphic to T21, T12 h2-morphic to T22,... and so on to n; we say then, that GS1 is h-morphic for GS2, where h=(hi,...,hn).",
        "Let us have an example of a translation scheme.",
        "Let T3=( iS,S1,32,S33 , ia,b,01 S, P3) and P3: a SlE-- S a Sl-4 -- S2-4® It holds that: S, >[a 51, *>r aacaacac, We can sea that Dom(TR(T3))= =.an c an c a3 ; n,j E NJ LI iai c an c an ; j,n ENt and that TR(T3) is a function."
      ]
    },
    {
      "heading": "COMPOSITION OF TRANSLATION SCHEMES WITH D•TREES 317",
      "text": [
        "and",
        "and let R4(k)=TR(G4, T5,...,T5), k-times"
      ]
    },
    {
      "heading": "2k-f I",
      "text": [
        "then R4(k)= an c an c, (c an) ;11 E NI and if TR(G4,T5,...,T5,T6).",
        "IT(k) (k-i)times then R4(k)= [apt)] fa,c1 E I T(k) and b=S(c) Results.",
        "Assertion 1.",
        "For 0 it holds that j+1 j DR DR and",
        "Notation.",
        "1st denotes the length of the string s, which is the card (U), where U is the set of nodes of a.",
        "Assertion 2.",
        "Let GS1 be a generative system, ErfrenETie exist an algorithm that computes for every string v the set AN(QS1,v) (analysis) with the time complexity bound by a function Kl.",
        "iv/3 max card (AN (T ...,T.-v)1 n , where 1, Kl depends only on GS1.",
        "j=1 b) Then there exists an algorithm that computes for every D-tree d the set ST(GS1,d) (full synthesis) with the time complexity bound by function K2.",
        "IS(d)13 .",
        "card (ST(GSl)), where R2 depends only on GS1.",
        "• Assertion 3.",
        "Let GS1 be a GS.",
        "Then there exists an h-morphic generative system GS2 for GS1 and an algorithm that for every D-tree d computes ST(GS2,d) with a time complexity bound by function",
        "Assertion 4.",
        "Let GS1 be a GS.",
        "Then there exists an h-morphic gene - rative system GS2 for GS1 and an algorithm such that for every D-tree d computes MS(d) with a time complexity bound by function K .",
        "IS(d)1 where MS is the function of Minima syntesis of GS2, Dom(TR(GS1))=Dom(TR(GS2)) and K depends only on GS2.",
        "Remarks.",
        "Remark to Assertion 1.",
        "Vie sketch here a pilBIT of Ass.l.",
        "We see that DRo G DR/ and 1DRo 1DR1.",
        "Dikovskij and Modina have shown in (2] , that TR (T3) from Example 1 cannot be in DRo.",
        "We see that T3 is a TS.",
        "Thus DR C.. DR .",
        "Since TR(T3) is a function , we see that 1DR 1DR1.",
        "o 1 o 1",
        "In the Example 2 we have shown that IT(k) E 1DR.",
        "From the results on composition of pushdown transducers (PST) in :4.1 and from the equivalence theorem between TS's and PST's from 1 it follows, that IT(k+1)(,-L DR\".",
        "Thus DR.0 DR and 1DR.",
        "=.1DRj",
        "The algorithm for analysis and synthesis for a GS is based on the idea of Cocke-Younger-Kasemi algorithm.",
        "For a seguence of simple translation schemes of the type string-string the algorithm is presented in Suchomel [7] .",
        "The difference between the upper boundary of the time complexity of the full synthesis and analysis is given by the asymmetric property of a GS.",
        "Remark to Assertion 3.",
        "The basic idea of the proof is a construction of a new GS to GS1.",
        "The new GS, denoted GS2, has full information in the alphabets for a straightforward algorithm for a full synthesis.",
        "Remark to Assertion 4.",
        "The idea of the proof is analogous to that of Assertion 3.",
        "When we have a partition of Dom(TR(GSl)) in the clases of synonymous sentences, the function of minimal synthesis chooses always only one representant of his class.",
        "Therefore the algorithm can be so fast.",
        "Conclusion remarks.",
        "When formulating a grammar for natural language, we can use with advantage the modularity of GS.",
        "We have shown that the time complexity of the analysis and synthesis for DR4,j?....",
        "2 is independent on j.",
        "Otherwise the explicative power of D1Wis increasing with j.",
        "We have also shown, that to any generative °system there can be con - structed an h-morphic generative system with the full information for a fast algorithm of the minimal synthesis."
      ]
    },
    {
      "heading": "References.",
      "text": []
    }
  ]
}
