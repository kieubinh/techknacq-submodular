{
  "info": {
    "authors": [
      "Hidekl Yasukawa"
    ],
    "book": "International Conference on Computational Linguistics and Annual Meeting of the Association for Computational Linguistics",
    "id": "acl-P84-1074",
    "title": "LFG System in Prolog",
    "url": "https://aclweb.org/anthology/P84-1074",
    "year": 1984
  },
  "references": [],
  "sections": [
    {
      "text": [
        "girl handed the baby a toy\" (Maplan,Dresnan 82])."
      ]
    },
    {
      "heading": "ABSTRACT",
      "text": [
        "In order to design and maintain a large scale grammar, the formal system for representing syntactic knowledge Should be provided.",
        "Lexical Functional Grammar (LFG) (Kaplan,Bresnan 82] is a powerful formalism for that purpose.",
        "In this paper, the Prolog implementation of LFG system is described.",
        "Prolog provides a good tools for the implementation of LFG.",
        "LFG can be translated into DCG [Pereira,Uarren 80] and functional structures (f-structures) are generated during the parsing process."
      ]
    },
    {
      "heading": "I INTRODUCTIOU",
      "text": [
        "The fundamental purposes of syntactic analysis are to check the grammaticality and to clarify the mapping between semantic structures and syntactic constituents.",
        "DCG provides tools for fulfilling these purposes.",
        "But, due to the fact that the arbitrary Prolog programs can be embedded into DCG rules, the grammar becomes too complicated to understand, debug and maintain.",
        "So, the development of the formal system to represent syntactic knowledges is needed.",
        "The main concern is to define the appropriate set of the descriptive primitives used to represent the syntactic knowledges.",
        "LP G seems to be promising formalism from current linguistic theories which satisfies these requirements.",
        "LFG is adopted for our preliminary version of the formal system and the Prolog implementation of LFG is described in this paper."
      ]
    },
    {
      "heading": "II SIITLE OVERVIEW OF LFG",
      "text": [
        "In this section, the simple overview of LFG is described (See [Eaplan,Sresnan 82] for details ).",
        "LFG is an e:ftention of context free Grammar (CM) and has two-levels of representation, i.e. c-structures (constituent structures) and f-structures (functional structures).",
        "A c-structure is generated by CFG and represents the surface word and phrase configurations in a sentence, and the f-structure is generated by the functional equations associated with the grammar rules and represents the configuration of the surface qraamatical functions.",
        "Fig.",
        "1 shows the 0-structure and f-structure for the sentence \"a",
        "As shown in Fig. 1, f-structure 13 a hierarchical structure constructed by the pairs of attribute and its value.",
        "An attribute represents grammatical function or syntactic feature.",
        "Lexical entries specify a direct mapping between semantic arguments and configurations of surface grammatical functions, and grammar rules specify a direct mapping between these surface grammatical functions and particular constituent structure configurations.",
        "To represent these grammatical relations, several devices and schemata are provided in LFG as shown below.",
        "(a) meta variables (i) & (immediate dominance) (ii) 11â– & 4.",
        "(bounded dominance) (b) functional notations a designator (I' subj) indicates the value of the \"subj\" attribute of the mother node's f-structure.",
        "(0) Equational schema (i) = (functional equation) (ii) E (set inclusion)",
        "(d) Constraining schema (i) =c (ecuational constraint) (ii) d (existential constraint) where d is a designator (iii) negation of (i) and (ii)",
        "F4- 2 shows the example Grammar rules and lexical entries in LFG, which Generate the c-structure and the f-structure in Fig. 1.",
        "1. s -> np vp (t subj)wi Tr.+ 2. np -> det n",
        "As shown in Fig. 2, the primitives to represent grammatical relations are encoded in wraLmar rules and lexical entries.",
        "Each syntactic node has its own f-structure and the partial value of the f-structure is defined by the Equational scheza.",
        "For example, the functional equation \"(7 subj)=+\" associated with the daughter \"np\" node of _ram...ar rule 1. of Fig. 2 specifies that the value of the t'subj\" attribute of the f-structure of the mother \"sif node is the f-structure of its dau.",
        ":;hter \"np\" node.",
        "The value constraints on the f-structure are specified by the Constraining schexa.1:oreover, the Gramaticality of the sentence is defined by the three conditions shown below.",
        "(1) Uniqueness: a particular attribute may have at .x)st one value in a Given f-structure.",
        "(2) Conpleteness: a f-structure must contain all the Governable zramuatical functions Governed by ita predicate.",
        "(3) Coherence: all the Governable Grammatical faactions that a f-structure contain must be Governed by its predicates."
      ]
    },
    {
      "heading": "III LIPLENENTATION OF L70 pnmarms",
      "text": [
        "As indicated in section II, two distinct schemata are employed in the constructions of f-structures.",
        "In the current implementation, f-structures are Generated during the parsing process hy executing the functional equations and set inclusions associated with each syntactic node.",
        "After the parsing is done, the f-structures ars cheched whether their value assignments are consistent with the value constraints on them.",
        "The Completeness condition on grammaticality is also checked after the parsing.",
        "The 1.7.; primitives are realized by the Prolog programs and embedded into the DCG rules.",
        "The Equational schema is executed during the parsing process by the execution of DCG rules.",
        "The functional equation can be seen as the extension of the unification of Prolog by introducing equality on f-structures."
      ]
    },
    {
      "heading": "A. Representations of Data Types",
      "text": [
        "The primitive data types constructinG f-structures are symbols, semantic predicates, subsidiary f-structures, and sets of symbols, semantic predicates, or f-structures.",
        "In current implementation, these data types are represented 83 follows",
        "1) symbols ==> atom or integer 2) semantic predicates mg> sem(X)",
        "where X is a predicate",
        "3) f-structure =a> Id:Obt",
        "where the \"Id\" is an identifier variable (ID-variable).",
        "Each syntactic node has unique ID-variable which is used to identify its f-structure.",
        "The \"Obt\" is a ordered binary tree each leaf contains the pair of an attribute and its value.",
        "4) set ==> [element1, element2, elementiT) A f-structure can be seen as a partially defined data structure, because its value is partially generated by the Equational schema during the parsing process.",
        "An ordered binary tree, obt for short, is suitable for representing partially defined data.",
        "An obt is a binary tree whose labels are ordered.",
        "A binary tree \"Obt\" is represented by an term of the following form.",
        "Obt = obt(v(Attr,Value),Less,Greater) The \"v(Attr,Value)\" is a leaf node of the tree.",
        "The \"Attr\" is an attribute name and used as the label of the leaf node, and the \"Value\" is its value.",
        "The \"Less\" and \"Greater\" are also binary trees.",
        "The \"Obt\" is ordered when the \"Less\" (\"Greater\") is also ordered and each label of its leaf nodes is less (greater) than the label of \"Obt\",i.e. \"Attr\".",
        "If none of the leaf of a tree is defined, it is represented by a logical variable.",
        "When its label is defined later, the logical variable is instantiated.",
        "The insertion of a label and its value into an obt is done by only one unification, without rewriting the tree.",
        "This is the merit in using an ordered binary tree.",
        "For example, the f-structure for the noun phrase \"a girl\", the value of the \"subj\" in Fig.1 (b), can be graphically represented in Fig. 3.",
        "The \"Vin's in Fig. 3 are the variables representing the uninstantiated subtrees."
      ]
    },
    {
      "heading": "B. Functional Notation",
      "text": [
        "The functional notations are represented by ID-variables instead of Meta variables / and i.e. Meta variables must be replaced by the object level variable.",
        "For example, the designator (t subj) associated with the category S, is described as [subj, /dS], where IdS is the 0-variable for S. The meta variables for bounded dominance are represented by the terms controllee(Cat) and controller(Cat), where the \"Cat\" is the name of the syntactic category of the controller or controllee."
      ]
    },
    {
      "heading": "C. Predicates for LFG Primitives",
      "text": [
        "The predicates for each LPG primitives are as follows : (d,d1,d2 are designators, s is a set, and - is a negation symbol)",
        "The \"Old\" and \"New\" are global value assignments.",
        "They are used to propagate the changes of global value assignments made by the execution of each predicate.",
        "The \"OldC\" and \"NewC\" are constraint lists and used to gather all the constraints in the analysis.",
        "Zesides these predicates, the additional predicates are provided for checking a constraints during the parsing process.",
        "They are used to kill the parsing process generating inconsistent result an soon as the inconsistency is found.",
        "The predicate \"equate\" gets the temporary values of the designators d1 and d2, consulting the global value assignments.",
        "Then \"equate\" performs the unification of their values.",
        "The unification i3 similar to set-theoretic union except that it is only defined for sets of nondistinct attributes.",
        "Fig.",
        "4 shows the example trace output of the \"equate\" in the course of analyzing the sentence \"a girl hands the baby a toy\".",
        "In order to keep graamar rules highly understandable, it would be better to hide u..7.necessary data, such as global value assignments or constraint lists.",
        "The macro notations similar to the original notation of LFG are provided to users for that purpose.",
        "The macro expander translates the macro notations into Prolog programs corresponding to the LFG primitives.",
        "The value of the designator Det is spec the The value of the designator :7 is",
        "This macro expansion results in considerable improvement of the writability and the understandability of the grammar.",
        "The syntax of macro notations are",
        "These macro notations for LFG primitives are placed at the third argument of the each predicate in DCG rules corresponding to syntactic categories as shown in Fig. 5 (a), which corresponds to the grammar rule 1. in Fig. 2. s(s(NP,VP),Id-S,[]) --> np(Np,IA_Up,[eq(Csubj,I4_SLIC:Jp]), vp(Vp,Id_Vp,[eq(Id-S,Id-VO)]).",
        "(a) The DCG rule with macro for LFG s(s(Np,Vp),/d_S,Old,New,01dC,NewC) --> np(Np,IA_Np,Old,Old1,01dC,OldC1), fequate([subj,Id_SLId_Up,Old1,01d2)}, vp(Vp,Id_Vp,01d2,01d3,01dC1,NewC), (equate(IeLS,Id_Vp,01d3,New)}.",
        "(b) The result of macro expansion Fig. 5 Example DCG rule for LFG analysis The variables \"Id_S\", \"Id_Np\", and \"Id_Vp\" are the ID-variables for each syntactic category.",
        "For example, the grammar rule in Fig. 5 (a) is translated into the one shown in Si;.",
        "5 (b).",
        "nacre descriptions are translated into the corresponding predicate in the case of a grammar rule.",
        "In the case of a lexical entry, macro descriptions are translated into the corresponding predicate, which is executed further more and the f-structure of the lexical entry is generated.",
        "D. Issues on the Implementation Though f-structures are constructed during the parsing process, the execution of the Equational schema is independent of the parsing",
        "strategy.",
        "This is necessary to keep the grammar rules highly declarative.",
        "There are some advantages of using Prolog in implementing LFG.",
        "First, the Uniqueness condition on a f-structure is fulfilled by the original unification of Prolog.",
        "Second, an ordered binary tree is a good data structure for representing a f-structure.",
        "The use of an ordered binary tree reduces the processing time by 30 percents compared with the case using a list for representing a f-structure.",
        "And third, the use of ID-variable also effective, because the sharing of a f-structure can be done only by one unification of the corresponding ID-variables.",
        "Though the computational complexity of the :quational schema is very expensive, the LFG provides expressive and natural account for linguistic evidence.",
        "In order to overcome the inefficiency, the introduction of parallel or concurrent execution mechanism seems to be a promising approach.",
        "The computation model of LFG is similar to the constraint model of computation [Steele 803.",
        "The Proles implementation of LFG by Reyle and Frey [Reyle,Frey 83] aimed at more direct translation of functional equations into DCG.",
        "Although their implementation is more efficient, it does not treat the Constraining schema, set inclusions, the compound functional equation such as (^ vcomp subj), and the bounded dominance.",
        "And their grammar rules seem to be too complex by direct encoding of f-structures into them.",
        "In order to provide an formal system having powerful description capabilities for representing syntactic knowledges, the more LFG primitives are realized than their implementation and the grammar rules are more understandable and can be more easily modified in my implementation.",
        "TV.",
        "THI RESULT OF AN EXPEREENT Fiz.",
        "6 shows the result of analyzing the sentence \"the girl persuaded the baby to go\".",
        "LFG system is written in Dec-10 Prolog [Pereira,et.al.",
        "73] and executed on Dec 2060.",
        "As shown in Fig. 6, the functional control [Iaplan,Bresnan 82] is realized in the f-structure of vp.",
        "The value of the \"subj\" attribute of the \"vcomp\" is functionally controlled by the \"obj\" of the f-structure of the \"s\" node.",
        "The time used far syntactic analysis includes the time consumed by parsind process and the time consumed by 2quational schema.",
        "V. concLusion The Prolos implementation of LFG is described.",
        "It is the first step of the formal nystem for representing syntactic knowledges.",
        "As a :esult, it becomes quite obvious that Prolog is suitable for implementing 1.70.",
        "Further research on the formal system will be carried by analyzin.",
        ": the wider variety of actual utterances to emtract the more primitives necessary for the analyses, and to ;ive the neceszary scLemata for those"
      ]
    },
    {
      "heading": "VI/. ACICIOTILEDGENENTS",
      "text": [
        "The author is thankful to Dr. K. Furukawa, the chief of the second research laboratory of ICOT Research Center, and the members of the natural language processing group in ICOT Research Center, both for their discussion.",
        "The author is grateful to Dr. K. Fuchi, Director of the ICOT Research Center, for providing the opportunity to conduct this research.",
        "VII/.",
        "REFERENCES"
      ]
    }
  ]
}
