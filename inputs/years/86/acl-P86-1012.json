{
  "info": {
    "authors": [
      "Joyce Friedman",
      "Ramarathnam Venkatesan"
    ],
    "book": "Annual Meeting of the Association for Computational Linguistics",
    "id": "acl-P86-1012",
    "title": "Categorial and Non-Categorial Languages",
    "url": "https://aclweb.org/anthology/P86-1012",
    "year": 1986
  },
  "references": [
    "acl-P83-1002"
  ],
  "sections": [
    {
      "heading": "CATEGORIAL AND NON-CATEGORIAL LANGUAGES",
      "text": [
        "We study the formal and linguistic properties of a class of parenthesis-free categorial grammars derived from those of Ades and Steed-man by varying the set of reduction rules.",
        "We characterize the reduction rules capable of generating context-sensitive languages as those having a partial combination rule and a combination rule in the reverse direction.",
        "We show that any categorial language is a permutation of some context-free language.",
        "thus inheriting properties dependent on symbol counting only.",
        "We compare some of their properties with other contemporary formalisms."
      ]
    },
    {
      "heading": "INTRODUCTION",
      "text": [
        "Categorial grammars have recently been the topic of renewed interest, stemming in part from their use as the underlying formalism in Montague grammar.",
        "While the original categorial grammars were early shown to be equivalent to context-free grammars, 1, 2, 3 modifications to the formalism have led to systems both more and less powerful than context-free grammars.",
        "Motivated by linguistic considerations, Ades and Steedman4 introduced categorial grammars with some additional cancellation rules.",
        "Full cancellation rules correspond to application of functions to arguments.",
        "Their partial cancellation rules correspond to functional composition.",
        "The new backward combination rule is motivated by the need to treat preposed elements.",
        "They also modified the formalism by making category symbols parenthesis-free, treating them in general as governed by a convention of association to the left, but violating this convention in certain of the rules.",
        "This treatment of categorial grammar suggests a family of categorial systems, differing in the set of cancellation rules that are allowed.",
        "Earlier, we began a study of the mathematical properties of that family of systems,5 showing that some members are fully equivalent to context-free grammars, while others yield only a subset of the context-free languages, or a superset of them.",
        "In this paper we continue with these investigations.",
        "We characterize the rule systems that can obtain context sensitive languages, and compare the sets of categorial languages with the context-free languages.",
        "Finally, we discuss the linguistic relevance of these results, and ( ompare categorial grammars with TAG systems in 1 his regard."
      ]
    },
    {
      "heading": "PRELIMINARIES",
      "text": [
        "A categorial grammar under a set R of reduction rules is a quadruple CGR (VT, VA, S,F ), whose elements are defined as follows: VT is a finite set of morphemes.",
        "VA is a finite set of atomic category symbols.",
        "S EVA is a distinguished element of VA. To define F, we must first define CA , the set of category symbols.",
        "CA is given by: i) if A EVA , then A ECA; ii) if X E CA and A E VA, then X IA E CA; and iii) nothing else is in CA .",
        "F is the lexicon, a function from VT to 2\" such that for every a E VT, F (a) is finite.",
        "We often write CGR to denote a categorial grammar with rule set R, when the elements of the quadruple are known.",
        "Notation: Morphemes are denoted by a, b; morpheme strings by u,v,w.",
        "The symbols S,A,B,C denote atomic category symbols, and U. V, X,Y denote arbitrary (complex) category symbols.",
        "Complex category symbols whose leftmost symbol is S (symbols \"headed\" by S) are denoted by X5, Y5.",
        "Strings of category symbols are denoted by z, y.",
        "The language of a categorial grammar is determined in part by the set R of reduction rules.",
        "This set can include any subset of the following five rules.",
        "In each statement, A E VA, and U/A,A/U,A/V,VIA E CA.",
        "(1) (F Rule) The string of category symbols U IA A can be replaced by U.",
        "We write: U /A A -\"U; (2) (FP Rule) The string U /A A IV can be replaced by U IV .",
        "We write: U /A A/V IV; (3) (B Rule) The string A U /A can be replaced by U.",
        "We write: A U /A U ; (4) (Bs Rule) Same as B rule, except that U is headed by S. (5) (BP Rule) The string A IU V /A can be replaced by V /U.",
        "We write: A /U V /A -*V IU",
        "If X Y ---*Z by the F-rule , XY is called an F -redex .",
        "Similarly, for the other four rules.",
        "Any one of them may simply be called a redex.",
        "The reduction relation determined by a subset of these rules is denoted by => and defined by: if X Y 0 Z by one of the rules of R, then for any a, 13 in CA* aX Y 13 >od B.",
        "The reflexive and transitive closure of the relation -> is =>*.",
        "A morpheme string w =w 2 • • w. is accepted by CGR (VT, VA,S,F) if there is a category string x = X 1X2 • X„ such that X, EF (w, ) for each 1l,2, • n, and x => * S. The language L (CGR) accepted by CGR (VT, VA, S, F) is the set of all morpheme strings that are accepted."
      ]
    },
    {
      "heading": "I. NON-CONTEXT-FREE CATEGORIAL",
      "text": [
        "LANGUAGES In this section we present a characterization theorem for the categorial systems that generate only context-free languages.",
        "First, we introduce a lexicon FEQ that we will show has the property that for any choice R of metarules any string in L (CGR) has equal numbers of a , b, and c. We define the lexicon FEo as FEQ (a) = IA I, FEci (b)= {B}, FEQ (C) = {C /A /C /B , CID}, FEQ (d)= ID 1, FEQ (e ) = {S /A /C /B1.",
        "We will also make use of two languages on the alphabet (ct , b, c, d, e) Li= {a\" db c\" I n 1 }, and LEO = ftV I #a #b = #c 1, #d = #e = 1I.",
        "A lemma shows that with any set R of rules the lexicon FEo yields a subset of LEQ -",
        "w = w 1...wr, be a corresponding morpheme string.",
        "To differentiate between the occurrence of a symbol as a head and otherwise, write C /A /C /B = CA-1C -1B-1.",
        "S IA /C /B = SA 'C-1B-1 and CID = CD-1.",
        "For any rule system R, a redex is two adjacent categories, the tail of one matching the head of the other, and is reduced to a single category after cancelling the matching symbols.",
        "Since all occurrences of A must cancel to yield a reduction to S, #A = #21-1.",
        "This holds for all atomic categories except S, for which #S #S -1+1.",
        "This lexicon has the property that any derivable category symbol, either has exactly one S and is S - headed or does not have an occurrence of S. Hence in x, #S = 1, i.e., w has exactly one e. Let the number of occurrences in x of C /A /C /B and C ID be p and q respectively.",
        "It follows that #C = p +q, #C1 p +1.",
        "Hence q = 1 and w has exactly one d. Each occurrence of C/A /C /B introduces one A' and B-1.",
        "Since w has one e, #A-1 = #13-1 = p +1.",
        "Hence #A = #B = p +1.",
        "Since for each A ,B and C in x there must be exactly one a ,b and c, #a = #b = #c. 0 We show next that in the restricted case where R contains only the two rules FP and Bs , the language L is obtained.",
        "Lemma 2 Let CGR be the categorial grammar with lexicon FEo and rule set R (FP ,Bs}.",
        "Then",
        "any x having a parse must have exactly one e. Further, all b 's and c 's can appear only on the left and right of e respectively.",
        "Any derivable category having an A has the form S /(A 11 where U does not have any A.",
        "Thus all As appear consecutively on the left of the e .",
        "For the rightmost c, F (c)= C /D .",
        "Ad must be in between a 's and b's. By lemma 1, # (a ) = # (b)= # (c).",
        "Thus x = a c/b4 ec' , for some n .",
        "Hence Li= L (CGR).",
        "0 The next lemma shows that no language intermediate to L and LEO can be context-free.",
        "It really does not involve categorial grammar at all.",
        "Lemma 3 If LiCL CLEg, then L is not context-free.",
        "Proof Suppose L is context-free.",
        "Since L contains Li, it has arbitrarily long strings of the form a\" b db\" e c\".",
        "Let k and K be pumping lemma constants.",
        "Choose n >max(K ,k).",
        "This string, if pumped, yields a string not in LEO, hence we have a contradiction.",
        "0 Corollary Let {FP ,Bs )CR.",
        "Then there is a non-context-free language L (CGR)• Proof Use the lexicon FEo .",
        "Then by lemma 1 L (CGR)CLEQ.",
        "But {FP ,Bs}CR , so LiCL (CGR).",
        "The following theorem summarizes the results by characterizing the rule sets that can be used to generate context sensitive languages.",
        "Main Theorem A categorial system with rule set R can generate a context-sensitive language if and only if R contains a partial combination rule and a combination rule in the reverse direction.",
        "Proof The \"if\" part follows for {FP ,Bs iby lemmas 1, 2, and 3.",
        "It follows for {BP ,F) by symmetry.",
        "For the \"only if\" part, first note that any unidirectional system (system with rules that are all forward, or all backward) can generate only context-free languages.",
        "The only remaining cases are IF ,B) and {FP ,BP).",
        "The first generates only context free languages.",
        "The second generates only the empty language, since no atomic symbol can be derived using only these two rules."
      ]
    },
    {
      "heading": "II. CATEGORIAL LANGUAGES ARE PERMUTATIONS OF CONTEXT-FREE LANGUAGES",
      "text": [
        "Let VT = (a 1,a2 • - ' ,a I.",
        "A Parikh mappine It is a mapping from morpheme strings to vectors such that '4r(w) = (#a 1,4\" 2, • • • , #ak).",
        "u is a permutation of v iff If(u) '(v).",
        "Let ‘11(L)= ('11(w) I w EL).",
        "A language L is a permutation of L if ) = llf(L ).",
        "We define a rotation as follows.",
        "In the parse tree for u EL, at any node corresponding to a B redex or BP -redex exchange its left and right subtrees, obtaining an F-redex or an FP -redex.",
        "Let v the resulting terminal string.",
        "We say that u has been transformed into v by rotation.",
        "We now obtain results that are helpful in showing that certain languages cannot be generated by categorial grammars.",
        "First we show that, every categorial language is a permutation of a context free language.",
        "This will enable us to show that properties of context-free languages that depend only on the symbol counts must also hold of categorial languages.",
        "Theorem Let R (F, FP, B, BPI.",
        "Then there exists a LcE such that Alr(L (CGR )) 111(LcE ), where Lep- is context free.",
        "Proof Let x EL (CGR).",
        "In its parse tree at each node corresponding to a B-redex or a BP-redex perform a rotation, so that it becomes a F-redex or a FP -redex.",
        "Since the transformed string y is obtained by rearranging the parse tree, 111(x ) = 11(y).",
        "Also y derivable using R = {FP ,F) only.",
        "Hence the set of such y obtained as a permutation of some x is the same as L (CGR,), which is context free,5 i.e., L (CGR) LcE .",
        "0",
        "Corollary For any R g IF, FP, B, BP), L (CGR) is semilinear , Parikh bounded and has the linear growth property.",
        "Semilinearity follows from Parikh's Lemma and linear growth from the pumping lemma for context-free languages.",
        "Parikh boundedness follows from the fact that any context-free language is Parikh bounded.6 0 Proposition Any one-symbol categorial grammar is regular.",
        "Note that if L is a semilinear subset of nonnegative integers, Ian In EL I is regular.",
        "III.",
        "NON-CATEGORIAL LANGUAGES We now exhibit some non-categorial languages and compare categorial languages with others.",
        "From the corollary of the previous section we have the following results.",
        "Theorem Categorial languages are properly contained in the context-sensitive languages.",
        "Proof The languages {a h (\") I n ), where h (n )=n2 or h (n )=2n which do not have linear growth rate, are not generated by any CGR .",
        "These are context sensitive.",
        "Also lam bn I either m > n , or m is prime and n ‘,rn and m is prime } is not semilinear 7 and hence not categorial.",
        "It is interesting to note that lexical functional grammar can generate the first two languages mentioned above8 and indexed languages can generate (an bn2an Linguistic Properties We now look at some languages that exhibit cross-serial dependencies.",
        "similar to that of lemma 1.",
        "First #c = #d = 1, from #S = 1.",
        "Since we have Bs rule, c occurs on the left of d and all occurrences of a and b on the left of c get assigned A and B respectively.",
        "Similarly all a and b on the right of c, get assigned to the complex category as defined by F. It follows that all symbols to the right of d get combined by FP rule and those on the left by Bs rule.",
        "Hence a symbol occurring n symbols to the right of d must be matched by an occurrence n symbols to the right of the leftmost symbol.",
        "for any k. Note that #A, = #A, #b, = #a.",
        "The rest of the argument L3 above .",
        "Thus IFP, Bs ) has the unbounded cross-serial dependencies.",
        "Now we can compare with Tree Adjoining Grammars (TAG).8 A TAG without local constraints cannot generate L3.",
        "A TAG with local constraints can generate this, but it cannot generate L6= (a 'n bn crn (in I rn ,n L4(2) can be transformed into L6 by the homomorphism erasing cl,d and e. TAG languages are closed under homomorphisms and thus the categorial language L4(2) is not a TAG language.",
        "TAG languages exhibit only limited cross serial dependencies.",
        "Thus, though TAG Languages and CG languages share some properties like linear growth, semilinearity, generation of all context-free languages, limited context sensitive power, and Parikh boundedness, they are different in their generative capacities.",
        "Acknowledgements We would like to thank Weiguo Wang and Dawei Dai for helpful discussions."
      ]
    }
  ]
}
