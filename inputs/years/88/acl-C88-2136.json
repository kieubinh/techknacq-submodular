{
  "info": {
    "authors": [
      "Takenobu Tokunaga",
      "Makoto Iwayama",
      "Hozumi Tanaka",
      "Kamiwaki Tadashi"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C88-2136",
    "title": "LangLAB: A Natural Language Analysis System",
    "url": "https://aclweb.org/anthology/C88-2136",
    "year": 1988
  },
  "references": [
    "acl-C86-1001"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper presents a natural language analysia system LangLAB based on BUP-XG which parses with a bottom-up and depth-first strategy and has ability to handle left (DCG) extraposition.",
        "We have already developed a grammar formalism XGS, which is a superset of DCG, With XGS, left extraposition phenomena is naturally expressed in grammar rules.",
        "We have also optimized BUP-XG clauses.",
        "Experiments showed that in comparison to the original BUP-XG system, the analysis sped up 10 times in the interpretor mode and 4 times in the compiled mode.",
        "The TRIE structured dictionary in Lang-LAB requires less memory, provides faster dictionary reference and also handles complicated idioms with versatility.",
        "Consequently, the utilization of LangLAB for practical purposes has become feasible."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "So far, several grammar formalism based on logic programming paradigm such as Metamorphosis Grammar [2] and DCG [9] have been presented.",
        "In Metamorphosis Grammar, each grammar rule is translated into a Horn Clause, and the Prolog interpreter parses the input sentence with these Horn Clause using a top-down and depth-tett strategy.",
        "Batlike in the past where parsers had to be constructed for syntactic analysis, in this method, we do not have to because the Prolog interprel er itself works as one.",
        "Metamorphosis Gra.rumar also provides a natural language processing method which interleaves syntactic analysis and semantic analysis.",
        "This is a desirable feature from the point of view of cognitive science.",
        "following Metamorphosis Grammar, Pereira et al., developed a grammar formalism called Clituse Gram-mar(DCG) and loaxtraposition Gralliniar()CG) [8].",
        "The grammar rules written in DCG are also translated into a Prolog program and the Prolog interpreter works as a top-down and depth-first parser interleaving syntax analysis and semantic analysis.",
        "XG is the extended version of DCG ea, liable of handling left extraposition.",
        "flow:wet, top-down parser have a problem that the program 'Salle into the infinite loop when a left recursive rule appears in the grammar rules.",
        "This problem can be solved by either translating grammar rules with left recursive rules into ones without left recursive rules or by using a bottom-op parsing a tlategy.",
        "Since the former solution id ay give 101110,11LO parsing results, the latter.",
        "is preferable.",
        ".Matsumoto of Electrotechnical laboratory developed a system in 'which the grammar rules written ht.",
        ":)CG are translated into Fiona clauses celled BOP clauses and Prolog irderpreter works trs a bottom-up and depth-first parser for these tulles [14].",
        "Matsumoto's system is called the.",
        "BUP system.",
        "'the BUP system cast handle left Lnellt siva rules treat grammar rules and the dictionary separately.",
        "Konno of Tokyo Institute of Technology extended the IMP system to 113U1-'--XG system 151 which can handle the left extra.position phenomena elegantly.",
        "BUP–XG system introduced the grammar description form called XGS (Ex-traposition Grammar with Slash Category).",
        "'Phis paper presents a natural language analysis system LangL.A.B based oat Konno's system.",
        "Figure I. shows the structure of the LangLAB system.",
        "Users should prepare grammar rules written in XGS and a dictionary written in DCG.",
        "Both grammar rules and a dictionary are translated into BUP–XG clauses and '1‘11,Dt; structured dictionary respectively by translators.",
        "Translated results are consulted by the Prolog system and the Prolog interpreter works as a parser.",
        "In chapter 2, we briefly explain the fund.ioneutala of the IMP system and the gra.nemar description form XGS adopted in LangLAB.",
        "We will also describe IRIP–X.G traria--Latin which translates the grammar written in 1KGS into BLIP..X.G clause and its optimizations.",
        "In chapter 3, we will touch on the 'rim structured dictionary adopted ill Thragit.A.B.",
        "'Plf,IE structured dictionary requires less neon-ory and provides faster dictionary reference and provides flexible idiom handling.",
        "In chapter 4, we shall present results of experiments verifying the effect of the optimization described in chapter 2.",
        "Experiments showed that the analysis sped up 110 times in the interpretive mode and 4 times in the compiled mode.",
        "The authors believe that 1,angbAll performs well enough to be of practical use."
      ]
    },
    {
      "heading": "2 XGS and BUP---XG",
      "text": [
        "In this chapter, we shall explain the grammar description form XGS adopted in LangLAB and the BUP-XG translator which translates grammar rules written in XGS into the BUP-XG clauses.",
        "Before explaining BUP--XG, we will briefly explain the mechanism of the BUP system, the predecessor of BIJP--XG.",
        "Basic parsing mechanism of BUP is left-corner parsing with top-down prediction."
      ]
    },
    {
      "heading": "2.1 I3UP system",
      "text": [
        "In BUP system, grammar rules written in DCG (Figure 2) are translated into the rules called BUP clauses which are also of DCC format and some Prolog program (link clauses and termination clauses : explained •ater).",
        "Figure 3 shows results of the translation.",
        "These BUP clauses are then translated into a Prolog program (Figure 4) by the DCC translator which is embedded in the Prolog system.",
        "Two more arguments are added to each predicate which denotes nonterminal symbol in figure 4.",
        "These arguments constitutes a difference list which represents the input string.",
        "With the special predicate goal which is necessary for bottom up parsing, this Prolog program can parse the input string with a bottom-up and depth-first strategy.",
        "Figure 5 shows the definition of the predicate goal.",
        "N ow, we shall give a step by step explanation of the parsing algorithm of the RUP system.",
        "We will use the grammar shown in figure 4 and input sentence \"you walk\" as an example.",
        "Calling the predicate goal activates the parsing process:",
        "This calling checks to see if : A parse tree the root of which is the category \"s\", can be constructed from the input string denoted by the difference between the list [you, walk] and the list [ ] ([you, walk] in this example).",
        "The first call of goal invokes the clause (g-1) in the figure 5.",
        "The clause (g-1) checks to see if the same analysis have been made before, to avoid recomputation using the information previously asserted as wf_goal and fail_goal.",
        "As the execution of the clause (g-1) fails in this case, the system chooses the next clause (g-2).",
        "In the body of the clause (g-2), the system consults the dictionary by calling \"dict (C, [you, walk] ,Y)\".",
        "This predicate call picks (p-3) in figure 4 and the system matches \"pron\" with variable C and \"[walk]\" with variable Y.",
        "In the second line of (g-2), the system calls the predicate link to see if the category which is obtained by the previous dictionary consultation (\"pron\" in this example) can be left-corner of the current goal (\"s\" in this example).",
        "The link clauses are calculated by the BUP translator.",
        "Suppose this test succeeds, the system calls the predicate \"pron\" :",
        "Calling \"pron(s , [walk] , )\" invokes (p-2).",
        "Then, the system executes its body that is, \"npfs , [walk] , )\".",
        "Calling \"np (s , [walk] , )\" invokes the clause (p-1).",
        "After calling the predicate link to check a Teachability from \"np\" to \"s\", the system invokes \"goal (vp, [walk] , 0)\".",
        "At this point, the system has analyzed the string \"you\" as \"np\" and is predicting that the trailing string \"walk\" should be bundled up to the category \"vp\".",
        "In the same manner, a bottom-up analysis with a top-down prediction proceeds until the execution of goal with the termination clauses succeeds.",
        "See [14] for the detail of the termination clauses.",
        "Results once succeeded or failed in an analysis are asserted as wf_goal in the end of (g-2) and fail_goal in the clause (g•3) respectively.",
        "This information is used in (g-1) as described."
      ]
    },
    {
      "heading": "2.2 130P-XG system",
      "text": [
        "The embedded sentence which appears in relative clauses in English can be viewed as a structure in which a noun phrase is missing from declarative sentence.",
        "A gap is formed as a result of moving the antecedent from within the declarative sentence to the left of the relative clause.",
        "Linguists call such phenomena \"Left extraposition\".",
        "By considering the gap left by the moved constituents as a \"trace\", and incorporating a mechanism that looks for such a \"trace\" automatically, the number of grammar rules can be decreased and the grammar rules become easier to read.",
        "Moreover incorporating such mechanism contributes to making analysis speed faster.",
        "Top-down parsers like ATNG [13], [12] and XG [8] incorporate such a mechanism.",
        "The top-down parser can predict what category the trailing input string may be bundled up to.",
        "Efficient trace searching is possible as the system assumes the existence of traces only when a particular category is predicted as a goal.",
        "A pure bottom-up parser is not capable of such predictions and inefficiency results because of the necessity to assume the existence of a trace between every two words.",
        "However, since the B1JP system incorporates top-down prediction in the bottom-up parsing strategy described in 2.1, it is possible to implement the mechanism to look for the traces efficiently.",
        "IConno developed a BUP--XG system which incorporated such a mechanism [5].",
        "The XGS adopted in LangLAB provides grammar writers the facility with which left extraposition can be naturally expressed in grammar rules.",
        "Figure 6 shows a small English grammar which is written in XGS.",
        "The notation \" (called \"slash\") in the rule (x-3) is introduced hi.",
        "XGS.",
        "This rule means that there exists the syntactic category \"np\" which dominates the \"trace\" under the syntactic category \"s_rel\" (\"s_rel\" means relative sentence).",
        "This idea is influenced by the \"slash category\" in GPSG [3].",
        "We call the category after \"..1\" \" slash category\".",
        "Rule (x.73) also shows that the category \"np\" consists of the categories \"det\", \"noun\" and \"s.rel\" and that the trace left behind by the left extraposition of the noun phrase consisting of \"det\" and \"noun\" is dominated by \"s.iel\".",
        "During an analysis, when the system finds the trace under \"s_xer, as shown in figure 7, its associates the trace in the embedded sentence with the moved phrase (\"the man\").",
        "XGS also provides a notation to represent \"Ross's Complex NP constraint\" [10].",
        "Following is an example of this notation.",
        "This notation is called \"open (<)\" and \"close (-)\" following Pereira [8].",
        "position.",
        "This example says that the movement from under \"b\" or \"c\" to the outside of \"a\" is permissible, but the movement from under \"d\" to the outside of \"a\" is not.",
        "Sentences violating \"Ross's Complex Np constraint\" are rejected by modifying (x-3) to become (x-3') np – > det, noun, <s_rel.. /np>.",
        "(x•3') With (x-,3' ) , the trace which is dominated by slash category \"np\" under \"s_rel\" can only correspond to the noun phrase which consists of \"det\" and \"noun\".",
        "In addition, XGS also provides a double arrow notation and the notation to describe X lists (explained later) explicitly.",
        "With these notation, \"coordinate structure\" can be represented in a natural way (see [5])."
      ]
    },
    {
      "heading": "2.3 BUT'--XG translator",
      "text": [
        "just like the RUP system, the grammar rules written in XGS are translated into BUP-XG clauses, link clauses and termination clauses by the BIJP-XG translator.",
        "The BUP-XG translator in the LangLAB system has been improved so as to generate BUP--XG clauses more optimized than that in the original BUP-XG system.",
        "Furthermore, it is also equipped with a new function which inserts parse tree information automatically.",
        "The translator takes about three seconds to translate a grammar of about 200 rules.",
        "The following subsection explains these improvements."
      ]
    },
    {
      "heading": "2.3.1 Representation of link clauses",
      "text": [
        "As the number of grammar rules increases, more link clauses are generated by the translator.",
        "For example, from about 200 grammar rules of English which we have developed, the BUP-XG translator generates about 700 link clauses.",
        "Shortening the search time of link clauses would contribute to an efficient analysis.",
        "Link clauses are called in the body of BUP-XG clauses and in the predicate goal.",
        "Since both the arguments of link are atoms in the both cases, a link",
        "which denotes the reachablity from the category \"a\" to \"b\" can be change to the form"
      ]
    },
    {
      "heading": "2.3.2 Indexes for difference list",
      "text": [
        "As described in subsection 2.1 input string are represented by a difference list and intermediate analysis results are asserted with the predicate wf goal and fail...goal.",
        "Since the last two arguments of the vvf_goal constitutes a difference list of the input string, the longer the input string becomes, the mare memory wtgoal consumes.",
        "Fly indexing difference lists, the amount of memory required.",
        "is reduced, and faster reference to intermediate results is possible.",
        "For example, when the system gets the input string \"you walk\", the predicates text are asserted as follows",
        "`Iflie dictionary reference program gets a difference list by calling text with indexes (sit,s2,...) as the key, before consulting the dictionary."
      ]
    },
    {
      "heading": "2.3.3 Representation of intermediate results",
      "text": [
        "Generally, a long input string gives rise to more wtgoals and faiLgoals which results in longer search time for intermediate analysis results.",
        "Wtgoals and faiLgoals have as their arguments, the index to the difference list denoting the partial input string, and its analysis.",
        "As described in 2.1, goal first consults wigoals and faiLgoals with the indexes of input string as the key.",
        "In LangLAB system, the predicate names of intermediate analysis result are the indexes to the difference list instead of \"wf_goal\" or \"faiLgoal\".",
        "This modification reduces the search space of the intermediate analysis results and speeds up the analysis process."
      ]
    },
    {
      "heading": "2.3.4 Insertion of parse tree information",
      "text": [
        "Users sometimes require the results of syntactic analysis to be expressed as parse trees, and in both the BUP system and the original BUP--XG system, users are required to insert an argument in each category to accommodate parse tree information.",
        "However, it is not a difficult task to snake the translator insert this information automatically.",
        "hi the BIJP–XG translator of LangLAB, this information is inserted automatically unless instructed otherwise.",
        "This function is similar to the one in the McCord's MLG(Modular Logic Grammar) [7].",
        "However, unlike MLG, all the nonterminal symbols can be a node of parse trees."
      ]
    },
    {
      "heading": "2.3.5 Example of translation",
      "text": [
        "Figure 8 shows the BITP---XG clauses translated from the grammar in figure 6.",
        "The variables beginning with \"X\" in the figure .8 are introduced to handle left'extraposition.",
        "This variable is called X list (extrapOsition list) which were introduced in X.G [8].",
        "information pertaining to slash categories is pushed into the X list and is then transferred.",
        "from category to category during the analysis process.",
        "The predicate gottLx is an extended version of the predicate goal in the BUT system, which pops up the slash category from the X list when the trace is round.",
        "Note that variables for parse tree information, the names of winch begin with \"T\", are automatically inserted and that the representation of link information (in braces) is also modified.",
        "np(Goal, [Ti] „Int o X0 „ X1 ,X1t) -'->",
        "sip (Goal s, [np ,T1] ] o X0 9 X1t) diet (Goal, [T1] ,Info ,X0,X1.,X1t) -->",
        "This chapter explains the TRIE structured dictionary, smother extension to the system and the BTIP system.",
        "The TRIE structured dictionary requires less memory, provides faster dictionary reference and flexible idiom handling,"
      ]
    },
    {
      "heading": "3.1 DUE structure",
      "text": [
        "The name \"TRIE\" is taken from \"reTRIEval\" [1] and it means a kind of tree structure.",
        "A dictionary written in MG is translated into a TIM structured dictionary by the TREE dictionary translator.",
        "The TRIE structure is a tupple which has three elements, that is \"word\", \"information for word(s)\" and \"its child TRIE structure\".",
        "For example, the dictionary written in DCG shown in figure 9 would be translated to the TRIE structured dictionary shown in figure 10.",
        "To look, up a TRIE structured dictionary, the dictionary reference program searches through the tree snatching the input string with the first element of the TEE structure and, information for the string of input is retrieved only after the last word of the input string is matched.",
        "Actually, the translator bundles up tile dictionary entries which has the same first word into a clause (see how the entries \"get\", \"get OR\" and \"get up\" are translated in figure 10).",
        "By using this structure for the dictionary, the system can avoid the",
        "the entry denoted by the first argnment or \"r:pf\" (hr this case, a pointer to the olary \"get\").",
        "Dictionary entries the, litre i1 of which only diffeirs irOin each other partially, e„g„ the root hpni COtlj tigatod form of an iireguloa verb, Cali 14',1; written .ion this lai1.1111C1!.",
        "The second argtinient of tire structure \"r:ef\" is 1110 rerential inlinmation between this entry (\"got\" or \"gotten') and_ 11w en fry pointed to by the first argument of \"f:ed\".",
        "this exarytire, feature 'VI' 1:W81118 'verb form\" and it;; v,dae \"ed\" and \"en\" means brit and \"past pacticiple' respectively, With such a description, users do not have to write additional -..diem 010,1108 Which include the conjugated form 1)10'r:1-,gulkt.)",
        "verbs, In the rar,:t fe1:0:110;C verbs, since 00)(1- jougated Ibrum are processed by tile tut orpholot;leal analysis program bnitt in the dictionary reference program, idiom e,atr.ies -,111(1-fit include the 1...onjulgated 101'1m are not necessary.",
        "0 _':ample, users do not hayo to wr.ite the idiom entry \"kicked bucket\", the entry \"kick the bucket' is written.",
        "ftlititu .",
        "',tax cfliko.g with 'IT, 1.1; stokuitt.",
        "structured dictionary 0011 include Prolog pro• grants to check 8000 constraints RIM ,,y:triactic categories in its 'wo.c,.1\" position (first element of tnpple).",
        "This feature akus it p,risible to handi the 0111611.1 on-fto olettomts suet.",
        "\"ntA only but also – 0 in the 13'1)1' system and, the system, the system regards such idioms as two-eleinent word, that is a prefix terminal part t:0101 a folltwing nowterrilinal part.",
        "The former part t in the dictionary and the latte1 part is ittainied in the tcrantwar risks, 1angi,.A11 the `11.1,-Ili structured dictionary is able to handle all snelt idioms as the dictionary entries, '1110 idiom entries which include non-frozen elements such as shown \"not only but also ,s,\" can be written as lignie 1 1,",
        "igine It; Sample dictionary with nonterminal Syn.",
        "013 ail() programs in the rule body iic-ta , 0 ,",
        "And ligutO 11 is the result of the translation.",
        "ht the case of DOG, as the idiom entry such as figure 11 is usually handled as a grammar rule, the number of grammar rules increases and inefficiency of analysis process results.",
        "It is preferable to Ie grammar rules and.",
        "dictionary entries Sep uately, As shown fit figure 12, the translator converts the Prolog programs in the dictionary entry \"{-join(Npl ,42,11-it) into Lice form \"(JOin(Npl.,111p2,11p))\".",
        "The dictionary ref-orence program calls the program enclosed by parenthesis when it encounters such a form.",
        "In the same way, the syntactic category in the dictionary entries such as \"np \" are converted into the list the first element of which is a, category name and the rest of which are arguments of the category ( lop ).",
        "The dictionary reference program calls the predicate goal (goal(op, [AO , X ,Y)) such a 1)1110.",
        "The TRIE structured dictionary enables the LangLAll system to handle idioms with versatility [4]."
      ]
    },
    {
      "heading": "4 PorionillgYit Ohl sid erat",
      "text": [
        "We conducted experiments to verify the effect of optimization of 1301'- .XG clauses.",
        "We measured the tilw!",
        "for syntactic analysis of ten sample sentences.",
        "The experiment environment ;2 0.8 follows:",
        "sample sentence.",
        "This analysis does not include morphological analysis.",
        "Table 1 is the result of the experiment in the interpretive mode and table 2 is' he one in the compiled mode.",
        "The fourth and the fifth column of the table is the time to analyze the sentence in the original BUP-XG system and in the LangLAB system respectively.",
        "Time is shown in millisecond.",
        "Results showed that in comparison to the original BAIP-XG system, the analysis sped up 10 times in the interpretive mode and 4 times in the compiled mode.",
        "The optimization is less effective in the compiled mode than in the interpretive mode.",
        "However, this optimization is practical because debugging is usually done in the interpretive mode.",
        "We believe that LangLAB has the capacity for practical use.",
        "There is a related work SAX [6] by Matsumoto.",
        "SAX is also a parsing system based on logic programming, 'but its parsing strategy is bottom-up and breadth-first.",
        "Okunishi of ICOT reports that LangLAB is 6 - 10 times faster than SAX in the interpretive mode.",
        "However, in the compiled mode, SAX is 6 - 16 times faster than LangLAB [11].",
        "SAX has still yet to be modified to handle idioms.",
        "If this modification is introduced, debugging can be done on LangLAB in the interpretive mode and the debugged grammar can be executed on SAX in the compiled mode."
      ]
    },
    {
      "heading": "Conclusion",
      "text": [
        "We have made the following modification to the original",
        "• Optimized and enhanced translated code a Adopted TRIE structured dictionary",
        "With these modifications, the analysis sped up in comparison to the original BUP-XG system and flexible idiom handling became possible.",
        "We believe that LangLAB has become a more powerful and practical tool for natural language processing.",
        "We plan to develop a natural language processing system which includes semantic analysis, based on LangLAB."
      ]
    }
  ]
}
