{
  "info": {
    "authors": [
      "Wilhelm Weisweber"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C88-2151",
    "title": "Using Constraints in a Constructive Version of GPSG",
    "url": "https://aclweb.org/anthology/C88-2151",
    "year": 1988
  },
  "references": [
    "acl-C86-1016",
    "acl-C86-1050",
    "acl-C88-1017",
    "acl-P85-1010",
    "acl-P86-1006"
  ],
  "sections": [
    {
      "text": [
        "problems in using the indirect method are described.",
        "Suppose ID rule (2) is to be translated into equivalent context-free rules.",
        "In order to do that, all permutations of the daughters have to be computed and the LP-consistency of the resulting sequences has to be proved.",
        "Thus the possible candidates for context-free rules are the following: (2a) ((b,X,_) ---> (e,*,1)(d,X,3)) and (2b) ((b,X,_) --) (d,X,3)(e,*,1)) To prove the LP-consistency of (2a), (C1 C2) must not be an element of LP+, where C1 (d,X,3) and C2 E (e,*,1).",
        "If such an element exists, the sequence of daughters in (2a) is not LP consistent and has to be rejected.",
        "The only candidate from LP+ is (2), but it cannot be applied because (d,X,3), and so (2a) is a valid context-free rule.",
        "But when X is instantiated with '-' later on during processing, the local tree t1 which is licensed by (2a) has to be rejected because it violates the transitive LP statement (2).",
        "The same problem arises when the direct method is used.",
        "Suppose the string 'e ct cm' is to be analysed.",
        "After the terminal symbol 'e has been read, it is reduced to This category can be dominated in ID rule (2) b,cause (e,_,_) and (e,*,1) are unifiable.",
        "Then 'd' is read and reduced to (d,_,_) which can also be dominated in ID rule (2) and it is unifiable with (d,X,3).",
        "Now the daughters of ID rule (2) are complete and before they can be reduced to the mother category (b,X,1), the LP-consistency of the sequence '(e,*,1)(d,X ' as above has to be proved.",
        "For the above mentioned reason this sequence is LP-consistent and is reduced to (b,X,1).",
        "This category can be dominated in ID rule (1) and up to this point the following partial tree t2 can be constructed.",
        "Every local tree in the partial tree t2 is LP-consistent.",
        "Now the terminal symbol 'cm is read and reduced to (c,-,_).",
        "This category is unifiable with (c,X,2) in t2 and the local tree licensed by a lexical rule can be added to t2.",
        "When the two categories are unified 7, the variable X is instantiated with '-' everywhere in t2.",
        "The result is that the sequence of daughters '(e,*,1)(d,-,3).",
        "is not LP-consistent anymore, because now it violates the transitive LP statement (2).",
        "If instead the next input symbol after the string 'e d' is 'cp', no problems with the LP-consistency arise."
      ]
    },
    {
      "heading": "2.3 FCR Specific Problems",
      "text": [
        "Similar problems like those with the LPconsistency appear when the FCRs are applied to the categories of a local tree.",
        "Suppose that 7 In the constructive version of GPSG, unification is used for tree formation.",
        "In the version of [GICPS85] the root category R of a subtree has to be identical with a daughter category C of a local tree (i.e. R cC and Cc R).",
        "the partial tree t2 has already been constructed.",
        "All of its categories are legal.",
        "Suppose that the next input symbol after the string 'e d' is 'cp'.",
        "This terminal symbol is reduced to (c,+,_) which can be unified with (c,X,2) in t2 and the variable X is instantiated with '+'.",
        "Thus all variables X in t2 have to be replaced by '+' and the category (d,X,3) becomes (d,+,3).",
        "Now FCR 2 is applicable because (d,+,3) is an extension of the condition category (d,+,_) ((d,+,_) (d,+,3)), but it is not unifiable with the consequence category (_,_,2) (-,((d,+,3) (_,_,2))) and thus it is not legal and has to be rejected."
      ]
    },
    {
      "heading": "2.4 Two Possible Solutions",
      "text": [
        "According to [Keller87.1, the problems described in the sections 2.2 and 2.3 can he solved in two ways.",
        "One way would be to check the LP-consistency of all local trees and the legality of all categories after the entire tree for the input string has been constructed.",
        "The other way would be to restrict the grammar format and/or the FlPs.",
        "The disadvantage of the former solution is its inefficency.",
        "The checks have to be done in addition after the processing of the input string is terminated because some trees have not already been rejected, although it would have been possible to do so.",
        "The disadvantage of the latter solution is made obvious by two examples.",
        "The format of the categories, for example, can be restricted by assuring that the mother category in a local tree is fully specified, i.e. a feature must not have a variable as its value.",
        "This would involve a loss of the grammar's descriptive power.",
        "Another way would be to restrict the FIPs by assuring that they don't propagate variable feature values, which would involve GPSG losing some of its generality."
      ]
    },
    {
      "heading": "3 Constraints",
      "text": [
        "In both cases (LP-consistency and legality) the problems are caused by categories of local trees which are not extensions of the categories in the LP statements or of the condition categories in the FCRs, but which have been unifiable with them.",
        "This is the case when a feature of a category of the local tree has a variable as its value and the same feature value is specified in the corresponding category of the LP statements or the FCRs.",
        "This fact means that the LP statements or the FCRs are not locally applicable in some cases, and so the admissibility of the local trees can only be assured with certain constraints which can be fulfilled later on, when the variable is instantiated during processing."
      ]
    },
    {
      "heading": "3.1 Computing Constraints from LP",
      "text": [
        "To compute the constraints resulting from the LP statements, the above mentioned cases have to be first identified.",
        "Suppose that the sequence 'A B' of categories is to be checked for LP-consistency and an LP statement B'< A' exists where B Li B' and B' B and A' E A.",
        "This LP statement is not applicable to 'A B' because B' tJ B, though B' U 13.",
        "This means that at least one feature f exists, where spec(B'(f)) and -,spec(B(f)).",
        "Thus the sequence 'A B' is LP741"
      ]
    },
    {
      "heading": "Abstract",
      "text": [
        "Complex categories are caracteristic of unification grammars as for example GPSG (Shielier86a].",
        "They are sets of pairs of features and values.",
        "The unification, which can be applied to two or more categories, is the essential operation.",
        "The papers of [Shieber85], [Barton85] and [Ristad86] deal with the influence of complex categories on the efficiency of the parsing algorithm.",
        "This is one problem from using complex categories, another one arises when using a constructive version of GPSG (see [Busemann/Hauenschild88] in this volume).",
        "Namely that the application of admissibility conditions, e.g. LP statements and FCRs 1, to a local tree t is prevented because particular feature values of categories in t are not yet specified, but they will be instantiated later somewhere else in the complete tree.",
        "Similar problems are described in [Karttunen86] for D-PATR.",
        "This work describes the latter problem and will present a solution working with computation, evaluation and propagation of constraints within local trees (depth 1).",
        "The constraint evaluation will reject local trees if the constraints of the subtrees of the daughters are violated.",
        "schild/Busemann88], [Keller87], [Busemann87] and [Weisweber87]).",
        "The reader's familarity with the fundamental knowledge of GPSG as presented in [GICPS85] will be assumed."
      ]
    },
    {
      "heading": "1.1 The Grammar Format",
      "text": [
        "The ID/LP format of the grammar allows the explicit formulation of generalizations about the partial order of the daughters of the ID rules via LP statements.",
        "ID rules are tuples of the form ((mother) (daughters)), for example (S (NP, VP)), where (daughters) is a multi-set of categories which can be dominated by the category (mother).",
        "Lexical rules are of the form ((mother) 4 (wordform)).",
        "LP statements are of the form '(categoryi) < (category,)', for example the LP statement NP < VP requires that the category NP must precede the category VP in a sequence of daughters of any local tree licensed by an ID rule of the grammar.",
        "For every grammar a set F = (f1, f2, fn) of syntactic features"
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "First of all some fundamentals of a constructive version of GPSG1 which has been developed within the projects KIT-NASEV and its2V{,-} successor KIT-FAST 2 will be described (for details see [Hauen-3BAR(0,1,2)",
        "Understanding) as well as its predecessor KIT-NASEV (NASEV = Netie Analyse und Syntheseverfahren zur maschinellen Obersetzung = New Methods of Analysis and Synthesis for Machine Translation) constitute the Berlin component of the complementary research project of EUROTRA-D, which receiveta grants by the Federal Minister for Research and Technology under contraet 1013211.",
        "The category C = [+N,-V,BAR 2,nom] will be represented as (+,-,2,X,_,nom).",
        "C is the category traditionally called a nominative NP.",
        "If a feature wine of",
        "/ a category is not specified, like PER and PLU in C, it will be noted as d variable 3.",
        "The value of t feature f, of 3 A variable feature value will be noted as a capital letter (e.g. X, Y, Z) when the same variable value is needed at another place, otherwise it will be noted as '_",
        "consistent under the constraint that B(f) o B'(f) for all features fi with the above mentioned condition, and since all values B(f,) for those features f, are variables enspec(B(f,))), they must not be instantiated with the values BV,) which are already specified.",
        "When the values B(f) are instantiated by the FlPs or by the FCRs in the local tree, there is no problem in determining the admissibility.",
        "But when the variable feature values B(fi) are propagated to the mother by the FIPs, they can possibly be instantiated in another local tree and those variable values B(f) have to be constrained.",
        "Computing the set of constraints LPc When the LP-consistency of a sequence of daughters in a local tree t is checked for every pair of daughters q, CI, where 1 i <j n, the set LPc(i,j) of LP constraints is computed as follows:",
        "LPc(i,j) is a set of tuples (V,,Vp) of feature values.",
        "V, is the variable feature value of a category of a local tree.",
        "VP is the specified feature value of the LP statement which will become applicable to the corresponding daughters of the subtree if the values V, of all tuples in LPc(i,j) are specified and equal to their corresponding values V. In this case the subtree has to be rejected.",
        "The set of all LP constraints LPc(0) for the 'local tree in which q, is the mother category is",
        "where eval_lp(LPc(i)) is the evaluation of the LP constraints of the subtree in which the daughter q is the root category.",
        "The set of LP constraints of a projection of a lexical rule is LP(0) = ( ), since lexical rules have only one daughter (a wordform).",
        "The evaluation 'eval lp' The evaluation 'eval_lp' is either defined or undefined (.1.).",
        "If it is undefined, the corresponding local tree is rejected, because one of the subwees of the daughters of that local tree is not LP-consistent.",
        "The first case (1) means that if one set C of tuples exists in the set LPc(i) of one daughter of the local tree, where all values of all tuples are specified and equal, then an LP statement will be applicable somewhere in the subVree of this daughter, and it will reject the subtree because some sister categories in the subtree are not LP consistent anymore.",
        "The second case (2) removes all sets S of tuples from LPc(i) of one daughter which include one tuple with two different specified values.",
        "This means that the LP statement which has caused the computation of S will not be applicable anymore.",
        "The third case (3) removes all tuples with two equally specified values from all sets of tuples in LPc(i) of one daughter, because they need not be evaluated for a second time."
      ]
    },
    {
      "heading": "3.2 Computing Constraints from FCRs",
      "text": [
        "To compute constraints resulting from FCRs, the categories have to be identified which are not an extension of a condition category of an FCR, but unifiable with it.",
        "Suppose that the FCRs are to be applied to the category C, and that an FCR (n, A B) exists where A U C and A $ C. The FCR n is not applicable to C. This may change if a feature value is instantiated.",
        "It is the same situation as in section 3.1, but here the computing of constraints is somewhat different, because the application of an FCR to a category may cause that another FCR will become applicable to that category.",
        "FCR constraints only have to be computed when --.",
        "(B U C), or B U C and B C (the case --1(B U C) means that if the FCR will be applicable to C, it will reject C, and the second case means that if the FCR will become applicable to C, it will instantiate one or more features in C, but the category always remains legal with respect to this FCR).",
        "The case --1(B U C) is the crucial one, because the legality of the category C can only be assured with the constraint that the set of possibly applicable FCRs, with the above mentioned conditions on the consequence category, still have to be checked for applicability.",
        "Computing the set of constraints FCRe For all categories q where 0 i n in a local tree t the set APP(i) of all numbers of FCRs which may still be applicable to q is computed as follows:",
        "q is legal and APP(i) = ( } The set of all FCR constraints FCRc(0) for the local tree in which CS is the mother category is",
        "where eval_fer(Fatc(i)) is the evaluation of the FCR constraints from the subtree in which the daughter q is the root category.",
        "FCRc(0) is a set of tuples (C,, APP(i)).",
        "C, is a copy of a categiory of the subtree in which CS is the root category and APP(i) includes the numbers of all FCRs which may still be applied to C, if particular feature values of this category are going to be instantiated.",
        "The only new set APP in a local tree is computed from the mother, because the evaluation of the FCR constraints on the subtrees of the daughters includes the application of the applicable FCRs to the daughter categories (because they are the root categories of the subtrees).",
        "Thus the remaining tuples of the daughters and their subtrees will be computed by the evaluation.",
        "The set of FCR",
        "With the help of this definition we are able to define LP consistency.",
        "Definition: LP-consistency A local tree t is LP-consistent with respect to a grammar with the transitive LP-relation k iff V CbCti: 1 5 ij n A Di precedes",
        "In other words, when a category q precedes a category q in a local tree t, they must not conflict with the transitive LP-relation (q and q must not be extensions of two categories q and q, respectively, where q must precede q).",
        "Now the definition of the admissibility of trees can be given.",
        "Definition: admissibility of trees A tree is admissible iff all of its local trees are admissible.",
        "A local tree is admissible iff it is a projection of a lexical rule or iff it",
        "- is the projection of an ID rule and - satisfies all of the FlPs and - is LP-consistent.",
        "2 LP-Consistency and Legality",
        "The first chapter of this paper illustrates how to build up the syntactic structure (a tree) in the constructive version of GPSG, but it also sketches roughly the way this can generally be done in unification grammars First of all complex categories are assembled to form a local tree and subsequently the feature values of the categories are instantiated by different proCedures (for example in GPSG by the FIPs and in the Lexical Functional Grammar (LFG) described in [Bresnan/Kaplan82] by the evaluation of the f descriptions).",
        "The admissibility of those local trees is determined by some predicates (in GPSG by the LP statements and the FCRs and in LFG by existential constraints with the operator and the negative existential constraints with the special value 'none).",
        "These predicates can only be applied when particular feature values are specified.",
        "But when the admissibility of a local tree is to be proved, it cannot be guaranteed that all feature values have been locally instantiated.",
        "In some cases it is possible that, a feature value is not locally instantiated rather that it is instantiated somewhere else in another local tree belonging to the complete tree and therefore the admissibility of a local tree is not a local matter anymore.",
        "In this chapter the problems which arise from checking the LP consistency and the legality in the constructive version of GPSG are described in the sections 2.2 and 2.3 respectively.",
        "Section 2.4 briefly outlines the two possible solutions proposed by [Keller87].",
        "But first of all a sample grammar is given to be used for examples."
      ]
    },
    {
      "heading": "2.1 A Sample Grammar",
      "text": [
        "To illustrate the problems arising from checking the LP-consistency of a sequence of complex daughter categories and from checking the legality of complex categories of a local tree, a sample grammar is given here.",
        "The set of syntactic features is F = (f1, f2, f3).",
        "A category is a triple",
        "Suppose that the feature f2 is an agreement feature and that a local tree t which is a projection of this ID rule has been constructed, then the Agreement Principle (AP) forces X = Y = Z and therefore the AP has to consider three cases 6:",
        "1) If at least two values are instantiated with different values then the AP has to reject t (the-predicative view of the FIPs which is still preserved in the constructive version of GPSG).",
        "2) If at least one value is instantiated then the other variable values are instantiated with that value by the AP (propagation of instantiated feature values).",
        "3) If all values are not specified, i.e. they are variables, then the AP will identify all values with one variable (propagation of variable feature values).",
        "Whenever an admissible local tree t is a projection of ID rule (1), the values of the feature f2 (X, Y, Z) have to be identical and we can apply case (3) to the local tree t."
      ]
    },
    {
      "heading": "2.2 ID/LP Specific Problems",
      "text": [
        "In this section only LP-consistency is considered and the legality of categories is ignored.",
        "In some cases there are categories of local trees which have feature values not yet specified when the LP consistency has to be checked, and this possibly means that one or more (transitive) LP statements cannot be applied to the given sequence of daughters.",
        "There are two strategies for processing natural language with ID/LP grammars (IDLPG):",
        "constraints on a projection of a lexical rule is FCRc(0)((CS, APP(0))).",
        "The evaluation 'evalier' The evaluation 'eval_fcr.",
        "is either defined or undefined (1).",
        "If it is undefined, the corresponding local tree is rejected, because one or more categories of the subtrees of the daughters of that local tree are not legal.",
        "The first case (1) means that if the set FCRc(i) of a subtree of one daughter Cl includes one tuple (C,APP) in which the category C is not legal with respect to the FCR (k,A D B) where lc is in the set APP of numbers of FCRs, then the Subtree has to be rejected, because the category C in this subtree is no longer legal.",
        "The second case (2) removes all the numbers 'le of FCRs from the set APP of all topics in FCRc(i), where the FCR (k,A D B) is no longer applicable to the category C or where it has been successfully applied to the corresponding category."
      ]
    },
    {
      "heading": "3.3 Evaluation and Propagation",
      "text": [
        "After a local tree t has been proved to be a projection of an ID rule, all FlPs are applied to t, the FCRs to its mother, and the set APP(0) of the numbers of all FCRs which possibly will be applicable to the mother, is computed.",
        "After that the FCR constraints on the subtrees of the daughters are evaluated, which means that all applicable FCRs are applied to the daughters and to all other categories of their subtrees.",
        "The remaining FCR constraints from the evaluation, and the FCR constraint (CS, APP(0)) on the mother, will then be combined to form the new FCR constraint set FCRc(0) on the subtree in which ch is the root category.",
        "The new FCR constraint set is propagated to the mother.",
        "Next the LP-consistency of the daughters has to be checked, and during this check the new LP constraints on the daughters are computed.",
        "These constraints are combined with the LP constraints resulting from the evaluation of the LP constraints on the subtrees of the daughters, to form the entire set of LP constraints LPc(0) on the subtree in which CS is the root category which is then also propagated to the mother."
      ]
    },
    {
      "heading": "4 Conclusion",
      "text": [
        "With this method of constraint computation, evaluation and propagation,' a new definition of the admissibility of trees is necessary.",
        "Definition: admissibility of trees A tree is admissible iff all of its local trees are admissible and the evaluations 'evalice and 'eval_lp' of constraints of the root category are defined and both are the empty set ( ).",
        "A local tree t is admissible iff it is a projection of a lexical rule or iff it",
        "- is a projection of an ID rule with the FCR constraint (CS, APP(0)) on the mother CS and - satisfies all of the FlPs and - is LP-consistent with the LP constraints LPc(i,j) on all daughters q and q which are propagated to the mother where 1 _5 i <j 5_ n and - the evaluation 'eval_fcr(FCRe(i))' of every daughter q is defined where 1 i n and their results are propagated to the mother and - the evaluation 'eval_lp(LPc(i))' of every daughter q is defined where 1 i n and their results are propagated to the mother.",
        "The consequence for the root category R of an entire tree of one input string of a natural language will be the fact that all features fi of R, where --,spec(R(fi)), and where fi is needed for the evaluation of the constraints of the tree, have to be instantiated according to their domain D(f1) because such a tree represents a class of ambiguous solutions.",
        "After that the constraints on every tree of this class are evaluated and only the trees where FCR,(0) and LPc(0) are defined and their evaluation is ( ) are admissible."
      ]
    },
    {
      "heading": "References",
      "text": [
        "the category C can be expressed with C(f,), e.g. C(CAS) = nom or C(PER) = X.",
        "It is possible that a feature can have a category as its value, e.g.",
        "SLASH.",
        "In the following some predicates on feature values are used.",
        "They are 'spec', 'atom' and 'cat'.",
        "The semantics of them is as follows: and 'B' is the consequence category.",
        "This FCR is applicable to a category C if C is an extension of A and, if so, C has to be unifiable with B.",
        "If C and B are not unifiable the category C is not legal.",
        "Definition: legal spec(C(f))C(f) is specified either with an atom or a category",
        "The FCRs in the constructive version of GPSG are not only predicates on categories, they are also modified to become more functional by instantiating variable feature values if necessary.",
        "FCRs are implications of the form (n, A D B).",
        "'n' is the number of this FCR, 'A' is the condition category for the application of this FCR 4 In the following they, are called FIPs.",
        "The FlPs are the Foot Feature Principle (HP), the Agreement Principle (AP) and the Head Feature Convention (HFC).",
        "For detailed discussion of the Ms see [Busemann87), (Rauenschild/ Busemann88I and [Weisweber87].",
        "5'v','t.4' andare the logical operators 'and', 'or', 'not', 'equivalence' and 'implication', respectively.",
        "A category C is legal a V (n,A 13) FCR: (A C) v(AgC ABU C) If the FCRs are applied to the category C and an FCR (n, A D B) is applicable to C and the consequence category B is unifiable with C and at least one feature f exists where --Ispec(C(0) and spec(B(f)) (B C), then all those values C(f) are instantiated with B(f) (C(f) := 13(f)).",
        "The FCRs have to be applied to a category C until no feature values of C are instantiated by them any longer, because the instantiation may cause other FCRs to be applicable."
      ]
    },
    {
      "heading": "1.3 The Admissibility of Trees",
      "text": [
        "To generate syntactic structures (trees) during analysis or synthesis, ID rules are mapped into local trees in which all categories are legal.",
        "This mapping is called a projection.",
        "Definition: projection The projection 11) c ID x LT is a relation from the set ID of ID rules to the set LT of local trees.",
        "A tuple (r,t) is an element of el) ((r,t) (1)) where r = (r', Co(C1,CO) and t= iff it meets the condition (1)(c) = q with 0 5 i,j n where the total one-to-one, onto function (1) maps the set (Co,C) of categories of the ID rule r' into the set {q,,C) of categories of the local"
      ]
    }
  ]
}
