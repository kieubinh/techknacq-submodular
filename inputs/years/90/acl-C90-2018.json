{
  "info": {
    "authors": [
      "Jochen Dorre",
      "Andreas Eisele"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C90-2018",
    "title": "Feature Logic With Disjunctive Unification",
    "url": "https://aclweb.org/anthology/C90-2018",
    "year": 1990
  },
  "references": [
    "acl-P84-1008",
    "acl-P86-1038",
    "acl-P87-1033",
    "acl-P88-1035"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We introduce feature terms containing sorts, variables, negation and named disjunction for the specification of feature structures.",
        "We show that the possibility to label disjunctions with names has major advantages both for the use of feature logic in computational linguistics and its implementation.",
        "We give an open world semantics for feature terms, where the denotation of a term is determined in dependence on the disjunctive context, i.e. the choices taken for the disjunctions.",
        "We define context-unique feature descriptions, a relational, constraint-based representation language and give a normalization procedure that allows to test consistency of feature terms.",
        "This procedure does not only avoid expansion to disjunctive normal form but maintains also structure sharing between information contained in different disjuncts as much as possible.",
        "Context-unique feature descriptions can be easily implemented in environments that support ordinary unification (such as Pn.ohtpG)."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": []
    },
    {
      "heading": "1.1. Ambiguity in Natural Language",
      "text": [
        "Our use of language mirrors our intellectual capacities, which are as yet my no means understood.",
        "As long as we can not formally describe the processes involved in thinking and understanding, formal descriptions of human language have to be rough approximations.",
        "One particular instance of this general fact is the problem of disambiguation of human utterances.",
        "Since our use of words fits our capabilities of understanding their meaning, context and intent, systems that do not have such capabilities can, at best, produce sets of possible analyses.",
        "It is well known that such sets can be very large in practice.",
        "Ambiguity in natural language is fed by a couple of sources, including lexical ambiguity, where differing analyses are possible for a given word concerning its part of speech, subcategorization for complements, morphological features, or any other information assigned to it, and structural ambiguity introduced by different possible groupings or interpretations of phrases or different interrelations between them with respect to subcategoriza.tion, meaning, pragmatics etc.",
        "On each level, a. bunch of possibilities exist, which could potentially multiply to an enormous space of combinations.",
        "However, these possibilities interact and restrict each other in such a way, that taking it all together only a few (hopefully exactly one) interpretations remain."
      ]
    },
    {
      "heading": "1.2 tJnification-Based Formalisms",
      "text": [
        "For about a decade, many formal theories of natural language have tried to describe their subject in terms of so called feature structures, i.e. potentially nested bundels of features that are assigned to words and phrases.",
        "These structures are sometimes seen as abstract linguistic objects, which are described using a suitable description language, sometimes they are given a concrete shape in form of finite automatons and regarded themselves as descriptions of the linguistic objects [Kasper/Rounds 86].",
        "Despite such differences in interpretation, there is a consensus among the the-ones that linguistic descriptions should provide constraints concerning feature structures and that a set of such constraints gives a. partial description of the feature structures associated with a phrase.",
        "A set of constraints defines a minimal model, i.e. a minimal structure satisfying all constraints in the set.",
        "The union of two sets of constraints not contradicting each other leads to a minimal model which is the least common extension of the models of both sets.",
        "Such in common extensions can be constructed by unification of the given models, hence the term unification-based formalisms.",
        "dThere is also a consensus among feature-based theories that.",
        "ambiguity should be describod with disjunctive formulas, and most formalisms offer ways to specify them.",
        "If disjunction is present, there is usually a finite number of minimal models instead of only one.",
        "However, until now, die was such disjunctive specifications have been processed computationally was not quite satisfactory.",
        "An enumeration of the possibilities using a backtracking scheme or a chart, which corresponds to an expansion to disjunctive Bonne!",
        "form in the underlying logic, often leads to computational inefficiency.",
        "Approaches to improve the situation both in terms of the logic and the implementation (see e.g. [Karttunen 8,1, Kasper 87, Eisele/DOrre 88, Maxwell/Kaplan 89]) can be subdivided in those assuming disjunctive values for features and those allowing for more general forms of disjunction.",
        "Roughly, we can state that formalisms and implementations that provide value disjunction can be implemented inure easily amid more efficiently, since they can exploit the fact that disjunctive information for a certain feat 1117C has no effect on other features (as long as disjunctive information does not interact with path equivalences, see [Eisele/DOrre 88]).",
        "li the restriction to value disjunction decreases the expressive power of the formalism, since disjunctions concerning chi.",
        "ferent features Insist be stated on a higher level.",
        "Schemes providing for general disjunction allow for a more compact representation of such cases.",
        "But if disjunctive information is not local to single features, the interaction between different parts of the description is more difficult to handle (see e.g. [Kasper 87]).",
        "The method we propose coin hines advantages of both approaches.",
        "It can be seen as a generalization of value disjunction, which allows for a concise description of disjunction concerning more than one feature or path.",
        "It can also be seen as an efficient implementation of general disjunction which allows to exploit the locality of disjunctive information whenever this is possible."
      ]
    },
    {
      "heading": "2 Feature Terms",
      "text": []
    },
    {
      "heading": "2.1 Disjunction Names",
      "text": [
        "The background of our approach is the simple observation that general disjunction affecting more than one feature can be reduced to value disjunction for those features, provided that the correspondence between such disjunctions can be expressed within the formalism.",
        "In order to state such correspondences, we will label disjunctions with a disjunction name.",
        "Take, for instance, the formula (1) that could be used",
        "to express that the directional reading of the german preposition \"in\" (=into) corresponds to the accusative case of the following noun phrase, whereas the static reading (=in) corresponds to the dative case.",
        "This can also be expressed by (2), where the index d1 at the disjunction sign indicates the mutual dependence of both disjunctions.",
        "Throughout this paper, we will assume that each disjunction is labelled with a name.",
        "Even in cases where a disjunction appears only once in the initial description, naming it will help us to treat the interaction between disjunction and path equivalence correctly."
      ]
    },
    {
      "heading": "2.2 Syntax and Semantics of Feature Terms",
      "text": [
        "We incorporate named disjunction into a language of so called feature terms (similar to those in [Smolka 88]), where each feature term describes a set of possible feature structures.",
        "The language allows for the use of sort symbols A, B, C. E S, on which some partial order induces a lower semilattice (i.e. VA, B E S : GLD(A,B) E S).",
        "T and are the greatest and least element of S. We also distinguish a set of singleton sorts (a,b,c... E Sg C S), which include the special sort NONE.",
        "I is the only sort smaller than a singleton sort.",
        "The language provides a set F of feature symbols (written f,g,h,...), an infinite set V of variables (written x,y,z,xi, Pt, ...) to express path equivalence, and an infinite set D of disjunction names (written d, d1, d2, ) S, F, V and D are pairwise disjoint.",
        "Sort symbols and variables can be negated to express negative values and path equivalence (simple negation).",
        "The restriction of negation to sort symbols and variables is not essential, since the negation of any feature term can always be reduced to these forms in linear time [Smolka 88].",
        "Definition 1 (Feature Terms) We define the set FT of feature terms with variables, simple negation and named disjunction by the context-free production rules given in Fig. 1. Letters s, t, ii, ... will always denote feature terms.",
        "The semantics of our terms is defined with respect to an interpretation, which is a pair (U, .7) of a universe of the interpretation and an interpretation function such that: = U and 17 = (11 for all sorts A, B: G LB(A, 13)1 = AI n singleton sorts are mapped onto singleton sets for every feature f: fl is a function UU.",
        "if a is a singleton sort and f is a feature symbol, then f7 maps a7 into NONEE When interpreting a feature term with variables and named disjunctions, we have to make sure that the same value is assigned to each occurrence of a variable and that the same branch is chosen for each occurrence of a named disjunction.",
        "To achieve this, we introduce variable assignments that map variables to elements of the universe and disjunctive contexts that assign to each disjunction name the branch that ha.s to be taken for this disjunction and hence specify a possible interpretation of a formula with named disjunction.",
        "Since we limit ourselves to binary disjunctions, a branch of a disjunction can be specified by one of the symbols 1 or r. Definition 2 (U-Assignment) A II-assignment (1- is an element of UV, i.e. a function from V to 11.",
        "Definition 3 (Context) A context is an element of {1, r}D , i.e. a function from D to the set 11, 7.1.",
        "The symbols etc.",
        "will always denote contexts.",
        "For a given interpretation, we define the denotation of a feature term in a context a E 11,11D under an assignment.",
        "E UV as shown in Fig. 1.",
        "The denotation of a feature term as such is defined by: xE{1,1-}, c<EUV"
      ]
    },
    {
      "heading": "3 Context-Unique Feature Descriptions",
      "text": [
        "To describe the computational mechanisms needed for an implementation, we will introduce a relational language to express constraints over variables.",
        "Unlike similar approaches (e.g. [Stnolka 88]), our constraint language will also be used to express disjunctive information.",
        "For this language, WC vill define a normal form that exhibits inconsistencies, and simplification rules that allow to normalize a given specification.",
        "Our language will provide only two kinds of constraints, One that relates a variable to some feature term (written x It) and one that expresses that certain contexts are excluded from consideration because the information known for them is inconsistent (written .1.[k]).",
        "In order to refer to sets of contexts, we define Definition 4 (Context Descriptions) A context description is a propositional formula where the constant TRUE, variables written cli:1 arid r with d, E D, and the operators A, V and may be employed.",
        "CD will denote the set of context descriptions.",
        "The symbols k, k1 ,... will always denote members of CD.",
        "The set of purely conjunctive context descriptions (not containing the operators.",
        "V andis denoted by CD,.",
        "Each context K satisfies the context description Tau l-: (written K.TRUE ), whereas n H, d: b for b{1,r} only if n(d) = b.",
        "The meaning of context descriptions involving A. V andis defined as in propositional logic.",
        "If a H, k, we will also say that k describes or covers a or that a lies in k. A context description is called contradictory, if no cent iv` satisfies it.",
        "Two context descriptions Id, Id' which are satisfied by exactly the same contexts are called equivalent (written kk' ).",
        "An important form of constraints for our approach are constraints like alai Ud1 a2 which expresses that x and as have to be equal in contexts where k(d1) = 1 and so do a and 52 in contexts where ic(di) r. Such constraints are called bifurcations and al, x2 are called (the (11:1- and di: a-) variants of a.",
        "Assume an additional constraint xi I x3 U52 X41 then 53 will be called the d1:/ A (12:1-variant of x and so on.",
        "Now, instead of accumulating constraints on the variable x which might be effective in different contexts and could interact in complicated ways, we can introduce new variables as variants of x and attach the information to them.",
        "We will sometimes refer to a, variant of a variable a without having a variable name for this variant.",
        "To this end, we will use a special notation xlk to denote the k-variant of a.",
        "Such expressions will be called contested variables.",
        "Definition 5 (Contested Variables) A contested variable is a pair x I k where a V and k E CD.",
        "V. will denote the union of V with the set of contexted variables.",
        "Elements of V, will be written with capital letters X, Y, Z, X1,Y1 To mark the distinction, we will sometimes call the members of V pure variables.",
        "Dimming the normalization of feature descriptions we will sometimes need variable substitution.",
        "If a description contains e.g. a y, where other constraints might express conflicting information about a and y, we want to concentrate this information on one variable (say a) by substituting all occurences of y in other constraints by a.",
        "This could lead to problems when constraints attached to a and p are relevant in different contexts.",
        "One way to treat this situation correctly would be the introduction of conditional substitution (see lillisele/Diirre 90] for details).",
        "The way we choose here is to restrict, the use of variables in such a way that it is always safe to use conventional substitution.",
        "Our trick will be to require that essentially all occurences of a variable a are relevant to the same set of contexts.",
        "We call this condition (defined more precisely below) the context uniqueness of variables.",
        "We will set up the normal form and the rewrite system in such a way, that context-uniqueness of a description is maintained during the simplification process.",
        "(See ]Eisele/DOrre 90] for a more detailed motivation of context-uniqueness).",
        "The set of relevant contexts will be regarded as an inherent and invariant property of variables, and we will introduce a context assignment, i.e. it partial function Con : V CD, that maps each variable in use to a purely conjunctive description of the contexts it is relevant to.",
        "We extend Con to contested variables by defining Con(xjk) Con(s) A k In order to obtain context-unique descriptions, we generalize our feature terms so that they may also contain contested variables.",
        "Definition 6 (Contexted Feature Terms) A contested feature term is built according to definition 1, but where both pore and contested variables may occur.",
        "The set of contested feature terms will be denoted by PT,.",
        "The symbols 5, t,11 may henceforth also denote contested feature terms.",
        "The denotation of a contested feature term in a context e E -(1,01) under an assignment a UV is defined as for usual feature terms by adding:",
        "We can now define the context compatibility of a feature term.",
        "This definition is somewhat technical and the reader can skip it, since our algorithm will produce only context unique descriptions, anyway.",
        "oxo E V, called the root variable oCUC is a set of context-unique constraints which either have the form 1.",
        "[k], where k E CD or XII, where X E Ve, 1E FT,: and ICon(X) oCon is a context assignment tvhich is defined for all variables in CUC The semantics of context-unique feature descriptions m given by time satisfaction relation between variable assignments.'",
        ", contexts and constraints, which is parametrized with a context assignment.",
        "a ,X Itiff is [4, Con(X) or a(X) ,_L[k]ifftk The denotation of a context-unique f-description is:"
      ]
    },
    {
      "heading": "4 Normal Feature Descriptions",
      "text": [
        "One way to eliminate a contested variable (take e.g. x/di:/) from a description is to introduce a bifurcation (a I xi Udi 52) and replace the variable by an appropriate variant (in this case Si).",
        "Analogously, contested variables with more complex context descriptions can be replaced by introducing several bifurcations.",
        "However, it turns out that our representation can be more compact if we allow for the use of contested variables.",
        "But we have to prevent conflicting information from being attached to variants of a variable.",
        "Our normal form will therefore allow the use of contested variables in certain places, but in sonic cases, a pure variable has to be used.",
        "B) 'The following restrictions apply: I.",
        "If 1_[k] and al 1 are in LUG, then Con(a) Ais not contradictory 2, if x I A and all] arc in CUC, then A13 3. if a I a and a I t are in LUG, then ta 4. if x J A and x 43 are in LUG, then ATi and G 1,13(A, B) 5. if x Iand al-13 are in LUG, then A B 6. if x f: Y and I f:Z are in CUC, then Y Z .",
        "if l[k] and 1[0] are in CUC, then k = 8. if a I ai lid X2 and a t are in LUG, then tLi d X2"
      ]
    },
    {
      "heading": "4.1. Simplification Rules for Normalization",
      "text": [
        "For normalization, we have to consider all ways a context unique feature description could fail to be normal, and we have to find an equivalent description that is in (or closer to) normal form.",
        "To this end, we give simplification rules for each possible case.",
        "Since there are many different ways to violate normal form, we get a lot of different rules, but each of them is very simple and their correctness should be easy to see.",
        "The rules are parametrized with the root variable (which should not be substituted away) and with the context assignment, NVIliCh will be extended to new variables during simplification.",
        "To facilitate notation, we use c k: LUG to denote {c} U CUC where LUG is supposed not to contain the constraint c, and CUCx_, denotes LUG with all occurences of it replaced by y.",
        "Also, if we write d: b A k', then k' is supposed not to contain d: b.",
        "The cases we have to handle are grouped in those that treat single non-normal constraints (S) and those that treat interactions between different constraints (M).",
        "There are S-Rules for all forms of constraints which conflict with condition A), i.e. which are of one of the forms",
        "7. it 11 Lid -12, where fti,12) v: V Among the situations in which a contexted variable a/k conflicts with normal form, we have to distinguish several cases.",
        "If k TRuE, then the context description is irrelevant and we can replace xlk by it (Rule Sclb).",
        "Otherwise, if there exists already a bifurcation a I alUdxr, such that k E (1 //AV for some b E {/, r} and k' E CD,, where k' does not contain d : b, then we call replace xlk by the shorter term abik,' (Rule .5,04 If there is a bifurcation it I ,c/ Lij a,- where d does not appear in k, the constraint attached to x/k is distributed over the variables a/ and a,.",
        "(Rule S,..uld).",
        "In order to maintain context-uniqueness, the variables appearing ill the constraint have to be replaced by their respective d: and d:,-variants.",
        "We use 1//c a.s a shorthand for a contex ted feature term, where each variable has been replaced by its k-variant, i.e. z has been replaced by zlk and z'/k' by .z.11(k/ A k) (see also rule (111,,8c), below).",
        "Only if no bifurcation exists for it we have to introduce a new bifurcation (Rule Scule).",
        "We select a disjunction name d from k such that k d:b A k' for some b E r} and k` E CD,, where k' does not contain d : b, we add a bifurcation al as Us a,.",
        "to LUG, where xi and a, are new variables, and we extend Con by mapping a:I to Con(x) A d: 1 and X, to COn(X) A d: r. Now we can replace it/k by at/k'.",
        "The other rules handle equalities by substituting a variable by some other variable, eliminate redundant constraints, handle inconsistencies, or decompose constraints with complex feature terms into a set of simple constraints.",
        "The cases where a pair of constraints violates some of the conditions B1-7 can be treated as for similar non-disjunctive rewrite systems (see [Smolka 88] or [Eisele/DOrre 90]).",
        "Rules M,.1-7 handle those.",
        "When a bifurcation it ailida2 occurs together with some other constraint on a, this could lead to a contradiction with information known about al and x2.",
        "Here, we distinguish three cases.",
        "If the other constraint happens to be a bifurcation x yi Ud 92 with the same disjunction name d, we get equalities between both d: /-variants and both d: r-variants (RuleIf the other constraint is a bifurcation a I yi Ud, 92 with a different disjunction name, then the two disjunctions interact and have to be multiplied out for the variable x (Rule 111,8b).",
        "To this end, four new variables are introduced as variants of it and new bifurcations are installed that link the new variables to those already in use.",
        "Con is extended for the new variables.",
        "In any other case, the constraint attached to x is distributed over both variants, and context descriptions for variables on the right-hand side of the constraint are introduced or adapted as required by context-uniqueness (Rule fli,8c)."
      ]
    },
    {
      "heading": "4.2 Soundness. Completeness and Termination",
      "text": [
        "We can show that our simplification rules constitute an algorithm for the consistency (or unification) problem, which is sound and complete and guaranteed to terminate.",
        "For detailed proofs the reader is referred to [Eisele/DOrre 90].",
        "Below, we give the key intuitions or strategies for the proofs.",
        "Soundness can be seen by inspecting the rules.",
        "Each rule rewrites a clause to one with an equivalent denotation.",
        "To show that the algorithm always finds an answer, we first observe that to every context-unique feature description that is produced during translation or normalization and that is not normal at least one of the rules applies.",
        "When the result of simplification is the single constraint l[k] where P TRuE, this means that the description failed to unify.",
        "In any other case we can construct models from the normal form result, The basic idea is to choose a context n which is not covered by the context description of a constraint l[k] in our formula and 'project' the formula into this context by regarding only those constraints which are relevant to this context, thereby degenerating bifnrcations to nondisjunctive bindings x I y.",
        "This nondisjunctive set of constraints can be made into a model.",
        "In order to prove termination we construct a complexity measure for descriptions (a natural number) which is decreased in every rewrite step (see [Eisele/DOrre 90]).",
        "Here we take advantage of the fact that although there are rules which increase the number of constraints and hence seem to add to complexity, these rules also can be seen as part of an inherently irreversible process, since they distribute information attached to a variable over variables in more specific contexts.",
        "But since the number of disjunction names",
        "where d1# d2 and P1, p2, Zi, 22 are new 2121 Lid 22 SZ Xlt SZ CUE' 4'.3c0,Con 21211-id 22 S.,'& x2Itld:r & CUC where t is not a bifurcation",
        "is limited, the contexts associated to variables can not be arbitrarily specific and hence, this process Must terminate."
      ]
    },
    {
      "heading": "4.3 An Example",
      "text": [
        "Due to lack of space, our example can not demonstrate all capabilities of the formalism, but will concentrate on the treatment of disjunction and the support of structure sharing between different disjuncts.",
        "Assume as initial feature term f : (x n g : IC) n h : ((x Lid y) n i: ti) where tG and tz might.",
        "be themselves complex.",
        "Translation to context unique form will produce the description (so, {xo f : (s Hg t'G) n h : ((x Id:1 Ud y d: r) n i: l'i)},Coni) where tiG and might contain contexted variables if necessary.",
        "Partial normalization then produces x, so soil zlxy I d: r, x,Con2",
        "where the further decomposition of the constraints need not interest us.",
        "Since the bifurcation for z contains contexted variables, it is replaced by zizi Lid zr, 2/ lx/d: 1, zdy/d: r, but the latter two constraints lead to the introduction of bifurcations also for x and y.",
        "Furthermore, the feature constraints on s and z are distributed over their respective variants.",
        "We eventually get:",
        "interact with the information contained in the disjunction.",
        "timized implementation of the translated rewrite system for unification in feature logic with sorts and negation."
      ]
    },
    {
      "heading": "4.4 Algorithmic Considerations",
      "text": [
        "One major advantage of our treatment is its similarity with conventional rewrite systems for feature logic.",
        "Since we perform only conventional substitution of variables (opposed to conditional substitution as in [Maxwell/Kaplan 89], see [Eisele/DOrre 90] for a discussion), our system can be easily implemented in environments providing term unification (PimLoG), or the almost linear solution of the union/find problem could be exploited (see e.g. [Ait-Kaci 84]).",
        "The only essential extension we need concerns the treatment of context descriptions.",
        "A context description contained in a contexted variable is always purely conjunctive.",
        "Hence the necessary operations (comparison with TRUE, locating, adding or deleting a simple conjunct) can each be implemented by one simple list operation.",
        "In the constraint expressing inconsistent contexts (i[k]), k is a disjunction of the inconsistencies found so far (which themselves are purely conjunctive).",
        "This could be also represented in a list of (purely conjunctive) contexts.",
        "However, the exclusion of irrelevant constraints vI 1, where Con(x) is covered by k in _L[k], and the (final) test if k E TRUE involves a bit more propositional calculation.",
        "Since these tests might occur more often than the detection of a new inconsistency, it might be worthwile to use a representation that facilitates the test for entailment.",
        "In any case, the implementation can make use of fast hit-vector operations."
      ]
    },
    {
      "heading": "4.5 Maxwell and Kaplan's Approach",
      "text": [
        "An approach which ours is especially interesting to compare with is the disjunctive constraint satisfaction procedure given in [Maxwell/Kaplan 89], because of the similar representations involved in the two approaches.",
        "They use also disjunction names and contexts to represent disjunctive constraints and propose a general transformation procedure which turns a rewrite system for non-disjunctive constraints into one which handles disjunction of constraints with the use of contexted constraints, having the implicational form (k 0), where is some non-disjunctive constraint.",
        "This is done by replacing every rewrite rule by its \"contexted version\", e.g., 01 A 02 03 is replaced by (k1 01) A (k2 02) A --,k2 01) A (k2 A --,k1 02) A (k1 A k2 03), where kt and k2 are variables for context descriptions.",
        "There are two severe efficiency-critical problems if we want to use the outcome of this translation without further optimization.",
        "First, any rule of the generated form should only apply to a pair of contexted constraints whose contexts are compatible, i.e. ki A k2 is not contradictory.",
        "But now, since context descriptions may include conjunction and negation at any level, this test, itself is an .VP-complete problem, winch has to be solved before every application of a rule.",
        "The second problem concerns substitution.",
        "Consider a rule like x y A (1.",
        "The translation produces a rule in which 45 is rewritten to both (15 and indexed with different context descriptions.",
        "Thus, we cannot simply perform a replacement, but instead, have to make a copy of (D (or at least those parts of el) containing y).",
        "Unfortunately, this prevents also the efficient union/find method to be employed for building equivalence classes for variables instead of actual substitution.",
        "All of bhese problems are avoided if we let the context description :if a contexted constraint depend implicitly on the variables la it through the introduction of context-unique variables.",
        "From this point of view, our method can be seen as an op5 Conclusion To summarize, we have presented a new unification method for the full language of feature logic including variables, sorts and negation which avoids expansion to disjunctive normal form, if possible.",
        "The basic principle is to minimize unnecessary interaction of different disjunctions by keeping them local to those attributes which they specify different values for through the introduction of disjunction names.",
        "With this treatment we avoid exponential explosion in many practical cases.",
        "A precursor of this algorithm [DOrre/Eisele 89] has been implemented and is successfully used in a grammar development environment.",
        "Besides the obvious advantage of increased efficiency, our compact representation of disjunctive information also facilitates the comparison of alternative solutions with common parts, which has been proved to be a very valuable property in our application.",
        "Our algorithm is specified in a completely formalised way as a rewrite system for which a model-theoretic semantics is given.",
        "It may seem that there are a lot of rules, but this can be explained by the following facts: we include a complete reduction from feature terms (like in Kasper/Rounds logic) to feature descriptions (as used in LFG); we handle all different types of constraints, including sorts and negation in one framework; and our rules only involve few primitive operations for which simple and fast implementations exist."
      ]
    }
  ]
}
