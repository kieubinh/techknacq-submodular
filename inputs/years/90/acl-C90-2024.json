{
  "info": {
    "authors": [
      "Damien Genthial",
      "Jacques Courtin",
      "Irene Kowarski"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C90-2024",
    "title": "Contribution of a Category Hierarchy to the Robustness of Syntactic Parsing",
    "url": "https://aclweb.org/anthology/C90-2024",
    "year": 1990
  },
  "references": [
    "acl-C86-1046",
    "acl-C88-1034",
    "acl-J83-3001",
    "acl-J83-3005",
    "acl-P88-1031"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We describe how the use of a hierarchy of lexical categories instead of a simple set of categories leads to the definition of a flexible and precise language for the description of dependency structures.",
        "After specifying the formalism we use to decorate these structures, we present an application aiming to detect and correct errors in a written text.",
        "We outline how the use of the hierarchy improves the manipulation of unknown words."
      ]
    },
    {
      "heading": ".katroduction",
      "text": [
        "The work presented in this paper is part of a more general project which aims towards a complete system for detection and correction of errors in a written text.",
        "Our interest here is the creation of a syntactic-semantic module which builds dependency structures decorated with attribute-pairs lists integrating a mechanism for the inheritance of properties.",
        "We show the contribution of hierarchisation of lexical categories to the construction of syntactical structures."
      ]
    },
    {
      "heading": "2 Construction of dependency structures",
      "text": [
        "Dependency structures are trees which give a description of the structure of a sentence by establishing direct links between the words (or lexical items : the terminal symbols according to constituent grammars).",
        "The idea is that the structure of a phrase can be thought of as a particular word (the head or governor) modified by the other words (the modifiers or dependents).",
        "Dependents can themselves be modified to produce a tree strucure : the governor as root and dependents as his sons.",
        "Complex information (e.g. syntactic functions or semantic relationships) can easily be added on the links of such trees and rules of agreement are conveniently expressed.",
        "For example, in French, the agreement in gender and number betweeen a noun and its determiner and adjectives implies the same gender and number for both the dependents (determiner and adjectives) and their governor (noun).",
        "On the other hand, it is difficult to express phrase properties on dependency structures, because the properties of a phrase governed by a word are not necessarily limited to the properties of the word alone.",
        "In order to describe such structures, we write binary relations in \"governor-dependent\" form.",
        "The formalism proposed by Tesnieres [20] (dependency grammars) is very precise, but all possible arrangements of the dependents of a governor must be described.",
        "In Courtin's work [8], weighted dependency relations are defined, which are well suited to computation, but limited in power of expression.",
        "We have attempted to design a language for the description of dependency structures retaining the precision of grammars, but more appropriate for automatic treatment.",
        "To build these structures, we must be able to determine, for any two words, caracterized by their lexical category : det, noun, verb, ..., which one governs the other.",
        "More generally, given two dependency trees, we must know how to merge them into a unique tree.",
        "We have defined a language based on rewriting rules ; each rule applies to a dependency forest and produces a dependency tree.",
        "A set of such",
        "rules constitutes a dependency grammar, which can be applied to a sentence by means of an interpreter.",
        "This interpreter can be viewed as a tree-transducer.",
        "Example of a simple rule : (the \"--\" begins comments)",
        "This rule applies to any forest which includes a sequence of an N and a V, whose left dependents are only preverbal particles P. It builds a new tree where the N is added as a dependent of the V. The advantage of these rules, compared to simple binary relations, is that it is possible to express the context of each category which appears.",
        "It is thus possible to restrict a governor to one or two dependents only, or to forbid more than one occurrence of a given category,... One can also define linked pairs of binary relations, as for coordination conjunctions :",
        "On the other hand, they present the drawback of the primitive dependency grammars : there must be a rule for almost every pair of lexical categories (LC).",
        "To avoid this problem, we have chosen to use a hierarchy of LCs instead of the usual linear set of LCs.",
        "This hierarchy is a set, partially ordered by the i s – a relation (Figure I).",
        "cnoun xbe xhave verb pastp adj",
        "We can, in this manner, express very general rules like the two given above (NV and N coco) or more specific ones like :",
        "Thanks to is-a(fcnoun, pnounl, N) and is-a((xbe, xhave, verb, pastp}, V) relations, the N_V rule for instance may be applied to all the following pairs of categories :",
        "We can thus define a set of basic categories which describe words in a very specific way, and use these categories for lexical indexing.",
        "The categories can then he grouped in \"metacategories\" according to the structures we want to build.",
        "Finally, we can write the rules which effectively build these structures.",
        "By using this method, we can avoid the usual compromise between a very fine set of LCs (which multiplies morphological ambiguities and syntactic rules ) and a very general set (which multiplies syntactic ambiguities).",
        "We also obtain a fairly robust syntactic parsing : all unknown words are given the most general category (CLS), to which any rule can apply (see §4).",
        "Similar type hierarchies have already been used in work on language semantics to represent the taxonomy of semantic types.",
        "We shall therefore use the same formalism for the representation of syntactic and semantic knowledge.",
        "3.",
        "Type hierarchies and P-terms We have chosen to represent knowledge about words and trees with a unique formalism : terms [2].",
        "`P-terms are case frame structures which permit the description of types (in the sense of classical programming languages such as Pascal), i.e. sets of values.",
        "41 terms are directed graphs (Figure 2) in which nodes are symbols associated to fundamental types (simple types) and arcs are labelled with attribute symbols.",
        "Each node of the graph includes a reference tag which can be used to designate it, thus allowing information to be shared.",
        "Simple types are defined in the signature which is a set partially ordered by the is – a relation.",
        "This order is extended to 'P-terms by the unique operation used to manipulate them : unification [1, 2].",
        "The unification of two simple types is",
        "defined as the set of lower bounds of these two types (in the is – a relation).",
        "sem -> INCEST (agent --> 5; patient 0)) describing respectively two sets ei and e2 of values, then unification of two 9'-terms Li (pi, , P2) describes the set eine2.",
        "To transduction rules we have added expressions which enable us to test and modify 9' terms attached to the trees we are manipulating.",
        "We can thus simultaneously build a syntactic structure (dependency tree) and a semantic structure (9J-term, which also contains morphological and syntactical information).",
        "Example of rules and application : We have two words :",
        "and the rule :"
      ]
    },
    {
      "heading": "ASSfN(2.xub Actions",
      "text": [
        "Unification allows implicit inheritance of properties, and can be efficiently implemented Example of unification : The two T.-terms :",
        "under the condition that the associated signature unifies CANINE and ANIMATE a s CANINE, We can define a set-semantics on simple types [1, 19] ; this semantics can be extended to 9'-terms giving the following interpretation of unification : if p1 and p2 are two 9'-terms The root of the resulting tree is decorated by ;"
      ]
    },
    {
      "heading": ".Applications oa robust parser of French and, syntactical verification",
      "text": [
        "We have implemented on a microcomputer a prototype of the dependency-tree transducer.",
        "This prototype is integrated in a system for detection and correction of errors in a written text as a syntactic filter (Figure 3) .",
        "The prototype uses an algorithm for the application of rules adapted to syntactic-semantic parsing : the text is parsed from left to right ; each time a word is recognized by the morphological parser, it is transmitted to the syntactic module which includes it in the",
        "current state of the analysis.",
        "This state is represented by a list of dependency forests to which the transducer tries to attach the new word, according to the rules.",
        "If part of the entry string is not recognized, it is passed on to the hypothesis-generator which attempts to correct it by means of three techniques (skeleton key [16], phonetics [9], and morphological generation [7]).",
        "The hypotheses are then passed on to the syntactic module which handles them exactly in the same way as morphological ambiguities.",
        "It must be noted that the three modules can function almost simultaneously (pipe-line) and that the hypothesis-generator always transmits something to the syntactic module.",
        "If a word is so ill-formed as to render its correction impossible, the hierarchical structure of categories can be used to transmit the most general possible word, i.e. : U L ( cat => ciLs) .",
        "Any rule can apply to CLS (which is the most general category), so the choice of the rule to be applied is determined only by the context of the unknown word, and this rule will in turn determine which category the word should have had.",
        "after applying the rule N_coco.",
        "The syntactic filter works like a parser but does not take into account agreement in number and gender between words.",
        "A specialized module in charge of verification of these agreements is now being designed.",
        "A prototype of such a module has been implemented in Prolog ; it detects agreement mistakes and can propose corrections by means of a morphological generator.",
        "We are now working on rewriting it in the transducer language.",
        "The main use of the syntactic filter is therefore to validate the lexical category of the hypotheses generated by the lexical corrector by building dependency trees which take into account the semantic information attached to the words.",
        "With the phrase \"sun and moun\" we obtain the following hypotheses for raoun:",
        "where => 0) Each of these hypotheses is considered an interpretation of the unknown word moun.",
        "The rule of coordination is",
        "The rule cannot be applied to mount because a verb is not a N. It can only be applied to the noun moon by unification of the semantic features of moon and sun.",
        "With a phrase such as \"sun and mi z rn\", the hypothesis generator gives for mizrn :",
        "The application of the rule N_coco will give the tree of the figure 4."
      ]
    },
    {
      "heading": "5. Conclusion",
      "text": [
        "The use of a category hierarchy simplifies the writing of the rules and introduces a way of manipulating unknown words which is not part of the mechanisms of the system but which is",
        "integrated in the objects it manipulates.",
        "We can then write rules without thinking about ill-formedness (i.e. it is not necessary to make the rules tolerant because the tolerance is implicit in the system).",
        "The three modules have each been implemented on a microcomputer, we are now working on integrating the three modules and adding the module for agreement verification.",
        "We are also improving the performance of the transducer : - by integrating a factorization technique for the intermediate forests in the form of a graph-structured stack [21[, - by adding a finer control (graph of rule application) precomputed at compilation time."
      ]
    }
  ]
}
