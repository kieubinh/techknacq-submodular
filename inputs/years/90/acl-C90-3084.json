{
  "info": {
    "authors": [
      "Robert J. Kuhns"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C90-3084",
    "title": "A PARLOG Implementation of Government-Binding Theory",
    "url": "https://aclweb.org/anthology/C90-3084",
    "year": 1990
  },
  "references": [
    "acl-C86-1031",
    "acl-C86-1128",
    "acl-J87-1001",
    "acl-P87-1007"
  ],
  "sections": [
    {
      "heading": "ABSTRACT",
      "text": [
        "The purpose of this paper is to report on research on a parallel parser based on the principles and constraints of Government-Binding Theory.",
        "The parser outputs a set of licensing relations, notably thematic or 0-role assignments and antecedent/anaphor and other binding relationships.",
        "The primary goal of the system is as a linguistics tool for exploring concurrency and autonomy among modules of the theory."
      ]
    },
    {
      "heading": "BACKGROUND",
      "text": [
        "Parsers based on Government-Binding (GB) Theory have been the subject of a number of research programmes.' While they all share a common linguistic framework, the design goals and underlying parsing strategies are varied.",
        "Some are tools for evaluating competence and/or performance models of language and others remain neutral with respect to psychological reality.",
        "The parsing engines range from bottom-up to top-down to mix-mode methods and from backtracking to deterministic algorithms.",
        "However, they all approach parsing as a sequential process, and although there have been a number of efforts on parallel parsing (cf. /Huang and Guthrie 1986/, /Matsumoto 1986/, and /Waltz and Pollack 1985/).",
        "few are linguistically-oriented and none are GB-based.",
        "Since GB is a highly modular system of components, development of parallel parsers incorporating the theory allows for a formal examination into the computational aspects of GB-modules and their interfaces.",
        "SCOPE AM) OBJECTIVES In order to explore the relationships between GB-subsystems and their realization in a parallel parser, a development goal is one of modularity in that each GB-module should be transparently encoded.-' This permits investigation of processes within and across GB components to be made explicit.",
        "Since the focus of the parser is on GB principles and since GB itself is a theory of core grammar, the coverage of the parser is restricted to a subset of English that reflects syntactic processes explained by the theory.",
        "While it may be premature to speak of psychologically-real parallel parsers, many of the cognitive presuppositions that are the basis of the work of /Berwick and Weinberg 1984/.",
        "/Marcus 1980/, and /Milne 1983/ have been the motivation for several of the design decisions that have been incorporated in the system.",
        "More specifically, the parser is deterministic and has the capability of delaying certain actions, e.g., projection of nodes and resolution of lexical ambiguity, until more information is available, rather than computing competing parses or backtracking uncontrollably.",
        "These features together with the goal of transparent representation of GB principles should provide a foundation for future research into the cognitive plausibility of parallel parsers."
      ]
    },
    {
      "heading": "AN IMPLEMENTATION NOTE",
      "text": [
        "The parser is being developed in PC-PARLOG' requiring an IBM PC, XT, AT or compatible machine with at least 512Kb of memory and two floppy disk drives or a hard disk.",
        "Although the implementation simulates parallelism by a timesharing scheduler, the parser runs on a single processor machine and, therefore, lacks true parallelism.",
        "However, insofar as the purpose of the parser is to specify concurrency of GB-subsystems at a high level of abstraction, the :analyses are in terms of computational processes rather than processors.",
        "As parallel hardware becomes more readily available, a valuable by-product of this research is that the system could be ported to parallel logic machines with little or no additional effort."
      ]
    },
    {
      "heading": "PARLOG",
      "text": [
        "PARLOG (''Parallel Logic\") is a parallel declarative programming language based on logic (/Conlon 1989/, /Gregory 1987/, and /Shapiro 1988/).",
        "The basic form of a clause is (1) head guard: body where the head is a goal r(t1 tit) and both guard (optional) and body (obligatory) are conjunctions of goals.",
        "Each procedure must be preceded by a mode declaration specifying input (7) and output (A) arguments.",
        "Sequential and parallel conjunction (AND) and sequential and parallel disjunction (OR) are represented by \"&\".",
        "\",\", \";\", \".\", respectively."
      ]
    },
    {
      "heading": "THE PARSER",
      "text": [
        "The parser combines top-down and bottom-up strategies and recovers a set of licensing relations directly; phrase structure is considered derivative and is not computed.' The basic operations rely on the current governing category as the left bounded context and are deterministic in the sense that once a node is typed or licensed it cannot be altered.",
        "The output of the parser is a constructed list of structures (2) CP = Icp(Complementizer),ext_arg(Subject), infl(Infl element),predicate(Verb), int_arg_1(Object_1),int_arg_2(Object indirect_arg(PP)I, where cp represents the complementizer phrase, the head of the CP or S-bar, inn denotes the inflectional element, the head of S, and predicate is the verb.",
        "The structures ext_arg, int arg I, and int_art.",
        ";_2 are the arguments of the verb, the first being the",
        "external argument (subject) and the last two being the (direct) internal arguments (objects).",
        "The indirect_arg is a prepositional phrase (PP) that a verb may license and there may be several of these structures depending on the lexical specifications of the verb.",
        "While the cp, ext_arg, infl, and predicate are obligatory, the internal and indirect arguments are contingent upon the 0-grid of the verb and, therefore, are optional.",
        "The basic objects of the system are nodes where a node is a structure of the form xp(Word,x_bar(Features),Inclex).",
        "Word is a lexical item, an empty category PRO, trace, or variable, or an empty complementizer or inflectional element, and Features represents the type of the node in terms of x-bar features ±N, ±V.",
        "Every node receives a unique index unless it is bound (co-indexed) to another via Binding or Control Theory.",
        "Each of the terms of (2) are nodes except for the arguments which are a list of nodes that represent the specifier, head, and complement structures.",
        "Specifiers may be determiner or adjectival phrases, and complements may be PPs or, in the case of relative clauses, a CP, which would be reflected in another list whose structure is analagous to (2)."
      ]
    },
    {
      "heading": "THE LEXICON",
      "text": [
        "In accordance with GB Theory, the lexicon plays a central role.",
        "Each lexical item contains the idiosyncratic features of the lexeme and they direct many actions of the parser.",
        "The lexicon is a database of PARLOG assertions which may he searched in parallel.",
        "A small subset of the lexicon is",
        "The first term of each lexeme is the lexical entry and the second term is a list of structures of the form x_har(Fl ,F2), where Fl and F2 are x-bar primitives, ±N, ±V, it h \"1\" and \"0\" denoting \"+\" and \"-\", respectively.",
        "Lexically ambiguous items, e.g., (3)c., have more than one x-bar structure.",
        "The third term is a list of symbols and structures that depend on the lexical item and its type, i.e., x-bar features.",
        "For instance, as (3)a. illustrates, nouns (x_bar(nl,vo)) have a plural form as a member in their list of features while verbs (x_bar(no,v1)) have morphological derivatives, e.g., participial forms or ing, in their features list as (3)b. shows.",
        "Verbs also have 0-grids which characterize argument structures and other features indicating specifics of complement structure such as tenseless (infinitival) suhcategorizations or control criteria, e.g., subject_control ((3)c.).5 In the current version of the parser, derivational morphology is minimal."
      ]
    },
    {
      "heading": "THE PARSING ENGINE",
      "text": [
        "The basic actions of the parser are to identify gaps, to construct maximal projections, and to license these projections, and these are encoded by the respective procedures, detect_gap, project, and license.",
        "The parsing loop is called recursively until the sentential input, a list, is exhausted.",
        "During a parse, governing categories are produced and used as left-bounded context for certain procedures before being shunted to the list that will ultimately represent the output."
      ]
    },
    {
      "heading": "GB MODULES",
      "text": [
        "The GB-modules of Trace, Binding, Control, and Bounding Theories are incorporated in the parser, especially in goals detect_gap and license.",
        "Detect_gap identifies the presence, if any, of an implicit element.",
        "This may be an argument, viz., trace, PRO, or variable, or a non-lexical item, viz., an empty complementizer or inflectional element.",
        "A fragment' of the PARLOG code for detect_gap is",
        "The first relation has a guard to determine if the current word has passive morphology.",
        "Informally, the guard passive_morphology checks the inflectional element of the current governing category for a form of BE and, in parallel, determines if the current word is a verb of the passive form.",
        "If the guard succeeds, then the output substitution is complete with Empty_cat being unified with trace.",
        "In (4)b., the guards provide checks with the current token (Word) and governing category for the features of the verb and possible presence of an overt subject in order that detect_gap may detect a PRO.",
        "The rest of the specifications for detect_gap have similar strategies for finding variables and empty inflections and complementizers.",
        "Each of these clauses are computed in parallel together with one that determines an absence of an empty category in the current position of the sentence.",
        "The next goal in parse is project, which constructs a maximal projection, xp(Item, Type).",
        "In the case that Item is lexically ambiguous, project has calls to lexical disambiguation routines which are invoked in parallel to attempt a resolution.",
        "The goal license indexes and assigns 0-roles to arguments of predicates.",
        "Binding Theory (/Chomsky 1981/) has three principles, frequently labeled A, B, and C in the GB literature, that specify co-indexation procedures for anaphors, pronominals.",
        "and referential (R-) expressions, respectively.",
        "Since the principles are independent, they are candidates for parallel execution.",
        "Thus, Binding is specified in the system as",
        "(5) mode binding(proj?,gov_cat?,inclexed_projA).",
        "binding (Proj,Gov_cat,Indexed_proj ) < – is_anaphor(Proji:",
        "The purpose of the guards is to determine the argument type of a particular argument (Proj) which then invokes a call to a specific method of indexing in accordance with Binding Theory.",
        "(There is a numerical indexing scheme that is embedded in each principle.)",
        "The result of binding is a node, Indexed_proj, that has an index associated with it.",
        "The other major part of license is the assignment of 0-roles.",
        "The parser assigns 0-roles to the respective arguments of the predicates based on their 0-grids.",
        "The binding and 0-assignment procedures together comprise the licensing procedure.",
        "Their communication channels are being explored and stream AND parallelism appears promising.",
        "AN EXAMPLE For the sentence",
        "(6) John was persuaded to leave.",
        "the parser produces",
        "which illustrates PRO and trace detection and binding."
      ]
    },
    {
      "heading": "FUTURE DIRECTIONS",
      "text": [
        "The primary focus of the experimental parser will be to include wider coverage within a GB-framework, including adjuncts, and to examine psychological aspects of concurrent language processing."
      ]
    },
    {
      "heading": "CONCLUSION",
      "text": [
        "The investigation into the concurrent aspects of GB Theory is still in the embryonic stages.",
        "Nevertheless, early results seem to indicate that such research may yield significant insights into parallel parsing and human sentence processing."
      ]
    },
    {
      "heading": "NOTES",
      "text": [
        "'Cf. /Abney 1986/, /Berwick 1987/, /Correa 1987/, /Kashket 1987/, /Kuhns 1986/, /Sharp 985/, /Stabler 1987/, /Thiersch 1988/, and fWehrli 1984/.",
        "'/BerWick and Weinberg 1981/ and /Wehrli 1988/ have excellent discussions of the notion of transparency or direct encoding of GB-modules.",
        "'PC-PARLOG is commercially available from Parallel Logic Programming Limited (Twickenham, England).",
        "4/Berwick 1987/ presents various output options with respect to GB-based parsers.",
        "/Abney 1986/ also has a novel approach to parsing.",
        "`0-roles are denoted by the neutral labels ext_arg, int_arg_l, and int_arg_2 rather than by the terms of agent, theme, recipient, etc.",
        "/Zubizaretta 1987/, for example, argues for this type of representation.",
        "`For the sake of expository simplicity and for lack of space, low-level implementation details, e.g., certain initialization and stack manipulation procedures, arc suppressed in the discussion."
      ]
    },
    {
      "heading": "REFERENCES",
      "text": []
    }
  ]
}
