{
  "info": {
    "authors": [
      "Anuj Dawar",
      "K. Vijay-Shanker"
    ],
    "book": "Computational Linguistics",
    "id": "acl-J90-1002",
    "title": "An Interpretation of Negation in Feature Structure Descriptions",
    "url": "https://aclweb.org/anthology/J90-1002",
    "year": 1990
  },
  "references": [
    "acl-C88-1063",
    "acl-P84-1008",
    "acl-P84-1075",
    "acl-P86-1038",
    "acl-P88-1029",
    "acl-P89-1003"
  ],
  "sections": [
    {
      "text": [
        "Feature structures are informational elements that have been used in several linguistic theories and in computational systems for natural language processing.",
        "A logical calculus has been developed and used as a description language for feature structures.",
        "In the present work, a framework in three-valued logic is suggested for defining the semantics of a feature structure description language, allowing for a more complete set of logical operators.",
        "In particular, an interpretation of the negation and implication operators is examined within this framework.",
        "We extend this approach to interpret descriptions that involve existence (or nonexistence) of values for attributes.",
        "A definition of augmented feature structures is proposed, and one particular interpretation of the description language with a negation operator is described.",
        "A sound and complete proof system is presented for the logic thus obtained and its computational aspects studied."
      ]
    },
    {
      "heading": "1 INTRODUCTION",
      "text": [
        "A number of linguistic theories and computational approaches to parsing natural language have employed the notion of associating informational elements, consisting of features and their values, with phrases.",
        "Such elements, called feature structures, have been used in linguistic theories, such as Generalized Phrase Structure Grammar (GPSG; Gadzar et al.",
        "1985) and Lexical Functional Grammar (Kaplan and Bresnan 1983), and in computational formalisms, such as Functional Unification Grammar (Kay 1979) and PATR-II (Shieber 1984).",
        "Rounds and Kasper introduced a logical formalism to describe feature structures with disjunctive specification (Kasper 1987; Kasper and Rounds 1986; Rounds and Kasper 1986).",
        "The language is a form of modal propositional logic.",
        "To define the semantics of this language, feature structures are formally defined as acyclic finite automata.",
        "The detailed definition is given in Section 2.",
        "A fundamental property of the semantics is that it is monotonic in the sense that the set of automata satisfying a given formula is upward-closed under the operation of subsumption.",
        "This is important, because we consider a formula to be only a partial description of a feature structure.",
        "This property is precisely formulated in Section 2.",
        "Several researchers have expressed a need for extending this logic to include the operators of negation and implication.",
        "These two are related in that, in most logical systems, it is possible to use one to define the other (in the presence of a disjunction operator).",
        "In this paper, we shall concentrate on the problem of extending the logic to include negation, while also showing that it yields a satisfactory interpretation of implication.",
        "Karttunen (1984), for instance, provides examples of feature structures in which a negation operator might be useful.",
        "For instance, the most natural way to represent the number and person attributes of a verb such as sleep would be to say that it is not third person singular, rather than expressing it as a disjunction of the other possibilities.",
        "We express this agreement constraint by the following formula: agreement : 7 (person : third A number : singular) (1) Pereira (1987) provides the following example formula that expresses the semantic constraint that the subject and object of a clause cannot be coreferential unless the object is a reflexive pronoun: obj : type : reflexive V --1(subj : refobj : ref) (2) This constraint can, in fact, be represented just as naturally as the following implication: (subj : ref obj : ref) obj : type : reflexive (3) Similarly, the feature co-occurrence constraints in GPSG (Gadzar et al.",
        "1985) include implications of the form 31 0 (where 0 is some description).",
        "While a formula of the form 3!",
        "is not part of the RoundsKasper logic, we intend it here as asserting the existence of a feature 1 in a structure.",
        "This would normally be expressed in the Rounds Kasper formalism by the formula 1:NIL.",
        "As we see later, formulae of the kind we have in this example, i.e. in which an existential appears negated, require special treatment and will motivate an extension to the feature structure formalism.",
        "Various interpretations have been suggested that define a semantics for these operators (see Section 3), but none has gained universal acceptance.",
        "Pereira (1987) set forth certain properties that any such interpretation should satisfy.",
        "We suggested that three-valued logic provides us with a framework appropriate for defining the semantics of a feature description logic (which we will call FDL) that includes a negation operator (Dawar and Vijay-Shanker 1989).",
        "We also showed that the three-valued framework (based on Kleene's three-valued logic; Kleene 1952) is powerful enough to express most of the existing definitions of negation and implication.",
        "It is therefore possible to compare these different approaches.",
        "We also presented one particular three-valued interpretation for FDL, motivated by the approach to negation given by Karttunen (1984), that meets the conditions stated by Pereira.",
        "In the present work, we give an exposition of these results, and we also examine another three-valued interpretation for FDL, obtained by using a modified notion of the feature structures that serve as models.",
        "This new interpretation, while preserving the desirable properties of the previous one, also provides a satisfactory semantics for the problematic case, mentioned above, of formulae with a negated existential.",
        "In Section 2 we present an exposition of the Rounds Kasper logic.",
        "In Section 3 we examine some existing approaches to defining the semantics of negation, and we also present the framework of three-valued logic within which we define our own interpretation.",
        "In Section 4 we exhibit the modified notion of feature structures as models for FDL, and we give the semantics of FDL in terms of these modified feature structures.",
        "Finally, in Section 5, we present a proof system for the language and establish some computational results."
      ]
    },
    {
      "heading": "2 ROUNDSKASPER LOGIC",
      "text": [
        "In this section, we take a look at the calculus developed by Rounds and Kasper to describe feature structures.",
        "The symbols in the language are taken from two primitive domains:",
        "1.",
        "Atoms (A), and 2.",
        "Labels (L).",
        "The set of well-formed formulae ( W), is given by:"
      ]
    },
    {
      "heading": "NIL TOP",
      "text": [
        "1.",
        "Q is a nonempty finite set (of states), 2.is a countable set (the alphabet), 3.",
        "F is a countable set (the output alphabet), 4.",
        "(5 : Q xQ is a finite partial function (the transition function), 5. go E Q (the initial state), 6.",
        "F C Q (the set of final states), 7.",
        "X: Fis a total function (the output function),' 8. the directed graph (Q, E) is acyclic, where pEq iff for some / E I, 6(p, 1) = q, 9. for every q E Q, there exists a directed path from qo to q in (Q, E), and 10. for every q E F 6(q, 1) is not defined for any 1.",
        "We can define a partial ordering of information on acyclic finite automata.",
        "This partial ordering is given by the subsumption relation, defined as follows: Definition 2.",
        "Given two acyclic finite automata, A = QA, TA, 6A, 90A,F A,X A) and B = (Q13, 1B, TB, 15 B, 90B, F B, XB) , we say that A subsumes B (A C B) if there is a homomorphism from A to B, i.e. there is a mapping h: Q QB such that:",
        "Unification, which is the primary information-combining operation on feature structures, can now be simply defined as the operation of finding a least upper-bound (if any upper-bound exists) under the above ordering.2 We can now give the semantics of a formula over the set of labels L and the set of atoms A.",
        "The domain over which this is done is the set of acyclic finite automata A = Q, L, A, 6, q0, F, X).",
        "The satisfies relation ( ) is defined as follows:",
        "In the above, (5 is extended in the standard way to members of E*, i.e. b(q, E) = q and b(q, wl) = b(b(q, w),1) and A I is the automaton obtained from A by making b(q0, 1) the initial state and eliminating all unreachable states.",
        "A fundamental property of the semantics given above is that the set of automata satisfying a given formula is upward-closed under the operation of subsumption.",
        "The property is stated in the following theorem (Rounds and Kasper 1986): Theorem 1.",
        "A EB if and only if for every formula, 4), if A H (/) then B cp.",
        "Rounds and Kasper also showed that the satisfiability problem for their logic is NP-complete."
      ]
    },
    {
      "heading": "3 PREVIOUS APPROACHES TO NEGATION",
      "text": [
        "In this section we examine the problem of adding a negation operator to the language described in the previous section.",
        "We do this by presenting various approaches to defining the semantics of the extended language.",
        "We look at these approaches in terms of both their linguistic appropriateness and their computational properties.",
        "We will also show that the framework of three-valued logic that we present can be used as a basis for comparison of the different approaches."
      ]
    },
    {
      "heading": "3.1 CLASSICAL NEGATION",
      "text": [
        "By classical negation, we mean an interpretation in which an automaton A satisfies a formula id) if and only if it does not satisfy 4).",
        "Johnson (1987) defined an Attribute Value Logic (AVL), similar to the RoundsKasper Logic, that included a classical form of negation.",
        "Smolka (1988) presented a classical semantics for negation in a RoundsKasper-like framework.",
        "While such approaches are appropriate under one view of feature structures, they are not satisfactory from the viewpoint of feature structures seen as partial descriptions.",
        "This is because the crucial property of monotonicity is lost, as can be seen from the following example: Example 1.",
        "A = [person : second] B= [person : second number : singular = 7(person : second A number : singular) As can easily be seen, by the classical semantics, A H and A C B, but B Kasper (1988a) discusses an interpretation of negation and implication in an implementation of Functional Unification Grammar that is extended to include conditionals.",
        "Kasper's semantics is classical, but his unification procedure uses notions similar to those of three-valued logic.3 Kasper also localized the effects of negation by disallowing path expressions within the scope of a negation.",
        "This restriction may not be linguistically warranted as can be seen from Pereira's formula example in Section 1."
      ]
    },
    {
      "heading": "3.2 INTUITIONISTIC LOGIC",
      "text": [
        "Moshier and Rounds (1987) described an extension of the RoundsKasper logic, including an implication operator and hence, by extension, negation.",
        "The semantics is based on intuitionistic techniques.",
        "The notion of satisfying is replaced by one of forcing.",
        "Given a set of automata K, a formula 4), and A such that A e K, A forces in K-14) (A FK 14)) if and only if for all B E K such that A C B, B does not force 4) in K. Thus, to show that a formula, cb, is satisfiable, we have to find a set K and an automaton A such that A forces in K Moshier and Rounds also gave a complete proof system for their logic, and showed that the satisfiability problem, while decidable, was PSPACE-complete, thus making it even more intractable than the original RoundsKasper logic.",
        "Furthermore, Langholm (1989) has shown that not all formulae in the MoshierRounds logic can have hereditarily finite sets of minimal models.",
        "These computational problems, along with questions about the linguistic appropriateness of its semantics, render the linguistic value of the intuitionistic approach questionable."
      ]
    },
    {
      "heading": "3.3 THREE-VALUED LOGIC",
      "text": [
        "Here we take a look at how three-valued logic can be used to define the semantics of FDL.",
        "We also take a look at one particular interpretation of FDL that uses the automata of Section 2 as models.",
        "This interpretation is essentially the same one we presented earlier (Dawar and Vijay-Shanker 1989).",
        "This is an interpretation of negation that is intuitively appealing, formally simple, and computationally no harder than the original RoundsKasper logic.",
        "The primary intention here (as in our earlier paper) is, however, to explore the use of three-valued logic in defining the semantics of FDL with negation.",
        "To this end, we will examine other interpretations also within the three-valued framework.",
        "Then, in the next section, we motivate a modified notion of automata models and redefine our interpretation with respect to it."
      ]
    },
    {
      "heading": "3.3.1 THE THREE-VALUED FRAMEWORK",
      "text": [
        "With each formula we associate the set (Tset) of automata that satisfy the formula, a set (Fset) of automata that contradict it, and a set (Uset) of automata that neither satisfy nor contradict it.",
        "4 The Uset contains all automata that are not in either of the other two sets.",
        "Different interpretations of negation are obtained by varying definitions of what constitutes \"contradiction.\"",
        "The reason for having some automata that neither satisfy nor contradict a formula is as follows: an automaton is to be viewed as a partial information structure.",
        "Given a description (formula), 4>, a feature structure A may not carry enough information to suggest that it satisfies or falsifies 4).",
        "However, it may be possible to extend A to either satisfy or falsify 4).",
        "For example, we will place [person: third] in the Uset of 4> = (number : singular A person : third).",
        "Of course, this feature structure can be extended to falsify or satisfy 4> as in: [I number : singular person: third and {number : plural person: third We will define the Tset and the Fset so that they are upward-closed with respect to subsumption for all formulae.",
        "Thus, we avoid the problem of nonmonotonicity associated with the classical interpretation of negation.",
        "In our logic, negation is defined so that an automaton A satisfies --4, if and only if it contradicts 4..",
        "Formally, the semantics is defined by a partial interpretation function, I.",
        "If WFF is the set of well-formed formulae of FDL, and A the set of acyclic finite automata,5 the interpretation I is a partial function:",
        "We now look at one such interpretation function that uses the strong Kleene truth definition for conjunction and disjunction.",
        "Definition 4.",
        "The partial interpretation function I is defined as follows: 1.",
        "ANIL, A) = True for all A; 2.",
        "ATOP, A) = False for all A; 3.",
        "I(a, A) = True if A is atomic and X(q0) = a I(a, A) = False if A is atomic and X(q0) = b for some b, b 0 a (see Note 2.)",
        "I(a, A) is undefined otherwise; 4.",
        "AI : 4), A) = 1(0, A I I) if A// is defined.",
        "The monotonicity property for the above interpretation can be stated as follows: Theorem 2.",
        "Tset(0) is upward-closed under the subsumption relation for all formulae 0.",
        "Proof.",
        "The proof is by induction on the structure of 4) and can be found in Dawar 1988.0 We now take a look at some examples mentioned earlier and see how they are interpreted in the logic just defined.",
        "The first example expressed the agreement attribute of the verb sleep by the following formula: agreement : 7(person : third A number : singular) (4) This formula is satisfied by any structure that has an agreement feature which, in turn, either has a person feature with a value other than third, or a number feature with a value other than singular.",
        "Thus, for instance, the first two structures satisfy the given formula, whereas the third structure is undefined with respect to the formula.",
        "On the other hand, for a structure to contradict formula (4), it must have an agreement feature defined for both person and number with values third and singular respectively.",
        "Turning to another example mentioned earlier, the formula: obi: type : reflexive V -7(subj : ref , obi: ref) (5) is satisfied by the first two of the following structures, but is contradicted by the third (here co-index boxes are used to 0 indicate co-reference of path-equivalence).",
        "[obj : [type : reflexive]]"
      ]
    },
    {
      "heading": "3.3.3 OTHER THREE-VALUED INTERPRETATIONS OF NEGATION",
      "text": [
        "We briefly examine here how the three-valued framework may be used to provide interpretations other than the one presented above.",
        "The classical interpretation of negation can, of course, be expressed by making I a total function such that wherever 1(4), A) was previously undefined, it is now defined to be False.",
        "Moshier and Rounds consider a version in which forcing is always done with respect to the set of all automata, i.e. K*.",
        "This means that the set of feature structures that satisfy --14) is the largest upward-closed set of feature structures that do not satisfy 0 (i.e. the set of feature structures incompatible with (p).",
        "We can capture this in the three valued framework described above by modifying the definition of I in the following cases:"
      ]
    },
    {
      "heading": "4 INTERPRETING FDL WITH AUGMENTED FEATURE STRUCTURES",
      "text": [
        "We have seen examples (Section 1) of formulae that assert the existence of certain features.",
        "While RI is not a formula in the RoundsKasper syntax, we can regard it as syntactic sugar for the formula 1:NIL, which is indeed satisfied exactly by those automata that have a feature I.",
        "However, the formula 11:NIL is not satisfiable in the logic we have defined.",
        "This is because any automaton that does not have a feature labeled 1 subsumes one that does.",
        "We have, however, seen examples of formulae where RI occurs in the scope of a negation (for instance, Kasper [1988b] uses the formula 3 Mood-type Rank : Clause).",
        "We certainly intend that such formulae be satisfiable.",
        "Since feature structures are partial information structures, if they are not defined for an attribute 1, it could be due to lack of information about the value for the attribute 1.",
        "On the other hand, here we wish to capture the fact that if a feature structure A satisfies the description 13 /, then not only is A not defined for l, but it is also the case that it cannot be defined for I.",
        "That is, it is erroneous to extend A to state a value for the attribute I.",
        "The problem stems from the fact that in the formula 1E11, we are trying to capture the information that a feature structure not only does not have a value for the feature /, but cannot be extended to have a value for I; i.e. we have the information that, in the current context, the information structure that we are building is not going to acquire a value for the feature I at any future time.",
        "This kind cif \"negative\" information is not expressible in automata models as we have defined them.",
        "As they stand, they can only capture \"positive\" information.",
        "To include the negative information we need, we will define an augmented notion of feature structures and redefine our interpretation function accordingly.",
        "To use the analogy with finite state automata, note that in a deterministic fsa we often consider states that do not have outgoing arcs defined on certain labels as having those arcs leading to an \"error\" state.",
        "Since we view fsas as complete structures, this distinction between arcs that are not defined and those that cannot be defined is unimportant.",
        "However, when we view our automata models as partial information structures, we must distinguish between the case in which a feature is simply not defined (leaving open the possibility that it may be defined in some extension) and the case in which we know that a certain feature cannot be defined.",
        "In what follows, we capture the information of certain labels leading to \"error\" states without explicitly defining such states, but by attaching to each state in the structure a finite set of labels.",
        "This set contains those labels that cannot be defined from that state.",
        "We already have an elementary form of this notion in our restriction on final states, when we specify that they cannot have any outgoing arcs.",
        "We are effectively saying that no label can be defined from these states.",
        "We formalize all these notions below."
      ]
    },
    {
      "heading": "4.1 AUGMENTED FEATURE STRUCTURES",
      "text": [
        "In this section, we give definitions relating to our augmented notion of f-structures.",
        "As we stated above, the augmentation consists of attaching to each nonfinal node in the f-structure graph a finite set of labels.",
        "These labels are exactly those for which we know that no outgoing arcs can be defined from that node.",
        "The set is finite since we require that our information structure at any point be finite.",
        "We formally define our extended notion of f-structure as follows:9 Definition 5.",
        "An acyclic finite automaton is an 8-tuple A = ( Q,6, q0, F, X, S), where:",
        "1.",
        "Q is a nonempty finite set (of states), 2.is a countable set (the alphabet), 3.",
        "F is a countable set (the output alphabet), 4.",
        "6:Q xQ is a finite partial function (the transition function), 5. go E Q (the initial state), 6.",
        "F C Q (the set of final states), 7. :Fis a total function (the output function), 8.",
        "S: Q\\FP fin(1) is a function from the nonfinal states to finite subsets of Z, 9. the directed graph (Q, E) is acyclic, where pEq if for some / E Z, (5(p, 1) = q, 10. for every q e Q, there exists a directed path from qo to q in (Q, E), 11. for every q E F, 6(q, I) is not defined for any 1, and 12. whenever 1 E S(q),6(q, 1) is not defined.",
        "We can now define the subsumption ordering on these structures as follows: Definition 6.",
        "Given two f-structures, A = (QA,MA,T A, SA, goA, FA, XA, SA) and B = (QB,ZB, TB, aB, q0B, FB,X8, S B), we say that A subsumes B (A E B) if there is a homomorphism from A to B, i.e. there is a mapping h: QA QB such that: 1. h(q0) = q0B, 2. h(6 A(g, 1)) = B(h(q), 1), 3.",
        "XB(h(q)) = 'A (q)for all q E FA, and 4.",
        "S A(q) C S B(h(q)) for all q E QA\\FA.",
        "This definition of subsumption ensures that, for any automaton A, if 1 G SA(6(q0, p)) then, for any automaton subsumed by A, the path p is defined, but the path pl cannot be defined."
      ]
    },
    {
      "heading": "4.2 THE LANGUAGE",
      "text": [
        "We now give the interpretation of FDL in terms of f structure models as we have just defined them.",
        "The syntax of the language is the same as before.",
        "We first give the following auxiliary definitions:",
        "I is defined as follows: 1.",
        "I(NIL, A) = True for all A; 2.",
        "I(TOP, A) = False for all A; 3. l(a, A) = True if A is atomic and Mg()) = a I(a, A) = False if A is atomic with X (go) a or if A is complex I(a, A) is undefined otherwise; 4.",
        "1(1:0, A) = I(4), All) if All is defined.",
        "I(1:4), A) = False if 1 E S(go) or if A is atomic I(1:4), A) is undefined otherwise; 5.",
        "/(4)1 A 4)2, A) = True",
        "8.",
        "I(pi -- 132, A) = True if 6(q0, pi) and 6(g0, p2) are defined",
        "We are now in a position to prove the following monotonicity property for our logic.",
        "We express it in terms of the knowledge (or information) ordering on the truth values {1, True, False} defined by 1 <k True, 1 k False, True 4 k False and False 4k True.",
        "In the following, 1(4), A) = 1 is used for I(4), A) undefined.",
        "Theorem 3.1 A E B if and only if for every formula, 4), I(4), A) _.5k AO, B).",
        "Proof.Suppose for every formula, 4), I(4), A) 1(4), B).",
        "Every path p defined in A must also be defined in B, since I(p :NIL, A) = True and hence l(p:NIL, B) = True.",
        "Since for every state qi in A, there is a path pi such that qi = A(q0A, pi) we can define a map h such that h(gi) = 6B(go8, pi).",
        "To see that this map is indeed functional, note that, if there is a q E QA such that q = 64(g0A, pi) = A(q0, 1)2) for distinct pi and p2, then I(p, 112, A) = True.",
        "Thus I(p, p2, B) = True and 6 B(q0B, Pi) and 68(q08, p2) do indeed describe the same state.",
        "One can immediately see that this map satisfies properties 1 and 2 of being a homomorphism given above in the definition of subsumption.",
        "To verify the other two conditions, note that if A(q1) = a for some qi E A, then, l(p,:a, A) = True.",
        "Hence l(p,:a, B) = True and XBOB(9oB, 11()) = a.",
        "Thus condition 3 is satisfied.",
        "The argument for condition 4 is similar.",
        "We have, therefore, established that h is a homomorphism and hence that A B.The consequent is trivially true with 1(4), A) = 1, so we will only consider the case when it is either True or False.",
        "The proof is by induction on the structure of the formula.",
        "The argument is similar to the one in the previous case.",
        "Since I(-10, A) = True if and only if I(0, A) = False and vice versa, clearly A-0, A) :SkB), since 1(0, A) _.SkI(0, B).",
        "0 The following simple corollary corresponds to the monotonicity result we established for our original three-valued semantics.",
        "Corollary.",
        "For all 4), Tset(0) is an upward-closed set.",
        "As we mentioned earlier in this section, Langholm (1989) describes negatively extended feature structures in a fashion very similar to what is described above.",
        "The interpretation he chooses for the description language is, however, intuitionistic in character.",
        "We believe that the modifications that we suggested to our interpretation (in Section 3.3.3) to capture the special case of intuitionistic logic in which forcing is always done with respect to K*, when applied to our new interpretation yield exactly the interpretation described by Langholm."
      ]
    },
    {
      "heading": "5 PROOF SYSTEM",
      "text": [
        "In this section, we give a proof system for the logic described above that is essentially an adaptation of the tableau proof system described by Moshier and Rounds (1987) for their intuitionistic interpretation of the feature logic.",
        "The proof system works, not with individual formulae, but with sets of labeled signed formulae.",
        "The MoshierRounds tableau proof method worked with sets of sets of labeled signed formulae.",
        "However, this extra level of complexity is not needed here.",
        "We first introduce the notion of a labeled signed formula: Definition 9.",
        "A labeled signed formula is a triplet ( w, X, 0), where w e L* , X E {True, False} and 0 E WFF.",
        "(w, True, 0) will be written as w MP, and (w, False, 0) as wF(/).",
        "We can now define the notion of an f-structure satisfying a labeled signed formulae: Definition 10.",
        "An f-structure, A, satisfies a labeled signed formula 4> (written A4>) in the following cases: Al= wTo if and only if A w is defined and /(4),A/w) = True Al= wF0 if and only if A w is defined and /(4),A/w) - False",
        "Proof.",
        "Consider the automaton, A = (Q, L, A, 43, go, F, X, S), constructed from c as follows: 1.",
        "For every path w for which there is a formula b such that wT4) E c or wRI) E c, include a state q, in Q, with defining a path from qo to qn, labeled w. 2.",
        "For every pair of paths pi = wx, and p2 = wx2 such that wT(xi x2) E c, let qpi and qp2 be the same state.",
        "3.",
        "For every formula wTa E c, include qn, in F and let X(q) = a.",
        "4.",
        "For every formula wFa e c, if there is no label 1 such that there is a state g,, E Q, then include qn, in F and let X(q) = b for any atomic value b such that b does not occur in any formula in c.\" 5.",
        "For every formula wFI: NIL E c, include / in S(q) 6.",
        "For every formula wF(pi p2) E c, if states qwp, and qwp, are defined and neither of them is in F, then add new states qi and q2 to Q and F, and for some label / that does not occur in any formula of c, define (5(gn,p,, 1) = gland b(q1) = ql with X(qi ) = a and",
        "If, however, one of the paths (say, Pi) does not have the associated state (q) defined, let p be the longest prefix of pi such that qwp does exist, and let pi = plx.",
        "Include / in S(qp).",
        "Claim 1: The above construction of an automaton is well defined.",
        "We need to verify that the above definition yields an automaton that meets our definition of an acyclic finite automaton without any conflicts.",
        "The possible conflicts that could arise would be that: X does not define a function; the graph of the automaton had a cycle; for some q E F and some label I, b(g, I) is defined; or, for some state q and some label 1, 1 e S(q) and .5(q, 1) is defined.",
        "However, in each of these cases, it is easy to see that were it to arise in the construction given above, the original set c would in fact be closed, contradicting the hypothesis that it is downward-saturated.",
        "Claim 2: The automaton so constructed satisfies all the labeled signed formulae in c. We establish this claim by induction over the structure of the formulae in c. For the base cases (namely labeled signed formulae of the forms: wXa, wXNIL, wFI: NIL, and wX(pl 122)) it follows immediately from the construction that they are satisfied by A.",
        "For the other cases (wX(4) V 1,G), wX(0 A 4/), and wX 10), their sub formulae are also in c since it is downward-saturated.",
        "But by the induction hypothesis, these sub-formulae are satisfied by A.",
        "That completes the result.",
        "The entailment relation (I-) on sets of labeled signed formulae is defined as follows: Definition 13.",
        "Let c and d be two sets of labeled signed formulae.",
        "Then c d if and only if c 4 d and one of the following holds:",
        "1. w T E c and d = c U twF0) 2. wF 10 Ccandd = c U {wRI)} 3. wT/:0 E c and d = c U 4. wF1:0 c and d = c U {w1F0} 5. wF1:(I) C c and d = c U {wFI:NIL} 6. w/T(Pi P2) E c and d = c U {wT(/Pi 1P2)} 7. w1F(Pi P2) E c and d = c U {wRipi 8. wT(Pi P2) E c and d =wTP2: NIL} 9. wT(Pi P2) E c and d = c U {wT(P2 r--P1)} 10. wr(Pi P2), wT(P2E C and d = c u p)} 11. wT(pi p2), wpi E c and d = c U {wP2TO} 12. wT(pi P2), wPIFO E c and d = c U {wP2F4 13. wF(Pi P2), wPiTa E c and d = U {wp2Fa} 14. wT(4) A ) E c and d = cwTtPl 15. wF(4) Ac and d = c U {wRIA 16. wF(4) A e c and d = c U {wFV/}",
        "17. wT(4) V IP) E c and d = c U {wRI)} 18. wT(0 V P) E c and d = c U twTIPI 19. wF() V 0) E c and d = c U {wF(1), wF;t} We denote by 1-* the reflexive and transitive closure of this entailment relation.",
        "where length denotes string length.",
        "Also, define the length of a labeled signed formula wXq5 as In(0) + length(w).",
        "Let 4' be any labeled signed formula such that 4' (4 c but 4) E d for some d such that c 1-* d. Observe that the length of 4) is bounded by the length of the longest formula in c and that 4) does not contain any symbols that do not occur in c. The result follows.",
        "0"
      ]
    },
    {
      "heading": "6. CONCLUSIONS",
      "text": [
        "A logical formalism with a complete set of logical operators has come to be accepted as a means of describing feature structures.",
        "While the intended semantics of most of these operators is well understood, the negation and implication operators have raised some problems, leading to a variety of approaches in their interpretation.",
        "In Dawar and Vijay-Shanker 1989 and the present work, we introduced the framework of three-valued logic as a means of defining the semantics of a feature structure description language with negation.",
        "This framework permits us to say that a formula such as IL 4) does not have a truth value defined in a feature structure that does not have a feature I.",
        "This enables us to define an interpretation that, unlike the classical approach to negation, is monotonic, as a logic describing partial structures should be.",
        "We presented one particular interpretation of FDL within this three-valued framework and compared it with other approaches to defining the semantics of negation.",
        "We showed that several different such approaches could be cast in the three-valued framework.",
        "In particular, we showed that the special case of the MoshierRounds intuitionistic approach, in which forcing is always considered with respect to K* could be captured in our framework.",
        "One motivation cited by Moshier and Rounds for considering forcing sets other than K* was so that formulae of the form could be considered satisfiable.",
        "The same reason led us to examine an augmented notion of feature structure models for FDL that yields an interpretation that is conceptually simple, motivated by the preservation of monotonicity, and is computationally no harder than the original RoundsKasper logic.",
        "We also showed that our interpretation meets the conditions set out by Pereira (1987) for a satisfactory interpretation of negation."
      ]
    },
    {
      "heading": "REFERENCES",
      "text": []
    },
    {
      "heading": "NOTES",
      "text": [
        "1.",
        "In the original RoundsKasper formulation, the output function is not required to be total.",
        "This is because every terminal node in the transition graph is considered to be a final state.",
        "However, since the notion of finality of a state is not crucial to the formalism, we have chosen this equivalent alternative for presentation.",
        "2.",
        "Strictly speaking, we should be taking the least upper bound in the ordering on equivalence classes of automata under isomorphism.",
        "3.",
        "See Section 3.3.3.",
        "4.",
        "A similar notion was used by Kasper (1988a), who introduces the notion of compatibility.",
        "We shall compare this approach with ours in greater detail in Section 3.3.3.",
        "5.",
        "In this paper we will not consider cyclic feature structures.",
        "6.",
        "And therefore it satisfies the formula 0.",
        "7.",
        "Equality here is strong equality (i.e. if HO, (Al I) is undefined then so is 1(1:0, A)).",
        "8.",
        "Two automata are not unifiable if and only if they do not have a least upper bound.",
        "9.",
        "Langholm (1989) has defined a similar notion of negatively extended feature structures.",
        "We will take up a comparison of his approach with ours later in this section."
      ]
    }
  ]
}
