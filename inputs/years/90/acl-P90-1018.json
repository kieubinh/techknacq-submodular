{
  "info": {
    "authors": [
      "Shalom Lappin",
      "Michael C. McCord"
    ],
    "book": "Annual Meeting of the Association for Computational Linguistics",
    "id": "acl-P90-1018",
    "title": "A Syntactic Filter on Pronominal Anaphora for Slot Grammar",
    "url": "https://aclweb.org/anthology/P90-1018",
    "year": 1990
  },
  "references": [
    "acl-C88-1026",
    "acl-J80-1003",
    "acl-J89-1003",
    "acl-P82-1015"
  ],
  "sections": [
    {
      "heading": "ABSTRACT",
      "text": [
        "We propose a syntactic filter for identifying non-coreferential pronoun-NP pairs within a sentence.",
        "The filter applies to the output of a Slot Grammar parser and is formulated in terms of the head-argument structures which the parser generates.",
        "It handles control and unbounded dependency constructions without empty categories or binding chains, by virtue of the unificational nature of the parser.",
        "The filter provides constraints for a discourse semantics system, reducing the search domain to which the inference rules of the system's anaphora resolution component apply."
      ]
    },
    {
      "heading": "I. INTRODUCTION",
      "text": [
        "In this paper we present an implemented algorithm which filters intra-sentential relations of referential dependence between pronouns and putative NP antecedents (both full and pronominal NP's) for the syntactic representations pro"
      ]
    },
    {
      "heading": "4",
      "text": [
        "vided by an En .sh Slot Grammar parser (McCord 1989b).",
        "or each parse of a sentence, the algorithm provides a list of pronoun-NI' pairs where referential dependence of the first element on the second is excluded by syntactic constraints.",
        "The coverage of the filter has roughly the same extension as conditions B and C of Chomsky's (1981, 1986) binding theory.",
        "However, the formulation of the algorithm is significantly different from the conditions of the binding theory, and from proposed implementations of its conditions.",
        "In particular, the fitter formulates constraints on pronominal anaphora in terms of the head-argument structures provided by Slot Grammar syntactic representations rather than the configurational tree relations, particularly c-command, on which the binding theory relies.",
        "As .a.",
        "result, the statements of the algorithm apply straightforwardly, and without special provision, to a wide variety of constructions which recently proposed implementations of the binding theory do not handle without additional devices.",
        "Like the Slot Grammar whose input it applies to, the algorithm runs in Prolog, and it is stated in essentially declarative terms.",
        "In Section 2 we give a brief description of Slot Grammar, and the parser we are employing.",
        "The syntactic filter is presented in Section 3, first through a statement of six constraints, each of which is sufficient to rule out coreference, then through a detailed description of the algorithm which implements these constraints.",
        "We illustrate the algorithm with examples of the lists of non-coreferential pairs which it provides for particular parses.",
        "In Section 4 we compare our approach to other proposals for syntactic filtering of pronominal anaphora which have appeared in the literature.",
        "We discuss Itobbs' algorithm, and we take up two recent implementations of the binding theory.",
        "Finally, in Section 5 we discuss filter the integration of our ter into other systems of anaphora resolution.",
        "We indicate how it can be combined with a VP anaphora algorithm which we have recently completed.",
        "We also outline the incorporation of our algorithm into LODUS (Bemth 1989), a system for discourse representation."
      ]
    },
    {
      "heading": "2. SLOT GRAMMAR",
      "text": [
        "The original work on Slot Grammar was done around 1976-78 and appeared in (McCord 1980).",
        "Recently, a new version (McCord 1989b) was developed in a logic programming framework, in connection with the machine translation system LMT (McCord 1989a,c,d).",
        "Slot Grammar is lexicalist and is dependency-oriented.",
        "Every phrase has a head word (with a given word sense and morphosyntactic features).",
        "The constituents of a phrase besides the head word (also called the modifiers of the head) are obtained by \"filling' siois associated with the head.",
        "Slots are symbols like sub j, oh _I and lob j representing grammatical relations, and are asso",
        "speech.",
        "A complement slot can be filled at most once, and an adjunct slot can by default be filled any number of times.",
        "The phenomena treated by augmented phrase structure rules in some grammatical systems are treated modularly by several different types of rules in Slot Grammar.",
        "The most important type of rule is the (slot) filler rule, which gives conditions (expressed largely thmugh unification) on the filler phrase and its relations to the higher phrase.",
        "Filler rules arc stated (normally) without reference to conditions on order among.",
        "constituents.",
        "But there are separately stated ordering rules.'",
        "Slot/head ordering rules state conditions on the position (left or right) of the slot (filler) relative to the head word.",
        "Slot/slot ordering rules place conditions on the relative left-to-right order of (the fillers of) two slots.",
        "A slot is obligatory (not optional) if it must be filled, either in the current phrase or in a raised position through left movement or coordination.",
        "Adjunct slots are always optional.",
        "Complement slots are optional by default, but they may be specified to be obligatory in a particular lexical entry, or they may be so specified in the grammar by obligatory slot rules.",
        "Such rules may be unconditional or be conditional on the characteristics of the higher phrase.",
        "They also may specify that a slot is obligatory relative to the filling of another slot.",
        "For example, the direct object slot in English may be declared obligatory on the condition that the indirect object slot is filled by a noun phrase.",
        "One aim of Slot Grammar is to develop a powerful language-independent module, a 'shell\" which can be used together with language-dependent modules, reducing the effort of writing grammars for new languages.",
        "The Slot Grammar shell module includes the parser, which is a bottom-up chart parser.",
        "It also includes most of the treatment of coordination, unbounded dependencies, controlled subjects, and punctuation.",
        "And the shell contains a system for evaluating parses, extending IIeidorn's (1982) parse metric, which is used not only for ranking final parses but also for pruning away unlikely partial analyses during parsing, thus reducing the problem of parse space explosion.",
        "Parse evaluation expresses preferences for close attachment, for choice of complements over adjuncts, and for parallelism in coordination.",
        "Although the shell contains most of the treatment of the above phenomena (coordination, etc.",
        "), a small part of their treatment is necessarily language-dependent.",
        "A (language-specific) grammar can include for instance (1) rules for coordinating feature structures that override the defaults in the shell; (2) declarations of slots (called ex-traposer slots) that allow left extraposition of other slots out of their fillers; (3) language-specific rules for punctuation that override defaults; and (4) language-specific controls over parse evaluation that override defaults.",
        "Currently, Slot Grammars are being developed for English (ESC) by McCord, for Danish (DSG) by Arendse Bemth, and for German (GSG) by Ulrike Schwan.",
        "ESG uses the UDICT lexicon (Byrd 1983, Klavans and Wacholder 1989) having over 60,000 lemmas, with an interface that produces slot frames.",
        "The filter algorithm has so far been successfully tested with ESG and GSG.",
        "(The adaptation to German was done by Ulrike Schwall.)",
        "The algorithm applies in a second pass to the parse output, so the important thing in the remainder of this section is to describe Slot Grammar syntactic analysis structures.",
        "A syntactic structure is a tree; each node of the tree represents a phrase in the sentence and has a unique head word.",
        "Formally, a phrase is represented by a term phrase(X,H,Sense,Features, SlotFrame,Ext,Mods), where the components are as follows: (1) )( is a logical variable called the marker of the phrase.",
        "Unifications of the marker play a crucial role in the filter algorithm.",
        "(2) H is an integer representing the position of the head word of the phrase.",
        "This integer identifies the phrase uniquely, and is used in the filter algorithm as the way of referring to phrases.",
        "(3) Sense is the word sense of the head word.",
        "(4) Features is the feature structure of the head word and of the phrase, It is a logic term (not an attribute-value list), which is generally rather sparse in information, showing mainly the part of speech and inflectional features of the head word.",
        "(5) S lot Frame is the list of complement slots, each slot being in the internal form s lot (5 lot, Oh , X ), where S lot is the slot name, Ob shows whether it is an obligatory form of 51ot, and X is the slot marker.",
        "The slot marker is unified (essentially) with the marker of the filler phrase when the slot is filled, even remotely, as m left movement or coordination.",
        "Such unifications are important for the filter algorithm.",
        "(6) Ext is the list of slots that have been extraposed or raised to the level of the current phrase.",
        "(7) The last component Mods represents the modifiers (daughters) of the phrase, and is of the form mods (LMods , Mods ) where LMods and RMods are The distinction between slot filler rules and ordering constraints parallels the difference between Immediate Dominance Rules and Linear Precedence Rules in G PSG.",
        "See Gazdar et al. (1985) for a characterization of II) and I.P rules in GPSG.",
        "See (McCord 1989h) for more discussion of the relation of Slot Grammar to other systems.",
        "the lists of left modifiers and right modifiers, respectively.",
        "Each member of a modifier list is of the form 5 lot :Phrase where Slot is a slot and Phrase is a phrase which fills S lot.",
        "Modifier lists reflect surface order, and a given slot may appear more than once (if it is an adjunct).",
        "Thus modifier lists are not attribute-value lists.",
        "In Figure I, a sample parse tree is shown, displayed by a procedure that uses only one line per node and exhibits tree structure lines on the left.",
        "In this display, each line (representing a node) shows (1) the tree connection lines, (2) the slot filled by the node, (3) the word sense predication, and (4) the feature structure.",
        "The feature structure is abbreviated here by a display option, showing only the part of speech.",
        "The word sense predication consists of the sense name of the head word with the following arguments.",
        "The first argument is the marker variable for the phrase (node) itself; it is like an event or state variable for verbs.",
        "The remaining arguments are the marker variables of the slots in the complement slot frame (u signifies \"unbound\").",
        "As can be seen in the display, the complement arguments are um-fled with the marker variables of the filler complement phrases.",
        "Note that in the example the marker X2 of the 'who' phrase is unified with the subject variables of 'want', 'try', and 'find'.",
        "(There are also some unifications created by adjunct slot filling, which will not be described here.)",
        "For the operation of the filter algorithm, there is a preliminary step in which pertinent information about the parse tree is represented in a manner more convenient for the algorithm.",
        "As indicated above, nodes (phrases) themselves are represented by the word numbers of their head words.",
        "Properties of phrases and relations between them are represented by unit clauses (predications) involving these integers (and other data), which are asserted into the Prolog workspace.",
        "Because of this \"dispersed\" representation with a collection of unit clauses, the original phrase structure for the whole tree is first grounded (variables are bound to unique constants) before the unit clauses are created.",
        "As an example for this clausal representation, the clause has a r g (P , X) says that phrase P has X one of its arguments; i.e., X is the slot marker variable for one of the complement slots of P. For the above sample parse, then, we would get clauses hasarg(5,'X2').",
        "hasarg(5,'X12').",
        "as information about the 'want' node (5).",
        "As another example, the clause phmarker(P.,,X) is added when phrase P has marker X. hus for the above sample, we would get the unit clause phmarker(1,1X2').",
        "An important predicate for the filter algorithm is argm, defined by argm(P,Q) phmarker(P,X) & hasarg(Q,X).",
        "This says that phrase P is an argument of phrase Q.",
        "This includes remote arguments and controlled subjects, because of the unifications of marker variables performed by the Slot Grammar parser.",
        "Thus for the above parse, we would get argm(1,5).",
        "argm(1,7).",
        "argm(1,9).",
        "showing that 'who' is an argument of 'want', 'try', and'find'."
      ]
    },
    {
      "heading": "3. THE FILTER",
      "text": [
        "In preparation for stating the six constraints, we adopt the following definitions.",
        "The agreement features of an NP are its number, person and gender features.",
        "We will say that a phrase P is in the argument domain of a phrase N if P an N arc both arguments of the same head.",
        "We will also say that P is in the adjunct domain of N iff N is an argument of a head 11, P is the object of a preposition PREP, and PREP is an adjunct of II.",
        "P is in the NP domain of N ill N is the determiner of a noun Q and (i) P is an argument of Q, or (ii) P is the object of a preposition PREP and Prep is an adjunct of Q.",
        "The six constraints are as follows.",
        "A pronoun P is not coreferential with a noun phrase N if any of the following conditions holds.",
        "The algorithm which implements 1-VI defines a predicate nonrefdep(P op which is satisfied by a pair whose first element is a pronoun and whose",
        "Rule A specifies that the main goal non ref dep(p,Q) is satisfied by <P ,Q> if this pair is a referential pair (ref pa i r(P,Q)) and a non-coreferential pair (ncoref pa r (P ,Q)).",
        "A.1 defines a refpair <P ,Q> as one in which P is a pronoun, Q is a noun (either pronominal or non-pronominal), and P and Q are distinct.",
        "Rules B, C, D, E, and F provide a disjunctive statement of the conditions under which the non-coreference goal ncorefpair (P ,Q) is satisfied, and so constitute the core of the algorithm.",
        "Each of these rules concludes with a cut to prevent unnecessary backtracking which could generate looping.",
        "Rule B, together with B.1, identifies the conditions under which constraint I holds.",
        "In the following example sentences, the pairs consisting of the second and the first coindexeci expressions in lac (and in lc also the pair < 'I','she' > ) satisfy nonrefdep(P ,Q) by virtue of rule B.",
        "b.",
        "The womani said that he is funny.",
        "c. believe that she, is competent.",
        "The algorithm identifies < > as a rionref dep pair in la, which entails that 'they' cannot be taken as coreferential with 'John'.",
        "However, (the referent of) 'John' could of course be part of the reference set of 'they', and in suitable discourses LODUS could identify this possibility.",
        "Rule C states that <13 ,Q> is a non-coreferential pair if it satisfies the pr on con( P ,Q) predicate.",
        "This holds under two conditions, corresponding to disjuncts C.1.a-b and C.1.a,c-f.",
        "The first condition specifies that the pronoun P and its putative antecedent Q are both arguments of the same phrasal head, and so implements constraint II.",
        "This rules out referential dependence in 2a-b.",
        "Given the fact that Slot Grammar unifies the argument and adjunct variables of a head with the phrases which fin these variable positions, it will also exclude coreference in cases of control and unbounded dependency, as in 3a-c.",
        "3a.",
        "John, seems to want to see himi.",
        "b.",
        "Which man, did he see?",
        "c. This is the girli John said shei saw.",
        "The second disjunct C.1.a,c-f covers cases in which the pronoun is an argument which is higher up in the head-argument structure of the sentence than a non-pronominal noun.",
        "This disjunct corresponds to condition IV.",
        "C.2-C.2.2 provide a recursive definition of containment within a phrase.",
        "`Ms definition uses the relation of immediate containment, cant i (13 ,Q), as the base of the recursion, where cool ( P ,Q) holds if Q is either an argument or an adjunct (modifier or determiner) of a head Q.",
        "The second disjunct blocks coreference in 4a-c.",
        "4a.",
        "He.",
        "believes that the marl, is amusing.",
        "b.",
        "Who, did he, say Johni kissed?",
        "c. This is the man, he, said Johni",
        "wrote about.",
        "The wh-phrase in 4b and the head noun of the relative clause in 4c unify with variables in positions contained within the phrase (more precisely, the verb which heads the phrase) of which the pronoun is an argument.",
        "Therefore, the algorithm identifies these nouns as impossible antecedents of the pronoun.",
        "The two final conditions of the second disjunct, C. 1.e and C. 1.f, describe cases in which the antecedent of a pronoun is contained in a preceding adjunct clause, and cases in which the antecedent is the determiner of an NP which precedes a pronoun, respectively.",
        "These clauses prevent such structures from satisfying the non-coreferenoe goal, and so permit referential dependence in 5a-b.",
        "5a.",
        "After John, sang, he, danced.",
        "b. Johnl's mother likes him,.",
        "Notice that because a determiner is an adjunct of an NP and not an argument of the verb of which the NP is an argument, rule C.1 also permits coreference in 6.",
        "6.",
        "His, mother likes John,.",
        "However, C.1.a,c-e correctly excludes referential dependence in 7, where the pronoun is an argument which is higher than a noun adjunct.",
        "7.",
        "He, likes Johni's mother.",
        "The algorithm permits backwards anaphora in cases like 8, where the pronoun is not an argument of a phrase H to which its antecedent Q bears the coo t (Q , H ) relation.",
        "8.",
        "After he, sang, John danced.",
        "D-D.1 block coreference between an NP which is the argument of a head 11, and a pronoun that is the object of a preposition heading a PP adjunct of H, as in 9a-c.",
        "These rules implement constraint III.",
        "9a.",
        "Sam, spoke about him,.",
        "b. Shei sat near her,.",
        "c. Who, did he, ask for?",
        "Finally, E-E.1 and F realize conditions V and VI, respectively, in NP internal non-coreference cases like 10a-c.",
        "10a.",
        "His, portrait of Johrij is interesting.",
        "b. John's portrait of lumi is interesting.",
        "c. his1 description of the portrait by John, is interesting.",
        "Let us look at three examples of actual lists of pairs satisfying the non ref dep predicate which the algorithm generates for particular parse trees of Slot Granunar.",
        "The items in each pair are identified by their words and word numbers, corresponding to their sequential position in the string.",
        "When the sentence Who did John say wanted to try to find him?",
        "is given to the system, the parse is as shown in I•igurc 1 above, and the output of the filter is:",
        "complement clause subject.",
        "However, in Figure 4, the infinitival clause is an adjunct of 'lectured' and requires matrix subject control.",
        "Coreference analysis time = 11 msec.",
        "Thus < 'him','who' > is identified as a non-core-ferential pair, while coreference between 'John' and 'him is allowed.",
        "It makes this distinction by virtue of the differences between the roles of the two infinitival clauses in these sentences.",
        "In Figure 3, the infinitival clause is a complement of 'expected', and this verb is marked for object control of the"
      ]
    },
    {
      "heading": "4. EXISTING PROPOSALS FOR CONSTRAINING PRONOMINAL ANAPHORA",
      "text": [
        "We will discuss three suggestions which have been made in the computational literature for syntactically constraining the relationship between a pronoun and its set of possible antecedents intra-sententially.",
        "The first is Hobbs' (1978) Algorithm, which performs a breadth-first, left-to-right search of the tree containing the pronoun for possible antecedents.",
        "The search is restricted to paths above the first NP or S node containing the pronoun, and so the pronoun cannot be bound by an antecedent in its minimal governing category.",
        "If no antecedents are found within the same tree as the pronoun, the trees of the previous sentences in the text are searched in order of proximity.",
        "There are two main difficulties with this approach.",
        "First, it cannot be applied to cases of control in infinitival clauses, like those given in Figures 3 and 4, or to unbounded dependencies, like those in Figure 1 and in examples 3b-c and 4b-c, without significant modification.",
        "Second, the algorithm is inefficient in design and violates modularity by virtue of the fact that it computes both intra-sentential constraints on pronominal anaphora and inter-sentential antecedent possibilities each time it is invoked for a new pronoun in a tree.",
        "Our system computes the set of pronoun-NP pairs for which coreference is syntactically excluded in a single pass on a parse tree.",
        "This set provides the input to a semantic-pragmatic discourse module which determines anaphora by inference and preference rules.",
        "The other two proposals are presented in Correa (1988), and in Ingria and Stallard (1989).",
        "Both of these models are implementations of Chornsky's Binding theory which make use of Government Binding type parsers.",
        "They employ essentially the same strategy.",
        "This involves computing the set of possible antecedents of an anaphor as the NP's which c-command the anaphor within a minimal domain (its minimal governing category).1 The minimal domain of an NP is characterized as the first 5, or the first NP without a possessive subject, in which it is contained.",
        "The possible intra-sentential antecedents of a pronoun are the set of NP's in the tree which arc not included within this minimal domain.",
        "See Reinhart (1976) and (1983) for alternative definitions of c-command, and discussions of the role of this relation in determining the possibilities of anaphora.",
        "See Lappin (1985) for additional discussion of the connection between c-command arid distinct varieties of pronominal artakithora.",
        "See Chomsky (1981), (1986a) and (1986h) for alternative definitions of the notion 'government' and 'minimal governing category'.",
        "This approach does sustain modularity by computing the set of possible antecedents for all pronouns within a tree in a single pass operation, prior to the application of inter-sentential search procedures.",
        "The main difficulty with the model is that because constraints on pronominal anaphora are stated entirely in terms of configurational relations of tree geometry, specifically, in terms of c-command and minimal dominating S and NP domains, control and unbounded dependency structures can only be handled by additional and fairly complex devices.",
        "It is necessary to generate empty categories for PRO and trace in appropriate positions in parse trees.",
        "Additional algorithms must be invoked to specify the chains of control (A-binding) for PRO, and operator (A)-binding for trace in order to link these categories to the constituents which bind them.",
        "The algorithm which computes possible antecedents for anaphors and pronouns must be formulated so that it identifies the head of such a chain as non-coreferential with a pronoun or anaphor (in the sense of the Binding theory), if any element of the chain is excluded as a possible antecedent.",
        "Neither empty categories nor binding chains are required in our system.",
        "In Slot ar parse representations, wh-phrases, heads of relative clauses, and NY's which control the subjects of infinitival clauses are unified with the variables corresponding to the roles they bind in argument positions.",
        "Therefore, the clauses of the algorithm apply to these constructions directly, and without additional devices or stipulations.'"
      ]
    },
    {
      "heading": "5. THE INTEGRATION OF THE FILTER INTO OTHER SYSTEMS OF ANAPHORA RESOLUTION",
      "text": [
        "We have recently implemented an algorithm for the interpretation of intrasentential VP anaphora structures like those in Ha-c.",
        "I la.",
        "John arrived, and Mary did too.",
        "b.",
        "13111 read every hook which Sam said he did.",
        "c. Max wrote a letter to 13ill before Mary did to John.",
        "The VP anaphora algorithm generates a second tree which copies the antecedent verb into the position of the head of the elliptical VP.",
        "It also lists the new arguments and adjuncts which the copied verb inherits from its antecedent.",
        "We have integrated our filter on pronominal anaphora into this algorithm, so that the filter applies to the interpreted trees which the algorithm generates.",
        "consider 12.",
        "John likes to him, and Bill does too.",
        "If the filter applies to the parse of II, it will identify only < > as a non-corefcrential pair, given that the pair < doesn't satisfy any of the conditions of the filter algorithm.",
        "However, when the filter is applied to the interpreted VP anaphora tree of 12, the filter algorithm correctly identifies both pronoun-NP pairs, as shown in the VP output of the algorithm for 12 given in Figure 5.",
        "Our filter also provides input to a discourse understanding system, LODUS, designed and implemented by A. Bernth, and described in (Bemth 1988, 1989).",
        "LOINS creates a single discourse structure from the analyses of the SIot Grammar parser for several sentences.",
        "It interprets each sentence analysis in the context consisting of the discourse processed so far, together with domain knowledge, and it then embeds it into the discourse structure.",
        "The process of interpretation consists in applying rules of inference which encode semantic and pragmatic (know"
      ]
    },
    {
      "heading": "3 In fact, a more complicated algorithm with approximately the same coverage as our filter can be formulated for",
      "text": [
        "a parser which produces configurational surface trees without empty categories and binding chains, lithe parser provides deep grammatical roles at some level of representation.",
        "The first author has implemented such an algorithm for the PEG parser.",
        "For a general description of PEG, see Jensen (1986).",
        "The current version of provides information on deep grammatical roles by means of second pass rules which apply to the initial parse record structure.",
        "The algorithm employs both c-command and reference to deep grammatical roles.",
        "ledge-based) relations among lexical items, and discourse structures.",
        "The filter reduces the set of possible antecedents which the anaphora resolution component of LODUS considers for pronouns.",
        "For example, this component will not consider 'the cat' or 'that' as a possible antecedents for either occurrence of 'it' in the second sentence in 13, but only 'the mouse' in the first sentence of this discourse.",
        "This is due to the fact that our filter lists the excluded pairs together with the parse tree of the second sentence.",
        "13.",
        "The mouse ran in.",
        "The cat that saw it ate it.",
        "Thus, the filter significantly reduces the search space which the anaphora resolution component of LODUS must process.",
        "The interface between our filter and LODUS embodies the sort of modular interaction of syntactic and semantic-pragmatic components which we see as important to the successful operation and efficiency of any anaphora resolution system."
      ]
    },
    {
      "heading": "ACKNOWLEDGMENTS",
      "text": [
        "We are grateful to Arendse Bemth, Martin Chodorow, and Wlodek Zadrozny for helpful comments and advice on proposals contained in this paper."
      ]
    },
    {
      "heading": "REFERENCES",
      "text": []
    }
  ]
}
