{
  "info": {
    "authors": [
      "Longin Latecki"
    ],
    "book": "Conference of the European Association for Computational Linguistics",
    "id": "acl-E91-1010",
    "title": "An Indexing Technique for Implementing Command Relations",
    "url": "https://aclweb.org/anthology/E91-1010",
    "year": 1991
  },
  "references": [],
  "sections": [
    {
      "heading": "AN INDEXING TECHNIQUE FOR IMPLEMENTING COMMAND RELATIONS",
      "text": []
    },
    {
      "heading": "Germany TOPIC AREA: SYNTAX, SEMANTICS ABSTRACT",
      "text": [
        "Command relations are important tools in linguistics, especially in anaphora theory.",
        "In this paper I present an indexing technique which allows us to implement a simple and efficient check for most cases of command relations which have been presented in linguistic literature.",
        "I also show a wide perspective of applications for the indexing technique in the implementation of other linguistic phenomena in syntax as well as in semantics."
      ]
    },
    {
      "heading": "0. INTRODUCTION",
      "text": [
        "Barker and Pullum (1990) have given a general definition of command relations.",
        "Their definition covers most cases of command relations that have been presented in linguistic literature.",
        "I will present here an indexing technique for syntax trees which allows us to implement a check for all command relations which fulfill the definition from Barker/Pullum (1990).",
        "The indexing technique can be implemented in a simple and efficient way without any special requierments for the formalism used.",
        "Hence, the indexing technique has a wide spectrum of applications for testing command relations in syntactic analysis.",
        "Futhermore, this method can also be used for command tests in semantics, i.e. to test for any two semantic representations whether the corresponding nodes of the syntax tree are in a command relation.",
        "The usefulness and necessity of a command test in semantics have been demonstrated in Latecki/Pinkal (1990).",
        "The general idea of the indexing technique is the following: while a syntax tree is being built, special indices are assigned to the nodes of this tree.",
        "Afterwards we can check whether a command relation between two nodes of this tree holds by merely examining simple set-theoretical relations of corresponding index sets."
      ]
    },
    {
      "heading": "1. A GENERAL DEFINITION FOR COMMAND RELATIONS",
      "text": [
        "The general command definition from Barker/Pullum (1990) can be informally stated in the following way: 1.1 DEFINITION (all).",
        "a P-commands p iff every node with a property P that properly dominates a also dominates [3.",
        "In this chapter I will show that this definition is equivalent to the following definition (minimum).",
        "1.2 DEFINITION (minimum).",
        "a Pc ommands [3 iff the first node with a property P that properly dominates a also dominates p. In this definition the rust node that dominates a means the node most immediately dominating a, as it is usually used in linguistics.",
        "Below I will specify both of these definitions formally.",
        "The main difference between these two definitions is that in the first we must check every node with a property P that properly dominates a, while in the second it is enough to check only one node, just the first node with the property P that properly diominates a.",
        "It can be easily seen that the command tests based on definition 1.2 are an important improvement in efficiency for computational applications.",
        "Both versions (all) and (minimum) are used as command definitions in linguistic literature, so their equivalence also has linguistic consequences.",
        "For example, definition 1.3 of MAX-command from Barker/Pullum (1990) (which I formulate following Sells' definition of c-command, Sells (1987)) is equivalent to Definition 1.4, which has been proposed in Aoun/Sportich (1982).",
        "1.3 DEFINITION.",
        "a MAX-commands 13 if every maximal projection properly dominating a dominates 13.",
        "1.4 DEFINITION.",
        "a MAX-commands p iff the first maximal projection properly dominating a dominates p. These definitions are special cases of definitions 1.1 and 1.2 for the property of being a set of maximal projections.",
        "Before I formulate the general command definition in a formal way, I will now quote some other definitions from Barker/Pullum (1990).",
        "1.5 DEFINITION.",
        "A relation R on a set N is reflexive iff aRa for all a in N; irreflexive iff aRa; symmetric iff aRb implies bRa; asymmetric iff aRb implies b R a ; antisymmetric iff aRb and bRa implies a=b; transitive iff aRb and bRc implies aRc.",
        "A relation R on a set N is called a linear order if it is reflexive, antisymmetric, transitive and has the following property (comparability): for every a and b in N, either aRb or bRa.",
        "The following definition of a tree stems from Wall (1972).",
        "1.6 DEFINITION.",
        "A tree is a 5-tuple T=<N,L,P,<P,LABEL>, where N is a finite nonempty set, the nodes of T, L is a finite set, the labels of T, is a reflexive, antisymmetric relation on N. the dominance relation of T, <P is an in' eflexive, asymmetric, transitive relation on N, the precedence relation of T, and LABEL is a total function from N into L, the labeling function of T, such that for all a, b, c and d from N and some unique r in N (the root node of T), the following hold: (i) The Single Root Condition: r?.Da (ii) The Exclusivity Condition: (a.1)b v b?.1)a)+4,(a<Pb v b<Pa) (iii) The Nontangling Condition: (a<Pb A aPc A b>r)(1)-->C<Pd I will also use >I) the proper dominance relation, which will be just like but with all pairs of the form <a,a> removed.",
        "1.7 DEFINITION.",
        "If aM 3 we say that a is the mother of (3 , or a immediately dominates 13, where aMf3 iff a>D13 A --ax [a>Dx>131.3].",
        "1.8 DEFINITION.",
        "A property P on a set of nodes N is a subset of N. If a node a satisfies P, I will write aeP or P(a).",
        "1.9 DEFINITION.",
        "The set of upper bounds for a with respect to a property P, written UB(a,P), is given by",
        "Now I can formally specify the meaning of the expression \"the first node with a property P that properly dominates a\" from the definition 1.2; it denotes the smallest element of the set UB(a,P), minUB(a,P).",
        "First I will show that this element always exists.",
        "In set theory, it is a well-known fact that in any tree, a set of nodes that dominate a given node is well-ordered in the dominance relation (see Kuratowski/Mostowski (1976), for example).",
        "To be precise, for a given node a of a tree T, the set UB(a)= [xe T: x>Da) is well-ordered.",
        "Hence, the set UB(a,P)=UB(a) n P has a smallest element, which we denote minUB(a,P).",
        "At this point we are ready to formally state command definitions 1.1 and 1.2.",
        "1.11 DEFINITION (all).",
        "a P-commands iff Vx (xeUB(a,P) xg)13).",
        "1.12 DEFINITION (minimum).",
        "a P-commands iff minUB(a,P)P13.",
        "We say that P generates the P-command relation.",
        "For example, we obtain the MAX-command relation (1.3) as a special case of Definition 1.11 if we take the set (aEN: LABEL(a)E MAX) as a property P. where MAX is any set of maximal projections.",
        "Definition 1.11 is the general command definition from Barker/Pullum (1990).",
        "1.13 THEOREM.",
        "Definitions 1.11 (all) and 1,12 (minimum) are equivalent.",
        "Proof.",
        "If a pair <a,I3> fulfills the definition (all), then it also fulfills the definition (minimum), because minUB(a,P)E UB(cc,P) if UB(oc,P) 0.",
        "If UB(a,P) = 0, then minUB(a,P) = the root node of T, so condition minUB(a,P)P13 is also fulfilled.",
        "Conversely, let a pair <a43> fulfill the definition (min).",
        "This means that minUB(a,P)P13.",
        "We must show that Vx (xE UB(cc,P) xPf3).",
        "If LIB(a,P) is the empty set, then the claim is trivially fulfilled.",
        "If UB(a,P) is not empty, then let x be any element from UB(a,P).",
        "Then xPminUB(a,P).",
        "Since \"P\" is a linear relation on UB(a,P), it is transitive.",
        "Hence, ii13 m inUB (a ,P) and rninUB(a,P)A3 implies x.?..13(3."
      ]
    },
    {
      "heading": "2. AN INDEXING TECHNIQUE",
      "text": [
        "I will now present an indexing mechanism which allows us to check any command relation in the sense of Definition 1.11 in a simple and straightforward way.",
        "Let P be any property of nodes of a given syntax wee.",
        "The idea is the following: while the syntax tree is being built, there are special indices assigned to every node of this tree.",
        "Generally, every node inherits indices from its mother.",
        "Specifically, if P(a) holds for a node a, then a unique new index is put into the index set of a and the new index set of a obtained in this way will be inherited futher.",
        "This process is formally described in the following definition of functions indp and fp.",
        "Letting T be any syntax tree, we define functions indp and fp from all nodes of T into finite subsets of N (the positive integers), whereby we can take finite subsets of any index set as a image of indp and fp.",
        "2.1 DEFINITION.",
        "Let P be any property.",
        "The function indp: N --> F (N)= (a c N: a is a finite subset of N) is defined recursively as follows:",
        "10 indp(root(T))= (1), where root(T) denotes the root node.",
        "20 If a immediately dominates /3, then",
        "where fp is a function fp: N ---> F (N) which fulfills the following conditions:",
        "11 If ae P, then fp(a) = 0.",
        "21 If a P, then fp(a) = ), for some unique index TEN ('re ffp(Y): YEN and 'Ma)).",
        "The procedural aspect of this definition can be described as follows.",
        "First, the function fp assigns a set with a unique index to every node from P, and the empty set to every node which does not belong to P, Then, for every node, the set it has been assigned by the function fp is added to the indices it inherits from its mother.",
        "The result is the value of the function indp.",
        "Based on this description, it is easy to note the following facts."
      ]
    },
    {
      "heading": "2.2 FACT.",
      "text": [
        "If 013, then indp(y) indp(13) - fp(13)."
      ]
    },
    {
      "heading": "2.3 FACT.",
      "text": [
        "If ye P, then 7>_DJ3 iff fp(y) indp(f3).",
        "Now I present the main theorem of this paper which gives a basis for efficient and simple implementations of P-command relations.",
        "Due to this theorem, we can check whether any P-command relation holds between two nodes by merely examining the subset relationship of corresponding index sets.",
        "2.4 THEOREM.",
        "Node a P-commands node iff indp(a) - fp(a) c indp(0).",
        "The proof, which makes use of equivalence Theorem 1.13, will be given at the end of this chapter.",
        "To illustrate the P-command check based on the theorem above, I give an example for a MAX- command relation (1.3) which we obtain from general command definition 1.11 if we take the set (aEN: LABEL(a)E MAX) as a property P. where MAX = (NP, VP, AP, PP, S-bar) is a set of maximal projections (Sells 1987).",
        "Let us consider the syntax analysis for sentence (2.5).",
        "In tree (2.6), the upper set of indices at every node corresponds to the value of the function fp for this node and the lower set of indices corresponds to the value of the function indp for this node.",
        "(2.5) A friend of his saw every man with a telescope.",
        "telescope\", by verifying that indp(\"saw\")-fp(\"saw\").",
        "(1,5) c (1,5,7 )=indp(\"with a telescope\"), or that \"every man\" does not MAX-command \"his\", by verifying that indp(\"every man\")-fp(\"every man\")= (1,5) is not a subset of indp(\"his\")= (1,2,3,4).",
        "We can see, for example, that the verb \"saw\" MAX- commands the prepositional phrase \"with a",
        "If a' is a semantic representation of a node a, then fp(a') = fp(a) and indp(a) = indp(a).",
        "Now we can check, for two given semantic representations a', 0', whether a P-command relation holds between the two corresponding nodes a, p, by examining the condition from Theorem 2.4 for a', 13% indp(a) - fp(a') indp((3).",
        "(For more details see Latecki/Pinkal (1990).)",
        "An important advantage of the indexing technique is that its applicability for checking command relations in semantics does not depend on an Ispomorphism between syntactic and semantic structure, since the necessary syntactic information is encoded in indices.",
        "Therefore, this information can be moved to any required position in the semantic structure together with the representation of a given node.",
        "Definition 1.11 does not cover all cases of command relations which have been presented in linguistic literature, but there are only a few exceptions.",
        "One is the relation that is called c command in Reinhart (1976; 1981, p.612; 1983, p.23): 2.7 DEFINITION.",
        "Node a c(onsitituent)- commands node (3 iff the branching node xi most immediately dominating a either dominates f3 or is immediately dominated by a node x2 which dominates 0, and x2 is of the same category type as xi.",
        "A node y is a branching node if there exists two different nodes x,y such that 'yMx A yMy.",
        "As T. Reinhart wrote, the intention of this definition is to capture c-command relations in cases S-bar over S or VP over VP.",
        "Hence, we can say (for our purposes) that x2 is of the same category type as xi if LABEL(x2) = S-bar, LABEL(x1) = S or LABEL(x2) = LABEL(xi) = VP.",
        "This c-command definition allows the minimal upper bound to be replaced by another node, one node closer to the root, so this relation cannot be generated by any property, since this property must then depend on the node a.",
        "However, the condition of Definition 2.7 can be generated by a relation.",
        "In order to use a given relation R as generator, it is enough to replace the set of upper bounds UB(a,P) by the set UB(a,R)= (PE N: f3>Dot A aR(3)), in general command definition 1.11.",
        "For detailed disscusion see Barker/Pullum (1990).",
        "With an example of Reinharts c-commando relation, I want to show that it is also possible to treat relational command definitions with the indexing technique.",
        "Here I do not want to consider the treatment of the relational command definition with the indexing technique in the general case, because it would lead to a formal mathematical discussion without linguistic connections.",
        "To specify a test for Reinharts c-command, we need merely to modify part 20 of the definition of the function indp in 2.1.",
        "The definition of the function fp together with the basis test condition given in Theorem 2.4 will be left unchanged.",
        "As a property P we take the set of branching nodes.",
        "New part 20 of Definition 2.1 will be formulated in the following way: 20' If a immediately dominates 13 and f3 is of the same category as a, then indp(13) = indp(a).",
        "If a immediately dominates f3 and f3 is not of the same category as a then indp(f3) = indp(a) u fp(3).",
        "The idea of this modification is that if a node 13 is of the same category as a node a, then i3 only inherits the indices from a.",
        "So, in this case, the new index from the set fp(i) does not influence the value of the function indp on 13.",
        "I illustrate the indexing check for c-command definition 2.7 with the syntax analysis for the following example sentense from Reinhart (1983).",
        "(2.8) Lola found the book in the library.",
        "In tree (2.9), the upper set of indices at every node corresponds to the value of the function fp at this node and the lower set of indices corresponds to the value of the function indp at this node.",
        "We can see, for example, that the subject of S, \"Lola\", c-commands the COMP in S-bar, by verifying that indp(\"Lola\")-fp(\"Lola\")= (1) (1).",
        "indp(COMP), or that the object, \"the book\", c-commands the NP in PP, \"the library\", by verifying that",
        "Due to Definition 1.12 (minimum), the node y also dominates 13, hence E c indp(13).",
        "So, we have the inclusion indp(a)-fp(a) indp(13).",
        "\"\" Now let indp(a)-fp(a) indp(13), for any two nodes a, 13 of some tree T, and let y be any node from P that dominates a. indp(y) indp(a)-fp(a), since y dominates a (2.2).",
        "From the transitivity of the inclusion relation, indp(y) indp(13).",
        "This implies that fp(y) indp(0).",
        "Due to Fact 2.3, the needed relation y21313 holds, so a P-commands"
      ]
    },
    {
      "heading": "3. CONCLUSIONS",
      "text": [
        "I have presented an indexing technique which allows us to test all command relations that fulfill the definition of Barker and Pullum (1990).",
        "On an example of Reinharts c-command relation, I have also shown that it is possible to treat relational commands with this technique.",
        "The indexing technique can be simply and efficiently implemented without any special requierments for the formalism used.",
        "Based on it, Millies (1990) has implemented tests for MAX- command, subjacency and government in a principle-based parser for GB (Chomsky 1981, 1982 and 1986).",
        "It is also possible to use similar indexing processes to treat other linguistic phenomena in syntax as well as in semantics.",
        "Hence, the indexing technique has a wide spectruth of applications.",
        "For example, Latecki and PinkAl (1990) present an indexing mechanism which allows us to achieve the effects of \"Nested Cooper Storage\" (Keller 1988 and Cooper 1983)."
      ]
    },
    {
      "heading": "ACKNOWLEDGMENTS",
      "text": [
        "I would like to thank my advisor Manfred Pinkal for valuable discussions and suggestions.",
        "I also want to thank Geoff Simmons for correcting my English."
      ]
    },
    {
      "heading": "REFERENCES",
      "text": []
    }
  ]
}
