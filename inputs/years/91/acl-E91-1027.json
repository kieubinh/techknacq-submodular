{
  "info": {
    "authors": [
      "Mori Rimon"
    ],
    "book": "Conference of the European Association for Computational Linguistics",
    "id": "acl-E91-1027",
    "title": "The Recognition Capacity of Local Syntactic Constraints",
    "url": "https://aclweb.org/anthology/E91-1027",
    "year": 1991
  },
  "references": [
    "acl-A88-1019",
    "acl-C90-3030",
    "acl-J86-1001",
    "acl-J88-1003",
    "acl-P88-1026"
  ],
  "sections": [
    {
      "heading": "THE RECOGNITION CAPACITY OF LOCAL SYNTACTIC CONSTRAINTS",
      "text": [
        "The I lebrew University of Jerusalem, Giv'at Ram, Jerusalem 91904, ISRAEL E-mail: rimon@hujics.13ITNET"
      ]
    },
    {
      "heading": "Abstract",
      "text": [
        "Given a grammar for a language, it is possible to create finite state mechanisms that approximate its recognition capacity.",
        "These simple automata consider only short context information, drawn from local syntactic constraints which the grammar imposes.",
        "While it is short of providing the strong generative capacity of the grammar, such an approximation is useful for removing most word tagging ambiguities, identifying many cases of ill-formed input, and assisting efficiently in other natural language processing tasks.",
        "Our basic approach to the acquisition and usage of local syntactic constraints was presented elsewhere; in this paper we present some formal and empirical results pertaining to properties of the approximating automata."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "Parsing is a process by which an input sentence is not only recognized as belonging to the language, but is also assigned a structure.",
        "As [[lerwick/Weinberg 84] comment, recognition per se (i.e. a weak generative capacity analysis) is not of much value for a theory of language understanding, but it can be useful \"as a diagnostic\".",
        "We Claim that if an efficient recognition procedure is available, it can be most valuable as a pre-parsing reducer of lexical ambiguity (especially, as [Milne 86] points out, for deterministic parsers), and even more useful in applications where full parsing is not absolutely required - e.g. identification of ill-formed inputs in a text critique program.",
        "Still weaker than recognition procedures arc methods which approximate the recognition capacity.",
        "This is the kind of methods that we discuss in this paper.",
        "More specifically, we analyze the recognition capacity of automata based on local (short context) considerations.",
        "In [I Ierz/Rimon 91] we presented our approach to the acquisition and usage of local syntactic constraints, focusing on its use for reduction of word-level ambiguity.",
        "After briefly reviewing this method in section 2 below, we examine in more detail various characteristics of the approximating automata, and suggest several applications.",
        "2.",
        "Background: Local Syntactic Constraints Let S =WN be a sentence of length N, (Wi} being the words composing the sentence.",
        "And let tm be a tag image corresponding to the sentence S, (ti) belonging to the tag set T - the set of word-class tags used as terminal symbols in a given grammar G. Typically, M=N, but in a more general environment we allow Al > N .",
        "This is useful when dealing with languages where morphology allows cliticization, concatenation of conjunctions, prepositions, or determiners to a verb or a noun, etc.",
        "; in grammars for I lebrew, for example, it is convenient Rimon's main affiliation is the IBM Scientific Center, Haifa, Israel, E-mail: rimon@haifasc3.iinusLibm.com 2 J. Herz was partly supported by the Leibniz Center for Research in Computer Science, the Hebrew University, and by the Rau foundation of the Open University.",
        "- 155 -",
        "to assume that a preliminary morphological phase separated word-forms to basic sequences of tags, and then state syntactic rules in terms of standard word classes.",
        "In any case, it is reasonable to assume that the tag image 44 cannot be uniquely assigned.",
        "Even with a coarse tag set (e.g. parts of speech with no features) many words have more than one interpretation, thus giving rise to exponentially many tag images for a sentence.'",
        "Following [Karlsson 90], we use the term cohort to refer to the set of lexically valid readings of a given word.",
        "We use the term path to refer to a sequence of NI tags (M IV) which is a tag image corresponding to the words W1,..., WN of a given sentence S. This is motivated by a view of lexical ambiguity as a graph problem: we try to reduce the number of tentative paths in ambiguous cases by removing arcs from the Sentence Graph (SG) - a directed graph with vertices for all tags in all cohorts of the words in the given sentence, and arcs connecting each tag to all tags in the cohort which follows it.",
        "The removal of arcs and the testing of paths for validity as complete sentence interpretations are done using local constraints.",
        "A local constraint of length k on a given tag t is a rule allowing or disallowing a sequence of k tags from being in its right (or left) neighborhood in any tag image of a sentence.",
        "In our approach, the local constraints are extracted from the grammar (and this is the major aspect distinguishing it from some other short context methods such as [Beale 88], [DeRose 88], [Karlsson 90], [Katz 85], [Marcus 80], [Marshall 83], and [Milne 86]).",
        "For technical convenience we add the symbol \"$ <\" at the beginning of tag images and \"> $\" at the end.",
        "Given a grammar G (which for the time being we assume to be an unrestricted context free phrase structure grammar), with a:set T of terminal symbols (tag set), a set V of *variables (non-terminals, among which S is the root van-able for derivations), and a set P of production rules of the form A 0 a, where A is in V and a is in (VU T), we define the Right Short Context of length k of a terminal t (tag): SCr (t,k) for t in T and for k = 0,1,2,3... { tZ I Z E T*, Izi=k or Izi <k if ' > $' is the last tag in z, and there exists a derivation S F. --- > at zi3 (a, 13 E Of Ii in* ) The Left Short Context of length k of a tag t relative to the grammar G is denoted by SCI (t,k) and defined in a similar way.",
        "It is sometimes useful to define Positional Short Contexts.",
        "The definition is similar to the above, with a restriction that t may start only in a given position in a tag image of a sentence.",
        "The basis for the automaton which checks a tag stream (path) for validity as a tag-image relative to the local constraints, is the function next(t), which for any t in 1' defines a set, as follows: next (t) = ( z tz e SCr (t,l) ) In [Ilemillimon 91] we gave a procedure for computing next(t) from a given context free grammar, using standard practices of parsing of formal languages (see [Aho/Ullman 72])."
      ]
    },
    {
      "heading": "3. Local Constraints Automata",
      "text": [
        "We denote by LCA(1) the simple finite state automaton which uses the preprocessed (next(t)) sets to check if a given tag stream (path) satisfies the SCr(t,l) constraints.",
        "In a similar manner it is possible to define LCA(k), relative to the short context of length k. We denote by L the language generated by the"
      ]
    },
    {
      "heading": "3 Our studies of modern written Ilebrew suggest that about 60% of the word-forms in running texts are ambiguous with respect to a basic tag set, and the average number of possible readings of such word-forms is 2.4. Even when counting only \"natural readings\", i.e. interpretations which are likely to occur in typical corpora, this number is quite large, around 1.8 (it is somewhat larger for the small subset of the most common words).",
      "text": [
        "-.",
        "156 - underlying grammar, and by L(k) thc language accepted by the automaton LCA(k).",
        "The following relations hold for the family of automata {LCA(i)}: L(I) L(2) L 'this guarantees a security feature: If for some i, I,CA(i) does not recognize (accept) a string of tags, then this string is sure to be illegal (i.e. not in L).",
        "On the other hand, any LCA(k) may recognize sentences not in L (or, from a dual point of view, will reject only part of the illegal tag images).",
        "The important question is how tight arc the inclusion relations above - i.e. how well LCA(k) approximates the language L. In particular we are interested in LCA(I).",
        "There is no simple analytic answer to this question.",
        "Contradictory forces play here: the nature of the language -- c.g a rigid word order and constituent order yield stronger constraints; the grain of the tag set -- better refined tags (different languages may require different tag sets) help express refined syntactic claims, hence more specific constraints, but they also create a greater level of tagging ambiguity; the size of the grammar -- a larger grammar offers more information, but, covering a richer set of structures, it allows more tag-pairs to co-occur; etc.",
        "It is interesting to note that for I febrew, short context methods are most needed because of the considerable ambiguity at the lexical level, but their effectiveness suffers from the rather free word/constituent order.",
        "l'inally, a coinment about the computational efficiency of the LCA(k) automaton.",
        "The time complexity of checking a tag string of length n using LCA(k) is at most 0(n x k x log ITI), while a non-deterministic parser for a context free grammar may require 0(n3x1G12).",
        "(Ti is the size of the tag set, 'GI is the size of the grammar).",
        "The space complexity of I,CA(k) is proportional to ITI\"' ; this is why only truly short contexts should be used.",
        "Note that for a sentence of length k, the power of LCA(k) is identical to the weak generative capacity of the full underlying grammar.",
        "But since the size of sentences (tag sequences) in L is unbounded, there is no fixed k which suffices.",
        "4.",
        "A Sample Grammar To illustrate claims made in the sections below, we will use the following toy grammar of a small fragment of English.",
        "Statements about the correctness of sentences etc., are of course relative to this toy grammar.",
        "The tag set T includes: n (noun), v (verb), dct (determiner), adj ( adjective ) and prep (preposition).",
        "The context free grammar G is:",
        "To extract the local constraints from this grammar, we first compute the function next(t) for every tag t in 'I', and from the resulting sets we obtain the graph below, showing valid pairs in the short context of length 1 (again, validity is relative to the given toy grammar): This graph, or more conveniently the table of \"valid neighbors\" below, define the LCA(I) automaton.",
        "The table is actually the union of the SCr(t,l) sets for all t in T, and it is derived directly from the graph:",
        "Assuming the word tagging shown in section 6, there arc 256 (2 x 2 x2x 4 x 2x 2 x 2) tentative tag images (paths) for this sentence and for each of its 5040 permutations.",
        "This generates a very large number of rather random tag images.",
        "Applying LCA(I), only a small number of images are recognized as potentially valid.",
        "Among them are syntactically correct sentences such as: (2a) Fish like old books about all people.",
        "and only less than 0.1% sentences which are locally valid but globally incorrect, such as: (2b) + Old fish all about books like people.",
        "(tagged as [$ < , n, v, n, prep, n, v, n, > $]).",
        "These two examples do not suggest any kind of proof, but they well illustrate the recognition power of even the least powerful automaton in the (LCA(i)) family.",
        "To get another point of view, one may consider the simple formal language L consisting of the strings (ambrn) for 1 m, which can be generated by a context-free grammar G over 'I' = (a, b).",
        "1,CA(I) based on G will recognize all strings of the form (aibk) for 1 5_ j,k, but none of the very many other strings over T. It can be shown that, given arbitrary strings of length n over T, the probability that LCA(1) will not reject strings not belonging to L is proportional to n12^, a term which tends rapidly to 0.",
        "This is the over-recognition margin.",
        "6.",
        "Use of LCA in Conjunction with a Parser The number of potentially valid tag images (paths) for a given sentence can be exponential in the length of the sentence if all words are ambiguous.",
        "It is therefore desirable to filter out invalid tag images before (or during) parsing.",
        "To examine the power of LCAs as a pre-parsing filter, we use example (2) again, demonstrating lexical ambiguities as shown in the chart below.",
        "The chart shows the Reduced Sentence Graph (I2SG) - the original SG from which invalid arcs (relative to the SCr(t,l) table) were removed."
      ]
    },
    {
      "heading": "ALL OLD PEOPLE LIKE BOOKS ABOUT FISH",
      "text": [
        "We arc left with four valid paths through the sentence, out of the 256 tentative paths in SG.",
        "Two paths represent legal syntactic interpretations (of which one is the intended\" meaning).",
        "The other two are locally valid but globally incorrect, having either two verbs or no verb at detadj--, nv ) n *prep n"
      ]
    },
    {
      "heading": "INN/I NI",
      "text": [
        "nnv% prep--4 adjv >$ adj - 158 - all, in contrast to the grammar.",
        "SCr(t,2) would have rejected one of the wrong two.",
        "Note that in this particular example the method was quite effective in reducing sentence-wide interpretations (leaving an easy job even for a deterministic parser), but it was not very good in individual word tagging disambiguation.",
        "These two sub-goals of tagging disambiguation - reducing the number of paths and reducing word-level possibilities - are not identical.",
        "It is possible to construct sentences in which all words arc two-way ambiguous and only two disjoint paths out of the 211 possible paths are legal, thus preserving all word-level ambiguity.",
        "We demonstrated the potential of efficient path reduction for a pre-parsing filter.",
        "But short-context techniques can also be integrated into the parsing process itself.",
        "In this mode, when the parser hypothesizes the existence of a. constituent, it will first check if local constraints do not rule out that hypothesis.",
        "In the example above, a more sophisticated method could have used the fact that our grammar does not allow verbs in constituents other than VP, or that it requires one and only one verb in the whole sentence.",
        "The motivation for this method, and its principles of operation, arc similar to those behind different techniques combining top-down and bottom-up considerations.",
        "The performance gains depend on the parsing technique; in general, allowing early decisions regarding inconsistent tag assignments, based on information which may be only implicit in the grammar, offers considerable savings.",
        "7.",
        "Educated Guess of Unknown Words Another interesting aid Which local ,syntactic constraints can provide for practical parsers is an oracle\" which makes \"educated guesses' about unknown words.",
        "It is typical for language analysis systems to assume a noun whenever an unknown word is encountered.",
        "There is sense in this strategy, but the use of LCA, even LCA(1), can do much better.",
        "To illustrate this feature, we go back to the princess and the frog.",
        "Suppose that an adjective unknown to the system, say \"Transylvanian\" was used rather than \"charming\" in example (1), yielding the input sentence: (3) The Transylvanian princess kissed a frog.",
        "Checking out all tags in 1' in the second position of the tag image of this sentence, the only tag that satisfies the constraints of LCA(1) is adj.",
        "8.",
        "\"Context Sensitive\" Spelling Verification A related application of local syntactic constraints is spelling verification beyond the basic word level (which is, in fact, SCr(t,0) ).",
        "Suppose that while typing sentence (1), a user made a typing error and instead of the adjective \"charming\" wrote \"charm\" (or \"arming\", or any other legal word which is interpreted as a noun): (4) The charm princess kissed a frog.",
        "This is the kind of errors that a full parser would recognize but a word-based spell-checker would not.",
        "But in many such cases there is no need for the full power (and complexity) of a parser; even LCA(1) can detect the error.",
        "In general, an LCA which is based on a detailed grammar, offers cheap and effective means for invalidation of a large set of ill-formed inputs.",
        "Here too, one may want to get another point of view by considering the simple formal language L = (ambrn).",
        "A single typo results in a string with one \"a\" changed for a \"b\", or vice versa.",
        "Since LCA(1) recognizes strings of the form {alb') for 1 given arbitrary strings of length n over T = (a, b), LCA(1) will detect all but two of the n single typos possible - those on the borderline between the a's and b's.",
        "4 Remember that everything is relative to the toy grammar used throughout this paper.",
        "Hence, although the charm princess\" may be a perfect noun phrase, it is illegal relative to our grammar.",
        "- 159 - 9.",
        "Assistance to Tagging Systems",
        "Tagged corpora are important resources for many applications.",
        "Since manual tagging is a slow and expensive process, it is a common approach to try automatic heuristics and resort to user interaction only when there is no decisive information.",
        "A well-built tagging system can -learn\" and improve its performance as more text is processed (e.g. by using the already tagged corpus as a statistical knowledge base).",
        "Arguments such as those given in sections 7 and 8 above suggest that the use of local constraints can resolve many tagging ambiguities, thus increasing the \"speed of convergence\" of an automatic tagging system.",
        "This seems to be true even for the rather simple and inexpensive I CA(1) for languages with a relatively rigid word order.",
        "For related work cf. [Greene/Rubin 71], [Church 88], [DeRose 88], and [Marshall 83].",
        "10.",
        "Final Remarks To make our presentation simpler, we have limited the discussion to straightforward context free grammars.",
        "But the method is more general.",
        "It can, for example, be extended to CFGs augmented with conditional equations on features (such as agreement) - either by translating such grammars to equivalent Cl;Gs with a more detailed tag set (assuming a finite range of feature values), or by augmenting our automata with conditions on arcs.",
        "It can also be extended for a probabilistic language model, generating probabilistic constraints on tag sequences from a probabilistic CFG (such as of [Fujisaki et al.",
        "89]).",
        "Perhaps more interestingly, the method can be used even without an underlying grammar, if a large corpus and a lexical analyzer (which suggests pre-disambiguated cohorts) are available.",
        "This variant is based on a technique of invalidation of tag pairs (or longer sequences) which satisfy certain conditions over the whole language L, and the fact that L can be approximated by a large corpus.",
        "We cannot elaborate on this extension here."
      ]
    }
  ]
}
