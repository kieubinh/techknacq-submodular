{
  "info": {
    "authors": [
      "Jurgen Wedekind"
    ],
    "book": "Conference of the European Association for Computational Linguistics",
    "id": "acl-E91-1036",
    "title": "Classical Logics for Attribute-Value Languages",
    "url": "https://aclweb.org/anthology/E91-1036",
    "year": 1991
  },
  "references": [
    "acl-C88-1009",
    "acl-J90-1002",
    "acl-P86-1038"
  ],
  "sections": [
    {
      "heading": "CLASSICAL LOGICS FOR ATTRIBUTE-VALUE LANGUAGES",
      "text": []
    },
    {
      "heading": "USA Abstract",
      "text": [
        "This paper describes a classical logic for attribute-value (or feature description) languages which are used in unification grammar to describe a certain kind of linguistic object commonly called attribute-value structure (or feature structure).",
        "The algorithm which is used for deciding satisliability of a feature description is based on a restricted deductive closure construction for sets of literals (atomic formulas and negated atomic formulas).",
        "In contrast to the Kasper/Rounds approach (cf. [Kasper/Rounds 90)), we can handle cyclicity, without the need for the introduction of complexity norms, as in [Johnson 88] and [Beierle/Pletat 88].",
        "The deductive closure construction is the direct proof-theoretic correlate of the congruence closure algorithm (cf. [Nelson/Oppen 80]), if it were used in attribute value languages for testing satisfiability of finite sets of literals."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "This paper describes a classical logic for attribute-value (or feature description) languages which are used in unification grammar to describe a certain kind of linguistic object commonly called attribute-value structure (or feature structure).",
        "From a logical point of view an attribute-value structure like e.g the following (in matrix notation)"
      ]
    },
    {
      "heading": "PRED- 'PROMISE' TENSE PAST SUBJPRED 'JOHN' I SUBJ PRED 'COME'",
      "text": [
        "can be regarded as a graphical representation of a minimal model of a satisfiable feature description.",
        "If we assume that the attributes .",
        "(in the example: PRED, TENSE, SUBJ, XCOMP) are unary partial function symbols and the values (a, \"PROMISE', PAST, 'JOHN', 'COME') are constants then the given feature structure represents graphically e.g. the minimal model of the following description: PREP SUBJa 'JOHN' & TENSEa PAST & PREDa Pe.- 'PROMISE' & SUBJa SUBJ XCOMPa PRED XCOMPa 'COME'.1 Note that the terms are formed without using brackets.",
        "(Since all function symbols are unary, the introduction of brackets would So, in the following attribute-value languages are regarded ar quantifier-free sublanguages of classical first order languager with equality whose (nonlogical) symbols are given by a set 0' unary partial function symbols (attributes) and a set of constants (atomic and complex values).",
        "The logical vocabulary includes all propositional connectives; negation is interpreted classically.2 For quantifier-free attribute-value languages L we give an axiomatic or Hilbert type system inv which simply results from an ordinary first order system (with partial function symbols), if its language were restricted to the vocabulary of L. According to requirements of the applications, axioms for the constant consistency, constant/complex-consistency and acyclicity can be added to force these properties for the feature structures (models).",
        "For deciding consistency (or satisfiability) of a feature description, we assume first, that the conjunction of the formulas in, the feature description is converted to disjunctive normal form.",
        "Since a formula in disjunctive normal form is consistent, ill' at least one of its disjuncts is consistent, we only need an algorithm for 'deciding consistency of finite sets of literals (atomic formulas or negated atomic formulas) S. In contrast to the reduction algorithms which normalize a set S according to a complexity norm in a sequence of norm decreasing rewrite steps' we use a restricted deductive closure algorithm for deciding the consistency of sets of literals.'",
        "The restriction results from the fact that it is sufficient for deciding the consistency of S to consider proofs of equations from S with a certain subterm property.",
        "For the closure construction only those equations are derived from S whose terms are subterms of the terms occurring in the formulas of S. This guarantees that the construction terminates with a finite set of literals.",
        "The adequacy of this subterm property restriction, which was already shown for the number theoretic calculus K in [Kreisel/Tait 61] by [Statinan 74], is a necessary condition for the development of more efficient Cut-free Gentzen type systems for attribute-not improve the readability essentially.)",
        "Therefore we write e.g. FRED SUBJa instead of PRED(SUBJ(a)).",
        "Moreover, this closure construction is the direct prooftheqretic correlate of the congruence closure algorithm (cf. Itielson/Oppen 80)), if it were used for testing satisfiability of finite sets of literals in few.",
        "As it is shown there, the congruence closure algorithm can be used to test consistency if the terms of the equations are represented as labeled graphs and the equations as a relation on the nodes of that graph.",
        "On tho basis of the algorithm for deciding satisfiability of finite sets of formulas we then show the completeness and decidability of ir;tv."
      ]
    },
    {
      "heading": "2 Attribute-Value Languages",
      "text": [
        "In this section we define the type of language we want to consider and introduce some additional notation.",
        "2] Syntax 2.1.",
        "DEFINITION.",
        "A quantifier-free attribute-value language (j.",
        "(4v) consists of the logical connectives 1 (false), (negation), D (implication), the equality symbol Pe, and the parentheses (, ).",
        "The nonlogical vocabulary is given by a finite set of constants C and a finite set of unary partial function symbols F1 (C n = 0).",
        "2.2.",
        "DEFINITION.",
        "The class of terms (T) of L is recursively defined as follows: each constant is a term; if f is a function symbol and r is a term, then f r is a term.",
        "2.3.",
        "DEFINITION.",
        "The set of atomic formulas of L is flT?",
        "r1,r2(7\") Li {I).",
        "2.4.",
        "DEFINITION.",
        "The formulas of L are the atomic formulas and, whenever 0 and 0 are formulas, then so are0) and (d) D 2.5.",
        "DEFINITION.",
        "If a is a well-formed expression (term or formula), then a[rard is used to designate an expression obtained from a by replacing some (possibly all or none) occurrences of r1 in a by r2.",
        "We assume that the connectives V (disjunction), Sz(conjuncHon) and(equivalence) are introduced by their usual definitions, Furthermore, we write sometimes r1r2 instead of -rz and drop the parentheses according to, the usual"
      ]
    },
    {
      "heading": "212 Semantics",
      "text": [
        "A model for L consists of a nonempty universe U and an interpreOlion function Y.",
        "Since not every term denotes an element in U lithe function symbols are interpreted as unary partial functions, we generalize the partiality of the denotation by assurpiag that 0 itself is a partial function.",
        "Thus in general not",
        "2.6.",
        "DEFINITION.",
        "A model for L is a pair M =consisting of a nonempty set U and an interpretation function 9 = 9c U W such that (i) e'ce[C 1-+ tip (ii)JF1 CV' 1-* Vi 1-* liblp (iil) V f t Ti(f(Doin(a) --+ Nf) 0 0).",
        "The (partial) denotation function for terms - (Uc[7 1-4 U]r) induced byis defined as follows:7 2.7.",
        "DEFINITION.",
        "For every ecC and frcT (feFi),",
        "A formula 0 is valid (1= 0), ill 0 is true in all models.",
        "A formula 0 is satisfiable, iff it has at least one model.",
        "Given a set of formulas 1, we say that M satisfies r (kr,, r), iff M satisfies each formula 0 in r. r is satisfiable, ill there is a model that satisfies each formula in I'.",
        "0 is logical consequence of r (r if every model that satisfies r is a model of 0."
      ]
    },
    {
      "heading": "3 The System Hiqv",
      "text": [
        "In this section we describe an axiomatic or Hilbert type system H,?sv for quantifier-free attribute-value languages L. We give a decision procedure for the satisfiability of finite sets of formulas and show the completeness and decidability of .Iffly on the basis of that procedure."
      ]
    },
    {
      "heading": "3.1 Axioms and Inference Rules",
      "text": [
        "If L is a fixed attribute-value language, then the system consists of a traditional axiomatic propositional calculus for L and two additional equality axioms.",
        "For any formulas 0,0,r, terms 71n the text following the definition we drop the overline.",
        "A formula is derivable from a set of formulas r (riff there is a finite sequence of formulassuch that On = and every 44 is an axiom, one of the formulas in r or follows by MP from two previous formulas of the sequence.",
        "rk is a theorem (4), if rk is derivable from the empty set.",
        "A is derivable from F (r FA), if each formula of A is derivable from I'.",
        "I' and A are deductively equivalent (I' II A), if r FA and A F The system is sound:\""
      ]
    },
    {
      "heading": "3.2 Satisfiability",
      "text": [
        "We now prove 3.3.",
        "THEOREM.",
        "The satisfiability of a finite set of formulas F is decidable.",
        "by providing a terminating procedure: First the conjunction of all formulas in r (denoted by A r) is converted into disjunctive normal form (DNF) using the well-known standard techniques.",
        "Then A r is equivalent with a DNF F A\" E (44 &olaz...&01,)v(4'7&...&4) where the conjuncts oi;= I, ..,n; j = I, .., ki) are either atomic formulas or negations of atomic formulas, henceforth called literals.",
        "By the definition of the satisfiability we get: 'Cf.",
        "e.g. [Church 54",
        "constant-consistency and (ii.",
        ")constant/complexconsistency are to be guaranteed for a set Of atomic values V (V C C), for each a, kV (a 6) and fePI, axioms of the form (i.)",
        "F a0b and (ii.)",
        "fa* fa have to be added (a finite set).",
        "If also acyclicity has to be ensured, axioms of the form (iii.)",
        "1 OT r, with oc.Fit ,reT, have to be added.",
        "Although this set is infinite, we only need a finite subset for the satisfiability test and for dechlability (see below).",
        "11 For the propositional calculus cf. the standard proofs.",
        "For ax- loins El and E2 cf. [Johnson 88].",
        "3.4.",
        "LEMMA.",
        "Let A .51 v A s' v v A S\" be a DNF Of A r consisting of conjunctions A Si of the literals in S', then A r is satisfiable, iff at least one disjunct A si is satisfiable.",
        "We complete the proof of Theorem 3.3 by an algorithm that converts a finite set of literals S' into a deductively equivalent set of literals in normal form S, which is satisfiable if it is not equal to (1).",
        "The normal form is constructed by closing S deductively by those equations whose terms are subterms of the terms occurring in S. For the construction we use the following derived rules:",
        "We get RI and R2 from El and E2 by the deduction theorem.",
        "113 is derivable from RI and R2, since we get from r r' first r r by RI and then r1 r by R2.",
        "If Ts denotes the set of terms occurring in the formulas of S (Ts = {r, r' I (,..)r ricS)), and SUB(Ts) denotes the set of all subterms of the terms in Ts\" SUB(Ts) =arers, with crcFn, then the normal form is constructed according to the following inductive definition.",
        "3.5.",
        "DEFINITION.",
        "For a given set of literals S we define a sequence of sets Si (i > 0) by induction:",
        "(go, ha, g f fa) {g f fc, g f fa) ) (fc, fa) 3.0.",
        "DEFINITION.",
        "Let S,, = St; with I = min {i I = 3.7.",
        "LEMMA.",
        "For S,, holds: S Ai- Su.",
        "PROOF.",
        "If S,, 0 (1), then S and S are deductively equivalent, since S is a subset of Sy and Su only contains formulas derivable from S. For Su = (1) the same holds for S._1.",
        "Since S,..., is inconsistent, S is deductively equivalent with (1).",
        "0 Note that for each equation in Si (S, (1)) there is a proof from S with the subterm property, as defined below.",
        "This follows from the subterm condition in the inductive construction.",
        "3.8.",
        "DEFINITION.",
        "A proof of an equation from S has the subterm property, if each term occurring in the equations of that proof is a subterm of the terms in TS, i.e. an element of SUB(Ts).",
        "gmme z pmbmb nhf Jo gmtne pnhf fa The deductive closure construction restricted by the subterm property is a proof-theoretic simulation of the congruence closure algorithm (cf. {Nelson/Oppen 80113), if used for testing satisfiability of finite sets of literals in inv.",
        "Strictly speaking, if i. the congruence closure algorithm is weakened for partial functions, S is not trivially inconsistent (1 not in S), and iii.",
        "the failure in the induction step of 3.5. is overruled,",
        "\" Cf. also [Gallier 87].",
        "then r r' is in Su if the nodes which represent the terms r and r' in the graph constructed for S are congruent.\" Moreover, for unary partial functions the algorithm is simpler, since the arity does not have to be controlled.",
        "3.9.",
        "LEMMA.",
        "The set of all equations in S,, is closed under sublerm reflexivity, symmetry and transitivity.",
        "PROOF.",
        "For Su = (1) trivial.",
        "If S,, 0 (1), then Su is closed under subterm reflexivity and symmetry, since these properties are inherited from So to its successor sets.",
        "S,, is closed under transitivity, since we first get rscSUB(Ts) from r2, r2 r3cS,, and then according to the construction also ^$ r2Fr2/r3JcS,,4.1 = 5,,, with r2[r2/7-3] =",
        "For the proof that the satisfiability of a finite set of literals is decidable we first show that a set of literals in normal form is satisfiable, if the set is not equal to (1).",
        "For Su = {J..) we get trivially: 3.10.",
        "LEMMA.",
        "Su = (1) ^S,,).",
        "Otherwise we can show the satisliability of S,, by the construction of a canonical model that satisfies S,,.",
        "Let E' be the set of all (nonnegated) equations in Su, TE the set of terms occurring in E andP..,-E the relation induced by Et, on rEv (((r, I r ricE)).",
        "Then, we choose as the universe of the canonical model M = (U, am) the set of all equivalence classes ofP..-:E on TE, if To,, 0 0.",
        "By Lemma 3.9 this set exists.",
        "If Sy contains no (unnegated) equation, we set = (0), since the universe has to be nonempty.",
        "3.11.",
        "DEFINITION.",
        "For a set of literals S,, in normal form, the canonical term model for S,, is given by the pair M., = consisting of the universe {Mai Ps1 Em if TR,.",
        "0 0 (0) otherwise and the interpretation function which is defined for ccC, feFi and [r](11,, by:\" (c)[c]if ccTE., undefined otherwise [1 rif ric[7] and f r'eTEu 2'Fl(f)([7])und'elfined otherwise.",
        "It follows from the definition that %, is a partial function.",
        "Suppose further for F, (f) that [71] = [r2] and that ap,(j)(Erd) is defined.",
        "Then Wi(f)([7.11)(f)(Er2D.",
        "For this, suppose 9F1 (f)([71]) = (ill, with r'47-2).",
        "Since E. is an equivalence relation we get ricir21 and thus qPi (.1)&2D = Vet \"Cf. [Wedekind 90].",
        "15We drop the .E.,,-index of the equivalence classes.",
        "For each term r in TE., it follows from the definition of 9c and 9F, : 9,,(r) = [r].",
        "By the following lemma we show in addition that the domain of 9,, restricted to Ts,, is equal to TE,.",
        "3.12.",
        "LEMMA.",
        "For each term r m Ts: If 9y is defined for r, then 9(r) = [r], with rcTE.",
        "PROOF.",
        "(By induction on the length of r.) Suppose first that 9,, is defined for r. For every constant c it follows from the definition of 9c that 9c(c) = [c], with ccTE,,.",
        "Assume for fr by inductive hypothesis 9,,(r) = [r], with r(Tp, then it follows from the definition of 9F, (1) that 9F, (f)([r]) = [f r'], with f r'cTE and r'c[r].",
        "Since r' is a subterm of fr', we first get ricTE, and by Lemma 3.9 Jr' f r', r.5,,.",
        "Because of frcSUB(Ts), then also JrfreSy.",
        "So, Jr must also be in TE., and hence 9 p,(f)([r]) = [f r].",
        "Next we show for the model M,,: 3.13.",
        "LEMMA.",
        "Sy 0 {1} --+km Sy.",
        "PROOF.",
        "(We prove I=M., 0, for every 0 in Sy by induction on the structure of 0.)",
        "1 is not element of S,,.",
        "If I were in Sy, we would get by the definition of Su S., = {I) which contradicts our assumption.",
        "For 0 =, 1, ksf,,, J.. holds trivially.",
        "Suppose 0 = rr', then r, r' are in TB., 9,, is defined for r and r', and 9(r) = [r], 9(e) = [e].",
        "Because of r r'eS,,, it follows that [r][r'].",
        "So 9,,(r) = 9,,(e) and hence IM r T. Assume that 4' is(rr').",
        "If rr' were satisfied by M,,, 9u(r) would be equal to 9,,(r').",
        "By Lemma 3.12 we would then get 9u(r) = [r] and 9,,(r') = [71, with r, ricTE.",
        "Since 21E,, is an equivalence relation on TB\" r ricS,, would follow from [r] = [e], and, contradicting the assumption, we would get Sy = (1) by the definition of Su.",
        "It can be easily shown that Mu is a unique (up to isomorphism) minimal model for .,I6speaking, if M is a model for mit can be verified very easily by using this fact that we need to add to a set of literals S only a finite number of axioms to ensure the acyclicity.",
        "All axioms of the form or 56 T (ac.F1+ ,reT), with lorl < ISUB(TE)I, are e.g. more than enough, since from a consistent but cyclic set of literals S must follow an equation or P.: r (a tFif ,r(7), with loll < 1141, and 114,1 < ISUB('TE)1 holds by the construction of 3.14.",
        "LEMMA.",
        "Sv 0 {I} 4* PROOF.",
        "() If Su 0 (1), we know by Lemma 3.13 that M,, is a model for S. Then, by the soundness Sy F S --- VM(Hu S).",
        "Since S is derivable from Sy, it follows Haw S and thus Su 0 {I}3M(A.f S).",
        "(.)",
        "If Sy = (1), then for each model M [km S,,.",
        "From the soundness we get S F Su 4 VM(km S S,,).",
        "Since Su is derivable from S, it follows siM(16m Sy 461,4 S) and hence (1) VM(16A4 5)."
      ]
    },
    {
      "heading": "3.3 Completeness and Decidability",
      "text": [
        "Using the procedure for deciding satisfiability we can easily show the completeness and decidability of Inv.",
        "3.15.",
        "THEOREM.",
        "For every finite set of formulas r, and/or each formula 0: If r 0, then r PROOF.",
        "By definition 0 is a logical consequence of r, if!",
        "F U0) is unsatisfiable.",
        "Using the equivalences of Theorem we first get: u { 4)){A{r uOD).",
        "Suppose, that As' v v A .9^ is a DNF of A(rui OD, then r u { 66) IF (AS' V ... v AS\") and by the decision procedure",
        "If r u {is unsatisfiable, it follows that r u-o(1), since each Si is deductively equivalent with (1).",
        "From r u { 4)) k 1 it follows by the deduction theorem first 1.1-, D 1 and thus F I-, .1 j 0.",
        "From I' I-, 1 D and F 1 by MP then r F 0.",
        "0 3.16.",
        "COROLLARY.",
        "For every finite set of formulas l' and each formula cb, r 4' is decidable.",
        "PROOF.",
        "By the completeness and soundness we know F F 4' r0.",
        "Since 0 is a logical consequence of r, if!F U (,, 0), we can decide F I 0 by the procedure for deciding rut 0.",
        "I whichS., homoinorphic to My, then every minimal submodel of M that satisfies Su is 'isomorphic to Mu.",
        "From the two lemmata above it follows first that the satisfiability of sets of formulas in normal form is decidable:"
      ]
    }
  ]
}
