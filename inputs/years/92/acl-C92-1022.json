{
  "info": {
    "authors": [
      "Sebastian Goeser"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C92-1022",
    "title": "Chart Parsing of Robust Grammars",
    "url": "https://aclweb.org/anthology/C92-1022",
    "year": 1992
  },
  "references": [
    "acl-C88-1075",
    "acl-C88-2132",
    "acl-C90-2027",
    "acl-J81-2002",
    "acl-J83-3001",
    "acl-J83-3003",
    "acl-P84-1047",
    "acl-P85-1018",
    "acl-P89-1013"
  ],
  "sections": [
    {
      "heading": "1 Introduction",
      "text": [
        "Robustness is a formal behaviour of natural language grammars to assign n best partial description to linguistic events whose strong description is inconsistent or cannot be constructed.",
        "Events of this sort may be called defective with respect to n grammar fragment.",
        "Defectiveness arises from the performance use that human beings make of language.",
        "Since defectiveness can be seen as failure of linguistic description, the principal way to robustness is a method to weaken these descriptions.",
        "Robust parsing, then, is parsing of robust granunars: a parser is robust iff it hiss the capability to interpret weak grammar fragments correctly.",
        "In this paper, I shall try to substantiate this claim by motivating a grammar dependent approach to robust parsing and then describing n chart parsing algorithm for robust grammars.",
        "Though only c(ontext) f(ree) grammars will be adressed, there is an obvious extension of the algorithm to annotated (unification-) grammars (WACSG formalism, see Loeser 1990) along the lines of (Shieber 1985).",
        "Grammar based robustness tools have been explored in a variety of formalisms, e.g. the metarule device within the ATN formalism (Weischedel and Sondheimer 1893), entity data structures in a case frame approach (Hayes 1984) or the weak description approach in unification based grammars (Kink et al.",
        "1988, Goeser 1990).",
        "Parsing cf grammars with ro-'The work reported has been done while the author received an LGF grant at the University of Stuttgart.",
        "bustness features competes with algorithmic approaches to robustness where parsing algorithms, (usually chart parsers except in Tomabechi and Tomita (1988) where LR(k) parsing is advocated) are extended to include robustness features (Mellish 1989, Lang 1988) and/or heuristics to handle defect cases (Langer 1990, Stock et al.",
        "1988).",
        "Maybe the most critical issue in robust parsing is antbiguity, which emerges when constituency is loosened to some cf substring analysis.",
        "E.g. Mellish (1989) parses for a cfg G the (cf) set PAR(G) which is the set of all strings containing n sequence of nonempty substrings which is in the cf language L(0)1.",
        "In the worst case scenario where all these sequences are in L(G), we get for a w E L(G) with an ambiguity k (in 0) an exponential ambiguity of k x 21\"I as an sipper hound.",
        "Even in a non-worst case, which should be the case of realistic cfgs, local ambiguities from substring analysis massively increase parsing time.",
        "E.g. in the (non-defective) example 1, the arcs a, b, c are empirically valid while the arcs d,e are artefacts of an algorithm parsing PAR(G).",
        "Reflecting syntactic defectiveness in n cfg means to assign it a configurational regularity.",
        "Obviously, there is syntactic defectivity which is syntactically nonregular, such as corrupted output from a speech recognition device (Tomnbechi and Tomita 1988) 2 or global constituent breaks (Goeser 1991), which can be subjected to syntactic prefix analysis only.",
        "On the other hand, there are spoken language constructions (Lindgren 1987, Goeser 1991, Langer 1990) and various kinds of \"frngmentary utterances\" (Carbonell and Hayes 1983) that definitively show configurational properties.",
        "Let us look at a frequent spoken language construction called restart, as in the German corpus extunple (2) 3.",
        "Restarts follow a pattern < aft A 13'7 > where the strings a and y but not (3 and (3' may be empty.",
        "The restart marker A is optional: in 67 from 96 restart samples 13, which mostly ends in a constituent break, and (3' were separated phonologically by tone constancy, a short pause or without any marking at all 4.",
        "Restarts are a kind of constituent coordination not allowing for ellipsis phenomena such as gapping, left deletion, split coordination or sluicing.",
        "The /3 substring is usually defective and may indeed contain arbitrary noise 'rm.",
        "material may show phonological regularities, of course 4/111 corpus evidence reported here is psychotherapeutic discourse from the ULMER TEXTBANIC 4 Therefore, hanger's (1900) restart heuristics seems empirically inadequate Mader as it postulates a syn.",
        "tactic restart marker.",
        "A hat dais gekauft[ A has it bought]"
      ]
    },
    {
      "heading": "2 Recursive partial string grammars",
      "text": [
        "Recursive partial string grammnrs (RPSGs) are cfgs with a set of start symbols and with rules whose left hand side may be indexed with the keyword SET, SUB, or PAR.",
        "The SET index on a rnle's LIB licenses the adjunction of any start symbol to the right or left of its RHS string.",
        "The SUB index licenses arbitrary terminal strings to the right or left of the indexed symbol's lexica projection.",
        "The PAR index includes SUB and additionally licenses any terminal strings within this lexical projection.",
        "(Left and right sided indices 5E71,, SUBL and SETR, SUHR,respectively, are also in use).",
        "In a derivation relation for RPSGs an indexed symbol A, unifies with category A to give A,.",
        "Formally, SET adjunction participates in the cf derivation relation, while SUB and PAR are interpreted by a recursive generation function gen operating on derivations:",
        "where w is a derivation, t its tree structure, Gist;,,, the set of indexed or non-indexed non-terminals and Ler the set of terminals.The example derivation tree (4) shows SET adjunction (dotted lines) and areas where arbitrary 'For n more thorough discussion of restart syntax, nee Goeser (1991).",
        "substrings are licensed by an indexed node.",
        "Generally, local arbitrariness within a string may be enily modelled with an RPSG.",
        "Though finite efts are turned into infinite ones through RPSG indexing, the syntactic description with RPSG is still configurational up to certain local adjunctions."
      ]
    },
    {
      "heading": "3 Basic algorithm",
      "text": [
        "As a parsing algorithm to start from, Earley's (1971) chart parser has been chosen, which has a top-down component adaptable to the top-down percolation of index information, and which guarantees a worst case complexity of 0(n3) even for maximal ambiguity.",
        "We use the declarative Earley variant in DIrre (1987) .",
        "For cfg C =< Cat, Lex, P Sset >, where Cat is a set of non-terminals, Lex a set of terminals, P a set of rules and Sset a set of start symbols, it is characterized by the following predictor concept:",
        "• the predictor is a relation D(i, A) C",
        "x Cat between a vertex i < n and a non-terminal A.",
        "It is integrated into the completer and scanner components (see below), This has the advantage that no cyclic items i.e. items with an empty string of parsed symbols, have to be asserted to the chart.",
        "• initialization is the special predictor case D(11, S) where S is a start symbol.",
        "Let V = Cat Lex, A of) E P and 0 < i < j G n. Chartii,jj be the set of arcs between vertices i and j and 4 be the transitive cover of the derivation relation.",
        "Then every item in the chart may be characterized by the following membership conditions which respects both top-down (TD) and bottom-up (BU) information.",
        "Remark that for the (basis variant of the) Earley algorithm, while item membership depends on top-down predictor information, the acceptance of input strings is independent of the predictor (Kilbury 1985).",
        "where item number, the possibly indexed left hand symbol, the list of parsed symbols and the list of symbols yet to parse are well-known item parts.",
        "The variables Lind and Rind represent the status of substring generation to the left and to the right of the Parsed string, respectively.",
        "Lind / Rind is possible even for the SUB index, since items represent prefix information on a constituent, whereas a PAR index always effects Lind = Rind.",
        "Partial string in-fornintion from higher nodes, which is justified only within the appropriate derivation, imist be distinguished from SUB or PAR indexing of an item's LHS symbol, which always licences arbitrary snbstrings.",
        "To allow reconstruction of a derivation, Refbist records the pairs of items (or pairs of rule and item, see below) an item is completed from, or it equals lex for lexical items 7.",
        "To state the chart membership condition of the RPSG variant, we generalize the function gen to an argument pair of strings of terminals and possibly indexed non-terminals:",
        "where gen'(oe„ 1 iff can be generated from a",
        "The RPSG membership condition, then, is: A,1 01.0 E Charge, j1 iff 7Tlie lief List is also used for parse forest conntrtic-lion, nee e.g. Doerre (1987) for a discussion",
        "where a,1105 c"
      ]
    },
    {
      "heading": "4.2 The Predictor",
      "text": [
        "The predictor of the RPSG variant ais, again, a relation over vertices and non-terminals.",
        "In contrast to the basis variant, however, a null predictor would he incorrect for the RPSG variant, since the acceptance of n string now depends on the substring information percolated by 111.!",
        "predictor.",
        "Th.. first predictor clause allows an \"initialisation\" for every vertex.",
        "The second clause formulates the expectation of a non-terminal .A„ by an active item i.e. an item with a nonempty list To-Parse, and the third the expectation by passive items with n SET index.",
        "Clause 4 expects a start symbol on the basis of left adjunction to n SET indexed symbol.",
        "The following proposition, a proof of which is available from the author, states the correctness of this predictor formalization.",
        "gen1S, to\".ii1,5) 1 if D(i, A,,) for n S E Sseti„,1"
      ]
    },
    {
      "heading": "4.3 The Completer",
      "text": [
        "The completer component integrates the predictor relation and the substring generation function and has two rules for rightside and ee Appendix A for a complete formal characteri.",
        "ration of the RPSG chart parser leftside adjunction under a set-indexed symbol.",
        "Given that the conditions in the if-clause (and the lookaliend condition, see below) yield, the completer adds new items to the chart n, Clause 1 of the RPSG completer, is, up to the generation function instead of derivation, equivalent to the completer of the basis variant: Given ri rightside passive item, it adds a new item both for a matching active item and for the prediction of an appropriate rules's LIIS symbol.",
        "Thus, no cyclic items have to be created.",
        "Furthermore, since RPSGs do not have r productions, there is no need to handle cyclic items at n11.",
        "Clause 2 does rightside ndjunction of a start symbol item to a passive SET indexed item.",
        "In left adjunction according to clause 3, the adjoined (passive) item can again be licensed both by another (active or passive) SET indexed item or by the predictor relation,"
      ]
    },
    {
      "heading": "4.4 Scanner and Lookahead",
      "text": [
        "Since the scanner component luny be seen as lexical case of the completer, the RPSG algorithm could be reduced to n single active completer component and the controlling relation D (Kilbury 1985).",
        "Remark that the scanner allows for RPSG rules with RIIS strings of terminals and non-terminals.",
        "A partial lookahead of 1, being applied to active items only, has proven advantageous in the basic variant (Diirre 1987).",
        "In the RPSG variant, the length of the lookahend must be conditioned to the fact that zero or more non-derived but generated words may follow a given vertex.",
        "The lookahend fails if, for the first To-Parse !Vat-The relation F includes the operation t-t which procedurally asserts new item.",
        "to the chart bol, there is no first derivable lexical item, that is accessible given the actual substring information.",
        "Unfortunately, the scanner is not independent from this lookahead, since, in many cases, the item licensed by a lookahead operation onto a lexical item i is exactly the item licensing i within the predictor relation.",
        "That is, from a procedural viewpoint of entering items into the chart, the lookahead condition and the predictor block each other for certain lexical items.",
        "In this situation we decided to have a scanner without a predictor relation, thus paying for lookahead with an increased local lexical ambiguity."
      ]
    },
    {
      "heading": "5 Status and Conclusion",
      "text": [
        "The algorithm described has been implemented and tested as part of the WACSG system that is based on the Stuttgart LFG system (Eisele 1987).",
        "Chart parsing of robust cf grammars is a powerful method to cope with the configurational aspects of defectiveness.",
        "It is part of a major enterprise to re-analyze robustness not as a parsing problem but as a problem of weak linguistic description.",
        "Therefore, any formal work on the linguistics of defectiveness can be expected to improve our methods of robust parsing."
      ]
    },
    {
      "heading": "6 Bibliography",
      "text": []
    },
    {
      "heading": "Appendix",
      "text": []
    }
  ]
}
