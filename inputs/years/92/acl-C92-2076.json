{
  "info": {
    "authors": [
      "Jean Veronis"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C92-2076",
    "title": "Disjunctive Feature Structures as Hypergraphs",
    "url": "https://aclweb.org/anthology/C92-2076",
    "year": 1992
  },
  "references": [
    "acl-P86-1038",
    "acl-P87-1033"
  ],
  "sections": [
    {
      "heading": "DISJUNCTIVE FEATURE STRUCTURES AS HYPERGRAPHS JEAN VERON1S",
      "text": [
        "Groupe Representation et Traitement des Connaissances, Centre National de la Recherche Scientifique, 31, Chemin Joseph Aiguier, 13402 Marseille Cedes 09, France and"
      ]
    },
    {
      "heading": "Abstract -- In tins paper, we present a new mathematical framework in which disjunctive feature structures are defined as directed acyclic hypergraphs. Disjunction is defined in the feature structure domain, and not at the syntactic level in feature descriptions. This enables us to study properties and specify operations in terms of properties of, or operations on, hypergraphs rather than in syntactic terms. We illustrate the expressive power of this framework by defining a class of disjunctive feature structures with interesting properties (factored normal form or FNF), such as closure under factoring, unfactoring, unification, and generalization. Unification, in particular, has the intuitive appeal of preserving as much as possible the particular factoring of the disjunctive feature structures to be unified. We also show that unification in the FNF class can be extremely efficient in practical applications. I. INTRODUCTION",
      "text": [
        "It has become common to make a distinction between a language for the description of feature structures and feature structures themselves, which are seen as directed acyclic graphs (dags) or automata (see, for instance, Kasper and Rounds, 1986).",
        "To avoid confusion, the terms of the representation language are often referral to as feature descriptions.",
        "Disjunction is a representation tool in the representation language, intended to describe sets of feature structures.",
        "In this framework, there are no disjunctive feature structures, but only disjunctive feature descriptions.",
        "This framework has enabled researchers to explore the computational complexity of unification.",
        "However, it has some drawbacks.",
        "First, properties have to be stated (and proofs carried out) at the syntactic level.",
        "This implies using a complicated calculus based on formula equivalence rules, rather than using graph-theoretical properties.",
        "In addition, unification is not well-defined with respects to disjunction.",
        "There is reference in the literature to the \"unification of disjunctive feature descriptions\", but, formally, we should instead speak of the unification of the sets of feature structures the descriptions represent.",
        "For example, unifying the sets of feature structures represented by the disjunctive feature descriptions in Fig. 1 yields a set of four (non-disjunctive) feature structures, which can be described by several equally legitimate formulae: A factored, B factored, disjunctive normal form (DNF), etc.",
        "Depending on the algorithm that is used, the description of the result will be one or the other of these formulae.",
        "Some algorithms require expansion to DNF and will therefore produce a DNF representation as a result, but other algorithms may produce different representations.",
        "There is an important body of research concerned with the development of algorithms that avoid the expensive expansion to DNF (e.g., Kasper, 1987).",
        "These algorithms typically produce descriptions of the unification, in which some of the disjunctions in the original descriptions are retained.",
        "However, these descriptions are produced as a computational side-effect (potentially different depending on the algorithm) rather than as a result of the application of a formal definition.",
        "s ructures In this paper, we first consider disjunctive feature structures as objects in themselves, defined in terms of directed acyclic hypergraphs.",
        "This enables us to build a mathematical framework based on graph theory in order to study the properties of disjunctive feature structures and specify operations (such as unification) in algebraic rather that syntactic terms.",
        "It also enables the specification of algorithms in terms of graph manipulations, and suggests a data structure for implementation.",
        "We then illustrate the expressive power of this framework by defining a class of disjunctive feature structures with interesting properties (factored normal form or FNF), such as closure under factoring, unfactoring, unification, and generalization.",
        "These operations (and the relation of subsumption) are defined in terms of operations on (or relations among) hypergraphs.",
        "Unification, in particular, has the intuitive appeal to preserve as much as possible the particular factoring of the disjunctive feature structures to be unified.",
        "We also show that unification in the FNF class can be extremely efficient in practical applications.",
        "For lack of space, proofs will be omitted or only suggested."
      ]
    },
    {
      "heading": "4.2 Group and ungroup",
      "text": [
        "The factor operator requires that there is a common factor.",
        "In many cases there is no common factor; however, it is possible to define a group operator that first splits feature structures into groups of disjuncts that have common factors with respect to a given format, and then factors them.",
        "(1) if s'=st then j0(x) is the FNF feature structure DNF-equivalentto x withformat <0, sius2,..., s,>; (2) if s'st then y (x) is the FNF feature structure DNF-equivalent to x with format <0, si -s', s' 1)52, 53, , n> Example.",
        "See Fig. 5."
      ]
    },
    {
      "heading": "5. SUBSUMPT1ON, UNIFICATION AND GENERALIZATION",
      "text": [
        "As mentioned in the introduction, the format of the result of unification is not defined in the classical approach.",
        "Our goal will be to define unification on FNF disjunctive feature structures in such a way that the format of the result is unique and predictable.",
        "Intuitively, when feature descriptions have compatible formats (as in Fig. 6), it seems that unification should preserve it.",
        "On the other hand, when two feature descriptions have completely incompatible formats (as in Fig. 1), the resulting format should be in DNF.",
        "When formats are only partially compatible, a limited amount of unfactoring should be performed, and the compatible part should be preserved in the result.",
        "These considerations lead us to define compatibility of formats, and to extend the notions of subsumption, unification, and generalization to feature structure formats.",
        "We then define unification and generalization on disjunctive feature structures in such a way that important properties ACTES DE COLING-92, NANTES, 23-28 AOIJT 19925 02PROC.",
        "OF COLING-92, NANTES, Atm.",
        "23-28, 1992 restrictions of the label and value functions to this subhypergraph.",
        "The AND-part of a node is the sub-feature structure rooted at that node, starting with only the feature-arcs from that node.",
        "The OR-parts of a node are the different sub-feature structures rooted at that node, starting with each of the OR-arcs.",
        "The disjuncts of an OR-arc are the sub-feature structures rooted at each of the output nodes of that oR-arc.",
        "If a node has only one OR-arc, we will call its disjuncts the disjuncts of the node.",
        "where F is the axiom, e is the empty string, I belongs to the set of labels L, a belongs to the set of atomic values A, and i belongs to a set I of identifiers (we use the symbols D, , etc.",
        "), disjoint from L. A formula (13 of that language is called a (disjunctive) feature description.",
        "The mapping between feature structures and feature descriptions is straightforward (Fig.",
        "3).",
        "Translating between feature descriptions and feature structures and checking that a description is valid (that is, corresponds to a valid feature structure) is computationally trivial, and does not rely on the (potentially expensive) application of equivalence rules as in Kasper and Rounds (1986)."
      ]
    },
    {
      "heading": "3. A TYPOLOGY OF NORMAL FORMS",
      "text": [
        "In this section, we will first define the disjunctive normal form (DNF) in terms of hypergraphs.",
        "We will then define a family of increasingly restricted normal forms, the most restricted of which is the DNF.",
        "One of them, the factored normal form (FNF) enables a clear definition of the \"format\" of a feature structure.",
        "It also imposes a strict hierarchical view of the data, and is exactly the class of feature structures that are reachable from the DNF through sequences of factoring operations.",
        "We believe that the FNF class is of great linguistic interest, since it is clear that disjunction is often used to reflect hierarchical organization, factoring, etc., and thus is more than just a space-saving device.",
        "In the sections that follow, factoring operations in the FNF class will be defined formally, along with appropriate ex tentions to the notions of subsumption and unification."
      ]
    },
    {
      "heading": "3.1 Disjunctive Normal Form",
      "text": [
        "Definition 3.1 A (disjunctive) feature structure is said to be in disjunctive normal form (DNF) if: (1) the root has only one OR-part, and no AND-part; (2) each disjunct is a dag feature structure; (3) all the disjuncts are disjoint and different (non- isomorphic).",
        "Note that the disjunctive normal form is defined for feature structures themselves, not for their descriptions."
      ]
    },
    {
      "heading": "3.2 Typology of normal forms",
      "text": [
        "We can define several interesting restrictions on feature structures, which in turn define a typology of increasingly restricted normal forms.",
        "Condition 3.1 Dag-projections obtained by different selections of output nodes of OR-arcs are different.",
        "Condition 3.2 Each node has at most one OR-part.",
        "Condition 3.3 The AND-part of each node is a dag.",
        "Definition 3.4 When combined, the three conditions above define several normal forms:",
        "(1) 3.1: non-redundant normal form (NRNF); (2) 3.1 and 3.2: hierarchical normal form (HNF); (3) 3.1 and 3.3: AND-normal form (ANF); (4) 3.1, 3,2 and 33: layered normal form (LNF).",
        "Definition 3.5 In an ANF feature structure x, the AND-part of a node ni is a maximal AND-part of x if nl is the output node of no feature arc.",
        "Definition 3.6 The layers of a LNF feature structure are defined recursively as follows: (1) Layer 0 is the AND-part of the root;",
        "In what follows, we will call the classical subsumption, unification, generalization of dag feature structures dag-subsumption, dog-unification and daggeneralization (noted 544, [1, repe,ctively).",
        "The classical subsumption, unification, generalization of DNF feature structures will be called dnf-subsumption, dnf-unification and dnf-generalization (noted udf, repectively).",
        "nik, that nio is an immediate predecessor of nik, and that ni, , nik are immediate successors of no.. A path' in a hypergraph is a sequence of nodes nil , nip such that for j = 1, ...,p - 1, ni is an immediate predecessor of nif.t.",
        "If there exists a path from a node ni to a node we will write nj.",
        "A hypergraph is acyclic if there is no node such that ni ph.",
        "A hypergraph has a root no if for each node ni no, no The leaves of a hypergraph are those nodes with no successor.",
        "A path terminating with a leaf is a maximal path.",
        "Nodes with more than one immediate predecessor are called merging nodes.",
        "Definition 2.1 Let L be a set of labels and A be a set of atomic values.",
        "A (disjunctive) feature structure on (L, A) is a quadruple F (D, no, a), respecting the consistency conditions 2.1 below, where 0 is a finite directed acyclic hypergraph with a root no, A is a partial function from the 1-arcs of D into L, and a is a partial functions front the leaves of D into A.",
        "Feature structures which have isomorphic hyper graphs, whose corresponding leaves have the same value, and whose corresponding feature-arcs have the same labels, are isomorphic.",
        "We will consider such feature structures to be equal up to isomorphism.",
        "Definition 2.2 Labeled 1-arcs are called feature-arcs.",
        "Non-labeled hyperarcs are called OR-arcs.",
        "Note that OR-arcs are usually k-arcs with k >1, but (non-labeled) 1-arcs can be 0R-arcs as a special case.",
        "We will use a graphic representation for disjunctive feature structures in which OR-arcs are represented as k lines connected together2 (see Fig. 2).",
        "Definition 2.3 The extended label of a given path is the concatenation of all labels along that path.",
        "We will use the notation /02: ...",
        "In to represent extended labels.",
        "A maximal extended label from a node is an extended label for a maximal path from that node.",
        "INVe use this term in the sense usual in graph theory.",
        "It should not be confused with the tenu path used in many feature structure studies, which is a string of labels, and for which we will introduce the tenn extended label later in the paper.",
        "(C1) No output node of an olt-arc is a leaf; (C2) Output nodes of OR-arcs are not merging nodes; (C3) All feature-arcs from the sanse node have different labels; (C4) No maximal extended label from a given node is a prefix of a non-maximal extended label obtained by following a different hyperarc from the same node.",
        "C j and C2 constrain OR-arcs to represent only disjunctions.",
        "C3 and C4 are extensions of the determinism that is usually imposed on dags (no outgoing arcs with the same label from any given node).",
        "Definition 2.4 A dag feature structure is a feature structure with no OR-arc.",
        "Definition 2.5 A projection of a feature structure x is a hypergraph obtained by removing all but one output node of all OR-arcs of x.",
        "Therefore, a projection has only 1-arcs.",
        "Definition 2.6 A dag feature structure y is a dagprojection of a feature structure x if there exist some projection y' of x and a function h mapping nodes of y' into nodes of y such that: (1) the root of y' is mapped to the root of y; (2) if (mt;0, }) is a feature-arc of y', then (h(ni,), {h(n11)J) is a feature-arc of y with the same label; (3) if (111.0, (ni,)) is a I-OR arc of y', then h(n0) = h(nii); (4) the value associated with a node ni in y' is the same as the value associated with h(m) in y, or both have no value; (5) each feature arc in y is the image of at least one feature arc in y'.",
        "In other terrns, a dag-projection is obtained from a projection by merging the input and output nodes of each 1-OR-arc, and merging paths with COMM011 prefixes to ensure determinism.",
        "z.AND dag-unify(x.AND, y.AND) if z.AND =failure then return failure II Unify OR-parts z.ORunify-disjuncts(x.OR, y.OR) If z.OR =failure then return failure else return z function unify-disjuncts(x, y: feature-structure): feature-structure //assume x.AND and y.AND are empty",
        "if k 0 then return failure elseretum z We will consider the complexity of this algorithm in terms of the number of dag-unifications, which is the only costly operation (0(n log(n)), where n is the total number of symbols in the two dag feature structures see Alt-Kaci, 1984).",
        "We will first consider the case where the formats are compatible.",
        "One dag-unification is performed in the unify function, but the bulk of the dagunifications are performed in the unify-disjuncts function.",
        "There are two nested loops, and the function is applied recursively through all the layers.",
        "Therefore, in the worst case, the algorithm requires 0(d2) dagunifications, whre d is the total number of disjuncts.",
        "When the formats are not compatible, some unfactoring and ungrouping has to be performed by the match-formats function in order to force the formats to match.",
        "The number of operations can be limited if the two formats are partially compatible, due to the properties of FNF.",
        "Complete unformatting will be necessary only in cases where the two formats are completely incompatible.",
        "For example, if f(x) = <[A], (13,C), (D,E), (F), (G), nil>, and f (y) = <(I) , ( B,J) , (D,F), (E,K), (G), (L)>, the resulting format is <(A,I ), (B,C,J), ( D), (E,F,K), (G), (H,L )>.",
        "The two first layers can be computed without unfactoring.",
        "Unfactoring is required for disjuncts at the next level, yielding the formats <(D), (E,F), (G), (1-1)> and <(D), (E,F,K), (G), ( L )>, respectively.",
        "When this is accomplished the formats match, and the algorithm can resume with no more unfactoring.",
        "It is clear that, in the worst case, when the algorithm requires the complete unformatting of the two feature structures, the total number of dag-unifications grows exponentially with the number of disjuncts.",
        "However, in most pratical cases, the algorithm is likely to perform better.",
        "We saw, in particular, that when the two feature structures have completely compatible formats, the complexity is only quadratic.",
        "There is obviously a range of possible behaviors between these two extremes.",
        "It seems to us that in practical applications, disjunction is not random, but, instead, reflects some systematic linguistic properties.",
        "A high degree of compatibility among formats is therefore expected.",
        "It should also be noted that the algorithm can easily be modified so that only one feature structure is unfactored and reformatted into a format that is compatible with the format of the other.",
        "This is especially useful in the common situation in which a small feature structure, containing a small number of disjuncts (e.g. a constituent at a given stage of parsing) is matched against a very large feature structure (e.g. a grammar).",
        "In this case, the time required for unformatting and reformatting the \"small\" feature structure is negligible, and the overall number of dag-unifications grows linearly with the number of disjuncts in the \"large\" feature structure."
      ]
    },
    {
      "heading": "6. CONCLUSION",
      "text": [
        "In this paper, we present a new mathematical framework in which disjunctive feature structures are defined as directed acyclic hypergraphs.",
        "Disjunction is defined in the feature structure domain, and not at the syntactic level in feature descriptions.",
        "This enables us to study properties and specify operations (such as unification) and relations (such as subsumption) in terms of algebraic operations on (or relations among) hypergraphs rather than in syntactic terms.",
        "We illustrate the expressive power of this framework by defining a class of disjunctive feature structures with interesting properties (factored normal form, or FNF), such as closure under factoring, unfactoring, unification, and generalization.",
        "Unification, in particular, has the intuitive appeal of preserving as much as possible the particular factoring of the disjunctive feature structures to be unified.",
        "We also show that unification in the FNF class can be extremely efficient in practical applications."
      ]
    },
    {
      "heading": "Acknowledgments -- The present research has been partially funded by the GRF.CO-PRC Comtnunication",
      "text": [
        "Hornme-Machine of the French Ministery of Research and Technology and U.S.-French NSF/CNRS grant INT9016554 for collaborative research.",
        "The author would like to thank Nancy Ide for her valuable comments and help in the preparation of this paper."
      ]
    },
    {
      "heading": "REFERENCES",
      "text": []
    }
  ]
}
