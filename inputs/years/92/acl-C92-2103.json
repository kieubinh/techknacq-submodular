{
  "info": {
    "authors": [
      "Dieter Kohl"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C92-2103",
    "title": "Generation from Under-And Overspecified Structures",
    "url": "https://aclweb.org/anthology/C92-2103",
    "year": 1992
  },
  "references": [
    "acl-C86-1021",
    "acl-C86-1115",
    "acl-C88-2150",
    "acl-E89-1037",
    "acl-J90-1004",
    "acl-P84-1069",
    "acl-P84-1086",
    "acl-P91-1025"
  ],
  "sections": [
    {
      "heading": "GENERATION FROM UNDER AND OVERSPECIFIED STRUCTURES* DIETER KOHL",
      "text": []
    },
    {
      "heading": "Abstract",
      "text": [
        "This paper describes informally an algorithm for the generation from under and overspecified feature structures.",
        "The generator requires a grammar, a goal category and a feature structure as input, and derives all strings whose corresponding feature structure is not in contradiction to the input structure."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "In this paper I will present an algorithm for generation from under and overspecified feature structures in the I.FG framework'.",
        "The algorithm makes use of the concept of generation as structure-driven derivation as it is described in [14, 15, 16].",
        "Most of the time the algorithm works top-down breadth-first, similar to the generator described in [7] and [6].",
        "Only for the creation of the final structure the algorithm works bottom-up."
      ]
    },
    {
      "heading": "2 Motivation",
      "text": [
        "The algorithm given in [14] allows to generate from a fully specified feature structure, e.g. the input structure is equal to a structure that would be derived during parsing.",
        "For applications other than testing a grammar for overgeneration the equality-condition is too restrictive.",
        "The algorithm given in [15] and [16] then allows to generate from an underspecified structure, if there Is a fully specified (semantic) predicate-argumentstructure which is not allowed to be extended during generation, e.g. the predicate-argument-structure must be complete and coherent with respect to the target grammar.",
        "One of the disadvantages of this algorithm is.",
        "that it must be marked for the generator, which substructure is not allowed to be changed during generation.",
        "Further, in certain applications, the condition that there is a partial feature structure which is complete and coherent with respect to the target grammar might be also too restrictive.",
        "The generator described in this paper had been developed for projects which are involved in machine translation.",
        "While one of the projects makes use only of syntactic information encoded in a feature structure the other project uses semantic information as well.",
        "In both cases the input feature structure for the generator is at least underspecified with respect to The work reported here is part of the Sonde, forschungsbereich 340 SpInchthenretische Grundlagen der Computerlinguistik For details of the Lin formalism see 11).",
        "the target grammar, not only for atomic attribute value pairs but also for complex pairs.",
        "This means the generator hits to introduce information into the given feature structure to get a structure which is valid with respect to the target grammmar.",
        "In both projects a similar architecture is used:2",
        "1. parse a sentence and return the feature structure F7, 2. extract the information for the translation from and build 1,9 3. generate from F a sentence",
        "In such an architecture the creation of F, is usually independent of the target grammar, in the sense that the creation is not automatically controlled by the target grammar.",
        "In machine translation the grammars used for parsing and for generation are basically specific for the two single languages one wants to translate between.",
        "It is usually desirable to specify F9 only in as rudimentary and as general manner as possible.",
        "This means the details of how to generate a valid surface string of the target language are only known in the target grammar, rather than spelled out in translation relation.",
        "In other words, a single grammar G describes only the relation of a surface string of a language L and a feature structure valid for the grammar C of L. Further, a valid feature structure for G will represent only information necessary for L, but not necessarily information necessary for the language to translate into.",
        "For example, a grammar for German will describe a feature structure which has information for the tenses past, present, and future, but no information about progressive as it is required for English.",
        "Therefore, in the translation German to English the generator Ints to generate from a feature structure which might be underspecified with respect to tense information, while in the translation English to German the generator has to generate from a feature structure which might be overspecified with respect to tense information.",
        "Iii general, in describing the translation relation between two languages one has to face the problems of interfaces: Information is missing and must be derived from the target grammar.",
        "e.g. the input structure is underspecified.",
        "'For the reasons of this architecture see for example (41.",
        "There are also other M'l' projects like GRADE (see [ph p.ol sod NO which make use of a similar architectore.",
        "4.3 The main loop 1.",
        "For each node N, of the right hand side of the rule of the current category C, match the annotated feature description FD i with the current feature structure FS,.",
        "The matching terminates always, and during the matching no new information is introduced into FS,.",
        "The match determines, whether the node Ni might be excluded, activated, suspended, and whether the category N should be examined for some part of FS,.",
        "2.",
        "If there are no nodes left which can be activated, nodes which are still suspended are excluded and the final coherence and completeness tests are performed on the input structure FSi.",
        "In case of success the surface string can be extracted from the e-structure which is built in parallel to the derivation of the input feature structure.",
        "In case of failure, other solutions are tried by backtracking.",
        "3.",
        "Select only these nodes which can be activated which will not lead to a recursion.",
        "Extend the partial feature structures associated with these nodes by applying the annotated feature descriptions.",
        "4.",
        "Compare those nodes again which have been suspended as in step 1.",
        "5.",
        "Repeat the steps 3 and 4 until there are no nodes left which can be activated and which do not lead to a recursion.",
        "6.",
        "Nodes which could be activated but lead to recursion are activated only in case there is no indication that the recursion could be applied infinite many times'.",
        "7.",
        "Continue with step 2.",
        "5 Example",
        "In order to illustrate how the algorithm works, I will only give a very simple and somewhat superficial example.",
        "For more detailed examples especially on the treatment of recursion see [5].7 The example makes use of the grammar in figure 1 to generate a German sentence with a simple NP and an intransitive verb.",
        "The grammar is written in a usual t.ro notation.",
        "The input feature structure for generation is given in figure 2.",
        "For the example it is assumed that the feature stucture contains the semantic representation of the analysis of the English sentence the man is running which should be translated into German.",
        "The goal category for generation is S. The generation starts with the matching of S with FS.",
        "The NP node of the right hand side of the S rule is suspended, since there is no attribute sum in the input structure.",
        "The trivial equation of the VP node immediately leads to the matching of FS,, with the category VP.",
        "The trivial equation on the V node leads in turn to the matching of the category V with FS.",
        "The existence of (SEM REL) = run in FSo In this paper infinite loops are only assumed in case the limit of repeated definitions is reached.",
        "A more detailed treatment of the detection of infinite loops is given in 151 'There would be not enough space to show a more complicated example in this paper.",
        "would allow to activate both verbs of the example lexicon, but the equation (4 SEM TIME END) past excludes the entry for rannte.",
        "The resulting partial e-structure of the match is ... suspended ... VPV\"rennt\" The following attribute value pairs of FS must be used during generation:"
      ]
    },
    {
      "heading": "(SEM REL) (SEM ARGO (SEM TIME START)",
      "text": [
        "Since the solution set of the match does not require to use (sma TIME END) this information can be ignored for the further generation, although it had been used to exclude an entry.",
        "This shows a case of overspecification, where an attribute is in the set of possible attributes of a grammar but is not always determined by the grammar.",
        "The extension of FS then leads to the structure in figure 3.",
        "It should be noted that the algorithm automatically selected the semantic head, although",
        "The structure FS g derived in the generation process must at least fullfill these conditions of completeness and coherence, e.g. any violation of one of these conditions is treated as an error.",
        "Since the input structure FS; should be part of the derived structure, the conditions for attribute-value pairs of the input structure are modified to be able to use the input structure to control the generation process and to be able to allow overspecification.3 If an attribute A of FS 15 is licensed by a definnig equation or inequation in the rules of the grammar which are not explicitly excluded by FS i it should be checked that A is actually consumed during generation.",
        "This condition extends the condition of completeness.",
        "If an attribute A of FS, does not occur in any equation of the grammar, the input structure is overspecified.",
        "It depends on the application, whether this type of overspecification is allowed, e.g. whether it should be considered as a violation of the coherence condition or should be ignored.",
        "If an attribute A of P.5'15 is not licensed by a defining equation or an inequation in the rules of the grammar which are not explicitly excluded by FS; the input structure is overspecified.",
        "It depends on the application whether this type of overspecification is allowed.",
        "In case overspecification is allowed, A and its value are ignored, otherwise it is treated as a violation of the coherence condition.",
        "As indicated by the last extension to the coherence and completeness conditions, it depends on the application what kind of input structure is considered to be a valid one for the target grammar.",
        "In case a grammar should be tested for overgeneration a valid input structure is not allowed to be extended during generation and is not allowed to be overspecified.",
        "In the case of machine translation the input structure can be considered as a valid one, even it is underspecified.",
        "Depending on the language pair it might be also appropriate to consider an overspecified input structure as valid."
      ]
    },
    {
      "heading": "4 The Algorithm",
      "text": [
        "The algorithm works on a grammar description and an input feature structure.",
        "The grammar description consists of context free rules with annotated feature descriptions.",
        "For simplicity it is assumed that the annotated feature descriptions do not contain disjunctions.",
        "A disjunction in a feature description can always be transformed into a disjunction of nodes on the c-structure level.",
        "Furthermore, a single rule is a concatenation of terminal and non-terminal nodes, and for each category C of a grammar the rules for C are treated as one disjunction.",
        "'This means, it is not sufficient to require, that the input structure has to unify with a structure derived from the grammar to get a generation, since this would allow to produce sentences which do not contain all of the semantics given in the input structure as well as to produce sentences with any kind of possible modifiers the grammar could derive, that is infinite many.",
        "The algorithm starts with a current category Cc, initialized with the goal category, and a current feature structure FS,, initialized with the input feature structure FS5.",
        "The algorithm proceeds as follows: Match the current feature structure FS, with the current category C, by matching FS, with the feature descriptions FD; of the nodes Ni on the right hand side of the rule for Cc, where FS, is bound to the mata variable I which denotates the structure associated with the mother node on the left hand side.",
        "The matching works top-down breadth-first.",
        "During the match FS, will not be modified.",
        "Extend FS, by the application of a feature description FD."
      ]
    },
    {
      "heading": "4.1 Matching",
      "text": [
        "The matching of the current feature structure FS, with the current category C, will always terminate.",
        "During the matching a structure which is used as a chart and an agenda is built which keeps track of which structures are already matched with which categories.",
        "whether there occurs a trivial recursion, e.g. given a structure and a category there is a recursion on the c-structure level which uses the same structure.",
        "the use of which nodes can be constrained by the input structure, and what is the result, e.g. is the usage of the node excluded Of licensed by the input structure.",
        "which nodes are purely controlled on the c-structure level, e.g. there is no equation for a node which denotates the structure of the mother node.",
        "Such nodes have to produce only finite many substrings.",
        "For each category C all its rules are considered in parallel, which avoids any dependency about the ordering of the single rules for C. For each node N on the right hand side of C, the input feature structure is matched with its feature description FD.",
        "This match results in at least one of the following descriptions: Exclusion: FS, is not compatible with ED.",
        "Therefore the node N will be excluded.",
        "Other results of the matching are of no relevance.",
        "The exclusion of N excludes those nodes which are part of the same rule as N. Activation: FD defines a path-valuepair which is already part of FS,, or FD defines a reentrency which already exists in FS,.",
        "Examination: In FD occurs a reentrance equation where only one of the paths exists in FS,.",
        "The result examination contains the category Cry named by the node N and the associated substructure FS,.",
        "The following cases are distinguished:",
        "The introduction of SUBJ leads to the matching of the suspended NP node with 1,S0.",
        "The equation (r SUB.))",
        "= I leads to the matching of the category NP with For the NP rule there are three nodes to be matched with FS4.",
        "Since on all three nodes a trivial equation is annotated, the categories D and N have to be matched with FS4.",
        "The equations SEM REL) = mall and (1 SEM NUM) = sg activates the noun entry, and requires that (sEm REL) and (sEm Nom) of FS4 must be used for generation.",
        "The equation (1 SEM SPEC) = def activates the determiner entry and requires to use (sEro SPEC) of FS4.",
        "The two alternatives of the NP rule allow to consider two possible extension shown in table 1."
      ]
    },
    {
      "heading": "6 Comparison with Shiebers approach",
      "text": [
        "The semantic-headdriven algorithm given in [13] also starts with a top-down initalization with a bottom-np generation.",
        "In Shieber et at the nodes which contain the semantic head are determined during the compilation of the grammar.",
        "This seems to be a bit problematic for grammars which describe head-switching phenomenons, as in 100 litres of wine, where a possible ananlysis is that 100 litres syntactically governs wine, but semantically is a modifier of :wine.",
        "The algoritlun presented here does not require to precompute the nodes which contain the semantic head, but finds the head relevant for the given input structure automatically.",
        "The problem with free variables for the coherence constraint given in Shieber et al. does not occur for the algorithm presented in this paper, since it always distinguishes between the structure and the description of the structure, and keeps track of which parts of the structure are already derived during generation.",
        "Since the algorithm presented here always has information about which parts are from the original input structure and which ones have been added, it is possible to check the coherence condition at any step of the generation process.",
        "In addition, the solution in Shieber et al. with binding variables seems somewhat problematic, since it requires to know for sure, that the variable part of the semantics should not be extended.",
        "The augmentation of the generator described in Shieber et al. with a chart to avoid recomputation and eliminate redundancies is an integral part of the algorithm presented here."
      ]
    },
    {
      "heading": "7 Summary",
      "text": [
        "In this paper an algorithm had been described which can be used to generate from fully specified feature structures as well as from variants of under or over specified feature structures in the LFG framework.",
        "The algorithm covers the cases given in [14] and [15] as a subset.",
        "The treatment of recursion allows even for infinite many possible generations that the solutions can be presented one by one, e.g. the generator will not go into an infinite loop between two solutions.",
        "The generator is implicit head-driven, e.g. it selects the head automatically for a given input structure with respect to the target grammar.",
        "As it is shown in",
        "There is more information than defined by the target grammar, e.g. there is no string of the target language for which the grammar describes a feature structure with-It contains all attribute value pairs given in the input structure FS 9.",
        "The input structure is overspecified and the overspecification could be ignored during generation.",
        "There is information which is inconsistent with the target grammar, e.g. the input structure is informed with respect to the target grammar.",
        "This requires some error treatment.",
        "An algorithm for generation then has to provide mechanisms which allow generation from underspecified structures as well as from overspecified ones.",
        "This will allow to deal with certain types of translation mismatches itS they are described for example in [2].",
        "Further, the treatment of informed structures should be such, that the invalid elements of the input struchere could be made visible for debugging purposes, instead of just failing to generate anything.",
        "As it turned out, even for medium sized grammars it can become quite difficult for a linguist to debug the grammar if there is only a debugger available which had been developed for the general purpose programming language the system is implemented in, e.g. prolog."
      ]
    },
    {
      "heading": "3 Terminology",
      "text": [
        "The algorithm has been developed for grammars written in the LEG-forntalism.",
        "This means, it works on a context-free grammar G with annotated feature descriptions.",
        "Given a feature structure FS; as input the algorithm has to generate all those surface strings, for which G associates a feature structure FS9, with F,Sh, compatible to FS9.",
        "What compatible means depends on the kind of application the generator is used in: If the application is to test a grammar for over generation, FS must be equal to FS, e.g. no information is introduced into or deleted front PS, during generation, and PS;,, unifies in terms of feature unification with FS 9.",
        "If the application is to test whether a structure of a certain attribute might be sufficient for generation, i.e. whether the semantic structure does not overgenerate, FS; must be subsumed by FS, e.g. all information of FS; must be required for generation, and it is only allowed to introduce information into FS If the application is machine translation, FS; and FS 9 must unify, e.g. FS; might contain more information and also less information than Depending on the application the algorithm is parametrized as to whether it allows the introduction of information into FS; and whether it allows FS; to be overspecified.",
        "For those not familiar with 1,FC^ I will give a short overview of the elements of the feature descriptions as I will use them afterwards.",
        "In general a feature description consists of a conjunction of equations or a disjunction of feature descriptions.",
        "In this paper I will only consider feature descriptions without disjunctions.",
        "The equations are distinguished into defining equations indicated by the operator inequations indicated by the operator constraining equations indicated by the operator An equation consists of a reference to a structure, the operator, and a.s second argument of the operation one of an atomic value like mas a semantic form, indicated by double quotes, with an atomic name and an optional argument list, i.e. \"man\", \"give (SULU ,0113)\" a reference to a structure A reference to a structure is either a metavariable or a path applied to a metavariable.",
        "Examples are the metavariable t, which stands for the structure associated with the mother node, e.g. the category given on the left hand side of a rule.",
        "the metavariable 1, which stands for the structure associated with a daughter node of a rule, e.g. the node on the right hand side of a rule where the feature description is an annotation of.",
        "(I (CENDER), which refers to a structure under the attribute GENDER ill the feature structure associated with the mother node.",
        "Equations, which have references on both sides of a equation are called reentrancy equations.",
        "Semantic forms describe unique values, e.g. while two atomic values unify if they are described by the same form, two semantic forms will not.",
        "The arguments of a semantic form of an attribute A are paths which are members of the governable functions of A.",
        "Thus set will he named as gf (A).",
        "To allow semantic forms as possible values for any attribute is a generalization of the use of semantic forties as they are given [1] where semantic forms are only values of the attribute PRED.",
        "Semantic forms contain all information necessary, to test the conditions of completeness and coherence."
      ]
    },
    {
      "heading": "3.1 Coherence and Completeness",
      "text": [
        "Using the generalization the conditions of completeness and coherence as given in [3, pp.",
        "211/2121 are reformulated iLS A feature structure S is locally complete if for each attribute A in S where gf (A) is non-empty the governable functions defined by the value of A exist in S with a value for the attribute A, and if all values required are defined.",
        "A structure is complete if all of its substructures are locally complete.",
        "A feature structure S is locally coherent, if for each attribute G of S which is member of gf (A) G is governed by the value of A, e.g. the argument list of the value of A contains G, and if all attributes of S are given by the grammar.",
        "A structure is coherent if all of its substructures are locally coherent.",
        "[5] this behaviour of the algorithm allows the efficient treatment of head-switching phenomenons.",
        "It has been shown, that the algorithm provides information which allows in case of failure to produce debugging information in terms of the target grammar, rather than in terms of the programming language the algorithm is implemented in.",
        "The algorithm is implemented in PROLOG in the edinburgh syntax.",
        "Currently the implemention of the debugging mechanisms is incomplete.",
        "Although it is not shown in this paper, the technique used for the generator could be easily adopted for parsing, where the input string takes the part of the input feature structure.",
        "In this sense the c-structure is only considered as an auxiliary structure where the grammar describes basically a relation between a surface string and a feature structure.",
        "TO adopt the technique for parsing would have the advantages to use basically the same machinery for parsing and generation where the machinery is optimized for each task, to have the same improved possibilities for debugging, and to allow to start the parsing of strings while they are typed in, and not only after the complete string to be parsed is known.",
        "One of the major goals for the future development of the algorithm is to reduce the use of backtracking as much as possible by using disjunctions as part of the feature structure.",
        "The algorithm should be also applicable to other grammar formalisms like PATR-II (see [12]) which make use of a context-free backbone and anotated descriptions.",
        "It is also intended to use the algorithm for formalisms like HPSG."
      ]
    }
  ]
}
