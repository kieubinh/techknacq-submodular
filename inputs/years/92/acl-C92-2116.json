{
  "info": {
    "authors": [
      "Wilhelm Weisweber"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C92-2116",
    "title": "Term-Rewriting as a Basis for a Uniform Architecture in Machine Translation",
    "url": "https://aclweb.org/anthology/C92-2116",
    "year": 1992
  },
  "references": [
    "acl-C86-1071",
    "acl-C86-1129",
    "acl-C88-1017",
    "acl-C90-2018",
    "acl-C90-2052",
    "acl-E91-1050",
    "acl-P89-1001",
    "acl-W91-0110"
  ],
  "sections": [
    {
      "heading": "TERM-REWRITING AS A BASIS FOR A UNIFORM ARCHITECTURE IN MACHINE TRANSLATION",
      "text": []
    },
    {
      "heading": "Abstract",
      "text": [
        "In machine translation (MT) different levels of representation can be used to translate a source language sentence onto its target language equivalent.",
        "These levels have to be related to each other.",
        "This paper describes a declarative formalism on the basis of term-rewriting which maps one representation onto an equivalent adjacent one.",
        "The different levels (e.g. represented by derivational trees, feature structures or expressions of a knowledge representation language) can be represented as terms.",
        "The equivalences between them are stated as axioms which are directed to form a non-confluent and terminating term-rewrite system.",
        "A complete and coherent' algorithm has been developed which interprets these systems and is able to handle default rules."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "In general there are different models of machine translation (MT).",
        "Regardless of the model used as the basis for an MT system, the architecture looks like the following (see [Arnold et al.",
        "86] and [Sharp 881):",
        "The Ri's are representations, e.g. derivational trees (for example the syntactic stuctures) or directed acyclic graphs (for example f-structures of LFG or KL-ONE based conceptual representations), the Gi's are the formalisms which generate these representations, e.g. context free grammars or signatures, the Ti's are mappings from one representation to an equivalent adjacent one and Ss, ST are the source and target language sentences, respectively.",
        "If the MT system is interlingua based, one of the R, is the interlingua and if it is transfer based one of the ,T1.1 is the transfer system.",
        "Usually the first and last mappings have different status and are realized by a parser and a generator, respectively.",
        "The MT system of our project KIT-FAST' is based on a transfer model and i4, where RI is the source KIT = Kanstliche Intelligenz und Textverstehen (artificial intelligence and text understanding), FAST = functor-argument-structure for translation.",
        "The project KIT-FAST constitutes the Berlin component of the complementary research of EUROTRA-D.",
        "It receives grants by the Federal Minister for Research and Technology.",
        "GPSG structure (see [Gazdar et al.",
        "85] and [Busemann/ Hauenschild 88]), R2 is the source Functor-ArgumentStructure (FAS)2, R3 is the target FAS and 124 is the target GPSG structure.",
        "GI to G. are context-free grammars.",
        "In the current phase of our project we arc taking the first steps towards the solution of textual phenomena, i.e. the interpretation of anaphorical relations (sec [Schmitz et al.",
        "91]).",
        "In order to achieve this, the source FAS is mapped onto a conceptual representation for the text content, which is represented by the ABox (assertional knowledge) of the KL-ONE like representation language BACK.",
        "The knowledge representation system BACK has been developed by our neighbour project KIT-BACK (sec [Peltason et al.",
        "89]).",
        "The representation for the text content is used to determine the discourse consistency of possible antecedents for anaphoric pronouns.",
        "Currently sT, and 4TT are realized by a GPSG parser and a morphological synthesis component, respectively.",
        "The mappings 1T2 (semantic analysis), 2T3 (transfer), 3T4 (generation) and the mapping from R2 (FAS representations) onto conceptual representations are realized by one algorithm on the basis of term rewriting.",
        "The mapping 5T1 (parsing) also is intended to be implemented with a term-rewrite system.",
        "A short introduction to term-rewriting is given in section 3.",
        "It seems reasonable to represent all different R1 with the help of one data structure and to specify all ,T1,1 with the help of the same formalism (Including parsing and generation).",
        "Some proposals in this direction have already been made.",
        "Two of these systems, namely CAT2 and TFS, and their properties are outlined in section 2.",
        "The following sections present an alternative approach, which remedies some problems of these systems.",
        "In Section 4 a term representation, which is generated by a signature for a term algebra, is introduced with the help of which all 11, can be represented.",
        "The representation of GPSG or FAS derivational trees, feature structures and ICL-ONE like conceptual structures as terms is shown by example.",
        "The algorithm, i.e. the termination condition and the application relations, which are automatically computed from the rewrite rules by the examination of the interdependencies of the rules with the help of"
      ]
    },
    {
      "heading": "2 The FAS is a semantic representation for sentences which has been developed in the preceding phase of our project. Among others it contains functor-argument-relations, information about the thematic structuring of sentences and semantic relations (argument roles) and semantic features. For a more detailed description see [Hauenschild/ Umbach 88], [Busemann/ Hauenschild 89] and [Busemann 90]. ACTES DE COLING-92, Niorrlis, 23-28 Aoin 19927 77PROC. ot COLING-92, NAnn-Es. AIM. 23-28, 1992",
      "text": [
        "on.",
        "This is similar to functional uncertainty in LFG."
      ]
    },
    {
      "heading": "5 Interpretation of TRSes",
      "text": [
        "As mentioned in section 3, the TRSes for the mappings in MT are not usually confluent.",
        "For this reason the Knuth-Bendix algorithm cannot be used.",
        "In order to apply non-confluent TRSes efficiently, the interdependencies between their 'FR rules have to be determined.",
        "The rewrite process is data-driven and in order to check each TR rule only once for application, an order is computed (subsection 1).",
        "The rewrite process should be complete and coherent.",
        "Therefore more general TR rules should be checked for application after more specific ones and subsection 2 shows an order for some kind of default 'FR rules.",
        "As the TRSes are not confluent, the interpreter has to control the branching of the derivation sequence.",
        "This is done with the help of alternative rules (subsection 3).",
        "The TRS interpreter is outlined in subsection 4.",
        "Since the rewrite process is data-driven, the termination of the interpreter cannot be guaranteed by the interpreter itself.",
        "Subsection 5 gives an adequate termination condition for TRSes used in MT systems.",
        "In the following subsections, the existence of two TR rules (ni,pi) and (n2, a., 3 132) in the TRS is assumed, where (ni, n2)RN (the set of numbers of all 'FR rules), A, X2 are the left-hand sides (lhs) and pi, P2 are the right-hand sides (rhs) of the 'FR rules."
      ]
    },
    {
      "heading": "5.1 The application order",
      "text": [
        "In order to check each 'FR rule for application only once, an order has to be computed.",
        "Generally there are cycles in the application order and the TR rules of a cycle have to be checked more than once.",
        "Definition: Application order relation > If pi is superposablc with X2 or X2 is superposable with pi then ni >,,,p 112, whereC RN X RN.",
        "The relation ..pp is transitive and ni >pi, 112 means that TR rule ni has to be applied before rule n2.",
        "This relation may have cycles ni >,pc,>.",
        "pp n, >,n, ni.",
        "In order to compute the cycles ofthe transitive closure >p is computed, which may contain an equivalence relation >, e (> is reflexive, symmetric and transitive, and >cy, Rc X Rc, where Rc C RN is the set of numbers of cyclic TR rules).",
        "Definition: Cycles of A cycle of >, is an equivalence class [n] = fm I a >cyc m) and >o), is the greatest equivalence relation in >6.",
        "The cycles (equivalence classes) are either equal or disjoint and constitute a partition of R. The efficiency of the rewrite process crucially depends on the number and size of the cycles."
      ]
    },
    {
      "heading": "5.2 Default TR rules",
      "text": [
        "In some situations it is useful to have some kind of default 'FR rule.",
        "For example if there are several different translations for one source language terminal which depend on certain (structural) conditions and there is a \"default\" translation, if none of these conditions holds, e.g. if the German verb schwimmen has an inanimate argument, it has to be translated into the English float and if there is no information available, it has to be translated into swim.",
        "These default TR rules can be computed by superposing the Ihs of two TR rules and one lhs occurs completely in the other Ihs.",
        "In that case the more special TR rule has to be checked for application first and the more general one last.",
        "Definition: Default relation >af If A.1 is superposable with 2.2 with substitution a and Ai and A.2 are not identical and all variables X of (X < t) a a occur in k2 then n1 >dd n2, where >dd RD X RD.",
        "The relation >dd is reflexive, antisymmetric and transitive, i.e. a (partial) order relation in RD (the set of numbers of default rules) and ni >dd n2 means that the lhs of rule ni is more special than the Ills of rule n2 and ni has to be checked for application before n2, even if they are part of a cycle.",
        "If A,1 and X2 are identical without the names for variables, the TR rules are alternatives (sae next subsection).",
        "The set RD contains subsets C, RD, which are called chains, because for every x,y a c; either x >dd y or y >dd X.",
        "Every chain has an infimum (the most special TR rule) and a supremum (the most gemeral TR rule)."
      ]
    },
    {
      "heading": "5.3 Alternative TR rules",
      "text": [
        "In order to get alternative solutions the derivation sequence has to branch at certain points which can also be computed by superposing the Ihs of two TR rules.",
        "This is just the situation, in which the Knuth-Bendix algorithm computes a critical pair.",
        "Definition: Alternative relation Vi,, If A1 is superposablc with X2 at subterm Xi/u with substitution a and P1 is not superposable with A.2 and if A.i/u = A,1 then .X.1 is not unifiable with p2 then {(n, A1c > pia), Xia--)A,I[u 4 No])) c 'IRS and ni v5 ri2, where V.5 RA X RA.",
        "The relation v1, is reflexive, symmetric and transitive, i.e. an equivalence relation in RA (the set of numbers of alternative rules).",
        "n; v, n means that everytime TR rule n1 is applicable to an input term, then n is applicable and vice versa and the derivation sequence branches at this point.",
        "The additional condition that the rhs pi of one rule is not superposable with the lhs X2 of the other is necessary to exclude branches caused by rules in which the subterm Xi/u is used as structural condition.",
        "The other condition is needed for the same reason in the special case when ),..1 and kl are unifiable.",
        "The rules n; or n may already exist in the TRS.",
        "In that case either the lhs of ni and n2 have been identical and n; = ni and n= 112 or ni >dd n2 and n; = ni or n2 >dd n1 and n; = n2.",
        "If the rules ri; or n2 are not in the TRS, they are added and all other relations are computed.",
        "In most cases the new lhs is more special than the two other lhs and the corresponding default relations hold.",
        "The Ihs of the new 'FR rules n; and ni is the \"superposition\" of lhs of the rules ni and n2.",
        "The rhs of n; is the rhs of ni, in which the variables are replaced according to the substitution a.",
        "The rhs of nj is the lhs of ni, in which the subterm is replaced by the rhs of n2, the variables of which are replaced according to",
        "Another problem of IT'S can arise if the definitions are applied in the wrong order.",
        "Let us for example assume that a predicate has alternative translations depending on the selectional restrictions of its target language arguments and the definition which gives the wrong translation is applied before the target language arguments exist.",
        "This would lead to a wrong or no translation, even if the correct translation would be possible.",
        "This can only be avoided if the alternatives are specified in one definition with the help of disjunction, which, however, may be very inefficient if the correct translation is the last alternative."
      ]
    },
    {
      "heading": "3 Term-rewriting",
      "text": [
        "A term-rewrite system (TRS)6 is a set of term-rewrite rules (TR rules) A --> p with left-hand side (Ills) A and right-hand side (rhs) p, in which cospecified variables occur.",
        "The applicability of a TR rule to an input term t is checked by superposing t with A.",
        "Definition: Superposition The term ti is superposable with the term t2, iff a subterin ti/u of t1 and t2 are unifiable with minimal unifier (or substitution) a [ ).",
        "The elements of a are pairs of substitutions X t, where the variable X is substituted by the corresponding term t. The substitution of variables occurring in t/u and A according to a (notation: (t/i)a and Arc, respectively) yields two identical terms ((t/u)a Act).",
        "If the term t is superposable with X at the subterm t/u with the substitution a, die TR rule is applied by replacing t/u in t by per yielding the target term t' 4 pal.",
        "This is called a derivation step (notation: t ---> t').",
        "Originally TRSes are used to prove the equality of terms.",
        "In this context die Knuth-Bendix algorithm has been developed (see [Knuth/ Bendix 70]), which computes the normal form of a given 1RS, if the TRS is confluent and terminating.",
        "A IRS is confluent if the application of the rewrite rules to an input term yields exactly one target term, no matter in which sequence the rules are applied.",
        "In order to guarantee the termination of TRSes, an ordering on the corresponding terms has to be defined and at least one minimal tern exists.",
        "Such an ordering guarantees the termination of a derivation sequence t1 t2 -> -> tn_1 t if and only if t, > t2 > > 41-1 > tn, where t1 is the input term, t the target term and ti tir a derivation step, in which the resulting tern t is derived from the original term t by the application of one 'FR rule.",
        "In order to prove the termination of a TRS, theoretically all possible derivation sequences have to be checked.",
        "Another possibility is to define a total ordering on the terms on the Ihs and rhs of the 'FR rules, which guarantees that in a derivation step t --> in,' the original term t; is reduced according to this ordering (ti > tri), then the TRS is terminating because after a finite number of derivation steps either a 6 In the following a notation according to Pima/ Oppen 801 is used, which gives a detailed introduction to TRSes.",
        "minimal term is reached or no TR rule is applicable to the resulting term.",
        "In order to guarantee the termination of TRSes by considering each single TR rule, some criteria have to be defined for the terms on the Ihs and rhs of each single TR rule so that its application reduces the input term according to the total ordering.",
        "The ordering may reduce the size of the input term after the application of a rule (a quantitative ordering, i.e. deleting a subtemi on the Ms) or substitute a subtern of the input term in such a way that this substitution is never reversed by another rewrite rule (a qualitative ordering, i.e. an operator precedence ordering).",
        "For the use in MT we assume a qualitative ordering (see section 5.5).",
        "For details about the termination of 1RSes see [Dershowitz 82 and 851.",
        "TRSes in normal form are complete and coherent.",
        "They can efficiently be applied to deduce the normal form of an input term.",
        "In order to prove the equality of two terms, their normal forms are deduced and compared for literal equality.",
        "In order to use TRSes for mappings between a source anti a target representation in MT, the source representation can be viewed as an input term for a TRS and the target representation as its normal form.",
        "For this reason a tern algebra for each representation II, has to be defined which generates the corresponding terns for the given representation.",
        "The mapping rules ale considered as 'FR rules.",
        "But using \"fRSes for the mappings in MT causes a problem.",
        "Normally analysis, transfer and generation of natural languages in M1' may have more than one result, i.e. TRSes used for mappings in MT usually are not confluent.",
        "For this reason an interpreter for TRSes has been developed in our project (see section fi, [Weisweber 89] and [Weiswebed Hauenschild 901), which is complete and coherent and applies terminating and non-confluent TRSes in a very efficient way."
      ]
    },
    {
      "heading": "4 The term representation",
      "text": [
        "In order to have one process for the interpretation of the mapping riles of the different 0Tn,1, all structures R have to be represented with the help of one data structure.",
        "The data structure used by the IRS interpreter consists of terms which represent directed acyclic graphs (DAGs) with complex categories as node labels.",
        "Derivational trees are special instances of DAGs in which 110 re-entrancy of nodes is allowed and the edges leaving one node arc ordered.",
        "The terms are generated by the billowing signature': Signature for DAGs dag: GAT LIST -> DAG list: DAG LIST -> LIST [I: -> LIST At present this signature is fixed for the interpreter, but if more expressive representations are necessary for 7 Signatures are very similar to context-free rules.",
        "The operator definitions 'op': S,S,1S can be viewed as the context-free rule S,,'op(' S,s.1*).",
        "where the sorts Si arc interpreted as non-terminals.",
        "the superposition.",
        "The efficiency of the rewrite process crucially depends on the number and size of the equivalence classes of RA."
      ]
    },
    {
      "heading": "5.4 The TRS interpreter",
      "text": [
        "In order to apply the TR rules in an efficient order, the ordered set APP is precomputed:",
        "Olin is infimum of a chain C R0) In I [n]RAl The set APP is ordered in the way that the sequence does not contradict to >.r,r,.",
        "The interpreter for 'IRSes takes an input term t and checks all TR rules (n, X --> p) in the order of APP.",
        "If n E Rc, then all TR rules m E [n] g Rc have to be checked for application in an arbitrary order as long as one rule of the cycle [n] is applicable, otherwise if t is superposable with X, then the corresponding TR rule is applied else the next TR rule is checked for application.",
        "If the applicable TR rule n is a default rule (n e RD), then the TR rules rn fit .",
        "?id m) of the chain C RD are applied in the order of >def.",
        "If the applicable TR rule n is an alternative rule (n E RA), then all the TR rules m E [n] RA, are applied alternatively.",
        "Every alternative is a new branch in the derivation sequence.",
        "If a TRS has a normal form, the algorithm interpretes it as efficiently as normalized TRSes.",
        "The interpreter strategy of processing the input term, which represents a I)AG, is flexible, i.e. the 'FR rule writer determines whether to proceed top-down, bottom-up, from left to right or vice versa.",
        "For example if the daughter categories of the lhs of the 'FR rules are target language (TL) categories and the mother category is a source language (SL) category which is to be translated into a TL category by the corresponding rule, then the interpreter will process the input structure bottom-up (see example of the TR rule in section 4)."
      ]
    },
    {
      "heading": "5.5 Termination",
      "text": [
        "For the use in our TRSes a quantitative ordering has been defined that guarantees the termination of all the IRSes used in our MT system.",
        "This ordering uses the different vocabularies of the SL and 'FL.",
        "terms and requires that the number of SL categories occurring in the input term has to be reduced.",
        "This means that either a SL category has to be deleted or it has to be replaced by one or more TL categories.",
        "The minimal terms are all terms in which no SL categories occur.",
        "This ordering guarantees the termination of that sequence because the number of SL categories occurring in the input term is finite and after a finite number of applications there will be no SL categories left in the resulting term or no 'FR rule is applicable.",
        "In order to prove the termination of a TRS, every single 'FR rule has to be checked.",
        "The Ihs and rhs may contain occurrences of variables for terms, i.e. for (sub)DAGs, sets of (sub)DAGs, categories or feature values of categories.",
        "If for example a variable for a term representing a DAG is occurring once on the lhs and doubled on the rhs, then the number of SL categories occurring in the input term may be increased in the resulting term.",
        "For this reason an additional condition has to be defined which has to be fulfilled by the Ilis and rhs of each 'FR rule.",
        "Every variable occurring on the rhs has to occur on the Ills.",
        "The two restrictions on 'FR rules allow for checking each rule for termination after it has been defined or modified so that the termination of the TRS can be guaranteed, because in every derivation step the number of SL categories is reduced.",
        "The derivation ends successfully if no SL category occurs in the resulting term and the corresponding tree can be generated by the context-free TL grammar.",
        "The given termination condition fulfils the three constraints for termination (the input representation must be built in a well-behaved compositional way, recursive input representations have to be considered and the input should not be extended) discussed in [van Noord 901.",
        "If the termination condition should prove to be inadequate for the use in MT, qualitative orderings or combinations of quantitative and qualitative orderings may be defined.",
        "Up to now the given quantitative ordering has proved to be adequate for the TRSes of our MT system."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "The TRS interpreter and an editor for TRSes are implemented in Amy Prolog on an Al' compatible PC.",
        "The editor allows for a graphical input in DAG notation, performs consistency checks on 'FR rules, checks the termination condition on 'FR rules, generates the corresponding terms and computes the application order by the means of the definitions given in section 5.",
        "TRSes have successfully been used for semantic analysis, transfer, generation and for the mapping from sentence semantic representations to conceptual representations in the experimental MT system of our project.",
        "TRSes are to be used to implement parsing in the near future.",
        "First experiments in that direction have been encouraging.",
        "In the future the possibility of merging all TRSes defined for the translation of one language into another to form one single TRS is to be investigated.",
        "The advantage would be that the analysis depth will become flexible in the way that if the translation of a fragment of the source language syntactic representation is unambiguous, it can be directly translated into the target language syntactic representation, without the detour via the semantic representation.",
        "This would be possible for all levels of representation.",
        "Another point will be to check the possibility of extracting reversible parts from one 'FRS and to use them for the other translation direction.",
        "The interpreter, which uses the basic unification algorithm of [Eisele/ Mae 861 to superpose the input term with the the lhs of the TR rules, is intended to be expanded with disjunction according to [DOW Eisele 90].",
        "With these additional features, term-rewriting is a powerful, elegant, complete and coherent device to describe the relations between all levels of representation in machine translation systems.",
        "superposition, is given in section 5.",
        "Section 6 concludes the paper and gives an outlook for further research."
      ]
    },
    {
      "heading": "2 Other approaches",
      "text": [
        "Several proposals in the direction of a uniform architecture of MT systems have been made.",
        "Within the EUROTRA-D project the CAT2 system was developed by [Sharp 88].",
        "This approach uses derivational trees as representations and is characterized by the compositionality of the mapping rules according to [Arnold et al.",
        "861.",
        "The Typed Feature Structure (TES) system as presented in [Emele/ Zajac 891 and [Zajac 89,90,91] is outlined in subsection 2.",
        "It uses typed feature structures as representations.",
        "Another approach, which is similar to Emele and Zajac's, is given in [Russell et al.",
        "91]."
      ]
    },
    {
      "heading": "2.1 The CAT2 system",
      "text": [
        "The representations 14, in the CAT2 system are derivational trees generated by context-free grammars G, which are made up of a pair (C where C is a set of Constructors (structural rules) and A a set of Atoms (lexical rules).",
        "The mappings from one tree to another are called Translators, which are sets of t-rules.",
        "The translators sT, and Tr are realized by a parser and a tree-to-string transducer, respectively.",
        "The interpreter for t-rules processes the input tree top-down by matching the input tree with the left-hand side (lhs) of a rule and the subobjects are recursively mapped.",
        "On the way bottom-up the subtrees are reordered according to the right-hand side (rhs) of the given t-rule.",
        "The interpreter terminates when the whole input structure has been traversed and mapped.",
        "The t-rules have the form lhs rhs.",
        "The Ihs and rhs are structural descriptions of the source and target structure, respectively, which are expressed by trees of the form (node).(subtrees).",
        "The nodes are pairs (C, F), where C is a distinguished feature and F is a set of feature-value pairs.",
        "The subtrees of the lhs and rhs can be combined with the help of conjunction or disjunction.",
        "Each subtree can be labeled with a tag $N and can be marked as optional or with the Kleene-star operator.",
        "When a tag, which occurs on the lhs, is missing on the rhs, the corresponding subtree is deleted, otherwise it is replaced by its mapping (translation).",
        "The t-rules maintain the partial compositionality3 of the translator.",
        "An example of a t-rule for semantic analysis is the snapping from the surface cases of the English verb generate onto the corresponding deep cases:",
        "The advantages of CAT2 are its simplicity and"
      ]
    },
    {
      "heading": "3 The translation of an expression consists of the translation",
      "text": [
        "of its subexpressions (see [Arnold et al.",
        "86]).",
        "efficiency.",
        "Furthermore CAT2 is supposed to be reversible.",
        "The efficiency is a consequence of the (partial) compositionality of the translators.",
        "This leads directly to an efficient structure-driven4 interpreter.",
        "The disadvantage is that it does not allow for directed acyclic graphs (DAGs) as representations.",
        "Since the translators are compositional, the t-rules cannot express the fact that the translation of one constituent depends on the translation of other constituents.",
        "For example if a predicate (verb, noun or adjective) is to be translated, the translation typically depends on the semantic roles and features (selectional restrictions) of its target language arguments."
      ]
    },
    {
      "heading": "2.2 The TES system",
      "text": [
        "The TFS system uses typed feature structures (TFSes) as representations, which can be represented as DAGs.",
        "TFScs are defined recursively.",
        "A TFS is an atomic or complex type.",
        "An atomic type consists of a type symbol and a complex type of a type symbol with a set of pairs of features and TFSes (values).",
        "The feature structures of PATR, LEG or I4PSG are examples of TFSes.",
        "The set of type symbols P, which always includes the special type symbols T (top) and I (bottom), is partially ordered and T >_ T .L holds for all T E P. This partial ordering defines a lattice structure on P and can be extracted from the definitions (axioms).",
        "Definitions have the form T TFS, v v TFS, C, where T is a type symbol, the TFS, are TFSes of type E., (T 171) and C is a conditional constraint, which may be omitted and is expressed by a logical conjunction of TFSes.",
        "The unification of two type symbols is their greatest lower bound.",
        "A \"rewrite step\"5 on an input TES is performed by looking for a subTFS of type T of the input ITS and a definition of the form T F :- C. In that case the subTFS of the input TFS and the TFS F are unified, the conjunction C of TFSes is solved and the result of the unification is inserted in place of the sublES.",
        "The TFS rule for the semantic analysis rule of the previous subsection is:",
        "SEM-S[syn: S[np: NP[cas:NOM X], vp: VP[v:GENERATE, np: NPIcas:ACC I YJ] sem: REL[process: GENERATE, agent: X', affected: Y']l SYN-NP[syn: NP[cas:NOM Xj, sem: X'1, SYN-NP[syn: NP[cas:ACC in sem: r] The advantage of TFS is that all different levels, i.e. Ss, RI to Rn and ST, are accessible for all mappings The disadvantage is that the algorithm for the application of definitions is not complete."
      ]
    },
    {
      "heading": "7 References",
      "text": [
        "[Busernann 901: S. Buseinann: \"Generierung natfirlicher Sprache mit Generalisierten Phrasenstruktur-Grammatiken\", KIT-Report 87, Technical University of Berlin 1990 [Arnold et al.",
        "86]: Di.",
        "Arnold, S. Krauwer, M. Rosner, L. de Tombe, G.B.",
        "Varile: \"The (C,A),T Framework in EUROTRA: A Theoretically Committed Notation for MT, in: Procs.",
        "11th COLING-86, Bonn 1986, pp.",
        "297-303 [Busemann/Hauenschild 881: S. Busemann, Ch.",
        "Hauenschild: \"A Constructive View of GPSG or How to Make it Work\", in: Procs.",
        "12th COLING-88, Budapest 1988, pp.",
        "77-82 [Busemann/Hauenschild 89]: S. Busemann, Ch.",
        "Hauenschild: \"From PAS Representations to GPSG Structures\", in: S. Busemann, Ch.",
        "Hauenschilcl and C. Umbach (eds.",
        "): \"Views of the Syntax/Semantics Interface\", Procs.",
        "of the Workshop \"GPSG and Semantics\", KIT-Report 74, 'technical University of Berlin 1989, pp.",
        "17 - 43 [Dershowitz 82]: N. Dershowitz: \"Orderings for Term Rewriting Systems\", Theoretical Computer Science 17 (1982), North-Holland, pp.",
        "279 - 301 fDershowitz 851: N. Dershowitz: \"Termination\", in: G.Goos, J. Hartrnanis (eds.",
        "): \"Rewriting Techniques and Applications\", LNCS 202, Dijon, France 1985, pp.",
        "180- 224 [DOrre/Eisele 90]: J. Mire, A. Eisele: \"Feature Logic with Disjunctive Unification\", in: Procs.",
        "13th COLING-90 (Vol.",
        "2), Helsinki 1990, pp.",
        "100-105 [Eisele/Dfirre 86]: A. Eisele, J.",
        "Done: \"A Lexical Functional Grammar System in Prolog\", in: Procs.",
        "11th COLING-86, Bonn 1986, pp.",
        "551-553 [Emelegajac 891: M. Emele, R. Zajac, \"RETIE: A Rewriting System for Typed Feature Structures\", ATR Technical Report TR-I-007] 1989 [Gazdar et al.",
        "85]: G. Gazdar, E. Klein, G. Pathan and I.",
        "Sag: \"Generalized Phrase Structure Grammar\", Oxford, Blackwell 1985 Iffauenschild/Busemann 881: Ch.",
        "Hauenschild, S. Busemann: \"A constructive version of GPSG for machine translation\", in: E. Steiner, P. Schmidt and C. Zellinsky-Wibbelt (eds.",
        "): \"From Syntax to Semantics - Insights From Machine Translation\", London, Frances Pinter 1988, pp.",
        "216-238 Iflauenschild/Umbach 881: Ch.",
        "Hauenschild, C. Umbach: \"Funktor-Argument-Struktur, Die satzsemantische Reprasentations- und Transferebene im Projekt KIT-FAST\", in: I. Schtitz (ed.",
        "): \"Workshop Semantik tmd Transfer\", EUROTRA-D Working Papers No.6, Saarbrficken 1988, pp.",
        "16-35 [Huet/Oppen 80]: G. Huet, D. Oppcn: \"Equations and Rewrite Rules\", in: R.V.",
        "Book (ed.",
        "): \"Formal Language Theory, Perspectives and Open Problems\", Academic Press 1980, pp.",
        "349-405 [Knuth/Bendix 70]: D. Knuth, P. Bendix: \"Simple Word Problems in Universal Algebras\", in: J. Leech (ed.",
        "): \"Computational Problems in Abstract Algebra\", Pergamon Press 1970, pp.",
        "263-297 [Peltason et al.",
        "75]: C. Peltason, A. Schmiedel, C. Kinderrnann, J. Quantz, \"The BACK System Revisited\", KIT-Report 75, Technical University of Berlin 1989 [Russell et al.",
        "91]: G. Russell,- A. Ballian, D. Estival, S. Warwick-Arnstrong, \"A Language for the Statement of Binary Relations over Feature Structures\", in: Procs.",
        "of the 5th Conference of the European Chapter of the ACL, Berlin 1991, pp.",
        "287-292 [Schmitz et al.",
        "911: B. Schmitz, S. Freed, C. Hauenschild: \"Textreprasentation und Hintergrundwissen ftir die Anaphernresolution On Maschinellen Ubersetzungssystem KIT-FAST\", KIT-Report 93, Technical University of Berlin 1991 [Sharp 88]: R. Sharp, \"CAl2 - Implementing a Formalism for Multi-Lingual MT\", in: Procs.",
        "of the 2nd International Conference on Theoretical and Methodological Issues in Machine Translation of Natural Languages, CMG Pittsburg 1988 [van Noon!",
        "90]: G. van Noord: \"Reversible Unification Based Machine Translation\", in: Procs.",
        "13th COLING-90 (Vol.",
        "2), Helsinki 1990, pp.",
        "299-304 1Weisweber 891: W. Weisweber: \"Transfer in Machine Translation by Non-Confluent Term-Rewrite Systems\", in: Procs.",
        "of the 13th German Workshop on Artificial Intelligence (GWAI-89), Eringerfeld, September 1989, pp.",
        "264 - 269 [Weisweber/Hauenschild 90]: W. Weisweber, Ch.",
        "Hauenschild: \"A model of Multi-Level Transfer for Machine Translation and Its Partial Realization\", KIT Report 77, Technical University of Berlin 1990 and to appear in: Procs.",
        "of the Seminar \"Computers & Translation '89\", Tbilisi 1989 [Zajac 89]: R. Zajac, \"A Transfer Model Using a Typed Feature Structure Rewriting System with Inheritance\", in: Procs.",
        "of the 27th Annual Meeting of the ACL, Vancouver 1989 [Zajac 901: R. Zajac, \"A relational approach to translation\", in: Procs.",
        "of the 3nd International Conference on Theoretical and Methodological Issues in Machine Translation of Natural Languages, Austin 1990 [Zajac 91]: R. Zajac, \"A Uniform Architecture for Parsing, Generation and Transfer\", in: T. Strzalkowski (ed.",
        "), Procs.",
        "of the Workshop on Reversible Grammar in Natural Language Processing, Berkeley 1991, pp. 71-80",
        "MT, the interpreter can be adapted.",
        "The sort CAT, which represents complex categories, is also generated by a signature which has to be specified for the particular representations.",
        "Scheme for signatures for complex categories C: LANG F;F, CAT g-gpsg, g-fas, e-f as, e-gpsg, g-atl, ...: 4 LANG V,: 4 Fi The C are the main categories (in the sense of the distinguished features of [Sharp 88]).",
        "LANG is a special sort which represents the language to which a category belongs.",
        "With the help of the instances of this sort the categories occurring in terms can be distinguished to belong to the source or target representation.",
        "This fact is used to allow the TRS interpreter to process the input structure in a flexible strategy (see section 5.4) and to guarantee its termination (see section 5.5).",
        "The sorts F; represent the features which are associated to the main category.",
        "The V; are 0-ary operators (constants) which represent the values for the features represented by F; (V; E Fi).",
        "Nodes N of a DAG which have no outgoing edges (in trees terminal nodes) are represented by dag(N,[]).",
        "Example signature for German nominal phrases np: LANG PER PLU GEN CAS 4 CAT g-gpsg: 4 LANG",
        "An example of a term for a German nominal phrase is np(g-gpsg,3,-,fem,nom).",
        "The TRS interpreter uses the signature for DAGs to traverse the input representation in order to find a subterm which is unifiable with the lhs of a TR rule.",
        "Our TRS editor uses the signature for DAGs to produce terms from a graphical input and to perform consistency checks on the input.",
        "In order to show, for example, how conceptual structures can be represented as terms, a small fragment of the syntax of the ABox tell language (An) of the knowledge representation system BACK (see [Peltason et al.",
        "89]), which is used in the experimental MT system of our project, is given: Context-free rules for a fragment of the ATL:",
        "The non-terminal (concept) represents the concepts used in a discourse and (role) represents the semantic roles of the arguments of a predicative concept.",
        "(variable) represents variables which are instantiated with a new unique discourse object reference tiCi, if there is no object reference in the ABox for the given concept.",
        "In order to represent An expressions as terms the following signature is used: Signature for ATL categories: equal: LANG 0I3J-REF > CAT with: LANG ROLE > CAT g-atl: -+ LANG The AU expressions are represented by trees and since terms represent DAGs, a context-free syntax is needed to check whether the target terms of the conceptual analysis represent AU trees or not.",
        "The context-free syntax of An trees is given in the following.",
        "Context-free syntax for ATL trees atl(g-all) > equal(g-atl, with(g-atl, with(g-atl, > equal(g-atIJ with(g-atl, equal(g-allj > (concept) (lexical rules) For example the German An expression uc; = generate with agent : (uc2 = generator) andwith affected : (uc3 = sentence) is represented by the following An term: Example for an ATL term dag(atl(g-at1), [ dag(equal(g-atl,uci), dag(generate, dag(with(g-atl,agent), [ dag(equal(g-atl,uc2), dag(generator, [DM), dag(with(g-atl,affected), [ dag(equal(g-atl,uc3), [ dag(sentence, 11)1)1)1) At the end of this section we give the TR rule of the semantic analysis which corresponds to the rules of CAT2 and MS presented in the sections 2.1 and 2.2, respectively: dag(s(e-gpsg), [ dag(v-pred(e-fas,nom-acc,active), [ dag(generate, [])]), dag(term(e-fas,nom), X), dag(term(e-fas,acc), Y)]) dag(clause(e-fas), [ dag(v-pred(e-fas,ag-af ,active), [ dag(generate, DA), dag(term(e-fas,agent), X), dag(term(e-fas,affected), Y)]) The IR rule contains the cospecified variables X and Y. Additionally some conditions on variable feature values can be defined with the help of the operators =, < and which can be combined with the logical operators and or or.",
        "In order to handle for example the long distance dependencies of GPSG or LFG conveniently, the expressive power of TR rules has been increased.",
        "The categories occurring on the Ills and rhs of a rule may be labeled with the +-operator, which is similar to the Kleene-star operator.",
        "The occurrence of the category C* means that C is the root node of the corresponding subDAG, which may dominate another category C, which again may dominate another category C and so"
      ]
    }
  ]
}
