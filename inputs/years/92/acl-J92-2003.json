{
  "info": {
    "authors": [
      "Gosse Bouma"
    ],
    "book": "Computational Linguistics",
    "id": "acl-J92-2003",
    "title": "Feature Structures and Nonmonotonicity",
    "url": "https://aclweb.org/anthology/J92-2003",
    "year": 1992
  },
  "references": [
    "acl-C86-1050",
    "acl-E89-1009",
    "acl-J90-1002",
    "acl-P85-1032",
    "acl-P86-1038",
    "acl-P90-1021"
  ],
  "sections": [
    {
      "heading": "Rijksuniversiteit Groningen",
      "text": [
        "Unification-based grammar formalisms use feature structures to represent linguistic knowledge.",
        "The only operation defined on feature structures, unification, is information-combining and monotonic.",
        "Several authors have proposed nonmonotonic extensions of this formalism, as for a linguistically adequate description of certain natural language phenomena some kind of default reasoning seems essential.",
        "We argue that the effect of these proposals can be captured by means of one general, nonmonotonic, operation on feature structures, called default unification.",
        "We provide a formal semantics of the operation and demonstrate how some of the phenomena used to motivate nonmonotonic extensions of unification-based formalisms can be handled."
      ]
    },
    {
      "heading": "1. Introduction",
      "text": [
        "While monotonicity is often desirable from a formal and computational perspective, it is at odds with a considerable body of linguistic work.",
        "Default principles, default rules, and default feature-values can be found in many linguistic formalisms and are used prominently in work on phonology, morphology, and syntax.",
        "In spite of their great expressive power and flexibility, unification-based grammar formalisms (see Shieber 1986a, for an introduction) are in general not very successful in modeling such devices.",
        "Unification is an information-combining, monotonic, operation on feature structures, whereas the implementation of default devices typically requires some form of nonmonotonicity.",
        "In this paper, we present a nonmonotonic operation on feature structures, which enables us to implement the effects of a number of default devices used in linguistics.",
        "As the operation is defined in terms of feature structures only, an important characteristic of unification-based formalisms, namely that linguistic knowledge is encoded in the form of feature structures, is preserved.",
        "In the next section, we present an overview of linguistic phenomena that are best described using defaults.",
        "We also argue that previous proposals for handling these phenomena in a unification-based setting are unsatisfactory.",
        "Section 3 provides the formal background for the central part of the paper, Section 4, in which a definition of default unification is presented.",
        "Section 5 briefly presents some applications of this operation and the final section draws some conclusions concerning the role of nonmonotonicity in unification-based formalisms."
      ]
    },
    {
      "heading": "2. Previous Work",
      "text": [
        "There are a number of phenomena that suggest that unification-based grammar formalisms might profit from the addition of some form of nonmonotonicity, and several authors have in fact suggested such extensions.",
        "In this section, we argue that these proposals suffer from a number of shortcomings.",
        "Most importantly, previous proposals have either been highly restricted in scope or have been presented in very informal"
      ]
    },
    {
      "heading": "* Computational Linguistics Department, Postbus 716, 9700 AS Groningen, The Netherlands 1992 Association for Computational Linguistics",
      "text": [
        "Computational LinguisticsVolume 18, Number 2 terms, thus leaving a number of questions concerning the exact behavior of the proposed extensions unanswered.",
        "An overview of the issues that call for the addition of non-monotonic reasoning and of some of the proposals in that direction is presented below.",
        "Exceptional Rules.",
        "Consider a language in which the vast majority of verbs cannot precede its subject, whereas a small number of exceptional verbs can.",
        "The rule accounting for inverted structures would probably require that verbs occurring in it be marked as +INV (i.e. (iNv) : +).",
        "As a consequence, all regular verbs must be marked explicitly as -INV (to prevent them from occurring in the inversion rule).",
        "Note that, in a unification-based grammar, there is no need to mark the exceptional verbs as +INV, which leads to the rather counterintuitive situation that regular verbs need to be marked extra, whereas the exceptional ones can remain underspecified.",
        "A more natural solution would be to assign all verbs the specification -INV by default (either by means of template inheritance or by means of lexical feature specification defaults as used in Generalized Phrase Structure Grammar 1GPSG; Gazdar et al.",
        "19851) and to overwrite or block this specification in the exceptional cases.",
        "The possibility of incorporating an overwrite operation in a unification-based formalism is mentioned in Shieber (1986a, p. 60).",
        "Feature Percolation Principles.",
        "Both GPSG and Head-driven Phrase Structure Grammar (HPSG; Pollard and Sag 1987) adopt the so-called Head Feature Convention (HFC).",
        "In GPSG, the HFC is a default principle: head features will normally have identical values on mother and head, but specific rules may assign incompatible values to specific head features.",
        "In unification-based formalisms, it is impossible to express this principle directly.",
        "Adding the constraint (X0 head) = (X, head) to every rule of the form X0 Xi .. Xn (with X, (1 <i < n) the head of the rule and assuming all head features to be collected under head) will not do, as it rules out the possibility of exceptions altogether.",
        "Shieber (1986b) therefore proposes to add this constraint conservatively, which means that, if the rule already contains conflicting information for some head feature f, the constraint is replaced by a set of constraints (X0 head f') = (X, head f'), for all head features f' f. Structuring the Lexicon.",
        "Flickinger, Pollard, and Wasow (1985), Flickinger (1987), De Smedt (1990), Daelemans (1988), and others, have argued that the encoding and maintenance of the detailed lexical descriptions typical for lexicalist grammar formalisms benefits greatly from the use of (nonmonotonic) inheritance.",
        "In Flickinger, Pollard, and Wasow (1985), for instance, lexical information is organized in the form of frames, which are comparable to the templates (i.e., feature structures that may be used as part of the definition of other feature structures) of PATR-II (Shieber 1986a).",
        "A frame or specific lexical entry may inherit from more general frames.",
        "Frames can be used to encode information economically and, perhaps more importantly, as a means to express linguistic generalizations.",
        "For instance, all properties typical of verbs are defined in the VERB-frame, and properties typical of auxiliaries are defined in the AUX-frame.",
        "The AUX-frame may inherit from the VERB-frame, thus capturing the fact that an auxiliary is a kind of verb.",
        "Gosse BoumaFeature Structures and Nonmonotonicity In this approach, a mechanism that allows inheritance of information by default (i.e., a mechanism in which local information may exclude the inheritance of more general information) is of great importance.",
        "Without such a mechanism, a frame may contain only properties that hold without exception for all items that inherit from this frame.",
        "In practice, however, one often wants to define the properties that are typical for a given class in the form of a frame, without ruling out the possibility that exceptions might exist.",
        "In unification-based formalisms, templates can play the role of frames, but as unification is used to implement inheritance, nonmonotonic inheritance is impossible.",
        "Inflectional Morphology.",
        "In PATR-II the lexicon is a list of inflected word forms associated with feature structures.",
        "The only tools available for capturing lexical generalizations are templates (see above) and lexical rules.",
        "Lexical rules may transform the feature structure of a lexical entry.",
        "An example is the rule for agentless passive (Shieber 1986a, p. 62), which transforms the feature structure for transitive past participles into a feature structure for participles occurring in agentless passive constructions.",
        "Lexical rules can only change the feature structure of a lexical entry, not its word form, and thus, the scope of these rules is rather restricted.",
        "While the examples in Flickinger, Pollard, and Wasow (1985) and Evans and Gazdar (1989a,b) suggest that the latter restriction can be easily removed, it is not so obvious how a unification-based grammar formalism can cope with the combination of rules and exceptions typical for (inflectional) morphology.",
        "For instance, it is possible to formulate a rule that describes past tense formation in English, but it is not so easy to exclude the application of this rule to irregular verbs and to describe (nonredundantly) past tense formation of these irregular verbs.",
        "Evans and Gazdar (1989a,b) present the DATR-formalism, which, among other things, contains a nonmonotonic inference system that enables an elegant account of the blocking-phenomenon just described.",
        "The examples used throughout their presentation are all drawn from inflectional morphology and illustrate once more the importance of default reasoning in this area of linguistics.",
        "Gapping.",
        "In Kaplan (1987) it is observed that gapping constructions and other forms of nonconstituent conjunction can be analyzed in Lexical Functional Grammar (Bresnan and Kaplan, 1982) as the conjunction of two functional-structures (f-structures), one of which may be incomplete.",
        "The missing information in the incomplete f-structure can be filled in if it is merged with the complete f-structure, using an operation called priority union.",
        "Priority union of two f-structures A and B is defined as an operation that extends A with information from B that is not included (or filled in) in A.",
        "As not all information in B is present in the priority union of A and B, this operation introduces nonmonotonicity.",
        "The proposals for incorporating the kind of default reasoning that is required for each of the phenomena above are both rather diverse and idiosyncratic and, furthermore, suffer from a number of shortcomings.",
        "The Head Feature Convention and Feature Specification Defaults of GPSG, for instance, appear to be motivated with a very particular set of linguistic phenomena in mind and also are rather intimately connected to peculiarities of the GPSG-formalism.",
        "What",
        "Computational LinguisticsVolume 18, Number 2 is particularly striking is the fact that two different conceptions of default appear to play a role: a head feature is exempt from the HFC only if this would otherwise lead to an inconsistency, whereas a feature is exempt from having the value specified in some feature specification default (among others) if this feature covaries with another feature.",
        "Overwrite and add conservatively are also highly restricted operations.",
        "From the examples given in Shieber (1986a) it seems as if overwriting can only be used to add or substitute (nonmonotonically) one atomic feature value in a given (possibly complex) feature structure (which acts as default).",
        "Add conservatively, on the other hand, is only used to add one reentrancy (as far as possible) to a given feature structure (which acts as nondefault).",
        "An additional restriction is that add conservatively is well behaved only for the kind of feature structures used in GPSG (that is, feature structures in which limited use is made of covariation or reentrancy).",
        "Consider for instance the example in (1).1 Adding the constraint (X0 head) (X1 head) to (1) conservatively could result in either la or lb.",
        "Example 1 As add conservatively and overwriting are, in a sense, mirror images of each other, it is tempting to generalize the definitions of these operations and to think of them as operations on arbitrary feature structures, whose effect is equivalent to that of priority union.",
        "Thus, given two feature structures FSD (the default) and FSND (the nondefault), adding FSD to FSND conservatively would be equivalent to overwriting FSD with FSND, and to the priority union of FSND and FSD (i.e. FSND/FSD in the notation of Kaplan [1987]).",
        "However, in light of the example above, it should be clear that such a generalization is highly problematic.",
        "Other examples worth considering are 2 and 3.",
        "Again, if we try to combine the two feature structures along the lines of any one of the operations mentioned above, there are at least two possible results (note that in Example 3, we could either preserve the information that features f and g are reentrant, or preserve the information that f : a), and there is no telling which one is correct.",
        "Two conclusions can be drawn at this point.",
        "First of all, on the basis of the examples just given, it can be concluded that a nonmonotonic operation on feature structures that relies (only) on the fact that the result should be consistent must be very restricted indeed, as more generic versions will always run into the problem that there can be several mutually exclusive solutions to solving a given unification conflict.",
        "Second, claims that the operations add conservatively, overwriting, and priority union are equivalent are unwarranted, as no definitions of these operations are available that are sufficiently explicit to determine what their result would be in moderately complex examples such as 1-3.",
        "The approach exemplified by Flickinger (1987) and others is to use a general purpose knowledge representation formalism to represent linguistic information and model default inheritance.",
        "Feature structures are defined as classes of some sort, which may inherit from other, more generic, classes.",
        "The inheritance strategy used says that information in the generic class is to be included in the specific class as well, as long as the specific class does not contain local information that is in conflict with the information to be inherited.",
        "Such an inheritance strategy will run into problems, however, if reentrancies are generally allowed.",
        "For instance, think of the examples presented above as involving a generic class FSD from which a specific class FSND inherits.",
        "The inheritance procedure in, for instance, Flickinger (1987, p. 59ff) does not say anything about which one of the possible results will be chosen.",
        "The work of Evans and Gazdar (1989a,b), finally, is not easily incorporated in a unification-based formalism, as they use semantic nets instead of feature structures to represent linguistic information.",
        "That is, although the syntax of DATR is suggestively similar to that of, for instance, PATR-II, DATR descriptions do in fact denote graphs that differ rather substantially from the graphs used to represent feature structures (see Evans and Gazdar 1989b).",
        "The nonmonotonic reasoning facilities of DATR therefore are not directly applicable in a unification-based formalism either.",
        "We conclude that a formally explicit definition of a nonmonotonic operation on feature structures is still missing.",
        "In particular, the interaction of reentrancy and nonmonotonicity is a subtle issue, which has not been given the attention it deserves.",
        "That there is a need for nonmonotonic devices is obvious from the fact that several authors have found it necessary to introduce partial solutions for dealing with nonmonotonicity in a unification-based setting.",
        "The intuitions underlying these proposals appear to be compatible, if not identical, and thus it seems attractive to consider an operation that subsumes the effects of the proposals so far.",
        "Default Unification, as defined below, is an attempt to provide such an operation."
      ]
    },
    {
      "heading": "3. Feature Structures and Unification",
      "text": [
        "Feature structures are often depicted as matrices of attribute-value pairs where values are either atoms or feature structures themselves and, furthermore, values may be shared by different attributes in the feature structure.",
        "Feature structures can be defined using a description language, such as the one found in PATR-II (Shieber 1986a) or in Kasper and Rounds (1986; 1990).",
        "For instance, 4a is a description of 4b.",
        "Following the approach of Kasper and Rounds (1986; 1990), and others, we represent feature structures formally as finite (acyclic) automata (the definition below is taken from Dawar and Vijay-Shanker 1990): Definition A finite acyclic automaton A is a 7-tuple (Q,6, qo, F, A) where:",
        "1.",
        "Q is a nonempty finite set of states, 2.",
        "E is a countable set (the alphabet), 3.",
        "F is a countable set (the output alphabet), 4.",
        ".5 : Q x EQ is a finite partial function (the transition function), 5. qo E Q, 6.",
        "F C Q, 7.",
        "A : F F is a total function (the output function), 8. the directed graph (Q, E) is acyclic, where pEq iff for some 1 E E,5(p,1) = q, 9. for every q e Q, there exists a directed path from qo to q in (Q, E), and 10. for every q E F,S(q,1) is not defined for any 1.",
        "We will frequently write QA, EA, etc.",
        "for the set of states of automaton A, the alphabet of A, etc.",
        "The relationship between the matrix notation and the automaton concept should be obvious.",
        "The following automaton M is, for instance, equivalent to the matrix in 4b.",
        "Computational LinguisticsVolume 18, Number 2 4.",
        "Default Unification Default reasoning with feature structures requires the ability to modify feature structures nonmonotonically.",
        "Unification does not have this ability, as it can only replace a feature structure by more specific instances of that structure.",
        "Below, we define default unification as an operation that merges parts of one feature structure (the default argument) with another feature structure (the nondefault argument).",
        "We write AU!B for the default unification of the default feature structure A and the nondefault feature structure B.",
        "The operation has the following characteristics: 1.",
        "It has a declarative semantics and is procedurally neutral.",
        "That is, if A = A' and B = B', then (AU!B) = (A'U!B').",
        "2.",
        "It is monotonic only with respect to the nondefault argument.",
        "That is, B (ALA) is always true, but in general A E (ALJ!B) will not hold.",
        "3.",
        "It never fails.",
        "If A is fully incompatible with B, (AU!B) = B.",
        "4.",
        "It gives a unique result.",
        "5.",
        "Reentrancies in the nondefault argument may be replaced by a weaker set of reentrancies if necessary (this is the add conservatively operation of Shieber (1986b)).",
        "Intuitions about default unification appear to be more clear in those cases where feature structures do not contain any reentrancies.",
        "Therefore, we will first define default unification for this case, moving to the general case in Section 4.2.",
        "Section 4.3. deals with the incorporation of add conservatively."
      ]
    },
    {
      "heading": "4.1 Default Unification without Reentrancies",
      "text": [
        "Gosse BoumaFeature Structures and Nonmonotonicity An example of default unification is presented below (where nil is used to represent the empty feature structure):",
        "The definition of default unification above relies crucially on the fact that there is a unique maximal element A' unifiable with B.",
        "In Section 2, we argued that such an approach is only feasible for a limited domain.",
        "In particular, once reentrancies are introduced, A' is no longer guaranteed to be unique, and the definition above is therefore not easily generalized.",
        "Fortunately, it is also possible to define AU!B without requiring unifiability of some element A' with B explicitly.",
        "This definition, which will be extended below, defines Au!B in terms of the difference of the two arguments A and B.",
        "I.",
        "A - B E A, 2. if 64B(qo, p) is defined, then there is no prefix p' of p such that 613(q0, pi) E FB, 3. if SAB(qo, p) E FAB then 813(110, p) is undefined.",
        "It suffices to show that (A - C) E (B - C), or in other words: I. if A(6A_c(go,p)) a then A(/3-c(qo, P)) a, and 2. if sii_c(tio,p) is defined then 613c(q0,p) is defined.",
        "If these two conditions are met, there is a homomorphism from A - C to B - C as required by the definition of subsumption.",
        "(Remember that there are no reentrancies.)",
        "Case (1): If A(bA-c(qo, P)) = a, then (i) A(Ss(q0,p)) = a (since A-CEAL B) and from the definition of A - C it follows that (ii) there is no prefix p' of p such that 6c(130, p') E Fc nor is Sc(q0, p) defined.",
        "From (i) and (ii) it follows that 8B-c(qo,p) is defined and that A(h_c(q0,p)) = a.",
        "Case (2): If SA_c(qcr, p) is defined and 6A_c(q0,p) FA-C (otherwise this case reduces to case (1)), it follows that (i) 68(), p) is defined, and (ii) there is no prefix p' of p such that Sc(cio,p') E Fc.",
        "From (i) and (ii) it follows that SB_c(tio,p) is defined.",
        "Note, however, that addition of nondefault information does not necessarily lead to a more specific result.",
        "That is, the dual of Theorem 1. does not hold: Example 8 if B E C then (Au!B) C (AU!C) The reason is that addition of nondefault information may lead to a larger amount of default information being removed, and thus, the resulting feature-structures ALAB and ALAC can be incompatible.",
        "An example that falsifies 8 is presented below.",
        "Finally, for feature structures without reentrancies, the following distribution law holds:",
        "1.",
        "A - B E A, 2. if sAB(qo,p) is defined, then there is no prefix p' of p such that 613(q0,p') E FB or 6B(qo,11 = 6B(q0,P\")(P'19\"), 3. if 6A_B(q0, p) E FA-B then 68 (q0, p) is undefined, 4.",
        "(4) if 6A-B(qo,P) = 64B(qo, P')(P P') then bs(qo,p) and 613(q0, /9') are undefined.",
        "The definition of default unification remains as before:"
      ]
    },
    {
      "heading": "4.3 Add Conservatively",
      "text": [
        "Defining default unification as (A B) U B will fail to capture the idea of Shieber's (1986b) add conservatively, as the difference operation completely removes a default reentrancy if one of the paths leading to it is also defined in the nondefault argument.",
        "However, linguistic applications, such as an encoding of the Head Feature Convention, indicate that a more subtle approach should be taken.",
        "In particular, if a default structure contains the information that (p) (p'), whereas in the nondefault structure (p1) is defined for some feature 1, we want to treat only I as an exception to the general rule that (p) (p'), and preserve the information that (p1') (p'1') (for 1).",
        "We implement this idea using the following operation:"
      ]
    },
    {
      "heading": "Definition",
      "text": [
        "Let A and B be automata.",
        "The extension of A relative to B (Ext(A, B)) is the minimal (i.e. most general) element Ext (A , B) such that 1.",
        "A E Ext(A, B), 2. if SA(q0, p) = A(qo , p') and 813(q0, pql) is defined (for some pql E E*), then 6ExnA,B)(q0,pq1') 6Ext(A,B)(q0, p' (V') (wherever possible) for all 11 E E.",
        "The automaton A is extended, sometimes somewhat redundantly, with reentrant paths that are extensions of paths already reentrant in A. Ext(A,B) is nevertheless usually more informative than A itself, as the addition of a path pi blocks unification with feature structures in which p receives an atomic value.",
        "Note furthermore that path extensions are not always possible; that is, if 5A(go, p) E FA and SB(qo, pl) is defined, there is no extension of A in which pl is defined.",
        "(This explains the wherever possible).",
        "In order to get all relevant path-extensions, E will in general be the set of all features defined in the grammar, although in particular cases E can be restricted to a smaller set (the set of head-features, for instance).",
        "We are now ready to give a definition of default unification that incorporates the effects of add conservatively.",
        "To avoid confusion, we use the operator Llac!",
        "for this extended version of default unification.",
        "The example shows that default unification is slightly more restrictive than add conservatively, since the original reentrancy is removed even though A and B would have been unifiable.",
        "The reason is of course that this will guarantee uniqueness of the result of default unification, whereas this is not the case for add conservatively."
      ]
    },
    {
      "heading": "5. Linguistic Applications of Default Unification",
      "text": [
        "In this section, we sketch how default unification can be incorporated in a grammar formalism and argue briefly that this can be an alternative for some of the extensions mentioned in Section 2."
      ]
    },
    {
      "heading": "5.1 Nonmonotonic Template Inheritance",
      "text": [
        "In grammar formalisms such as PATR-II, feature structures are defined as sets of equations and templates.",
        "Each equation or template denotes a feature structure (i.e. the minimal feature structure that satisfies the equation or the equations that make up the template definition), and the denotation of a set of such elements is simply the unification of all their denotations.",
        "Incorporation of default unification requires that a distinction is made between default and nondefault information.",
        "In the notation used here, nondefault information is prefixed by a \"!\".",
        "The feature structure denoted by a definition that contains both default and nondefault information is arrived at by first unifying all default information and unifying all nondefault information.",
        "Next, the two feature structures are combined by means of default unification (Llac!).",
        "If templates are incorporated as default information, the feature structure denoted by the template is inherited nonmonontonically.",
        "(Monotonic inheritance is possible as well of course: this is achieved by prefixing a template with \"!\".)",
        "As an illustration, consider the following fragment, in which an attempt is made to encode some of the peculiarities of the English auxiliary system in a lexicalist grammar:",
        "!",
        "(subcat first subcat first nform) = (subcat rest first nform))",
        "a. it will annoy Kim that she lost b.",
        "*Sue will annoy Kim that she lost This dependency between elements of the subcat list is encoded in the final equation, which also suppresses (or overwrites) the default value for (nform).",
        "The denotation of AUX is thus:",
        "Consequently, the denotation of might is not affected by this change in definition either.",
        "The role of classes (or frames) in inheritance-based systems, however, as described in, for instance, Touretzky (1986), is rather different.",
        "To determine the denotation of a class might that inherits from a class AUX, we not only need to know the contents of AUX, but also the classes from which AUX inherits.",
        "The latter is important for resolving multiple-inheritance conflicts.",
        "If the class might inherits from both AUX and VERB, for instance, and AUX in its turn inherits from VERB as well, information inherited from AUX must take precedence over information from VERB, as the former is more specific than the latter.",
        "In our nonmonotonic inheritance mechanism for templates, such reasoning is impossible.",
        "Adding the template VERB as default information to the definition of the template (or lexical entry) might would lead to a unification failure of the default information, and thus the definition as a whole would be considered as illega1.6 This is as it should be, we believe, given the fact that the inheritance hierarchy as such should not play a role in determining the meaning of templates.",
        "The denotation of the template AUX is the feature structure in 16 (i.e., whether it is defined as in 14 or as in 18 is irrelevant), and from that it is impossible to conclude that AUX inherits from VERB, and thus the kind of reasoning used to justify the resolution of feature conflicts used in Touretzky (1986) is not applicable in our case."
      ]
    },
    {
      "heading": "5.2 Lexical Defaults",
      "text": [
        "The definition of auxiliaries above is still unsatisfactory in that it predicts that auxiliaries subcategorize for verbal complements that are specified as (aux) .",
        "Clearly, this requirement is too strong (although it is correct for the auxiliary do).",
        "One way to solve this problem is to redefine the AUX-template as:",
        "!(inv)).",
        "This is equivalent to the definition of might given in 17, albeit more complex and possibly misleading.",
        "Computational LinguisticsVolume 18, Number 2 This solution seems inelegant, however, as it reconstructs part of the VP-template in order to express the correct subcategorization requirements.",
        "Thus, the obvious generalization that an auxiliary subcategorizes for a VP is missed by this redefinition.",
        "The source of this inelegance is the fact that VP inherits from VERB, and that VERB contains default information about properties typical for verbs.",
        "However, while these properties hold for the vast majority of verbs, it is not the case that if an element subcategorizes for a verbal complement, the default properties need to hold for the complement as well.",
        "What is needed here is a distinction between properties that hold by default for all members of a class and default properties that can be assumed to hold if a lexical item subcategorizes for members of this class.",
        "While the latter can be expressed safely by means of templates, the former are more adequately expressed in the form of lexical defaults.",
        "The extension of unification-based formalisms with lexical defaults can be implemented using default unification.",
        "The effect of lexical defaults is comparable to that of lexical Feature Specification Defaults in GPSG.",
        "A lexical default is a statement of the form Name: Ant Cons, where Ant and Cons are feature structure descriptions.",
        "The interpretation of lexical defaults is that the feature structure of each lexical entry that is subsumed by the antecedent of a lexical default is extended, by means of default unification, with the contents of the consequent.",
        "Lexical entries are thus compiled in two stages: first, the denotation of the feature structure description is computed and next, the lexical defaults are applied to this feature structure.",
        "Consider for example the following lexical defaults:",
        "The final equation in 24 both implements the HFC and defines X2 as the head daughter.",
        "An exception to the reentrancy is the fact that (X2 head sub]) = , which is therefore represented as nondefault information.",
        "In this approach, the HFC is part of the rules itself and thus, the effect of Shieber's (1986b) special-purpose compilations step, which adds the HFC conservatively, is achieved directly.",
        "implementing the effect of FSD2 above as a feature coocurrence restriction.",
        "8 Note that, as in GPSG, the feature INV plays a double role by indicating both an item's potential to occur in inverted structures as well as indicating whether a given structure is inverted or not."
      ]
    },
    {
      "heading": "6. Conclusions",
      "text": [
        "We have shown in the preceding sections that it is possible to incorporate nonmonotonicity in a unification-based formalism, while at the same time preserving the idea that linguistic knowledge is represented in the form of feature structures.",
        "In spite of their great flexibility, unification-based formalisms are in general not very well equipped to deal with linguistic rules or generalizations that have a default character and for which exceptions exist.",
        "In Sections 4 and 5 we hope to have demonstrated that a nonmonotonic operation on feature structures combined with straightforward extensions of the description languages used in unification-based formalisms enables a satisfactory account of the phenomena mentioned in the introduction.",
        "The applications illustrate that default unification can be used to give linguistically appealing implementations of certain natural language phenomena, not that it would be impossible to account for these facts using unification only.",
        "Thus, default unification serves to extend the expressive power of unification-based formalisms, but leaves the representation method of unification-based formalisms, in which linguistic objects are represented as feature structures, unchanged.",
        "Comparing default unification to earlier proposals, we believe that an advantage of our approach is that it is general, in the sense that one operation is used to achieve the effects of overwriting, add conservatively, nonmonotonic template inheritance, and priority union.",
        "Also, whereas previous proposals do not seem to be well behaved for feature structures containing reentrancies, default unification is defined for feature structures of arbitrary complexity.",
        "DOrre et al.",
        "(1990) suggest that the use of nonmonotonic devices in unification based formalisms will, for the time being, be limited to off-line extensions of these formalisms; that is, extensions whose effect can be computed at compile time and result in ordinary feature structures.",
        "They also note that while there may be linguistic arguments in favor of more dynamic notions of default reasoning, from a computational point of view the off-line approach is clearly preferred.",
        "Default unification, as used in the previous section, is an example of an off-line extension, as the effects of nonmonotonic template inheritance, lexical defaults, and the meaning of rule definitions in which default and non-default information is combined, can be computed at compile time.",
        "Again, this emphasizes the point that incorporation of default unification in principle only extends the expressive power of unification-based formalisms."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "A syntactic approach to default unification is presented in Bouma (1990).",
        "The reactions on that paper made it clear to me that default unification should be defined not only for feature structure descriptions, but also for feature structures themselves.",
        "For helpful questions, suggestions, and comments on the material presented here, I would like to thank Bob Carpenter, John Nerbonne, audiences in Tilburg, Groningen, Tiibingen, and DUsseldorf, and three anonymous CL reviewers."
      ]
    }
  ]
}
