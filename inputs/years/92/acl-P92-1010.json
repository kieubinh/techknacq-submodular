{
  "info": {
    "authors": [
      "James Rogers",
      "K. Vijay-Shanker"
    ],
    "book": "Annual Meeting of the Association for Computational Linguistics",
    "id": "acl-P92-1010",
    "title": "Reasoning With Descriptions of Trees",
    "url": "https://aclweb.org/anthology/P92-1010",
    "year": 1992
  },
  "references": [
    "acl-C92-1034",
    "acl-J92-4004",
    "acl-P83-1020"
  ],
  "sections": [
    {
      "heading": "ABSTRACT",
      "text": [
        "In this paper we introduce a logic for describing trees which allows us to reason about both the parent and domination relationships.",
        "The use of domination has found a number of applications, such as in deterministic parsers based on Description theory (Marcus, Hindle & Fleck, 1983), in a compact organization of the basic structures of Tree-Adjoining Grammars (Vijay-Shanker & Schabes, 1992), and in a new characterization of the adjoining operation that allows a clean integration of TAGs into the unification-based framework (Vijay-Shanker, 1992) Our logic serves to formalize the reasoning on which these applications are based."
      ]
    },
    {
      "heading": "1 Motivation",
      "text": [
        "Marcus, Hindle, and Fleck (1983) have introduced Description Theory (D-theory) which considers the structure of trees in terms of the domination relation rather than the parent relation.",
        "This forms the basis of a class of deterministic parsers which build partial descriptions of trees rather than the trees themselves.",
        "As noted in (Marcus, Hindle & Fleck, 1983; Marcus, 1987), this approach is capable of maintaining Marcus' deterministic hypothesis (Marcus, 1980) in a number of cases where the original deterministic parsers fail.",
        "A motivating example is the sentence: I drove my aunt from Peoria's car.",
        "The difficulty is that a deterministic parser must attach the NP \"my aunt\" to the tree it is constructing before evaluating the PP.",
        "If this can only be done in terms of the parent relation, the NP will be attached to the VP as its object.",
        "It is not until the genitive marker on \"Peoria's\" is detected that the correct attachment is clear.",
        "The D-theory parser avoids the trap by making only the judgment that the VP dominates the NP by a path of length at least one.",
        "Subsequent refinement can either add intervening components or not.",
        "Thus in this case, when \"my aunt\" ends up as part of the determiner of the object rather than the object itself, it is not inconsistent with its original placement.",
        "It is still dominated by the VP, just not immediately.",
        "When the analysis is complete, a tree, the standard referent, can be extracted from the description by taking immediate domination as the parent relation.",
        "*This work is supported by NSF grant IRI-9016591 In other examples given in (Marcus, Hindle & Fleck, 1983) the left-of (linear precedence) relation is partially specified during parsing, with individuals related by \"left-of or equals\" or \"left-of or dominates\".",
        "The important point is that once a relationship is asserted, it is never subsequently rescinded.",
        "The D-theory parser builds structures which are always a partial description of its final product.",
        "These structures are made more specific, as parsing proceeds, by adding additional relationships.",
        "Our understanding of the difficulty ordinary deterministic parsers have with these constructions is that they are required to build a structure covering an initial segment of the input at a time when there are multiple distinct trees that are consistent with that segment.",
        "The D-theory parsers succeed by building structures that contain only those relationships that are common to all the consistent trees.",
        "Thus the choice between alternatives for the relationships on which the trees differ is deferred until they are distinguished by the input, possibly after semantic analysis.",
        "A similar situation occurs when Tree-Adjoining Grammars are integrated into the unification-based framework.",
        "In TAGs, syntactic structures are built up from sets of elementary trees by the adjunction operation, where one tree is inserted into another tree in place of one of its nodes.",
        "Here the difficulty is that adjunction is non-monotonic in the sense that there are relationships that hold in the trees being combined that do not hold in the resulting tree.",
        "In (Vijay-Shanker, 1992), building on some of the ideas from D-theory, a version of TAG is introduced which resolves this by manipulating partial descriptions of trees, termed quasi-trees.",
        "Thus an elementary structure for a transitive verb might be the quasi-tree a' rather than the tree a (Figure 1).",
        "In a' the separation represented by the dotted line between nodes referred to by vpi and vp2 denotes a path of length greater than or equal to zero.",
        "Thus a' captures just those relationships which are true in a and in all trees derived from a by adjunction at VP.",
        "In this setting trees are extracted from quasi-trees by taking what is termed a circumscrip-tive reading, where each pair of nodes in which one dominates the other by a path that is possibly zero is identified.",
        "This mechanism can be interpreted in a manner similar to our interpretation of the use of partial",
        "descriptions in D-theory parsers.",
        "We view a tree in which adjunction is permitted as the set of all trees which can be derived from it by adjunction.",
        "That set is represented by the quasi-tree as the set of all relationships that are common to all of its members.",
        "The connection between partial descriptions of trees and the sets of trees they describe is made explicit in (Vijay-Shanker Schabes, 1992).",
        "Here quasi-trees are used in developing a compact representation of a â€¢Lexicalized TAG grammar.",
        "The lexicon is organized hierarchically.",
        "Each class of the hierarchy is associated with that set of relationships between individuals which are common to all trees associated with the lexical items in the class but not (necessarily) common to all trees associated with items in any superclass.",
        "Thus the set of trees associated with items in a class is characterized by the conjunction of the relationships associated with the class and those inherited from its super-classes.",
        "In the case of transitive verbs, figure 2, the relationships in ai can be inherited from the class of all verbs, while the relationships in a2 are associated only with the class of transitive verbs and its subclasses.",
        "The structure a' of figure 1 can be derived by combining a2 with al along with the assertion that v2 and v1 name the same object.",
        "In any tree described by these relationships either the node named vpi must dominate vp2 or vice versa.",
        "Now in al, the relationship \"vpi dominates v1\" does not itself preclude vpi and v1 from naming the same object.",
        "We can infer, however, from the fact that they are labeled incompatibly that this is not the case.",
        "Thus the path between them is at least one.",
        "From a2 we have that the path between vp2 and v2 is precisely one.",
        "Thus in all cases vpi must dominate vp2 by a path of length greater than or equal to zero.",
        "Hence the dashed line in a'.",
        "The common element in these three applications is the need to manipulate structures that partially describe trees.",
        "In each case, we can understand this as a need to manipulate sets of trees.",
        "The structures, which we can take to be quasi-trees in each case, represent these sets of trees by capturing the set of relationships that are common to all trees in the set.",
        "Thus we are interested in quasi-trees not just as partial descriptions of individual trees, but as a mechanism for manipulating sets of trees.",
        "Reasoning, as in the LTAG example, about the structures described by combinations of quasi-trees requires some mechanism for manipulating the quasi-trees formally.",
        "Such a mechanism requires, in turn, a definition of quasi-trees as formal structures.",
        "While quasi-trees were introduced in (Vijay-Shanker, 1992), they have not been given a precise definition.",
        "The focus of the work described here is a formal definition of quasi-trees and the development of a mechanism for manipulating them.",
        "In the next section we develop an intuitive understanding of the structure of quasi-trees based on the applications we have discussed.",
        "Following that, we define the syntax of a language capable of expressing descriptions of trees as formulae and introduce quasi-trees as formal structures that define the semantics of that language.",
        "In section 4 we establish the correspondence between these formal models and our intuitive idea of quasi-trees.",
        "We then turn to a proof system, based on semantic tableau, which serves not only as a mechanism for reasoning about tree structures and checking the consistency of their descriptions, but also serves to produce models of a given consistent description.",
        "Finally, in section 7 we consider mechanisms for deriving a representative tree from a quasi-tree.",
        "We develop one such mechanism, for which we show that the tree produced is the circumscriptive reading in the context of TAG, and the standard referent in the context of D-theory.",
        "Due to space limitations we can only sketch many of our proofs and have omitted some details.",
        "The omitted material can be found in (Rogers & Vijay-Shanker, 1992)."
      ]
    },
    {
      "heading": "2 Quasi-Trees",
      "text": [
        "In this section, we use the term relationship to informally refer to any positive relationship between individuals which can occur in a tree, \"a is the parent of 6\" for example.",
        "We will say that a tree satisfies a relationship if that relationship is true of the individuals it names in that tree.",
        "It's clear, from our discussion of their applications, that quasi-trees have a dual nature â€“ as a set of trees and as a set of relationships.",
        "In formalizing them, our fundamental idea is to identify those natures.",
        "We will say that a tree is (partially) described by a set of relationships if every relationship in the set is true in the tree.",
        "A set of trees is then described by a set of relationships if each tree in the set is described by the set of relationships.",
        "On the other hand, a set of trees is characterized by a set of relationships if it is described by that set and if every relationship that is common to all of the trees is included in the set of relationships.",
        "This is the identity we seek; the quasi-tree viewed as a set of relationships characterizes the same quasi-tree when viewed as a set of trees.",
        "Clearly we cannot easily characterize arbitrary sets of trees.",
        "As an example, our sets of trees will be upward-closed in the sense that, it will contain every tree that extends some tree in the set, ie: that contains one of the trees as an initial sub-tree.",
        "Similarly quasi-trees viewed as sets of relationships are not arbitrary either.",
        "Since the sets they characterize consist of trees, some of the structural properties of trees will be reflected in the quasi-trees.",
        "For instance, if the quasi-tree contains both the relationships \"a dominates b\" and \"b dominates c\" then every tree it describes will satisfy \"a dominates c\" and therefore it must contain that relationship as well.",
        "Thus many inferences that can be made on the basis of the structure of trees will carry over to quasi-trees.",
        "On the other hand, we cannot make all of these inferences and maintain any distinction between quasi-trees and trees.",
        "Further, for some inferences we will have the choice of making the inference or not.",
        "The choices we make in defining the structure of the quasi-trees as a set of relationships will determine the structure of the sets of trees we can characterize with a single quasi-tree.",
        "Thus these choices will be driven by how much expressive power the application needs in describing these sets.",
        "Our guiding principle is to make the quasi-trees as treelike as possible consistent with the needs of our applications.",
        "We discuss these considerations more fully in (Rogers & Vijay-Shanker, 1992).",
        "One inference we will not make is as follows: from \"a dominates b\" infer either \"a equals b\" or, for some a' and b', \"a dominates a', a' is the parent of b', and b' dominates b\".",
        "In structures that enforce this condition path lengths cannot be left partially specified.",
        "As a result, the set of quasi-trees required to characterize a' viewed as a set of trees, for instance, would be infinite.",
        "Similarly, we will not make the inference: for all a, b, either \"a is left-of b\", \"b is left-of a\", \"a dominates b\" or \"b dominates a\".",
        "In these structures the left-of relation is no longer partial, ie: for all pairs a, b either every tree described by the quasi-tree satisfies \"a is left-of b\" or none of them do.",
        "This is not acceptable for D-theory, where both the analyses of \"pseudo-passives\" and coordinate structures require single structures describing sets including both trees in which some a is left-of b and others in which the same a is either equal to or properly dominates that same b (Marcus, Hindle & Fleck, 1983).",
        "Finally, we consider the issue of negation.",
        "If a tree does not satisfy some relationship then it satisfies the negation of that relationship, and vice versa.",
        "For quasi-trees the situation is more subtle.",
        "Viewing the quasi-tree as a set of trees, if every tree in that set fails to satisfy some relationship, then they all satisfy the negation of that relationship.",
        "Hence the quasi-tree must satisfy the negated relationship as well.",
        "On the other hand, viewing the quasi-tree as a set of relationships, if a particular relationship is not included in the quasi-tree it does not imply that none of the trees it describes satisfies that relationship, only that some of those trees do not.",
        "Thus it may be the case that a quasi-tree neither satisfies a relationship nor satisfies its negation.",
        "Since trees are completed objects, when a tree satisfies the negation of a relationship it will always be the case that the tree satisfies some (positive) relationship that is incompatible with the first.",
        "For example, in a tree \"a does not dominate b\" if \"a is left-of b\", \"b is left-of a\", or \"b properly dominates a\".",
        "Thus there are inferences that can be drawn from negated relationships in trees that may be incorporated into the structure of quasi-trees.",
        "In making these inferences, we dispense with the need to include negative relationships explicitly in the quasi-trees.",
        "They can be defined in terms of the",
        "positive relationships.",
        "The price we pay is that to characterize the set of all trees in which \"a does not dominate b\", for instance, we will need three quasi-trees, one characterizing each of the sets in which \"a is left-of b\", \"b is left-of a\", and \"b properly dominates a\"."
      ]
    },
    {
      "heading": "3 Language",
      "text": [
        "Our language is built up from the symbols:",
        " â€“ two place predicates, parent, proper domination, domination, and left-of respectively, â€“ equality predicate, A, V, â€“ usual logical connectives (, ), [,] â€“ usual grouping symbols Our atomic formulae are t a u, t a+ u, t a* u, t u, and t u, where t, u E K are terms.",
        "Literals are atomic formulae or their negations.",
        "Well-formed-formulae are generated from atoms and the logical connectives in the usual fashion.",
        "We use t, u, v to denote terms and 0, to denote wffs.",
        "R denotes any of the five predicates."
      ]
    },
    {
      "heading": "3.1 Models",
      "text": [
        "Quasi-trees as formal structures are in a sense a reduced form of the quasi-trees viewed as sets of relationships.",
        "They incorporate a canonical subset of those relationships from which the remaining relationships can be deduced.",
        "(specifying the node referred to by each name), P, A, D, and ,C are binary relations over (assigned to a, a+, a*, and respectively).",
        "Let R. denote l(r).",
        "'We use names rather than constants to clarify the link to description theory.",
        "At least one normal, consistent quasi-tree (that consisting of only a root node) satisfies all of these conditions simultaneously.",
        "Thus they are consistent.",
        "It is not hard to exhibit a model for each condition in which that condition fails while all of the others hold.",
        "Thus the conditions are independent of each other.",
        "Trees are distinguished from (ordinary) quasi-trees by the fact that V is the reflexive, transitive closure of P, and the fact that the relations P,D,A,C are maximal in the sense that they cannot be consistently extended.",
        "Note that TC1 implies that Am = ('Pm)+ as well.",
        "It is easy to verify that a quasi-tree meets these conditions if (Um, Pm) is the graph of a tree as commonly defined (Aho, Hoperoft & Ullman, 1974)."
      ]
    },
    {
      "heading": "3.2 Satisfaction",
      "text": [
        "The semantics of the language in terms of the models is defined by the satisfaction relation between models and formulae.",
        "In addition we require that IM(k) be defined for all k occurring in the formula.",
        "It is easy to verify that for all quasi-trees M"
      ]
    },
    {
      "heading": "4 Characterization",
      "text": [
        "We now show that this formalization is complete in the sense that a consistent quasi-tree as defined characterizes the set of trees it describes.",
        "Recall that the quasi-tree describes the set of all trees which satisfy every literal formula which is satisfied by the quasi-tree.",
        "It characterizes that set if every literal formula which is satisfied by every tree in the set is also satisfied by the quasi-tree.",
        "The property of satisfying every formula which is satisfied by the quasi-tree is captured formally by the notion of subsumption, which we define initially as a relationship between quasi-trees.",
        "We now claim that any quasi-tree Q is subsumed by a quasi-tree M if it is described by M. Lemma 1 If M and Q are normal, consistent quasi-trees and 1m is surjective, then M C Q iff for all formulae The proof in the forward direction is an easy induction on the structure of 0 and does not depend either on normality or surjectiveness of 1m.",
        "The opposite direction follows from the fact that, since 1m is surjective, there is a model M' in which is the set of equivalence classes wrt in the domain 0f 1M, such that M M' E Q.",
        "The next lemma allows us, in many cases, to assume that a given quasi-tree is normal.",
        "The lemma is witnessed by the quotient of M with respect to em, where em = {(x, I(x, y), (y, x) E Dm}.",
        "We can now state the central claim of this section, that every consistent quasi-tree characterizes the set of trees which it subsumes.",
        "The proof follows from two lemmas.",
        "The first establishes that the set of quasi-trees subsumed by some quasi-tree M is in fact characterized by it.",
        "The second extends the result to trees.",
        "Their proofs are in (Rogers Sz Vijay-Shanker, 1992).",
        "(=- by consistency, by completeness of trees) .#> --i(3Q, consistent q-t)[M C Q and Q -0] (=- by lemma 4, since T is a quasi-tree)",
        "(=- by lemma 3, by lemma 1)"
      ]
    },
    {
      "heading": "5 Semantic Tableau",
      "text": [
        "Semantic tableau as introduced by Beth (Beth, 1959; Fitting, 1990) are used to prove validity by means of refutation.",
        "We are interested in satisfiability rather than validity.",
        "Given E we wish to build a model of E if one exists.",
        "Thus we are interested in the cases where the tableau succeeds in constructing a model.",
        "The distinction between these uses of semantic tableau is important, since our mechanism is not suitable for refutational proofs.",
        "In particular, it cannot express \"some model fails to satisfy cb\" except as \"some model satisfies -,0\".",
        "Since our logic is non-classical the first is a strictly weaker condition than the second.",
        "Definition 6 Semantic Tableau:",
        "A tableau for E, where E is a set of formulae, is a tableau in which C1 {E}.",
        "A branch is closed if (30)[{O, -,cb} C S].",
        "A configuration is closed if each of its branches is closed, and a tableau is closed iff it contains some closed configuration.",
        "A branch, configuration, or tableau that is not closed is open."
      ]
    },
    {
      "heading": "5.1 Inference Rules",
      "text": [
        "Our inference rules fall into three groups.",
        "The first two, figures 3 and 4, are standard rules for propositional semantic tableau extended with equality (Fitting, 1990).",
        "The third group, figure 5, embody the properties of quasi-trees.",
        "The la rule requires the introduction of a new name into the tableau.",
        "To simplify this, tableau are carried out in a language augmented with a countably infinite set of new names from which these are drawn in a systematic way.",
        "The following two lemmas establish the correctness of the inference rules in the sense that no rule increases the set of models of any branch nor eliminates all of the models of a satisfiable branch.",
        "This follows nearly directly from the fact that all of our rules are non-strict, ie: the branch to which an inference rule is applied is a subset of every branch introduced by its application.",
        "We sketch the proof.",
        "Suppose M k S. For all but it is straightforward to verify M also satisfies at least one of the For -la, suppose M fails to satisfy either u a* t or it a* u.",
        "Then we claim some quasi-tree satisfies the third branch of the conclusion.",
        "This must map the new constant k to the witness for the rule.",
        "M has no such requirement, but since k does not occur in S, the value of 1frl(k) does not affect satisfaction of S. Thus we get an appropriate M' by modifying 1frf' to map k correctly.",
        "Corollary 1 If there is a closed tableau for 0 then no consistent quasi-tree satisfies 0.",
        "No consistent quasi-tree satisfies a closed set of formulae.",
        "The result then follows by induction on the length of the tableau."
      ]
    },
    {
      "heading": "6 Constructing Models",
      "text": [
        "We now turn to the conditions for a branch to be sufficiently complete to fully specify a quasi-tree.",
        "In essence these just require that all formulae have been expanded to atoms, that all substitutions have been made and that the conditions in the definition of quasi-trees are met."
      ]
    },
    {
      "heading": "6.1 Saturated Branches",
      "text": [
        "The next lemma (essentially Hintikka's lemma) establishes the correspondence between saturated branches and quasi-trees.",
        "Again, we sketch the proof.",
        "Consider the set T(S) of terms occurring in a downward saturated set S. H6 and H7 assure that is reflexive and substitutive.",
        "Since t u, u vESt v E S, and u u, u vESv u E S by substitution of v for (the first occurrence of) u, it is transitive and symmetric as well.",
        "Thus partitions T(S) into equivalence classes.",
        "Define the model H as follows:",
        "Since each of the conditions CI.",
        "through C12 corresponds directly to one of the saturation conditions, it is easy to verify that H satisfies Cq.",
        "It is equally easy to confirm that H is both consistent and normal.",
        "We claim that (1)ES-Hk 0.",
        "As is usual for versions of Hintikka's lemma, this is established by an induction on the structure of cb.",
        "Space prevents us from giving the details here.",
        "For the second part of the lemma, if the set of formulae is finite, then the set of terms (and hence the set of equivalence classes) is finite."
      ]
    },
    {
      "heading": "6.2 Saturated Tableau",
      "text": [
        "Since all of our inference rules are non-strict, if a rule once applies to a branch it will always apply to a branch.",
        "Without some restriction on the application of rules, tableau for satisfiable sets of formulae will never terminate.",
        "What is required is a control strategy that guarantees that no rule applies to any tableau more than finitely often, but that will always find a rule to apply to any open branch that is not downward saturated.",
        "This follows directly from the fact that for each of Hi.",
        "through H26, if the implication is false there is a corresponding inference rule which applies.",
        "Proposition 2 (Termination) All tableau for finite sets of formulae can be extended to tableau in which no rule applies to the final configuration.",
        "This follows from the fact that the size of any tableau for finite sets of formulae has a finite upper bound.",
        "The proof is in (Rogers & Vijay-Shanker, 1992).",
        "Proposition 3 (Soundness and Completeness) A saturated tableau for a finite set of formulae E exists if there is a consistent quasi-tree which satisfies E. Proof: The forward implication (soundness) follows from lemma 7.",
        "Completeness follows from the fact that if E is satisfiable there is no closed tableau for E (corollary 1), and thus, by proposition 2 and lemma 8, there must be a saturated tableau for E. 0"
      ]
    },
    {
      "heading": "7 Extracting Trees from Quasi-trees",
      "text": [
        "Having derived some quasi-tree satisfying a set of relationships, we would like to produce a \"minimal\" representative of the trees it characterizes.",
        "In section 3.1 we define the conditions under which a quasi-tree is a tree.",
        "Working from those conditions we can determine in which ways a quasi-tree M may fail to be a tree, namely:",
        "â€¢ (Pm)* is a proper subset of Dm, â€¢ Gm and/or Dm may be partial, ie: for some t,u, (t u v u) or (t",
        "u v a* u).",
        "The case of partial Gm is problematic in that, while it is possible to choose a unique representative, its choice must be arbitrary.",
        "For our applications this is not significant since currently in TAGs left-of is fully specified and in parsing it is always resolved by the input.",
        "Thus we make the assumption that in every quasi-tree M from which we need to extract a tree, left-of will be complete.",
        "That is, for all terms t, u: M t u V 4 u.",
        "Thus M f=t .f ti V It a* u M I=u1* I.",
        "Suppose u a* t and M (t .0* v u), and that /m(u) = x and /m(t) = y.",
        "In D-theory, this case never arises, since proper domination, rather than domination, is primitive.",
        "It is clear that the TAG applications require that x and y be identified, ie: (y, x) should be added to Dm.",
        "Thus we choose to complete Dm by extending it.",
        "Under the assumption that .0 is complete this simply means: if M a* u, Dm should be extended such that t f u.",
        "That M can be extended in this way consistently follows from lemma 3.",
        "That the result of completing Dm in this way is unique follows from the fact that, under these conditions, extending Dm does not extend either Am or Em.",
        "The details can be found in (Rogers & Vijay-Shanker, 1992).",
        "In the resulting quasi-tree domination has been resolved into equality or proper domination.",
        "To arrive at a tree we need only to expand Pm such that (Pm)* = Dm.",
        "In the proof of lemma 4 we show that this will be the case in any quasi-tree T closed under:",
        "The second of these conditions is our mechanism for completing Dm.",
        "The first amounts to taking immediate domination as the parent relation â€“ precisely the mechanism for finding the standard referent.",
        "Thus the tree we extract is both the circumscriptive reading of (Vijay-Shanker, 1992) and the standard referent of (Marcus, Hindle & Fleck, 1983)."
      ]
    }
  ]
}
