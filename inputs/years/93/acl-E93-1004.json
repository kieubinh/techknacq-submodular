{
  "info": {
    "authors": [
      "Patrick Blackburn",
      "Claire Gardent",
      "Wilfried Meyer-Viol"
    ],
    "book": "Conference of the European Association for Computational Linguistics",
    "id": "acl-E93-1004",
    "title": "Talking About Trees",
    "url": "https://aclweb.org/anthology/E93-1004",
    "year": 1993
  },
  "references": [
    "acl-J91-2001",
    "acl-P86-1038"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In this paper we introduce a modal language LT for imposing constraints on trees, and an extension LT(LF) for imposing constraints on trees decorated with feature structures.",
        "The motivation for introducing these languages is to provide tools for formalising grammatical frameworks perspicuously, and the paper illustrates this by showing how the leading ideas of GPSG can be captured in LT(LF).",
        "In addition, the role of modal languages (and in particular, what we have called layered modal languages) as constraint formalisms for linguistic theorising is discussed in some detail."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "In this paper we introduce a modal language LT for talking about trees, and an extension LT(LF) for talking about trees decorated with feature structures.",
        "From a logical point of view this is a natural thing to do.",
        "After all, the trees and feature structures used in linguistics are simple graphical objects.",
        "To put it another way, they are merely rather simple Kripke models, and modal languages are probably the simplest languages in which nontrivial constraints can be imposed on such structures.",
        "Moreover the approach is also linguistically natural: many of the things linguists need to say about trees (and feature structures) give rise to modal operators rather naturally, and indeed our choice of modalities has been guided by linguistic practice, not logical convenience.",
        "There are several reasons why we think this path is an interesting one to explore, however two are of particular relevance to the present paper.' First, we believe that it can lead to relatively simple and natural formalisations of various grammatical frameworks.",
        "In our view, neither simplicity nor naturalness are luxuries: unless a formalisation possesses a high degree of clarity, it is unrealistic to hope that it can offer either precise analyses of particular systems or informative comparisons of different frameworks.",
        "We believe our approach has the requisite clarity (largely because it arose by abstracting from linguistic practice in a rather direct manner) and much of this paper is an attempt to substantiate this.",
        "Second, LT can be combined in a very natural way with feature logics to yield simple systems which deal with configurational concepts, complex categories and their interaction.",
        "The key idea is to perform this combination of logics in a highly constrained way which we have called layering.",
        "Layering is a relatively new idea in modal logic (in fact the only paper devoted exclusively to this topic seems to be [Finger and Gabbay 1992j), and it seems to provide the right level of expressive power needed to model many contemporary grammar formalisms.",
        "The paper is structured as follows.",
        "In section 2 we define the syntax and semantics of LT, our modal language for imposing constraints on tree structure.",
        "1Lurking in the background are two additional, rather more technical, reasons for our interest.",
        "First, we believe that being explicit about tree structure in our logical object languages (instead of, say, coding tree structure up as just another complex feature) may make it easier to find computationally tractable logics for linguistic processing.",
        "Second, we believe that logical methods may interact fruitfully with the mathematical literature on tree admissibility (see [Peters and Ritchie 1969], [Rounds 1970] and [Joshi and Levy 1977]).",
        "However we won't explore these ideas here.",
        "In section 3 we put LT to work, showing how it can be used to characterise the parse trees of context free phrase structure grammars.",
        "In section 4 we consider how the structured categories prevalent in modern linguistic formalisms are dealt with.",
        "Our solution is to introduce a simple feature logic LF for talking about complex categories, and then to layer LT across LF.",
        "The resulting system LT(LF) is capable of formulating constraints involving the interaction of configurational and categorial information.",
        "Section 5 illustrates how one might use this expressive power by formulating some of the leading ideas of GPSG in LT(LF).",
        "We conclude the paper with some general remarks on the use of modal languages as constraint formalisms in linguistics."
      ]
    },
    {
      "heading": "2 The language LT",
      "text": [
        "The primitive alphabet of the language LT (Prop) contains the following items: two constant symbols .s and t, some truth functionally adequate collection of Boolean operators,2 two unary modalities 1 and a binary modality a modality of arbitrary positive arity •, the left bracket ( and the right bracket ).",
        "In addition we have a set of propositional symbols Prop.",
        "We think of the symbols in Prop as given to us by the linguistic theory under consideration; different applications may well result in different choices of Prop.",
        "To give a very simple example, Prop might be {S, NP, VP, N, V, DET, CONJ }.",
        "The wffs of LT (Prop) are defined as follows.",
        "First, all elements of Prop are LT (Prop) wffs, and so are the constant symbols s and t. Second, if 0, ik and Chi • • • )(kn (n 1) are LT (Prop) wffs, then so are -'4), (0 A 0), 1'0, 1 0, (0 0) and •(0i, , On).",
        "Third, nothing else is an LT (Prop) wff.",
        "In what follows, we will assume that some choice of Prop has been fixed and drop all subsequent mention of it.",
        "That is, we'll usually speak simply of the language LT.",
        "The semantics of LT is given in terms of finite ordered trees.",
        "We regard finite trees T as quadruples of the form (F, >, 0, root), where F is a finite set of nodes, > is the 'Mother of relation between nodes > v' means `u is the mother of v'), 0 (C r) is the set of terminal nodes and root is the root node of the tree.",
        "As for the precedence ordering, we define: Definition 2.1 (Finite ordered trees) A finite ordered tree is a pair 0 = (T, A) where T is a tree (r, >, 9, root ) and A is a function assigning to each node u in r a finite sequence of nodes of F. For all nodes u E 1\", A(u) must satisfy two constraints.",
        "First, A(u) must contain no repetitions.",
        "Second, A(u) = (u1,...,uk) iff u > ui,...,u > uk 'In what follows we treat and A as primitive, and the other Boolean symbols such as V (disjunction), (material implication), 4\"• (material equivalence), T (constant true) and 1 (constant false) as abbreviations defined in the familiar manner.",
        "and there is no node u' in r such that 16 > u' and u' does not occur in the sequence A(u).",
        "❑ (In short, the repetition-free sequence assigned to a node u by A consists of all and only the nodes immediately dominated by u; the sequence gives us a precedence ordering on these nodes.",
        "Note that it follows from this definition that A(u) is the null-sequence iff u is a terminal node.)",
        "Next, we define a model M to be a pair (0, V) where 0 is a finite ordered tree (T, A) and V is a function from Prop to the powerset of F. That is, V assigns to each propositional symbol a set of nodes.",
        "Given any model M and any node u of M, the satisfaction relation M, u (that is, the model M satisfies at node u) is defined as follows:",
        "and M, A(u)(i) for all 1 < i < k (In the satisfaction clause for •, A(u)(i) denotes the ith element of the sequence assigned to u by A.)",
        "If 0 is satisfied at all nodes of a model M, then we say that 0 is valid on M and write M 1 .0.",
        "The notion of validity has an important role to play for us.",
        "As we shall see in the next section, we think of a grammar G as being represented by an LT wff 0G.",
        "The trees admitted by the grammar are precisely those models on which 4)G is valid.",
        "Note that LT is just a simple formalisation of linguistic discourse concerning tree structure.",
        "First, j and I enable us to say that a daughter node, or a mother node, do (or do not) bear certain pieces of linguistic information.",
        "For example, J.",
        "0 insists that the information 0 is instantiated on some daughter node.",
        "Second, enables general constraints about tree structure to be made: to insist that 0 0 is to say that any node in the tree that bears the information 0 must also bear the information 0.",
        "Finally • enables admissibility conditions on local trees to be stated.",
        "That is, • is a modal operator that embodies the idea of local tree admissibility introduced by [McCawley 1968].3 It enables us to insist that a node 3 As well as McCawley's article, see also [Gazdar 1979].",
        "Our treatment of node admissibility conditions has been heavily influenced by Gazdar's paper and later work in the GPSG tradition (for example, [Gazdar et al.",
        "1985]).",
        "must immediately and exhaustively dominate nodes bearing the listed information, and in the following section we'll see how to put it to work.4 Although the design of LT was guided by linguistic considerations, with the exception of • it turns out to be a rather conventional language.5 In particular, is what modal logicians call strict implication, and 1 and T together form a particularly simple example of what modal logicians like to call a 'tense logic'.",
        "In what follows we will occasionally make use of the following (standard) modal abbreviations: =def T cb (that is, (/) is satisfied at all nodes) and 1115 =def T-0 (that is, qf is true at the mother of the node we are evaluating at, if in fact this node has a mother)."
      ]
    },
    {
      "heading": "3 Talking about trees",
      "text": [
        "In this section we show by example how to use LT to formulate node admissibility conditions that will pick out precisely the parse trees of context free grammars.",
        "Consider the context free phrase structure grammar G = (S, N, T, P) where S is the start symbol of G; where N, the set of non-terminal symbols, is {S, NP, VP, N, V, DET, CONJ }; where T, the set of terminal symbols, is {the, a, man, woman, donkey, beat, stroke, and, but}; and where P, the set of productions, is:",
        "Let's consider how to capture the parse trees of this grammar by means of constraints formulated in LT .",
        "The first step is to fix our choice of Prop.",
        "We choose it to be N U T, that is, all the terminal and nonterminal symbols of G. The second step is to capture the effect of the productions P. We do so as follows.",
        "Let OP be the conjunction of the following wffs: 4 The reader will doubtless be able to think of other interesting operators to add.",
        "For example, adding operators .1• and 1* which explore the transitive closures of the daughter-of and mother-of relations respectively enables GB discourse concerning command relations to be modeled; while weakening the definition of • to ignore the precedence ordering on sisters, and adding a new unary modality to take over the task of regulating linear precedence, permits the ID/LP format used in GPSG to be naturally incorporated.",
        "Such extensions will be discussed in [Blackburn et al.",
        "forthcoming], however for the purposes of the present paper we will be content to work with the simpler set of operators we have defined here.",
        "'Indeed, on closer inspection, even • can be regarded as an old friend in disguise; such logical issues will be discussed in [Blackburn et al.",
        "forthcoming].",
        "Note that each conjunct licences a certain information distribution on local trees.",
        "Now, any parse tree for G can be regarded as an LT model, and because each conjunct in OP mimics in very obvious fashion a production in G, each node of an LG parse tree is licenced by one of the conjuncts.",
        "To put it another way, oP is valid on all the G parse trees.",
        "However we want to capture all and only the parse trees for G. This is easily done: we need merely express in our language certain general facts about parse trees.",
        "First, we insist that each node is labeled by at least one propositional symbol: 0( \\ / v pENuT P) achieves this.",
        "Second, we insist that each node is labeled by at most one propositional symbol: (p AgE((NUT)\\{p}) achieves this.",
        "Third, we insist that the root of the tree be decorated by the start symbol S of the grammar: s S achieves this.",
        "Fourth, we insist that non-terminal symbols label only nonterminal nodes: ApeN(p -t) achieves this.",
        "Finally, we insist that terminal symbols label terminal nodes: ApET(p t) achieves this.",
        "Call the conjunction of these five wffs I; note that, modulo our choice of the particular sets N and T, expresses universal facts about parse trees.",
        "Now, for the final step: let OG be OP A P. That is, CbG expresses both the productions P of G and the universal facts about parse tree structure.",
        "It is easy to see that for any model M, Miff M is (isomorphic to) a parse tree for G. Indeed, it is not hard to see that the method we used to express G as a formula generalises to any context free phrase structure grammar."
      ]
    },
    {
      "heading": "4 Trees decorated with feature structures",
      "text": [
        "The previous section showed that LT is powerful enough to get to grip with interesting 'languages' in the sense of formal language theory; but although natural language syntacticians may use tools borrowed from formal language theory, they usually have a rather different conception of language than do computer scientists.",
        "One important difference is that linguists typically do not consider either nonterminal or terminal symbols to be indivisible atoms, rather they consider them to be conglomerations of 'lower level' information called feature structures.",
        "For example, to say that a node bears the information NP is to say that the node actually bears a lot",
        "of lower level information: for example, the features +N, – V, and BAR 2.",
        "Moreover (as we shall see in section 5) the constraints that a tree must satisfy in order to be accepted as well formed will typically involve this lower level information.",
        "The feature co-occurrence restrictions and feature instantiation principles of GPSG are good examples of this.",
        "Is it possible to extend our framework to deal with such ideas?",
        "More to the point, is there a simple extension of our framework that can deal with complex categories?",
        "Layered modal languages provide what is needed.",
        "Semantically, instead of associating each tree node with an atomic value, we are going to associate it with a feature structure.",
        "Syntactically, we are going to replace the propositional symbols of LT with wffs capable of talking about this additional structure.",
        "To be more precise, instead of defining the wffs of LT over a base Prop consisting of primitive propositional symbols, we are going to define them over a base of modal formulas.",
        "That is, we will use a language with two 'layers'.",
        "The top layer LT will talk about tree structure just as before, whereas the base layer (or feature layer) LF.",
        "talk about the `internal structure' associated with each node.' Clearly the first thing we have to do is to define our feature language LF and its semantics.",
        "We will assume that the linguistic theory we are working with tells us what features and atoms may be used.",
        "That is, we assume we have been given a signature (.7 , A) where both and A are non-empty finite or denu-merably infinite sets, the set of features and the set of atomic information respectively.",
        "Typical elements of .F might be CASE, NUM, PERSON and AGR; while typical elements of A might be genitive, singular, plural, 1st, 2nd, and 3rd.",
        "The language L\" (of signature (F, A)) contains the following items: all the elements of A (which we will regard as propositional symbols), a truth functionally adequate collection of Boolean connectives, and all the elements of .F (which we will regard as one place modal operators).",
        "The set of wffs of LF is the smallest set containing all the propositional symbols (that is, all the elements of A) closed under the application of the Boolean and modal operators (that is, the elements of F).",
        "Thus a typical wff of LF might be the following: (AGR)(PERsoN)3rd A (CASE) genitive.",
        "Note that this wff is actually something very familiar, namely the following Attribute Value Matrix: [AGR [PERSON 3rd] CASE genitive 6 As was mentioned earlier, at present there is relatively little published literature on layered modal languages.",
        "The most detailed investigation is that of [Finger and Gabbay 1992], while [de Rijke 1992] gives a brief account in the course of a general discussion on the nature of modal logic.",
        "Indeed the wffs of LF are nothing but straightforward ginearisations' of the traditional two dimensional AVM format.",
        "Thus it is unsurprising that the semantics of LF is given in terms of feature structures:"
      ]
    },
    {
      "heading": "Definition 4.1 (Feature structures)",
      "text": [
        "A feature structure of signature (.F', A) is a triple F of the form (W,{Rf}iEF,V), where W is a nonempty set, called the set of points; for all f E is a binary relation on W that is a partial function; and V is a function that assigns to each propositional symbol (that is, each a E A), a subset of W.7 ❑ Our satisfaction definition for LF wffs is as follows.",
        "For any F = (W,{Ri}fEF,V) and any point w E W: F,wkcr if w E V(a), for all E A F,w iff not F, w F,wHSAt,b if F,wk0 and F,wkik F, w WO if 3u/(wRi to' and F, w' qS) With LF and its semantics defined, we are ready to define a language for talking about trees decorated with feature structures: the language LT (LF), that is, the language LT layered over the language LF .",
        "That is, we choose Prop to be LF.",
        "then make the LT wffs on top of this base in the usual way.' As a result, we've given an 'internal structure' (namely, a modal structure, or AVM structure) to the propositional symbols of LT.",
        "This is the syntactical heart of layering."
      ]
    },
    {
      "heading": "Definition 4.2 (Feature decorated trees)",
      "text": [
        "By a (finite ordered) feature structure decorated tree (of signature (.F', A)) is meant a triple (0, D, d) where 0 is a finite ordered tree, D is a function that assigns to each node u of 0 a feature structure (of signature (.7', A)), and d is a function that assigns to each node u of 0 a point of D(u).",
        "That is, d(u) E D(u).9 ❑ It is straightforward to interpret LT(LF) wffs on feature structure decorated trees: indeed all we have 7 For detailed discussion of this definition see [Blackburn 1991, 1992] or [Blackburn and Spaan 1991, 1992].",
        "For present purposes it suffices to note that it includes as special cases most of the well known definitions of feature structures, such as that of [Kasper and Rounds 1986].",
        "8 This is worth spelling out in detail.",
        "The wffs of the language LT (LF) (of signature (F, A)) are defined as follows.",
        "First, all LF wffs (of signature ,A)) are LT(LF) wffs, and so are the constant symbols s and t. Second, if 0, ti) and 01, On are LT (LF) wffs then so are 0 A tk, To, 1 tk, teb and •(01, , On).",
        "Third, nothing else is an LT(LF) w 'In a number of recent talks Dov Gabbay has advocated the idea of 'fibering' one set of semantic entities over another.",
        "This is precisely what's going on here: we're fibering trees over feature structures.",
        "Fibered structures are the natural semantic domains for layered languages.",
        "to do is alter the base clause of the LT definition.",
        "So, let M = (0, D, d) be a feature structure decorated tree, and u be any node in 0.",
        "Then for all wffs SELF: M, u :ff D(u), d(u) .",
        "In short, when in the course of evaluating an LT(LF) wff at a node u we encounter an LF wff (that is, when we reach 'atomic' level) we go to the feature structure associated with u (that is, D(u)), and start evaluating the LF, wff at the point d(u).",
        "This change at the atomic level is the only change we need to make: all the other clauses (that is, the clauses for s and t, the Boolean operators, for /, and •) are unchanged from the LT satisfaction definition given in section 2.",
        "To close this section, a general comment.",
        "LT(LF) is merely one, rather minimalist, example of a layered modal language.",
        "The layering concept offers considerable flexibility.",
        "By enriching either the LT component, the LF component, or both, one can tailor constraint languages for specific applications.",
        "Indeed, it's worth pointing out that one is not forced to layer LT over a modal language at all.",
        "One could perfectly well layer LT across a first order feature logic or over a fragment of such a first order logic (such as the SchOnfinkel Bernays fragment explored in [Johnson 1991]),10 and doubtless the reader can imagine other possibilities.",
        "That said, we're struck by the simplicity of purely modal layered languages such as LT (LF), and we believe that there are good theoretical reasons for being interested in modal approaches (these are discussed at the end of the paper).",
        "Moreover, as we shall now see, even the rather simple collection of operators offered by LT (LF) are capable of imposing interesting constraints on syntactic structures."
      ]
    },
    {
      "heading": "5 LT(LF) and linguistic theory",
      "text": [
        "At this stage, it should be intuitively clear why LT (LF) is well suited for modeling contemporary linguistic theories.",
        "On the one hand, the LT part of the language lets us talk directly about tree structure, thus clearly it is a suitable tool for imposing constraints on constituent structure.",
        "On the other hand, the LF.",
        "of the language permits the description of complex (rather than atomic) categories; and nowadays the use of such categories is standard.",
        "The aim of this section is to give a concrete illustration of how LT (LF) can be used to model modern linguistic theories.",
        "The theory we have chosen for this purpose is GPSG.",
        "In what follows we sketch how some of the leading ideas of GPSG can be captured using LT (LF) wffs."
      ]
    },
    {
      "heading": "5.1 Complex categories",
      "text": [
        "One of the fundamental ideas underlying GPSG (and indeed many other contemporary syntactic theories) is that a linguistic category is a complex object consisting of feature specifications, where feature specifications are feature/value pairs, and a value is either an atom or is itself a category.",
        "In LT(LF) , this idea is easily modeled since L-1 (LF) contains LF, a language specifically designed for talking about feature structures.",
        "To give a simple example, consider the following complex category:",
        "where the attribute BAR is represented by a modality and the atomic symbols and Boolean features are represented by propositional symbols.",
        "This wff is satisfied at any point w in a feature structure such that noun is false at w, verb is true at w, and the propositional information two is reachable by making a BAR transition from w."
      ]
    },
    {
      "heading": "5.2 Admissibility constraints on local trees",
      "text": [
        "The heart of GPSG is a collection of interacting principles governing the proper distribution of features within syntactic trees.",
        "Central to this theory is the concept of admissibility constraints on local trees.",
        "Very roughly,11 the idea is that a local tree is admissible if it is a projection of an immediate dominance rule (that is, each node in the tree corresponds in some precisely defined way to exactly one category in the rule) and it satisfies all of the grammar principles; these include feature co-occurrence restrictions (FCRs), feature specification defaults (FSDs linear precedence (LP) statements, and universal feature instantiation principles (UIPs).",
        "In what follows, we show how LT (LF) can be used to model some of these admissibility conditions on local trees: section 5.2.1 shows how to model phrase structure restrictions and section 5.2.2 concentrates on FCRs.",
        "Finally, in section 5.2.3 we sketch an LT (LF) treatment of the GPSG UIPs."
      ]
    },
    {
      "heading": "5.2.1 Phrase structure restrictions",
      "text": [
        "In GPSG, restrictions on constituent structure are expressed by a set of ID/LP statements.",
        "As the name indicates, I(mmediate) D(ominance) statements encode immediate dominance restrictions on local trees (for instance, the ID rule A B ,C licenses any local tree consisting of a mother node labeled with category A and exactly two daughter nodes labeled with 10Layering over first order languages is treated in 11 For a more precise formulation of the constraints on [Finger and Gabbay 1992].",
        "tree admissibility, see [Gazdar et al.",
        "1985, page 100].",
        "categories B and C respectively), whereas LP statements define a linear precedence relation between sister nodes (for example, the LP statement C B states that in any local tree with sisters labeled B and C, the C node must precede the B node).",
        "Strictly, speaking, such restrictions cannot be modeled in L/ (LF) .",
        "The reason for this is trivial.",
        "As has already been pointed out, the satisfaction definition for • makes use of both the immediate dominance and linear precedence relations.",
        "In a full-blooded attempt to model GPSG, we would probably define a variant modal operator o of • that did not make use of the precedence relation, and introduce an additional modal operator (say t>) to control precedence.",
        "However, having made this point, we shall not pursue the issue further.",
        "Instead, we will show how the present version of LT (LF) allows for the encoding of phrase structure rules involving complex categories.",
        "As was shown in section 3, rules involving atomic categories can be modeled in a fairly transparent way using • and V. For instance,",
        "captures the import of the following two phrase structure rules:",
        "In these rules the information associated with each node of the tree is propositional in nature, that is, non-structured.",
        "However because LT (LF) allows one to peer into the internal structure of nodes, this way of modeling phrase structure rules extends straightforwardly to rules involving complex categories: it suffices to replace the propositional symbols by LP wffs.",
        "For example, the phrase structure rule: (--moun A verb A (BAR)two) •((-moun A verb A (BAR)zero A (SUBCAT)trans), (noun A -,verb A (BAR)two)) That is, the LP wffs give the required 'internal structure' in the obvious way."
      ]
    },
    {
      "heading": "5.2.2 Feature co-occurrence restrictions",
      "text": [
        "FCRs encode restrictions on the distribution of features within categories.",
        "More specifically, they express conditional or bi-conditional dependencies between feature specifications occurring within the same category.",
        "For instance, the FCR:",
        "states that any category with feature specification INV + must also contain the feature specifications AUX + and VFORM fin.",
        "In other words, any inverted constituent must be a finite auxiliary.",
        "FCRs are naturally expressed in LT (LP) by using the connective.",
        "Thus, FCR1 can be captured by means of the following schema: inv (aux A (VFORM) fin) This says that for any ordered tree and any node u in this tree, if the feature structure associated with u starts with the point w and inv is true at w, then aux is also true at w and furthermore, the propositional information fin is reachable from w by making a (VFORM) transition to some other node w'."
      ]
    },
    {
      "heading": "5.2.3 Universal principles",
      "text": [
        "In this section, we show that LT (LP) allows us to axiomatize the main content of GPSG three feature instantiation principles namely, the foot feature principle, the head feature convention and the control agreement principle.",
        "Consider first the foot feature principle (FFP).",
        "This says that: Any foot feature specification which is instantiated on a daughter in a local tree must also be instantiated on the mother category in that tree.",
        "[Gazdar et al.",
        "1985, page 81] 12 So, assume that our GPSG theorising has resulted in signature (.7' , A) which includes the feature FOOT.",
        "We capture the FFP by means of the following schema: (FooT) ...ft(FooT)4).",
        "This says that for any node u, if the information (/) is reachable by making a FOOT transition in the feature structure associated with u, then it must also be possible to obtain the information cb by making a FOOT transition in the feature structure associated with the mother of u.",
        "That is, FOOT information percolates up the tree.",
        "So for instance, if three sister nodes u1, u2 and u3 of a tree bear the information (Focrr)(01, (FooT)q52 and (Focrr)cb3 respectively, then the feature structure associated with the mother node must bear the information (Focrr)lbi A (FOOT)02 A (FOOT)03.",
        "Incidentally, it then follows from the semantics of LP that this node bears the information (FOOT)(01 A cb2 A 03).",
        "That is, the three pieces of foot information are unified.",
        "Consider now the head feature convention (HFC).",
        "A simplified version of the HFC can be stated as follows;13 Any head features carried by the head daughter is carried by the mother and vice-versa.",
        "Assuming a signature (F, A) which includes the feature HEAD-FEATURE and the atomic information head, we capture the HFC by means of the following schema: (head A (HEAD-FEATURE)) .1)-(HEAD-FEATURE)0 A (head A i(HEAD-FEATURE)) (HEAD-FEATURE)0 The first conjunct says that whenever the feature structure associated with a node u marks it as a head node, and the information 0 is reachable by making a HEAD-FEATURE transition, then one can also reach the same information 0 by making a HEAD-FEATURE transition in the feature structure associated with the mother of u.",
        "The second conjunct works analogously to bring HEAD-FEATURE information down to the head daughter.",
        "Finally, we sketch how the effect of the more elaborate control agreement principle (CAP) can be captured.",
        "GPSG formulates CAP by making use of the Montagovian semantic type assignments.",
        "As we haven't discussed semantics, we're going to assume that the relevant type information is available inside our feature structures.",
        "With this assumed, our formulation of CAP falls into three steps: first, defining the notions of controller and controllee (or target in GPSG terminology); second, defining the notion of a control feature; and third, defining the instantiation principle.",
        "We consider each in turn.",
        "Controller and controllee are defined as follows:14 A category C is controlled by another category C' in a constituent Co if one of the following situations obtains at a semantic level: either C is a functor that applies to C' to yield a Co, or else there is a control mediator C\" which combines with C and C' in that order to yield a Co. [Gazdar et al.",
        "1985, page 87] Further, a control mediator is a head category whose semantic type is (V P,(N P, VP)) where VP denotes the type of an intransitive verb phase and NP that of a generalised quantifier.",
        "The first step is to formulate the notions of controller and controllee.",
        "\"The exact formulation of the HFC implies that only free feature specifications are taken into account.",
        "See section 5.3 for discussion of this point.",
        "14Again this is somewhat simplified in that the final GPSG definition of control only takes into account so-called X – features so as to ignore perturbations of semantic types introduced by the presence of instantiated features.",
        "We do this with the following three wffs (a and b are metavariables over semantic types, and np and vp correspond to the NP and VP above):",
        "Control features are SLASH and AGR and are not mutually exclusive.",
        "The problem is to decide which should actually function as control feature when both of them are present on the controllee category.",
        "In effect, in case of conflict (cf. [Gazdar et al.",
        "1985, 89]), SLASH is the control feature if it is inherited, else AGR is.",
        "As we have no way to distinguish here between inherited and instantiated feature values, we will (again) give a simplified axiomatisation of control features, namely:",
        "Finally, we turn to the CAP itself.",
        "This says that the value of the control feature of the controllee is identical with the category of the controller.",
        "In"
      ]
    },
    {
      "heading": "5.3 Discussion",
      "text": [
        "In the preceding sections, we showed how LT (LF) could be used to capture some of the leading concepts of GPSG.",
        "Although the account involves many simplifications and shortcomings, the examples should illustrate how to use LT (LI): one expresses linguistic principles as LT (LF) wffs, and only those (decorated) trees validatings all these wffs are considered well-formed.",
        "What we hope to have shown is that LT (LF) is a very natural language for expressing the various types of theoretical constructs developed in GPSG and, more generally, in most modern theories of grammar.",
        "Complex categories can be described using the LF part of the language while general information concerning the geometry of trees and the distribution of feature specifications within those trees can be stated using the full language.",
        "More specifically, the bullet operator • provides an easy way to",
        "express phrase structure constraints while the strict implication operator allows one to express various types of constraints on the distribution of features in trees.",
        "When used to connect two LF wffs, expresses generalisations over the internal structure of categories (as illustrated in section 5.2.2 on FCRs), whereas when used together with 1, 1 and • it allows information sharing between feature structures associated with different nodes in the tree (cf. section 5.2.3).",
        "As already repeatedly mentioned, there remain many shortcomings in our approach to modeling GPSG.",
        "To close this discussion let's consider them a little more closely; this will lead to some interesting questions about the nature of linguistic theorising.",
        "The first type of shortcoming involves lack of ex-pressivity in LT (LF) and is illustrated by the impossibility of expressing ID/LP statements (cf. section 5.2.1).",
        "As already indicated, we don't regard such shortcomings as a failure of the general modal approach being developed here.",
        "With a slightly different choice of modal language, an adequate modeling of ID/LP statements could be attained.",
        "More generally, we think it is important to explore a wide range of modal languages for linguistic theorising, for we believe that it may be possible to usefully classify differing linguistic theories in terms of the different modal operators required to formalise them.",
        "A theoretical justification for our confidence will be given in the following section; here we'll simply say that we think this is a feasible way of addressing the questions raised in [Shieber 1988] concerning the comparative expressivity and computational complexity of grammatical formalisms.",
        "The second type of shortcoming is more serious and potentially far more interesting.",
        "Two cases in point are (i) the distinction made in GPSG between instantiated and inherited features and (ii) the GPSG notion of a free feature.",
        "Briefly, inherited features are features whose presence on categories in trees is directly determined by an ID rule whereas instantiated features are non-inherited features (cf. [Gazdar et al.",
        "1985, page 76]).",
        "Furthermore, given a category C occurring in a tree r such that r is a projection of some ID rule that satisfies the FFP and the CAP, a feature specification is said to be free in C iff is is compatible with the information contained in C (cf. [Gazdar et al.",
        "1985, page 95] for a more precise definition of free features).",
        "The problem in both cases is that derivational information needs to be taken into account.",
        "In the first case, the source of the feature specification must be known (does it stem from an ID rule or from some other source?).",
        "In the second case, we must know that both CAP and FFP are already being satisfied by the category under consideration.",
        "There is an essentially dynamic flavour to these ideas, something that goes against the grain of the essentially static tree descriptions offered by LT(LF).",
        "Whether this dynamic aspect is in fact required, and how it could best be modeled, we leave here as open research questions."
      ]
    },
    {
      "heading": "6 But why modal languages?",
      "text": [
        "To close this paper we wish to discuss an issue that may be bothering some readers: why were modal languages chosen as the medium for expressing constraints on trees and feature structures?",
        "A reader unfamiliar with the developments that have taken place in modal logic since the early 1970's, and in particular, unfamiliar with the emergence of modal correspondence theory, may find the decision to work with modal languages rather odd; surely it would be more straightforward to work in (say) some appropriate first order language?",
        "However we believe that there are general reasons for regarding modal languages as a particularly natural medium for linguistic theorising, and what follows is an attempt to make these clear.",
        "The first point that needs to be made about modal languages is that they are nothing but extremely simple languages for talking about graphs.",
        "Unfortunately, the more philosophical presentations of modal logic tend to obscure this rather obvious point.",
        "In such presentations the emphasis is on discussing such ideas as 'possible worlds' and `intension'.",
        "Such discussions have their charms, but they make it very easy to overlook the fact that the mathematical structures on which these ideas rest are extremely simple: just sets of nodes decorated with atomic information on which a transition relation is defined.",
        "Kripke models are nothing but graphs.",
        "The second point is even more important.",
        "Modal languages are not some strange alternative to classical languages; rather, they are relatively constrained fragments of such languages.",
        "If a problem has been modelled in a modal language then it has, ipso facto, been modeled in a classical language; and moreover, it has been modeled in a very resource conscious way.",
        "The point deserves a little elaboration.",
        "Ever since the early 1970's, one of the most important branches of research in technical modal logic has been modal correspondence theory (see [van Benthem 1984] and references therein), the systematic study of the interrelationships between modal languages on the one hand, and various classical logics (first order, infini-tary, and second order) on the other.",
        "Modal correspondence theory rests on the following simple observation.",
        "It is usually possible to view modal operators as logical `macros'; essentially modal operators are a prepackaging of certain forms of quantification that are available in classical languages.",
        "To give a simple example, we might view a statement of the form I as a shorthand for the first order expression 3y(y > x A w(y)), where w(y) is a certain first order wff called the standard translation of 41.15 For \"This is somewhat impressionistic; for the full story consult [van Benthem 1984].",
        "For a discussion of the fun",
        "present purposes the details aren't particularly important; the key point to note is that the I operator is essentially a neat notation which embodies a limited form of first order quantificational power: namely the ability to quantify over mother nodes.",
        "More generally, modal languages eschew the quantificational power that classical languages achieve through the use of variables and binding, in favour of a variable free syntax in which quantification is performed using operators.",
        "Expressive power is traded for syntactic simplicity.",
        "The relevance of these points for linguistics should be clear.",
        "Linguistic theorizing makes heavy use of graph structures; trees and feature structures are obvious examples.",
        "Thus modal languages can be used as constraint formalisms; what correspondence theory tells us is that they are particularly interesting ones, namely formalisms that mesh neatly with the linguists' quest for revealing descriptions using the weakest tools possible.",
        "Acknowledgements: We would like to thank Johan van Benthem, Gerald Gazdar, Maarten de Rijke, Albert Visser and the anonymous referees for their comments on the earlier draft of this paper.",
        "Patrick Blackburn would like to acknowledge the financial support of the Netherlands Organization for the Advancement of Research (project NF 102/62- 356 'Structural and Semantic Parallels in Natural Languages and Programming Languages')."
      ]
    }
  ]
}
