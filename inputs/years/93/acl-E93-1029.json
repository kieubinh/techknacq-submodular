{
  "info": {
    "authors": [
      "Marcus Kracht II"
    ],
    "book": "Conference of the European Association for Computational Linguistics",
    "id": "acl-E93-1029",
    "title": "Mathematical Aspects of Command Relations",
    "url": "https://aclweb.org/anthology/E93-1029",
    "year": 1993
  },
  "references": [],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "In GB, the importance of phrase-structure rules has dwindled in favour of nearness conditions.",
        "Today, nearness conditions play a major role in defining the correct linguistic representations.",
        "They are expressed in terms of special binary relations on trees called command relations.",
        "Yet, while the formal theory of phrase-structure grammars is quite advanced, no formal investigation into the properties of command relations has been done.",
        "We will try to close this gap.",
        "In particular, we will study the intrinsic properties of command relations as relations on trees as well as the possibility to reduce nearness conditions expressed by command relations to phrase-structure rules."
      ]
    },
    {
      "heading": "1 Introduction 1.1 Historic Origin",
      "text": [
        "Early transformational grammar consisted of a rather complex generative component and an equally complex and equally imperspicuous transformational component.",
        "But since the aim always has been to understand languages rather than describing them, there has been a need for a reduction of these rule systems into preferably few and simple principles.",
        "The analysis of transformations as series of movements an analysis made possible by the introduction of empty categories was one step.",
        "This indeed drastically simplified the transformational component.",
        "A second step consisted in simplifying the generative component by reducing the rules in favour of well-formedness conditions, so-called filters.",
        "While this turned transformational grammar into a real theory now known as GB, the relationship of GB with other syntactic formalisms such as GPSG, LFG, categorial grammar etc.",
        "became less and less clear.",
        "This in addition to Noam Chomsky's often repeated scepticism with respect to formalizations has led to the common attitude that GB is simply gibberish, unformalizable or hopelessly untractable at best.",
        "However, since it is possible to evaluate predictions of theories of GB and have constructive debates over them these theories are if not formal then at least rigorous.",
        "Hence, it must be possible to formalize them.",
        "Formalizations of GB have been offered, e. g. in [Stabler, 1989] but in a manner that makes GB even less comprehensible.",
        "So if formalization means providing as complete as possible intellectual access to the formal consequences of an otherwise rigorously defined theory the project has failed if ever begun.",
        "More or less the same criticism applies to [Gazdar et al., 1985].",
        "Even if GPSG is rigorously defined the formalism as laid out in this book does not lead to an understanding of it's properties.",
        "More or less the same applies to categorial grammar which might have the advantage that it's formal properties are well-studied but which suffers from the same ill-suitedness to the human intellect.",
        "The situation can be compared with computer science.",
        "While it is perfectly possible to reduce programs in PASCAL to programs in machine language, hardly is anyone interested in doing so.",
        "Even if machine language suits the machine, we need to provide a higher language and a translation to make computers really useful for practical tasks.",
        "However, as long as we do not know in linguistics what the 'machine language' of the human mind is, the best we can do at the moment is to provide means to translate in between all these syntactical formalisms.",
        "So, even if from the point of",
        "view of universal grammar this gets us no closer to the language faculty of the human mind, the need to understand the formal properties of GB and the relationship between all these approaches remains and must be satisfied in order to achieve real progress.",
        "The theory of command relations forms part of an investigation that should ultimately lead to such an understanding.",
        "The present paper will sketch the theory of command relation and is a distilled version of [Kracht, 1993]."
      ]
    },
    {
      "heading": "1.2 Relevance of Command Relations",
      "text": [
        "The idea to study the formal properties of command relations is due to [Barker and Pullum, 1990].",
        "There we find a definition of command relations as well as many illustrations of command relations from linguistic theory.",
        "In that paper the origins of the notions are also discussed.",
        "I guess it is fair to attribute to [Reinhart, 1981] the beginning of the study of domains.",
        "Moreover, [Koster, 1986] presents a impressive and thorough study of the role of domains in grammar.",
        "Yet all this work is either too specific or too vague to lead to a proper understanding of nearness conditions in grammar.",
        "In [Kracht, 1992] I took the case of [Barker and Pullum, 1990] further and proved some more results concerning these relations especially the structure of the heyting algebra of command relations.",
        "The latter proved to be of little significance in the light of the questions raised in 1.1.",
        "Instead, it emerged that it is more fruitful to study the properties of command relations under intersection, union and relational composition.",
        "They form an algebraic structure called a distributoid.",
        "The structure of this distributoid can be determined.",
        "If the grammar is enriched with enough labels, this distributoid contains enough command relations to express all known nearness conditions.",
        "This being so, it becomes an immediate question whether the effect of a nearness condition expressed via command relations can be incorporated into the syntax.",
        "This is discussed at length in [Kracht, 1993].",
        "The result is that indeed all such conditions are implementable, but this often requires a lot more basic features.",
        "The explosion of the size grammars when translating from GB to GPSG can be explained namely by the necessity to add auxiliary features that secure that the grammar obeys certain nearness restrictions.",
        "A typical example is the SLASH-feature which has been invented to guarantee a gap for a displaced filler.",
        "With such proof that implementations of nearness conditions into cfg's can always be given (maybe on certain other harmless conditions) one is in principle dispensed from writing GPSG-type grammars in order to make available the rich theory of context-free grammars.",
        "Now it is possible to transfer this theory to grammars which consist both of a generative context-free component and a set of well-formedness conditions based on command relations.",
        "In particular, it is perfectly decidable whether two such grammars generate the same bracketed strings and hence effective comparison between two different theories of natural language if given in that format is possible."
      ]
    },
    {
      "heading": "2 Grammatical Relations on Trees",
      "text": []
    },
    {
      "heading": "2.1 Definitions",
      "text": [
        "A tree is an object T = (T, <,r) with r the root and <a tree ordering.",
        "We write x y if x is immediately dominated by y; in mathematical jargon y is said to cover x.",
        "A leaf is an element which does not cover; x is interior if it is neither a leaf nor the root.",
        "int(T) is the set of interior nodes of T. We put I x = {yly < x} and Ix = {yiy > x}.",
        "Ix is called the lower and Ix the upper cone of x.",
        "If R C T2 is a binary relation we write Rz = {ylxRy} and call 14 the R-domain of x.",
        "A function f T 7' is called monotone if x <y implies f(x) f(y), increasing if x </(x) for all x, and strictly increasing if x < f(x) for all x < r.",
        "Definition 1 A binary relation R C T2 is called a command relation (CR for short) if there exists a function fR :T T such that (1), (2) and (3) hold; fl is called monotone if in addition it satisfies (4) and tight if it satisfies (5) in addition to (1) - (3).",
        "fR is called the associated function of R. (1) Rz = .fR(z) (2) x < fR(x) for all a' <r (3) fR(r)= r (4) x < y implies fR(x) < fR(y) (5) r < fn(y) implies ht(x) fR(P)(1)",
        "expresses that fR(x) represents R; (2) and (3) express that fR must be strictly increasing.",
        "If (4) holds, fR is monotone.",
        "A tight relation is monotone; for if x < y and y < r then y < fR(y) and so x < fR(Y); whence fR(x) < f(y) by (5).",
        "For some reason [Barker and Pullum, 1990] do not count monotonicity as a defining property of CRs even though there is no known command relation that fails to be monotone.",
        "Given a set P C T we can define a function gp by (f) g p(x) = min{yly E P, y> x} We put min0 = r; thus gp(r) = r. Let xPy iffy < gp(x).",
        "gp is the associated function of P, a relation commonly referred to as P-command.",
        "We call P the basic set of gp as well as P. Here are some examples.",
        "With P the set of branching nodes P is c-command, with P = T we have that P is IDC-command.",
        "When we take P to be the set of maximal projections we obtain that P is m-command, and, finally, with P the set of bounding nodes, e. g. {NP, S}, the relation P defined becomes identical to Lasnik's KOMMAND.",
        "Lasnik's KOMMAND is identical to 1-node subjacency under the typical definition of subjacency.",
        "Relations that are of the form P for some P are called fair.",
        "Theorem 2 R is fair if it is tight.",
        "There are 2fint(T) distinct tight CRs on T. Proof.",
        "() Assume x < gp(y) = min{z E Plz > y}.",
        "Then gp(x) =E Plz > x} _< gp(y) since gp(y) E P.Put P = {fR(x)lx E T}.",
        "We have to show (t).",
        "By (5), however, fR(z) = minIfR(z)lfR(z)> xl.",
        "For the second claim observe first that if P,Q differ only in exterior nodes then P = Q.",
        "If, however, x EPQ is interior then y x for some y and gp(y) = x but gg(y) > z.",
        "Tight relations have an important property; even when the structure of the tree is lost and we know only P we can recover gp and < to some extent.",
        "Notice namely that if Px T then gp(x) is the unique y such that y E Px but the P-domain of y is larger than the P-domain of x.",
        "We can then exactly say which elements are dominated by y: exactly the elements of the P-domain of x.",
        "By consequence, if we are given T, the root r and we know the IDCcommand domains, < can be recovered completely.",
        "This is of relevance to syntax because often the tree structures are not given directly but are recovered using domains."
      ]
    },
    {
      "heading": "2.2 Lattice Structure",
      "text": [
        "Let f, g be increasing functions; then define (f U g)(x) = max{ f (x), g(x)} (f n g)(x) = min{ f (x), g(x)} (f o g)(x) = f(g(x)) Since f(x),g(x)x, that is, f(x),g(x) E Ix and since I x is linear, the maximum and minimum are always defined.",
        "Clearly, with f and g increasing, f g, f ng and fog are also increasing.",
        "Furthermore, if f and g are strictly increasing, the composite functions are strictly increasing as well.",
        "Lemma 3 Proof.",
        "z < fRus(x) iff x(R U S)z if either xRz or xSz if either z < fR(x) or z < fs(x) if z < max { fR(x), fs(x)}.",
        "Analogously for intersection.",
        "Theorem 4 For any given tree T the command relations over T form a distributive lattice (Er(T) = (Cr(T),n,U) which contains the lattice fiton(T) of monotone CRs as a sublattice.",
        "Proof.",
        "By the above lemma, the CRs over T are closed under intersection and union.",
        "Distributivity automatically follows since lattices isomorphic to lattices of sets with intersection and union as operations are always distributive.",
        "The second claim follows from the fact that if fR,Is are both monotone, so is fR U Is and fR n fs.",
        "We prove one of these claims.",
        "Assume x < y.",
        "Then fR(x) < f(y) and fs(x) 5 My), hence fR(x) < max{fR(Y), is(Y)} as well as Is(s) m az {fR(y), f s(y)}.",
        "So max{fR(x), fs(x)} < max{fR(y), fs(y)} and therefore fRus(x) Proposition 5 gpuca = gp fl gQ Hence tight relations over a tree are closed under intersection.",
        "They are generally not closed under closed union.",
        "Proof.",
        "Let P, Q C T be two sets upon which the relations P and Q are based.",
        "Then the intersection of the relations, P (1Q, is derived from the union P U Q of the basic sets.",
        "Namely, gpucl(x) = min{yly E PU Q , y > x} = E P, y > , min{yly E Q,y > x}} = min{gp(x),gQ(x)} = (gp n gQ)(x).",
        "To see that tight relations are not necessarily closed under union take the union of NP-command and S command.",
        "If it were tight, the nodes of the form g(x) for some x define the set on which this relation must be based.",
        "But this set is exactly the set of bounding nodes, which defines Lasnik's kommand The latter, however, is the intersection, not the union of these relations.",
        "The consequences of this theorem are the following.",
        "The tight relations form a sub-semilattice of the lattice of command relations; this semi-lattice is isomorphic to (2'nt(T), U).",
        "Although the natural join of tight relations is not necessarily tight, it is possible to define a join in the semi-lattice.",
        "This operation is completely determined by the meet-semilattice structure, because this structure determines the partial order of the elements which in turn defines the join.",
        "In order to distinguish this join from the ordinary one we write it as P Q.",
        "The corresponding basic set from which this relation is generated is the set PnQ; this is the only choice, beacuse the semilattice (2snt(T), U) allows only one extension to a lattice, namely (2int(T), U, n).",
        "The notation for associated functions is the same as for the relations.",
        "If gp and gQ are associated functions, then gp gcl = gpnq denotes the associated function of the (tight) join."
      ]
    },
    {
      "heading": "2.3 Composition",
      "text": [
        "For monotone relations there is more structure.",
        "Consider the definition of the relational product"
      ]
    },
    {
      "heading": "2.4 Normal Forms",
      "text": [
        "The fact that distributoids have so many distributive laws means that for composite CRs there are quite simple normal forms.",
        "Namely, if 91 is a CR composed from the CRs R1, , Rfi by means of n, U and o, then we can reproduce 91 in the following simple form.",
        "Call t a chain if it is composed from the Ri using only o.",
        "Then 91 is identical to an intersection of unions of chains, and it is identical to a union of intersections of chains.",
        "Namely, by (3), both n and U can be moved outside the scope of o.",
        "Moreover, n can be moved outside the scope of U and u can be moved outside the scope of n. Theorem 9 (Normal Forms) For every 91 = 91(R1, , Rn) there exist chains O.!",
        "= <(Ri, Rn) and 1>ii = 1)1(Ri , , Rn) such",
        "From the linguistic point of view, tight relations play a key role because they are defined as a kind of topological closure of nodes with respect to the topology induced by the various categories.",
        "(However, this analogy is not perfect because the topological closure is an idempotent operation while the domain closure yields larger and larger sets, eventually being the whole tree.)",
        "It is therefore reasonable to assume that all kinds of linguistic CBs be defined using tight relations as primitives.",
        "Indeed, [Koster, 1986] argues for quite specific choices of fundamental relations, which will be discussed below.",
        "It is worthwile to ask how much can be defined from tight relations.",
        "This proves to yield quite unexpected answers.",
        "Namely, it turns out that union can be eliminated in presence of intersection and composition.",
        "We prove this first for the most simple case.",
        "Lemma 10 Let gp,gQ be the associated functions of tight relations.",
        "Then gpUgQ = (gp o gQ) n (gQ o gp) n (gp gQ) Proof.",
        "First of all, since gp,gQ < gp o 9g,9(2 o gp, gp gQ we have gp U gQ 5_ (gp o gQ) n (gQ o gp) n (gp gQ).",
        "The converse inequation needs to be established.",
        "There are three cases for a node x.",
        "(i) gp(x) = gQ(x).",
        "Then (gp U gQ)(x) = gPnQ(x) = (gp gQ)(x), because the next P-node above x is identical to the next Q-node above x and so is identical to the next P n Q-node above z.",
        "(ii) gp(x) < gQ(x).",
        "Then with y = gp(x) we also have gQ(y) = gQ(x), by tightness.",
        "Hence (gp U gQ)(x) = (gQ o gp)(x).",
        "(iii) gp(x) > gQ(x).",
        "Then as in (ii) (gp U gQ)(x) = (gp o gQ)(x).",
        "The next case is the union of two chains of tight relations.",
        "Let g = goo gi and b = hn 0 .0 hi be two associated functions of such chains.",
        "Then define a splice of g and b to be any chain t= kt o k1_1... o k1 such that = m n and ki = gi or ki = hi for some j and each gi and hi occurs exactly once and the order of the gi as well as the order of the hi in the splice is as in their original chain.",
        "So, the situation is comparable with shuffling two decks of cards into each other.",
        "A weak splice is obtained from a splice by replacing some number of gi o hi and hi o gi by gi hj, least tight relation containing both gi and h5.",
        "In a weak splice, the shuffling is not perfect in the sense that some pairs of cards may be glued to each other.",
        "If g = g2 o and I) = h2 o h1 then the following are all splices of g and fy g2og1oh2oh1, g2oh2ogioh1, g2oh2oh1ogi.",
        "The following are weak splices (in addition to the splices, which are also weak splices): g 091 h2 o hi, 92 h2 0 91 hi .",
        "A non-splice is gi 0 h2 0 g2 o hi, and 92 91 o h2 o h1 is not a weak splice.",
        "Lemma 11 Let g, Ij be two chains of tight relations (or their associated functions).",
        "Let wk(g, b) be the set of weak splices of g and 13.",
        "Then g U = n(510 E wk(g, I))) Proof.",
        "As before, it is not difficult to show that 9 LI h < msis E wk(g, 4)) because g, < s for each weak splice.",
        "So it is enough to show that the left hand side is equal to one of the weak splices in any tree for any given node.",
        "Consider therefore a tree T and a node x E T. We define a weak splice such that s(x) = max{g(x), b(x)}.",
        "To this end we define the following nodes.",
        "xo = x, yo = x, xi = gi (x0), hi (Yo), , xi+i = 9i+1 (xi), = hi+i(yi), ....",
        "The xi and the yi each form an increasing sequence.",
        "We can also assume that both sequences are strictly increasing because otherwise there would be an i such that xi = r or yi = r. Then (g U = r and so for any weak splice s(x) = r as well.",
        "So, all the xi can be assumed distinct and",
        "all the yi as well.",
        "Now we define zi as follows.",
        "zo = x, xi =.",
        ".",
        ", xm, Yi, Yn}, zi-Fi = min({zi, xm, Yi.)",
        "Yn) {xi, , zi}).",
        "Thus, the sequence of the zi is obtained by fusing the two sequences along the order given by the upper segment I x.",
        "Finally, the weak splice can be defined.",
        "We begin with si.",
        "If xi = yi, Si = gi 0111, if xl < si = gi and if xi > yi then Si = hi.",
        "Generally, for zi+1 there are three cases.",
        "First, zi+1 = xi = yk for some j, k. Then si4.1 = g1 hk.",
        "Else z4.4.1 = xi for some j, but zi+1 yk for all k. Then = g. Or else zi+1 = yk for some k but zi+1 0 xi for all j; then si+1 = hk.",
        "It is straightforward to show that s as just defined is a weak splice, that xj+1 = s(z) and hence that 5(x) = max{g(x),11(x)}.",
        "The tight relations generate a subdistributoid Tgr(T) in Viz(T) members of which we call tight generable.",
        "Theorem 12 Each tight generable command relation is an intersection of chains of tight relations."
      ]
    },
    {
      "heading": "3 Introducing Boolean Labels",
      "text": []
    },
    {
      "heading": "3.1 Boolean Grammars",
      "text": [
        "We are now providing means to define CRs uniformly over trees.",
        "The trees are assumed to be labelled.",
        "For mathematical convenience the labels are drawn from a boolean algebra 2 = (L, 0,1, , n, U).",
        "A labelling is a function .e : T 4 L. t is called full if t(x) is an atom of or 0 for every x.",
        "If either f(x) = a = 0 or 0 < f(x) < a we say that x is of category a. Labelled trees are generated by boolean grammars.",
        "Since syntax is abstracting away from actual words to word classes named each by its own syntactical label we may forget to discriminate between the terminal labels with impunity.",
        "This allows to give all of them the unique value 0, which is now the only terminal, the non-terminals being all elements of L {0}.",
        "A boolean grammar is defined as a triple G = (E, 2, R) where R is a finite subset of (L {0}) x L+ and E E L {0}.",
        "6 generates T = (T, t) in symbols G > T , if (r) r is of category E, (1) x is of category 0 if x is a leaf and (nt) if x immediately dominates yi, , yn then with an appropriate order of the indices there is a rule a > bi, bn in R such that x is of category a and yi is of category bi for all i. Boolean grammars are a mild step away from context free grammars.",
        "Namely, if a > b1 bn is a boolean rule, we may consider it as an abbreviation of the set of rules a* > 131 ...14 where as is an atom of e below a and 14 is an atom of 2 below bi for each i.",
        "Likewise, the start symbol abbreviates a set of start symbols E*, which by familiar tricks can be replaced by a single one denoted by Ist, which is added artificially.",
        "In this way we can translate G into a cfg G* over the set of atoms of 2 plus 0 and the new start symbol l, which generates the same fully labelled trees ignoring the deviant start symbol.",
        "It is known that there is an effective procedure to eliminate from a cfg labels that never occur in a finite tree generated by the grammar (see e. g. [Harrison, 1978]).",
        "This procedure can easily be adapted to boolean grammars.",
        "A boolean grammar without such superfluous symbols is called normal."
      ]
    },
    {
      "heading": "3.2 Domain Specification",
      "text": [
        "although things may be more perspicuously phrased using V it is in principle eliminable.",
        "By requiring CRs to be intersections of chains we would therefore not express a real restriction at all."
      ]
    },
    {
      "heading": "3.3 The Equational Theory",
      "text": [
        "Given a boolean grammar G, a tree T and two domains 0, e constructed from the labels of G we write T = e if 45T (b) = 6T(e).",
        "The set Eq(6)= fa= el(VT G)(T k = e)} is called the equational theory of G. To determine the equational theory of a grammar we proceed through a series of reductions.",
        "G admits the same finite trees as does is normal reduct Gn.",
        "So, we might as well assume from start that G is normal.",
        "Second, domains are insensitive to the branching nature of rules.",
        "We can replace with impunity any rule p = a b1 ...b by the set of rules pu = {a bili < n}.",
        "We can do this for all rules of the grammar.",
        "The grammar 6' = (E, C, RU) where Ro = ip E R} is called the unary reduct of G. It has the same equational theory as G since the trees it generates are exactly the branches of tree generated by G. Next we reduce the unary grammar to an ordinary cfg Gu* in the way described above, with an artificially added start symbol N. This grammar is completely isomorphic to a transition network alias directed graph with single source and single sink 0.",
        "This network is realized over the set of atoms of C plus and 0.",
        "There are only finitely many such networks over given C to be exact, at most 20+02 (!)",
        "where n is the number of atoms of C. Finally, it does not harm if we add some transitions from l and transitions to 0.",
        "First, if we do so, the equational theory must be included in the theory of G since we allow more structures to be generated.",
        "But it cannot be really smaller; we are anyway interested in all substructures x for nodes x, so adding transitions to 0 is of no effect.",
        "Moreover, adding transitions from R can only give more equations because the generated trees of this new transition system are branches where some lower and some upper cone is cut off.",
        "Thus, rather than taking the grammar Gu* we can take a grammar with some more rules, namely all transitions N A, A 0 for an atom A plus * 0.",
        "In all, the role of source and sink are completely emptied, and we might as well forget about them.",
        "What we keep to distinguish grammars is the directed graph on the atoms of C induced by the unary reduct of G. Let us denote this graph by Opb(G).",
        "We have seen that if two grammars G, H have the same graph, their equational theory is the same.",
        "The converse also holds.",
        "To see this, take an atom A and let A2 be the disjunction of all atoms B such that B + A is a transition in the graph (or, equivalently, in the unary reduct) of G. Then A o A2 = A o J E Eq(G).",
        "However, if C A2 then A oC = Aol.",
        "Eq(G).",
        "If G and H have different graphs, then there must be an A such that ixa, that is, either Aa 4 A2 or A2 4 A. Consequently, either AoA2 = A o J 0 Eq(H) or AoAgEi=Ao.1 Eq(G).",
        "Theorem 13 Eq(G) = Eq(H) if pb(G) = Opb(H).",
        "Hence it is decidable for any pair G, H of boolean grammars over the same labels whether or not Eq(G)= Eq(H).",
        "The question is now how we can decide whether a given domain equation holds in a grammar.",
        "We know by the reductions that we can assume this grammar to be unary.",
        "Now take an equation 0 = e. Suppose this equation is not in the theory and we have a countermodel.",
        "This countermodel is a non-branching labelled tree T a node x such that 5T(0) bi (e)z.",
        "Let Sf(0) denote the set of sub formulas of 0 and SIM the set of subformulas of C. Put S = ff5(z)19 E SAD) U Sf(e)}.",
        "S is certainly finite and its cardinality is bounded by the sum of the cardinalities of SAD) and 51(e).",
        "Now let y, z be two points from S such that y < z and for all u such that y<u<zufl S. Let u1 and 142 be two points such that y < ui < u2 < z and such that u1 and u2 have the same label.",
        "We construct a new labelled tree U by dropping all nodes from ui up until the node immediately below u2 The following holds of the new model.",
        "(i) It is a tree generated by G and (ii) Ou(0)z 0 6u (e).",
        ".",
        "Namely, if w u1 then 2(141) * 2(w) is a transition of G, hence 1(142) 1(w) is a transition of 6 as well because f(ui) = 2(u2); and so (i) is proved.",
        "For (ii) it is enough to prove that for all g E SAD) U Me) the value f(x) in the new model is the same as the value f9(x) in the old model.",
        "(Identification is possible, because these points have not been dropped.)",
        "This is done by reduction on the structure of g. Suppose then that g = Ij A I and f(z) = Mx) as well as fax) = ft(x); then f(z) = minff(x), f(x)} = minal(x), Mx)} = fa(x).",
        "And similarly for g = b V 1.",
        "By the normal form theorem we can assume g to be a disjunction of conjunctions of chains, so by the previous reductions it remains to treat the case where g is a chain.",
        "Hence let g = a o I.",
        "We assume f(z) = Mx) =: y.",
        "Let z := fg(x).",
        "Then if y < r, y < z and else y = z.",
        "By construction, z is the first node above y to be of category a and z E S, by which z is not dropped.",
        "In the reduced model, z is again the first node of category a above y, and so f(z) = A(y) = z, which had to be shown.",
        "Assume now that we have a tree of minimal size generated by 6 in which 0 = e does not hold.",
        "Then if y, z ES such that y < z but for nouESy<u< z, then in between y and z all nodes have different labels.",
        "Thus, in between y and z sit no more points than there are atoms in C. Let this number be n; then our model has size <n S. Now if we want to decide whether or not 0 = e is in Eq(G), all we have to do is to first generate all possible branches of trees",
        "of length at most n x (WM+ liSf(e))+ 2 and check the equation on them.",
        "If it holds everywhere, then indeed 0 = e is valid in all trees because otherwise we would have found a countermodel of at most this size.",
        "Theorem 14 Ills decidable whether or not = e E Eq(G).",
        "These theorems tell us that there is nothing dangerous in using domains in grammar as concerns the question whether the predictions made by this theory can effectively be computed; that is, as long as one sticks to the given format of domain constructions, it is decidable whether or not a given grammatical theory makes a certain prediction about domains."
      ]
    },
    {
      "heading": "4 Implementations",
      "text": []
    },
    {
      "heading": "4.1 Problems of Implementations",
      "text": [
        "The aim set by our theory is to reduce all possible nearness conditions of grammar to some restrictions involving command relations.",
        "Thus we treat not only binding theory or case theory but also restrictions on movement.",
        "Even though [Barker and Pullum, 1990] did not think of movement and subja, cency as providing cases for command relations, the fact that nearness conditions are involved clearly indicates that the theory should have something to say about them.",
        "However, there are various obstacles to a direct implementation.",
        "The theory of command relations is not directly compatible with standard nearness relations in GB.",
        "A command relation as defined here depends in its size only of the isomorphism type of the linear structure above the node x.",
        "So, typical definitions such as those involving the notions of being governed, being bound, having an accessible subject fail to be of the kind proposed here because they involve a node that stands in relation of c-command rather than domination.",
        "Nevertheless, if GB would be spelt out fully into a boolean grammar, far more labels have to be used than appear usually on trees displayed in GB books.",
        "The reason is that while context-free grammars by definition allow no context to rule the structure of a local tree, in GB the whole tree is implicitly treated as a context.",
        "But if it is true that the context for a node reduces to nodes that are C commanding, it is enough to add for certain primitive labels X another label OX which translates as one of my daughters is X.",
        "Here, OX is not necessarily understood to be a new label but a specific label that guarantees one of the daughters to be of category X.",
        "However, 'modals' such as 0 are somewhat whimsical creatures.",
        "Sometimes, OX is an already existing category, for example 0IP can (with the exception of exceptional case marking constructions) be equated with C'.",
        "On other occasions, however, we need to incorporate them into our grammar; prominent modals are SLASH : X, which has the meaning somewhere below me is a gap of category X and AGR : X which says this sentence has a subject of category X.",
        "If a context-free rendering of phrase structure is done properly (as for example in [Gazdar et al., 1985]) a single entry such as V must be split into a vast number of different symbols so we can reasonably assume that our grammar is rich enough to have all the OX for the X we need; otherwise they must be added artificially.",
        "In that case many of the standard nearness relations can be directly encoded using command relations.",
        "A second problem concerns the role of adjunction in the definition of subjacency.",
        "If the domain of movement for a node (that is, the domain within which the antecedent has to be found) is tight, then no iteration of movement leads to escaping the original domain.",
        "So, the domain for movement must be large.",
        "But it cannot be too large either because we loose the necessity of free escape hatches (spec of comp, for example).",
        "The typical definitions of subjacency lead to domains that are just about right in size.",
        "However, the dilemma must be solved that after moving to spec of comp, an element can move higher than it could from its original position.",
        "Different solutions have been offered.",
        "The most simple is standard 2-node subjacency which is KOMMAND 0 KOMMAND.",
        "This domain indeed allows this type of cyclical movement; cyclic movement from spec of comp to spec of comp is possible but only to the next spec of comp.",
        "However, due to it's shortcomings, this notion has been criticised; moreover, it has been felt that 1-node subjacacency should be superior, largely because of the slogan 'grammar does not count'.",
        "Yet, tight domains don't do the jobs and so tricks have been invented.",
        "[Chomsky, 1986] formulated rather small domains but included a mechanism to escape them by creating 'grey zones' in which elements are neither properly dominated by a node nor in fact properly non-dominated.",
        "This idea has caught on (for example in [Sternefeld, 1991]) but has to be treated cautiously as even the simplest notions such as category, node etc.",
        "receive new interpretations because nodes are not necessarily identical with occurrences of categories as before.",
        "A reduction to standard notions should certainly be possible and desired without necessarily banning adjunction."
      ]
    },
    {
      "heading": "4.2 The Koster Matrix",
      "text": [
        "As [Koster, 1986] observed, grammatical relations are typically relations between a dependent element b and an antecedent a: a 6 [Koster, 1986] notes four conditions on such configurations.",
        "a. obligatoriness",
        "b. uniqueness of the antecedent c. c-command of the antecedent d. locality If these conditions are met then this relation has the effect share property This has to be understood as follows.",
        "(a.)",
        "and (b.)",
        "express nothing but that b needs one and only one antecedent.",
        "This antecedent, a, must c-command 6.",
        "Finally, (d.) states that a must be found in some local domain of b.",
        "Of course, this domain is language specific as well as specific to the syntactic construction, i. e. the category of 6 and a.",
        "Likewise, the property to be shared depends on the category of a and b.",
        "The locality restriction expresses that a is found within the R-domain of b.",
        "This relation it is in the unmarked case defined as follows.",
        "Definition 15 a is locally accessible' to 6 if a < #, where # is the least maximal projection containing 6 and a governor of b.",
        "[Koster, 1986] assumes that greater domains are formed by licensed extensions.",
        "These extensions are marked constructions; while all languages agree on the local accessibilityl as the minimal domain within which antecedents must be found, larger domains may also exist but their size is language and construction specific.",
        "Nevertheless, the variation is limited.",
        "There are only three basic types, namely locally accessible' for i = 1,2,3.",
        "Definition 16 a is locally accessible2 to b if < 0, where is the least maximal projection containing 6, a governor for b and some opacity element .",
        "a is locally accessible3 to 6 if there is a sequence f3i, 1 < n, such that is locally accessible2 from b and #i+i is locally accessible2 from Pi.",
        "The opacity elements are drawn from a rather limited list.",
        "Such elements are tense, mood etc.",
        "A well-known example are Icelandic reflexives whose domain is the smallest indicative sentence."
      ]
    },
    {
      "heading": "4.3 The Command Relations of Koster's Matrix",
      "text": [
        "The local accessibility relations certainly are command relations in our sense.",
        "The real problem is whether they are definable using primitive labels of the grammar.",
        "In particular the recursiveness of the third accessibility makes it unlikely that we can find a definition in terms of A, V, o.",
        "Yet, if it were really an arbitrary iteration of the second accessibility relation it would be completely trivial, because any iteration of a command relation over a tree is the total relation over the tree.",
        "Hence, there must be something non-trivial about this domain; indeed, the iteration is stopped if the outer is ungoverned.",
        "This is the key to a non-iterative definition of the third accessibility relation.",
        "Let us assume for simplicity that there is a single type of governors denoted by GOV and that there is a single type of opacity element denoted by OPY.",
        "The first hurdle is the clarification of government.",
        "Normally, government requires a governing element, i. e. an element of category GOV that is close in some sense.",
        "How close, is not clarified in [Koster, 1986].",
        "Clearly, by penalty of providing circular definitions, closeness cannot be accessibility'; really, it must be an even smaller domain.",
        "Let us assume for simplicity that it is sisterhood.",
        "If then we introduce the modal kIX to denote one of my sisters is of category X, being governed is equal to being of category ['GOV.",
        "Likewise we will assume that the opacity element must be in c-command relation to 6.",
        "We are now ready to define the three accessibility relations, which we denote by LA', LA2 and LA3.",
        "(Observe that binds stronger than 0.)",
        "For a proof consider a point x of a labelled tree T. Let g denote the smallest node dominating both x and its governor and let m be the smallest maximal projection of g. Then x <g < m. So two cases arise, namely g = m and g < m. In each cases LA' picks the right node.",
        "Likewise, if o denotes the smallest element containing x and a opacity element that c-commands x, then x < o.",
        "Three cases are conceivable, o < g, o = g and o > g. However, if government can take place only under sisterhood, o < g cannot occur.",
        "So x < g < o < m. For each of the four cases LA2 picks the right node.",
        "Finally, for LA3 there is an extra condition on m that it be ungoverned.",
        "Notice that our translation is faithful to Koster's definitions only if the domains defined in [Koster, 1986] are monotone.",
        "This is by no means trivial.",
        "Namely, it is conceivable that a node has an ungoverned element y locally accessible2, while the highest locally accessible2 node, z, is governed.",
        "In that case (ignoring the opacity element for a moment) the domain of local accessibility3 of y is z while the domain of x is strictly larger.",
        "We find no answer to this puzzle in the book because the domains are defined only for governed elements.",
        "But it seems certain that the monotone definition given here is the intended one.",
        "It should be stressed that GOV and OPY are not specific labels but variables.",
        "Their value may change from situation to situation.",
        "Consequently, the local accessibility relations are parametrized with respect to the choice of particular governors and particular"
      ]
    },
    {
      "heading": "4.4 Translating Koster's Matrix into Rules",
      "text": [
        "In a final step we show how the nearness conditions of the Koster Matrix can be rewritten into rules of a context-free grammar.",
        "To be more precise, we show how they can be implemented into any given boolean cfg.",
        "The booleanness, of course, is not essential but is here for convenience.",
        "We noticed earlier that the domains in GB really are for the purpose of introducing some limited forms of context-sensitivity.",
        "If two nodes relate via some dependency relation R then Koster assumes that a certain property is shared.",
        "But context-free grammars do in principle not allow such a sharing except between mother and daughters and between sister nodes.",
        "Nevertheless, as we do not require all properties to be shared but only some it is possible to enrich the grammar in such a way that nodes receive relevant information about parts of the structure that normally cannot be accessed.",
        "We will show how.",
        "First, we will assume that share property is to be understood as a dependency in the labellings between two elements.",
        "We simplify this by assuming that there are special features PRPi, i < n, of unspecified nature whose instantiation at the two nodes, b and a, is somehow correlated.",
        "Since the dependent element is structurally lower than the antecedent, and since generation in cfg's is top to bottom, we assume that it is the dependent element that has to set the PRPi according to the way they are set at the antecedent.",
        "The best way to implement this is by a function f that for every assignment prp of the primitive labels at the antecedents gives the labelling f(prp) which the dependent element must satisfy.",
        "In order to be able to achieve this correlation in a context-free grammar, the dependent element needs to know in which way the atoms PRPi have been set at a.",
        "Thus the problem reduces to a transfer of information from a to b.",
        "If we generate only fully labelled trees the problem is precisely to transfer n bits of information from a to b.",
        "The content of this information is of course irrelevant for the formalization.",
        "To begin with, we need to be able to recognize antecedent and dependent element by their category.",
        "We do this here by taking two labels ANT and DEP with obvious meaning.",
        "Furthermore, one of our tasks is to ensure that the labels OX and 11X are correctly distributed.",
        "Notice, by the way, that it is only for special choices of X that we need these composite elements, so there is nothing recursive or infinite in this procedure.",
        "For the sake of simplicity we assume the grammar to be in Chomsky Normal Form; that is, we only have rules ot type X YZ, X Y, X ^ 0 for X, Y and Z atoms or = (see [Harrison, 1978]).",
        "For any rule p = A BC and any X we distribute the new labels OX and LIX as follows.",
        "If B <X but C X then we replace p by",
        "After having inserted enough OX and 11X we can proceed to the domains of accessibility.",
        "The general problem is as said above, the transfer of information from a to b.",
        "The problem is attacked by introducing more modal elements.",
        "Namely, for certain g and certain labels X we introduce the new label (g)X.",
        "Its interpretation is an element of label X is in my g domain and neither do I dominate it nor am I dominated by it.",
        "If we succeed in distributing these new labels according to their intended interpretation we can code the Koster Matrix into the grammar.",
        "We show the encoding for (F)Y.",
        "It is then more or less evident how (g)X is encoded for a chain g because (b o F)X = (b)(F)X, just as in modal logic.",
        "Now for (F)Y there are two cases.",
        "(i) The mother node is of category (F)Yn -F. Then the information (F)Y must be passed on to all daughters.",
        "(ii) The mother is of category -(F)Y U F. Then a daughter is (F)Y if and only if it has a sister of category Y.",
        "Thus at all daughters we simply instantiate (F)Y 4-* kiY.",
        "It should be quite clear that by a suitable choice of (g)X to be added a dependent element b will have access to the information that it has an antecedent in its domain of local accessibility'.",
        "If it needs to know what category this antecedent has, this information has to be supplied in tandem with the mere property that needs to be shared.",
        "One snag remains; namely, it may happen that there are more than one antecedent of required type.",
        "In that case we need to manipulate the rules of the grammar as follows.",
        "As long as we have an element of category ANT we suppress any other antecedents of category ANT within the same domain.",
        "This might be not entirely straightforward, but to keep matters simple here we assume that the grammar takes care of that.",
        "We show now how the translation is completed.",
        "For accessibility' we add the following boolean axiom to the grammar (that is, we 'kill' all rules that do not comply with this axiom): (BAR:2)(ANT n prp) n ti GOV n DEP.",
        "* .f(prp) By choice of the interpretation, this axiom declares that a node which is governed and dependent and has an anetecdent within the next maximal projection must be of category f(prp) if its (unique) antecedent is of category prp.",
        "The uniqueness is assumed here to be guaranteed by the grammar into which we encode.",
        "Furthermore, note that the assumption that government takes place under sisterhood results in a significant simplification.",
        "Limitations of space forbid us to treat the more general case, however.",
        "For accessibility2 this axiom is added instead (OPY o BAR:2 A OPY BAR:2)(ANT n prp) n4GOV n DEP.",
        "* .f(prp) Finally, for accessibility3 , we have to replace BAR:2 by BAR:2 n 4 GOV.",
        "More details can be found in [Kracht, 1993].",
        "The upshot of this is the following.",
        "Suppose that a grammar of some language consists of a basic generative component in form of a cfg G and a number of Koster Matrices as additional constraints on the structures.",
        "If the number of matrices is finite, then finitely many additional labels suffice to create a cfg G+ from the original grammar that guarantess that it's output trees satisfy the local conditions of G as well as the nearness conditions imposed by the Koster Matrices.",
        "Upper bounds on the number of labels of G+ (depending both on G and the additional matrices) can be computed as well."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "I wish to thank A. and J. for their moral support and F. Wolter for helpful discussions."
      ]
    }
  ]
}
