{
  "info": {
    "authors": [
      "Emmanuel Roche"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C94-1071",
    "title": "Two Parsing Algorithms by Means of Finite State Transducers",
    "url": "https://aclweb.org/anthology/C94-1071",
    "year": 1994
  },
  "references": [
    "acl-C92-1025",
    "acl-E93-1046",
    "acl-E93-1059",
    "acl-P91-1032"
  ],
  "sections": [
    {
      "text": [
        "The parser in term of rational transduction In our parser, the grammar is a rational transduction f, represented by a transducer T. The input of the parser is the set so containing as only element the input sentence bounded by the phrase marker [P], i.e. so = {[P] sentence [P]1.",
        "The analysis consists in computing si = f(so), s2 = f(si) until a fixed point is reached, i.e. sp = f(sp).",
        "The set s7, contains trees represented by bracketed strings, this set is the set of grammatical analysis of the sentence, it contains more than one element in the case of syntactically ambiguous inputs.",
        "Each set si is represented by a Directed Acyclic Graph (DAG) Ai, thus the computation consists in applying the transducer 7' on the DAGs A.",
        "We shall write it Ai+i T(Ai).",
        "In the next section we give two complete examples of that."
      ]
    },
    {
      "heading": "TWO SIMPLE EXAMPLES An example of a Top-Down analysis",
      "text": [
        "The graph on figure 1 describes the analysis of the sentence: Sj = John said that Mary left The graph on this figure has to be read in the following way: the input sentence is represented by the DAG A ion the upper left corner; the subset of the grammar required for the analysis of this sentence is the transducer Jon the right hand side of the figure 1.",
        "The analysis is then computed in the following way: we apply the transducer f to A1, that is we compute A2= f(A1) , this represents one step of a Top-Down analysis of the sentence.",
        "The box with a star inside represents this operation, namely applying a transducer to a DAG.",
        "If we then apply f to this result (i.e. A2), we obtain 11.34/12)= f 2 (AO represented under A2.",
        "If this operation is applied once more, one gets A4=f(A3)= f3(A1).",
        "This last result, A4, is a fixed point of the transducer f, i.e. ,f(A4)=A4.",
        "A4 is a DAG that represents a finite set Set(A4) of strings.",
        "Here, this set only contains one element, namely Scf(A4) = {(J ohn)NO(said) V 0(that(M ary)N 0(le f 1)V 0)T/tat Each element is a bracketed representation of an analysis.",
        "Here the analysis is unique.",
        "An example of a simultaneous Top-Down Bottom-Up analysis The previous example might give the impression that computing a fixed point of a transducer automatically leads to simulating a top-down context free analysis.",
        "However, we shall now see that using the flexibility of manipulating transducers, namely being able to compute the composition and the union of two transducers, allows a context sensitive parsing which is simultaneously Top-Down and Bottom-up with the possibility of choosing which kind of rule should be parsed Bottom Up.",
        "Suppose one wants to analyze the sentence 52 =Max bought a little bit More than five hundred .share certificates.",
        "Suppose one has the following small functions, each one being specialized in the analysis of an atomic fact (i.e. each function is a lexical rule): fi via little bit more than u/w (prod a little bit more than prod) w';C A* f23 : w five hundred w'w (nuns five hundred mini) w' where w E A* and w' C A* {NUMERAL}"
      ]
    },
    {
      "heading": "M E RAO",
      "text": [
        "13 : w share certificates so'7V (en share c.ertific.ates en) w' where w, w' E A* .14 : [11 711 bought w'[P][N w NI bought [N",
        "where w1, 502, 11)3, 11)4, w5 E f7: ww; w c A* (Dortz(f2Uf2W:sULIUJ.5)4 If we precompute the transducer representing the rational transduction f = (ft a f3 o f2 o fi) u (f5 o Is) U f7 then the analysis of the sentence is a two-step application of f, namely f( [P] Max bought a little bit more than live hundred share certificates [P]) Max NI bought [N (prod a little bit more than prod) (num five hundred num) (en share certificates cm) N]",
        "which is the analysis of the sentence'."
      ]
    },
    {
      "heading": "FORMAL DESCRIPTION The algorithm",
      "text": [
        "Formally, a transducer T is defined by a (3-uplet (A,Q,i, FAO where A is a finite alphabet, Q is a finite set, or states, i C Q is the initial state, F C Q is the set or terminal states, d the transition function maps Qx A to the set of subsets of Q and 6 the emission function maps Qx A xQ to A.",
        "The core of the procedure consists in applying it transducer to a FSA, the algorithm is well known, we give it here for the sake of readability.",
        "T. Namely 7' fired_i,ii T' ilf for each x E A* T(x) = x <4.",
        "T'(x)Far instance, if 7' is such that for each x E A ,(x) converges then T2 fixed-point T. The second approach is to try using a different representation of T or to apply it differently.",
        "In this section, we shall give an algorithm illustrating this second approach.",
        "The basic idea is to transform the finite-state transducer into a deterministic device called bimachine [1].",
        "We will detail that latter but, basically, a bimachine stands for a left sequential function (i.e deterministic from left to right) composed to a right sequential function (i.e. (leterministic from right to left).",
        "Such a decomposition always exists.",
        "The interest of this concept appears when one looks at how the algorithm ApplyTransducer performs.",
        "In fact the output DAG of this algorithm has a lot, of states that lead to nothing, i.e states that are not c.oaccessible, thus the PRUNE function (called on line 14 of the ApplyTransducer function) has to remove most of the states (around 90% in our parser of French).",
        "Let us for instance consider the following example: suppose the transducer T is the one represented figure 2 and that we want to compute 'I, (A) where A is the DAG given figure 2.",
        "It should be pointed out that both T,ta and Tb are deterministic in term of their input, i.e. their left labels, which was not the case to 7],.",
        "Just like for FSA, the fact that it is deterministic implies that it can be applied faster (and sometime much faster) than non deterministic devices, on the other hand the size of the bimachine might, be, in the worst case, exponential in term of' the original transducer.",
        "The following algorithm formalizes the analysis by inean of a bimachine7.",
        "A NALYSE_2(A, B, 712))"
      ]
    },
    {
      "heading": "IMPLEMENTATION AND RESULTS",
      "text": [
        "The main motivation for this work comes from the linguistic claim that the syntactic rules, roughly the sentence structures, are mostly lexical.",
        "The grammar of French we had at our disposal VMS so large that none of' the available parsers could handle it.",
        "Although the implemented part of the grammar is still incomplete, it, already describes 2,878 sentential verbs (canting from [6]), that is verbs that can take a sentence as argument, leading to 201,723 lexical rules', 1,359 intransitive verbs [2] leading to 3,153 lexical rules; 2,109 transitive verbs [3] leading to 9,785 lexical rules; 2,920 frozen expression (coining from [7]) leading to 9,342 lexical rules and 1,213 partly frozen adverbials leading to 5,032 lexical rules.",
        "Thus, the grammar describes 10,479 entries and 229,035 lexical rules.",
        "'Phis"
      ]
    },
    {
      "heading": "Abstract",
      "text": [
        "We present a new appr.oach, illustrated by two algorithms, for parsing not only Finite State Grammars but also Context Free Grammars and their extension, by means of finite state mach'ines.",
        "The basis is the computation of a fixed point of a finite-state function, i.e. a finite-state transducer.",
        "Using these techniques, we have built a program that parses French sentences with a grammar of more than 200,000 lexical rules with a typical response time of less than a second.",
        "The first algorithm computes a fixed point of a non-deterministic finite-state transducer and the second computes a fixed point of a ,deterministic bidirectional device called a birnachine.",
        "These two algorithms point out a new connection between the theory of parsing and the theory of representation of rational transductions."
      ]
    },
    {
      "heading": "INTRODUCTION",
      "text": [
        "Finite state devices have recently attracted a lot of interest in computational linguistics.",
        "Computational efficiency has been drastically improved for morphological analysis by representing large dictionaries with Finite State Automata (FSA) and by representing two level rules and lexical information with finite-state transducers [8, 4] More recently, [11] has achieved parsing with low level lexical sensitivity by means of linite state automata.",
        "Finite state approximation of context free grammars also proved both useful and efficient for certain application [9].",
        "One common motivation of all this work is to improve efficiency dramatically, both in terms of time and space.",
        "These results often provide programs orders of magnitude faster than more traditional implementations.",
        "Moreover, 'FfiAs are a natural way to express lexical sensitivity, which has always been it requirement in morphology and which has proved crucial in syntax.",
        "The grammar we used for French, called Lexicon Grammar (see [6] [7] [2] [3] [10] for instance), pushes the lexicalization very far and it is our belief that this lexical ization trend will amplify itself and that, it will result in grammars several orders of magnitude larger than today's representations.",
        "Tins uncovers the need for new methods that will be able to handle such large scale grammars.",
        "*Supported by a DRET-Ecole l'olytechnique contract, this work was done at the Institut Gaspard Monge and at the LA DL.",
        "However, a main drawback of the finite state approach to syntax is the difficulty of representing hierarchical data; this partly explains why PSA-based programs only do incomplete parsing.",
        "This paper presents a new parsing approach based on finite-state transducers, a device that has been used already in morphology [8] but not yet in syntax, that provides both hierarchical representations and efficiency in a simple and natural way.",
        "'Fite representation is very compact, this allows to implement, large lexical grammars.",
        "Two new parsing algorithms illustrate the approach presented here.",
        "The first one uses a finite state transducer and computes a fixed point.",
        "But finite state transducers, unlike FSAs, cannot be made deterministic; however, a bidirectional device called a bimachine [1] can indirectly make them deterministic.",
        "'Ibis leads to the second algorithm presented here.",
        "The very high efficiency of this approach can be seen in the experiments on French.",
        "Sentences can be parsed with a grammar contaiMng more than 200,000 lexical 'tilesthis grammar is, we think, the largest grarnmar ever implemented.",
        "grammar is represented by one transducer of 13,408 states and 47,1 lb transitions stored in 008K13.",
        "'[he following input Jean est agacii par le fait quo son ami , dans in erainte d'Citre puni parses parents, no lent nit pas avoin'i ses mauvaises notes.",
        "is parsed in the following way in 0.95s with a program implementing the ;iilgorithin A NA LYS .",
        "(N Jean )N est,illzVpp0 agacii par lejait_Qur to fait (Qui) quo (N son n ansi and )N , (A DV dans in crainto de (VOW NO (itre Sl1Vpp0 puni par (N ses n parent parents )N VOW) ADV) , leur #N1rum2 avoir nit (op #ne pas op) Sz.Vpp0 avonei (N ses mauvaistis note notes )N QuP) Typical tirne spending varies from 0.05 second for a ten words sentence to 5 seconds for a hundred words sentence under the current implementation.",
        "A key point about this method is that the time spending is quite insensitive to the size of the grammar, this is crucial for scaling up the program to much larger grammars.",
        "For instance the preceding example is analyzed in 0.93s (instead of 0.95s) for a grammar of half its size (around 100,000 lexical rules).",
        "The coverage of this grammar still has to be extended, not all data we had at our disposal are yet encoded in the transducer (around 50% remain).",
        "Thus, given an arbitrary text, whereas most of the simple short sentences (live to fifteen words) are analyzed, the probability of having all lexical descripthois for longer sentences decreases rapidly.",
        "however, since all the lexical rules have been checked by hand one by ono, the accuracy of the analysis is higher than what can be expected with less lexicalized grammars.",
        "This means two things: whenever the analysis is found and unless the sentence is syntactically ambiguous, the analysis is unique, incorrect sentences are systematically rejected.",
        "Thus the set of sentence defined by the parser is a subset, of the set, of correct.",
        "sentences.",
        "This property is very difficult, to achieve through non or less lexicalized grammars."
      ]
    },
    {
      "heading": "CONCLUSION",
      "text": [
        "We have introduced two different parsing algorithms based on Finite-State Transducers illustrating a method capable of handling extremely large grammars very efficiently.",
        "We have shown how Finite-State Transducers can handle not only finite state gran-in-tars but also hierarchical descriptions expressed by context free based formalisms.",
        "90n an 11P720, this is the unique parsing, in other words the input is found not to be ambiguous.",
        "The time spending includes a morphological imalysis by mean of a dictionary lookup.",
        "This inflected form dictionary contains 000,000 entries ffil.",
        "The method has been successfully implemented for a French Lexicon-Grammar consisting of 200,000 lexical rules.",
        "The use of Finite-Statu Transducers yields a typical response time of a fractions of a second.",
        "We have also introduced a bidirectional parsing algorithm which further improves response time.",
        "These investigations have, we believe, important.",
        "implications for the implementation of large grammars.",
        "Moreover, it should be possible to improve these results appreciably by exploring different representations 1..ncl different decompositions of the grammar transducer with tools from the theory of Finite-State Transducers,"
      ]
    },
    {
      "heading": "References",
      "text": [
        "It should be pointed out that, given a Context-Free Grammar, it is always possible to build it transducer such that this method applies.",
        "In other words, any context free grammar can be translated into a transducer such that the algorithm parse the language described by this grammar.",
        "Moreover, the operation that transforms a Clql into its related transducer is itself a rational transduction.",
        "Although this cannot be develupped here due to the lack of place, this result comes naturally when looking at.",
        "the example of section 3,1.",
        "Moreover the method has much more expressive power than CFG, in fact computing a fixed point of a rational transduction has the same power as applying a Turing Machine (althought there [night not be any practical interest for that)."
      ]
    },
    {
      "heading": "THE SECOND ALGORITHM: A DETERMINISTIC DEVICE",
      "text": [
        "Given a transducer representing the grammar there are two different ways of obtaining new parsing programs.",
        "The first solution is to build a transducer T' equivalent to 7' from the view point of' their fixed points,"
      ]
    }
  ]
}
