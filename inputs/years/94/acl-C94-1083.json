{
  "info": {
    "authors": [
      "Reinhard Muskens"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C94-1083",
    "title": "Categorial Grammar and Discourse Representation Theory",
    "url": "https://aclweb.org/anthology/C94-1083",
    "year": 1994
  },
  "references": [],
  "sections": [
    {
      "heading": "CATEGORIAL GRAMMAR AND DISCOURSE REPRESENTATION THEORY",
      "text": []
    },
    {
      "heading": "Abstract",
      "text": [
        "In this paper it is shown how simple texts that can be parsed in a Lambek Categorial Grammar can also automatically be provided with a semantics in the form of a Discourse Representation Structure in the sense of Kamp [1981].",
        "The assignment of meanings to texts uses the Curry-Howard-Van Benthem correspondence."
      ]
    },
    {
      "heading": "0. INTRODUCTION",
      "text": [
        "In Van Benthem [1986] it was observed that the Curry-Howard correspondence between proofs and lambda terms can be used to obtain a very elegant and principled match between Lambek Categorial Grammar and Montague Semantics.",
        "Each proof in the Lambek calculus is matched with a lambda term in this approach, and Van Benthem shows how this lambda term can be interpreted as a recipe for obtaining the meaning of the expression that corresponds to the conclusion of the Lambck proof from the meanings of its constituent parts.",
        "Usually the semantics that is obtained in this way is an extensional variant of the semantics given in Montague [1973] (Hendriks [1993] sketches how the method can be generalized for the full intensional fragment).",
        "However, it is generally acknowledged nowadays that the empirical coverage of classical Montague Grammar falls short in some important respects.",
        "Research in semantics in the last fifteen years or so has increasingly been concerned with a set of puzzles for which Montague's original system does not seem to provide us with adequate answers.",
        "The puzzles I am referring to have to do with the intricacies of anaphoric linking.",
        "What is the mechanism behind ordinary cross-sentential anaphora, as in `Harry has a cat.",
        "He feeds it'?",
        "Is it essentially the same mechanism as the one that is at work in the case of temporal anaphora?",
        "How is it possible that in Geach's notorious 'donkey' sentences, such as `If a farmer owns a donkey, he beats it', the noun phrase 'a farmer' is linked to the anaphoric pronoun `it' without its having scope over the conditional and why is it that the noun phrase is interpreted as a universal quantifier, not as an existential one?",
        "While it has turned out rather fruitless to study these and similar questions within classical Montague Grammar (MG), they can be studied profitably within the framework of Discourse Representation Theory (DRT, see Heim [1982, 1983], Kamp [1981], Kamp & Reyle [1993]).",
        "This semantic theory offers interesting analyses of the phenomena that were mentioned above and many researchers in the field now adopt sonic form of DRT as the formalism underlying their semantical investigations.",
        "But the shift of paradigm seems to have its drawbacks too.",
        "Barwise [1987] and Rooth [1987], for example, observe that the new theory does not give us the nice unified account of noun phrases as generalized quantifiers that Monthgue's approach had to offer and it is also clear from Kamp & Rcyle [1993] that the stand a rd DRT treatment of coordination in arbitrary categories cannot claim the elegance of the Montagovian treatment.",
        "For the purposes of this paper a third consequence of the paradigm shift is important.",
        "The Curry-Howard-Van Benthem method of providing Lamb& proofs with meanings requires that meanings be expressed as typed lambda terms.",
        "Since this is not the case in standard DRT, the latter has no natural interface with Lambek Categorial Grammar.",
        "It seems then that the niceties of MG and DRT have a complementary distribution and that considerable advantages could be gained from merging the two, provided that the best of both worlds can be retained in the merge.",
        "In fact the last eight years have witnessed a growing convergence between the two semantic frameworks.",
        "The articles by Barwise and Rooth that were mentioned above are early examples of this trend.",
        "Other important examples are Zeevat [1989] and Groenendijk & Stokhof [1990, 1991].",
        "None of these papers gives the combination of DRT and type logic that is needed for attaching the first to Lambek's calculus, but in Muskens [forthcoming] it was shown how the necessary fusion can be obtained.",
        "The essential observation is that the meanings of DRT's discourse representation structures (boxes) are first order definable relations.",
        "They can thus be expressed within first order logic and within the first order part of ordinary type logic (i.e. the logic that was described in Church [1940], Gallin [1975] and Andrews [1986]).",
        "This allows us to",
        "Structures is just plain sailing.",
        "All that needs to be done is to define a function TYPE of the kind described in section 3 and to specify a lexicon for some fragment of English.",
        "The general mechanism that assigns meanings to proofs will then take care of the rest.",
        "The category-to-type function TYPE is defined as follows.",
        "TY PE(txt) TYPE(s) = s(st), TYPE(n) = a' and TYPE(en) = sr(s(st)), while TY PE(a / b) = TY PE(b \\ a) = (TYPE(b), TYPE(a)) in accordance with our previous requirement.",
        "It is handy to abbreviate a type of the form a 1(...(an(s(s1))...) as [a 1 ... an], so that the type of a sentence now becomes [] (a box!",
        "), the type of a common noun [sr] and so on.",
        "In Table 1 the lexicon for a limited fragment of English is given.",
        "The sentences in this fragment are indexed as in Barwise [19871: possible antecedents with superscripts, anaphors with subscripts.",
        "The second column assigns one or two categories to each word in the first column, the third column lists the types that correspond to these categories according to the function TYPE and the last column gives each word a translation of this type.",
        "Here P is a variable of type [sr], p and q are variables of type [], and v is a variable of type gr.",
        "Let us see how this immediately provides us with a semantics.",
        "We have seen before that our Lambek analysis of (1) provides us with a semantic recipe that is reprinted as (2) below.",
        "If we substitute the translation of a', AP 'APau I I] 1\"(u ; P(u1)) for D in the succedent of (2) and substitute Av[ man v] for P, we get a lambda term that after a few conversions reduces to (3).",
        "This can be reduced somewhat further, for now the merging lemma applies, and we get (4).",
        "Proceeding further in this way, we obtain (5), the desired translation of (1).",
        "A' man adores a2 woman",
        "(6) D,P,R,D',P'h- D(P)(Av.D/(1\")(Av'.14v/)(v))) (7) Arguil ; [I man ui] ; D'(1)(Av'.R(v)(111))) (8) AR[zei man ill] ; D/(P')(Xv/.1t(vp(u1))) (9) [it 1121 man up woman u2, iii, adores 1121 (10) Every' man adores a2 woman CO [I kill man nil[112I wifinan u2, u1 adores 112]] (8)D'(11(Ay'.D(P)(Av.1:(v')(v))) (9) [112 I woman u2, [it] I man u [I ii adores 11211 (10) A' man adores a2 woman.",
        "She2 abhors him (11) [u1 u2 I man up woman u2, It1 adores 1(2, u2 abhors III] (12) If a' man bores a2 woman she2 ignores him, (13) [ [u1 112 I man up woman u2, ill bores 11211 [ u2 ignores nil]",
        "The same semantical recipe can be used to obtain a translation for sentence (6), we find it in (7).",
        "But (1) and (6) have alternative derivations in the Lambek calculus too.",
        "Some of these lead to semantical recipes equivalent to (2), but others lead EXPR.",
        "a\" non every\" Mary\" he himn who man stinks adores if and or",
        "Note that axioms and the rules [IL] and [\\L] introduce new free variables.",
        "With respect to these some conditions hold.",
        "The first of these is that only variables that do not already occur elsewhere in the tree may be introduced.",
        "To state the second condition, we assume that some fixed function TYPE from categories to semantic types is given, such that TYPE(a / b) = TYPE(b 1a) = (TYPEN, TYPE(a)).",
        "The condition requires that the variable x in an axiom x x must be of TYPE(c) if x x corresponds to c c in the Lambek proof.",
        "Also, the variable w that is introduced in [/L] ([\\L]) must be of (TYPE(b), TYPE(a)), where a / b (b \\ a) is the active category in the corresponding sequent.",
        "With the help of these rules we can now build a tree of semantic sequents that is isomorphic to the Lambek proof in fig. 1; it is shown in fig. 2.",
        "The semantic sequent at the root of this tree gives us a recipe to compute the meaning of 'a man adores a woman' once we are given the meanings of its constituting words.",
        "Let us suppose momentarily that the translation of the determiner 'a' is given as the term A/\"AP]x(/\"(x) A P(x)) of type (0)((et)i) and that the remaining words are translated as the terms man, adores and woman of types et, e(et) and et respectively, then substituting AP 'AP3x(1\"(x) A P(x)) for D and for D' in the succedent and substituting man, adores and woman for 1', R and P' gives us a lambda term that readily reduces to the sentence Bx(man(x) ay(woman(y) A adores(y)(x))).",
        "The same recipe will assign a meaning to any sentence that consists of a determiner followed by a noun, a transitive verb, a determiner and a noun (in that order), provided that meanings for these words are given.",
        "For example, if we translate the word 'no' as XII 'AP -13.1.",
        "(1) '(x) A P (x)) and 'every' as APXPVx(1\"(x) P(x)), substitute the first term for D, the second for D ', and man, adores and woman for 11, R and F' as before, we get a term that is equivalent to -ax(man(x) V y(woman(y) adores(y)(x))), the translation of 'no man adores every woman'."
      ]
    },
    {
      "heading": "3. BOXES IN TYPE LOGIC",
      "text": [
        "In this section I will show that there is a natural way to emulate the DRT language in the first-order part of type logic, provided that we adopt a few axioms.",
        "This possibility to view DRT as being a fragment of ordinary type logic will enable us to define our interface between Categorial Grammar and DRT in the next section.",
        "We shall have four types of primitive objects in our logic: apart from the ordinary cabbages and kings sort of entities (type e) and the two truth values (type 0 we shall also allow for what I would like to call pigeon-holes or registers (type Jr) and for states (type s).",
        "Pigeon-holes, which are the things that are denoted by discourse referents, may be thought of as small chunks of space that can contain exactly one object (whatever its size).",
        "States may be thought of as a list of the current inhabitants of all pigeon-holes.",
        "States arc very much like the program states that theoretical",
        "to recipes that are equivalent to (8) (for more explanation consult Hendriks [1993]).",
        "If we apply this recipe to the translations of the words in (6), we obtain (9), the interpretation of the sentence in which a' woman has a wide scope specific reading and is available for anaphoric reference from positions later in the text.",
        "I leave it to the reader to verify that the little text in (10) translates as (11) by the same method (note that the stop separating the first and second sentences is lexicalised as an item of category s \\ (txt / s)), and that (12) translates as (13).",
        "A reader who has worked himself through one or two of these examples will be happy to learn from Moortgat [1988] that there are relatively fast Prolog programs that automatically find all semantic recipes for a given sentence."
      ]
    },
    {
      "heading": "5. FROM BOXES TO TRUTH CONDITIONS",
      "text": [
        "We now have a way to provide the expressions of our fragment automatically with Discourse Representation Structures which denote relations between states, but of course we are also interested in the truth conditions of a given text.",
        "These we equate with the domain of the relation that is denoted by its box translation (as is done in Groenendijk & Stokhof [19911).",
        "Theoretically, if we are in the possession of a box (b, we also have its truth conditions, since these are denoted by the first-order term )Aj(d)(i)(j)), but in practice, reducing the last term to some manageable first-order term may be a less than trivial task.",
        "Therefore we define an algorithmic function that can do the job for us.",
        "The function given will in fact be a slight extension of a similar function defined in Kamp & Reyle [1993], First some technicalities.",
        "Define adr(0), the set of active discourse referents of a box 0, by adr(ki = {U} and adr(0 ;IP), adr(0) adr(T).",
        "Let us define It 1 OF, the substitution of the type e term t for the discourse referent a in the construct of the box language r: by letting [t 1 aja = t and it 1 11.111' = a' if a' a; for type e terms we let [t / =1'.",
        "For complex constructs [1111.11' is defined as follows.",
        "The next definition gives our translation function from boxes and conditions to first-order formulae.",
        "The variable x that is appearing in the sixth and eighth clauses is supposed to be fresh in both cases, i.e. it is defined to be the first variable in some fixed ordering that does not occur (at all) in (/) or in 1/1.",
        "Note that the sequencing operation ; is associative: (1) ; (W; Zi) is equivalent with ((I) ; 11I) for all (.1), W and E. This means that we may assume that all boxes are either of the form [ y .1; 0 or of the form [ii 1 Y.1.",
        "We shall use the form I U; 0 to cover both cases, thus allowing the possibility that (/) is empty.",
        "If P is empty, 1/f denotes W.",
        "THEOREM.",
        "For all conditions y and boxes 0: I=Ax Ai4)1.",
        "= Ai3.0(i)(/)) I=Ax Ai/it = r"
      ]
    },
    {
      "heading": "REFERENCES",
      "text": [
        "computer scientists talk about, which arc lists of the current values of all variables in a given program at some stage of its execution.",
        "In order to be able to impose the necessary structure on our models, we shall let V be some fixed non-logical constant of type a(se) and denote the inhabitant of pigeon-hole u in state i with the type e term V(u)(i).",
        "We define to to be short for"
      ]
    }
  ]
}
