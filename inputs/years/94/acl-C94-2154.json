{
  "info": {
    "authors": [
      "Dale Gerdemann",
      "Paul John King"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C94-2154",
    "title": "The Correct and Efficient Implementation of Appropriateness Specifications for Typed Feature Structures",
    "url": "https://aclweb.org/anthology/C94-2154",
    "year": 1994
  },
  "references": [
    "acl-C90-2018",
    "acl-C94-2204"
  ],
  "sections": [
    {
      "text": [
        "if an object is of a certain kind then it deserves certain features with values of certain kinds, or it deserves certain (perhaps other) features with values of certain (perhaps other) kinds, or ... or it deserves certain (per] nips other) features with values of certain (perhaps other) kinds For example, the following VCR.",
        "stating that inverted verbs must be auxiliaries disjunctive: a verb 'oust have the features INV and Aux with values + and +, -- and +, or and respectively.",
        "Both of these forms of VCRs; may be expressed in a .formalism employing finite partial order (Type, L) of types under su bsumption , a finite set.",
        "Feat of features, and alt appropriateness partial function Approp: Type x Feat -- Type.",
        "Intuitively, the types formalize the notion of kinds of object, I HT each object, of type is also of type 1, and Approp(t, f) = ill' each object of type t deserves feature f with a, value of type 1'.",
        "We call such a. formalism an appropriateness formalisM.",
        "C^apenter's ALE and Clerdemann and COtz's Troll.",
        "are examples of implementations of appropriateness formalisins.",
        "Flow an appropriateness formalisin encodes a conjunctive VCR is obvious, but how it encodes a disjunctive VCR is less so.",
        "An example illustrates best, how it, is done.",
        "Suppose that H it p states tlitt, objects of type I deserve features f and g, both with boolean values and furthermore that the values of f and g must agree.",
        "p is the disjunctive VCR, if an object is of type then it deserves f with value and g with value +, or it deserves f with value and g with value To encode p, first introduce subtypes, and til Of tLI.",
        "11, In), one subtype for each disjunct in the consequent of p. encode the feature/value conditions in the first disjunct by putting Approp(P, ) = + and Approp(P,g)= +, and encode the feature/value conditions in the second disjunct by putting Approp(0,f) = and Approp(t\",g) .2 This approach makes two important closed-world type assumptions about the types that subsume no other types (henceforth species).",
        "First, the partition condition states that for each type 1, if an object is of type t then the object is of' exactly one species subsumed by I.",
        "Second, the all-or-nothing condition states that for each species s and feature f, either every or no object of species s deserves feature f.3 An appropriateness formalism such as A LE ([21, [3] that.",
        "does not.",
        "meet.",
        "both conditions nia.y not properly encode a disjunctive FCR.",
        "For example, consider disjunctive VCR.",
        "p .",
        "An appropriateness formalism may not properly encode that t. in represent, all and only the disju nets iii the consequent, of p without.",
        "the partition condition.",
        "An appropriateness formalism may not properly encode the feature/value conditions demanded by each disjunct in the consequent of p without the all-or-nothing coral ition .",
        "As indicated above, ALE is alt example of a. formalism that, does not meet both of these closed world assumptions.",
        "In ALE a feature structure is well-typed in.. for each arc in the feature structure, if the source node is labelled with type t, the target node is labelled with typeand the arc is labelled with feature f then Approp(t, .Furthermore, a feature structure is `This example FCIt is, for expository purposes, quite simple.",
        "The iiroblem of expressing ECIrs, however, is a real linguistic problem.",
        "As noted by Copestake et al.",
        "[l], it, was impossible to express even the simplest forms of FC Its iii their extended version of ALE.",
        "The basic principle of expressing FClts ids extends to Wits involving longer paths.",
        "For example, to ensure that for the type t, the path (f(/) takes a value subsumed by .9, one must first introduce the chain Approp(t, f) = u, Approp(tt, y) = a. Slick intermediate types cmild be introduced as it a a compilation stage.",
        "Note that.",
        "these closed world assumptions are explicitly made in Pollard Kt.",
        "Sag (forthcoming) [1.1].",
        "erty allows a disjunctive resolved feature structure to be represented more efficiently as a single untyped feature structure plus a set of dependent node labelings, which can be further compacted using named disjunction as in Gerdentann [6], DOrre k Eisele [12] or Maxwell k Kaplan [11].",
        "For example, suppose we type resolve the feature structure t[f bool, q: boo/1 Using our encoding of p. One can easily see that this feature struct tire has only two resolvants, which can be collapsed into one feature structure with named disjunction as shown below:",
        "We now have a reasonably comi)act representation in which the VCR.",
        "has been translated into a named disjunction.",
        "llowever, one should note that this disjunction is only present because the features f and q happen to be present.",
        "These.",
        "W. tures would need to be present ir we were enforcing Carpenter's [2] total well typing requirement, which says that features that are allowed must be present.",
        "But total well typing is, in fact, incompatible with type resolution, since there ninny well be au ink_ nite set of totally well typed resolvants of a feature structure.",
        "lot example, an under specified list structure could be resolved to a list of length 0, a list of length I, etc.",
        "Since total well typing is not required, we inay as well actively unfill redundant features.'",
        "In this example, it the f and g features are removed, we are left with the simple disjunction {I',/\"}, which is equivalent to the ordinary type Thus, in this case, no disjunction at all is required to enforce the V(.1Z.. All that is required is the 'Intuitively, features are redundant, if their values ;ire entirely predictable from the appropriateness specification.",
        "See GOtz [9], (;erdentatin I'd for a. more precise formulation.",
        "61.11 this case, it would also have been possible to main the original feature structure before re.",
        "solving.",
        "Unfortunately, however, this is not 11,,vays the case, as can be SCA211 iii the following example: tLf +11.1'1f +11 -> assumption that t will only be extended by unifying it with another (compacted) member of T)RYS.",
        "This, however, was a simple case in which_ all of the named disjunction could be removed.",
        "It would not have been possible to remove the features f and g if these features had been involved in reentrancies or if these features had had complex values.",
        "In general, however, our experience In as been that even with very complex type hierarchies and feature structures for upsc, very few named disjunctions are introduced.7 Tints, unification is generally no more expensive than unification with untyped feature structures."
      ]
    },
    {
      "heading": "4 CONCLUSIONS",
      "text": [
        "\\NTe have slioNvn in tins paper that the kind of constraints expressible by appropriateness conditions can be implentented in a. practical system employing typed feature structures and unification as tine primary operation on feature structures.",
        "what, of more complex type constraints involving reentrancies?",
        "Introducing reentrancies into constraints allows for the possibility of defining recursive types, such as the (lefinition of append in [I].",
        "Clearly the resolvants of such a recursive type could not lie precompiled as required in '1)4)11.",
        "One tnight, nevertheless, consider allowing reentrancy-constraints on 11011- reCtiriVelY defillCd tYlws.",
        "A Problem still arises; namely, if the resolvants of a feature structure included SOIlle with a particular reent rancy and sonic withollt, then the coundition tliat all resolvants have the same shape would no longer hold.",
        "(The would therefore need to employ a more complex version of named disjunction ([11], [12], [10]).",
        "It is questionable whether such additional complexity would be justified to experience is derived primarily from testing the Troll system on a rather large grammar for (lerman partial verb phrases, which was written by Erhard Hinrichs and Tsuneko Nakazawa and implemented by Delimit.",
        "IVIcurers."
      ]
    },
    {
      "heading": "ABSTRACT",
      "text": [
        "In this paper, we argue that type inferencing incorrectly implements appropriateness specifications for typed feature structures, promote a combination of type resolution and unfilling as a correct and efficient alternative, and consider the expressive limits of this alternative approach.",
        "Throughout, we use feature cooccurence restrictions as illustration and linguistic motivation."
      ]
    },
    {
      "heading": "1 INTRODUCTION",
      "text": [
        "Unification formalisms may be either untyped (DCGs, 1,F(J) or typed (nPsG).",
        "A major reason for adding types to a formalism is to express restrictions on feature cooccurences as in G PSG [5] in order to rule out nonexistant types of objects.",
        "For example, there are no verbs which have the feature +N.",
        "e simplest way to express such restrictions is by means of an appropriateness partial function Approp: Type x Feat Type.",
        "With such an appropriatenctss sitecification many such restrictions may he expressed, though no restrictions involving reentrancies may be expressed.",
        "In this paper, we will first in 2 survey the range of type constraints that may be expressed with just a type hierarchy and *1.she research presented in this paper was partially sponsored by Teilprojekt 134 \"Constraints on Grammar for Efficient Generation\" of the Sonderforschungsbereich 340 of the Deutsche Forschungsgemeinschaft.",
        "We would also like to thank Thilo C.IOtz for helpful comments on the ideas presented here.",
        "All mistakes are of course our own.",
        "11:1.",
        "Wilhelinstr.",
        "113, D-72074 Tiihingen, Germany, idg,KinglOsfs.nphil.uni-tuebingen.de.",
        "an appropriateness specification.",
        "Then in IA, we discuss how such type constraints inay be maintained under unification as exemplified in the natural language parsing/generation system Troll [7].1 Unlike previous systems such as ALE, Troll does not employ any type iffferencing.",
        "Instead, a limited amount of named disjunction ([11], [12], [6]) is introduced to record type resolution possibilities.",
        "The amount of disjunction is also kept small by the technique of unfitting described in [9].",
        "This strategy actually maintains appropriateness conditions in sonic cases in which a type inferencing strategy would fail.",
        "Finally, in we discuss the possibilities for generalizing this approach to handle a broader range of constraints, including constraints involving reentran cies ."
      ]
    },
    {
      "heading": "2 APPROPRIATENESS FORMALISMS",
      "text": [
        "As discussed in Cerderfla k. King [8], one can view appropriateness conditions as defining GPsG style feature cooccurence restrictions (Fells).",
        "In [8], we divided FCIts into conjunctive and disjunctive classes.",
        "A conjunctive FC11_ is a constraint of the following form: if an object is of a certain kind the ii it deserves certain features with values of certain kinds An FCR stating that a. verb must have v and N features with values 1 and respectively is an example of a conjunctive VCR.. A disjunctive WIZ, is of the form: The Troll System was implemented in Quintus Prolog by Dale Gerdenia.nn and Thilo (iota.",
        "handle this limited class of reentrancy- constraints.",
        "It seems then, that the class of constraints that can be expressed by appropriateness conditions corresponds closely to the class of constraints that can be efficiently precompiled.",
        "We take this as a justification for appropriateness formalisms in general.",
        "It makes sense to abstract out the efficiently processable constraints and then allow another mechanism, such as attachments of definite clauses, to express more complex constraints."
      ]
    },
    {
      "heading": "References",
      "text": [
        "well-typable if the feature structure subsumes a well-typed feature structure.",
        "In ALE, type inferencing is employed to ensure that all feature structures are welltypable---in fact, all feature structures are well typed.",
        "Unfortunately, weRtypability is not sufficient to ensure that disjunctive FCRs are satisfied.",
        "Consider, for example, our encoding of the disjunctive FCR.",
        "p and suppose that y is the feature structure t[f : +,g : ].ip is well-typed, and hence trivially well-typable.",
        "Unfortunately, co violates the encoded disjunctive FCR.p.",
        "The only way one could interpret 6 as well formed By contrast, the Troll system described in this paper has an effective algorithm for deciding well-formedness, which is based on the idea of efficiently representing disjunctive possibilities within the feature structure, Call a well-typed feature structure in which all nodes are labelled with species a resolved feature structure and call a set of resolved feature structures that have the same underlying graph (that is, they differ only in their node labellings) a disjunctive resolved feature structure.",
        "We write :FS, R.FS and DR.:FS for the collections of feature structures, resolved feature structures and disjunctive resolved feature structures respectively.",
        "Say that Fr' E 7?..FS is a resolvant of F E iff F and have the same underlying graph.",
        "and F subsumes P. Let type resolution be the total function R.: .7--\"S D7Z.FS such that RI') is the set of all resolvants of Guided by the partition and all-ornothing conditions, King [13] has formulated a semantics of feature structures and developed a notion of a satisfiable feature structure such that F E :FS is satisfiable iff R(F) 0.",
        "Gerdemann k King [8] have also shown that a feature structure meets all encoded FCRs iff the feature structure is satisfiable.",
        "The Troll system, which is based on this idea, effectively implements type resolution.",
        "Why does type resolution succeed where type inferencing fails?",
        "Consider again the encoding of p and the feature structure co.Loosely speaking, the appropriateness specifications for type t encode the part of p that states that an object of type t deserves features f and g, both with boolean values.",
        "However, the appropriateness specifications for the speciate subtypes and t\" of type t encode the part of p that states that these values must agree.",
        "Well-typability only considers species if forced to.",
        "In the case of y, well-typability can be established by considering type t alone, without the partition condition forcing one to find a well-typed species subsumed by t. Consequently, well-typability overlooks the part of p exclusively encoded by the appropriateness specifications for and t\".",
        "Type resolution, on the other hand, always considers species.",
        "Thus, type resolving y cannot overlook the part of p exclusively encoded by the appropriateness specifications for I' and t\"."
      ]
    },
    {
      "heading": "3 MAINTAINING APPROPRIATENESS CONDITIONS",
      "text": [
        "How may these DR:FS be used in an implementation?",
        "A very important prom erty of the class of DR.:FS is that they are closed under unification, i.e., if F and F' E DU?-.FS then F Li F' E DRTS.4 Given this property, it would in principle he possible to use the disjunctive resolved feature structures in an implementation without any additional type inferencing procedure to maintain satisfiability.",
        "It would, of course, not be very efficient to work with such large disjunctions of feature structures.",
        "These disjunctions of feature structures, however, have a singular property: all of the disjuncts have the same shape.",
        "The disjuncts differ only in the types labeling the nodes.",
        "This prop-iln fact, it can be shown that if 1 and 1,\" E :FS then R.( F) u AV\") = Unification of sets of feature structures is defined here in the standard way: SUS' = I P\" E S and I'm E and]P'' U F\")."
      ]
    }
  ]
}
