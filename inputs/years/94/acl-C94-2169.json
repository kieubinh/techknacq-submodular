{
  "info": {
    "authors": [
      "Takehito Utsuro",
      "Kiyotaka Uchimoto",
      "Mitsutaka Matsumoto",
      "Makoto Nagao"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C94-2169",
    "title": "Thesaurus-Based Efficient Example Retrieval by Generating Retrieval Queries from Similarities",
    "url": "https://aclweb.org/anthology/C94-2169",
    "year": 1994
  },
  "references": [
    "acl-C90-3044"
  ],
  "sections": [
    {
      "text": [
        "A thesaurus of nouns is regarded as a tree in which each node represents a semantic category.",
        "We define a thesaurus of nouns as a rooted directed tree (SC, Et) where SC is the set of semantic categories and Et C SC x SC is the set of directed edges: Et -c= { (Semi, Semi) I Semi, Semi E. SC }- A noun has one (or possibly inure) leaf semantic category in the thesaurus.",
        "At present we use an on-line thesaurus called Bunrui Got Hyou (13GH) (MAU, 1964).",
        "BCH has a six-layered abstraction hierarchy and snore than 60,000 Japanese words are assigned to the leaves."
      ]
    },
    {
      "heading": "2.2 Similarity Measure 2.2.1 Similarity of Semantic Categories",
      "text": [
        "Before we define the similarity of surface case structures, first we define the similarity of semantic categories in the thesaurus.",
        "We define the similarity sim,(Seml , Semi) of two semantic categories Semi and Sem2 as a monotonically increasing function of the most specific COMIT1011 layer insci(Seini, Semi) of Semi and Se71/2 as below: mseld 1.2 3 4 56 exact match sim, unilef 5 7 8 9 1011",
        "When calculating the similarity of two surface case structures eland ei, first eland ei are matched and the set of pairs of the corresponding cases, M (e , e2) is constructed.",
        "A case (phi, Sernii) of el corresponds to a case (pij, Semi)) of e2 only when the surface case markers and pij are the same and sims(Semli, Sem21) is defined.2 Let simpa(m) be the similarity of a pair in of corresponding cases, then the similarity sim.",
        "(e1,e2) of the two surface ease structures eland ei is defined as below:",
        "OM.",
        "xX kV 1,21 where 1MI is the number of the corresponding cases, and lel' iind lei I are the number of cases in eland e2 respectively.",
        "The first factor satisfies requirement 1), 21n Japanese, there exist several topic-marking post positional particles such as \"a (wa)\" and \"C (ma)\", and cases marked by those topic-marking post-positional par ticks could correspond to cases marked by case-marking post-positional particles such as \"4'.",
        "(ga-NOM)\" and (wo-ACC)\".",
        "Although this paper considers case-marking post-positional particles only, the implenumted system can appropriately calculate the similarity of surface case structures in which topic-marking pos(-positional particles appear.",
        "and the second satisfies 2).",
        "The third and the fourth satisfy 3).",
        "For example, the similarity of the surface case structures eland ei of Example 1 and 2 is calculated as follows."
      ]
    },
    {
      "heading": "3 Query Generation Retrieval",
      "text": [
        "Query generation retrieval has the following three features, 1) it generates retrieval queries from similarities, 2) efficient example retrieval through the tree structure of a thesaurus, 3) binary search along subsumption ordering of retrieval queries.",
        "Fig.",
        "l describes the framework of query generation retrieval.",
        "In query generation retrieval, first, given an input surface case structure, a retrieval query is generated for a certain similarity and then example surface case structures winch satisfy the similarity are retrieved from the example database.",
        "In order to generate a retrieval query which satisfy the given similarity requirement, it is necessary to enumerate all the possible pat terns of surface case structures which satisfy the given similarity requirement.",
        "We define similarity template which enumerates all the possible patterns of calculating similarity between two surface case structures and collect them in a similarity table.",
        "The similarity table is referred to when generating retrieval queries from the input surface case structure and a certain similarity.",
        "A retrieval query consists of the number of cases of the example to be retrieved, cases which the example to be retrieved should have, and semantic restrictions of case element nouns.",
        "In order to quickly retrieve examples which satisfy a retrieval query, for each surface Case marker we build a substructure of the whole thesaurus of nouns, which we call sub-thesaurus.",
        "Examples which satisfy the requirements in a retrieval query are quickly retrieved through the tree structure of those sub-thesauri."
      ]
    },
    {
      "heading": "3.2 Efficient Example Retrieval with Sub-Thesaurus",
      "text": [
        "Each element (p, Sem) in a case structure pattern esp requires that the example surface case structure has to have a case marked by p and the case element noun has to satisfy the semantic restriction of the semantic category Sem.",
        "Given the example database, it is possible to collect examples which satisfy the requirement (p, Sem) beforehand.",
        "For each case marker p, we collect all those sets of examples.",
        "Since all the semantic categories forms the whole thesaurus of nouns, non-empty sets of those collected examples also form a substructure of the whole thesaurus of nouns.",
        "We call it a sub-thesaurus for the case marker p. Fig. 2 shows an example of the sub-thesaurus for (no-ACC)\" case, supposing that the example database contains Example 1 and 2 in section 2.2.2.",
        "The most specific common layer of Sembook and Sern,,/ is the layer 5, and the example set is 1E01 or {Eg2} at layer 6 and 7(leaf), and {Egl,Eg2} above layer 6.",
        "Given a requirement (p, Sem) and a sub-thesaurus for p, examples which satisfy the requirement are quickly retrieved through the tree structure of the sub thesaurus in constant tune.",
        "Examples which satisfy all the requirements in esp are obtained as the intersection of all those sets of retrieved examples.",
        "The Size of A Sub-Thesaurus We estimate the size of all the sub-thesauri by the total number of elements in the nodes of those sub-thesauri.",
        "Let N be the total number of examples in the example database, d be the depth of the whole thesaurus of nouns, and im, be the maximuin case number.",
        "A case element noun in all example appears in a leaf node and all of the parent nodes of the leaf in a sub-thesaurus, thus appears d times.",
        "Since the number of case element nouns in an example is at most the number of case element nouns in the example database is at most N x /.,,, and the order of the size of all the sub-thesauri is at most N x x d, i.e., 0(N) ( tr,, x d is constant)."
      ]
    },
    {
      "heading": "3.3 Binary Search along Subsumption Ordering of Retrieval Queries",
      "text": [
        "respectively, and a subsumption relation of similarity templates holds between 11 and 12 as well.",
        "With the subsumption relations of retrieval queries and the sets of retrieved examples, it is possible to efficiently binary-search the set of examples to be retrieved by the most specific retrieval query.",
        "In the following, we describe how to organize the set of all the similarity templates as a similarity table and to realize the process of binary search of the most similar examples.",
        "First, the set of all the similarity templates is divided into a sequence Tn which is totally ordered by the following subsumption relation.",
        "Let ei be the input and Ti,T;(i < A bethe sets of similarity templates in the sequence T,,, Tio and EGi, EG1 be the sets of examples retrieved by all the similarity templates in Tj and Tj respectively.",
        "Then, Ti subsumes Ti if and only if, 1) EG subsumes EC7j, and 2) the sets of retrieved examples are totally ordered by similarity, i.e., Vei C EG Vei E EGj, < sim,(ei,e 1).",
        "In the case of the similarity measure defined in section 2.2.2, suppose that is 3, the length of the sequence 7 ,...,T,, in the similarity table is 7 when is 1, 9 when Ii,.",
        "is 2, and 11 when /i is 3.",
        "With this subsumptiort ordering, the most similar examples are obtained by finding the most specific Ti with non-empty EG and then finding the most similar examples in EG Since EG ek means EGj -= 0 for any j > a, thus search process can be efficiently realized by binary-searching the sequence , This sequence T1,T can be regarded as a table of similarity templates and is called similarity table.",
        "Fig.",
        "3 shows the binary search of the similarity table.",
        "Example space is partitioned by the subsumption relation.",
        "The most similar examples are found in the innermost non-empty set.",
        "This binary search method makes efficient retrieval possible whether the example"
      ]
    },
    {
      "heading": "Abstract",
      "text": [
        "In example-based NLP, the problem of computational cost of example retrieval is severe, since the retrieval time increases in proportion to the number of examples in the database.",
        "This paper proposes a novel example retrieval method for avoiding full retrieval of examples.",
        "The proposed method has the following three features, 1) it generates retrieval queries from similarities, 2) efficient example retrieval through the tree structure of a thesaurus, 3) binary search along subsumption ordering of retrieval queries.",
        "Example retrieval time drastically decreases with the method."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Since a model of machine translation (MT) called Translation by Analogy was first proposed in Nagao (1984), much work has been undertaken in example based NLP (e.g. Sato and Nagao (1990) and Kurohashi and Nagao (1993)).",
        "The basic idea of example based approach to NLP is to accomplish some task in NLP by imitating a similar previous example, instead of using rules written by human writers.",
        "Major processing steps of example-based approach are: 1) collect examples and the results of performing the task in a database, 2) given an input, retrieve similar examples from the database, 3) adapt the results of the similar examples to the current input and obtain the output.",
        "Compared with the traditional rule-based approach, example-based approach has advantages like: 1) it is easier to maintain the implemented system, since once the system is constructed, the performance can be improved just by adding new examples, 2) finer-grained syntactic and semantic discrimination can be expected just by adopting finer-grained similarity measure between the input and the example.",
        "In almost all the previous frameworks of example based NLP, it is necessary to calculate similarity values for all the examples in the database in order to find the most similar one, and this is called full retrieval.",
        "Usually, the computational cost of example retrieval causes a severe problem, because the retrieval time increases in proportion to the number of examples in the database.",
        "This paper proposes a novel method for avoiding full retrieval.",
        "The proposed method, which we call query generation retrieval, has the following three features, The authors would like to thank Prof. Y. Matsumoto of Nara Institute of Science and Technology, Dr. Y. Den and Dr. E. Sumita of ATR, and Mr. M. Shimbo of Kyoto University, for valuable comments on the draft of the paper.",
        "1) it generates retrieval queries from similarities, 2) efficient example retrieval through the tree structure of a thesaurus, 3) binary search along subsumption ordering of retrieval.",
        "queries.",
        "In this paper, we focus on retrieval of example surface case structures of Japanese sentences.",
        "The similarity value between the input and the example is calculated using existing hand-compiled thesaurus.",
        "In the following sections, the similarity measure of surface case structures is defined in section 2, then the framework of query generation retrieval is described in section 3.",
        "2 Similarity of Surface Case Structures",
        "As a similarity measure of surface case structures, we basically use the similarity measure in Kurohashi and Nagao (1993).",
        "Since the authors' similarity measure is intended for calculating similarity between the input surface case structure and a case frame with example nouns, we adjust it to the similarity between two surface case structures.",
        "The following describes the data structure of surface case structures and the thesaurus, and gives the definition of the similarity measure."
      ]
    },
    {
      "heading": "2.1 Data Structure",
      "text": [
        "In general, surface case structure of a Japanese sentence can be represented in feature-structure-like notation as below: pred:Ni ipred:N pred:V, p1:[ P sera: Semi j ' ser a : Sem In this notat.",
        "on, V is the verb, p , ..,p, are the Japanese surface case markers, N1, , N are case element nouns, and Semi, , Sem are the semantic categories of each case element in a thesaurus.",
        "In our task of retrieval of example surface case structures, the input and the examples to be retrieved have to have the same verb.",
        "Besides, the similarity value between the input and the example is dependent only on each semantic category.",
        "Thus, in this paper, we define the surface case structure e of a sentence as the set of pairs (p, Sem) where p is a surface case marker and Semis the leaf semantic category of the case element noun:1 c (Pt , Semi), , (Pa, Sem.)",
        "'In the remainder of this paper, for brevity's sake, we regard nouns as unambiguous and assume that a noun has only one leaf semantic category in the thesaurus, although nouns can be ambiguous and have more than one semantic category in the current implementation."
      ]
    },
    {
      "heading": "3.4 Evaluation",
      "text": [
        "The framework of query generation retrieval consists of three major components, i.e., the example database, the similarity table, and the set of sub-thesauri.",
        "Let N be the size of the example database, the order of the size of the similarity table is independent of N and that of the set of sub-thesauri is 0(N).",
        "Thus, the total order of the size of the system is 0(N).",
        "In order to evaluate the computational cost, we plot the computation time (in CPU time), increasing the number of examples N, and compare the result with a full retrieval program.",
        "The example database contains example surface case structures of the Japanese verb \"Vr; :5 (buy)\" and both programs retrieve the most similar examples from the example database, given an input surface case structure of the same verb ',a 5 (buy)\".",
        "For the query generation retrieval program, the maximum number 1,, of cases was 3.",
        "The full retrieval program calculates the similarity between the input and the example for all the examples in the example database, and retrieves the examples with the greatest similarity.",
        "Both programs are implemented in SICStus Prolog 2.1 on a SPARC station-10.",
        "Fig.",
        "4 illustrates the results.",
        "The computation time of the full retrieval program is proportional to N, while that of the query generation retrieval program is nearly constant.",
        "Thus, our query generation retrieval program achieved drastic improvement in decreasing computational cost compared with the full retrieval program."
      ]
    },
    {
      "heading": "4 Concluding Remarks",
      "text": [
        "This paper proposed a novel example retrieval method in example-based NLP, based-on generating retrieval queries from similarities.",
        "The proposed method is applicable to any other definitions of similarities in example-based NLP, if the following three requirements are satisfied, 1) the similarity is calculated based-on word sense similarities in a thesaurus, 2) the similarity can be defined as a function of a small number of factors, 3) each factor varies over not too many number of discrete values, or otherwise, continuous values can be transformed into not too many discrete values.",
        "In this paper, we restrict ourselves to the cases where examples have the same verb as input.",
        "However, similarities of verbs have to be considered and the example database has to contain examples of many verbs.",
        "Constructing sub-thesauri might be a problem in those cases, and the solution might be that all the examples are distributed into several sets of sub-thesauri.",
        "In applications like case-based reasoning (CBR) and information retrieval (IR), good examples do not necessarily have the greatest similarity and thus content based indexing methods are more effective.",
        "On the other hand, in example-based NLP, usually similarity measure is strictly defined and only the most similar examples are retrieved.",
        "The proposed query generation retrieval fits this feature of example-based NLP.",
        "The idea of generating retrieval queries from similarities is employed also in several other related fields such as translation aid system (Sumita and Tsutsumi, 1988) and CBR (Shimazu, Kitano and Shibata, 1993).",
        "Since the tasks of those works are different from ours, their formalizations are different from ours."
      ]
    },
    {
      "heading": "References",
      "text": [
        "In our query generation retrieval, it is necessary to control the retrieval process effectively by providing similarities in a certain order and to retrieve the most similar examples as fast as possible.",
        "In this paper, we use binary search along subsumption ordering of retrieval queries.",
        "It is possible to define a subsumption relation between two retrieval queries.",
        "Such subsumption relation of retrieval queries results in the subsumption relation of the sets of retrieved examples.",
        "This means that a set of retrieved examples subsumes another set if the retrieval query of the former set subsumes, or in other words, is more general than that of the latter set.",
        "With those subsumption relations of retrieval queries and the sets of retrieved examples, it becomes possible to efficiently binary-search the set of examples to be retrieved by the most specific retrieval query.",
        "Sections from 3.1 to 3.3 describe those three features and section 3.4 evaluates the framework."
      ]
    },
    {
      "heading": "3.1 Retrieval Query Generation from Similarities",
      "text": [
        "A retrieval query q is defined as a pair (/db,esP), where /db is the number of cases of the example to be retrieved, and csp is the requirement on cases and semantic restriction of case element nouns, which we call a case structure pattern.",
        "A case structure pattern is represented as a set of pairs (p, Sem) of a surface case marker p and a semantic category Sem, where Semis not necessarily a leaf semantic category.",
        "It requires that for each element (p, Sem) in csp, the example to be retrieved has to have a case marked by p and the case element noun has to satisfy the semantic restriction of the semantic category Sem.",
        "For example, for the verb \"Ti \") (buy)\", the following qi requires that the example to be retrieved should have three cases, the case element noun of \"hi' (ga-NOM)\" should be IN (he)\", and that of the \"7k (wo-ACC)\" case should belong to the semantic category of \"st\"(=.",
        "\"stationery\").",
        "qi retrieves examples like \"1/,7), g), F , , (He buys his son a notebook.)",
        "and 4, /01, WA, -)\"(He buys his daughter pencils.).",
        "qj = (3, (ga), Semhe), ( (wo), Semi)",
        "We introduce the notion of similarity template in order to enumerate all the possible patterns of calculating the similarity between two surface case structures.",
        "In the case of the similarity measure defined in section 2.2.2, a similarity template is represented as a 3-tupple: t = /db, CS) (ICSI < /db < lm) where /in and /db correspond to the number of cases of the input and of the example respectively, and they are supposed to be less than or equal to the predetermined maximum number 1m CS is the rnultiset of the similarities between corresponding case element nouns.",
        "For example, in the case of Example 1 and 2 in section 2.2.2, the result of similarity calculation is represented as a similarity template (2, 3, {11, 9}) (suppose that the former example is the input and the latter is from the example database).",
        "All the possible combinations of /in, idb, and CS can be enumerated beforehand without any inputs and examples if only the maximum case number 1, is given.",
        "Suppose that /ma,.",
        "is 3, the number of possible combinations of /in, /db, and CS is 203.",
        "Similarity templates are collected in the similarity table and referred to when generating retrieval queries from the input and a certain similarity.",
        "The following shows how to generate a retrieval query from an input ein and a similarity template t = (kink /A, CS).",
        "The retrieval query to be generated is denoted as q = (l db, csp), where /db corresponds to the number of cases in the example to be retrieved and is the same as /db.",
        "in I. CS in t is the multiset of the similarities between corresponding case element nouns.",
        "When constructing the case structure pattern csp from ein and CS, we use an injection to map each similarity sim in CS to a case (p, Semin) in ein.",
        "For each (p, S to which a similarity sim is mapped, a case (p, Sem) is collected into csp, where the semantic category Sem satisfies siras(Semin, S em) sim.",
        "For example, let the input ein be the surface case structure of Example 1 and the similarity template t be (2, 3, {11, 9}), then there exist two possible injections from CS into ein and two retrieval queries are generated as below (sint,(SemN,SemN) = x):"
      ]
    }
  ]
}
