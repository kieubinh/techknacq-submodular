{
  "info": {
    "authors": [
      "Arturo Trujillo",
      "Simon Berry"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C96-1019",
    "title": "Connectivity in Bag Generation",
    "url": "https://aclweb.org/anthology/C96-1019",
    "year": 1996
  },
  "references": [
    "acl-C92-2092",
    "acl-C94-2141",
    "acl-E89-1032",
    "acl-E95-1001",
    "acl-P95-1035"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper presents a pruning technique which can be used to reduce the number of paths searched in rule-based bag generators of the type proposed by (Poznadski et al., 1995) and (Popowich, 1995).",
        "Priming the search space in these generators is important given the computational cost of bag generation.",
        "'Hie technique relies on a connectivity constraint between the semantic indices associated with each lexical sign in a bag.",
        "Testing the algorithm on a range of sentences shows reductions in the generation time and the number of edges constructed."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Bag generation is a form of natural language generation in which the input is a bag (also known as a multiset: a set in which repeated elements are significant) of lexical elements and the output is a grammatical sentence or a statistically most probable permutation with respect to some language model.",
        "Bag generation has been considered within the statistical and rule-based paradigms of computational linguistics, and each has handled this problem differently (Chen and Lee, 1994; Whitelock, 1994; Popowich, 1995; Trujillo, 1995).",
        "This paper only considers rule based approaches to this problem.",
        "Bag generation has received particular attention in lexicalist approaches to MT, as exemplified by Shake-and-Bake generation (Beavers, 1992; Whitelock, 1994).",
        "One can also envisage applications of bag generation to generation from mini",
        "finally recursive semantic representations (Copes-take et al., 1995) and other semantic frameworks which separate scoping from content information (Reyle, 1995).",
        "In these frameworks, the unordered nature of predicate or relation sets makes the application of bag generation techniques attractive.",
        "A notational convention used in the paper is that items such as 'dog stand for simplified lexical signs of the form (Shieber, 1986):",
        "In such signs, the semantic argument will be referred to as an 'index' and will be shown as a subscript to a lexerne; in the above example, the index has been given the unique type 1.",
        "The term index is borrowed from IIPSG (Pol-lard and Sag, 1994) where indices are used as arguments to relations; however these indices may also be equated with discourse referents in DKr (Kamp and Reyle, 11993).",
        "As with most lexical-ist generators, semantic variables must be distinguished in order to disallow translationally incorrect permutations of the target bag.",
        "We distinguish variables by uniquely typing them.",
        "Two assumptions are made regarding lexical-semantic indexing.",
        "The indices involved in determining connectivity are specified as parameters for a particular formalism.",
        "For example, in HPSG,",
        "It will be shown that it is possible to exploit the connectivity Assumption 2 above in order to achieve a reduction in the number of redundant wfss constructed by both types of generator described in section 2."
      ]
    },
    {
      "heading": "3.1 Using Connectivity for Pruning",
      "text": [
        "Take the following bag:",
        "(corresponding to 'the big brown dog').",
        "Assume that the next wfss to be constructed by the generator is the NP 'the dog'.",
        "Given the grammar in Figure 1, it is possible to deduce that 'brown' can never be part of a complete NP constructed from such a substring.",
        "This can be determined as follows.",
        "If this adjective were part of such a sentence, 'brown' would have to appear as a leaf in some constituent that combines with 'the dog' or with a constituent containing 'the dog'.",
        "From the grammar, the only constituents that can combine with 'dog' are VP, Vtra and P. However, none of these constituents can have 'brown: as a leaf: in the case of P and Vtra this is trivial, since they are both categories of a different lexical type.",
        "In the case of the VP, 'brown]: cannot appear as a leaf either because expansions of the VP are restricted to NP complements with 2 as their semantic index, which in turn would also require adjectives within them to have this index.",
        "Furthermore, 'brownl' cannot occur as a leaf in a deeper constituent in the VP because such an occurrence would be associated with a different index.",
        "In such cases 'brown' would modify a different noun with a different index: Ex.",
        "3 fthei,dogi,with1,2,the2,brown2,collar21 A naive implementation of this deduction would attempt to expand the VP depth-first, left to right, in order to accommodate 'brown' in a complete derivation.",
        "Since this would not be possible, the NP 'the dog' would be discarded.",
        "This approach is grossly inefficient however.",
        "What is required is a more tractable algorithm which, given a wfss and its associated sign, will be able to determine whether all remaining lexical elements can ever form part of a complete sentence which includes that wfss.",
        "Note that deciding whether a lexical sign can appear outside a phrase is determined purely by the grammar, and riot by whether the lexical elements share the same index or not.",
        "Thus, a more complex grammar would allow 'the man' from the bag Ex.",
        "4 Itheionani,shavesâ€ž1,1,11iniselfil even though 'himself' has the same index as 'the man'."
      ]
    },
    {
      "heading": "3.2 Outer Domains",
      "text": [
        "The approach introduced here compiles the relevant information offline from the grammar and uses it to check for connectivity during bag generation.",
        "The compilation process results in a set of (Sign,Lex,Bindings) triples called outer domains.",
        "This set is based on a unification-based phrase structure grammar defined as follows:",
        "intuitively, the outer domains indicate that preterminal category Lex can appear in a complete sentence with subconstituent Sign, such that hex is not a leaf of Sign.",
        "Using ideas from data flow analysis (Kennedy, 1981), predictive parser constructions (Alio et al., 1986) and feature grammar compilation (Trujillo, 1994) it is possible to construct such a set of triples.",
        "Outer domains thus represent elements which may lie outside a subtree of category Sign in a complete sentential",
        "they would be indicated through paths such as SYNSEM:LOCAL:CONTENT:INDEX.",
        "To ensure that only connected lexical signs are generated and analysed, the following assumption must also be made: Assumption 3 A grammar will only generate or analyse connected lexical signs."
      ]
    },
    {
      "heading": "2 Bag Generation Algorithms",
      "text": [
        "Two main types of rule-based bag generators have been proposed.",
        "The first type consists of a parser suitably relaxed to take into account the unordered character of the input (Whitelock, 1994; Popowich, 1995; Trujillo, 1995).",
        "For example, in generators based on a chart parser, the fundamental rule is applied only when the edges to be combined share no lexical leaves, in contrast to requiring that the two edges have source and target nodes in common.",
        "The other type of generator applies a greedy algorithm to an initial solution in order to find a grammatical sentence (Poznaliski et al., 1995)."
      ]
    },
    {
      "heading": "2.1 Redundancy in Bag Generation",
      "text": [
        "One disadvantage with the above generators is that they construct a number of structures which need not have been computed at all.",
        "In building these structures, the generator is effectively searching branches of the search space which never lead to a complete sentence.",
        "Consider the the following input bag: dog, barked, the, brown, big} Previous researchers (Brew, 1992; Phillips, 1993) have noted that from such a bag, the following strings are generated but none can form part of a complete sentence (note that indices are omitted when there is no possibility of confusion; # indicates that the substring will never be part of a complete sentence): Ex.",
        "1 # the dog # the dog barked # the brown dog For simple cases in chart based generators such unnecessary strings do not create many problems, but for longer sentences, each additional substring implies a further branch in the search tree to be considered.",
        "Since the computational complexity of the greedy bag generator (Poznan ski et al., 1995) is polynomial (i.e. 0(0)), the effect of redundant, substructures is not as detrimental as for parser based generators.",
        "Nevertheless, a certain amount of unnecessary work is performed.",
        "To show tins, consider the test-rewrite sequence for Kxaniide I.",
        "Test: dog barked the brown big Rewrite: __ barked the dog brown big Test: barked (the clog) brown big Rewrite: (the dog) barked brown big Test: ((the clog) barked) brown big Rewrite: the brown dog barked __ big Test: ((the (brown clog)) barked) big Rewrite: the big (brown dog) barked Test: ((the (big (brown dog))) barked) (-terminate) in this sequence double underscore indicates the starting position of a moved constituent; the moved constituent itself is given in bold face; the bracketing indicates analysed constituents (for expository purposes the algorithm has been oversimplified, but the general idea remains the same).",
        "Now consider the step where 'brown' is inserted between 'the' and 'dog'.",
        "'lids action causes the complete structure for 'the dog barked' to be discarded and replaced with that for 'the brown dog barked', which in turn is discarded and replaced by 'the big brown dog barked'."
      ]
    },
    {
      "heading": "2.2 Previous Work",
      "text": [
        "A number of pruning techniques have been suggested to reduce the amount of redundancy in bag generators.",
        "Brew (1992) proposed a constraint propagation technique which eliminates branches during bag generation by considering the necessary functor-argument relationships that exist between the component basic signs of categorial signs.",
        "These relationships form a graph indicating the necessary conditions for a lexical item to form part of a complete sentence.",
        "Such graphs can be used to eliminate the substrings in Example Unfortunately the technique exploits specific aspects of categorial grammars and it is not clear how they may he used with other formalisms.",
        "Trujillo (1995) adapts some of Brew's ideas to phrase structure grammars by compiling Follow functions and constructing adjacency graphs.",
        "While this approach reduces the size of the search space, it does not prune it sufficiently for certain classes of modifiers.",
        "Phillips (1993) proposes handling inefficiency at the expense of completeness.",
        "His idea is to maintain a queue of modifiable constituents (e.g. Nis) in order to delay their combination with other constituents until modifiers (e.g. PPs) have been analysed.",
        "While practical, this approach can lead to alternative valid sentences not being generated."
      ]
    },
    {
      "heading": "3 Connectivity Restrictions",
      "text": [
        "In searching for a mechanism that eliminates un.",
        "necessary wfss, it will be possible to use indices in lexical signs.",
        "As mentioned earlier, these indices",
        "derivation.",
        "The following definition specifies how outer domains are used:",
        "such that Sign' :PathS unifies with Lex' :PathL.",
        "In compiling outer domains, inner domains are used to facilitate computation.",
        "Inner domains are defined as follows:",
        "The inner domains thus express all the possible terminal categories which may be derived from each nonterminal in the grammar.",
        "To be able to exploit connectivity during generation, inner and outer domains contain only triples in which Binds has at least one element.",
        "In this way, only those lexical categories which are directly connected to the sign are taken into account; the implication of this will become clearer later.",
        "As an example, the outer domain of NP as derived from the above grammar is:",
        "This set indicates that for any NP, the only terminal categories not contained in the subtree with root NP, and with which the NP shares a semantic index, are Vtra and P. For instance, the first triple arises from the following tree:"
      ]
    },
    {
      "heading": "3.3 Pruning through Outer Domains and Connectivity",
      "text": [
        "The pruning technique developed here operates on grammars whose analyses result in connected leaves.",
        "Consider some wfss W constructed from a bag B and with category C; this category, in the form of a sign, will include syntactic and lexical-semantic information.",
        "Such a wfss will have been constructed during the bag generation process.",
        "Now, either W includes all the input elements as leaves, in which case W constitutes a complete sentence, or there are elements in the input bag which are not part of W. In the latter case, for bags obeying Assumption 2, the following condition holds for any W that can form part of a complete sentence:",
        "To show that this condition indeed holds, consider a grammatical ordering of some input bag B, represented as the string W: By Assumption 2, the lexical elements in the bag, and therefore in any grammatical ordering of it, are connected.",
        "Now consider reducing this string using the production rule: -y6 to give the string W': a..D..w In this case, the signs in W' will also be connected.",
        "This can be shown by contradiction:",
        "The situation in string W' is analogous to that in Condition I.",
        "By identifying signs which are directly connected in E, it is possible to determine whether E is connected and consequently whether C can form part of a complete derivation.",
        "Instead of simply comparing the value of index paths, it is more restrictive to use outer domains since they give us precisely those elements which are directly connected to a sign and are in its outer domain."
      ]
    },
    {
      "heading": "3.4 Example",
      "text": [
        "Consider Example 2.",
        "To eliminate the wfss `the dog' from further consideration, a connected graph of lexical signs is constructed before generation is started (Figure 2).",
        "This graph is built by using the outer domain of each lexical element to decide which of the remaining elements could possibly share an index with it in a complete sentence.",
        "When a new wfss is constructed during generation, say by application of the modified fundamental rule or during the rewrite phase in a greedy algorithm, this initial graph is updated and tested for connectivity.",
        "If the updated graph is not connected then the proposed wfss cannot form part of a complete sentence.",
        "Updating the graph involves three steps.",
        "Firstly every node in the graph which is a leaf of the new wfss is deleted, together with its associated arcs.",
        "Secondly, a new node corresponding to the new wfss is added to the graph.",
        "Finally, a new arc is added to the graph between the new node and every other node lying in its outer domain.",
        "The updated (disconnected) graph that ensues after constructing 'the dog' is shown in Figure 3; this NP is therefore rejected."
      ]
    },
    {
      "heading": "4 Compiling Connectivity Domains",
      "text": [
        "For reasons of space, the computation of outer domains cannot be described fully here.",
        "The broad outline, however, is as follows.",
        "First, the inner domains of the grammar are calculated.",
        "This involves the calculation of the fixed point of set equations, analogous to those used in the construction of First sets for predictive parsers (Aho et al., 1986; Trujillo, 1994).",
        "Given the inner domains of each category in the grammar, the construction of the outer domains involves the computation of the fixed point of set equations relating the outer domain of a category to the inner domain of its sisters and to the outer domain of its mother, in a manner analogous to the computation of Follow sets.",
        "During computation, the set of Binds is monotonically increased as different ways of directly connecting sign and lexeme are found."
      ]
    },
    {
      "heading": "5 Results",
      "text": [
        "The above pruning technique has been tested on bags of different sizes including different combinations of modifiers.",
        "Sentences were generated using two versions of a modified chart parser.",
        "In one, every inactive edge constructed was added to the chart.",
        "In the other, every inactive edge was tested to see if it led to a disconnected graph; if it did, then the edge was discarded.",
        "The results of the experiment are shown in Table 1.",
        "The implmne.ntation was in Prolog on a Sun SparcStation 10; the generation timings do not include garbage collection time.",
        "The grammar used for the experiment consisted of simplified, feature-based versions of the II) rules in GPSG; there were 18 rides and 50 lexical entries.",
        "Compilation of the outer domains for these rules took approximately 37 Minutes, and the resulting set occupies 40K of memory.",
        "In the general case, however, the size of the outer domains is 0(n2), where n is the number of distinct signs; this number can be controlled by employing equivalence classes of different levels of specificity for pre-terminal and non-terminal signs.",
        "Only one reading was generated for each bag, corresponding to one attachment site for PPs.",
        "The table shows that the technique can yield reductions in the number of edges (both active and inactive) and time taken, especially for longer sentences, while retaining the overheads at an acceptable level."
      ]
    },
    {
      "heading": "6 Conclusion",
      "text": [
        "A technique for pruning the search space of a bag generator has been implemented and its usefulness shown in the generation of different types of constructions.",
        "'the technique relies on a connectivity constraint imposed on the semantic relationships",
        "expressed in the input bag.",
        "In order to apply the algorithm, outer domains needed to be compiled from the grammar; these are used to discard wfss by ensuring lexical signs outside a wfss can indeed appear outside that string.",
        "Exploratory work employing adjacency constraints during generation has yielded further improvements in execution time when applied in conjunction with the pruner.",
        "If extended appropriately, these constraints could prune the search space even further.",
        "This work will be reported at a later date."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "Two anonymous reviewers provided very useful comments; we regret not being able to do justice to all their suggestions."
      ]
    }
  ]
}
