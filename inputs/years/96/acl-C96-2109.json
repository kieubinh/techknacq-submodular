{
  "info": {
    "authors": [
      "Bill Keller"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C96-2109",
    "title": "An Evaluation Semantics for DATR Theories",
    "url": "https://aclweb.org/anthology/C96-2109",
    "year": 1996
  },
  "references": [
    "acl-A94-1045",
    "acl-E89-1009",
    "acl-E93-1012",
    "acl-E93-1026",
    "acl-J92-3001",
    "acl-P95-1008",
    "acl-P95-1011"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper describes an operational semantics for DATR theories.",
        "The semantics is presented as a set of inference rules that axiomatises the evaluation relationship for DATR expressions.",
        "The inference rules provide a clear picture of the way in which DATR works, and should lead to a better understanding of the mathematical and computational properties of the language."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "DATR was originally introduced by Evans and Gazdar (1989a; 1989b) as a simple, non-monotonic language for representing lexical inheritance hierarchies.",
        "A DATR hierarchy is defined by means of path-value specifications.",
        "Inheritance of values permits appropriate generalizations to be captured and redundancy in the description of data to be avoided.",
        "A simple default mechanism provides for concise descriptions while allowing for particular exceptions to inherited information to be stated in a natural way.",
        "Currently, DATR is the most widely-used lexical knowledge representation language in the natural language processing community.",
        "The formalism has been applied to a wide variety of problems, including inflectional and derivational morphology (Gazdar, 1992; Kilbury, 1992; Corbett and Fraser, 1993), lexical semantics (Kilgariff, 1993), morphonology (Cahill, 1993), prosody (Gibbon and Bleiching, 1991) and speech (Andry et al., 1992).",
        "In more recent work, DATR has been used to provide a concise, inheritance-based encoding of Lexicalized Tree Adjoining Grammar (Evans et al., 1995).",
        "There are around a dozen different implementations of DATR in existence and large-scale DATR lexicons have been designed for use in a number of natural language processing applications (Cahill and Evans, 1990; Andry et al., 1992; Cahill, 1994).",
        "A comprehensive, informal introduction to DATR and its application to the design of natural language lexicons can found in (Evans and Gazdar, 1996).",
        "The original publications on DATR sought to provide the language with (1) a formal theory of inference (Evans and Gazdar, 1989a) and (2) a model-theoretic semantics (Evans and Gazdar, 1989b).",
        "Unfortunately, the definitions set out in these papers arc not general enough to cover all of the constructs available in the DATR language.",
        "In particular, they fail to provide a full and correct treatment of DATR's notion of 'global inheritance', or the widely-used `evaluable path' construct.",
        "A denotational semantics for DATR that covers all of the major constructs has been presented in (Keller, 1995).",
        "However, it still remains to provide a suitably general, formal theory of inference for DATR, and it is this objective that is addressed in the present paper."
      ]
    },
    {
      "heading": "2 Syntax of DATR Theories",
      "text": [
        "Let NODE and ATOM be finite sets of symbols.",
        "Elements of NODE are called nodes and denoted by N. Elements of ATOM are called atoms and denoted by a.",
        "Elements of ATOM* are called values and denoted by a, )3, 7.",
        "The set DESC of DATR value descriptors (or simply descriptors) is built up from the nodes and atoms as shown below.",
        "En the following, sequences of descriptors in DESC* are denoted 0, 7/).",
        "1. a E DESc for any a E ATOM 2.",
        "For any N E NODE and 0 E DESC*:",
        "Elements of DESC are either atomic descriptors (1) or else inheritance descriptors (2).",
        "Inheritance descriptors are further distinguished as being local (unquoted) or global (quoted).",
        "For 0 E DESC* a sequence of descriptors, an expression (q) is called a path descriptor.",
        "When each element of 0 is atomic, then (0) is called a path, and denoted P. For N a node, P a path and 0 a (possibly empty) sequence of value descriptors, an equation of the form N : P 0 is called a (definitional)",
        "sentence.",
        "Informally, N : P (I) specifies a property of the node N, namely that the value of the path P is given by the sequence of value descriptors (b.",
        "A DATR theory T is a finite set of definitional sentences subject to the following requirement of functionality: if N : I' == c T N : P ==11) T then 0 =1/) Functionality thus corresponds to a semantic; requirement that node/path pairs are associated with (at most) one value."
      ]
    },
    {
      "heading": "3 Inference in DATR",
      "text": [
        "The problem of constructing an explicit theory of inference for DATR was originally addressed in (Evans and Gazdar, 1989a).",
        "In this work, an attempt is made to set out a logic of DATR statements.",
        "Consider for example the following rule of inference, adapted from (Evans and Gazdar, 1989a).",
        "The premises are definitional sentences which can be read: \"the value of path 1' at node N1 is (inherited from) the value of path 1'2 at N2\" and \"the value of path 12 at node N2 is , respectively.",
        "Given the premises, the rule licences the conclusion \"the value of path P1 at node Ni is a\" .",
        "Thus, the rule captures a logical relationship between DATR sentences.",
        "For a given DAT R theory T, rules of this kind may be used to deduce ;Additional sentences as theorems of T. In contrast, tire system of inference described in tins paper characterizes a relationship between DATR expressions (i.e. sequences of descriptors) and the values they may be used to compute.",
        "As an example, consider the following (simplified) rule of the operational semantics:",
        "The rule is applicable just in case the theory 7 contains a definitional sentence N : 1 ==== (1).",
        "it states that if the sequence of value descriptors 0 on the right of the sentence evaluates to (--->) the sequence of atoms then it may be concluded that the node/path pair Ni : Pi also evaluates to a.",
        "Rules of this kind may be used to provide an inductive definition of an evaluation relation between DATR expressions and their values.",
        "Both approaches to inference in DAT R aim to provide a system of deduction that makes it possible to determine formally, for a given DATR theory what follows from the statements in T. The primary interest lies in deducing statements about the values associated with particular node/path pairs defined within the theory.",
        "Unfortunately, the proof rules described in (Evans and Gazdar, 1989a) are not sufficiently general to support all of the required inferences, and it is not obvious that the approach can be extended appropriately to cover all of the available DATR constructs.",
        "A particular problem concerns DATR's notion of nonlocal or global inheritance.",
        "The value expressed by a global inheritance descriptor depends on more than just the properties of the nodes specified by the definitional sentences of a theory.",
        "In fact,, it only makes sense to talk about the value of a global descriptor relative to a given context of evaluation, or global context.",
        "Because the proof rules of (Evans and Gazdar, 1989a) just; talk about DATR sentences, which do not make explicit reference to context, it is not possible to give a satisfactory account of the global inheritance mechanism.",
        "The evaluation semantics described in the following sections provides a perspicuous treatment of both local and global inheritance in DAT R. The rules capture the essential details of the process of evaluating DATR expressions, and for tins reason should prove of use to the language implementer."
      ]
    },
    {
      "heading": "4 Local Inheritance",
      "text": [
        "As a point of departure, this section provides rules of inference for a restricted variant of DATR which lacks both global inheritance and the default mechanism.",
        "This variant will be referred to as DATRL.",
        "The syntax of DATRL is as given in section 2, except of course that the three forms of global inheritance descriptor are omitted.",
        "An example of a simple DATR t, theory is shown next.",
        "In this and all subsequent examples, a number of standard abbreviatory devices are adopted.",
        "Sets of definitional sentences with the same node on the left-hand side are grouped together and the node left implicit in all but the first given sentence.",
        "Also, a definitional sentence such as Dog : (cat) ----- Noun : (cat), where the path on the right is identical to that on the left, is written more succinctly as Dog : (cat) == Noun.",
        "Similarly, nodes on the right of a sentence are suppressed when identical to the node on the left.",
        "The DATRL theory defines the properties of two nodes, Noun and Dog.",
        "The definitional sentences specify values for node/path pairs, where the specification is either direct (a particular value is exhibited), or indirect (the value is obtained by local inheritance).",
        "For example, the value of the node/path pair Noun : (cat) is specified directly as noun.",
        "In contrast, the node/path pair Dog : (cat) obtains its value indirectly, by local",
        "inheritance from the value of Noun : (cat).",
        "Thus Dog : (cat) also has the value noun.",
        "The value of Dog : (plur) is specified indirectly by a sequence of descriptors Dog : (root) Noun : (suff).",
        "Intuitively, the required value is obtained by concatenating the values of the descriptors Dog : (root) and Noun : (suff), yielding dog s. We wish to provide an inductive definition of an evaluation relation (denoted >) between sequences of DATR descriptors in DESC* and sequences of atoms (i.e. values) in ATOM*.",
        "We write >a",
        "to mean that the sequences of descriptors 0 evaluates to the sequence of atoms a.",
        "With respect to the DATRL theory above we should expect that Dog : (cat) > noun and that Dog : (root) Noun : (suff) > dog s, amongst other things.",
        "The formal definition of > for DATRL is provided by just four rules of inference, as shown in figure 1.",
        "The rule for Values states simply that a sequence of atoms evaluates to itself.",
        "Another way of thinking about this is that atom sequences are basic, and thus cannot be evaluated further.",
        "The rule for Definitions was briefly discussed in the previous section.",
        "It permits inferences to be made about the values associated with node/path pairs, provided that the theory T contains the appropriate definitional sentences.",
        "The third rule deals with the evaluation of sequences of descriptors, by breaking them up into shorter sequences.",
        "Given that the values of the sequences 0 and '0 are known, then the value of 00 can be obtained simply by concatenation.",
        "Note that this rule introduces some non-determinism, since in general there is more than one way to break up a sequence of value descriptors.",
        "However, whichever way the sequence is broken up, the result (i.e. value obtained) should be the same.",
        "The following proof serves to illustrate the use of the rules Val, Def and Seq.",
        "It establishes formally that the node/path pair Dog : (plur) does indeed evaluate to dog s given the DATRL theory above.",
        "The final rule of figure 1 deals with DATR's evaluable path construct.",
        "Consider a value descriptor of the form A : (B : 0).",
        "To determine the value of the descriptor it is first necessary to establish what path is specified by the path descriptor (B : ()).",
        "This involves evaluating the descriptor B : 0 and then 'plugging in' the resultant value a to obtain the path (a).",
        "The required value is then obtained by evaluating A : (a).",
        "The rule for Evaluable Paths provides a general statement of this process: if a sequence of value descriptors 0 evaluates to a and N : (a) evaluates to [3, then N : (0) also evaluates to 0.",
        "The new theory is equivalent to that given previously in the sense that it associates exactly the same values with node/path pairs.",
        "However, in the DATRG theory global inheritance is used to capture the relevant generalizations about the singular and plural forms of nouns in English.",
        "Thus, the sentence Noun : (sing) == \"(root)\" states that the singular form of any noun is identical to its root (whatever that may be).",
        "The sentence Noun : (plur) == \"(root)\" (suff) states that the plural is obtained by attaching the (plural) suffix to the root.",
        "To understand the way in which global inheritance works, it is necessary to introduce DATR's",
        "notion of global context.",
        "Suppose that we wish to determine the value of Dog : (sing) in the example DATRG theory.",
        "Initially, the global context will be the pair (Dog, sing).",
        "From the theory, the value of Dog : (sing) is to be inherited (locally) from Noun : (sing), which in turn inherits its value (globally) from the quoted path \"(root)\".",
        "To evaluate the quoted path, the global context is examined to find the current global node (this is Dog) and the value of \"(root)\" is then obtained by evaluating Dog : (root), which yields clog as required.",
        "More generally, the global context; is used to fill in the missing node (path) when a quoted path (node) is encountered.",
        "In addition, as a side effect of evaluating a global inheritance descriptor the global context is updated.",
        "Thus, after encountering the quoted path \"(root)\" in the preceding example, the global context is changed from (Dog,sing) to (Dog,root).",
        "That is, the path component of the context is set; to the new global path root.",
        "Let 'T be a DATRG theory defined with respect to the set of nodes NODE and the set of atoms ATOM.",
        "The set CONT of (global) contexts of T is defined as the set of all pairs of the form (N, a), for N C NODE and a C ATOM*.",
        "Contexts are denoted by C. The evaluation relation is now taken to be a mapping from elements of CONT X DESC* to ATOM*.",
        "We write CI- --> to mean that cb evaluates to 13 in the global context C. To axioinatise the new evaluation relation, the DATRL rules are modified to incorporate the global context parameter.",
        "For example, the rule for !",
        ";valuable Paths now becomes: CI N (0) Sub] Two similar rules are required for sentences containing quoted descriptors of the forms \"N : (0)\" and \"(0)\" .",
        "Note that the context C plays no special role here, but is simply carried unchanged from premises to conclusion.",
        "The rules for Values, Definitions and Sequences are modified in an entirely similar manner.",
        "Finally, to capture the way in which values are derived for quoted descriptors three entirely new rules are required, one for each of the quoted forms.",
        "These rules are shown in figure 2.",
        "Consider for example the Quoted Path rule.",
        "The premise states that N : (a) evaluates to in the global context (N, a).",
        "Given this, the rule licences the conclusion that the quoted descriptor \"(a)\" also evaluates to in any context with the same node component N. In other words, to evaluate a quoted path \"(a)\" in a context (N, a'), just evaluate the local descriptor N : (a) in the",
        "updated global context (N, a).",
        "The rules dealing with global node/path pairs, and global nodes work in a similar way.",
        "The following proof illustrates the use of the Quoted Path rule (Quo2).",
        "It demonstrates that Dog : (sing) evaluates to dog, given the DATRG theory, and when the initial global context; is taken to be (Dog, sing)."
      ]
    },
    {
      "heading": "6 Path Extensions and Defaults",
      "text": [
        "In DATR, values may be associated with particular node/path pairs either explicitly, in terms of local or global inheritance, or implicitly 'by de-fault'.",
        "The basic idea underlying DATR's default mechanism is as follows: any definitional sentence is applicable not only to the path specified on its left-hand side, but also for any rightward extension of that path for which no more specific definitional sentence exists.",
        "Making use of defaults, the DATRu theory given above can be expressed more succinctly as shown next.",
        "Here, the relationship between the nodes Dog and Noun has effectively been collapsed into just a single statement Dog : Noun.",
        "This is possible because the sentence now corresponds to a whole class of implicit definitional sentences, each of which is obtained by extending the paths found on the left and right-hand sides in the same way.",
        "Accordingly, the value of Dog : (cat) is specified implicitly as the value of Noun : (cat), and similarly for Dog : (sing) and Dog : (suff).",
        "In contrast, the specification Dog : (root) == Noun :",
        "(root) does not follow 'by default' from the definition of Dog, even though it can be obtained by extending left and right paths in the required manner.",
        "The reason is that the theory already contains an explicit statement about the value of"
      ]
    },
    {
      "heading": "Dog : (root).",
      "text": [
        "The evaluation relation is now defined as a mapping from elements of CONT X DESC* X ATOM* (i.e. context/descriptor sequence/path extension triples) to ATOM*.",
        "We write:",
        "to mean that 0 evaluates to a in context C given path extension 7.",
        "When ry = e is the empty path extension, we will continue to write C > a.",
        "A complete set of inference rules for DATR is shown in figure 3.",
        "The rules for Values, Sequences and Evaluable Paths require only slight modification as the path extension is simply passed through from premises to consequent.",
        "The rules for Quoted Descriptors are also much as before.",
        "Here however, the path extension 7 appears as part of the global context in the premise of each rule.",
        "This means that when a global descriptor is encountered, any path extension present is treated `globally' rather than 'locally'.",
        "The main change in the Definitions rule lies in the conditions under which it is applicable.",
        "The amended rule just captures the 'most specific sentence wins' default mechanism.",
        "Finally, the new rule for Path Extensions serves as a way of making any path extension explicit.",
        "For example, if Dog : (cat) evaluates to noun, then Dog : 0 also evaluates to noun given the (explicit) path extension cat.",
        "An example proof showing that Dog : (plur) evaluates to dog s given the DATR theory presented above is shown in figure 4."
      ]
    },
    {
      "heading": "7 Conclusions",
      "text": [
        "The evaluation semantics presented in this paper constitutes the first fully worked out, formal system of inference for DATR theories.",
        "This fulfills one of the original objectives of the DATR pro-gramme, as set out in (Evans and Gazdar, 1989a; Evans and Gazdar, 1989b), to provide the language with an explicit theory of inference.",
        "The inference rules provides a clear picture of the way in which the different constructs of the language work, and should serve as a foundation for future investigations of the mathematical and computational properties of DATR.",
        "Although the rules abstract away from particular implementational details such as order of evaluation, they can be readily understood in computational terms and may prove useful as a guide to the construction of practical DATR interpreters."
      ]
    },
    {
      "heading": "Acknowledgements",
      "text": [
        "The author wishes to thank Roger Evans, Gerald Gazdar and David Weir for suggestions and comments relating to this work."
      ]
    }
  ]
}
