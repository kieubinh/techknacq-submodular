{
  "info": {
    "authors": [
      "Virach Sornlertlamvanich",
      "Hozumi Tanaka"
    ],
    "book": "International Conference on Computational Linguistics",
    "id": "acl-C96-2208",
    "title": "The Automatic Extraction of Open Compounds from Text Corpora",
    "url": "https://aclweb.org/anthology/C96-2208",
    "year": 1996
  },
  "references": [
    "acl-C94-1101",
    "acl-J90-1003",
    "acl-P90-1032"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper describes a new method for extracting open compounds (uninterrupted sequences of words) from text corpora of languages, such as Thai, Japanese and Korea that exhibit unex-plicit word segmentation.",
        "Without applying word segmentation techniques to the inputted plain text, we generate n-gram data from it.",
        "We then count the occurrence of each string and sort them in alphabetical order.",
        "It is significant that the frequency of occurrence of strings decreases when the window size of observation is extended.",
        "From the statistical point of view, a word is a string with a fixed pattern that is used repeatedly, meaning that it should occur with a higher frequency than a string that is not a word.",
        "We observe the variation of frequency of the sorted n-grain data and extract the strings that experience a significant change in frequency of occurrence when their length is extended.",
        "We apply this occurrence test to both the right and left hand sides of all strings to ensure the accurate detection of both boundaries of the string.",
        "The method returned satisfying results regardless of the size of the input file."
      ]
    },
    {
      "heading": "Introduction",
      "text": [
        "This paper discusses a method automatic extraction of candidates for open compound registration.",
        "An open compound refers to an uninterrupted sequence of words, generally functioning as a single constituent (Smadja and McKeown , 1990).",
        "We propose a new method of extraction for languages which have no specific use of punctuation to signify word boundaries.",
        "Our method is applied to n-gram text data using statistical observation of the change of frequency of occurrence when the window size of string observation is extended (character) cluster-wise.",
        "We generate both rightward and the leftward sorted n-gram data, then determine the left and right boundaries of a string using the methods of competitive selection and unified selection.",
        "In this paper, we examine the result of applying our method to Thai text corpora and also introduce conventional Thai spelling rules to avoid extracting invalid strings.",
        "Previous work (Nagao et al., 1994) has shown an effective way of constructing a sorted file 14 the efficient calculation of n-gram data.",
        "However a surprisely large number of invalid strings were also extracted.",
        "Subsequent work, (ikehara et al., 1995) has extended the sorted file to avoid repeating the counting of substrings contained in strings already counted.",
        "This meant the extraction of only the longest strings in the order of frequency of occurrence.",
        "The result of extraction was improved as a result, but the determination of longest strings is always made consecutively from left to right.",
        "If an erroneous string is extracted, its error directly propagates through the rest of input.",
        "It is possible that a string with an invalid starting pattern will he extracted because a string too long in character length has been extracted previously.",
        "In the following sections, we firstly describe the necessity for making this statistical observation for extracting open compounds from Thai text corpora.",
        "Then, the methodology of data preparation and open compound extraction is explained.",
        "Finally, we discuss the result of an experiment on both large and small test corpora to investigate the effectiveness of our method."
      ]
    },
    {
      "heading": "2 Problem Description",
      "text": [
        "It is a non-trivial task to identify a word in the text of a language which has no specific punctuation to mark word boundaries.",
        "Up to the present, lexicographers' efforts have been inhibited by insufficient corpora and limited computational facilities.",
        "Almost all lexicon knowledge bases have been created with reliance on human intuition.",
        "In recent years, a large amount of text corpora have become available, and it is now becoming possible to conduct more rigorous experiments on text corpora.",
        "We address the following problems in such",
        "a way that they are able to be solved by the way of statistical' Methods.",
        "1.",
        "There is no good evidence to support the itemization of a word in a dictionary.",
        "In traditional dictionary making, lexicographers",
        "have had to rely on citations collected by human readers from limited text corpora.",
        "More rare words rather than common words are found even in standard dictionaries (Church and Hanks , 1990).",
        "This is the problem in making a lexical entry list in dictionary construction.",
        "2.",
        "It is hard to decide where to segment a string into its component words.",
        "It is also hard to enumerate words from a text, though it is reported that the accuracy of recent word segmentation methods using a dictionary and heuristic methods is higher than 95% in case of Thai (Virach , 1993).",
        "The accuracy depends mostly on word entries in the dictionary, and the priority for selecting between candidate words when there is more than one solution for word segmentation.",
        "This is the problem in assigning priority information for selection."
      ]
    },
    {
      "heading": "3 Word Extraction from Text Corpora",
      "text": [
        "We used a window size of 4 to 32 for n-gram data accumulation.",
        "The value is arbitrary but this range has proven sufficient to avoid collecting illegible strings."
      ]
    },
    {
      "heading": "3.1 Algorithm",
      "text": [
        "Define that, Ial is the number of clusters' in the string 'a', n(a) is the number of occurrences of the string `a', and n(a+1) is the number of occurrences of the string 'a' with one additional cluster added.",
        "As the length of a string increases the number of occurrences of that string will decrease.",
        "Therefore,",
        "For the string 'a', n(a+1) decreases significantly from n(a) when 'a' is a frequently used string in contrast to `a+1'.",
        "From this, it can be seen that `a' is a rigid expression of an open compound when it satisfies the condition",
        "In such a case, 'a' is considered a rigid expression that is used frequently in the text, and `a+1' is just a string that occurs in limited contexts.",
        "I-The smallest standalone character unit as by the spelling rules.",
        "Since we count the occurrence of strings generated from an arbitrary position in the text, with only the above observation, only the right end position of a string can be assumed to determined a rigid expression.",
        "To identify the correct starting position of a string, we apply the same observation to the leftward extension of a string.",
        "Therefore, we have to include the direction to the string observation.",
        "Further define that, +a is the right observation of the string 'a', and a is the left observation of the string 'a'.",
        "Then, n(+a+1) is the number of occurrences of the string 'a' with one cluster added to its right, and n(-a+1) is the number of occurrences of the string 'a' with one cluster added to its left.",
        "Following the same reasoning as above, we will obtain,",
        "A string 'a' is a rigid expression if it satisfies the following conditions,"
      ]
    },
    {
      "heading": "3.2 Data preparation",
      "text": [
        "Following are the steps for creating n-gram text data according to the fundamental features of Thai text corpora.",
        "The results are shown in Table 1 and Table 2.",
        "In each table, \"n\" is the number of occurrences and \"d\" is the difference in occurrence with the next string.",
        "1.",
        "Tokenize the text at locations of spaces, tabs and newline characters.",
        "2.",
        "Produce n-gram strings following Thai spelling rules.",
        "Only strings that have possi",
        "ble boundaries are generated, and their occurrence counted.",
        "For example, shifting a string from `a+6' to `a+7' in the Table 1, the string at `a+7' is '1112:11113fi15ild3' and not 4111011330110d' despite the first character after `a+6' being 'a'.",
        "According to the Thai spelling rules, the character \" can never stand by itself.",
        "It needs both of an initial consonant and a final consonant.",
        "We call this three character unit a cluster.",
        "3.",
        "Create both rightward (Table 1) and leftward (Table 2) sorted strings.",
        "The frequency of each string is the same but the strings are lexically reversed and ordered based on this reversed state.",
        "4.",
        "Calculate the difference between the occurrence of adjoining strings in the sorted lists.",
        "Let d(a) be the difference value of the string `a', then",
        "The difference value (d) is generated separately for the rightward and leftward sorted string tables.",
        "The occurrences (n) in both Table 1 and Table 2 apparently support the conditions (3) and (4)."
      ]
    },
    {
      "heading": "3.3 Extraction 3.3.1 Competitive selection",
      "text": [
        "According to condition (5) the string 'a' (n1r.u) in Table 3 is considered an open compound because the difference of between n(a) and n(a+1) is as high as 450.",
        "However, is an illegible string and cannot be used on as individual basis in general text.",
        "Observing the same string 'a' in Table 1, the difference between n(a) and n(a+1) is only 68.",
        "It is not comparably high enough to be selected.",
        "Therefore, we have to determine the minimum value of the difference when there is more than one branch extended from a string."
      ]
    },
    {
      "heading": "3.3.2 Unified selection",
      "text": [
        "in Figure 1, we oh-tain the string '1111rAll13i1110A'19' by observing the significant change in d just before the next string ' 91 fl .",
        "The string could be wrongly selected if we do not observe its behaviour in the leftward sorted string table, to determine the correct left boundary.",
        "Thus, we observe the count of string '1111Z91111111lialg when it is extended leftward, as shown in Figure 2.",
        "By unifying the results of both methods of the observation, we finally obtain the word"
      ]
    },
    {
      "heading": "4 Experimental Results",
      "text": [
        "We have applied our method to an actual Thai text corpora without word segmentation preprocessing."
      ]
    },
    {
      "heading": "4.1 Natural language data",
      "text": [
        "We selected 'Thai Revenue Code (1995)', as large as 705,513 bytes, and 'Convention for Avoidance of Double Taxation between Thailand and Japan', which has a smaller size of 40,401 bytes.",
        "The purpose is to show that our method is effective regardless of the size of the data file."
      ]
    },
    {
      "heading": "4.2 Results of extraction",
      "text": [
        "100 90 80 70 60 HI 40 30 20 10 Theshold level of the value of Difference (D)",
        "size of text corpus file.",
        "To obtain more meaningful strings from a large file, we have to set a relatively high threshold of extraction.",
        "One of the advantages of our method is that there is an inherent trade-off between the quantity and the quality of the extracted strings.",
        "In the case of Figure 3, to limit the amount of illegible strings to not exceed 15% of the total extracted strings, we set the threshold to 30.",
        "As a result, we obtained 154 words, 114 fixed expressions and only 46 illegible strings.",
        "Furthermore, we found that of the 154 words appearing in the text, there were 84 words that were not found in a standard Thai dictionary."
      ]
    },
    {
      "heading": "5 Conclusion",
      "text": [
        "This paper has shown an algorithm for data preparation and open compound extraction.",
        "The corn-petitive selection and unified selection of rightward and leftward sorted strings play an important role in improving accuracy of the extraction.",
        "In the experiment, we applied Thai spelling rules to restrict the search path for string counts.",
        "Some types of spelling irregularities can be excluded by this process.",
        "By adjusting the value of threshold, we can extract suitable entries for open compound registration regardless of the size of the input file.",
        "Furthermore, our method has ensured the extraction of new words from the text file of the language that has no explicit word boundary, such as Thai."
      ]
    }
  ]
}
