{
  "info": {
    "authors": [
      "Lawrence Saul",
      "Fernando Pereira"
    ],
    "book": "Conference on Empirical Methods in Natural Language Processing",
    "id": "acl-W97-0309",
    "title": "Aggregate and Mixed-Order Markov Models for Statistical Language Processing",
    "url": "https://aclweb.org/anthology/W97-0309",
    "year": 1997
  },
  "references": [
    "acl-J92-4003",
    "acl-P93-1024",
    "acl-P94-1038",
    "acl-P96-1041"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "We consider the use of language models whose size and accuracy are intermediate between different order n-gram models.",
        "Two types of models are studied in particular.",
        "Aggregate Markov models are class-based bigram models in which the mapping from words to classes is probabilistic.",
        "Mixed-order Markov models combine bigram models whose predictions are conditioned on different words.",
        "Both types of models are trained by Expectation-Maximization (EM) algorithms for maximum likelihood estimation.",
        "We examine smoothing procedures in which these models are interposed between different order n-grams.",
        "This is found to significantly reduce the perplexity of unseen word combinations."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "The purpose of a statistical language model is to assign high probabilities to likely word sequences and low probabilities to unlikely ones.",
        "The challenge here arises from the combinatorially large number of possibilities, only a fraction of which can ever be observed.",
        "In general, language models must learn to recognize word sequences that are functionally similar but lexically distinct.",
        "The learning problem, one of generalizing from sparse data, is particularly acute for large-sized vocabularies (Jelinek, Mercer, and Roukos, 1992).",
        "The simplest models of natural language are n-gram Markov models.",
        "In these models, the probability of each word depends on the n – 1 words that precede it.",
        "The problems in estimating robust models of this form are well-documented.",
        "The number of parameters – or transition probabilities – scales as Vn, where V is the vocabulary size.",
        "For typical models (e.g., n = 3, V = 104), this number exceeds by many orders of magnitude the total number of words in any feasible training corpus.",
        "The transition probabilities in n-gram models are estimated from the counts of word combinations in the training corpus.",
        "Maximum likelihood (ML) estimation leads to zero-valued probabilities for unseen n-grams.",
        "In practice, one adjusts or smoothes (Chen and Goodman, 1996) the ML estimates so that the language model can generalize to new phrases.",
        "Smoothing can be done in many ways – for example, by introducing artificial counts, backing off to lower-order models (Katz, 1987), or combining models by interpolation (Jelinek and Mercer, 1980).",
        "Often a great deal of information is lost in the smoothing procedure.",
        "This is due to the great discrepancy between n-gram models of different order.",
        "The goal of this paper is to investigate models that are intermediate, in both size and accuracy, between different order n-gram models.",
        "We show that such models can \"intervene\" between different order n-grams in the smoothing procedure.",
        "Experimentally, we find that this significantly reduces the perplexity of unseen word combinations.",
        "The language models in this paper were evaluated on the ARPA North American Business News (NAB) corpus.",
        "All our experiments used a vocabulary of sixty-thousand words, including tokens for punctuation, sentence boundaries, and an unknown word token standing for all out-of-vocabulary words.",
        "The training data consisted of approximately 78 million words (three million sentences); the test data, 13 million words (one-half million sentences).",
        "All sentences were drawn randomly without replacement from the NAB corpus.",
        "All perplexity figures given in the paper are computed by combining sentence probabilities; the probability of sentence wowi • • wrz wn+ is given by",
        "Iwo • • wi-1), where wo and wn+i are the start and end-of-sentence markers, respectively.",
        "Though not reported below, we also confirmed that the results did not vary significantly for different randomly drawn test sets of the same size.",
        "The organization of this paper is as follows.",
        "In Section 2, we examine aggregate Markov models, or class-based bigram models (Brown et a/., 1992) in which the mapping from words to classes",
        "is probabilistic.",
        "We describe an iterative algorithm for discovering \"soft\" word classes, based on the Expectation-Maximization (EM) procedure for maximum likelihood estimation (Dempster, Laird, and Rubin, 1977).",
        "Several features make this algorithm attractive for large-vocabulary language mod-eling: it has no tuning parameters, converges monotonically in the log-likelihood, and handles probabilistic constraints in a natural way.",
        "The number of classes, C, can be small or large depending on the constraints of the modeler.",
        "Varying the number of classes leads to models that are intermediate between unigram (C = 1) and bigram (C = V) models.",
        "In Section 3, we examine another sort of \"intermediate\" model, one that arises from combinations of non-adjacent words.",
        "Language models using such combinations have been proposed by Huang et al.",
        "(1993), Ney, Essen, and Kneser (1994), and Rosen-feld (1996), among others.",
        "We consider specifically the skip-k transition matrices, M(wt_k, wt), whose predictions are conditioned on the kth previous word in the sentence.",
        "(The value of k determines how many words one \"skips\" back to make the prediction.)",
        "These predictions, conditioned on only a single previous word in the sentence, are inherently weaker than those conditioned on all k previous words.",
        "Nevertheless, by combining several predictions of this form (for different values of k), we can create a model that is intermediate in size and accuracy between bigram and trigram models.",
        "Mixed-order Markov models express the predictions P(wt Iwt – i, wt-2, • • • , wt_m) as a convex combination of skip-k transition matrices, M(wt – k, wt)• We derive an EM algorithm to learn the mixing coefficients, as well as the elements of the transition matrices.",
        "The number of transition probabilities in these models scales as mV2, as opposed to V'n+1.",
        "Mixed-order models are not as powerful as trigram models, but they can make much stronger predictions than bigram models.",
        "The reason is that quite often the immediately preceding word has less predictive value than earlier words in the same sentence.",
        "In Section 4, we use aggregate and mixed-order models to improve the probability estimates from n-grams.",
        "This is done by interposing these models between different order n-grams in the smoothing procedure.",
        "We compare our results to a baseline trigram model that backs off to bigram and unigram models.",
        "The use of \"intermediate\" models is found to reduce the perplexity of unseen word combinations by over 50%.",
        "In Section 5, we discuss some extensions to these models and some open problems for future research.",
        "We conclude that aggregate and mixed-order models provide a compelling alternative to language models based exclusively on n-grams."
      ]
    },
    {
      "heading": "2 Aggregate Markov models",
      "text": [
        "In this section we consider how to construct class-based bigram models (Brown et al., 1992).",
        "The problem is naturally formulated as one of hidden variable density estimation.",
        "Let P(clwi) denote the probability that word w1 is mapped into class c. Likewise, let P(w2lc) denote the probability that words in class c are followed by the word w2.",
        "The class-based bigram model predicts that word w1 is followed by word w2 with probability",
        "where C is the total number of classes.",
        "The hidden variable in this problem is the class label c, which is unknown for each word w1.",
        "Note that eq.",
        "(1) represents the V2 elements of the transition matrix P(w2lwi) in terms of the 2CV elements of P(w21c) and P(clwi).",
        "The Expectation-Maximization (EM) algorithm (Dempster, Laird, and Rubin, 1977) is an iterative procedure for estimating the parameters of hidden variable models.",
        "Each iteration consists of two steps: an E-step which computes statistics over the hidden variables, and an M-step which updates the parameters to reflect these statistics.",
        "The EM algorithm for aggregate Markov models is particularly simple.",
        "The E-step is to compute, for each bigram w1w2 in the training set, the posterior probability",
        "Eq.",
        "(2) gives the probability that word w1 was assigned to class c, based on the observation that it was followed by word w2.",
        "The M-step uses these posterior probabilities to re-estimate the model parameters.",
        "The updates for aggregate Markov models are:",
        "where N(wi , w2) denotes the number of counts of w1 w2 in the training set.",
        "These updates are guaranteed to increase the overall log-likelihood,",
        "at each iteration.",
        "In general, they converge to a local (though not global) maximum of the log-likelihood.",
        "The perplexity V* is related to the log-likelihood by V* = , where N is the total number of words processed.",
        "Though several algorithms (Brown et al., 1992; Pereira, Tishby, and Lee, 1993) have been proposed",
        "the training and test sets; C is the number of classes.",
        "The case C = 1 corresponds to a ML unigram model; C = V, to a ML bigram model.",
        "for performing the decomposition in eq.",
        "(1), it is worth noting that only the EM algorithm directly optimizes the log-likelihood in eq.",
        "(5).",
        "This has obvious advantages if the goal of finding word classes is to improve the perplexity of a language model.",
        "The EM algorithm also handles probabilistic constraints in a natural way, allowing words to belong to more than one class if this increases the overall likelihood.",
        "Our approach differs in important ways from the use of hidden Markov models (HMMs) for class-based language modeling (Jelinek et al., 1992).",
        "While HMMs also use hidden variables to represent word classes, the dynamics are fundamentally different.",
        "In HMMs, the hidden state at time t + 1 is predicted (via the state transition matrix) from the hidden state at time I.",
        "On the other hand, in aggregate Markov models, the hidden state at time t + 1 is predicted (via the matrix P(ct+i Iwt)) from the word at time t. The state-to-state versus word-to-state dynamics lead to different learning algorithms.",
        "For example, the Baum-Welch algorithm for HMMs requires forward and backward passes through each training sentence, while the EM algorithm we use does not.",
        "We trained aggregate Markov models with 2, 4, 8, 16, and 32 classes.",
        "Figure 1 shows typical plots of the training and test set perplexities versus the number of iterations of the EM algorithm.",
        "Clearly, the two curves are very close, and the monotonic decrease in test set perplexity strongly suggests little if any overfitting, at least when the number of classes is small compared to the number of words in the vocabulary.",
        "Table 1 shows the final perplexities (after thirty-two iterations of EM) for various aggregate Markov models.",
        "These results confirm that aggregate Markov models are intermediate in accuracy between unigram (C = 1) and bigram (C = V) models.",
        "The aggregate Markov models were also observed to discover meaningful word classes.",
        "Table 2 shows, for the aggregate model with C = 32 classes, the",
        "most probable class assignments of the three hundred most commonly occurring words.",
        "To be precise, for each class c*, we have listed the words for which c* = arg max, P(clw).",
        "Figure 2 shows a histogram of the winning assignment probabilities, max, P(clw), for these words.",
        "Note that the winning assignment probabilities are distributed broadly over the interval [b-, 1].",
        "This demonstrates the utility of allowing \"soft\" membership classes: for most words, the maximum likelihood estimates of P(clw) do not correspond to a winner-take-all assignment, and therefore any method that assigns each word to a single class (\"hard\" clustering), such as those used by Brown et a/.",
        "(1992) or Ney, Essen, and Kneser (1994), would lose information.",
        "We conclude this section with some final comments on overfitting.",
        "Our models were trained by thirty-two iterations of EM, allowing for nearly complete convergence in the log-likelihood.",
        "Moreover, we did not implement any flooring constraints' on the probabilities P(clwi) or P(w21c).",
        "Nevertheless, in all our experiments, the ML aggregate Markov 'It is worth noting, in this regard, that individual zeros in the matrices P(w2lc) and P(clwi) do not necessarily give rise to zeros in the matrix P(w2lwi), as computed from eq.",
        "(1).",
        "models assigned non-zero probability to all the bi-grams in the test set.",
        "This suggests that for large vocabularies there is a useful regime 1 < C < V in which aggregate models do not suffer much from overfitting.",
        "In this regime, aggregate models can be relied upon to compute the probabilities of unseen word combinations.",
        "We will return to this point in Section 4, when we consider how to smooth n-gram language models."
      ]
    },
    {
      "heading": "3 Mixed-order Markov models",
      "text": [
        "One of the drawbacks of n-gram models is that their size grows rapidly with their order.",
        "In this section, we consider how to make predictions based on a convex combination of'pairwise correlations.",
        "This leads to language models whose size grows linearly in the number of words used for each prediction.",
        "For each k > 0, the skip-k transition matrix M(wt_k, wt) predicts the current word from the kth previous word in the sentence.",
        "A mixed-order Markov model combines the information in these matrices for different values of k. Let m denote the number of bigram models being combined.",
        "The probability distribution for these models has the form:",
        "The terms in this equation have a simple interpretation.",
        "The V x V matrices Mk (W w') in eq.",
        "(6) define the skip-k stochastic dependency of w' at some position t on w at position t – k; the parameters Ak (w) are mixing coefficients that weight the predictions from these different dependencies.",
        "The value of Ak (w) can be interpreted as the probability that the model, upon seeing the word wt_k, looks no further back to make its prediction (Singer, 1996).",
        "Thus the model predicts from wt_i with probability Ai (wt--].",
        "), from wt_2 with probability [1 – Ai (wt-1)1A2(wt-2), and so on.",
        "Though included in eq.",
        "(6) for cosmetic reasons, the parameters Am (w) are actually fixed to unity so that the model never looks further than m words back.",
        "We can view eq.",
        "(6) as a hidden variable model.",
        "Imagine that we adopt the following strategy to predict the word at time t. Starting with the previous word, we toss a coin (with bias Ai (wt-i)) to see if this word has high predictive value.",
        "If the answer is yes, then we predict from the skip-1 transition matrix, Mi (wt_i, wt).",
        "Otherwise, we shift our attention one word to the left and repeat the process.",
        "If after 171 – 1 tosses we have not settled on a prediction, then as a last resort, we make a prediction using M,n(wt_in, wt).",
        "The hidden variables in this process are the outcomes of the coin tosses, which are unknown for each word wt-k• Viewing the model in this way, we can derive an EM algorithm to learn the mixing coefficients Ak (w) and the transition matrices2 Mk (W , w').",
        "The E-step of the algorithm is to compute, for each word in the training set, the posterior probability that it was generated by Mk (Wt- k WO.",
        "Denoting these posterior probabilities by 15 k (t), we have:",
        "where the denominator is given by eq.",
        "(6).",
        "The M-step of the algorithm is to update the parameters Ak (w) and Mk (w, w') to reflect the statistics in eq.",
        "(7).",
        "The updates for mixed-order Markov models are given by:",
        "'Note that the ML estimates of Mk(w, w') do not depend only on the raw counts of k-separated bigrams; they are also coupled to the values of the mixing coefficients, Ak(w).",
        "In particular, the EM algorithm adapts the matrix elements to the weighting of word combinations in eq.",
        "(6).",
        "The raw counts of k-separated bigrams, however, do give good initial estimates.",
        "notes the number of bigrams that were mixed into each prediction.",
        "The first column shows the perplexities on the training set.",
        "The second shows the fraction of words in the test set that were assigned zero probability.",
        "The case in = 1 corresponds to a ML bigram model.",
        "where the sums are over all the sentences in the training set, and (w , w') = 1 if w = w'.",
        "We trained mixed-order Markov models with 2 < in < 4.",
        "Figure 3 shows a typical plot of the training set perplexity as a function of the number of iterations of the EM algorithm.",
        "Table 3 shows the final perplexities on the training set (after four iterations of EM).",
        "Mixed-order models cannot be used directly on the test set because they predict zero probability for unseen word combinations.",
        "Unlike standard n-gram models, however, the number of unseen word combinations actually decreases with the order of the model.",
        "The reason for this is that mixed-order models assign finite probability to all n-grams wiwz wn for which any of the k-separated bigrams wkwn are observed in the training set.",
        "To illustrate this point, Table 3 shows the fraction of words in the test set that were assigned zero probability by the mixed-order model.",
        "As expected, this fraction decreases monotonically with the number of bigrams that are mixed into each prediction.",
        "Clearly, the success of mixed-order models depends on the ability to gauge the predictive value of each word, relative to earlier words in the same sentence.",
        "Let us see how this plays out for the",
        "0.1 < Al(w) <0.7 (-) and of (\") or (;) to (,) (&) by with S. from nine were for that eight low seven the (() (:) six are not against was four between a their two three its (unknown) B. on as is ( – ) five ()) into C. M. her him over than A.",
        "0.96< Ai (w) <1 officials prices which go way he last they earlier an Tuesday there foreign quarter she former federal don't days Friday next Wednesday (%) Thursday I Monday Mr. we half based part United it's years going nineteen thousand months (.)",
        "million very cents San ago U. percent billion (?)",
        "according (.)",
        "Table 4: Words with low and high values of Ai (w) in an m = 2 mixed order model.",
        "second-order (in = 2) model in Table 3.",
        "In this model, a small value for Ai (w) indicates that the word w typically carries less information that the word that precedes it.",
        "On the other hand, a large value for A1 (w) indicates that the word w is highly predictive.",
        "The ability to learn these relationships is confirmed by the results in Table 4.",
        "Of the three-hundred most common words, Table 4 shows the fifty with the lowest and highest values of Ai (w).",
        "Note how low values of A1 (w) are associated with prepositions, mid-sentence punctuation marks, and conjunctions, while high values are associated with \"contentful\" words and end-of-sentence markers.",
        "(A particularly interesting dichotomy arises for the two forms \"a\" and \"an\" of the indefinite article; the latter, because it always precedes a word that begins with a vowel, is inherently more predictive.)",
        "These results underscore the importance of allowing the coefficients Ai (w) to depend on the context w, as opposed to being context-independent (Ney, Essen, and Kneser, 1994)."
      ]
    },
    {
      "heading": "4 Smoothing",
      "text": [
        "Smoothing plays an essential role in language models where ML predictions are unreliable for rare events.",
        "In n-gram modeling, it is common to adopt a recursive strategy, smoothing bigrams by unigrams, trigrams by bigrams, and so on.",
        "Here we adopt a similar strategy, using the (in – 1)th mixed-order model to smooth the mth one.",
        "At the \"root\" of our smoothing procedure, however, lies not a unigram model, but an aggregate Markov model with C> 1 classes.",
        "As shown in Section 2, these models assign finite probability to all word combinations, even those that are not observed in the training set.",
        "Hence, they can legitimately replace unigrams as the base model in the smoothing procedure.",
        "Let us first examine the impact of replacing unigram models by aggregate models at the root of the",
        "smoothing procedure.",
        "To this end, a held-out interpolation algorithm (Jelinek and Mercer, 1980) was used to smooth an ML bigram model with the aggregate Markov models from Section 2.",
        "The smoothing parameters, one for each row of the bigram transition matrix, were estimated from a validation set the same size as the test set.",
        "Table 5 gives the final perplexities on the validation set, the test set, and the unseen bigrams in the test set.",
        "Note that smoothing with the C = 32 aggregate Markov model has nearly halved the perplexity of unseen bigrams, as compared to smoothing with the unigram model.",
        "Let us now examine the recursive use of mixed-order models to obtain smoothed probability estimates.",
        "Again, a held-out interpolation algorithm was used to smooth the mixed-order Markov models from Section 3.",
        "The mth mixed-order model had mV smoothing parameters 0k (w), corresponding to the V rows in each skip-k transition matrix.",
        "The mth mixed-order model was smoothed by discounting the weight of each skip-k prediction, then filling in the leftover probability mass by a lower-order model.",
        "In particular, the discounted weight of the skip-k prediction was given by",
        "leaving a total mass of",
        "for the (m – 1)th mixed-order model.",
        "(Note that the in = 1 mixed-order model corresponds to a ML bigram model.)",
        "Table 6 shows the perplexities of the smoothed mixed-order models on the validation and test sets.",
        "An aggregate Markov model with C = 32 classes was used as the base model in the smoothing procedure.",
        "The first row corresponds to a bigram model smoothed by a aggregate Markov model; the second row corresponds to an m = 2 mixed-order model, smoothed by a ML bigram model, smoothed by an aggregate Markov model; the third row corresponds",
        "to an 171 = 3 mixed-order model, smoothed by a in = 2 mixed-order model, smoothed by a ML bigram model, etc.",
        "A significant decrease in perplexity occurs in moving to the smoothed in = 2 mixed-order model.",
        "On the other hand, the difference in perplexity for higher values of m is not very dramatic.",
        "Our last experiment looked at the smoothing of a trigram model.",
        "Our baseline was a ML trigram model that backed off 3 to bigrams (and when necessary, unigrams) using the Katz backoff procedure (Katz, 1987).",
        "In this procedure, the predictions of the ML trigram model are discounted by an amount determined by the Good-Turing coefficients; the leftover probability mass is then filled in by the backoff model.",
        "We compared this to a trigram model that backed off to the m = 2 model in Table 6.",
        "This was handled by a slight variant of the Katz procedure (Dagan, Pereira, and Lee, 1994) in which the mixed-order model substituted for the backoff model.",
        "One advantage of this smoothing procedure is that it is straightforward to assess the performance of different backoff models.",
        "Because the backoff models are only consulted for unseen word combinations, the perplexity on these word combinations serves as a reasonable figure-of-merit.",
        "Table 7 shows those perplexities for the two smoothed trigram models (baseline and backoff).",
        "The mixed-order smoothing was found to reduce the perplexity of unseen word combinations by 51%.",
        "Also shown in the table are the perplexities on the entire test set.",
        "The overall perplexity decreased by 16%-a significant amount considering that only 24% of the predictions involved unseen word combinations and required backing off from the trigram model.",
        "The models in Table 7 were constructed from all n-grams (1 < n < 3) observed in the training data.",
        "Because many n-grams occur very infrequently, a natural question is whether truncated models, which omit low-frequency n-grams from the training set, can perform as well as untruncated ones.",
        "The advantage of truncated models is that they do not need to store nearly as many non-zero parameters as untruncated models.",
        "The results in Table 8 were ob",
        "less than t times.",
        "The table shows the baseline and mixed-order perplexities on the test set, the number of distinct trigrams with t or more counts, and the fraction of trigrams in the test set that required backing off.",
        "tamed by dropping trigrams that occurred less than t times in the training corpus.",
        "The t = 1 row corresponds to the models in Table 7.",
        "The most interesting observation from the table is that omitting very low-frequency trigrams does not decrease the quality of the mixed-order model, and may in fact slightly improve it.",
        "This contrasts with the standard backoff model, in which truncation causes significant increases in perplexity."
      ]
    },
    {
      "heading": "5 Discussion",
      "text": [
        "Our results demonstrate the utility of language models that are intermediate in size and accuracy between different order n-gram models.",
        "The two models considered in this paper were hidden variable Markov models trained by EM algorithms for maximum likelihood estimation.",
        "Combinations of intermediate-order models were also investigated by Rosenfeld (1996).",
        "His experiments used the 20,000- word vocabulary Wall Street Journal corpus, a predecessor of the NAB corpus.",
        "He trained a maximum-entropy model consisting of unigrams, bigrams, trigrams, skip-2 bigrams and trigrams; after selecting long-distance bigrams (word triggers) on 38 million words, the model was tested on a held-out 325 thousand word sample.",
        "Rosenfeld reported a test-set perplexity of 86, a 19% reduction from the 105 perplexity of a baseline trigram backoff model.",
        "In our experiments, the perplexity gain of the mixed-order model ranged from 16% to 22%, depending on the amount of truncation in the trigram model.",
        "While Rosenfeld's results and ours are not di",
        "rectly comparable, both demonstrate the utility of mixed-order models.",
        "It is worth discussing, however, the different approaches to combining information from non-adjacent words.",
        "Unlike the maximum entropy approach, which allows one to combine many non-independent features, ours calls for a careful Markovian decomposition.",
        "Rosenfeld argues at length against naive linear combinations in favor of maximum entropy methods.",
        "His arguments do not apply to our work for several reasons.",
        "First, we use a large number of context-dependent mixing parameters to optimize the overall likelihood of the combined model.",
        "Thus, the weighting in eq.",
        "(6) ensures that the skip-k predictions are only invoked when the context is appropriate.",
        "Second, we adjust the predictions of the skip-k transition matrices (by EM) so that they match the contexts in which they are invoked.",
        "Hence, the count-based models are interpolated in a way that is \"consistent\" with their eventual use.",
        "Training efficiency is another issue in evaluating language models.",
        "The maximum entropy method requires very long training times: e.g., 200 CPU-days in Rosenfeld's experiments.",
        "Our methods require significantly less; for example, we trained the smoothed m = 2 mixed-order model, from start to finish, in less than 12 CPU-hours (while using a larger training corpus).",
        "Even accounting for differences in processor speed, this amounts to a significant mismatch in overall training time.",
        "In conclusion, let us mention some open problems for further research.",
        "Aggregate Markov models can be viewed as approximating the full bigram transition matrix by a matrix of lower rank.",
        "(From eq.",
        "(1), it should be clear that the rank of the class-based transition matrix is bounded by the number of classes, C.) As such, there are interesting parallels between Expectation-Maximization (EM), which minimizes the approximation error as measured by the KL divergence, and singular value decomposition (SVD), which minimizes the approximation error as measured by the L2 norm (Press et al., 1988; Schiitze, 1992).",
        "Whereas SVD finds a global minimum in its error measure, however, EM only finds a local one.",
        "It would clearly be desirable to improve our understanding of this fundamental problem.",
        "In this paper we have focused on bigram models, but the ideas and algorithms generalize in a straightforward way to higher-order n-grams.",
        "Aggregate models based on higher-order n-grams (Brown et al., 1992) might be able to capture multi-word structures such as noun phrases.",
        "Likewise, trigram-based mixed-order models would be useful complements to 4-gram and 5-gram models, which are not uncommon in large-vocabulary language modeling.",
        "A final issue that needs to be addressed is scaling – that is, how the performance of these models depends on the vocabulary size and amount of training data.",
        "Generally, one expects that the sparser the data, the more helpful are models that can intervene between different order n-grams.",
        "Nevertheless, it would be interesting to see exactly how this relationship plays out for aggregate and mixed-order Markov models."
      ]
    },
    {
      "heading": "Acknowledgments",
      "text": [
        "We thank Michael Kearns and Yoram Singer for useful discussions, the anonymous reviewers for questions and suggestions that helped improve the paper, and Don Hindle for help with his language modeling tools, which we used to build the baseline models considered in the paper."
      ]
    }
  ]
}
