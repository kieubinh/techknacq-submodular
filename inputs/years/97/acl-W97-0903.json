{
  "info": {
    "authors": [
      "Karen Kukich",
      "Rebecca J. Passonneau",
      "Kathleen R. McKeown",
      "Dragomir R. Radev",
      "Vasileios Hatzivassiloglou",
      "Hongyan Jing"
    ],
    "book": "Workshop on from Research to Commercial Applications: Making NLP Work in Practice",
    "id": "acl-W97-0903",
    "title": "Software Re-Use and Evolution in Text Generation Applications",
    "url": "https://aclweb.org/anthology/W97-0903",
    "year": 1997
  },
  "references": [
    "acl-A94-1002",
    "acl-P93-1031",
    "acl-P95-1053",
    "acl-W94-0319"
  ],
  "sections": [
    {
      "heading": "Abstract 1 Introduction",
      "text": [
        "A practical goal for natural language text generation research is to converge on a separation of functions into modules that can be independently reused.",
        "This paper addresses issues related to software reuse and evolution in text generation systems.",
        "We describe the benefits we obtained by adapting and generalizing the generation modules and techniques we used for the successive development of three distinct text generation applications, PLAND0C, FLOW-Doc, and ZEDD oc.",
        "We suggest that design principles such as the use of a common, modular pipeline architecture, a consistent and general data representation format, and domain-independent algorithms for generation subtasks, together with component reuse and adaptation, facilitate both application development and research in the field.",
        "In our experience, these principles led to significant reductions in development time for successive applications, from three years to one year to six months, respectively.",
        "They also enabled us to isolate domain-specific knowledge and devise reusable, domain-independent algorithms for generation tasks such as ontological generalization and discourse structuring.",
        "The authors wish to acknowledge Jacques Robin, James Shaw, Jong Lim, and Larry Lefkowitz, who also played essential roles in the design and development of PLANDoc and FLowDoc.",
        "Recent technological advances, such as the widespread use of the World Wide Web and ready access to a multitude of extensive large-scale databases, have created novel opportunities for practical text generation applications.",
        "At the same time, to take full advantage of these opportunities, text generation systems must be easily adaptable to new domains, changing data formats, and distinct underlying ontologies.",
        "One crucial factor contributing to the generalization and subsequent practical and commercial viability of text generation systems is the adaptation and reuse of text generation modules and the development of reusable tools and techniques.",
        "In this paper, we focus on the lessons learned during the successive development of three text generation systems at Bellcore: PLANDoc (McKeown et al., 1994) summarizes execution traces of an expert system for telephone network capacity expansion analysis; FLowDoc (Passonneau et al., 1996) provides summaries of the most important events in flow diagrams constructed during business re-engineering; and ZEDDoc (Passonneau et al., 1997) produces summaries of activity for a user-specified set of advertisements within a user-specified time period from logs of WWW page hits.",
        "We built FLowDoc and ZEDDoc by adapting components of the P LAND oc system.",
        "The transfer of the original PLANDoc modules to new domains led to the replacement of some hard-coded rules and ontological knowledge with more general, domain-independent components.",
        "This encapsulation, or \"plug-and-play\" feature, enabled the transfer of many of FLowD oc's modules to ZEDDoc",
        "with minimal alterations.",
        "As a result, development time was significantly reduced – from three years for PLANDoc to one year for FLowDoc to six months for ZEDDoc.",
        "In the remainder of the paper, we provide background information on the three systems and then present and discuss four design principles that facilitate the development of text generation systems and their portability to new domains and applications:",
        "• A common, stable pipeline architecture that subdivides generation tasks (e.g., sentence planning or lexical choice) into separate modules.",
        "• A consistent and general data representation that allows easy interfacing between generation modules and between the text generator and external sources (e.g., relational databases).",
        "• Domain-independent methods for performing each generation subtask, that avoid hard-coded knowledge and rely instead on external, plug-and-play knowledge bases.",
        "• Component reuse and adaptability from each application to the next, with the aim of improving generality and achieving the data independence goal described previously."
      ]
    },
    {
      "heading": "2 Background",
      "text": [
        "PLANDoc (McKeown et al., 1994), the first major text generation system developed at Bellcore, is an enhancement to Bellcore's LEIS-PLANTm network planning product.",
        "Human engineers use LEIS-PLAN to do network capacity expansion studies, during which they explore alternative scenarios to arrive at an optimal configuration of equipment that meets demands for new services while minimizing costs.",
        "PLANDoc produces textual summaries of the scenarios explored by engineers.",
        "It transforms lengthy execution traces into human-readable summaries by making heavy use of conjunction, ellipsis, and paraphrasing.",
        "It also allows engineers to intersperse their own comments and justifications while using the tool.",
        "PLANDoc is currently in widespread use throughout the Southwestern Bell Corporation and has been requested by at least two other regional Bell companies.",
        "As an example, Figure 1 shows a fragment of the input to PLANDoc for a particular study, PLANDoc's representation of the same information in canonical form, and the resulting generated sentence.",
        "FLowDoc (Passonneau et al., 1996) takes as input flow diagrams representing the structure and operations of a business unit, either as it is currently",
        "(a) Fragment of LEIS-PLAN's execution trace for a particular plan.",
        "(b) PLANDoc's representation of (a) in canonical form.",
        "RUN-ID FIBERALL demanded that PLAN activate fiber for CSAs 1201, 1301, 1401 and 1501 in 1.995 Q2.",
        "(c) Sentence generated by PLANDoc from the data in (b) and three other similar messages.",
        "operating or after a proposed reorganization.",
        "Like PLANDoc, it interfaces with another tool developed at Bellcore, SHowBlz, which maintains the graphical representation and allows the exploration of possible alternatives by the re-engineering consultant.",
        "The diagrams resulting from re-engineering analysis are quite complex, with numerous nodes annotated with a large number of attributes.",
        "FLOW-Doc identifies the core components, participants, and actions of each flow diagram and produces a short textual summary.",
        "Figure 2 shows an example input flow diagram, the representation of a sample node in that diagram as presented to FLowDoc by SHowBiz, FLowDoc's description of the same in"
      ]
    },
    {
      "heading": "The most frequent tasks in this workflow are those of creating, reviewing and saving documents.",
      "text": [
        "(d) Generated sentence from the canonical message in (c) and from similar messages corresponding to other frequent tasks in the input diagram.",
        "(b) Part of the database output for the query in (a).",
        "(c) ZEDDoc's canonical representation of the information in (b).",
        "For the ads of interest, the most frequent Internet user domains were European Internet domains at 28 percent and U.S. network domains at 23 percent.",
        "(d) One of the sentences generated by ZEDD oc from the full information about network hosts, which is partially shown in (c).",
        "formation aggregated over several similar nodes in the diagram, and the sentence generated to express this information.",
        "ZED Doc summarizes the underlying ZED application's WWW activity.",
        "ZED manages a database of advertisement images to satisfy Web advertising contracts.'",
        "It selects ads to display in predefined slots in a manner that optimizes the satisfaction of the advertising contracts.",
        "Whenever ZED displays a Web page, it determines what ads to display and creates database entries for each displayed ad.",
        "ZEDDoc integrates a browser, the summary generator, and ZED's OracleTm database of WWW transactions in a client-server architecture.",
        "By accessing the transaction database, ZEDDoc can produce short summaries of ad activity within a user-specified time frame for a user-specified set of ads.",
        "Summaries contain, for example, demographic generalizations per-'Zed has evolved into a product, the Adapt/X AdvertiserTM.",
        "taming to potentially large numbers of hits.",
        "An example of ZEDDoc 's input, internal representation, and output is shown in Figure 3."
      ]
    },
    {
      "heading": "3 A Common Architecture",
      "text": [
        "While PLANDoc, FLowDoc, and ZEDDoC all share a common foundation, they embody distinctly different text generation applications.",
        "However, we aimed during the design of both FLowDoc and ZED Doe to utilize as much of PLANDoc's architecture as possible, often adapting and generalizing modules that were originally written with only the PLANDoc system in mind.",
        "All three systems employ a modular pipeline architecture.",
        "A pipeline architecture is one that separates the functions involved in text generation, such as content planning, discourse organization, lexical-ization, and syntactic realization, into distinct modules that operate in sequence.",
        "Modular pipeline architectures have a long history of use in text gen",
        "eration systems (Kukich, 1983a; McKeown, 1985; McDonald and Pustejovsky, 1986; Reiter, 1994), although recent work argues for the need for interaction between modules (Danlos, 1987; Rubinoff, 1992; McKeown et al., 1993).",
        "The most powerful argument for using pipeline architectures is the potential benefit of reusing individual modules for subsequent applications.",
        "However, with the exception of surface realization modules such as FUF/S URGE (Elhadad, 1992; Robin, 1994), actual code reuse has been minimal due to the lack of agreement about the order and grouping of subprocesses into modules.",
        "In PLAND0c, FLowD0c, and ZEDDoc, we utilize the following main modules, in the order listed below:",
        "• Message Generator: The message generator transcribes the raw data from LEIS-PLAN execution traces, SHOWBIZ, or ZED transaction logs into instances of message classes.",
        "We refer to simple collections of (possibly nested) attribute-value pairs pertaining to a single event as messages.",
        "Message classes are domain-specific (e.g., there are 30 of them in PLANDoc, 13 in FLowDoc, and 6 in ZEDDoc), but they all share the same representation as the basic content unit.",
        "In all three systems, generalization must occur at this level in order to create semantically concise messages from relatively large amounts of input data.",
        "• Ontologizer: In PLANDoc, a pipelined onto-logizer enriches messages with domain-specific knowledge that is not explicitly present in the input.",
        "In FLowDoc and ZEDDoc, semantic enrichment is done at various stages by consulting external ontologies.",
        "• Discourse Organizer: The discourse organizer performs all the remaining functions prior to lexicalization and surface generation2.",
        "Three sub-modules apply general discourse coherence constraints at the levels of discourse, sentence, and sentence constituent.",
        "The first module performs aggregation and text linearization operations using an ontology of rhetorical predicates derived from Hobbs (1985) and Polanyi (1988).",
        "Linear order and prominence of the subcon-stituents are then determined, followed by constraints on sub constituents that affect lexical choice (e.g., centering and informational constraints, as in (Passonneau, 1996)).",
        "21n previous work we referred to this module as the Sentence Planner (Passonneau et al., 1996).",
        "• Lexicalizer: The lexicalizer maps message attributes into thematic/case roles, and chooses appropriate content (open-class) words for the values of these attributes.",
        "• Surface Generator: This module maps thematic roles into syntactic roles and builds syntactic constituents, chooses function (closed-class) words, ensures grammatical agreement, and linearizes to produce the final surface sentence.",
        "Our message generator modules are largely domain-specific, and we have made major changes to them while porting them to new applications.",
        "Even so, their ontological generalization technique, which produces semantically concise descriptions from frequency data, is domain-independent.",
        "Our final surface generation module is completely domain-independent; it employs the FUF/SURGE (Elhadad, 1991; Robin, 1994) text generation tools, and was reused in all three systems with virtually no modifications.",
        "Modules near the middle of the pipeline provide the most interesting examples of code that can be reused if it is general enough and relies on plug-and-play knowledge bases rather than hard-coded data.",
        "We return to this issue of code reuse and of the evolution of our modules to accommodate it in Section 5."
      ]
    },
    {
      "heading": "4 A Common Representation",
      "text": [
        "All three systems employ a consistent, standardized attribute-value data format that persists from each module to the next.",
        "Examples of this internal data format were shown in Figures 1-3.",
        "This format is used for representing and processing conceptual-semantic, lexical-semantic, syntactic, and other linguistic information.",
        "Its persistent use facilitates intermodule communication and module independence, hence re-usability.",
        "Furthermore, it does not restrict the kinds of information that can be represented, and it is common to many non-NLP computational systems and languages (e.g., relational databases), thus making it easier for text generation systems to interface with existing applications.",
        "The input to each of our three systems came from very different sources, some closer than others to attribute-value message format.",
        "PLANDoc's input came from n-tuple records representing program execution traces, so it required a filter to transform it into messages.",
        "FLOW D o c's input came from ASCII representations of nodes and links in work flow diagrams which were already essentially in attribute-value format.",
        "ZEDDoc's input, representing Web I?",
        "activity data, had been stored in an OracleTm relational database by its application, so it too required little transformation."
      ]
    },
    {
      "heading": "5 Architectural Evolution",
      "text": [
        "As discussed earlier, a practical goal for text generation research is to converge on a separation of functions into modules that can be independently reused.",
        "Towards this goal, we have generalized and refined our architecture with each successive application.",
        "In fact, we significantly adapted our PLANDoc architecture for use in FLowDoc, but we were able to reuse the FLowDoc architecture and much of its code in ZEDDoc.",
        "Figure 4 contrasts the architecture of PLANDoc with those of FLowDoc and ZEDDoc.",
        "The obvious architectural change from PLANDoc to FLowDoc (and ZEDDoc) is the extraction of ontological knowledge from the processing pipeline.",
        "Ontological knowledge is necessarily domain-specific, so this modification allowed us to implement significantly more general Message Generation and Discourse Organization modules and a somewhat more general LexicalizatiOn module.",
        "These more general modules rely on external knowledge bases to supply the domain-specific information that was previously embedded in the code.",
        "Thus, we can replace the external knowledge base when moving to a new domain or application without having to modify the module itself.",
        "One of our future research goals is to further extract domain-specific lexical knowledge and further generalize the lexicalizer module Ping et al., 1997).",
        "What is not so obvious from Figure 4 are the consistencies and shifts in function among the modules.",
        "In fact, the functions of the Lexicalization arid Surface Generation modules remained constant across all three systems.",
        "But the functions of the first three modules shifted significantly from P LAN Doc to FLowDoc.",
        "In particular, the function of message aggregation lay exclusively in the Discourse Organization module in PLANDoc (Shaw, 1995), whereas aggregation functions are executed in both the Message Generation and Discourse Organization modules in FLowDoc.",
        "Because the development of domain-independent, plug-and-play ontology modules is one of the major features that affected these shifts in function, and because such modules greatly increase the portability of the system, we devote the next section to a more detailed description of the function of ontological generalization."
      ]
    },
    {
      "heading": "6 Ontological Generalization",
      "text": [
        "Ontological generalization refers to the problem of composing, with the help of an ontology, a concise description for a multi-set of concepts.",
        "For example, FLowDoc's output sentence shown in Figure 2 The most frequent tasks in this workflow are those of creating, reviewing and saving documents.",
        "concisely describes a multi-set of ten specific task nodes in the flow diagram by locating superclass concepts in the ontology that encompass the specific predicates and objects of the task nodes.",
        "Our aim is to compose a description that is concise without sacrificing much in accuracy.",
        "While P LAND oc made extensive use of conjunction, ellipsis, and paraphrasing to produce a concise summary, ontological relations were not heavily used.",
        "For FLowDoc we implemented a more general, domain-independent solution.",
        "We were able to reuse this module with minor modifications in ZED Doc, after replacing the ontological knowledge base.",
        "Our ontological generalization algorithm works as follows.",
        "Given a set Co = {01, 02, ,O} of objects of a given predicate-class and an associated list (ci , c2, , cN) of their occurrence counts, we compute an optimal set of concept generalizations {Gi, G2,.",
        ", G All such that each generalization replaces a subset of Co while maintaining a reasonable trade-off between the accuracy, specificity, and verbosity of the resulting description.",
        "We consider as candidate concept generalizations the actual members of Co and all the concepts in the domain ontology that subsume one or more of them.",
        "Each such candidate concept generalization",
        "is evaluated on its suitability to replace a given subset of Co using a weighted sum formula, trading-off along two antagonistic dimensions:",
        "• Coverage, measuring how many of the objects in the subset (proportionally weighted according to their occurrence counts ci.)",
        "are actually subsumed by the candidate generalization.",
        "• Specificity, defined as the average semantic distance between each element of the subset and the candidate generalization.",
        "The semantic distance currently used is simply the number of levels between each object and the generalization in the domain ontology.",
        "It could be easily changed to an information-based distance, e.g., along the lines of the metrics proposed in (Resnik, 1995), who measures semantic distance between two concepts as a function of the lexical probabilities of their common superclasses.",
        "To compute the optimal set of generalizations, the algorithm starts by generating all possible partitions of the given set of objects3, then locates the best single-term description for each subset in the partition by applying the procedure outlined above to each candidate generalization, and finally combines the single-term description scores in one number.",
        "The final score is adjusted by two additional penalties:",
        "• A verbosity penalty, penalizing descriptions with more than one generalization (exponentially more as the number of terms in the description increases).",
        "• A heterogeneity penalty, for descriptions that are locally optimal but significantly lower in the ontology (more specific) than the global specificity level.",
        "The global specificity level indicates the appropriate overall level of detail.",
        "It is ,computed by applying the above ontological generalization procedure to the collection of all the objects appearing in the input graph, across all actions.",
        "It implements the idea of \"basic level\" descriptions from (Rosch, 1978) for the application domain modeled by the work flow.",
        "For example, while processing a flow diagram which covers documents of many types, our algorithm will have a bias in favor of the generic term \"Document\" rather the too-specific term \"Draft document in SGML format\"; a trade-off between the",
        "heterogeneity penalty and other components of the description score occurs if the latter term looks locally optimal.",
        "The same generalization method for sets of (concept, occurrence count) pairs was applied in ZEDDoc, but instead of actions or graph components, the concepts were Internet addresses or ZED page types.",
        "ZED requires semantic types to be assigned to WWW pages and ads to help determine which ads from its database can be inserted in predefined ad slots.",
        "When a ZEDD oc user requests a summary of activity pertaining to a particular set of ads for a given time period, the raw data consists in part of frequency lists indicating how many users from a given Internet node saw the relevant ads and how many of the displayed pages corresponded to particular semantic types.",
        "One minor change for ZEDDoc was the replacement of predefined absolute frequency thresholds for determining the salience of items with relative ones.",
        "To summarize the Internet domain or page type data, ZEDD oc relies on plug-and-play ontologies.",
        "Specialization subtrees rooted at certain concepts, e.g., the Internet domain, can be replaced so long as at least one lexicalization is provided for every concept.",
        "Our ontology for the Internet domain combined world knowledge with the implicit hierarchical structure of domain names.",
        "For example, through hand analysis of WWW logs we created a geographical categorization of university nodes, on the assumption that such demographic information is important to advertisers."
      ]
    },
    {
      "heading": "7 Component Re-Use Revisited",
      "text": [
        "The major theme throughout this paper has been how we reused components from our original Plan-Doc system to implement the subsequent FLowDoc and ZEDDoc systems, significantly cutting development time.",
        "In this section, we summarize our experiences regarding code reuse.",
        "• The message generator offers limited possibilities for reuse because it directly interfaces to an application-specific external source.",
        "Limited code sharing wos possible however, because of our choice of a common representation format for all three systems.",
        "• As noted briefly in Section 3, the FLowDoc",
        "architecture had distinct modules pertaining to the three levels of discourse, sentence, and sentence constituent.",
        "Retaining this more general architecture in ZEDDoc proved useful with respect to one additional required functionality, namely the ability to produce plain text or",
        "HTML output.",
        "The three levels of discourse organization were exploited in ZEDDoc primarily to distinguish between HTML commands that pertain to the overall layout (e.g., paragraph divisions) versus those that pertain to sentence-internal features (e.g., fonts).",
        "• At the lexicalization level, we achieved only partial generalization of the lexicalizer's code.",
        "Given the state of the art in natural language generation, the lexicon remains necessarily domain-specific.",
        "However, we are exploring ways to remove domain-specific lexical knowledge from the system pipeline, as we did with domain-specific ontological and discourse knowledge.",
        "We are building a large-scale general lexicon for generation, which provides syntactic and partial semantic knowledge and can be used to select the generated sentence structure and possible paraphrases (Jing et al., 1997).",
        "By using this general lexicon together with a smaller domain-specific lexicon or with information extracted from a corpus from the application domain, we expect to significantly simplify the development of the lexicalization module, improving its reliability and portability.",
        "• At the final surface generation level, we took advantage of prior progress in component standardization and used FUF (Functional Unification Formalism) and its corresponding extensive English surface grammar SURGE.",
        "As a result, the surface generation module was ported unchanged to the other systems."
      ]
    },
    {
      "heading": "8 Conclusion",
      "text": [
        "By teasing apart some of PLANDoc's modules and partially reconfiguring others, we were able to port our text generation system to two completely new domains, those of flow chart and WWW activity summarization.",
        "In the process, We devised domain-independent message aggregation and discourse restructuring modules for FLowDoc that we reused intact for ZEDDoc.",
        "Indeed, we believe that our ontological generalization algorithm (i.e., message aggregation guided by quantitative formulas over plug-and-play ontologies) is generally domain-independent.",
        "We are exploring ways to introduce probability estimates in our weighting functions for message aggregation, linking the static ontology with corpus-observable variations in concept use and coverage.",
        "Reusable tools and techniques can provide leverage for building practical text generation applications.",
        "They can also facilitate research leading to increasingly more general and more useful tools.",
        "This has been our experience in implementing the three text generation systems covered in this paper which are all based on a common architecture, a common representation format, and a common, evolving foundation of text generation tools.",
        "At least three other factors that are critical to practical and commercial success should be mentioned though we cannot discuss them here.",
        "Two of them, i) extensive user-needs analysis and feedback and ii) target corpus compilation and analysis, are highly correlated with the relative success of each of our systems.",
        "These two factors are discussed in more detail in previous papers (Kukich et al., 1994; Kukich, 1983b).",
        "A third, undocumented factor, the rigorous pre-release testing of the system under conditions similar to its deployment environment, played a critical role in PLANDoc's success."
      ]
    },
    {
      "heading": "Acknowledgment",
      "text": [
        "Research on these projects at Columbia University was supported by grants from Bellcore."
      ]
    }
  ]
}
