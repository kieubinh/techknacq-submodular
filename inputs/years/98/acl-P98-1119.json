{
  "info": {
    "authors": [
      "Seungmi Lee",
      "Key-Sun Choi"
    ],
    "book": "COLING-ACL",
    "id": "acl-P98-1119",
    "title": "Automatic Acquisition of Language Model based on Head-Dependent Relation between Words",
    "url": "https://aclweb.org/anthology/P98-1119",
    "year": 1998
  },
  "references": [
    "acl-J92-1004",
    "acl-J92-4003",
    "acl-W97-0107"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Language modeling is to associate a sequence of words with a priori probability, which is a key part of many natural language applications such as speech recognition and statistical machine translation.",
        "In this paper, we present a language modeling based on a kind of simple dependency grammar.",
        "The grammar consists of head-dependent relations between words and can be learned automatically from a raw corpus using the reestimation algorithm which is also introduced in this paper.",
        "Our experiments show that the proposed model performs better than n-gram models at 11% to 11.5% reductions in test corpus entropy."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Language modeling is to associate a priori probability to a sentence.",
        "It is a key part of many natural language applications such as speech recognition and statistical machine translation.",
        "Previous works for language modeling can be broadly divided into two approaches; one is n-gram-based and the other is grammar-based.",
        "N-gram model estimates the probability of a sentence as the product of the probability of each word in the sentence.",
        "It assumes that probability of the nth word is dependent on the previous 71 - 1 words.",
        "The n-gram probabilities are estimated by simply counting the n-gram frequencies in a training corpus.",
        "In some cases, class (or part of speech) n-grams are used instead of word n-grams(Brown et al., 1992; Chang and Chen, 1996).",
        "N-gram model has been widely used so far, but it has always been clear that n-gram can not represent long distance dependencies.",
        "In contrast with n-gram model, grammar-based approach assigns syntactic structures to a sentence and coin putes the probability of the sentence using the probabilities of the structures.",
        "Long distance dependencies can be represented well by means of the structures.",
        "The approach usually makes use of phrase structure grammars such as probabilistic context-free grammar and recursive transition network(Lari and Young, 1991; Sneff, 1992; Chen, 1996).",
        "In the approach, however, a sentence which is not accepted by the grammar is assigned zero probability.",
        "Thus, the grammar must have broad-coverage so that any sentence will get non-zero probability.",
        "But acquisition of such a robust grammar has been known to be very difficult.",
        "Due to the difficulty, some works try to use an integrated model of grammar and n-gram compensating each other (McCandless, 1994; Meteer and Rohlicek, 1993).",
        "Given a robust grammar, grammar-based language modeling is expected to be more powerful and compact in model size than n-gram-based one.",
        "In this paper we present a language modeling based on a kind of simple dependency grammar.",
        "The grammar consists of head-dependent relations between words and can be learned automatically from a raw corpus using the reestimation algorithm which is also introduced in this paper.",
        "Based on the dependencies, a sentence is analyzed and assigned syntactic structures by which long distance dependences are represented.",
        "Because the model can be thought of as a linguistic bi-gram model, the smoothing functions of n-gram models can be applied to it.",
        "Thus, the model can be robust, adapt easily to new domains, and be effective.",
        "The paper is organized as follows.",
        "We introduce some definitions and notations for the dependency grammar and the reestimation algorithm in section 2, and explain the algorithm in section 3.",
        "In section 4, we show the experimental results for the suggested model compared to n-gram models.",
        "Finally, section 5 concludes this paper."
      ]
    },
    {
      "heading": "2 A Simple Dependency Grammar",
      "text": [
        "In this paper, we assume a kind of simple dependency grammar which describes a language",
        "by a set of head-dependent relations between words.",
        "A sentence is analyzed by establishing dependency links between individual words in the sentence.",
        "A dependency analysis, D, of a sentence can be represented with arrows pointing from head to dependent as depicted in Figure 1.",
        "For structural generality, we assume that there is always a marking tag, \"EOS\" (End of Sentence), at the end of a sentence and it has the head word of the sentence as its own depen-dent(\"gave\" in Figure 1).",
        "A D is a set of inter-word dependencies which satisfy the following conditions: (1) every word in the sentence has its head in the sentence except the head word of the sentence.",
        "(2) every word can have only one head.",
        "(3) there is neither crossing nor cycle of dependencies.",
        "The probabilistic model of the simple dependency grammar is given by"
      ]
    },
    {
      "heading": "Complete-Link and Complete-Sequence",
      "text": [
        "Here, we define complete-link and complete-sequence which represent partial Ds for sub-strings.",
        "They are used to construct overall Ds and used as the basic structures for the reestimation algorithm in section 3.",
        "A set of dependency relations on a word sequence, wio 1, is a complete-link when the following conditions are satisfied:",
        "• there is (wi wj) or (wi < – wj) exclusively.",
        "• Every inner word has a head in the word sequence.",
        "• Neither crossing nor cycle of dependency relations is allowed.",
        "We use wi for ith word in a sentence and wi,j for the word sequence from wi to wi(i < j).",
        "ive him a book her second child the bus",
        "A complete-link has direction.",
        "A complete-link on wio is said to be \"rightward\" if the outermost relation is (wi wj), and \"leftward\" if the relation is (wi < – w3).",
        "Unit complete-link is defined on a string of two adjacent words, wi,i+1.",
        "In Figure 2, (a) is a rightward complete-link, and both of (b) and (c) are leftward ones.",
        "bird in the cage the bus book",
        "A complete-sequence is a sequence of 0 or more adjacent complete-links that have the same direction.",
        "A unit complete-sequence is defined on a string of one word.",
        "It is 0 sequence of complete-links.",
        "The direction of a complete-sequence is determined by the direction of the component complete-links.",
        "In Figure 3, (a) is a rightward complete-sequence composed of two complete-links, and (b) is a leftward one.",
        "(c) is a complete-sequence composed of zero complete-links, and it can be both leftward and rightward.",
        "The word of \"complete\" means that the dependency relations on the inner words are completed and that consequently there is no need to process further on them.",
        "From now on, we use /„.",
        "(i, j)/Lt(i, j) for rightward/leftward complete-links and Sr(i, j)/Si(i, j) for rightward/leftward complete-sequences on wio.",
        "Any complete-link on wio can be viewed as the following combination.",
        "• Lr(i,i): {(wi wj), Sr(i, m), Si(m+1, j)} • Li(i, j): {(wi w;), Sr(i, in), Si(ni+1, :7)}",
        "for a m(i < in < j).",
        "Otherwise, the set of dependencies does not satisfy the conditions of no crossing, no cycle and no multiple heads and is not a complete-link any more.",
        "Similarly, any complete-sequence on wio can be viewed as the following combination.",
        "• Sr(i, j): {Sr(i, m), Lr(rn, j)} • Si(i, j): {Li(i, m), Si(rn, j)}",
        "for a m(i < m < j).",
        "In the case of complete-sequence, we can prevent multiple constructions of the same",
        "Figure 4 shows an abstract representation of a D of an n-word sentence.",
        "When wk(1 < k < n) is the head of the sentence, any D of the sentence can be represented by a SO, EOS) uniquely by the assumption that there is always the dependency relation, (wk wEos)•"
      ]
    },
    {
      "heading": "3 Reestimation Algorithm",
      "text": [
        "The reestimation algorithm is a variation of Inside-Outside algorithm(Jelinek et al., 1990) adapted to dependency grammar.",
        "In this section we first define the inside-outside probabilities of complete-links and complete-sequences, and then describe the reestimation algorithm based on them'.",
        "In the followings, indicates inside probability and a is for outside probability.",
        "The superscripts, 1 and s, are used for \"complete-link\" and \"complete-sequence\" respectively.",
        "The subscripts indicate direction: r for \"rightward\" and 1 for \"leftward\".",
        "The inside probabilities of complete-links (Lr (i , j), L1(i, j)) and complete-sequences",
        "/3t(1, EOS) is the sentence probability because every dependency analysis, V, is represented by a SO, EOS) and 07(1, EOS) is sum of the probability of every S1(1, EOS).",
        "The outside probabilities for complete",
        "Given a training corpus, the initial grammar is just a list of all pairs of unique words in the corpus.",
        "The initial pairs represent the tentative head-dependent relations of the words.",
        "And the initial probabilities of the pairs can be given randomly.",
        "The training starts with the initial grammar.",
        "The train corpus is analyzed with the grammar and the occurrence frequency of each dependency relation is calculated.",
        "Based on the frequencies, probabilities of dependency relations are recalculated by",
        "continues until the entropy of the training corpus becomes the minimum.",
        "The frequency of occurrence, C(wi – > IDA is calculated by",
        "where Occ(wi wj,D,w1.7,) is 1 if the dependency relation, (wi wi), is used in the V,",
        "= = =",
        "and 0 otherwise.",
        "Similarly, the occurrence frequency of the dependency relation, (wi wi),"
      ]
    },
    {
      "heading": "4 Preliminary experiments",
      "text": [
        "We have experimented with three language models, trigram model (TRI), bi-gram model (BI), and the proposed model (DEP) on a raw corpus extracted from KAIST corpus3.",
        "The raw corpus consists of 1,589 sentences with 13,139 words, describing animal life in nature.",
        "We randomly divided the corpus into two parts: a training set of 1,445 sentences and a test set of 144 sentences.",
        "And we made 15 partial training sets which include the first s sentences in the whole training set, for s ranging from 100 to 1,445 sentences.",
        "We trained the three language models for each partial training set, and tested the training and the test corpus entropies.",
        "TRI and BI was trained by counting the occurrence of trigrams and bi-grams respectively.",
        "DEP was trained by running the reestimation algorithm iteratively until it converges to an optimal dependency grammar.",
        "On the average, 26 iterations were done for the training sets.",
        "Smoothing is needed for language modeling due to the sparse data problem.",
        "It is to compensate for the overestimated and the underestimated probabilities.",
        "Smoothing method itself is an important factor.",
        "But our goal is not to find out a better smoothing method.",
        "So we fixed on an interpolation method and applied it for the three models.",
        "It can be represented as (McCandless, 1994)",
        "where A = C(wi, •.., wn.-1) + Ks •"
      ]
    },
    {
      "heading": "C(W1,7 •••7 11/7/1)",
      "text": [
        "The Ks is the global smoothing factor.",
        "The bigger the Ks, the larger the degree of smoothing.",
        "For the experiments we used 2 for K. We take the performance of a language model to be its cross-entropy on test corpus, -",
        "where the test corpus contains a total of words and is composed of S sentences.",
        "Figure 5 shows the training corpus entropies of the three models.",
        "It is not surprising that DEP performs better than BI.",
        "DEP can be thought of as a kind of linguistic bi-gram model in which long distance dependencies can be represented through the head-dependent relations between words.",
        "TRI shows better performance than both BI and DEP.",
        "We think it is because TRI overfits the training corpus, judging from the experimental results for the test corpus.",
        "For the test corpus, BI shows slightly better performance than TRI as depicted in Figure 6.",
        "Increase in the order of n-gram from two to three shows no gains in entropy reduction.",
        "DEP, however, shows still better performance than the n-gram models.",
        "It shows about 11.5% entropy reduction to BI and about 11% entropy reduction to TRI.",
        "Figure 7 shows the entropies for the mixed corpus of training and test sets.",
        "From the results, we can see that head-dependent relations between words are more useful information than the naive n-gram sequences, for language modeling.",
        "We can see also that the reestimation algorithm can find out properly the hidden head-dependent relations between words, from a raw corpus.",
        "Related to the size of model, however, DEP has much more parameters than TRI and BI as depicted in Figure 8.",
        "This can be a serious problem when we create a language model from a large body of text.",
        "In the experiments, however, DEP used the grammar acquired automatically as it is.",
        "In the grammar, many inter-word dependencies have probabilities near 0.",
        "If we exclude such dependencies as was experimented for n-grams by Seymore and Rosenfeld (1996), we may get much more compact DEP model with very slight increase in entropy."
      ]
    },
    {
      "heading": "5 Conclusions",
      "text": [
        "In this paper, we presented a language model based on a kind of simple dependency grammar.",
        "The grammar consists of head-dependent relations between words and can be learned automatically from a raw corpus by the reestimation algorithm which is also introduced in this paper.",
        "By the preliminary experiments, it was shown that the proposed language model performs better than n-gram models in test corpus entropy.",
        "This means that the reestitnation algorithm can find out the hidden information of head-dependent relation between words in a raw corpus, and the information is more useful than the naive word sequences of n-gram, for language modeling.",
        "We are planning to experiment the performance of the proposed language model for large corpus, for various domains, and with various smoothing methods.",
        "For the size of the model, we are planning to test the effects of excluding the dependency relations with near zero probabilities."
      ]
    }
  ]
}
