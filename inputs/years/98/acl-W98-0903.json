{
  "info": {
    "authors": [
      "Daniel M. Albro"
    ],
    "book": "SIGPHON Workshop on the Computation of Phonological Constraints",
    "id": "acl-W98-0903",
    "title": "Three Formal Extensions to Primitive Optimality Theory",
    "url": "https://aclweb.org/anthology/W98-0903",
    "year": 1998
  },
  "references": [
    "acl-P97-1040"
  ],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "This paper proposes an expansion of set of primitive constraints available within the Primitive Optimality Theory framework (Eisner, 1997a).",
        "This expansion consists of the addition of a new family of constraints – existential implica-tional constraints, which allow the specification of faithfulness constraints that can be satisfied at a distance – and the definition of two ways to combine simple constraints into com.",
        "plex constraints, that is, constraint disjunction (Crowhurst and Hewitt, 1995) and local constraint conjunction (Smolensky, 1995)."
      ]
    },
    {
      "heading": "1 Introduction",
      "text": [
        "Primitive Optimality Theory (oTP) (Eisner, 1997a), and extensions to it (e.g., Albro (1998)), can be useful as a formal system in which phonological analyses can be implemented and evaluated.",
        "However, for certain types of constraints, translation into the primitives of OTP (Eisner (1997b)) can only be accomplished by adding to the grammar a number of ad hoc phonological tiers.",
        "Because these tiers serve no phonological purpose other than to allow calculation of the constraints without adding new primitives, and because the addition of phonological tiers to an crrp grammar can have a dramatic negative impact on the efficiency of OTP implementationsl, it is preferable to avoid the addition of ad hoc tiers by adding new primitives to the system.",
        "This paper looks at three types of constraints employed throughout the Optimality Theoretic literature that cannot be translated in to the 'The computation time for an Optimality Theoretic derivation within the implementation of Albro (1998) increases exponentially with the number of tiers.",
        "The same is true for the implementation described in Eisner (1997a), although a proposal is given there for a method that might improve the situation.",
        "primitives of OTP without reference to ad hoc tiers, and proposes a formalization of these constraints that is compatible with the finite state model described in Eisner (1997a) and Albro (1998).",
        "These are constraints of existential implication (that is, of faithfulness without the requirement of alignment), constraint disjunction, and local constraint conjunction."
      ]
    },
    {
      "heading": "2 Existential Implication",
      "text": []
    },
    {
      "heading": "2.1 Motivation",
      "text": [
        "OTP as described in Eisner (1997a) provides some support for correspondence constraints (input-output only).",
        "These may be defined by means of implication constraints of the form P – > f or 12 P, which can be interpreted as requiring, in the first case, that each surface constituent representing property P be aligned with an underlying constituent representing that property, and in the second case that every underlying constituent representing property P be aligned with a surface constituent representing that property.",
        "Constraints of this type may be employed to require correspondence between the underlying representation and the surface representation where corresponding constituents must be aligned with one another.",
        "However, natural languages also seem to follow weaker constraints requiring only that for each underlying constituent there be a corresponding surface constituent, regardless of the position of that constituent relative to its position in the underlying representation.",
        "For example, in Sanskrit roots with at least two voiced stops, where the root ends in a voiced aspirated stop, the underlying aspiration of the root-final stop can be realized upon that stop in the surface representation only when the root is followed by a suffix beginning with a vocoid or a nasal (data from Whitney (1889)):",
        "In these forms it is clear that aspiration is being preserved, but that it is surfacing in a position that cannot overlap with the underlying form.",
        "Another example is the Bantu language Chizigula (Kenstowicz and Kisseberth, 1988), in which roots with underlying high vowels appear on the surface with a single high tone in the penultimate syllable of the word, where this syllable could belong to a suffix.",
        "Additionally, if a prefix with an underlying high tone is prefixed to a. root with no underlying high tone, the high tone of the prefix appears in the penultimate syllable of the resulting word.",
        "The existence of a high tone in the underlying form implies the existence of a high tone in the surface form, but the position where that high tone occurs in the underlying form has nothing to do with where the tone appears on the surface."
      ]
    },
    {
      "heading": "2.2 Formalization",
      "text": [
        "Existential implication constraints can be used to drive correspondence effects such as the above.",
        "These constraints take the form \"If X appears within domain D, then Y must appear within D as well.\" Using the terms of OTP, this family of constraints can be written as al A ... A a„, )31 V ... V /37,1-yi A ... A -yp.",
        "Here each ai or 3i is a constituent interior or edge, one of tier, ]tier, or [tier, where tier represents a constituent type, and each -yk must be a constituent interior (tier).",
        "The constraint represented by this notation outputs a violation for each domain 7, where 7 represents the intersection of the domains -yk, in which the time slice represented by the ai occurs, but no )3i occurs.",
        "Using the FST notation of Eisner (1997a), the implementation for this constraint would be the following EST: where X represents \"E*-((in or begin all 7k) - (in all 7k)),\" N represents \"((in all -yk) A -'(in all ai) A -,(in some ,3i)),\" B represents \"((in all 7k) A (in some )3j)),\" A represents \"((in all 7k) A (in all ai) A -(in some 3•)),\" [ represents \"((in or begin all -rk) - (in all 7k)),\" and ] represents \"((in or end all 7k) - (in all 70).\" That is, the machine moves from state S to state 1 if the domain 7 is entered.",
        "It moves from there back to state S if the end of the domain appears before a does, or if any 13 appears.",
        "If a appears, the machine moves from state 1 to state 2.",
        "From state 2, if 3 appears, the machine returns to the start state without outputting a violation, but if the end of the domain appears without any )3 having appeared, the machine outputs a violation."
      ]
    },
    {
      "heading": "3 Constraint Disjunction",
      "text": [
        "Cro‘vhurst and Hewitt (1995) cite a number of instances in which it appears that multiple simple constraints must be combined via disjunction (there called conjunction) into complex constraints.",
        "Here a simple constraint is a function that takes an input, surface pair as its input and returns true if a particular disallowed phonological structure or lack of correspondence is present in the pair, otherwise false.",
        "A constraint disjunction would thus be a function that returns the disjunction of the outputs of its component constraints.",
        "Thus a constraint defined by disjunction of component constraints outputs a violation whenever any one of its components does.",
        "Formalization of constraint disjunction requires reference only to intersection of weighted finite state machines.",
        "Specifically, if constraint C1 is defined as a weighted finite state machine T1 = (Ei, E2,Q1, .F1, 81, Ei), where El is",
        "the alphabet of labels, E2 is the alphabet of weights, drawn from the natural numbers, Qi is the set of states of the machine, FL C Qi is the final states, si is the start state, and E1 C Qi x EI X E2 X Qi is the set of edges, and constraint C2 is another weighted deterministic finite state machine T2 = (E1, E2, Q2t F2, 82, E2), then the disjunction of the two constraints may be defined as follows:",
        "A possible notation for the disjunction of two constraints C1 and C2 is C1 V C2, for example \"(vce vce) v (cont cont)\".",
        "A similar concept is that of mutually unranked primitive constraints.",
        "For any given input, a. complex constraint defined as a group of mutually unranked primitive constraints returns the sum of the violations that the primitive constraints returned.",
        "Although it has been argued that the formal power provided by allowing new constraints to be defined by grouping mutually unranked primitive constraints is too great, constraints so defined are fairly prevalent in the literature.",
        "For example, Steriade (1996) makes use of a constraint Paradigm Uniformity (PU) Stress which requires that all features within stressed syllables in one member of a paradigm must be preserved in the corresponding syllable of other members of that paradigm.",
        "PU Stress is equivalent to a set of mutually unranked paradigm uniformity constraints for all phonological features.",
        "The empirical prediction of PU Stress is that changes in any one feature are as important as changes in any other.",
        "If PU Stress were instead to be considered a block of ranked constraints for the individual features, the prediction would be that in the comparison between one candidate in which the top-ranked feature is identical between stressed syllables of the paradigm members, but all other features are different, and another candidate in which only a lower-ranked feature is different, the first candidate would prevail.",
        "The data seems to bear out the prediction of the definition using mutually unranked constraints.",
        "Another possible definition of PU Stress would be to make use of constraint disjunction.",
        "In this definition, all features would be equally important, but the number of non-identical features would not matter – candidates differing in three features would be equal to candidates differing in one feature.",
        "Once again, the definition using mutually unranked constraints seems better borne out by the data.",
        "Leaving aside constraints such as PU Stress, we will see that complex constraints defined as combinations of mutually unranked constraints are useful as inputs to local constraint conjunctions.",
        "The formal definition of a complex constraint in terms of mutually unranked subconstraints is identical to the definition of a constraint disjunction, except that the weight n of a new edge is defined as the sum of the weights of the input edges n1 and n2 rather than the disjunction:",
        "A possible notation for a complex constraint combining mutually unranked constraints C1 and C2 is Cl + C2, for example \"(vce vce) (cora cont)\""
      ]
    },
    {
      "heading": "4 Local Constraint Conjunction",
      "text": [
        "Smolensky (1995) and Kirchner (1996) propose a different method for combining constraints: local conjunction.",
        "A local conjunction of constraints is defined as a constraint that outputs a violation for each domain of a specified type in which all of the component constraints are violated.",
        "A constraint may be locally conjoined with itself, in which case the resulting conjunction outputs a violation whenever there are two violations of the component constraint within the specified domain.",
        "The conjunction of a constraint C1 with itself within a domain 7 may be notated \"A (CI) /7.\" The following algorithm computes the local conjunction of constraint C1, where CI is represented by the weighted finite state machine = (Et, E25 Qls S1.7 Fll El), with itself within",
        "1.",
        "Weaken C1 to a new constraint C1' such that for any utterance to which C1 assigns a non-zero number n of violations, C1' assigns n – 1 violations.",
        "This may be accomplished as follows: (a) Copy T1 as T2, renumbering the states of T2 so that there is no ambiguity.",
        "(b) Combine T1 and 1'2 into T = (Et,E27(21 uQ2,s1,P1UF27E = EiU E2).",
        "(c) For each edge (q„ a, w, q3) E E1, where w > 0, modify the edge to (qi, a, w – 1, s2), where s2 is the state corresponding to the start state of T2.",
        "T represents constraint C1'."
      ]
    },
    {
      "heading": "2. Define a finite state machine M as follows:",
      "text": [
        "where G[ represents the beginning of domain G[ represents anything other than G[, +G represents the interior of the domain, 1G represents a boundary between two 7 domains, and ]G represents the end of the 7 domain.",
        "3.",
        "The machine M will be used to limit the evaluation of constraint C1' to the domain 7.",
        "To accomplish this, we need to define the behavior at the edges of the 7 domain.",
        "Outside the 7 domain, violations of C1' will have no effect.",
        "At the left edge of the 7 domain, violations that do not involve the left edge of constituents will have no effect.",
        "At the right edge of the 7 domain, violations that do not involve the right edge of constituents will have no effect.",
        "The final weighted finite state machine L representing the local conjunction of CI with itself is produced by intersecting M with T, with the following modifications made to the intersection algorithm.",
        "Edges from T that are intersected with the edge G[, or edges from T that are intersected with the edge G[ and contain no reference to a left edge, or edges from T that are intersected with the edge ]G and contain no reference to a right edge, are assigned a weight of 0, and if their destination within T was state s2, their destination in T is treated as having been si.",
        "This has the effect of limiting the constraint violations of C1' to the domain 7.",
        "Edges from T that are intersected with edge IG keep their original weight, but are treated as though their destination within T was si.",
        "This has the effect of resetting C1' to zero violations at the beginning of a 7 domain immediately following another.",
        "The constraint A(C1)/7 produced by the above algorithm outputs a violation for every violation of C1 after the first within domain 7.",
        "Thus A (C1)/7 penalizes two or more violations of Ci within 7, but does not penalize single violations of C1.",
        "For example, the constraint 41.4 is represented as the following weighted finite state machine: ilAll The result of the above algorithm is the following machine: 1Wd/0 While this algorithm does not allow definition of local conjunction of different constraints, 24 it can be given nearly equivalent power by applying it to the output of complex constraints formed from mutually unranked subconstraints."
      ]
    }
  ]
}
