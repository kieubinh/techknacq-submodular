{
  "info": {
    "authors": [
      "Michel Fanton"
    ],
    "book": "Workshop on Computational Approaches to Semitic Languages",
    "id": "acl-W98-1004",
    "title": "Finite State Automata and Arabic Writing",
    "url": "https://aclweb.org/anthology/W98-1004",
    "year": 1998
  },
  "references": [],
  "sections": [
    {
      "heading": "Abstract",
      "text": [
        "Arabic writing has specific features, which imply computational overload for any arabicized software.",
        "Finite state automata are well known to give efficient solutions for translation problems which can be formalized as regular languages.",
        "These automata are as more easily built that their alphabet have been reduced through a careful linguistic analysis.",
        "This reduction makes it possible to write directly an automaton without going through the intermediate stage of contextual rules, which have to be translated into an automaton for the sake of efficiency.",
        "This paper presents two Moore automata, the first one, taken as an example, gives a solution to the choice of right shape for a letter to be printed or displayed (usually known as contextual analysis), the second one studies the more complex problem of determining the right carrying letter for hamza.",
        "Every arabicized software has to face these questions and finite state automata are certainly a good answer to them."
      ]
    },
    {
      "heading": "INTRODUCTION",
      "text": [
        "Arabic writing has specific features, which imply computational overload for any arabicized software.",
        "The first one, well known now for many years, is the fact that Arabic printing tries to imitate handwriting.",
        "Because of this, consonants and long vowels can have four or only two shapes depending of their ability to be bound to the following letter and of where they appear in the word.",
        "These shapes can be very different : for example letter 02 (h)",
        "Letters which cannot be bound to the next one have only two shapes, for example letters (d) and 3 (w and ii) isolated final isolated final During the seventies and the beginning of the eighties, hard controversies took place within the Arabs concerned with these questions, linguists and computer scientists.",
        "Finally in 1983 the ASMO (Arab Society for Normalization which unfortunately does not exist any more), influenced by Pr.",
        "Lakhdar-Ghazal from IERA (Rabat Morocco) chose to give a unique code to all shapes of one particular letter.",
        "This is certainly a, good choice from a linguistic point of view, but even so, compromises had to be made to take into account writing habits that conflicted with it.",
        "Letter hamza is the most noticeable example of such a compromise for reasons we shall explain later."
      ]
    },
    {
      "heading": "1 CONTEXTUAL ANALYSIS",
      "text": [
        "Whatever be the choice made for coding, from a typesetting or a computational point of view, there must be different codes for the different shapes of a letter.",
        "So every arabicized software has to use two systems for coding : the reduced code we have just introduced and the extended code in which the different shapes have different",
        "codes.",
        "Up to UNICODE, no normalization exists for the second one.",
        "So every arabicized software has to solve the problem of choosing the right shape of every printed or displayed letter."
      ]
    },
    {
      "heading": "1.1 Rules for letter shape determination",
      "text": [
        "This determination, frequently known as contextual analysis can be summarized into the following set of unformal rules:",
        "1.",
        "At the beginning of a word: • If the letter is a binding letter it takes the INITIAL shape.",
        "• If it is a non binding one it takes the ISOLATED shape.",
        "2.",
        "In the middle of a word (there is at least one letter following the current one): (a) If the letter is a binding letter then • If it follows a binding letter it takes the MEDIAL shape.",
        "• If it follows a non binding letter it takes the INITIAL shape.",
        "(b) If the letter is a non binding letter • If it follows a binding letter it takes the FINAL shape.",
        "• If it follows a non binding letter it takes the ISOLATED shape.",
        "3.",
        "At the end of a word (for both types of letters) • If it follows a binding letter it takes the FINAL shape.",
        "• If it follows a non binding letter it takes the ISOLATED shape."
      ]
    },
    {
      "heading": "1.2 Moore and Mealy automata",
      "text": [
        "Moore automata are state assigned output machines : the output function assigns output symbols to each state.",
        "They differ from Mealy automata, transition assigned finite state machines, where output symbols are associated with transitions between states.",
        "Mealy automata are sometimes called finite transducers.",
        "The two machine types have been demonstrated to produce the same input-output mappings3.",
        "asee (Aho and Ullman, 1972) and (Hoperoft and Ullman, 1979) for a full account of these matters Mealy automata are certainly a better choice when bidirectional applications are considered.",
        "As the question is to identify succession of symbols of a certain type we found it clearer to use a Moore automaton."
      ]
    },
    {
      "heading": "1.3 A Moore automaton for contextual analysis 1.3.1 Source language of the automaton",
      "text": [
        "It follows from the determination rules that we only need to know what particular letter we are dealing with only at the output stage.",
        "All we have to know is wether it is a binding or a non binding letter4.",
        "The alphabet of the automaton should be A = {#} U L where L is the set of arabic letters present in the reduced code and # the word boundaries.",
        "The set of letters will then be partitioned into three sets A 4 A' = {{#}, B} N being the set of non binding letters and B the set of binding letters.",
        "If we denote respectively n and b an arbitrary element of each of these sets, the source language of the automaton can be reduced to:",
        "where V denotes disjunction and * is the Kleene star",
        "or the as simple automaton initial states = {1} final states: = {5} transitions",
        "The alphabet for the target language L2, given what has been said before and using the same method of partioning and then reducing the alphabet could be at first sight:",
        "where I denotes a letter in isolated shape, i, m and f stand for initial, medial and final shape.",
        "But letters from N have only two shapes final and isolated.",
        "Moreover isolated and final shapes of letters from B can only appear at the end of a word, which is not the case for the corresponding shapes of letters from N. So, the following modified version of .92 will be prefered",
        "where In stands for isolated shape of a letter from N and so on.",
        "With these symbols the target language L2 can be described by the regular expression L2 = 1#(giM*fn,/)*(4 V lb V e)#} where € denotes as usual the empty string."
      ]
    },
    {
      "heading": "1.3.4 Translation automaton",
      "text": [
        "The translation process of a sequence of L1 into a legal sequence of L2 can be operated through the following automaton initial states = {I} final states = {8} transitions",
        "This automaton is clearly nondeterministic.",
        "This is due to the fact that a letter from B can appear in final or isolated shape when situated at the end of a word, in initial or medial shape when another letter follows it.",
        "Because of this nondeterministic feature, every transition should appear as a set.",
        "When this set is a singleton, the \"only\" state has been put without braces for an easier reading.",
        "It can be easily augmented to take account of occasional short vowels or shadda5 () that could occur : the transitions to add would force the automaton to loop onto the same state, whatever be it since vowels or shadda can only appear after a consonant and do not influence its shape."
      ]
    },
    {
      "heading": "1.3.5 PROLOG test program",
      "text": [
        "This program is a straightforward translation of the above described grammar and automaton.",
        "The predicate test allows to limit the generation of inputs to a given length.",
        "In the results we chose to limit the length of the input to 6 included word boundaries."
      ]
    },
    {
      "heading": "% generation of elements of Li",
      "text": [
        "m --> [#],a, .",
        "forme(Input,Output):initial_state(Is), path(Is,Fs,Input,Output), final_state(Fs)."
      ]
    },
    {
      "heading": "2 WRITING OF LETTER HAMZA",
      "text": [
        "The hamza can be written in five different manners (I, L!c, ,) depending mainly upon:",
        "• its position within the word • the preceding and the following vowel",
        "As the choice made for coding, was to adhere to a linguistic point of view, there should have been only one code for all these shapes and carrying consonants.",
        "But, as it has just been said, to determine the correct writing of hamza, one has to know the surrounding vowels, and it is of common knowledge that the Arabs do not usually write short vowels.",
        "These essential data being missing, no algorithm can take place to fulfil this task for a common usage such as display a text on a screen.",
        "Thus, the ASMO decided to have distinct codes for the different carriers of hamza, but not of course for their different shapes which can be determined as seen before.",
        "So why is this question of any interest ?",
        "If we consider NLP applications for Arabic, it could worth considering this problem at generation stage.",
        "For instance many vowel alternations occur in the conjugation of verbs, and when a hamza is present in the verb root, the hamza writing will vary accordingly.",
        "For example the verb ly qara'a - he (has) 0 read - changes to 33\",..-1.,1. yaqra'tina - they read (present) - and to quri'a - it (has) been read.",
        "And at the generation stage vowels are known even if we decided not to write them.",
        "The only alternative would be to put all the forms in a dictionary.",
        "At CERTAL, our philosophy is to use all the possible means to reduce the size of dictionaries.",
        "Hence this question appeared to us worth studying."
      ]
    },
    {
      "heading": "2.1 Rules of hamza writing",
      "text": [
        "• over an alif (I) if the next vowel is an \"a\" (-) as in 1)1 'aqra'u - I read ,et (present)- or an \"u\" (A) as in 'uktub - write !",
        "• under an alif (I) if the next vowel is an \"i\" ( ) as in i).>-LCI - information 2.",
        "When a hamza is within a word (i.e. preceded and followed by some consonant) it is written • over an alif (I) when – preceded by a sukiin (*) and followed by an \"a\" as in (j1...e.4 yas'alu - he asks - – preceded by an \"a\" and followed by 4",
        "a suktin as in L.51.2 ya'kulu - he eats – preceded by an\" a\" and followed by .",
        "; an \"a\" as in JL:., sa'ala - he (has)",
        "asked - • over a waw () when",
        " – preceded by a sukan and followed by an \"u\" as in yab'usu - he is strong, brave - – preceded by an \"a\" and followed by an \"u\" or an \"V as in ya'tibu - to return or to suffer - – preceded by a \"u\" and followed by a sukfin as in :;11.4 yu'thiru - he prefers - – preceded by an \"u\" and followed by an \"a\" as in ji yu'aththiru - he influences - – preceded by an \"u\" and followed by an \"u\" or an \"ii\" as in bu'iisun - distresses - – precede by an \"ii\" and followed by an \"u\"",
        "• over a ya (LP.․) when – preceded by an \"i\" whatever be the following vowel as in .2./t., bi'run - well - • bi'drun plural of the same word – followed by an \"i\" whatever be the preceding vowel as in 1 qcridun - leader, director, commandant,... • without any carrying letter when – preceded by an \"a\" and followed by an \"a\" as 3011 badiratun - beginning - – preceded by an \"ii\" and followed by an \"a\" as in yastriini - they (both) become bad - 3.",
        "When a hamza is at the end of a word it is written • without any carrier when – the preceding vowel is a sukan6 as in juz'un - a part - – the preceding vowel is an \"a\" as in ajzcrun, plural of the same word – the preceding vowel is an \"ü\" as in yasfi'u - it becomes bad - – the preceding vowel is an \"V' as in :00:4 yajru - he arrives - • over alif when the preceding vowel is an \"a\" and the following is one of \"a\", \"an\", \"u\", \"un\" as in 14 mubtada'un 141 I al-mubtada'u U mubtada'an „ al-mubtada 'a, different forms of the word meaning (grammatical) subject • under alif when the preceding vowel is an \"a\" and the following is \"i\" or \"in\"",
        "indirect case of the same word",
        "• over waw when the preceding vowel is \"u\" as in \":5).",
        ":Ii• jaru'a - he (has) risked 0.",
        "2 - yajru u - he riskes • over ya when the preceding vowel is \"i\" as in t1.5.11.g.",
        "khati'un tf515•La al-khati'a tc.5.1.",
        "?6,1 al-khatz t - wrong -",
        "A full account of the rules governing hamza writing have just been given.",
        "Usual presentations of hamza writing add to these rules, the rules of madda (T) writing.",
        "Madda is a contraction used for a hamza followed by an a or a hamza followed itself by a sukfin.",
        "This happens in some derivations or conjugations, thus we considerer it as pertaining to the whole set of transformations which occur in those cases.",
        "Besides, except for elementary schools and Coranic Recitation, noboby cares about ending short vowels.",
        "So, if the last vowel is not long it is treated as it were a suk5n, i.e. no vowel.",
        "This is always true of modern arabic and this reduces the number of rules involved at the end of a word."
      ]
    },
    {
      "heading": "2.2 A Moore automaton for hamza writing",
      "text": [
        "With the aforementioned restrictions these rules can also be implemented as a Moore automaton."
      ]
    },
    {
      "heading": "2.2.1 Source language of the automaton",
      "text": [
        "It follows from the determination rules that we have to know",
        "• if the consonant to be processed is a hamza (whatever its carrier has to be) or not, • wether a vowel is present before or after the hamza, • and if so, what are the surrounding vowels (short or long).",
        "Again the presence of a shadda is non pertinent and can be treated as mentioned for the contextual analysis.",
        "The alphabet for the source language L3 can be, using the same method as before",
        "where hz is a hamza with any carrier, 1 any consonant other than hamza and su stands for sukfm.",
        "The only other constraints for this language are :",
        "1. a sukUn cannot • neither follow the first consonant • nor follow a consonant already preceded by a sukfin 2. a hamza cannot follow another hamza7",
        "The regular expression corresponding to L3 would be too complicated to be really clarifying so we shall go directly to the definition of a generating automaton for this language.",
        "initial states = {1} final states: = {21} transitions Because of the narrowness of this style columns, the transition tables have been dev-ided in two parts.",
        "The last column of the second table gives the output corresponding to every state.",
        "2.2.2 Target language of the automaton The only differences with the source language lie in the distinct carriers for the letter hamza: A4 = {#, 1, hwc, hoa, hua , how, hoy, su, a, u, i,a, } where hwc stands for hamza without a carrier, hoa for hamza on alif, hua for hamza under alif, how for hamza on waw and hoy for hamza on ya."
      ]
    },
    {
      "heading": "2.2.4 Test program results",
      "text": [
        "A PROLOG program similar to the one used for contextual analysis gives the following results:"
      ]
    },
    {
      "heading": "CONCLUSION",
      "text": [
        "As a matter of conclusion we hope to have shown that, through a careful choice of a formal language, linguistic rules can be specified as tractable automata."
      ]
    }
  ]
}
